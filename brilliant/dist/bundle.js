/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/p5/lib/addons/p5.sound.js":
/*!************************************************!*\
  !*** ./node_modules/p5/lib/addons/p5.sound.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var p5 = __webpack_require__(/*! p5 */ "./node_modules/p5/lib/p5.min.js");
/** [p5.sound]  Version: 1.0.1 - 2021-05-25 */ 
 /**
 *  <p>p5.sound extends p5 with <a href="http://caniuse.com/audio-api"
 *  target="_blank">Web Audio</a> functionality including audio input,
 *  playback, analysis and synthesis.
 *  </p>
 *  <ul>
 *  <li><a href="#/p5.SoundFile"><b>p5.SoundFile</b></a>: Load and play sound files.</li>
 *  <li><a href="#/p5.Amplitude"><b>p5.Amplitude</b></a>: Get the current volume of a sound.</li>
 *  <li><a href="#/p5.AudioIn"><b>p5.AudioIn</b></a>: Get sound from an input source, typically
 *    a computer microphone.</li>
 *  <li><a href="#/p5.FFT"><b>p5.FFT</b></a>: Analyze the frequency of sound. Returns
 *    results from the frequency spectrum or time domain (waveform).</li>
 *  <li><a href="#/p5.Oscillator"><b>p5.Oscillator</b></a>: Generate Sine,
 *    Triangle, Square and Sawtooth waveforms. Base class of
 *    <li><a href="#/p5.Noise">p5.Noise</a> and <a href="#/p5.Pulse">p5.Pulse</a>.
 *    </li>
 *  <li>
 *    <a href="#/p5.MonoSynth">p5.MonoSynth</a> and <a href="#/p5.PolySynth">p5.PolySynth</a>: Play musical notes
 *  </li>
 *  <li><a href="#/p5.Envelope"><b>p5.Envelope</b></a>: An Envelope is a series
 *    of fades over time. Often used to control an object's
 *    output gain level as an "ADSR Envelope" (Attack, Decay,
 *    Sustain, Release). Can also modulate other parameters.</li>
 *  <li><a href="#/p5.Delay"><b>p5.Delay</b></a>: A delay effect with
 *    parameters for feedback, delayTime, and lowpass filter.</li>
 *  <li><a href="#/p5.Filter"><b>p5.Filter</b></a>: Filter the frequency range of a
 *    sound.
 *  </li>
 *  <li><a href="#/p5.Reverb"><b>p5.Reverb</b></a>: Add reverb to a sound by specifying
 *    duration and decay. </li>
 *  <b><li><a href="#/p5.Convolver">p5.Convolver</a>:</b> Extends
 *  <a href="#/p5.Reverb">p5.Reverb</a> to simulate the sound of real
 *    physical spaces through convolution.</li>
 *  <b><li><a href="#/p5.SoundRecorder">p5.SoundRecorder</a></b>: Record sound for playback
 *    / save the .wav file.
 *  <b><li><a href="#/p5.SoundLoop">p5.SoundLoop</a>, <a href="#/p5.Phrase">p5.Phrase</a></b>, <b><a href="#/p5.Part">p5.Part</a></b> and
 *  <b><a href="#/p5.Score">p5.Score</a></b>: Compose musical sequences.
 *  </li>
 *  <li><a href="#/p5/userStartAudio">userStartAudio</a>: Enable audio in a
 *  browser- and user-friendly way.</a>
 *  <p>p5.sound is on <a href="https://github.com/processing/p5.js-sound/">GitHub</a>.
 *  Download the latest version
 *  <a href="https://github.com/processing/p5.js-sound/blob/master/lib/p5.sound.js">here</a>.</p>
 *
 *  @module p5.sound
 *  @submodule p5.sound
 *  @for p5.sound
 *  @main
 */

/**
 *  p5.sound 
 *  https://p5js.org/reference/#/libraries/p5.sound
 *
 *  From the Processing Foundation and contributors
 *  https://github.com/processing/p5.js-sound/graphs/contributors
 *
 *  MIT License (MIT)
 *  https://github.com/processing/p5.js-sound/blob/master/LICENSE
 *
 *  Some of the many audio libraries & resources that inspire p5.sound:
 *   - TONE.js (c) Yotam Mann. Licensed under The MIT License (MIT). https://github.com/TONEnoTONE/Tone.js
 *   - buzz.js (c) Jay Salvat. Licensed under The MIT License (MIT). http://buzz.jaysalvat.com/
 *   - Boris Smus Web Audio API book, 2013. Licensed under the Apache License http://www.apache.org/licenses/LICENSE-2.0
 *   - wavesurfer.js https://github.com/katspaugh/wavesurfer.js
 *   - Web Audio Components by Jordan Santell https://github.com/web-audio-components
 *   - Wilm Thoben's Sound library for Processing https://github.com/processing/processing/tree/master/java/libraries/sound
 *
 *   Web Audio API: http://w3.org/TR/webaudio/
 */

 (function(modules) { 
 	var installedModules = {};
 	function __nested_webpack_require_3728__(moduleId) {
 		if(installedModules[moduleId]) {
 			return installedModules[moduleId].exports;
 		}
 		var module = installedModules[moduleId] = {
 			i: moduleId,
 			l: false,
 			exports: {}
 		};
 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_3728__);
 		module.l = true;
 		return module.exports;
 	}
 	__nested_webpack_require_3728__.m = modules;
 	__nested_webpack_require_3728__.c = installedModules;
 	__nested_webpack_require_3728__.d = function(exports, name, getter) {
 		if(!__nested_webpack_require_3728__.o(exports, name)) {
 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
 		}
 	};
 	__nested_webpack_require_3728__.r = function(exports) {
 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
 		}
 		Object.defineProperty(exports, '__esModule', { value: true });
 	};
 	__nested_webpack_require_3728__.t = function(value, mode) {
 		if(mode & 1) value = __nested_webpack_require_3728__(value);
 		if(mode & 8) return value;
 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
 		var ns = Object.create(null);
 		__nested_webpack_require_3728__.r(ns);
 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
 		if(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_3728__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
 		return ns;
 	};
 	__nested_webpack_require_3728__.n = function(module) {
 		var getter = module && module.__esModule ?
 			function getDefault() { return module['default']; } :
 			function getModuleExports() { return module; };
 		__nested_webpack_require_3728__.d(getter, 'a', getter);
 		return getter;
 	};
 	__nested_webpack_require_3728__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
 	__nested_webpack_require_3728__.p = "";
 	return __nested_webpack_require_3728__(__nested_webpack_require_3728__.s = 40);
 })
 ([
 (function(module, exports, __nested_webpack_require_5677__) {

var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){"use strict";function a(t,e){this.isUndef(t)||1===t?this.input=this.context.createGain():1<t&&(this.input=new Array(t)),this.isUndef(e)||1===e?this.output=this.context.createGain():1<e&&(this.output=new Array(t))}var e;return a.prototype.set=function(t,e,n){if(this.isObject(t))n=e;else if(this.isString(t)){var o={};o[t]=e,t=o}t:for(var i in t){e=t[i];var r=this;if(-1!==i.indexOf(".")){for(var s=i.split("."),u=0;u<s.length-1;u++)if((r=r[s[u]])instanceof a){s.splice(0,u+1);var p=s.join(".");r.set(p,e);continue t}i=s[s.length-1]}var c=r[i];this.isUndef(c)||(a.Signal&&c instanceof a.Signal||a.Param&&c instanceof a.Param?c.value!==e&&(this.isUndef(n)?c.value=e:c.rampTo(e,n)):c instanceof AudioParam?c.value!==e&&(c.value=e):c instanceof a?c.set(e):c!==e&&(r[i]=e))}return this},a.prototype.get=function(t){this.isUndef(t)?t=this._collectDefaults(this.constructor):this.isString(t)&&(t=[t]);for(var e={},n=0;n<t.length;n++){var o=t[n],i=this,r=e;if(-1!==o.indexOf(".")){for(var s=o.split("."),u=0;u<s.length-1;u++){var p=s[u];r[p]=r[p]||{},r=r[p],i=i[p]}o=s[s.length-1]}var c=i[o];this.isObject(t[o])?r[o]=c.get():a.Signal&&c instanceof a.Signal?r[o]=c.value:a.Param&&c instanceof a.Param?r[o]=c.value:c instanceof AudioParam?r[o]=c.value:c instanceof a?r[o]=c.get():this.isFunction(c)||this.isUndef(c)||(r[o]=c)}return e},a.prototype._collectDefaults=function(t){var e=[];if(this.isUndef(t.defaults)||(e=Object.keys(t.defaults)),!this.isUndef(t._super))for(var n=this._collectDefaults(t._super),o=0;o<n.length;o++)-1===e.indexOf(n[o])&&e.push(n[o]);return e},a.prototype.toString=function(){for(var t in a){var e=t[0].match(/^[A-Z]$/),n=a[t]===this.constructor;if(this.isFunction(a[t])&&e&&n)return t}return"Tone"},Object.defineProperty(a.prototype,"numberOfInputs",{get:function(){return this.input?this.isArray(this.input)?this.input.length:1:0}}),Object.defineProperty(a.prototype,"numberOfOutputs",{get:function(){return this.output?this.isArray(this.output)?this.output.length:1:0}}),a.prototype.dispose=function(){return this.isUndef(this.input)||(this.input instanceof AudioNode&&this.input.disconnect(),this.input=null),this.isUndef(this.output)||(this.output instanceof AudioNode&&this.output.disconnect(),this.output=null),this},a.prototype.connect=function(t,e,n){return Array.isArray(this.output)?(e=this.defaultArg(e,0),this.output[e].connect(t,0,n)):this.output.connect(t,e,n),this},a.prototype.disconnect=function(t,e,n){this.isArray(this.output)?this.isNumber(t)?this.output[t].disconnect():(e=this.defaultArg(e,0),this.output[e].disconnect(t,0,n)):this.output.disconnect.apply(this.output,arguments)},a.prototype.connectSeries=function(){if(1<arguments.length)for(var t=arguments[0],e=1;e<arguments.length;e++){var n=arguments[e];t.connect(n),t=n}return this},a.prototype.chain=function(){if(0<arguments.length)for(var t=this,e=0;e<arguments.length;e++){var n=arguments[e];t.connect(n),t=n}return this},a.prototype.fan=function(){if(0<arguments.length)for(var t=0;t<arguments.length;t++)this.connect(arguments[t]);return this},AudioNode.prototype.chain=a.prototype.chain,AudioNode.prototype.fan=a.prototype.fan,a.prototype.defaultArg=function(t,e){if(this.isObject(t)&&this.isObject(e)){var n={};for(var o in t)n[o]=this.defaultArg(e[o],t[o]);for(var i in e)n[i]=this.defaultArg(t[i],e[i]);return n}return this.isUndef(t)?e:t},a.prototype.optionsObject=function(t,e,n){var o={};if(1===t.length&&this.isObject(t[0]))o=t[0];else for(var i=0;i<e.length;i++)o[e[i]]=t[i];return this.isUndef(n)?o:this.defaultArg(o,n)},a.prototype.isUndef=function(t){return void 0===t},a.prototype.isFunction=function(t){return"function"==typeof t},a.prototype.isNumber=function(t){return"number"==typeof t},a.prototype.isObject=function(t){return"[object Object]"===Object.prototype.toString.call(t)&&t.constructor===Object},a.prototype.isBoolean=function(t){return"boolean"==typeof t},a.prototype.isArray=function(t){return Array.isArray(t)},a.prototype.isString=function(t){return"string"==typeof t},a.noOp=function(){},a.prototype._readOnly=function(t){if(Array.isArray(t))for(var e=0;e<t.length;e++)this._readOnly(t[e]);else Object.defineProperty(this,t,{writable:!1,enumerable:!0})},a.prototype._writable=function(t){if(Array.isArray(t))for(var e=0;e<t.length;e++)this._writable(t[e]);else Object.defineProperty(this,t,{writable:!0})},a.State={Started:"started",Stopped:"stopped",Paused:"paused"},a.prototype.equalPowerScale=function(t){var e=.5*Math.PI;return Math.sin(t*e)},a.prototype.dbToGain=function(t){return Math.pow(2,t/6)},a.prototype.gainToDb=function(t){return Math.log(t)/Math.LN10*20},a.prototype.intervalToFrequencyRatio=function(t){return Math.pow(2,t/12)},a.prototype.now=function(){return a.context.now()},a.now=function(){return a.context.now()},a.extend=function(t,e){function n(){}a.prototype.isUndef(e)&&(e=a),n.prototype=e.prototype,t.prototype=new n,(t.prototype.constructor=t)._super=e},Object.defineProperty(a,"context",{get:function(){return e},set:function(t){e=a.Context&&t instanceof a.Context?t:new a.Context(t),a.Context&&a.Context.emit("init",e)}}),Object.defineProperty(a.prototype,"context",{get:function(){return a.context}}),a.setContext=function(t){a.context=t},Object.defineProperty(a.prototype,"blockTime",{get:function(){return 128/this.context.sampleRate}}),Object.defineProperty(a.prototype,"sampleTime",{get:function(){return 1/this.context.sampleRate}}),Object.defineProperty(a,"supported",{get:function(){var t=window.hasOwnProperty("AudioContext")||window.hasOwnProperty("webkitAudioContext"),e=window.hasOwnProperty("Promise"),n=window.hasOwnProperty("Worker");return t&&e&&n}}),a.version="r10",window.TONE_SILENCE_VERSION_LOGGING||console.log("%c * Tone.js "+a.version+" * ","background: #000; color: #fff"),a}).call(exports, __nested_webpack_require_5677__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_11737__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_11737__(0),__nested_webpack_require_11737__(2),__nested_webpack_require_11737__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return i.Multiply=function(t){this.createInsOuts(2,0),this._mult=this.input[0]=this.output=new i.Gain,this._param=this.input[1]=this.output.gain,this._param.value=this.defaultArg(t,0)},i.extend(i.Multiply,i.Signal),i.Multiply.prototype.dispose=function(){return i.prototype.dispose.call(this),this._mult.dispose(),this._mult=null,this._param=null,this},i.Multiply}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_12537__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_12537__(0),__nested_webpack_require_12537__(6),__nested_webpack_require_12537__(9),__nested_webpack_require_12537__(18),__nested_webpack_require_12537__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(n){"use strict";return n.Signal=function(){var t=this.optionsObject(arguments,["value","units"],n.Signal.defaults);this.output=this._gain=this.context.createGain(),t.param=this._gain.gain,n.Param.call(this,t),this.input=this._param=this._gain.gain,this.context.getConstant(1).chain(this._gain)},n.extend(n.Signal,n.Param),n.Signal.defaults={value:0,units:n.Type.Default,convert:!0},n.Signal.prototype.connect=n.SignalBase.prototype.connect,n.Signal.prototype.dispose=function(){return n.Param.prototype.dispose.call(this),this._param=null,this._gain.disconnect(),this._gain=null,this},n.Signal}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, __webpack_exports__, __nested_webpack_require_13610__) {

"use strict";
(function(global) { __nested_webpack_require_13610__.d(__webpack_exports__, "b", function() { return getAudioContext; });
 __nested_webpack_require_13610__.d(__webpack_exports__, "c", function() { return userStartAudio; });
 var startaudiocontext__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_13610__(22);
 var startaudiocontext__WEBPACK_IMPORTED_MODULE_0___default = __nested_webpack_require_13610__.n(startaudiocontext__WEBPACK_IMPORTED_MODULE_0__);
 var Tone_core_Tone__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_13610__(0);
 var Tone_core_Tone__WEBPACK_IMPORTED_MODULE_1___default = __nested_webpack_require_13610__.n(Tone_core_Tone__WEBPACK_IMPORTED_MODULE_1__);
 var Tone_core_Context__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_13610__(12);
 var Tone_core_Context__WEBPACK_IMPORTED_MODULE_2___default = __nested_webpack_require_13610__.n(Tone_core_Context__WEBPACK_IMPORTED_MODULE_2__);
global.TONE_SILENCE_VERSION_LOGGING = true;



var audiocontext = new window.AudioContext(); 

Tone_core_Tone__WEBPACK_IMPORTED_MODULE_1___default.a.setContext(audiocontext);
/**
 * <p>Returns the Audio Context for this sketch. Useful for users
 * who would like to dig deeper into the <a target='_blank' href=
 * 'http://webaudio.github.io/web-audio-api/'>Web Audio API
 * </a>.</p>
 *
 * <p>Some browsers require users to startAudioContext
 * with a user gesture, such as touchStarted in the example below.</p>
 *
 * @for p5
 * @method getAudioContext
 * @return {Object}    AudioContext for this sketch
 * @example
 * <div><code>
 *  function draw() {
 *    background(255);
 *    textAlign(CENTER);
 *
 *    if (getAudioContext().state !== 'running') {
 *      text('click to start audio', width/2, height/2);
 *    } else {
 *      text('audio is enabled', width/2, height/2);
 *    }
 *  }
 *
 *  function touchStarted() {
 *    if (getAudioContext().state !== 'running') {
 *      getAudioContext().resume();
 *    }
 *    var synth = new p5.MonoSynth();
 *    synth.play('A4', 0.5, 0, 0.2);
 *  }
 *
 * </div></code>
 */

function getAudioContext() {
  return audiocontext;
}
/**
 *  <p>It is not only a good practice to give users control over starting
 *  audio. This policy is enforced by many web browsers, including iOS and
 *  <a href="https://goo.gl/7K7WLu" title="Google Chrome's autoplay
 *  policy">Google Chrome</a>, which create the Web Audio API's
 *  <a href="https://developer.mozilla.org/en-US/docs/Web/API/AudioContext"
 *  title="Audio Context @ MDN">Audio Context</a>
 *  in a suspended state.</p>
 *
 *  <p>In these browser-specific policies, sound will not play until a user
 *  interaction event (i.e. <code>mousePressed()</code>) explicitly resumes
 *  the AudioContext, or starts an audio node. This can be accomplished by
 *  calling <code>start()</code> on a <code>p5.Oscillator</code>,
 *  <code> play()</code> on a <code>p5.SoundFile</code>, or simply
 *  <code>userStartAudio()</code>.</p>
 *
 *  <p><code>userStartAudio()</code> starts the AudioContext on a user
 *  gesture. The default behavior will enable audio on any
 *  mouseUp or touchEnd event. It can also be placed in a specific
 *  interaction function, such as <code>mousePressed()</code> as in the
 *  example below. This method utilizes
 *  <a href="https://github.com/tambien/StartAudioContext">StartAudioContext
 *  </a>, a library by Yotam Mann (MIT Licence, 2016).</p>
 *  @param  {Element|Array}   [element(s)] This argument can be an Element,
 *                                Selector String, NodeList, p5.Element,
 *                                jQuery Element, or an Array of any of those.
 *  @param  {Function} [callback] Callback to invoke when the AudioContext
 *                                has started
 *  @return {Promise}            Returns a Promise that resolves when
 *                                       the AudioContext state is 'running'
 *  @method userStartAudio
 *  @for p5
 *  @example
 *  <div><code>
 *  function setup() {
 *    // mimics the autoplay policy
 *    getAudioContext().suspend();
 *
 *    let mySynth = new p5.MonoSynth();
 *
 *    // This won't play until the context has resumed
 *    mySynth.play('A6');
 *  }
 *  function draw() {
 *    background(220);
 *    textAlign(CENTER, CENTER);
 *    text(getAudioContext().state, width/2, height/2);
 *  }
 *  function mousePressed() {
 *    userStartAudio();
 *  }
 *  </code></div>
 */

function userStartAudio(elements, callback) {
  var elt = elements;

  if (elements instanceof p5.Element) {
    elt = elements.elt;
  } else if (elements instanceof Array && elements[0] instanceof p5.Element) {
    elt = elements.map(function (e) {
      return e.elt;
    });
  }

  return startaudiocontext__WEBPACK_IMPORTED_MODULE_0___default()(audiocontext, elt, callback);
}
 __webpack_exports__["a"] = (audiocontext);
}.call(this, __nested_webpack_require_13610__(26)))

 }),
 (function(module, exports, __nested_webpack_require_18459__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_18459__(0),__nested_webpack_require_18459__(2),__nested_webpack_require_18459__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return i.Add=function(t){this.createInsOuts(2,0),this._sum=this.input[0]=this.input[1]=this.output=new i.Gain,this._param=this.input[1]=new i.Signal(t),this._param.connect(this._sum)},i.extend(i.Add,i.Signal),i.Add.prototype.dispose=function(){return i.prototype.dispose.call(this),this._sum.dispose(),this._sum=null,this._param.dispose(),this._param=null,this},i.Add}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports) {

module.exports = {
  recorderProcessor: 'recorder-processor',
  soundFileProcessor: 'sound-file-processor',
  amplitudeProcessor: 'amplitude-processor'
};

 }),
 (function(module, exports, __nested_webpack_require_19455__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_19455__(0),__nested_webpack_require_19455__(15)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(e){"use strict";return e.WaveShaper=function(e,t){this._shaper=this.input=this.output=this.context.createWaveShaper(),this._curve=null,Array.isArray(e)?this.curve=e:isFinite(e)||this.isUndef(e)?this._curve=new Float32Array(this.defaultArg(e,1024)):this.isFunction(e)&&(this._curve=new Float32Array(this.defaultArg(t,1024)),this.setMap(e))},e.extend(e.WaveShaper,e.SignalBase),e.WaveShaper.prototype.setMap=function(e){for(var t=0,r=this._curve.length;t<r;t++){var s=t/(r-1)*2-1;this._curve[t]=e(s,t)}return this._shaper.curve=this._curve,this},Object.defineProperty(e.WaveShaper.prototype,"curve",{get:function(){return this._shaper.curve},set:function(e){this._curve=new Float32Array(e),this._shaper.curve=this._curve}}),Object.defineProperty(e.WaveShaper.prototype,"oversample",{get:function(){return this._shaper.oversample},set:function(e){if(-1===["none","2x","4x"].indexOf(e))throw new RangeError("Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'");this._shaper.oversample=e}}),e.WaveShaper.prototype.dispose=function(){return e.prototype.dispose.call(this),this._shaper.disconnect(),this._shaper=null,this._curve=null,this},e.WaveShaper}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_21014__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_21014__(0),__nested_webpack_require_21014__(2),__nested_webpack_require_21014__(19)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){"use strict";return o.TimelineSignal=function(){var e=this.optionsObject(arguments,["value","units"],o.Signal.defaults);this._events=new o.Timeline(10),o.Signal.apply(this,e),e.param=this._param,o.Param.call(this,e),this._initial=this._fromUnits(this._param.value)},o.extend(o.TimelineSignal,o.Param),o.TimelineSignal.Type={Linear:"linear",Exponential:"exponential",Target:"target",Curve:"curve",Set:"set"},Object.defineProperty(o.TimelineSignal.prototype,"value",{get:function(){var e=this.now(),t=this.getValueAtTime(e);return this._toUnits(t)},set:function(e){var t=this._fromUnits(e);this._initial=t,this.cancelScheduledValues(),this._param.value=t}}),o.TimelineSignal.prototype.setValueAtTime=function(e,t){return e=this._fromUnits(e),t=this.toSeconds(t),this._events.add({type:o.TimelineSignal.Type.Set,value:e,time:t}),this._param.setValueAtTime(e,t),this},o.TimelineSignal.prototype.linearRampToValueAtTime=function(e,t){return e=this._fromUnits(e),t=this.toSeconds(t),this._events.add({type:o.TimelineSignal.Type.Linear,value:e,time:t}),this._param.linearRampToValueAtTime(e,t),this},o.TimelineSignal.prototype.exponentialRampToValueAtTime=function(e,t){t=this.toSeconds(t);var i=this._searchBefore(t);i&&0===i.value&&this.setValueAtTime(this._minOutput,i.time),e=this._fromUnits(e);var n=Math.max(e,this._minOutput);return this._events.add({type:o.TimelineSignal.Type.Exponential,value:n,time:t}),e<this._minOutput?(this._param.exponentialRampToValueAtTime(this._minOutput,t-this.sampleTime),this.setValueAtTime(0,t)):this._param.exponentialRampToValueAtTime(e,t),this},o.TimelineSignal.prototype.setTargetAtTime=function(e,t,i){return e=this._fromUnits(e),e=Math.max(this._minOutput,e),i=Math.max(this._minOutput,i),t=this.toSeconds(t),this._events.add({type:o.TimelineSignal.Type.Target,value:e,time:t,constant:i}),this._param.setTargetAtTime(e,t,i),this},o.TimelineSignal.prototype.setValueCurveAtTime=function(e,t,i,n){n=this.defaultArg(n,1);for(var a=new Array(e.length),l=0;l<a.length;l++)a[l]=this._fromUnits(e[l])*n;t=this.toSeconds(t),i=this.toSeconds(i),this._events.add({type:o.TimelineSignal.Type.Curve,value:a,time:t,duration:i}),this._param.setValueAtTime(a[0],t);for(var s=1;s<a.length;s++){var r=t+s/(a.length-1)*i;this._param.linearRampToValueAtTime(a[s],r)}return this},o.TimelineSignal.prototype.cancelScheduledValues=function(e){return e=this.toSeconds(e),this._events.cancel(e),this._param.cancelScheduledValues(e),this},o.TimelineSignal.prototype.setRampPoint=function(e){e=this.toSeconds(e);var t=this._toUnits(this.getValueAtTime(e)),i=this._searchBefore(e);if(i&&i.time===e)this.cancelScheduledValues(e+this.sampleTime);else if(i&&i.type===o.TimelineSignal.Type.Curve&&i.time+i.duration>e)this.cancelScheduledValues(e),this.linearRampToValueAtTime(t,e);else{var n=this._searchAfter(e);n&&(this.cancelScheduledValues(e),n.type===o.TimelineSignal.Type.Linear?this.linearRampToValueAtTime(t,e):n.type===o.TimelineSignal.Type.Exponential&&this.exponentialRampToValueAtTime(t,e)),this.setValueAtTime(t,e)}return this},o.TimelineSignal.prototype.linearRampToValueBetween=function(e,t,i){return this.setRampPoint(t),this.linearRampToValueAtTime(e,i),this},o.TimelineSignal.prototype.exponentialRampToValueBetween=function(e,t,i){return this.setRampPoint(t),this.exponentialRampToValueAtTime(e,i),this},o.TimelineSignal.prototype._searchBefore=function(e){return this._events.get(e)},o.TimelineSignal.prototype._searchAfter=function(e){return this._events.getAfter(e)},o.TimelineSignal.prototype.getValueAtTime=function(e){e=this.toSeconds(e);var t=this._searchAfter(e),i=this._searchBefore(e),n=this._initial;if(null===i)n=this._initial;else if(i.type===o.TimelineSignal.Type.Target){var a,l=this._events.getBefore(i.time);a=null===l?this._initial:l.value,n=this._exponentialApproach(i.time,a,i.value,i.constant,e)}else n=i.type===o.TimelineSignal.Type.Curve?this._curveInterpolate(i.time,i.value,i.duration,e):null===t?i.value:t.type===o.TimelineSignal.Type.Linear?this._linearInterpolate(i.time,i.value,t.time,t.value,e):t.type===o.TimelineSignal.Type.Exponential?this._exponentialInterpolate(i.time,i.value,t.time,t.value,e):i.value;return n},o.TimelineSignal.prototype.connect=o.SignalBase.prototype.connect,o.TimelineSignal.prototype._exponentialApproach=function(e,t,i,n,a){return i+(t-i)*Math.exp(-(a-e)/n)},o.TimelineSignal.prototype._linearInterpolate=function(e,t,i,n,a){return t+(a-e)/(i-e)*(n-t)},o.TimelineSignal.prototype._exponentialInterpolate=function(e,t,i,n,a){return(t=Math.max(this._minOutput,t))*Math.pow(n/t,(a-e)/(i-e))},o.TimelineSignal.prototype._curveInterpolate=function(e,t,i,n){var a=t.length;if(e+i<=n)return t[a-1];if(n<=e)return t[0];var l=(n-e)/i,s=Math.floor((a-1)*l),r=Math.ceil((a-1)*l),o=t[s],p=t[r];return r===s?o:this._linearInterpolate(s,o,r,p,l*(a-1))},o.TimelineSignal.prototype.dispose=function(){o.Signal.prototype.dispose.call(this),o.Param.prototype.dispose.call(this),this._events.dispose(),this._events=null},o.TimelineSignal}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_26440__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_26440__(0),__nested_webpack_require_26440__(4),__nested_webpack_require_26440__(1),__nested_webpack_require_26440__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return i.Scale=function(t,e){this._outputMin=this.defaultArg(t,0),this._outputMax=this.defaultArg(e,1),this._scale=this.input=new i.Multiply(1),this._add=this.output=new i.Add(0),this._scale.connect(this._add),this._setRange()},i.extend(i.Scale,i.SignalBase),Object.defineProperty(i.Scale.prototype,"min",{get:function(){return this._outputMin},set:function(t){this._outputMin=t,this._setRange()}}),Object.defineProperty(i.Scale.prototype,"max",{get:function(){return this._outputMax},set:function(t){this._outputMax=t,this._setRange()}}),i.Scale.prototype._setRange=function(){this._add.value=this._outputMin,this._scale.value=this._outputMax-this._outputMin},i.Scale.prototype.dispose=function(){return i.prototype.dispose.call(this),this._add.dispose(),this._add=null,this._scale.dispose(),this._scale=null,this},i.Scale}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_27722__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_27722__(0),__nested_webpack_require_27722__(16),__nested_webpack_require_27722__(30),__nested_webpack_require_27722__(31),__nested_webpack_require_27722__(12)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(t){return t.Type={Default:"number",Time:"time",Frequency:"frequency",TransportTime:"transportTime",Ticks:"ticks",NormalRange:"normalRange",AudioRange:"audioRange",Decibels:"db",Interval:"interval",BPM:"bpm",Positive:"positive",Cents:"cents",Degrees:"degrees",MIDI:"midi",BarsBeatsSixteenths:"barsBeatsSixteenths",Samples:"samples",Hertz:"hertz",Note:"note",Milliseconds:"milliseconds",Seconds:"seconds",Notation:"notation"},t.prototype.toSeconds=function(e){return this.isNumber(e)?e:this.isUndef(e)?this.now():this.isString(e)?new t.Time(e).toSeconds():e instanceof t.TimeBase?e.toSeconds():void 0},t.prototype.toFrequency=function(e){return this.isNumber(e)?e:this.isString(e)||this.isUndef(e)?new t.Frequency(e).valueOf():e instanceof t.TimeBase?e.toFrequency():void 0},t.prototype.toTicks=function(e){return this.isNumber(e)||this.isString(e)?new t.TransportTime(e).toTicks():this.isUndef(e)?t.Transport.ticks:e instanceof t.TimeBase?e.toTicks():void 0},t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_29151__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_29151__(0),__nested_webpack_require_29151__(18),__nested_webpack_require_29151__(9)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return window.GainNode&&!AudioContext.prototype.createGain&&(AudioContext.prototype.createGain=AudioContext.prototype.createGainNode),i.Gain=function(){var t=this.optionsObject(arguments,["gain","units"],i.Gain.defaults);this.input=this.output=this._gainNode=this.context.createGain(),this.gain=new i.Param({param:this._gainNode.gain,units:t.units,value:t.gain,convert:t.convert}),this._readOnly("gain")},i.extend(i.Gain),i.Gain.defaults={gain:1,convert:!0},i.Gain.prototype.dispose=function(){i.Param.prototype.dispose.call(this),this._gainNode.disconnect(),this._gainNode=null,this._writable("gain"),this.gain.dispose(),this.gain=null},i.prototype.createInsOuts=function(t,n){1===t?this.input=new i.Gain:1<t&&(this.input=new Array(t)),1===n?this.output=new i.Gain:1<n&&(this.output=new Array(t))},i.Gain}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_30393__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_30393__(0),__nested_webpack_require_30393__(7),__nested_webpack_require_30393__(39),__nested_webpack_require_30393__(14),__nested_webpack_require_30393__(12)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){"use strict";return o.Clock=function(){o.Emitter.call(this);var t=this.optionsObject(arguments,["callback","frequency"],o.Clock.defaults);this.callback=t.callback,this._nextTick=0,this._lastState=o.State.Stopped,this.frequency=new o.TimelineSignal(t.frequency,o.Type.Frequency),this._readOnly("frequency"),this.ticks=0,this._state=new o.TimelineState(o.State.Stopped),this._boundLoop=this._loop.bind(this),this.context.on("tick",this._boundLoop)},o.extend(o.Clock,o.Emitter),o.Clock.defaults={callback:o.noOp,frequency:1,lookAhead:"auto"},Object.defineProperty(o.Clock.prototype,"state",{get:function(){return this._state.getValueAtTime(this.now())}}),o.Clock.prototype.start=function(t,e){return t=this.toSeconds(t),this._state.getValueAtTime(t)!==o.State.Started&&this._state.add({state:o.State.Started,time:t,offset:e}),this},o.Clock.prototype.stop=function(t){return t=this.toSeconds(t),this._state.cancel(t),this._state.setStateAtTime(o.State.Stopped,t),this},o.Clock.prototype.pause=function(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)===o.State.Started&&this._state.setStateAtTime(o.State.Paused,t),this},o.Clock.prototype._loop=function(){for(var t=this.now()+this.context.lookAhead+this.context.updateInterval+2*this.context.lag;t>this._nextTick&&this._state;){var e=this._state.getValueAtTime(this._nextTick);if(e!==this._lastState){this._lastState=e;var i=this._state.get(this._nextTick);e===o.State.Started?(this._nextTick=i.time,this.isUndef(i.offset)||(this.ticks=i.offset),this.emit("start",i.time,this.ticks)):e===o.State.Stopped?(this.ticks=0,this.emit("stop",i.time)):e===o.State.Paused&&this.emit("pause",i.time)}var s=this._nextTick;this.frequency&&(this._nextTick+=1/this.frequency.getValueAtTime(this._nextTick),e===o.State.Started&&(this.callback(s),this.ticks++))}},o.Clock.prototype.getStateAtTime=function(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)},o.Clock.prototype.dispose=function(){o.Emitter.prototype.dispose.call(this),this.context.off("tick",this._boundLoop),this._writable("frequency"),this.frequency.dispose(),this.frequency=null,this._boundLoop=null,this._nextTick=1/0,this.callback=null,this._state.dispose(),this._state=null},o.Clock}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_33070__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_33070__(0),__nested_webpack_require_33070__(14)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){function t(e,t,n){if(e.input)Array.isArray(e.input)?(o.prototype.isUndef(n)&&(n=0),this.connect(e.input[n])):this.connect(e.input,t,n);else try{e instanceof AudioNode?i.call(this,e,t,n):i.call(this,e,t)}catch(t){throw new Error("error connecting to node: "+e+"\n"+t)}}var i,r;return!window.hasOwnProperty("AudioContext")&&window.hasOwnProperty("webkitAudioContext")&&(window.AudioContext=window.webkitAudioContext),o.Context=function(t){for(var e in o.Emitter.call(this),t=t||new window.AudioContext,this._context=t,this._context)this._defineProperty(this._context,e);this._latencyHint="interactive",this._lookAhead=.1,this._updateInterval=this._lookAhead/3,this._computedUpdateInterval=0,this._worker=this._createWorker(),this._constants={}},o.extend(o.Context,o.Emitter),o.Emitter.mixin(o.Context),o.Context.prototype._defineProperty=function(e,n){this.isUndef(this[n])&&Object.defineProperty(this,n,{get:function(){return"function"==typeof e[n]?e[n].bind(e):e[n]},set:function(t){e[n]=t}})},o.Context.prototype.now=function(){return this._context.currentTime},o.Context.prototype._createWorker=function(){window.URL=window.URL||window.webkitURL;var t=new Blob(["var timeoutTime = "+(1e3*this._updateInterval).toFixed(1)+";self.onmessage = function(msg){\ttimeoutTime = parseInt(msg.data);};function tick(){\tsetTimeout(tick, timeoutTime);\tself.postMessage('tick');}tick();"]),e=URL.createObjectURL(t),n=new Worker(e);return n.addEventListener("message",function(){this.emit("tick")}.bind(this)),n.addEventListener("message",function(){var t=this.now();if(this.isNumber(this._lastUpdate)){var e=t-this._lastUpdate;this._computedUpdateInterval=Math.max(e,.97*this._computedUpdateInterval)}this._lastUpdate=t}.bind(this)),n},o.Context.prototype.getConstant=function(t){if(this._constants[t])return this._constants[t];for(var e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0),o=0;o<n.length;o++)n[o]=t;var i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants[t]=i},Object.defineProperty(o.Context.prototype,"lag",{get:function(){var t=this._computedUpdateInterval-this._updateInterval;return t=Math.max(t,0)}}),Object.defineProperty(o.Context.prototype,"lookAhead",{get:function(){return this._lookAhead},set:function(t){this._lookAhead=t}}),Object.defineProperty(o.Context.prototype,"updateInterval",{get:function(){return this._updateInterval},set:function(t){this._updateInterval=Math.max(t,o.prototype.blockTime),this._worker.postMessage(Math.max(1e3*t,1))}}),Object.defineProperty(o.Context.prototype,"latencyHint",{get:function(){return this._latencyHint},set:function(t){var e=t;if(this._latencyHint=t,this.isString(t))switch(t){case"interactive":e=.1,this._context.latencyHint=t;break;case"playback":e=.8,this._context.latencyHint=t;break;case"balanced":e=.25,this._context.latencyHint=t;break;case"fastest":e=.01}this.lookAhead=e,this.updateInterval=e/3}}),o.supported?(i=AudioNode.prototype.connect,r=AudioNode.prototype.disconnect,AudioNode.prototype.connect!==t&&(AudioNode.prototype.connect=t,AudioNode.prototype.disconnect=function(e,t,n){if(e&&e.input&&Array.isArray(e.input))o.prototype.isUndef(n)&&(n=0),this.disconnect(e.input[n],t,n);else if(e&&e.input)this.disconnect(e.input,t,n);else try{r.apply(this,arguments)}catch(t){throw new Error("error disconnecting node: "+e+"\n"+t)}}),o.context=new o.Context):console.warn("This browser does not support Tone.js"),o.Context}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_36979__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_36979__(0),__nested_webpack_require_36979__(4),__nested_webpack_require_36979__(20),__nested_webpack_require_36979__(2),__nested_webpack_require_36979__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(n){"use strict";return n.Subtract=function(t){this.createInsOuts(2,0),this._sum=this.input[0]=this.output=new n.Gain,this._neg=new n.Negate,this._param=this.input[1]=new n.Signal(t),this._param.chain(this._neg,this._sum)},n.extend(n.Subtract,n.Signal),n.Subtract.prototype.dispose=function(){return n.prototype.dispose.call(this),this._neg.dispose(),this._neg=null,this._sum.disconnect(),this._sum=null,this._param.dispose(),this._param=null,this},n.Subtract}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_37905__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_37905__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){"use strict";return o.Emitter=function(){this._events={}},o.extend(o.Emitter),o.Emitter.prototype.on=function(t,e){for(var i=t.split(/\W+/),r=0;r<i.length;r++){var n=i[r];this._events.hasOwnProperty(n)||(this._events[n]=[]),this._events[n].push(e)}return this},o.Emitter.prototype.off=function(t,e){for(var i=t.split(/\W+/),r=0;r<i.length;r++)if(t=i[r],this._events.hasOwnProperty(t))if(o.prototype.isUndef(e))this._events[t]=[];else for(var n=this._events[t],s=0;s<n.length;s++)n[s]===e&&n.splice(s,1);return this},o.Emitter.prototype.emit=function(t){if(this._events){var e=Array.apply(null,arguments).slice(1);if(this._events.hasOwnProperty(t))for(var i=this._events[t],r=0,n=i.length;r<n;r++)i[r].apply(this,e)}return this},o.Emitter.mixin=function(t){var e=["on","off","emit"];t._events={};for(var i=0;i<e.length;i++){var r=e[i],n=o.Emitter.prototype[r];t[r]=n}},o.Emitter.prototype.dispose=function(){return o.prototype.dispose.call(this),this._events=null,this},o.Emitter}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_39260__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_39260__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(c){"use strict";return c.SignalBase=function(){},c.extend(c.SignalBase),c.SignalBase.prototype.connect=function(e,n,a){return c.Signal&&c.Signal===e.constructor||c.Param&&c.Param===e.constructor||c.TimelineSignal&&c.TimelineSignal===e.constructor?(e._param.cancelScheduledValues(0),e._param.value=0,e.overridden=!0):e instanceof AudioParam&&(e.cancelScheduledValues(0),e.value=0),c.prototype.connect.call(this,e,n,a),this},c.SignalBase}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_40069__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_40069__(0),__nested_webpack_require_40069__(17)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){return o.Time=function(t,e){if(!(this instanceof o.Time))return new o.Time(t,e);this._plusNow=!1,o.TimeBase.call(this,t,e)},o.extend(o.Time,o.TimeBase),o.Time.prototype._unaryExpressions=Object.create(o.TimeBase.prototype._unaryExpressions),o.Time.prototype._unaryExpressions.quantize={regexp:/^@/,method:function(t){return o.Transport.nextSubdivision(t())}},o.Time.prototype._unaryExpressions.now={regexp:/^\+/,method:function(t){return this._plusNow=!0,t()}},o.Time.prototype.quantize=function(t,e){return e=this.defaultArg(e,1),this._expr=function(t,e,o){return t=t(),e=e.toSeconds(),t+(Math.round(t/e)*e-t)*o}.bind(this,this._expr,new this.constructor(t),e),this},o.Time.prototype.addNow=function(){return this._plusNow=!0,this},o.Time.prototype._defaultExpr=function(){return this._plusNow=!0,this._noOp},o.Time.prototype.copy=function(t){return o.TimeBase.prototype.copy.call(this,t),this._plusNow=t._plusNow,this},o.Time.prototype.toNotation=function(){var t=this.toSeconds(),e=this._toNotationHelper(t,["1m","2n","4n","8n","16n","32n","64n","128n"]),o=this._toNotationHelper(t,["1m","2n","2t","4n","4t","8n","8t","16n","16t","32n","32t","64n","64t","128n"]);return o.split("+").length<e.split("+").length?o:e},o.Time.prototype._toNotationHelper=function(t,e){for(var o=this._notationToUnits(e[e.length-1]),n="",i=0;i<e.length;i++){var r=this._notationToUnits(e[i]),s=t/r;if(1-s%1<1e-6&&(s+=1e-6),0<(s=Math.floor(s))){if(n+=1===s?e[i]:s.toString()+"*"+e[i],(t-=s*r)<o)break;n+=" + "}}return""===n&&(n="0"),n},o.Time.prototype._notationToUnits=function(t){for(var e=this._primaryExpressions,o=[e.n,e.t,e.m],n=0;n<o.length;n++){var i=o[n],r=t.match(i.regexp);if(r)return i.method.call(this,r[1])}},o.Time.prototype.toBarsBeatsSixteenths=function(){var t=this._beatsToUnits(1),e=this.toSeconds()/t,o=Math.floor(e/this._timeSignature()),n=e%1*4;return e=Math.floor(e)%this._timeSignature(),3<(n=n.toString()).length&&(n=parseFloat(n).toFixed(3)),[o,e,n].join(":")},o.Time.prototype.toTicks=function(){var t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*o.Transport.PPQ)},o.Time.prototype.toSamples=function(){return this.toSeconds()*this.context.sampleRate},o.Time.prototype.toFrequency=function(){return 1/this.toSeconds()},o.Time.prototype.toSeconds=function(){return this.valueOf()},o.Time.prototype.toMilliseconds=function(){return 1e3*this.toSeconds()},o.Time.prototype.valueOf=function(){return this._expr()+(this._plusNow?this.now():0)},o.Time}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_42938__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_42938__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(n){return n.TimeBase=function(e,t){if(!(this instanceof n.TimeBase))return new n.TimeBase(e,t);if(this._expr=this._noOp,e instanceof n.TimeBase)this.copy(e);else if(!this.isUndef(t)||this.isNumber(e)){t=this.defaultArg(t,this._defaultUnits);var r=this._primaryExpressions[t].method;this._expr=r.bind(this,e)}else this.isString(e)?this.set(e):this.isUndef(e)&&(this._expr=this._defaultExpr())},n.extend(n.TimeBase),n.TimeBase.prototype.set=function(e){return this._expr=this._parseExprString(e),this},n.TimeBase.prototype.clone=function(){var e=new this.constructor;return e.copy(this),e},n.TimeBase.prototype.copy=function(e){var t=e._expr();return this.set(t)},n.TimeBase.prototype._primaryExpressions={n:{regexp:/^(\d+)n/i,method:function(e){return 1===(e=parseInt(e))?this._beatsToUnits(this._timeSignature()):this._beatsToUnits(4/e)}},t:{regexp:/^(\d+)t/i,method:function(e){return e=parseInt(e),this._beatsToUnits(8/(3*parseInt(e)))}},m:{regexp:/^(\d+)m/i,method:function(e){return this._beatsToUnits(parseInt(e)*this._timeSignature())}},i:{regexp:/^(\d+)i/i,method:function(e){return this._ticksToUnits(parseInt(e))}},hz:{regexp:/^(\d+(?:\.\d+)?)hz/i,method:function(e){return this._frequencyToUnits(parseFloat(e))}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method:function(e,t,r){var n=0;return e&&"0"!==e&&(n+=this._beatsToUnits(this._timeSignature()*parseFloat(e))),t&&"0"!==t&&(n+=this._beatsToUnits(parseFloat(t))),r&&"0"!==r&&(n+=this._beatsToUnits(parseFloat(r)/4)),n}},s:{regexp:/^(\d+(?:\.\d+)?s)/,method:function(e){return this._secondsToUnits(parseFloat(e))}},samples:{regexp:/^(\d+)samples/,method:function(e){return parseInt(e)/this.context.sampleRate}},default:{regexp:/^(\d+(?:\.\d+)?)/,method:function(e){return this._primaryExpressions[this._defaultUnits].method.call(this,e)}}},n.TimeBase.prototype._binaryExpressions={"+":{regexp:/^\+/,precedence:2,method:function(e,t){return e()+t()}},"-":{regexp:/^\-/,precedence:2,method:function(e,t){return e()-t()}},"*":{regexp:/^\*/,precedence:1,method:function(e,t){return e()*t()}},"/":{regexp:/^\//,precedence:1,method:function(e,t){return e()/t()}}},n.TimeBase.prototype._unaryExpressions={neg:{regexp:/^\-/,method:function(e){return-e()}}},n.TimeBase.prototype._syntaxGlue={"(":{regexp:/^\(/},")":{regexp:/^\)/}},n.TimeBase.prototype._tokenize=function(e){for(var t=-1,r=[];0<e.length;){var n=i(e=e.trim(),this);r.push(n),e=e.substr(n.value.length)}function i(e,t){for(var r=["_binaryExpressions","_unaryExpressions","_primaryExpressions","_syntaxGlue"],n=0;n<r.length;n++){var i=t[r[n]];for(var s in i){var o=i[s],p=o.regexp,a=e.match(p);if(null!==a)return{method:o.method,precedence:o.precedence,regexp:o.regexp,value:a[0]}}}throw new SyntaxError("Tone.TimeBase: Unexpected token "+e)}return{next:function(){return r[++t]},peek:function(){return r[t+1]}}},n.TimeBase.prototype._matchGroup=function(e,t,r){if(!this.isUndef(e))for(var n in t){var i=t[n];if(i.regexp.test(e.value)){if(this.isUndef(r))return i;if(i.precedence===r)return i}}return!1},n.TimeBase.prototype._parseBinary=function(e,t){var r;this.isUndef(t)&&(t=2),r=t<0?this._parseUnary(e):this._parseBinary(e,t-1);for(var n=e.peek();n&&this._matchGroup(n,this._binaryExpressions,t);)r=(n=e.next()).method.bind(this,r,this._parseBinary(e,t-1)),n=e.peek();return r},n.TimeBase.prototype._parseUnary=function(e){var t,r;t=e.peek();var n=this._matchGroup(t,this._unaryExpressions);return n?(t=e.next(),r=this._parseUnary(e),n.method.bind(this,r)):this._parsePrimary(e)},n.TimeBase.prototype._parsePrimary=function(e){var t,r;if(t=e.peek(),this.isUndef(t))throw new SyntaxError("Tone.TimeBase: Unexpected end of expression");if(this._matchGroup(t,this._primaryExpressions)){var n=(t=e.next()).value.match(t.regexp);return t.method.bind(this,n[1],n[2],n[3])}if(t&&"("===t.value){if(e.next(),r=this._parseBinary(e),!(t=e.next())||")"!==t.value)throw new SyntaxError("Expected )");return r}throw new SyntaxError("Tone.TimeBase: Cannot process token "+t.value)},n.TimeBase.prototype._parseExprString=function(e){this.isString(e)||(e=e.toString());var t=this._tokenize(e);return this._parseBinary(t)},n.TimeBase.prototype._noOp=function(){return 0},n.TimeBase.prototype._defaultExpr=function(){return this._noOp},n.TimeBase.prototype._defaultUnits="s",n.TimeBase.prototype._frequencyToUnits=function(e){return 1/e},n.TimeBase.prototype._beatsToUnits=function(e){return 60/n.Transport.bpm.value*e},n.TimeBase.prototype._secondsToUnits=function(e){return e},n.TimeBase.prototype._ticksToUnits=function(e){return e*(this._beatsToUnits(1)/n.Transport.PPQ)},n.TimeBase.prototype._timeSignature=function(){return n.Transport.timeSignature},n.TimeBase.prototype._pushExpr=function(e,t,r){return e instanceof n.TimeBase||(e=new this.constructor(e,r)),this._expr=this._binaryExpressions[t].method.bind(this,this._expr,e._expr),this},n.TimeBase.prototype.add=function(e,t){return this._pushExpr(e,"+",t)},n.TimeBase.prototype.sub=function(e,t){return this._pushExpr(e,"-",t)},n.TimeBase.prototype.mult=function(e,t){return this._pushExpr(e,"*",t)},n.TimeBase.prototype.div=function(e,t){return this._pushExpr(e,"/",t)},n.TimeBase.prototype.valueOf=function(){return this._expr()},n.TimeBase.prototype.dispose=function(){this._expr=null},n.TimeBase}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_48596__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_48596__(0),__nested_webpack_require_48596__(9)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(a){"use strict";return a.Param=function(){var t=this.optionsObject(arguments,["param","units","convert"],a.Param.defaults);this._param=this.input=t.param,this.units=t.units,this.convert=t.convert,this.overridden=!1,this._lfo=null,this.isObject(t.lfo)?this.value=t.lfo:this.isUndef(t.value)||(this.value=t.value)},a.extend(a.Param),a.Param.defaults={units:a.Type.Default,convert:!0,param:void 0},Object.defineProperty(a.Param.prototype,"value",{get:function(){return this._toUnits(this._param.value)},set:function(t){if(this.isObject(t)){if(this.isUndef(a.LFO))throw new Error("Include 'Tone.LFO' to use an LFO as a Param value.");this._lfo&&this._lfo.dispose(),this._lfo=new a.LFO(t).start(),this._lfo.connect(this.input)}else{var e=this._fromUnits(t);this._param.cancelScheduledValues(0),this._param.value=e}}}),a.Param.prototype._fromUnits=function(t){if(!this.convert&&!this.isUndef(this.convert))return t;switch(this.units){case a.Type.Time:return this.toSeconds(t);case a.Type.Frequency:return this.toFrequency(t);case a.Type.Decibels:return this.dbToGain(t);case a.Type.NormalRange:return Math.min(Math.max(t,0),1);case a.Type.AudioRange:return Math.min(Math.max(t,-1),1);case a.Type.Positive:return Math.max(t,0);default:return t}},a.Param.prototype._toUnits=function(t){if(!this.convert&&!this.isUndef(this.convert))return t;switch(this.units){case a.Type.Decibels:return this.gainToDb(t);default:return t}},a.Param.prototype._minOutput=1e-5,a.Param.prototype.setValueAtTime=function(t,e){return t=this._fromUnits(t),(e=this.toSeconds(e))<=this.now()+this.blockTime?this._param.value=t:this._param.setValueAtTime(t,e),this},a.Param.prototype.setRampPoint=function(t){t=this.defaultArg(t,this.now());var e=this._param.value;return 0===e&&(e=this._minOutput),this._param.setValueAtTime(e,t),this},a.Param.prototype.linearRampToValueAtTime=function(t,e){return t=this._fromUnits(t),this._param.linearRampToValueAtTime(t,this.toSeconds(e)),this},a.Param.prototype.exponentialRampToValueAtTime=function(t,e){return t=this._fromUnits(t),t=Math.max(this._minOutput,t),this._param.exponentialRampToValueAtTime(t,this.toSeconds(e)),this},a.Param.prototype.exponentialRampToValue=function(t,e,i){return i=this.toSeconds(i),this.setRampPoint(i),this.exponentialRampToValueAtTime(t,i+this.toSeconds(e)),this},a.Param.prototype.linearRampToValue=function(t,e,i){return i=this.toSeconds(i),this.setRampPoint(i),this.linearRampToValueAtTime(t,i+this.toSeconds(e)),this},a.Param.prototype.setTargetAtTime=function(t,e,i){return t=this._fromUnits(t),t=Math.max(this._minOutput,t),i=Math.max(this._minOutput,i),this._param.setTargetAtTime(t,this.toSeconds(e),i),this},a.Param.prototype.setValueCurveAtTime=function(t,e,i){for(var a=0;a<t.length;a++)t[a]=this._fromUnits(t[a]);return this._param.setValueCurveAtTime(t,this.toSeconds(e),this.toSeconds(i)),this},a.Param.prototype.cancelScheduledValues=function(t){return this._param.cancelScheduledValues(this.toSeconds(t)),this},a.Param.prototype.rampTo=function(t,e,i){return e=this.defaultArg(e,0),this.units===a.Type.Frequency||this.units===a.Type.BPM||this.units===a.Type.Decibels?this.exponentialRampToValue(t,e,i):this.linearRampToValue(t,e,i),this},Object.defineProperty(a.Param.prototype,"lfo",{get:function(){return this._lfo}}),a.Param.prototype.dispose=function(){return a.prototype.dispose.call(this),this._param=null,this._lfo&&(this._lfo.dispose(),this._lfo=null),this},a.Param}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_52423__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_52423__(0),__nested_webpack_require_52423__(9)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return i.Timeline=function(){var e=this.optionsObject(arguments,["memory"],i.Timeline.defaults);this._timeline=[],this._toRemove=[],this._iterating=!1,this.memory=e.memory},i.extend(i.Timeline),i.Timeline.defaults={memory:1/0},Object.defineProperty(i.Timeline.prototype,"length",{get:function(){return this._timeline.length}}),i.Timeline.prototype.add=function(e){if(this.isUndef(e.time))throw new Error("Tone.Timeline: events must have a time attribute");if(this._timeline.length){var i=this._search(e.time);this._timeline.splice(i+1,0,e)}else this._timeline.push(e);if(this.length>this.memory){var t=this.length-this.memory;this._timeline.splice(0,t)}return this},i.Timeline.prototype.remove=function(e){if(this._iterating)this._toRemove.push(e);else{var i=this._timeline.indexOf(e);-1!==i&&this._timeline.splice(i,1)}return this},i.Timeline.prototype.get=function(e){var i=this._search(e);return-1!==i?this._timeline[i]:null},i.Timeline.prototype.peek=function(){return this._timeline[0]},i.Timeline.prototype.shift=function(){return this._timeline.shift()},i.Timeline.prototype.getAfter=function(e){var i=this._search(e);return i+1<this._timeline.length?this._timeline[i+1]:null},i.Timeline.prototype.getBefore=function(e){var i=this._timeline.length;if(0<i&&this._timeline[i-1].time<e)return this._timeline[i-1];var t=this._search(e);return 0<=t-1?this._timeline[t-1]:null},i.Timeline.prototype.cancel=function(e){if(1<this._timeline.length){var i=this._search(e);if(0<=i)if(this._timeline[i].time===e){for(var t=i;0<=t&&this._timeline[t].time===e;t--)i=t;this._timeline=this._timeline.slice(0,i)}else this._timeline=this._timeline.slice(0,i+1);else this._timeline=[]}else 1===this._timeline.length&&this._timeline[0].time>=e&&(this._timeline=[]);return this},i.Timeline.prototype.cancelBefore=function(e){if(this._timeline.length){var i=this._search(e);0<=i&&(this._timeline=this._timeline.slice(i+1))}return this},i.Timeline.prototype._search=function(e){var i=0,t=this._timeline.length,n=t;if(0<t&&this._timeline[t-1].time<=e)return t-1;for(;i<n;){var r=Math.floor(i+(n-i)/2),s=this._timeline[r],h=this._timeline[r+1];if(s.time===e){for(var l=r;l<this._timeline.length;l++){this._timeline[l].time===e&&(r=l)}return r}if(s.time<e&&h.time>e)return r;s.time>e?n=r:s.time<e&&(i=r+1)}return-1},i.Timeline.prototype._iterate=function(e,i,t){this._iterating=!0,i=this.defaultArg(i,0),t=this.defaultArg(t,this._timeline.length-1);for(var n=i;n<=t;n++)e(this._timeline[n]);if(this._iterating=!1,0<this._toRemove.length){for(var r=0;r<this._toRemove.length;r++){var s=this._timeline.indexOf(this._toRemove[r]);-1!==s&&this._timeline.splice(s,1)}this._toRemove=[]}},i.Timeline.prototype.forEach=function(e){return this._iterate(e),this},i.Timeline.prototype.forEachBefore=function(e,i){var t=this._search(e);return-1!==t&&this._iterate(i,0,t),this},i.Timeline.prototype.forEachAfter=function(e,i){var t=this._search(e);return this._iterate(i,t+1),this},i.Timeline.prototype.forEachFrom=function(e,i){for(var t=this._search(e);0<=t&&this._timeline[t].time>=e;)t--;return this._iterate(i,t+1),this},i.Timeline.prototype.forEachAtTime=function(i,t){var e=this._search(i);return-1!==e&&this._iterate(function(e){e.time===i&&t(e)},0,e),this},i.Timeline.prototype.dispose=function(){i.prototype.dispose.call(this),this._timeline=null,this._toRemove=null},i.Timeline}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_56192__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_56192__(0),__nested_webpack_require_56192__(1),__nested_webpack_require_56192__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(t){"use strict";return t.Negate=function(){this._multiply=this.input=this.output=new t.Multiply(-1)},t.extend(t.Negate,t.SignalBase),t.Negate.prototype.dispose=function(){return t.prototype.dispose.call(this),this._multiply.dispose(),this._multiply=null,this},t.Negate}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_56880__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_56880__(0),__nested_webpack_require_56880__(2),__nested_webpack_require_56880__(1),__nested_webpack_require_56880__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(e){"use strict";return e.GreaterThanZero=function(){this._thresh=this.output=new e.WaveShaper(function(e){return e<=0?0:1},127),this._scale=this.input=new e.Multiply(1e4),this._scale.connect(this._thresh)},e.extend(e.GreaterThanZero,e.SignalBase),e.GreaterThanZero.prototype.dispose=function(){return e.prototype.dispose.call(this),this._scale.dispose(),this._scale=null,this._thresh.dispose(),this._thresh=null,this},e.GreaterThanZero}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(e,t){  true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0}(this,function(){var r=function(e,t){this._dragged=!1,this._element=e,this._bindedMove=this._moved.bind(this),this._bindedEnd=this._ended.bind(this,t),e.addEventListener("touchstart",this._bindedEnd),e.addEventListener("touchmove",this._bindedMove),e.addEventListener("touchend",this._bindedEnd),e.addEventListener("mouseup",this._bindedEnd)};function o(e){return"running"===e.state}return r.prototype._moved=function(e){this._dragged=!0},r.prototype._ended=function(e){this._dragged||function(e){var t=e.createBuffer(1,1,e.sampleRate),n=e.createBufferSource();n.buffer=t,n.connect(e.destination),n.start(0),e.resume&&e.resume()}(e),this._dragged=!1},r.prototype.dispose=function(){this._element.removeEventListener("touchstart",this._bindedEnd),this._element.removeEventListener("touchmove",this._bindedMove),this._element.removeEventListener("touchend",this._bindedEnd),this._element.removeEventListener("mouseup",this._bindedEnd),this._bindedMove=null,this._bindedEnd=null,this._element=null},function(t,e,n){var i=new Promise(function(e){!function(t,n){o(t)?n():function e(){o(t)?n():(requestAnimationFrame(e),t.resume&&t.resume())}()}(t,e)}),d=[];return function e(t,n,i){if(Array.isArray(t)||NodeList&&t instanceof NodeList)for(var d=0;d<t.length;d++)e(t[d],n,i);else if("string"==typeof t)e(document.querySelectorAll(t),n,i);else if(t.jquery&&"function"==typeof t.toArray)e(t.toArray(),n,i);else if(Element&&t instanceof Element){var o=new r(t,i);n.push(o)}}(e=e||document.body,d,t),i.then(function(){for(var e=0;e<d.length;e++)d[e].dispose();d=null,n&&n()}),i}});

 }),
 (function(module, exports, __nested_webpack_require_59900__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_59900__(0),__nested_webpack_require_59900__(2),__nested_webpack_require_59900__(32),__nested_webpack_require_59900__(38),__nested_webpack_require_59900__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return i.CrossFade=function(e){this.createInsOuts(2,1),this.a=this.input[0]=new i.Gain,this.b=this.input[1]=new i.Gain,this.fade=new i.Signal(this.defaultArg(e,.5),i.Type.NormalRange),this._equalPowerA=new i.EqualPowerGain,this._equalPowerB=new i.EqualPowerGain,this._invert=new i.Expr("1 - $0"),this.a.connect(this.output),this.b.connect(this.output),this.fade.chain(this._equalPowerB,this.b.gain),this.fade.chain(this._invert,this._equalPowerA,this.a.gain),this._readOnly("fade")},i.extend(i.CrossFade),i.CrossFade.prototype.dispose=function(){return i.prototype.dispose.call(this),this._writable("fade"),this._equalPowerA.dispose(),this._equalPowerA=null,this._equalPowerB.dispose(),this._equalPowerB=null,this.fade.dispose(),this.fade=null,this._invert.dispose(),this._invert=null,this.a.dispose(),this.a=null,this.b.dispose(),this.b=null,this},i.CrossFade}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports) {

!function(){var l,s=[];function p(e){var o=this,n={},i=-1;this.parameters.forEach(function(e,t){var r=s[++i]||(s[i]=new Float32Array(o.bufferSize));r.fill(e.value),n[t]=r}),this.processor.realm.exec("self.sampleRate=sampleRate="+this.context.sampleRate+";self.currentTime=currentTime="+this.context.currentTime);var t=a(e.inputBuffer),r=a(e.outputBuffer);this.instance.process([t],[r],n)}function a(e){for(var t=[],r=0;r<e.numberOfChannels;r++)t[r]=e.getChannelData(r);return t}function f(e){return e.$$processors||(e.$$processors={})}function e(e){this.$$context=e}"function"!=typeof AudioWorkletNode&&(self.AudioWorkletNode=function(e,t,r){var o=f(e)[t],n=e.createScriptProcessor(void 0,2,r&&r.outputChannelCount?r.outputChannelCount[0]:2);if(n.parameters=new Map,o.properties)for(var i=0;i<o.properties.length;i++){var s=o.properties[i],a=e.createGain().gain;a.value=s.defaultValue,n.parameters.set(s.name,a)}var u=new MessageChannel;l=u.port2;var c=new o.Processor(r||{});return l=null,n.port=u.port1,n.processor=o,n.instance=c,n.onaudioprocess=p,n},Object.defineProperty((self.AudioContext||self.webkitAudioContext).prototype,"audioWorklet",{get:function(){return this.$$audioWorklet||(this.$$audioWorklet=new self.AudioWorklet(this))}}),self.AudioWorklet=(e.prototype.addModule=function(e,t){var n=this;return fetch(e).then(function(e){if(!e.ok)throw Error(e.status);return e.text()}).then(function(e){var r={sampleRate:0,currentTime:0,AudioWorkletProcessor:function(){this.port=l},registerProcessor:function(e,t){f(n.$$context)[e]={realm:o,context:r,Processor:t,properties:t.parameterDescriptors||[]}}},o=new function(e,t){var r=document.createElement("iframe");r.style.cssText="position:absolute;left:0;top:-999px;width:1px;height:1px;",t.appendChild(r);var o=r.contentWindow,n=o.document,i="var window,$hook";for(var s in o)s in e||"eval"===s||(i+=",",i+=s);for(var a in e)i+=",",i+=a,i+="=self.",i+=a;var u=n.createElement("script");u.appendChild(n.createTextNode('function $hook(self,console) {"use strict";\n        '+i+";return function() {return eval(arguments[0])}}")),n.body.appendChild(u),this.exec=o.$hook(e,console)}(r.self=r,document.documentElement);return o.exec((t&&t.transpile||String)(e)),null})},e))}();

 }),
 (function(module, exports) {

/**
 * This module has shims
 */

(function () {
  function fixSetTarget(param) {
    if (!param) 
      return;
    if (!param.setTargetAtTime) param.setTargetAtTime = param.setTargetValueAtTime;
  }

  if (window.hasOwnProperty('webkitAudioContext') && !window.hasOwnProperty('AudioContext')) {
    window.AudioContext = window.webkitAudioContext;
    if (typeof AudioContext.prototype.createGain !== 'function') AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;
    if (typeof AudioContext.prototype.createDelay !== 'function') AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;
    if (typeof AudioContext.prototype.createScriptProcessor !== 'function') AudioContext.prototype.createScriptProcessor = AudioContext.prototype.createJavaScriptNode;
    if (typeof AudioContext.prototype.createPeriodicWave !== 'function') AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;
    AudioContext.prototype.internal_createGain = AudioContext.prototype.createGain;

    AudioContext.prototype.createGain = function () {
      var node = this.internal_createGain();
      fixSetTarget(node.gain);
      return node;
    };

    AudioContext.prototype.internal_createDelay = AudioContext.prototype.createDelay;

    AudioContext.prototype.createDelay = function (maxDelayTime) {
      var node = maxDelayTime ? this.internal_createDelay(maxDelayTime) : this.internal_createDelay();
      fixSetTarget(node.delayTime);
      return node;
    };

    AudioContext.prototype.internal_createBufferSource = AudioContext.prototype.createBufferSource;

    AudioContext.prototype.createBufferSource = function () {
      var node = this.internal_createBufferSource();

      if (!node.start) {
        node.start = function (when, offset, duration) {
          if (offset || duration) this.noteGrainOn(when || 0, offset, duration);else this.noteOn(when || 0);
        };
      } else {
        node.internal_start = node.start;

        node.start = function (when, offset, duration) {
          if (typeof duration !== 'undefined') node.internal_start(when || 0, offset, duration);else node.internal_start(when || 0, offset || 0);
        };
      }

      if (!node.stop) {
        node.stop = function (when) {
          this.noteOff(when || 0);
        };
      } else {
        node.internal_stop = node.stop;

        node.stop = function (when) {
          node.internal_stop(when || 0);
        };
      }

      fixSetTarget(node.playbackRate);
      return node;
    };

    AudioContext.prototype.internal_createDynamicsCompressor = AudioContext.prototype.createDynamicsCompressor;

    AudioContext.prototype.createDynamicsCompressor = function () {
      var node = this.internal_createDynamicsCompressor();
      fixSetTarget(node.threshold);
      fixSetTarget(node.knee);
      fixSetTarget(node.ratio);
      fixSetTarget(node.reduction);
      fixSetTarget(node.attack);
      fixSetTarget(node.release);
      return node;
    };

    AudioContext.prototype.internal_createBiquadFilter = AudioContext.prototype.createBiquadFilter;

    AudioContext.prototype.createBiquadFilter = function () {
      var node = this.internal_createBiquadFilter();
      fixSetTarget(node.frequency);
      fixSetTarget(node.detune);
      fixSetTarget(node.Q);
      fixSetTarget(node.gain);
      return node;
    };

    if (typeof AudioContext.prototype.createOscillator !== 'function') {
      AudioContext.prototype.internal_createOscillator = AudioContext.prototype.createOscillator;

      AudioContext.prototype.createOscillator = function () {
        var node = this.internal_createOscillator();

        if (!node.start) {
          node.start = function (when) {
            this.noteOn(when || 0);
          };
        } else {
          node.internal_start = node.start;

          node.start = function (when) {
            node.internal_start(when || 0);
          };
        }

        if (!node.stop) {
          node.stop = function (when) {
            this.noteOff(when || 0);
          };
        } else {
          node.internal_stop = node.stop;

          node.stop = function (when) {
            node.internal_stop(when || 0);
          };
        }

        if (!node.setPeriodicWave) node.setPeriodicWave = node.setWaveTable;
        fixSetTarget(node.frequency);
        fixSetTarget(node.detune);
        return node;
      };
    }
  }

  if (window.hasOwnProperty('webkitOfflineAudioContext') && !window.hasOwnProperty('OfflineAudioContext')) {
    window.OfflineAudioContext = window.webkitOfflineAudioContext;
  }
})(window); 


navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
/**
 * Determine which filetypes are supported (inspired by buzz.js)
 * The audio element (el) will only be used to test browser support for various audio formats
 */

var el = document.createElement('audio');

p5.prototype.isSupported = function () {
  return !!el.canPlayType;
};

var isOGGSupported = function isOGGSupported() {
  return !!el.canPlayType && el.canPlayType('audio/ogg; codecs="vorbis"');
};

var isMP3Supported = function isMP3Supported() {
  return !!el.canPlayType && el.canPlayType('audio/mpeg;');
};

var isWAVSupported = function isWAVSupported() {
  return !!el.canPlayType && el.canPlayType('audio/wav; codecs="1"');
};

var isAACSupported = function isAACSupported() {
  return !!el.canPlayType && (el.canPlayType('audio/x-m4a;') || el.canPlayType('audio/aac;'));
};

var isAIFSupported = function isAIFSupported() {
  return !!el.canPlayType && el.canPlayType('audio/x-aiff;');
};

p5.prototype.isFileSupported = function (extension) {
  switch (extension.toLowerCase()) {
    case 'mp3':
      return isMP3Supported();

    case 'wav':
      return isWAVSupported();

    case 'ogg':
      return isOGGSupported();

    case 'aac':
    case 'm4a':
    case 'mp4':
      return isAACSupported();

    case 'aif':
    case 'aiff':
      return isAIFSupported();

    default:
      return false;
  }
};

 }),
 (function(module, exports) {

var g;g=function(){return this}();try{g=g||new Function("return this")()}catch(t){"object"==typeof window&&(g=window)}module.exports=g;

 }),
 (function(module, __webpack_exports__, __nested_webpack_require_69836__) {

"use strict";
__nested_webpack_require_69836__.r(__webpack_exports__);
 __webpack_exports__["default"] = ("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// import dependencies via preval.require so that they're available as values at compile time\nvar processorNames = {\n  \"recorderProcessor\": \"recorder-processor\",\n  \"soundFileProcessor\": \"sound-file-processor\",\n  \"amplitudeProcessor\": \"amplitude-processor\"\n};\nvar RingBuffer = {\n  \"default\":\n  /*#__PURE__*/\n  function () {\n    /**\n     * @constructor\n     * @param  {number} length Buffer length in frames.\n     * @param  {number} channelCount Buffer channel count.\n     */\n    function RingBuffer(length, channelCount) {\n      _classCallCheck(this, RingBuffer);\n\n      this._readIndex = 0;\n      this._writeIndex = 0;\n      this._framesAvailable = 0;\n      this._channelCount = channelCount;\n      this._length = length;\n      this._channelData = [];\n\n      for (var i = 0; i < this._channelCount; ++i) {\n        this._channelData[i] = new Float32Array(length);\n      }\n    }\n    /**\n     * Getter for Available frames in buffer.\n     *\n     * @return {number} Available frames in buffer.\n     */\n\n\n    _createClass(RingBuffer, [{\n      key: \"push\",\n\n      /**\n       * Push a sequence of Float32Arrays to buffer.\n       *\n       * @param  {array} arraySequence A sequence of Float32Arrays.\n       */\n      value: function push(arraySequence) {\n        // The channel count of arraySequence and the length of each channel must\n        // match with this buffer obejct.\n        // Transfer data from the |arraySequence| storage to the internal buffer.\n        var sourceLength = arraySequence[0] ? arraySequence[0].length : 0;\n\n        for (var i = 0; i < sourceLength; ++i) {\n          var writeIndex = (this._writeIndex + i) % this._length;\n\n          for (var channel = 0; channel < this._channelCount; ++channel) {\n            this._channelData[channel][writeIndex] = arraySequence[channel][i];\n          }\n        }\n\n        this._writeIndex += sourceLength;\n\n        if (this._writeIndex >= this._length) {\n          this._writeIndex = 0;\n        } // For excessive frames, the buffer will be overwritten.\n\n\n        this._framesAvailable += sourceLength;\n\n        if (this._framesAvailable > this._length) {\n          this._framesAvailable = this._length;\n        }\n      }\n      /**\n       * Pull data out of buffer and fill a given sequence of Float32Arrays.\n       *\n       * @param  {array} arraySequence An array of Float32Arrays.\n       */\n\n    }, {\n      key: \"pull\",\n      value: function pull(arraySequence) {\n        // The channel count of arraySequence and the length of each channel must\n        // match with this buffer obejct.\n        // If the FIFO is completely empty, do nothing.\n        if (this._framesAvailable === 0) {\n          return;\n        }\n\n        var destinationLength = arraySequence[0].length; // Transfer data from the internal buffer to the |arraySequence| storage.\n\n        for (var i = 0; i < destinationLength; ++i) {\n          var readIndex = (this._readIndex + i) % this._length;\n\n          for (var channel = 0; channel < this._channelCount; ++channel) {\n            arraySequence[channel][i] = this._channelData[channel][readIndex];\n          }\n        }\n\n        this._readIndex += destinationLength;\n\n        if (this._readIndex >= this._length) {\n          this._readIndex = 0;\n        }\n\n        this._framesAvailable -= destinationLength;\n\n        if (this._framesAvailable < 0) {\n          this._framesAvailable = 0;\n        }\n      }\n    }, {\n      key: \"framesAvailable\",\n      get: function get() {\n        return this._framesAvailable;\n      }\n    }]);\n\n    return RingBuffer;\n  }()\n}[\"default\"];\n\nvar RecorderProcessor =\n/*#__PURE__*/\nfunction (_AudioWorkletProcesso) {\n  _inherits(RecorderProcessor, _AudioWorkletProcesso);\n\n  function RecorderProcessor(options) {\n    var _this;\n\n    _classCallCheck(this, RecorderProcessor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecorderProcessor).call(this));\n    var processorOptions = options.processorOptions || {};\n    _this.numOutputChannels = options.outputChannelCount || 2;\n    _this.numInputChannels = processorOptions.numInputChannels || 2;\n    _this.bufferSize = processorOptions.bufferSize || 1024;\n    _this.recording = false;\n\n    _this.clear();\n\n    _this.port.onmessage = function (event) {\n      var data = event.data;\n\n      if (data.name === 'start') {\n        _this.record(data.duration);\n      } else if (data.name === 'stop') {\n        _this.stop();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RecorderProcessor, [{\n    key: \"process\",\n    value: function process(inputs) {\n      if (!this.recording) {\n        return true;\n      } else if (this.sampleLimit && this.recordedSamples >= this.sampleLimit) {\n        this.stop();\n        return true;\n      }\n\n      var input = inputs[0];\n      this.inputRingBuffer.push(input);\n\n      if (this.inputRingBuffer.framesAvailable >= this.bufferSize) {\n        this.inputRingBuffer.pull(this.inputRingBufferArraySequence);\n\n        for (var channel = 0; channel < this.numOutputChannels; ++channel) {\n          var inputChannelCopy = this.inputRingBufferArraySequence[channel].slice();\n\n          if (channel === 0) {\n            this.leftBuffers.push(inputChannelCopy);\n\n            if (this.numInputChannels === 1) {\n              this.rightBuffers.push(inputChannelCopy);\n            }\n          } else if (channel === 1 && this.numInputChannels > 1) {\n            this.rightBuffers.push(inputChannelCopy);\n          }\n        }\n\n        this.recordedSamples += this.bufferSize;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"record\",\n    value: function record(duration) {\n      if (duration) {\n        this.sampleLimit = Math.round(duration * sampleRate);\n      }\n\n      this.recording = true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.recording = false;\n      var buffers = this.getBuffers();\n      var leftBuffer = buffers[0].buffer;\n      var rightBuffer = buffers[1].buffer;\n      this.port.postMessage({\n        name: 'buffers',\n        leftBuffer: leftBuffer,\n        rightBuffer: rightBuffer\n      }, [leftBuffer, rightBuffer]);\n      this.clear();\n    }\n  }, {\n    key: \"getBuffers\",\n    value: function getBuffers() {\n      var buffers = [];\n      buffers.push(this.mergeBuffers(this.leftBuffers));\n      buffers.push(this.mergeBuffers(this.rightBuffers));\n      return buffers;\n    }\n  }, {\n    key: \"mergeBuffers\",\n    value: function mergeBuffers(channelBuffer) {\n      var result = new Float32Array(this.recordedSamples);\n      var offset = 0;\n      var lng = channelBuffer.length;\n\n      for (var i = 0; i < lng; i++) {\n        var buffer = channelBuffer[i];\n        result.set(buffer, offset);\n        offset += buffer.length;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n\n      this.leftBuffers = [];\n      this.rightBuffers = [];\n      this.inputRingBuffer = new RingBuffer(this.bufferSize, this.numInputChannels);\n      this.inputRingBufferArraySequence = new Array(this.numInputChannels).fill(null).map(function () {\n        return new Float32Array(_this2.bufferSize);\n      });\n      this.recordedSamples = 0;\n      this.sampleLimit = null;\n    }\n  }]);\n\n  return RecorderProcessor;\n}(_wrapNativeSuper(AudioWorkletProcessor));\n\nregisterProcessor(processorNames.recorderProcessor, RecorderProcessor);");

 }),
 (function(module, __webpack_exports__, __nested_webpack_require_81440__) {

"use strict";
__nested_webpack_require_81440__.r(__webpack_exports__);
 __webpack_exports__["default"] = ("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// import dependencies via preval.require so that they're available as values at compile time\nvar processorNames = {\n  \"recorderProcessor\": \"recorder-processor\",\n  \"soundFileProcessor\": \"sound-file-processor\",\n  \"amplitudeProcessor\": \"amplitude-processor\"\n};\nvar RingBuffer = {\n  \"default\":\n  /*#__PURE__*/\n  function () {\n    /**\n     * @constructor\n     * @param  {number} length Buffer length in frames.\n     * @param  {number} channelCount Buffer channel count.\n     */\n    function RingBuffer(length, channelCount) {\n      _classCallCheck(this, RingBuffer);\n\n      this._readIndex = 0;\n      this._writeIndex = 0;\n      this._framesAvailable = 0;\n      this._channelCount = channelCount;\n      this._length = length;\n      this._channelData = [];\n\n      for (var i = 0; i < this._channelCount; ++i) {\n        this._channelData[i] = new Float32Array(length);\n      }\n    }\n    /**\n     * Getter for Available frames in buffer.\n     *\n     * @return {number} Available frames in buffer.\n     */\n\n\n    _createClass(RingBuffer, [{\n      key: \"push\",\n\n      /**\n       * Push a sequence of Float32Arrays to buffer.\n       *\n       * @param  {array} arraySequence A sequence of Float32Arrays.\n       */\n      value: function push(arraySequence) {\n        // The channel count of arraySequence and the length of each channel must\n        // match with this buffer obejct.\n        // Transfer data from the |arraySequence| storage to the internal buffer.\n        var sourceLength = arraySequence[0] ? arraySequence[0].length : 0;\n\n        for (var i = 0; i < sourceLength; ++i) {\n          var writeIndex = (this._writeIndex + i) % this._length;\n\n          for (var channel = 0; channel < this._channelCount; ++channel) {\n            this._channelData[channel][writeIndex] = arraySequence[channel][i];\n          }\n        }\n\n        this._writeIndex += sourceLength;\n\n        if (this._writeIndex >= this._length) {\n          this._writeIndex = 0;\n        } // For excessive frames, the buffer will be overwritten.\n\n\n        this._framesAvailable += sourceLength;\n\n        if (this._framesAvailable > this._length) {\n          this._framesAvailable = this._length;\n        }\n      }\n      /**\n       * Pull data out of buffer and fill a given sequence of Float32Arrays.\n       *\n       * @param  {array} arraySequence An array of Float32Arrays.\n       */\n\n    }, {\n      key: \"pull\",\n      value: function pull(arraySequence) {\n        // The channel count of arraySequence and the length of each channel must\n        // match with this buffer obejct.\n        // If the FIFO is completely empty, do nothing.\n        if (this._framesAvailable === 0) {\n          return;\n        }\n\n        var destinationLength = arraySequence[0].length; // Transfer data from the internal buffer to the |arraySequence| storage.\n\n        for (var i = 0; i < destinationLength; ++i) {\n          var readIndex = (this._readIndex + i) % this._length;\n\n          for (var channel = 0; channel < this._channelCount; ++channel) {\n            arraySequence[channel][i] = this._channelData[channel][readIndex];\n          }\n        }\n\n        this._readIndex += destinationLength;\n\n        if (this._readIndex >= this._length) {\n          this._readIndex = 0;\n        }\n\n        this._framesAvailable -= destinationLength;\n\n        if (this._framesAvailable < 0) {\n          this._framesAvailable = 0;\n        }\n      }\n    }, {\n      key: \"framesAvailable\",\n      get: function get() {\n        return this._framesAvailable;\n      }\n    }]);\n\n    return RingBuffer;\n  }()\n}[\"default\"];\n\nvar SoundFileProcessor =\n/*#__PURE__*/\nfunction (_AudioWorkletProcesso) {\n  _inherits(SoundFileProcessor, _AudioWorkletProcesso);\n\n  function SoundFileProcessor(options) {\n    var _this;\n\n    _classCallCheck(this, SoundFileProcessor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SoundFileProcessor).call(this));\n    var processorOptions = options.processorOptions || {};\n    _this.bufferSize = processorOptions.bufferSize || 256;\n    _this.inputRingBuffer = new RingBuffer(_this.bufferSize, 1);\n    _this.inputRingBufferArraySequence = [new Float32Array(_this.bufferSize)];\n    return _this;\n  }\n\n  _createClass(SoundFileProcessor, [{\n    key: \"process\",\n    value: function process(inputs) {\n      var input = inputs[0]; // we only care about the first input channel, because that contains the position data\n\n      this.inputRingBuffer.push([input[0]]);\n\n      if (this.inputRingBuffer.framesAvailable >= this.bufferSize) {\n        this.inputRingBuffer.pull(this.inputRingBufferArraySequence);\n        var inputChannel = this.inputRingBufferArraySequence[0];\n        var position = inputChannel[inputChannel.length - 1] || 0;\n        this.port.postMessage({\n          name: 'position',\n          position: position\n        });\n      }\n\n      return true;\n    }\n  }]);\n\n  return SoundFileProcessor;\n}(_wrapNativeSuper(AudioWorkletProcessor));\n\nregisterProcessor(processorNames.soundFileProcessor, SoundFileProcessor);");

 }),
 (function(module, __webpack_exports__, __nested_webpack_require_90613__) {

"use strict";
__nested_webpack_require_90613__.r(__webpack_exports__);
 __webpack_exports__["default"] = ("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// import dependencies via preval.require so that they're available as values at compile time\nvar processorNames = {\n  \"recorderProcessor\": \"recorder-processor\",\n  \"soundFileProcessor\": \"sound-file-processor\",\n  \"amplitudeProcessor\": \"amplitude-processor\"\n};\nvar RingBuffer = {\n  \"default\":\n  /*#__PURE__*/\n  function () {\n    /**\n     * @constructor\n     * @param  {number} length Buffer length in frames.\n     * @param  {number} channelCount Buffer channel count.\n     */\n    function RingBuffer(length, channelCount) {\n      _classCallCheck(this, RingBuffer);\n\n      this._readIndex = 0;\n      this._writeIndex = 0;\n      this._framesAvailable = 0;\n      this._channelCount = channelCount;\n      this._length = length;\n      this._channelData = [];\n\n      for (var i = 0; i < this._channelCount; ++i) {\n        this._channelData[i] = new Float32Array(length);\n      }\n    }\n    /**\n     * Getter for Available frames in buffer.\n     *\n     * @return {number} Available frames in buffer.\n     */\n\n\n    _createClass(RingBuffer, [{\n      key: \"push\",\n\n      /**\n       * Push a sequence of Float32Arrays to buffer.\n       *\n       * @param  {array} arraySequence A sequence of Float32Arrays.\n       */\n      value: function push(arraySequence) {\n        // The channel count of arraySequence and the length of each channel must\n        // match with this buffer obejct.\n        // Transfer data from the |arraySequence| storage to the internal buffer.\n        var sourceLength = arraySequence[0] ? arraySequence[0].length : 0;\n\n        for (var i = 0; i < sourceLength; ++i) {\n          var writeIndex = (this._writeIndex + i) % this._length;\n\n          for (var channel = 0; channel < this._channelCount; ++channel) {\n            this._channelData[channel][writeIndex] = arraySequence[channel][i];\n          }\n        }\n\n        this._writeIndex += sourceLength;\n\n        if (this._writeIndex >= this._length) {\n          this._writeIndex = 0;\n        } // For excessive frames, the buffer will be overwritten.\n\n\n        this._framesAvailable += sourceLength;\n\n        if (this._framesAvailable > this._length) {\n          this._framesAvailable = this._length;\n        }\n      }\n      /**\n       * Pull data out of buffer and fill a given sequence of Float32Arrays.\n       *\n       * @param  {array} arraySequence An array of Float32Arrays.\n       */\n\n    }, {\n      key: \"pull\",\n      value: function pull(arraySequence) {\n        // The channel count of arraySequence and the length of each channel must\n        // match with this buffer obejct.\n        // If the FIFO is completely empty, do nothing.\n        if (this._framesAvailable === 0) {\n          return;\n        }\n\n        var destinationLength = arraySequence[0].length; // Transfer data from the internal buffer to the |arraySequence| storage.\n\n        for (var i = 0; i < destinationLength; ++i) {\n          var readIndex = (this._readIndex + i) % this._length;\n\n          for (var channel = 0; channel < this._channelCount; ++channel) {\n            arraySequence[channel][i] = this._channelData[channel][readIndex];\n          }\n        }\n\n        this._readIndex += destinationLength;\n\n        if (this._readIndex >= this._length) {\n          this._readIndex = 0;\n        }\n\n        this._framesAvailable -= destinationLength;\n\n        if (this._framesAvailable < 0) {\n          this._framesAvailable = 0;\n        }\n      }\n    }, {\n      key: \"framesAvailable\",\n      get: function get() {\n        return this._framesAvailable;\n      }\n    }]);\n\n    return RingBuffer;\n  }()\n}[\"default\"];\n\nvar AmplitudeProcessor =\n/*#__PURE__*/\nfunction (_AudioWorkletProcesso) {\n  _inherits(AmplitudeProcessor, _AudioWorkletProcesso);\n\n  function AmplitudeProcessor(options) {\n    var _this;\n\n    _classCallCheck(this, AmplitudeProcessor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AmplitudeProcessor).call(this));\n    var processorOptions = options.processorOptions || {};\n    _this.numOutputChannels = options.outputChannelCount || 1;\n    _this.numInputChannels = processorOptions.numInputChannels || 2;\n    _this.normalize = processorOptions.normalize || false;\n    _this.smoothing = processorOptions.smoothing || 0;\n    _this.bufferSize = processorOptions.bufferSize || 2048;\n    _this.inputRingBuffer = new RingBuffer(_this.bufferSize, _this.numInputChannels);\n    _this.outputRingBuffer = new RingBuffer(_this.bufferSize, _this.numOutputChannels);\n    _this.inputRingBufferArraySequence = new Array(_this.numInputChannels).fill(null).map(function () {\n      return new Float32Array(_this.bufferSize);\n    });\n    _this.stereoVol = [0, 0];\n    _this.stereoVolNorm = [0, 0];\n    _this.volMax = 0.001;\n\n    _this.port.onmessage = function (event) {\n      var data = event.data;\n\n      if (data.name === 'toggleNormalize') {\n        _this.normalize = data.normalize;\n      } else if (data.name === 'smoothing') {\n        _this.smoothing = Math.max(0, Math.min(1, data.smoothing));\n      }\n    };\n\n    return _this;\n  } // TO DO make this stereo / dependent on # of audio channels\n\n\n  _createClass(AmplitudeProcessor, [{\n    key: \"process\",\n    value: function process(inputs, outputs) {\n      var input = inputs[0];\n      var output = outputs[0];\n      var smoothing = this.smoothing;\n      this.inputRingBuffer.push(input);\n\n      if (this.inputRingBuffer.framesAvailable >= this.bufferSize) {\n        this.inputRingBuffer.pull(this.inputRingBufferArraySequence);\n\n        for (var channel = 0; channel < this.numInputChannels; ++channel) {\n          var inputBuffer = this.inputRingBufferArraySequence[channel];\n          var bufLength = inputBuffer.length;\n          var sum = 0;\n\n          for (var i = 0; i < bufLength; i++) {\n            var x = inputBuffer[i];\n\n            if (this.normalize) {\n              sum += Math.max(Math.min(x / this.volMax, 1), -1) * Math.max(Math.min(x / this.volMax, 1), -1);\n            } else {\n              sum += x * x;\n            }\n          } // ... then take the square root of the sum.\n\n\n          var rms = Math.sqrt(sum / bufLength);\n          this.stereoVol[channel] = Math.max(rms, this.stereoVol[channel] * smoothing);\n          this.volMax = Math.max(this.stereoVol[channel], this.volMax);\n        } // calculate stero normalized volume and add volume from all channels together\n\n\n        var volSum = 0;\n\n        for (var index = 0; index < this.stereoVol.length; index++) {\n          this.stereoVolNorm[index] = Math.max(Math.min(this.stereoVol[index] / this.volMax, 1), 0);\n          volSum += this.stereoVol[index];\n        } // volume is average of channels\n\n\n        var volume = volSum / this.stereoVol.length; // normalized value\n\n        var volNorm = Math.max(Math.min(volume / this.volMax, 1), 0);\n        this.port.postMessage({\n          name: 'amplitude',\n          volume: volume,\n          volNorm: volNorm,\n          stereoVol: this.stereoVol,\n          stereoVolNorm: this.stereoVolNorm\n        }); // pass input through to output\n\n        this.outputRingBuffer.push(this.inputRingBufferArraySequence);\n      } // pull 128 frames out of the ring buffer\n      // if the ring buffer does not have enough frames, the output will be silent\n\n\n      this.outputRingBuffer.pull(output);\n      return true;\n    }\n  }]);\n\n  return AmplitudeProcessor;\n}(_wrapNativeSuper(AudioWorkletProcessor));\n\nregisterProcessor(processorNames.amplitudeProcessor, AmplitudeProcessor);");

 }),
 (function(module, exports, __nested_webpack_require_102250__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_102250__(0),__nested_webpack_require_102250__(17)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){o.Frequency=function(e,t){if(!(this instanceof o.Frequency))return new o.Frequency(e,t);o.TimeBase.call(this,e,t)},o.extend(o.Frequency,o.TimeBase),o.Frequency.prototype._primaryExpressions=Object.create(o.TimeBase.prototype._primaryExpressions),o.Frequency.prototype._primaryExpressions.midi={regexp:/^(\d+(?:\.\d+)?midi)/,method:function(e){return this.midiToFrequency(e)}},o.Frequency.prototype._primaryExpressions.note={regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method:function(e,t){var r=n[e.toLowerCase()]+12*(parseInt(t)+1);return this.midiToFrequency(r)}},o.Frequency.prototype._primaryExpressions.tr={regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method:function(e,t,r){var n=1;return e&&"0"!==e&&(n*=this._beatsToUnits(this._timeSignature()*parseFloat(e))),t&&"0"!==t&&(n*=this._beatsToUnits(parseFloat(t))),r&&"0"!==r&&(n*=this._beatsToUnits(parseFloat(r)/4)),n}},o.Frequency.prototype.transpose=function(e){return this._expr=function(e,t){return e()*this.intervalToFrequencyRatio(t)}.bind(this,this._expr,e),this},o.Frequency.prototype.harmonize=function(e){return this._expr=function(e,t){for(var r=e(),n=[],o=0;o<t.length;o++)n[o]=r*this.intervalToFrequencyRatio(t[o]);return n}.bind(this,this._expr,e),this},o.Frequency.prototype.toMidi=function(){return this.frequencyToMidi(this.valueOf())},o.Frequency.prototype.toNote=function(){var e=this.valueOf(),t=Math.log(e/o.Frequency.A4)/Math.LN2,r=Math.round(12*t)+57,n=Math.floor(r/12);return n<0&&(r+=-12*n),i[r%12]+n.toString()},o.Frequency.prototype.toSeconds=function(){return 1/this.valueOf()},o.Frequency.prototype.toFrequency=function(){return this.valueOf()},o.Frequency.prototype.toTicks=function(){var e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*o.Transport.PPQ)},o.Frequency.prototype._frequencyToUnits=function(e){return e},o.Frequency.prototype._ticksToUnits=function(e){return 1/(60*e/(o.Transport.bpm.value*o.Transport.PPQ))},o.Frequency.prototype._beatsToUnits=function(e){return 1/o.TimeBase.prototype._beatsToUnits.call(this,e)},o.Frequency.prototype._secondsToUnits=function(e){return 1/e},o.Frequency.prototype._defaultUnits="hz";var n={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},i=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];return o.Frequency.A4=440,o.Frequency.prototype.midiToFrequency=function(e){return o.Frequency.A4*Math.pow(2,(e-69)/12)},o.Frequency.prototype.frequencyToMidi=function(e){return 69+12*Math.log(e/o.Frequency.A4)/Math.LN2},o.Frequency}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_105293__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_105293__(0),__nested_webpack_require_105293__(16)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(o){return o.TransportTime=function(t,r){if(!(this instanceof o.TransportTime))return new o.TransportTime(t,r);o.Time.call(this,t,r)},o.extend(o.TransportTime,o.Time),o.TransportTime.prototype._unaryExpressions=Object.create(o.Time.prototype._unaryExpressions),o.TransportTime.prototype._unaryExpressions.quantize={regexp:/^@/,method:function(t){var r=this._secondsToTicks(t()),e=Math.ceil(o.Transport.ticks/r);return this._ticksToUnits(e*r)}},o.TransportTime.prototype._secondsToTicks=function(t){var r=t/this._beatsToUnits(1);return Math.round(r*o.Transport.PPQ)},o.TransportTime.prototype.valueOf=function(){return this._secondsToTicks(this._expr())+(this._plusNow?o.Transport.ticks:0)},o.TransportTime.prototype.toTicks=function(){return this.valueOf()},o.TransportTime.prototype.toSeconds=function(){return this._expr()+(this._plusNow?o.Transport.seconds:0)},o.TransportTime.prototype.toFrequency=function(){return 1/this.toSeconds()},o.TransportTime}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_106645__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_106645__(0),__nested_webpack_require_106645__(4),__nested_webpack_require_106645__(13),__nested_webpack_require_106645__(1),__nested_webpack_require_106645__(33),__nested_webpack_require_106645__(21),__nested_webpack_require_106645__(34),__nested_webpack_require_106645__(20),__nested_webpack_require_106645__(35),__nested_webpack_require_106645__(36),__nested_webpack_require_106645__(37)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(p){"use strict";function r(e,n,r){var t=new e;return r._eval(n[0]).connect(t,0,0),r._eval(n[1]).connect(t,0,1),t}function t(e,n,r){var t=new e;return r._eval(n[0]).connect(t,0,0),t}function o(e){return e?parseFloat(e):void 0}function i(e){return e&&e.args?parseFloat(e.args):void 0}return p.Expr=function(){var n=this._replacements(Array.prototype.slice.call(arguments)),e=this._parseInputs(n);this._nodes=[],this.input=new Array(e);for(var r=0;r<e;r++)this.input[r]=this.context.createGain();var t,o=this._parseTree(n);try{t=this._eval(o)}catch(e){throw this._disposeNodes(),new Error("Tone.Expr: Could evaluate expression: "+n)}this.output=t},p.extend(p.Expr,p.SignalBase),p.Expr._Expressions={value:{signal:{regexp:/^\d+\.\d+|^\d+/,method:function(e){return new p.Signal(o(e))}},input:{regexp:/^\$\d/,method:function(e,n){return n.input[o(e.substr(1))]}}},glue:{"(":{regexp:/^\(/},")":{regexp:/^\)/},",":{regexp:/^,/}},func:{abs:{regexp:/^abs/,method:t.bind(this,p.Abs)},mod:{regexp:/^mod/,method:function(e,n){var r=i(e[1]),t=new p.Modulo(r);return n._eval(e[0]).connect(t),t}},pow:{regexp:/^pow/,method:function(e,n){var r=i(e[1]),t=new p.Pow(r);return n._eval(e[0]).connect(t),t}},a2g:{regexp:/^a2g/,method:function(e,n){var r=new p.AudioToGain;return n._eval(e[0]).connect(r),r}}},binary:{"+":{regexp:/^\+/,precedence:1,method:r.bind(this,p.Add)},"-":{regexp:/^\-/,precedence:1,method:function(e,n){return 1===e.length?t(p.Negate,e,n):r(p.Subtract,e,n)}},"*":{regexp:/^\*/,precedence:0,method:r.bind(this,p.Multiply)}},unary:{"-":{regexp:/^\-/,method:t.bind(this,p.Negate)},"!":{regexp:/^\!/,method:t.bind(this,p.NOT)}}},p.Expr.prototype._parseInputs=function(e){var n=e.match(/\$\d/g),r=0;if(null!==n)for(var t=0;t<n.length;t++){var o=parseInt(n[t].substr(1))+1;r=Math.max(r,o)}return r},p.Expr.prototype._replacements=function(e){for(var n=e.shift(),r=0;r<e.length;r++)n=n.replace(/\%/i,e[r]);return n},p.Expr.prototype._tokenize=function(e){for(var n=-1,r=[];0<e.length;){var t=o(e=e.trim());r.push(t),e=e.substr(t.value.length)}function o(e){for(var n in p.Expr._Expressions){var r=p.Expr._Expressions[n];for(var t in r){var o=r[t],i=o.regexp,a=e.match(i);if(null!==a)return{type:n,value:a[0],method:o.method}}}throw new SyntaxError("Tone.Expr: Unexpected token "+e)}return{next:function(){return r[++n]},peek:function(){return r[n+1]}}},p.Expr.prototype._parseTree=function(e){var t=this._tokenize(e),a=this.isUndef.bind(this);function r(e,n){return!a(e)&&"glue"===e.type&&e.value===n}function o(e,n,r){var t=p.Expr._Expressions[n];if(!a(e))for(var o in t){var i=t[o];if(i.regexp.test(e.value)){if(a(r))return!0;if(i.precedence===r)return!0}}return!1}function i(e){var n;a(e)&&(e=5),n=e<0?function e(){var n,r;n=t.peek();if(o(n,"unary"))return n=t.next(),r=e(),{operator:n.value,method:n.method,args:[r]};return s()}():i(e-1);for(var r=t.peek();o(r,"binary",e);)n={operator:(r=t.next()).value,method:r.method,args:[n,i(e-1)]},r=t.peek();return n}function s(){var e,n;if(e=t.peek(),a(e))throw new SyntaxError("Tone.Expr: Unexpected termination of expression");if("func"===e.type)return function(e){var n=[];if(!r(t.next(),"("))throw new SyntaxError('Tone.Expr: Expected ( in a function call "'+e.value+'"');r(t.peek(),")")||(n=function(){var e,n=[];for(;e=i(),!a(e)&&(n.push(e),r(t.peek(),","));)t.next();return n}());if(r(t.next(),")"))return{method:e.method,args:n,name:name};throw new SyntaxError('Tone.Expr: Expected ) in a function call "'+e.value+'"')}(e=t.next());if("value"===e.type)return{method:(e=t.next()).method,args:e.value};if(r(e,"(")){if(t.next(),n=i(),!r(e=t.next(),")"))throw new SyntaxError("Expected )");return n}throw new SyntaxError("Tone.Expr: Parse error, cannot process token "+e.value)}return i()},p.Expr.prototype._eval=function(e){if(!this.isUndef(e)){var n=e.method(e.args,this);return this._nodes.push(n),n}},p.Expr.prototype._disposeNodes=function(){for(var e=0;e<this._nodes.length;e++){var n=this._nodes[e];this.isFunction(n.dispose)?n.dispose():this.isFunction(n.disconnect)&&n.disconnect(),n=null,this._nodes[e]=null}this._nodes=null},p.Expr.prototype.dispose=function(){p.prototype.dispose.call(this),this._disposeNodes()},p.Expr}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_111434__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_111434__(0),__nested_webpack_require_111434__(21),__nested_webpack_require_111434__(13),__nested_webpack_require_111434__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(e){"use strict";return e.GreaterThan=function(t){this.createInsOuts(2,0),this._param=this.input[0]=new e.Subtract(t),this.input[1]=this._param.input[1],this._gtz=this.output=new e.GreaterThanZero,this._param.connect(this._gtz)},e.extend(e.GreaterThan,e.Signal),e.GreaterThan.prototype.dispose=function(){return e.prototype.dispose.call(this),this._param.dispose(),this._param=null,this._gtz.dispose(),this._gtz=null,this},e.GreaterThan}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_112314__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_112314__(0),__nested_webpack_require_112314__(6),__nested_webpack_require_112314__(15)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(s){"use strict";return s.Abs=function(){this._abs=this.input=this.output=new s.WaveShaper(function(s){return 0===s?0:Math.abs(s)},127)},s.extend(s.Abs,s.SignalBase),s.Abs.prototype.dispose=function(){return s.prototype.dispose.call(this),this._abs.dispose(),this._abs=null,this},s.Abs}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_113019__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_113019__(0),__nested_webpack_require_113019__(6),__nested_webpack_require_113019__(1),__nested_webpack_require_113019__(13)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i){"use strict";return i.Modulo=function(t){this.createInsOuts(1,0),this._shaper=new i.WaveShaper(Math.pow(2,16)),this._multiply=new i.Multiply,this._subtract=this.output=new i.Subtract,this._modSignal=new i.Signal(t),this.input.fan(this._shaper,this._subtract),this._modSignal.connect(this._multiply,0,0),this._shaper.connect(this._multiply,0,1),this._multiply.connect(this._subtract,0,1),this._setWaveShaper(t)},i.extend(i.Modulo,i.SignalBase),i.Modulo.prototype._setWaveShaper=function(i){this._shaper.setMap(function(t){return Math.floor((t+1e-4)/i)})},Object.defineProperty(i.Modulo.prototype,"value",{get:function(){return this._modSignal.value},set:function(t){this._modSignal.value=t,this._setWaveShaper(t)}}),i.Modulo.prototype.dispose=function(){return i.prototype.dispose.call(this),this._shaper.dispose(),this._shaper=null,this._multiply.dispose(),this._multiply=null,this._subtract.dispose(),this._subtract=null,this._modSignal.dispose(),this._modSignal=null,this},i.Modulo}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_114449__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_114449__(0),__nested_webpack_require_114449__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(t){"use strict";return t.Pow=function(e){this._exp=this.defaultArg(e,1),this._expScaler=this.input=this.output=new t.WaveShaper(this._expFunc(this._exp),8192)},t.extend(t.Pow,t.SignalBase),Object.defineProperty(t.Pow.prototype,"value",{get:function(){return this._exp},set:function(e){this._exp=e,this._expScaler.setMap(this._expFunc(this._exp))}}),t.Pow.prototype._expFunc=function(t){return function(e){return Math.pow(Math.abs(e),t)}},t.Pow.prototype.dispose=function(){return t.prototype.dispose.call(this),this._expScaler.dispose(),this._expScaler=null,this},t.Pow}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_115415__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_115415__(0),__nested_webpack_require_115415__(6),__nested_webpack_require_115415__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(n){"use strict";return n.AudioToGain=function(){this._norm=this.input=this.output=new n.WaveShaper(function(n){return(n+1)/2})},n.extend(n.AudioToGain,n.SignalBase),n.AudioToGain.prototype.dispose=function(){return n.prototype.dispose.call(this),this._norm.dispose(),this._norm=null,this},n.AudioToGain}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_116137__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_116137__(0),__nested_webpack_require_116137__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(e){"use strict";return e.EqualPowerGain=function(){this._eqPower=this.input=this.output=new e.WaveShaper(function(e){return Math.abs(e)<.001?0:this.equalPowerScale(e)}.bind(this),4096)},e.extend(e.EqualPowerGain,e.SignalBase),e.EqualPowerGain.prototype.dispose=function(){return e.prototype.dispose.call(this),this._eqPower.dispose(),this._eqPower=null,this},e.EqualPowerGain}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, exports, __nested_webpack_require_116909__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__nested_webpack_require_116909__(0),__nested_webpack_require_116909__(19),__nested_webpack_require_116909__(9)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(t){"use strict";return t.TimelineState=function(e){t.Timeline.call(this),this._initial=e},t.extend(t.TimelineState,t.Timeline),t.TimelineState.prototype.getValueAtTime=function(e){var t=this.get(e);return null!==t?t.state:this._initial},t.TimelineState.prototype.setStateAtTime=function(e,t){this.add({state:e,time:t})},t.TimelineState}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

 }),
 (function(module, __webpack_exports__, __nested_webpack_require_117677__) {

"use strict";
__nested_webpack_require_117677__.r(__webpack_exports__);

var audioworklet_polyfill = __nested_webpack_require_117677__(24);

var shims = __nested_webpack_require_117677__(25);

var audiocontext = __nested_webpack_require_117677__(3);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }


var main_Main = function Main() {
  _classCallCheck(this, Main);

  this.input = audiocontext["a" ].createGain();
  this.output = audiocontext["a" ].createGain(); 

  this.limiter = audiocontext["a" ].createDynamicsCompressor();
  this.limiter.threshold.value = -3;
  this.limiter.ratio.value = 20;
  this.limiter.knee.value = 1;
  this.audiocontext = audiocontext["a" ];
  this.output.disconnect(); 

  this.input.connect(this.limiter); 

  this.limiter.connect(this.output); 

  this.meter = audiocontext["a" ].createGain();
  this.fftMeter = audiocontext["a" ].createGain();
  this.output.connect(this.meter);
  this.output.connect(this.fftMeter); 

  this.output.connect(this.audiocontext.destination); 

  this.soundArray = []; 

  this.parts = []; 

  this.extensions = [];
}; 


var p5sound = new main_Main();
/**
 * Returns a number representing the output volume for sound
 * in this sketch.
 *
 * @method getOutputVolume
 * @return {Number} Output volume for sound in this sketch.
 *                  Should be between 0.0 (silence) and 1.0.
 */

p5.prototype.getOutputVolume = function () {
  return p5sound.output.gain.value;
};
/**
 *  <p>Scale the output of all sound in this sketch</p>
 *  Scaled between 0.0 (silence) and 1.0 (full volume).
 *  1.0 is the maximum amplitude of a digital sound, so multiplying
 *  by greater than 1.0 may cause digital distortion. To
 *  fade, provide a <code>rampTime</code> parameter. For more
 *  complex fades, see the Envelope class.
 *
 *  Alternately, you can pass in a signal source such as an
 *  oscillator to modulate the amplitude with an audio signal.
 *
 *  <p><b>How This Works</b>: When you load the p5.sound module, it
 *  creates a single instance of p5sound. All sound objects in this
 *  module output to p5sound before reaching your computer's output.
 *  So if you change the amplitude of p5sound, it impacts all of the
 *  sound in this module.</p>
 *
 *  <p>If no value is provided, returns a Web Audio API Gain Node</p>
 *
 *  @method  outputVolume
 *  @param {Number|Object} volume  Volume (amplitude) between 0.0
 *                                     and 1.0 or modulating signal/oscillator
 *  @param {Number} [rampTime]  Fade for t seconds
 *  @param {Number} [timeFromNow]  Schedule this event to happen at
 *                                 t seconds in the future
 */


p5.prototype.outputVolume = function (vol) {
  var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var tFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  if (typeof vol === 'number') {
    var now = p5sound.audiocontext.currentTime;
    var currentVol = p5sound.output.gain.value;
    p5sound.output.gain.cancelScheduledValues(now + tFromNow);
    p5sound.output.gain.linearRampToValueAtTime(currentVol, now + tFromNow);
    p5sound.output.gain.linearRampToValueAtTime(vol, now + tFromNow + rampTime);
  } else if (vol) {
    vol.connect(p5sound.output.gain);
  } else {
    return p5sound.output.gain;
  }
};
/**
 *  `p5.soundOut` is the p5.sound final output bus. It sends output to
 *  the destination of this window's web audio context. It contains
 *  Web Audio API nodes including a dyanmicsCompressor (<code>.limiter</code>),
 *  and Gain Nodes for <code>.input</code> and <code>.output</code>.
 *
 *  @property {Object} soundOut
 */


p5.prototype.soundOut = p5.soundOut = p5sound; 

p5.soundOut._silentNode = p5sound.audiocontext.createGain();
p5.soundOut._silentNode.gain.value = 0;

p5.soundOut._silentNode.connect(p5sound.audiocontext.destination);

 var main = (p5sound);
var processorNames = __nested_webpack_require_117677__(5);
var processorNames_default = __nested_webpack_require_117677__.n(processorNames);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



/**
 * @for p5
 */

/**
 * Returns a number representing the sample rate, in samples per second,
 * of all sound objects in this audio context. It is determined by the
 * sampling rate of your operating system's sound card, and it is not
 * currently possile to change.
 * It is often 44100, or twice the range of human hearing.
 *
 * @method sampleRate
 * @return {Number} samplerate samples per second
 */

function sampleRate() {
  return main.audiocontext.sampleRate;
}
/**
 *  Returns the closest MIDI note value for
 *  a given frequency.
 *
 *  @method freqToMidi
 *  @param  {Number} frequency A freqeuncy, for example, the "A"
 *                             above Middle C is 440Hz
 *  @return {Number}   MIDI note value
 */


function freqToMidi(f) {
  var mathlog2 = Math.log(f / 440) / Math.log(2);
  var m = Math.round(12 * mathlog2) + 69;
  return m;
}
/**
 *  Returns the frequency value of a MIDI note value.
 *  General MIDI treats notes as integers where middle C
 *  is 60, C# is 61, D is 62 etc. Useful for generating
 *  musical frequencies with oscillators.
 *
 *  @method  midiToFreq
 *  @param  {Number} midiNote The number of a MIDI note
 *  @return {Number} Frequency value of the given MIDI note
 *  @example
 *  <div><code>
 *  let midiNotes = [60, 64, 67, 72];
 *  let noteIndex = 0;
 *  let midiVal, freq;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(startSound);
 *    osc = new p5.TriOsc();
 *    env = new p5.Envelope();
 *  }
 *
 *  function draw() {
 *    background(220);
 *    text('tap to play', 10, 20);
 *    if (midiVal) {
 *      text('MIDI: ' + midiVal, 10, 40);
 *      text('Freq: ' + freq, 10, 60);
 *    }
 *  }
 *
 *  function startSound() {
 *    // see also: userStartAudio();
 *    osc.start();
 *
 *    midiVal = midiNotes[noteIndex % midiNotes.length];
 *    freq = midiToFreq(midiVal);
 *    osc.freq(freq);
 *    env.ramp(osc, 0, 1.0, 0);
 *
 *    noteIndex++;
 *  }
 *  </code></div>
 */


function midiToFreq(m) {
  return 440 * Math.pow(2, (m - 69) / 12.0);
} 


function noteToFreq(note) {
  if (typeof note !== 'string') {
    return note;
  }

  var wholeNotes = {
    A: 21,
    B: 23,
    C: 24,
    D: 26,
    E: 28,
    F: 29,
    G: 31
  };
  var value = wholeNotes[note[0].toUpperCase()];
  var octave = ~~note.slice(-1);
  value += 12 * (octave - 1);

  switch (note[1]) {
    case '#':
      value += 1;
      break;

    case 'b':
      value -= 1;
      break;

    default:
      break;
  }

  return midiToFreq(value);
}
/**
 *  List the SoundFile formats that you will include. LoadSound
 *  will search your directory for these extensions, and will pick
 *  a format that is compatable with the client's web browser.
 *  <a href="http://media.io/">Here</a> is a free online file
 *  converter.
 *
 *  @method soundFormats
 *  @param {String} [...formats] i.e. 'mp3', 'wav', 'ogg'
 *  @example
 *  <div><code>
 *  function preload() {
 *    // set the global sound formats
 *    soundFormats('mp3', 'ogg');
 *
 *    // load either beatbox.mp3, or .ogg, depending on browser
 *    mySound = loadSound('assets/beatbox.mp3');
 *  }
 *
 *  function setup() {
 *       let cnv = createCanvas(100, 100);
 *       background(220);
 *       text('sound loaded! tap to play', 10, 20, width - 20);
 *       cnv.mousePressed(function() {
 *         mySound.play();
 *       });
 *     }
 *  </code></div>
 */


function soundFormats() {
  main.extensions = []; 

  for (var i = 0; i < arguments.length; i++) {
    arguments[i] = arguments[i].toLowerCase();

    if (['mp3', 'wav', 'ogg', 'm4a', 'aac'].indexOf(arguments[i]) > -1) {
      main.extensions.push(arguments[i]);
    } else {
      throw arguments[i] + ' is not a valid sound format!';
    }
  }
}

function disposeSound() {
  for (var i = 0; i < main.soundArray.length; i++) {
    main.soundArray[i].dispose();
  }
}

function _checkFileFormats(paths) {
  var path; 

  if (typeof paths === 'string') {
    path = paths; 

    var extTest = path.split('.').pop(); 

    if (['mp3', 'wav', 'ogg', 'm4a', 'aac'].indexOf(extTest) > -1) {
      if (!p5.prototype.isFileSupported(extTest)) {
        var pathSplit = path.split('.');
        var pathCore = pathSplit[pathSplit.length - 1];

        for (var _i = 0; _i < main.extensions.length; _i++) {
          var _extension = main.extensions[_i];

          var _supported = p5.prototype.isFileSupported(_extension);

          if (_supported) {
            pathCore = '';

            if (pathSplit.length === 2) {
              pathCore += pathSplit[0];
            }

            for (var _i2 = 1; _i2 <= pathSplit.length - 2; _i2++) {
              var p = pathSplit[_i2];
              pathCore += '.' + p;
            }

            path = pathCore += '.';
            path = path += _extension;
            break;
          }
        }
      }
    } 
    else {
        for (var _i3 = 0; _i3 < main.extensions.length; _i3++) {
          var _extension2 = main.extensions[_i3];

          var _supported2 = p5.prototype.isFileSupported(_extension2);

          if (_supported2) {
            path = path + '.' + _extension2;
            break;
          }
        }
      }
  } 
  else if (_typeof(paths) === 'object') {
      for (var i = 0; i < paths.length; i++) {
        var extension = paths[i].split('.').pop();
        var supported = p5.prototype.isFileSupported(extension);

        if (supported) {
          path = paths[i];
          break;
        }
      }
    }

  return path;
}
/**
 *  Used by Osc and Envelope to chain signal math
 */


function _mathChain(o, math, thisChain, nextChain, type) {
  for (var i in o.mathOps) {
    if (o.mathOps[i] instanceof type) {
      o.mathOps[i].dispose();
      thisChain = i;

      if (thisChain < o.mathOps.length - 1) {
        nextChain = o.mathOps[i + 1];
      }
    }
  }

  o.mathOps[thisChain - 1].disconnect();
  o.mathOps[thisChain - 1].connect(math);
  math.connect(nextChain);
  o.mathOps[thisChain] = math;
  return o;
} 


function convertToWav(audioBuffer) {
  var leftChannel, rightChannel;
  leftChannel = audioBuffer.getChannelData(0); 

  if (audioBuffer.numberOfChannels > 1) {
    rightChannel = audioBuffer.getChannelData(1);
  } else {
    rightChannel = leftChannel;
  }

  var interleaved = interleave(leftChannel, rightChannel); 

  var buffer = new window.ArrayBuffer(44 + interleaved.length * 2);
  var view = new window.DataView(buffer); 

  writeUTFBytes(view, 0, 'RIFF');
  view.setUint32(4, 36 + interleaved.length * 2, true);
  writeUTFBytes(view, 8, 'WAVE'); 

  writeUTFBytes(view, 12, 'fmt ');
  view.setUint32(16, 16, true);
  view.setUint16(20, 1, true); 

  view.setUint16(22, 2, true);
  view.setUint32(24, main.audiocontext.sampleRate, true);
  view.setUint32(28, main.audiocontext.sampleRate * 4, true);
  view.setUint16(32, 4, true);
  view.setUint16(34, 16, true); 

  writeUTFBytes(view, 36, 'data');
  view.setUint32(40, interleaved.length * 2, true); 

  var lng = interleaved.length;
  var index = 44;
  var volume = 1;

  for (var i = 0; i < lng; i++) {
    view.setInt16(index, interleaved[i] * (0x7fff * volume), true);
    index += 2;
  }

  return view;
} 


function interleave(leftChannel, rightChannel) {
  var length = leftChannel.length + rightChannel.length;
  var result = new Float32Array(length);
  var inputIndex = 0;

  for (var index = 0; index < length;) {
    result[index++] = leftChannel[inputIndex];
    result[index++] = rightChannel[inputIndex];
    inputIndex++;
  }

  return result;
}

function writeUTFBytes(view, offset, string) {
  var lng = string.length;

  for (var i = 0; i < lng; i++) {
    view.setUint8(offset + i, string.charCodeAt(i));
  }
}

function safeBufferSize(idealBufferSize) {
  var bufferSize = idealBufferSize; 

  var tempAudioWorkletNode = new AudioWorkletNode(main.audiocontext, processorNames_default.a.soundFileProcessor);

  if (tempAudioWorkletNode instanceof ScriptProcessorNode) {
    bufferSize = tempAudioWorkletNode.bufferSize;
  }

  tempAudioWorkletNode.disconnect();
  tempAudioWorkletNode = null;
  return bufferSize;
}
/**
 * Save a p5.SoundFile as a .wav file. The browser will prompt the user
 * to download the file to their device.
 * For uploading audio to a server, use
 * <a href="/docs/reference/#/p5.SoundFile/saveBlob">`p5.SoundFile.saveBlob`</a>.
 *
 *  @for p5
 *  @method saveSound
 *  @param  {p5.SoundFile} soundFile p5.SoundFile that you wish to save
 *  @param  {String} fileName      name of the resulting .wav file.
 */


function saveSound(soundFile, fileName) {
  var dataView = convertToWav(soundFile.buffer);
  p5.prototype.writeFile([dataView], fileName, 'wav');
}


var CustomError = function CustomError(name, errorTrace, failedPath) {
  var err = new Error();
  var tempStack, splitStack;
  err.name = name;
  err.originalStack = err.stack + errorTrace;
  tempStack = err.stack + errorTrace;
  err.failedPath = failedPath; 

  splitStack = tempStack.split('\n').filter(function (ln) {
    return !ln.match(/(p5.|native code|globalInit)/g);
  });
  err.stack = splitStack.join('\n');
  return err; 
};

 var errorHandler = (CustomError);

var moduleSources = [__nested_webpack_require_117677__(27)["default"], __nested_webpack_require_117677__(28)["default"], __nested_webpack_require_117677__(29)["default"]];
var audioWorklet_ac = main.audiocontext;
var initializedAudioWorklets = false;

function loadAudioWorkletModules() {
  return Promise.all(moduleSources.map(function (moduleSrc) {
    var blob = new Blob([moduleSrc], {
      type: 'application/javascript'
    });
    var objectURL = URL.createObjectURL(blob);
    return audioWorklet_ac.audioWorklet.addModule(objectURL);
  }));
}

p5.prototype.registerMethod('init', function () {
  if (initializedAudioWorklets) return; 

  if (!this.preload && !window.preload) {
    this.preload = function () {};
  } 


  this._incrementPreload();

  var onWorkletModulesLoad = function () {
    initializedAudioWorklets = true;

    this._decrementPreload();
  }.bind(this);

  loadAudioWorkletModules().then(onWorkletModulesLoad);
});
function panner_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var panner_ac = main.audiocontext;
var panner; 

if (typeof panner_ac.createStereoPanner !== 'undefined') {
  var Panner =
  function () {
    function Panner(input, output) {
      panner_classCallCheck(this, Panner);

      this.stereoPanner = this.input = panner_ac.createStereoPanner();
      input.connect(this.stereoPanner);
      this.stereoPanner.connect(output);
    }

    _createClass(Panner, [{
      key: "pan",
      value: function pan(val, tFromNow) {
        var time = tFromNow || 0;
        var t = panner_ac.currentTime + time;
        this.stereoPanner.pan.linearRampToValueAtTime(val, t);
      } 

    }, {
      key: "inputChannels",
      value: function inputChannels() {}
    }, {
      key: "connect",
      value: function connect(obj) {
        this.stereoPanner.connect(obj);
      }
    }, {
      key: "disconnect",
      value: function disconnect() {
        if (this.stereoPanner) {
          this.stereoPanner.disconnect();
        }
      }
    }]);

    return Panner;
  }();

  panner = Panner;
} else {
  var _Panner =
  function () {
    function _Panner(input, output, numInputChannels) {
      panner_classCallCheck(this, _Panner);

      this.input = panner_ac.createGain();
      input.connect(this.input);
      this.left = panner_ac.createGain();
      this.right = panner_ac.createGain();
      this.left.channelInterpretation = 'discrete';
      this.right.channelInterpretation = 'discrete'; 

      if (numInputChannels > 1) {
        this.splitter = panner_ac.createChannelSplitter(2);
        this.input.connect(this.splitter);
        this.splitter.connect(this.left, 1);
        this.splitter.connect(this.right, 0);
      } else {
        this.input.connect(this.left);
        this.input.connect(this.right);
      }

      this.output = panner_ac.createChannelMerger(2);
      this.left.connect(this.output, 0, 1);
      this.right.connect(this.output, 0, 0);
      this.output.connect(output);
    } 


    _createClass(_Panner, [{
      key: "pan",
      value: function pan(val, tFromNow) {
        var time = tFromNow || 0;
        var t = panner_ac.currentTime + time;
        var v = (val + 1) / 2;
        var rightVal = Math.cos(v * Math.PI / 2);
        var leftVal = Math.sin(v * Math.PI / 2);
        this.left.gain.linearRampToValueAtTime(leftVal, t);
        this.right.gain.linearRampToValueAtTime(rightVal, t);
      }
    }, {
      key: "inputChannels",
      value: function inputChannels(numChannels) {
        if (numChannels === 1) {
          this.input.disconnect();
          this.input.connect(this.left);
          this.input.connect(this.right);
        } else if (numChannels === 2) {
          if (typeof this.splitter === 'undefined') {
            this.splitter = panner_ac.createChannelSplitter(2);
          }

          this.input.disconnect();
          this.input.connect(this.splitter);
          this.splitter.connect(this.left, 1);
          this.splitter.connect(this.right, 0);
        }
      }
    }, {
      key: "connect",
      value: function connect(obj) {
        this.output.connect(obj);
      }
    }, {
      key: "disconnect",
      value: function disconnect() {
        if (this.output) {
          this.output.disconnect();
        }
      }
    }]);

    return _Panner;
  }();

  panner = _Panner;
}

 var panner_0 = (panner);
function soundfile_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { soundfile_typeof = function _typeof(obj) { return typeof obj; }; } else { soundfile_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return soundfile_typeof(obj); }

function soundfile_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function soundfile_createClass(Constructor, protoProps, staticProps) { if (protoProps) soundfile_defineProperties(Constructor.prototype, protoProps); if (staticProps) soundfile_defineProperties(Constructor, staticProps); return Constructor; }

function soundfile_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }






var soundfile_ac = main.audiocontext;

var _createCounterBuffer = function _createCounterBuffer(buffer) {
  var len = buffer.length;
  var audioBuf = soundfile_ac.createBuffer(1, buffer.length, soundfile_ac.sampleRate);
  var arrayBuffer = audioBuf.getChannelData(0);

  for (var index = 0; index < len; index++) {
    arrayBuffer[index] = index;
  }

  return audioBuf;
};


var Cue = function Cue(callback, time, id, val) {
  soundfile_classCallCheck(this, Cue);

  this.callback = callback;
  this.time = time;
  this.id = id;
  this.val = val;
}; 


function _clearOnEnd(e) {
  var thisBufferSourceNode = e.target;
  var soundFile = this; 

  thisBufferSourceNode._playing = false;
  thisBufferSourceNode.removeEventListener('ended', soundFile._clearOnEnd); 

  soundFile._onended(soundFile); 


  soundFile.bufferSourceNodes.map(function (_, i) {
    return i;
  }).reverse().forEach(function (i) {
    var n = soundFile.bufferSourceNodes[i];

    if (n._playing === false) {
      soundFile.bufferSourceNodes.splice(i, 1);
    }
  });

  if (soundFile.bufferSourceNodes.length === 0) {
    soundFile._playing = false;
  }
}
/**
 *  <p>SoundFile object with a path to a file.</p>
 *
 *  <p>The p5.SoundFile may not be available immediately because
 *  it loads the file information asynchronously.</p>
 *
 *  <p>To do something with the sound as soon as it loads
 *  pass the name of a function as the second parameter.</p>
 *
 *  <p>Only one file path is required. However, audio file formats
 *  (i.e. mp3, ogg, wav and m4a/aac) are not supported by all
 *  web browsers. If you want to ensure compatability, instead of a single
 *  file path, you may include an Array of filepaths, and the browser will
 *  choose a format that works.</p>
 *
 *  @class p5.SoundFile
 *  @constructor
 *  @param {String|Array} path   path to a sound file (String). Optionally,
 *                               you may include multiple file formats in
 *                               an array. Alternately, accepts an object
 *                               from the HTML5 File API, or a p5.File.
 *  @param {Function} [successCallback]   Name of a function to call once file loads
 *  @param {Function} [errorCallback]   Name of a function to call if file fails to
 *                                      load. This function will receive an error or
 *                                     XMLHttpRequest object with information
 *                                     about what went wrong.
 *  @param {Function} [whileLoadingCallback]   Name of a function to call while file
 *                                             is loading. That function will
 *                                             receive progress of the request to
 *                                             load the sound file
 *                                             (between 0 and 1) as its first
 *                                             parameter. This progress
 *                                             does not account for the additional
 *                                             time needed to decode the audio data.
 *
 *  @example
 *  <div><code>
 *  let mySound;
 *  function preload() {
 *    soundFormats('mp3', 'ogg');
 *    mySound = loadSound('assets/doorbell');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(canvasPressed);
 *    background(220);
 *    text('tap here to play', 10, 20);
 *  }
 *
 *  function canvasPressed() {
 *    // playing a sound file on a user gesture
 *    // is equivalent to `userStartAudio()`
 *    mySound.play();
 *  }
 * </code></div>
 */


var soundfile_SoundFile =
function () {
  function SoundFile(paths, onload, onerror, whileLoading) {
    soundfile_classCallCheck(this, SoundFile);

    if (typeof paths !== 'undefined') {
      if (typeof paths === 'string' || typeof paths[0] === 'string') {
        var path = p5.prototype._checkFileFormats(paths);

        this.url = path;
      } else if (soundfile_typeof(paths) === 'object') {
        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {
          throw 'Unable to load file because the File API is not supported';
        }
      } 


      if (paths.file) {
        paths = paths.file;
      }

      this.file = paths;
    } 


    this._onended = function () {};

    this._looping = false;
    this._playing = false;
    this._paused = false;
    this._pauseTime = 0; 

    this._cues = [];
    this._cueIDCounter = 0; 

    this._lastPos = 0;
    this._counterNode = null;
    this._workletNode = null; 

    this.bufferSourceNodes = []; 

    this.bufferSourceNode = null;
    this.buffer = null;
    this.playbackRate = 1;
    this.input = main.audiocontext.createGain();
    this.output = main.audiocontext.createGain();
    this.reversed = false; 

    this.startTime = 0;
    this.endTime = null;
    this.pauseTime = 0; 

    this.mode = 'sustain'; 

    this.startMillis = null; 

    this.panPosition = 0.0;
    this.panner = new panner_0(this.output, main.input, 2); 

    if (this.url || this.file) {
      this.load(onload, onerror);
    } 


    main.soundArray.push(this);

    if (typeof whileLoading === 'function') {
      this._whileLoading = whileLoading;
    } else {
      this._whileLoading = function () {};
    }

    this._clearOnEnd = _clearOnEnd.bind(this); 

    this.amp = this.setVolume; 

    this.fade = this.setVolume;
  }
  /**
   * This is a helper function that the p5.SoundFile calls to load
   * itself. Accepts a callback (the name of another function)
   * as an optional parameter.
   *
   * @private
   * @for p5.SoundFile
   * @param {Function} [successCallback]   Name of a function to call once file loads
   * @param {Function} [errorCallback]   Name of a function to call if there is an error
   */


  soundfile_createClass(SoundFile, [{
    key: "load",
    value: function load(callback, errorCallback) {
      var self = this;
      var errorTrace = new Error().stack;

      if (this.url !== undefined && this.url !== '') {
        var request = new XMLHttpRequest();
        request.addEventListener('progress', function (evt) {
          self._updateProgress(evt);
        }, false);
        request.open('GET', this.url, true);
        request.responseType = 'arraybuffer';

        request.onload = function () {
          if (request.status === 200) {
            if (!self.panner) return;
            soundfile_ac.decodeAudioData(request.response, 
            function (buff) {
              if (!self.panner) return;
              self.buffer = buff;
              self.panner.inputChannels(buff.numberOfChannels);

              if (callback) {
                callback(self);
              }
            }, 
            function () {
              if (!self.panner) return;
              var err = new errorHandler('decodeAudioData', errorTrace, self.url);
              var msg = 'AudioContext error at decodeAudioData for ' + self.url;

              if (errorCallback) {
                err.msg = msg;
                errorCallback(err);
              } else {
                console.error(msg + '\n The error stack trace includes: \n' + err.stack);
              }
            });
          } 
          else {
              if (!self.panner) return;
              var err = new errorHandler('loadSound', errorTrace, self.url);
              var msg = 'Unable to load ' + self.url + '. The request status was: ' + request.status + ' (' + request.statusText + ')';

              if (errorCallback) {
                err.message = msg;
                errorCallback(err);
              } else {
                console.error(msg + '\n The error stack trace includes: \n' + err.stack);
              }
            }
        }; 


        request.onerror = function () {
          var err = new errorHandler('loadSound', errorTrace, self.url);
          var msg = 'There was no response from the server at ' + self.url + '. Check the url and internet connectivity.';

          if (errorCallback) {
            err.message = msg;
            errorCallback(err);
          } else {
            console.error(msg + '\n The error stack trace includes: \n' + err.stack);
          }
        };

        request.send();
      } else if (this.file !== undefined) {
        var reader = new FileReader();

        reader.onload = function () {
          if (!self.panner) return;
          soundfile_ac.decodeAudioData(reader.result, function (buff) {
            if (!self.panner) return;
            self.buffer = buff;
            self.panner.inputChannels(buff.numberOfChannels);

            if (callback) {
              callback(self);
            }
          });
        };

        reader.onerror = function (e) {
          if (!self.panner) return;

          if (onerror) {
            onerror(e);
          }
        };

        reader.readAsArrayBuffer(this.file);
      }
    } 

  }, {
    key: "_updateProgress",
    value: function _updateProgress(evt) {
      if (evt.lengthComputable) {
        var percentComplete = evt.loaded / evt.total * 0.99;

        this._whileLoading(percentComplete, evt); 

      } else {
        this._whileLoading('size unknown');
      }
    }
    /**
     *  Returns true if the sound file finished loading successfully.
     *
     *  @method  isLoaded
     *  @for p5.SoundFile
     *  @return {Boolean}
     */

  }, {
    key: "isLoaded",
    value: function isLoaded() {
      if (this.buffer) {
        return true;
      } else {
        return false;
      }
    }
    /**
     * Play the p5.SoundFile
     *
     * @method play
     * @for p5.SoundFile
     * @param {Number} [startTime]            (optional) schedule playback to start (in seconds from now).
     * @param {Number} [rate]             (optional) playback rate
     * @param {Number} [amp]              (optional) amplitude (volume)
     *                                     of playback
     * @param {Number} [cueStart]        (optional) cue start time in seconds
     * @param {Number} [duration]          (optional) duration of playback in seconds
     */

  }, {
    key: "play",
    value: function play(startTime, rate, amp, _cueStart, duration) {
      if (!this.output) {
        console.warn('SoundFile.play() called after dispose');
        return;
      }

      var now = main.audiocontext.currentTime;
      var cueStart, cueEnd;
      var time = startTime || 0;

      if (time < 0) {
        time = 0;
      }

      time = time + now;

      if (typeof rate !== 'undefined') {
        this.rate(rate);
      }

      if (typeof amp !== 'undefined') {
        this.setVolume(amp);
      } 


      if (this.buffer) {
        this._pauseTime = 0; 

        if (this.mode === 'restart' && this.buffer && this.bufferSourceNode) {
          this.bufferSourceNode.stop(time);

          this._counterNode.stop(time);
        } 


        if (this.mode === 'untildone' && this.isPlaying()) {
          return;
        } 


        this.bufferSourceNode = this._initSourceNode(); 

        delete this._counterNode;
        this._counterNode = this._initCounterNode();

        if (_cueStart) {
          if (_cueStart >= 0 && _cueStart < this.buffer.duration) {
            cueStart = _cueStart;
          } else {
            throw 'start time out of range';
          }
        } else {
          cueStart = 0;
        }

        if (duration) {
          duration = duration <= this.buffer.duration - cueStart ? duration : this.buffer.duration;
        } 


        if (this._paused) {
          this.bufferSourceNode.start(time, this.pauseTime, duration);

          this._counterNode.start(time, this.pauseTime, duration);
        } else {
          this.bufferSourceNode.start(time, cueStart, duration);

          this._counterNode.start(time, cueStart, duration);
        }

        this._playing = true;
        this._paused = false; 

        this.bufferSourceNodes.push(this.bufferSourceNode);
        this.bufferSourceNode._arrayIndex = this.bufferSourceNodes.length - 1;
        this.bufferSourceNode.addEventListener('ended', this._clearOnEnd);
      } 
      else {
          throw 'not ready to play file, buffer has yet to load. Try preload()';
        } 


      this.bufferSourceNode.loop = this._looping;
      this._counterNode.loop = this._looping;

      if (this._looping === true) {
        cueEnd = duration ? duration : cueStart - 0.000000000000001;
        this.bufferSourceNode.loopStart = cueStart;
        this.bufferSourceNode.loopEnd = cueEnd;
        this._counterNode.loopStart = cueStart;
        this._counterNode.loopEnd = cueEnd;
      }
    }
    /**
     *  p5.SoundFile has two play modes: <code>restart</code> and
     *  <code>sustain</code>. Play Mode determines what happens to a
     *  p5.SoundFile if it is triggered while in the middle of playback.
     *  In sustain mode, playback will continue simultaneous to the
     *  new playback. In restart mode, play() will stop playback
     *  and start over. With untilDone, a sound will play only if it's
     *  not already playing. Sustain is the default mode.
     *
     *  @method  playMode
     *  @for p5.SoundFile
     *  @param  {String} str 'restart' or 'sustain' or 'untilDone'
     *  @example
     *  <div><code>
     *  let mySound;
     *  function preload(){
     *    mySound = loadSound('assets/Damscray_DancingTiger.mp3');
     *  }
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    noFill();
     *    rect(0, height/2, width - 1, height/2 - 1);
     *    rect(0, 0, width - 1, height/2);
     *    textAlign(CENTER, CENTER);
     *    fill(20);
     *    text('restart', width/2, 1 * height/4);
     *    text('sustain', width/2, 3 * height/4);
     *  }
     *  function canvasPressed() {
     *    if (mouseX < height/2) {
     *      mySound.playMode('restart');
     *    } else {
     *      mySound.playMode('sustain');
     *    }
     *    mySound.play();
     *  }
     *
     * </code></div>
     */

  }, {
    key: "playMode",
    value: function playMode(str) {
      var s = str.toLowerCase(); 

      if (s === 'restart' && this.buffer && this.bufferSourceNode) {
        for (var i = 0; i < this.bufferSourceNodes.length - 1; i++) {
          var now = main.audiocontext.currentTime;
          this.bufferSourceNodes[i].stop(now);
        }
      } 


      if (s === 'restart' || s === 'sustain' || s === 'untildone') {
        this.mode = s;
      } else {
        throw 'Invalid play mode. Must be either "restart" or "sustain"';
      }
    }
    /**
     *  Pauses a file that is currently playing. If the file is not
     *  playing, then nothing will happen.
     *
     *  After pausing, .play() will resume from the paused
     *  position.
     *  If p5.SoundFile had been set to loop before it was paused,
     *  it will continue to loop after it is unpaused with .play().
     *
     *  @method pause
     *  @for p5.SoundFile
     *  @param {Number} [startTime] (optional) schedule event to occur
     *                               seconds from now
     *  @example
     *  <div><code>
     *  let soundFile;
     *  function preload() {
     *    soundFormats('ogg', 'mp3');
     *    soundFile = loadSound('assets/Damscray_-_Dancing_Tiger_02.mp3');
     *  }
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    background(220);
     *    text('tap to play, release to pause', 10, 20, width - 20);
     *  }
     *  function canvasPressed() {
     *    soundFile.loop();
     *    background(0, 200, 50);
     *  }
     *  function mouseReleased() {
     *    soundFile.pause();
     *    background(220);
     *  }
     *  </code>
     *  </div>
     */

  }, {
    key: "pause",
    value: function pause(startTime) {
      var now = main.audiocontext.currentTime;
      var time = startTime || 0;
      var pTime = time + now;

      if (this.isPlaying() && this.buffer && this.bufferSourceNode) {
        this._paused = true;
        this._playing = false;
        this.pauseTime = this.currentTime();
        this.bufferSourceNode.stop(pTime);

        this._counterNode.stop(pTime);

        this._pauseTime = this.currentTime(); 
      } else {
        this._pauseTime = 0;
      }
    }
    /**
     * Loop the p5.SoundFile. Accepts optional parameters to set the
     * playback rate, playback volume, loopStart, loopEnd.
     *
     * @method loop
     * @for p5.SoundFile
     * @param {Number} [startTime] (optional) schedule event to occur
     *                             seconds from now
     * @param {Number} [rate]        (optional) playback rate
     * @param {Number} [amp]         (optional) playback volume
     * @param {Number} [cueLoopStart] (optional) startTime in seconds
     * @param {Number} [duration]  (optional) loop duration in seconds
     * @example
     *  <div><code>
     *  let soundFile;
     *  let loopStart = 0.5;
     *  let loopDuration = 0.2;
     *  function preload() {
     *    soundFormats('ogg', 'mp3');
     *    soundFile = loadSound('assets/Damscray_-_Dancing_Tiger_02.mp3');
     *  }
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    background(220);
     *    text('tap to play, release to pause', 10, 20, width - 20);
     *  }
     *  function canvasPressed() {
     *    soundFile.loop();
     *    background(0, 200, 50);
     *  }
     *  function mouseReleased() {
     *    soundFile.pause();
     *    background(220);
     *  }
     *  </code>
     *  </div>
     */

  }, {
    key: "loop",
    value: function loop(startTime, rate, amp, loopStart, duration) {
      this._looping = true;
      this.play(startTime, rate, amp, loopStart, duration);
    }
    /**
     * Set a p5.SoundFile's looping flag to true or false. If the sound
     * is currently playing, this change will take effect when it
     * reaches the end of the current playback.
     *
     * @method setLoop
     * @for p5.SoundFile
     * @param {Boolean} Boolean   set looping to true or false
     */

  }, {
    key: "setLoop",
    value: function setLoop(bool) {
      if (bool === true) {
        this._looping = true;
      } else if (bool === false) {
        this._looping = false;
      } else {
        throw 'Error: setLoop accepts either true or false';
      }

      if (this.bufferSourceNode) {
        this.bufferSourceNode.loop = this._looping;
        this._counterNode.loop = this._looping;
      }
    }
    /**
     * Returns 'true' if a p5.SoundFile is currently looping and playing, 'false' if not.
     *
     * @method isLooping
     * @for p5.SoundFile
     * @return {Boolean}
     */

  }, {
    key: "isLooping",
    value: function isLooping() {
      if (!this.bufferSourceNode) {
        return false;
      }

      if (this._looping === true && this.isPlaying() === true) {
        return true;
      }

      return false;
    }
    /**
     *  Returns true if a p5.SoundFile is playing, false if not (i.e.
     *  paused or stopped).
     *
     *  @method isPlaying
     *  @for p5.SoundFile
     *  @return {Boolean}
     */

  }, {
    key: "isPlaying",
    value: function isPlaying() {
      return this._playing;
    }
    /**
     *  Returns true if a p5.SoundFile is paused, false if not (i.e.
     *  playing or stopped).
     *
     *  @method  isPaused
     *  @for p5.SoundFile
     *  @return {Boolean}
     */

  }, {
    key: "isPaused",
    value: function isPaused() {
      return this._paused;
    }
    /**
     * Stop soundfile playback.
     *
     * @method stop
     * @for p5.SoundFile
     * @param {Number} [startTime] (optional) schedule event to occur
     *                             in seconds from now
     */

  }, {
    key: "stop",
    value: function stop(timeFromNow) {
      var time = timeFromNow || 0;

      if (this.mode === 'sustain' || this.mode === 'untildone') {
        this.stopAll(time);
        this._playing = false;
        this.pauseTime = 0;
        this._paused = false;
      } else if (this.buffer && this.bufferSourceNode) {
        var now = main.audiocontext.currentTime;
        var t = time || 0;
        this.pauseTime = 0;
        this.bufferSourceNode.stop(now + t);

        this._counterNode.stop(now + t);

        this._playing = false;
        this._paused = false;
      }
    }
    /**
     *  Stop playback on all of this soundfile's sources.
     *  @private
     */

  }, {
    key: "stopAll",
    value: function stopAll(_time) {
      var now = main.audiocontext.currentTime;
      var time = _time || 0;

      if (this.buffer && this.bufferSourceNode) {
        for (var i in this.bufferSourceNodes) {
          var bufferSourceNode = this.bufferSourceNodes[i];

          if (bufferSourceNode) {
            try {
              bufferSourceNode.stop(now + time);
            } catch (e) {
            }
          }
        }

        this._counterNode.stop(now + time);
      }
    }
  }, {
    key: "getVolume",
    value: function getVolume() {
      return this.output.gain.value;
    }
    /**
     * Set the stereo panning of a p5.sound object to
     * a floating point number between -1.0 (left) and 1.0 (right).
     * Default is 0.0 (center).
     *
     * @method pan
     * @for p5.SoundFile
     * @param {Number} [panValue]     Set the stereo panner
     * @param {Number} [timeFromNow]  schedule this event to happen
     *                                 seconds from now
     * @example
     * <div><code>
     *  let ballX = 0;
     *  let soundFile;
     *
     *  function preload() {
     *    soundFormats('ogg', 'mp3');
     *    soundFile = loadSound('assets/beatbox.mp3');
     *  }
     *
     *  function draw() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    background(220);
     *    ballX = constrain(mouseX, 0, width);
     *    ellipse(ballX, height/2, 20, 20);
     *  }
     *
     *  function canvasPressed(){
     *    // map the ball's x location to a panning degree
     *    // between -1.0 (left) and 1.0 (right)
     *    let panning = map(ballX, 0., width,-1.0, 1.0);
     *    soundFile.pan(panning);
     *    soundFile.play();
     *  }
     *  </div></code>
     */

  }, {
    key: "pan",
    value: function pan(pval, tFromNow) {
      this.panPosition = pval;
      this.panner.pan(pval, tFromNow);
    }
    /**
     * Returns the current stereo pan position (-1.0 to 1.0)
     *
     * @method getPan
     * @for p5.SoundFile
     * @return {Number} Returns the stereo pan setting of the Oscillator
     *                          as a number between -1.0 (left) and 1.0 (right).
     *                          0.0 is center and default.
     */

  }, {
    key: "getPan",
    value: function getPan() {
      return this.panPosition;
    }
    /**
     *  Set the playback rate of a sound file. Will change the speed and the pitch.
     *  Values less than zero will reverse the audio buffer.
     *
     *  @method rate
     *  @for p5.SoundFile
     *  @param {Number} [playbackRate]     Set the playback rate. 1.0 is normal,
     *                                     .5 is half-speed, 2.0 is twice as fast.
     *                                     Values less than zero play backwards.
     *  @example
     *  <div><code>
     *  let mySound;
     *
     *  function preload() {
     *    mySound = loadSound('assets/Damscray_DancingTiger.mp3');
     *  }
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *  }
     *  function canvasPressed() {
     *    mySound.loop();
     *  }
     *  function mouseReleased() {
     *    mySound.pause();
     *  }
     *  function draw() {
     *    background(220);
     *
     *    // Set the rate to a range between 0.1 and 4
     *    // Changing the rate also alters the pitch
     *    let playbackRate = map(mouseY, 0.1, height, 2, 0);
     *    playbackRate = constrain(playbackRate, 0.01, 4);
     *    mySound.rate(playbackRate);
     *
     *    line(0, mouseY, width, mouseY);
     *    text('rate: ' + round(playbackRate * 100) + '%', 10, 20);
     *  }
     *
     * </code>
     * </div>
     *
     */

  }, {
    key: "rate",
    value: function rate(playbackRate) {
      var reverse = false;

      if (typeof playbackRate === 'undefined') {
        return this.playbackRate;
      }

      this.playbackRate = playbackRate;

      if (playbackRate === 0) {
        playbackRate = 0.0000000000001;
      } else if (playbackRate < 0 && !this.reversed) {
        playbackRate = Math.abs(playbackRate);
        reverse = true;
      } else if (playbackRate > 0 && this.reversed) {
        reverse = true;
      }

      if (this.bufferSourceNode) {
        var now = main.audiocontext.currentTime;
        this.bufferSourceNode.playbackRate.cancelScheduledValues(now);
        this.bufferSourceNode.playbackRate.linearRampToValueAtTime(Math.abs(playbackRate), now);

        this._counterNode.playbackRate.cancelScheduledValues(now);

        this._counterNode.playbackRate.linearRampToValueAtTime(Math.abs(playbackRate), now);
      }

      if (reverse) {
        this.reverseBuffer();
      }

      return this.playbackRate;
    } 

  }, {
    key: "setPitch",
    value: function setPitch(num) {
      var newPlaybackRate = midiToFreq(num) / midiToFreq(60);
      this.rate(newPlaybackRate);
    }
  }, {
    key: "getPlaybackRate",
    value: function getPlaybackRate() {
      return this.playbackRate;
    }
    /**
     *  Multiply the output volume (amplitude) of a sound file
     *  between 0.0 (silence) and 1.0 (full volume).
     *  1.0 is the maximum amplitude of a digital sound, so multiplying
     *  by greater than 1.0 may cause digital distortion. To
     *  fade, provide a <code>rampTime</code> parameter. For more
     *  complex fades, see the Envelope class.
     *
     *  Alternately, you can pass in a signal source such as an
     *  oscillator to modulate the amplitude with an audio signal.
     *
     *  @method  setVolume
     *  @for p5.SoundFile
     *  @param {Number|Object} volume  Volume (amplitude) between 0.0
     *                                     and 1.0 or modulating signal/oscillator
     *  @param {Number} [rampTime]  Fade for t seconds
     *  @param {Number} [timeFromNow]  Schedule this event to happen at
     *                                 t seconds in the future
     */

  }, {
    key: "setVolume",
    value: function setVolume(vol, _rampTime, _tFromNow) {
      if (typeof vol === 'number') {
        var rampTime = _rampTime || 0;
        var tFromNow = _tFromNow || 0;
        var now = main.audiocontext.currentTime;
        var currentVol = this.output.gain.value;
        this.output.gain.cancelScheduledValues(now + tFromNow);
        this.output.gain.linearRampToValueAtTime(currentVol, now + tFromNow);
        this.output.gain.linearRampToValueAtTime(vol, now + tFromNow + rampTime);
      } else if (vol) {
        vol.connect(this.output.gain);
      } else {
        return this.output.gain;
      }
    }
    /**
     * Returns the duration of a sound file in seconds.
     *
     * @method duration
     * @for p5.SoundFile
     * @return {Number} The duration of the soundFile in seconds.
     */

  }, {
    key: "duration",
    value: function duration() {
      if (this.buffer) {
        return this.buffer.duration;
      } else {
        return 0;
      }
    }
    /**
     * Return the current position of the p5.SoundFile playhead, in seconds.
     * Time is relative to the normal buffer direction, so if `reverseBuffer`
     * has been called, currentTime will count backwards.
     *
     * @method currentTime
     * @for p5.SoundFile
     * @return {Number}   currentTime of the soundFile in seconds.
     */

  }, {
    key: "currentTime",
    value: function currentTime() {
      return this.reversed ? Math.abs(this._lastPos - this.buffer.length) / soundfile_ac.sampleRate : this._lastPos / soundfile_ac.sampleRate;
    }
    /**
     * Move the playhead of a soundfile that is currently playing to a
     * new position and a new duration, in seconds.
     * If none are given, will reset the file to play entire duration
     * from start to finish. To set the position of a soundfile that is
     * not currently playing, use the `play` or `loop` methods.
     *
     * @method jump
     * @for p5.SoundFile
     * @param {Number} cueTime    cueTime of the soundFile in seconds.
     * @param {Number} duration    duration in seconds.
     */

  }, {
    key: "jump",
    value: function jump(cueTime, duration) {
      if (cueTime < 0 || cueTime > this.buffer.duration) {
        throw 'jump time out of range';
      }

      if (duration > this.buffer.duration - cueTime) {
        throw 'end time out of range';
      }

      var cTime = cueTime || 0;
      var dur = duration || undefined;

      if (this.isPlaying()) {
        this.stop(0);
        this.play(0, this.playbackRate, this.output.gain.value, cTime, dur);
      }
    }
    /**
     * Return the number of channels in a sound file.
     * For example, Mono = 1, Stereo = 2.
     *
     * @method channels
     * @for p5.SoundFile
     * @return {Number} [channels]
     */

  }, {
    key: "channels",
    value: function channels() {
      return this.buffer.numberOfChannels;
    }
    /**
     * Return the sample rate of the sound file.
     *
     * @method sampleRate
     * @for p5.SoundFile
     * @return {Number} [sampleRate]
     */

  }, {
    key: "sampleRate",
    value: function sampleRate() {
      return this.buffer.sampleRate;
    }
    /**
     * Return the number of samples in a sound file.
     * Equal to sampleRate * duration.
     *
     * @method frames
     * @for p5.SoundFile
     * @return {Number} [sampleCount]
     */

  }, {
    key: "frames",
    value: function frames() {
      return this.buffer.length;
    }
    /**
     * Returns an array of amplitude peaks in a p5.SoundFile that can be
     * used to draw a static waveform. Scans through the p5.SoundFile's
     * audio buffer to find the greatest amplitudes. Accepts one
     * parameter, 'length', which determines size of the array.
     * Larger arrays result in more precise waveform visualizations.
     *
     * Inspired by Wavesurfer.js.
     *
     * @method  getPeaks
     * @for p5.SoundFile
     * @params {Number} [length] length is the size of the returned array.
     *                          Larger length results in more precision.
     *                          Defaults to 5*width of the browser window.
     * @returns {Float32Array} Array of peaks.
     */

  }, {
    key: "getPeaks",
    value: function getPeaks(length) {
      if (this.buffer) {
        if (!length) {
          length = window.width * 5;
        }

        if (this.buffer) {
          var buffer = this.buffer;
          var sampleSize = buffer.length / length;
          var sampleStep = ~~(sampleSize / 10) || 1;
          var channels = buffer.numberOfChannels;
          var peaks = new Float32Array(Math.round(length));

          for (var c = 0; c < channels; c++) {
            var chan = buffer.getChannelData(c);

            for (var i = 0; i < length; i++) {
              var start = ~~(i * sampleSize);
              var end = ~~(start + sampleSize);
              var max = 0;

              for (var j = start; j < end; j += sampleStep) {
                var value = chan[j];

                if (value > max) {
                  max = value; 
                } else if (-value > max) {
                  max = value;
                }
              }

              if (c === 0 || Math.abs(max) > peaks[i]) {
                peaks[i] = max;
              }
            }
          }

          return peaks;
        }
      } else {
        throw 'Cannot load peaks yet, buffer is not loaded';
      }
    }
    /**
     *  Reverses the p5.SoundFile's buffer source.
     *  Playback must be handled separately (see example).
     *
     *  @method  reverseBuffer
     *  @for p5.SoundFile
     *  @example
     *  <div><code>
     *  let drum;
     *  function preload() {
     *    drum = loadSound('assets/drum.mp3');
     *  }
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    background(220);
     *    text('tap to play', 20, 20);
     *  }
     *
     *  function canvasPressed() {
     *    drum.stop();
     *    drum.reverseBuffer();
     *    drum.play();
     *  }
     * </code>
     * </div>
     */

  }, {
    key: "reverseBuffer",
    value: function reverseBuffer() {
      if (this.buffer) {
        var currentPos = this._lastPos / soundfile_ac.sampleRate;
        var curVol = this.getVolume();
        this.setVolume(0, 0.001);
        var numChannels = this.buffer.numberOfChannels;

        for (var i = 0; i < numChannels; i++) {
          this.buffer.getChannelData(i).reverse();
        } 


        this.reversed = !this.reversed;

        if (this.isPlaying() && currentPos) {
          this.jump(this.duration() - currentPos);
        }

        this.setVolume(curVol, 0.001);
      } else {
        throw 'SoundFile is not done loading';
      }
    }
    /**
     *  Schedule an event to be called when the soundfile
     *  reaches the end of a buffer. If the soundfile is
     *  playing through once, this will be called when it
     *  ends. If it is looping, it will be called when
     *  stop is called.
     *
     *  @method  onended
     *  @for p5.SoundFile
     *  @param  {Function} callback function to call when the
     *                              soundfile has ended.
     */

  }, {
    key: "onended",
    value: function onended(callback) {
      this._onended = callback;
      return this;
    }
  }, {
    key: "add",
    value: function add() {
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var now = main.audiocontext.currentTime; 

      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);
      this.stop(now);

      if (this.buffer && this.bufferSourceNode) {
        for (var i = 0; i < this.bufferSourceNodes.length - 1; i++) {
          if (this.bufferSourceNodes[i] !== null) {
            this.bufferSourceNodes[i].disconnect();

            try {
              this.bufferSourceNodes[i].stop(now);
            } catch (e) {
              console.warn('no buffer source node to dispose');
            }

            this.bufferSourceNodes[i] = null;
          }
        }

        if (this.isPlaying()) {
          try {
            this._counterNode.stop(now);
          } catch (e) {
            console.log(e);
          }

          this._counterNode = null;
        }
      }

      if (this.output) {
        this.output.disconnect();
        this.output = null;
      }

      if (this.panner) {
        this.panner.disconnect();
        this.panner = null;
      }
    }
    /**
     * Connects the output of a p5sound object to input of another
     * p5.sound object. For example, you may connect a p5.SoundFile to an
     * FFT or an Effect. If no parameter is given, it will connect to
     * the main output. Most p5sound objects connect to the master
     * output when they are created.
     *
     * @method connect
     * @for p5.SoundFile
     * @param {Object} [object] Audio object that accepts an input
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      if (!unit) {
        this.panner.connect(main.input);
      } else {
        if (unit.hasOwnProperty('input')) {
          this.panner.connect(unit.input);
        } else {
          this.panner.connect(unit);
        }
      }
    }
    /**
     * Disconnects the output of this p5sound object.
     *
     * @method disconnect
     * @for p5.SoundFile
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.panner) {
        this.panner.disconnect();
      }
    }
    /**
     */

  }, {
    key: "getLevel",
    value: function getLevel() {
      console.warn('p5.SoundFile.getLevel has been removed from the library. Use p5.Amplitude instead');
    }
    /**
     *  Reset the source for this SoundFile to a
     *  new path (URL).
     *
     *  @method  setPath
     *  @for p5.SoundFile
     *  @param {String}   path     path to audio file
     *  @param {Function} callback Callback
     */

  }, {
    key: "setPath",
    value: function setPath(p, callback) {
      var path = p5.prototype._checkFileFormats(p);

      this.url = path;
      this.load(callback);
    }
    /**
     *  Replace the current Audio Buffer with a new Buffer.
     *
     *  @method setBuffer
     *  @for p5.SoundFile
     *  @param {Array} buf Array of Float32 Array(s). 2 Float32 Arrays
     *                     will create a stereo source. 1 will create
     *                     a mono source.
     */

  }, {
    key: "setBuffer",
    value: function setBuffer(buf) {
      var numChannels = buf.length;
      var size = buf[0].length;
      var newBuffer = soundfile_ac.createBuffer(numChannels, size, soundfile_ac.sampleRate);

      if (!(buf[0] instanceof Float32Array)) {
        buf[0] = new Float32Array(buf[0]);
      }

      for (var channelNum = 0; channelNum < numChannels; channelNum++) {
        var channel = newBuffer.getChannelData(channelNum);
        channel.set(buf[channelNum]);
      }

      this.buffer = newBuffer; 

      this.panner.inputChannels(numChannels);
    } 

  }, {
    key: "_initCounterNode",
    value: function _initCounterNode() {
      var _this = this;

      var self = this;
      var now = soundfile_ac.currentTime;
      var cNode = soundfile_ac.createBufferSource();
      var workletBufferSize = safeBufferSize(256); 

      if (self._workletNode) {
        self._workletNode.disconnect();

        delete self._workletNode;
      }

      self._workletNode = new AudioWorkletNode(soundfile_ac, processorNames_default.a.soundFileProcessor, {
        processorOptions: {
          bufferSize: workletBufferSize
        }
      });

      self._workletNode.port.onmessage = function (event) {
        if (event.data.name === 'position') {
          if (event.data.position === 0) {
            return;
          }

          _this._lastPos = event.data.position; 

          _this._onTimeUpdate(self._lastPos);
        }
      }; 


      cNode.buffer = _createCounterBuffer(self.buffer);
      cNode.playbackRate.setValueAtTime(self.playbackRate, now);
      cNode.connect(self._workletNode);

      self._workletNode.connect(p5.soundOut._silentNode);

      return cNode;
    } 

  }, {
    key: "_initSourceNode",
    value: function _initSourceNode() {
      var bufferSourceNode = soundfile_ac.createBufferSource();
      bufferSourceNode.buffer = this.buffer;
      bufferSourceNode.playbackRate.value = this.playbackRate;
      bufferSourceNode.connect(this.output);
      return bufferSourceNode;
    }
  }, {
    key: "processPeaks",
    value: function processPeaks(callback, _initThreshold, _minThreshold, _minPeaks) {
      console.warn('processPeaks is deprecated');
    }
    /**
     *  Schedule events to trigger every time a MediaElement
     *  (audio/video) reaches a playback cue point.
     *
     *  Accepts a callback function, a time (in seconds) at which to trigger
     *  the callback, and an optional parameter for the callback.
     *
     *  Time will be passed as the first parameter to the callback function,
     *  and param will be the second parameter.
     *
     *
     *  @method  addCue
     *  @for p5.SoundFile
     *  @param {Number}   time     Time in seconds, relative to this media
     *                             element's playback. For example, to trigger
     *                             an event every time playback reaches two
     *                             seconds, pass in the number 2. This will be
     *                             passed as the first parameter to
     *                             the callback function.
     *  @param {Function} callback Name of a function that will be
     *                             called at the given time. The callback will
     *                             receive time and (optionally) param as its
     *                             two parameters.
     *  @param {Object} [value]    An object to be passed as the
     *                             second parameter to the
     *                             callback function.
     *  @return {Number} id ID of this cue,
     *                      useful for removeCue(id)
     *  @example
     *  <div><code>
     *  let mySound;
     *  function preload() {
     *    mySound = loadSound('assets/Damscray_DancingTiger.mp3');
     *  }
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    background(220);
     *    text('tap to play', 10, 20);
     *
     *    // schedule calls to changeText
     *    mySound.addCue(0, changeText, "hello" );
     *    mySound.addCue(0.5, changeText, "hello," );
     *    mySound.addCue(1, changeText, "hello, p5!");
     *    mySound.addCue(1.5, changeText, "hello, p5!!");
     *    mySound.addCue(2, changeText, "hello, p5!!!!!");
     *  }
     *
     *  function changeText(val) {
     *    background(220);
     *    text(val, 10, 20);
     *  }
     *
     *  function canvasPressed() {
     *    mySound.play();
     *  }
     *  </code></div>
     */

  }, {
    key: "addCue",
    value: function addCue(time, callback, val) {
      var id = this._cueIDCounter++;
      var cue = new Cue(callback, time, id, val);

      this._cues.push(cue); 


      return id;
    }
    /**
     *  Remove a callback based on its ID. The ID is returned by the
     *  addCue method.
     *
     *  @method removeCue
     *  @for p5.SoundFile
     *  @param  {Number} id ID of the cue, as returned by addCue
     */

  }, {
    key: "removeCue",
    value: function removeCue(id) {
      var cueLength = this._cues.length;

      for (var i = 0; i < cueLength; i++) {
        var cue = this._cues[i];

        if (cue.id === id) {
          this._cues.splice(i, 1);

          break;
        }
      }

      if (this._cues.length === 0) {
      }
    }
    /**
     *  Remove all of the callbacks that had originally been scheduled
     *  via the addCue method.
     *
     *  @method  clearCues
     */

  }, {
    key: "clearCues",
    value: function clearCues() {
      this._cues = []; 
    } 

  }, {
    key: "_onTimeUpdate",
    value: function _onTimeUpdate(position) {
      var playbackTime = position / this.buffer.sampleRate;
      var cueLength = this._cues.length;

      for (var i = 0; i < cueLength; i++) {
        var cue = this._cues[i];
        var callbackTime = cue.time;
        var val = cue.val;
        var leftLimit = this._prevUpdateTime || 0;
        var rightLimit = playbackTime;

        if (leftLimit <= callbackTime && callbackTime <= rightLimit) {
          cue.callback(val);
        }
      }

      this._prevUpdateTime = playbackTime;
    }
    /**
     * Save a p5.SoundFile as a .wav file. The browser will prompt the user
     * to download the file to their device. To upload a file to a server, see
     * <a href="/reference/#/p5.SoundFile/getBlob">getBlob</a>
     *
     * @method save
     * @for p5.SoundFile
     * @param  {String} [fileName]      name of the resulting .wav file.
     * @example
     *  <div><code>
     *  let mySound;
     *  function preload() {
     *    mySound = loadSound('assets/doorbell.mp3');
     *  }
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(canvasPressed);
     *    background(220);
     *    text('tap to download', 10, 20);
     *  }
     *
     *  function canvasPressed() {
     *    mySound.save('my cool filename');
     *  }
     * </code></div>
     */

  }, {
    key: "save",
    value: function save(fileName) {
      p5.prototype.saveSound(this, fileName, 'wav');
    }
    /**
     * This method is useful for sending a SoundFile to a server. It returns the
     * .wav-encoded audio data as a "<a target="_blank" title="Blob reference at
     * MDN" href="https://developer.mozilla.org/en-US/docs/Web/API/Blob">Blob</a>".
     * A Blob is a file-like data object that can be uploaded to a server
     * with an <a href="/reference/#/p5/httpDo">http</a> request. We'll
     * use the `httpDo` options object to send a POST request with some
     * specific options: we encode the request as `multipart/form-data`,
     * and attach the blob as one of the form values using `FormData`.
     *
     *
     * @method getBlob
     * @for p5.SoundFile
     * @returns {Blob} A file-like data object
     * @example
     *  <div><code>
     *  function preload() {
     *    mySound = loadSound('assets/doorbell.mp3');
     *  }
     *
     *  function setup() {
     *    noCanvas();
     *    let soundBlob = mySound.getBlob();
     *
     *    // Now we can send the blob to a server...
     *    let serverUrl = 'https://jsonplaceholder.typicode.com/posts';
     *    let httpRequestOptions = {
     *      method: 'POST',
     *      body: new FormData().append('soundBlob', soundBlob),
     *      headers: new Headers({
     *        'Content-Type': 'multipart/form-data'
     *      })
     *    };
     *    httpDo(serverUrl, httpRequestOptions);
     *
     *    // We can also create an `ObjectURL` pointing to the Blob
     *    let blobUrl = URL.createObjectURL(soundBlob);
     *
     *    // The `<Audio>` Element accepts Object URL's
     *    createAudio(blobUrl).showControls();
     *
     *    createDiv();
     *
     *    // The ObjectURL exists as long as this tab is open
     *    let input = createInput(blobUrl);
     *    input.attribute('readonly', true);
     *    input.mouseClicked(function() { input.elt.select() });
     *  }
     *
     * </code></div>
     */

  }, {
    key: "getBlob",
    value: function getBlob() {
      var dataView = convertToWav(this.buffer);
      return new Blob([dataView], {
        type: 'audio/wav'
      });
    }
  }]);

  return SoundFile;
}();
/**
 *  loadSound() returns a new p5.SoundFile from a specified
 *  path. If called during preload(), the p5.SoundFile will be ready
 *  to play in time for setup() and draw(). If called outside of
 *  preload, the p5.SoundFile will not be ready immediately, so
 *  loadSound accepts a callback as the second parameter. Using a
 *  <a href="https://github.com/processing/p5.js/wiki/Local-server">
 *  local server</a> is recommended when loading external files.
 *
 *  @method loadSound
 *  @for p5
 *  @param  {String|Array}   path     Path to the sound file, or an array with
 *                                    paths to soundfiles in multiple formats
 *                                    i.e. ['sound.ogg', 'sound.mp3'].
 *                                    Alternately, accepts an object: either
 *                                    from the HTML5 File API, or a p5.File.
 *  @param {Function} [successCallback]   Name of a function to call once file loads
 *  @param {Function} [errorCallback]   Name of a function to call if there is
 *                                      an error loading the file.
 *  @param {Function} [whileLoading] Name of a function to call while file is loading.
 *                                 This function will receive the percentage loaded
 *                                 so far, from 0.0 to 1.0.
 *  @return {SoundFile}            Returns a p5.SoundFile
 *  @example
 *  <div><code>
 *  let mySound;
 *  function preload() {
 *    soundFormats('mp3', 'ogg');
 *    mySound = loadSound('assets/doorbell');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(canvasPressed);
 *    background(220);
 *    text('tap here to play', 10, 20);
 *  }
 *
 *  function canvasPressed() {
 *    // playing a sound file on a user gesture
 *    // is equivalent to `userStartAudio()`
 *    mySound.play();
 *  }
 *  </code></div>
 */


function loadSound(path, callback, onerror, whileLoading) {
  if (window.location.origin.indexOf('file://') > -1 && window.cordova === 'undefined') {
    window.alert('This sketch may require a server to load external files. Please see http://bit.ly/1qcInwS');
  }

  var self = this;
  var s = new soundfile_SoundFile(path, function () {
    if (typeof callback === 'function') {
      callback.apply(self, arguments);
    }

    if (typeof self._decrementPreload === 'function') {
      self._decrementPreload();
    }
  }, onerror, whileLoading);
  return s;
}

 var soundfile = (soundfile_SoundFile);

function amplitude_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function amplitude_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function amplitude_createClass(Constructor, protoProps, staticProps) { if (protoProps) amplitude_defineProperties(Constructor.prototype, protoProps); if (staticProps) amplitude_defineProperties(Constructor, staticProps); return Constructor; }




/**
 *  Amplitude measures volume between 0.0 and 1.0.
 *  Listens to all p5sound by default, or use setInput()
 *  to listen to a specific sound source. Accepts an optional
 *  smoothing value, which defaults to 0.
 *
 *  @class p5.Amplitude
 *  @constructor
 *  @param {Number} [smoothing] between 0.0 and .999 to smooth
 *                             amplitude readings (defaults to 0)
 *  @example
 *  <div><code>
 *  let sound, amplitude;
 *
 *  function preload(){
 *    sound = loadSound('assets/beat.mp3');
 *  }
 *  function setup() {
 *    let cnv = createCanvas(100,100);
 *    cnv.mouseClicked(togglePlay);
 *    amplitude = new p5.Amplitude();
 *  }
 *
 *  function draw() {
 *    background(220);
 *    text('tap to play', 20, 20);
 *
 *    let level = amplitude.getLevel();
 *    let size = map(level, 0, 1, 0, 200);
 *    ellipse(width/2, height/2, size, size);
 *  }
 *
 *  function togglePlay() {
 *    if (sound.isPlaying() ){
 *      sound.pause();
 *    } else {
 *      sound.loop();
 *		amplitude = new p5.Amplitude();
 *		amplitude.setInput(sound);
 *    }
 *  }
 *
 *  </code></div>
 */

var amplitude_Amplitude =
function () {
  function Amplitude(smoothing) {
    amplitude_classCallCheck(this, Amplitude);

    this.bufferSize = safeBufferSize(2048); 

    this.audiocontext = main.audiocontext;
    this._workletNode = new AudioWorkletNode(this.audiocontext, processorNames_default.a.amplitudeProcessor, {
      outputChannelCount: [1],
      parameterData: {
        smoothing: smoothing || 0
      },
      processorOptions: {
        normalize: false,
        smoothing: smoothing || 0,
        numInputChannels: 2,
        bufferSize: this.bufferSize
      }
    });

    this._workletNode.port.onmessage = function (event) {
      if (event.data.name === 'amplitude') {
        this.volume = event.data.volume;
        this.volNorm = event.data.volNorm;
        this.stereoVol = event.data.stereoVol;
        this.stereoVolNorm = event.data.stereoVolNorm;
      }
    }.bind(this); 


    this.input = this._workletNode;
    this.output = this.audiocontext.createGain(); 

    this.volume = 0;
    this.volNorm = 0;
    this.stereoVol = [0, 0];
    this.stereoVolNorm = [0, 0];
    this.normalize = false;

    this._workletNode.connect(this.output);

    this.output.gain.value = 0; 

    this.output.connect(this.audiocontext.destination); 

    main.meter.connect(this._workletNode); 

    main.soundArray.push(this);
  }
  /**
   *  Connects to the p5sound instance (main output) by default.
   *  Optionally, you can pass in a specific source (i.e. a soundfile).
   *
   *  @method setInput
   *  @for p5.Amplitude
   *  @param {soundObject|undefined} [snd] set the sound source
   *                                       (optional, defaults to
   *                                       main output)
   *  @param {Number|undefined} [smoothing] a range between 0.0 and 1.0
   *                                        to smooth amplitude readings
   *  @example
   *  <div><code>
   *  function preload(){
   *    sound1 = loadSound('assets/beat.mp3');
   *    sound2 = loadSound('assets/drum.mp3');
   *  }
   *  function setup(){
   *    cnv = createCanvas(100, 100);
   *    cnv.mouseClicked(toggleSound);
   *
   *    amplitude = new p5.Amplitude();
   *    amplitude.setInput(sound2);
   *  }
   *
   *  function draw() {
   *    background(220);
   *    text('tap to play', 20, 20);
   *
   *    let level = amplitude.getLevel();
   *    let size = map(level, 0, 1, 0, 200);
   *    ellipse(width/2, height/2, size, size);
   *  }
   *
   *  function toggleSound(){
   *    if (sound1.isPlaying() && sound2.isPlaying()) {
   *      sound1.stop();
   *      sound2.stop();
   *    } else {
   *      sound1.play();
   *      sound2.play();
   *    }
   *  }
   *  </code></div>
   */


  amplitude_createClass(Amplitude, [{
    key: "setInput",
    value: function setInput(source, smoothing) {
      main.meter.disconnect();

      if (smoothing) {
        this._workletNode.parameters.get('smoothing').value = smoothing;
      } 


      if (source == null) {
        console.log('Amplitude input source is not ready! Connecting to main output instead');
        main.meter.connect(this._workletNode);
      } 
      else if (source) {
          source.connect(this._workletNode);

          this._workletNode.disconnect();

          this._workletNode.connect(this.output);
        } 
        else {
            main.meter.connect(this._workletNode);
          }
    }
  }, {
    key: "connect",
    value: function connect(unit) {
      if (unit) {
        if (unit.hasOwnProperty('input')) {
          this.output.connect(unit.input);
        } else {
          this.output.connect(unit);
        }
      } else {
        this.output.connect(this.panner.connect(main.input));
      }
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect();
      }
    }
    /**
     *  Returns a single Amplitude reading at the moment it is called.
     *  For continuous readings, run in the draw loop.
     *
     *  @method getLevel
     *  @for p5.Amplitude
     *  @param {Number} [channel] Optionally return only channel 0 (left) or 1 (right)
     *  @return {Number}       Amplitude as a number between 0.0 and 1.0
     *  @example
     *  <div><code>
     *  function preload(){
     *    sound = loadSound('assets/beat.mp3');
     *  }
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mouseClicked(toggleSound);
     *    amplitude = new p5.Amplitude();
     *  }
     *
     *  function draw() {
     *    background(220, 150);
     *    textAlign(CENTER);
     *    text('tap to play', width/2, 20);
     *
     *    let level = amplitude.getLevel();
     *    let size = map(level, 0, 1, 0, 200);
     *    ellipse(width/2, height/2, size, size);
     *  }
     *
     *  function toggleSound(){
     *    if (sound.isPlaying()) {
     *      sound.stop();
     *    } else {
     *      sound.play();
     *    }
     *  }
     *  </code></div>
     */

  }, {
    key: "getLevel",
    value: function getLevel(channel) {
      if (typeof channel !== 'undefined') {
        if (this.normalize) {
          return this.stereoVolNorm[channel];
        } else {
          return this.stereoVol[channel];
        }
      } else if (this.normalize) {
        return this.volNorm;
      } else {
        return this.volume;
      }
    }
    /**
     * Determines whether the results of Amplitude.process() will be
     * Normalized. To normalize, Amplitude finds the difference the
     * loudest reading it has processed and the maximum amplitude of
     * 1.0. Amplitude adds this difference to all values to produce
     * results that will reliably map between 0.0 and 1.0. However,
     * if a louder moment occurs, the amount that Normalize adds to
     * all the values will change. Accepts an optional boolean parameter
     * (true or false). Normalizing is off by default.
     *
     * @method toggleNormalize
     * @for p5.Amplitude
     * @param {boolean} [boolean] set normalize to true (1) or false (0)
     */

  }, {
    key: "toggleNormalize",
    value: function toggleNormalize(bool) {
      if (typeof bool === 'boolean') {
        this.normalize = bool;
      } else {
        this.normalize = !this.normalize;
      }

      this._workletNode.port.postMessage({
        name: 'toggleNormalize',
        normalize: this.normalize
      });
    }
    /**
     *  Smooth Amplitude analysis by averaging with the last analysis
     *  frame. Off by default.
     *
     *  @method smooth
     *  @for p5.Amplitude
     *  @param {Number} set smoothing from 0.0 <= 1
     */

  }, {
    key: "smooth",
    value: function smooth(s) {
      if (s >= 0 && s < 1) {
        this._workletNode.port.postMessage({
          name: 'smoothing',
          smoothing: s
        });
      } else {
        console.log('Error: smoothing must be between 0 and 1');
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      if (this.input) {
        this.input.disconnect();
        delete this.input;
      }

      if (this.output) {
        this.output.disconnect();
        delete this.output;
      }

      this._workletNode.disconnect();

      delete this._workletNode;
    }
  }]);

  return Amplitude;
}();

 var amplitude = (amplitude_Amplitude);
function fft_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function fft_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function fft_createClass(Constructor, protoProps, staticProps) { if (protoProps) fft_defineProperties(Constructor.prototype, protoProps); if (staticProps) fft_defineProperties(Constructor, staticProps); return Constructor; }


/**
 *  <p>FFT (Fast Fourier Transform) is an analysis algorithm that
 *  isolates individual
 *  <a href="https://en.wikipedia.org/wiki/Audio_frequency">
 *  audio frequencies</a> within a waveform.</p>
 *
 *  <p>Once instantiated, a p5.FFT object can return an array based on
 *  two types of analyses: <br> • <code>FFT.waveform()</code> computes
 *  amplitude values along the time domain. The array indices correspond
 *  to samples across a brief moment in time. Each value represents
 *  amplitude of the waveform at that sample of time.<br>
 *  • <code>FFT.analyze() </code> computes amplitude values along the
 *  frequency domain. The array indices correspond to frequencies (i.e.
 *  pitches), from the lowest to the highest that humans can hear. Each
 *  value represents amplitude at that slice of the frequency spectrum.
 *  Use with <code>getEnergy()</code> to measure amplitude at specific
 *  frequencies, or within a range of frequencies. </p>
 *
 *  <p>FFT analyzes a very short snapshot of sound called a sample
 *  buffer. It returns an array of amplitude measurements, referred
 *  to as <code>bins</code>. The array is 1024 bins long by default.
 *  You can change the bin array length, but it must be a power of 2
 *  between 16 and 1024 in order for the FFT algorithm to function
 *  correctly. The actual size of the FFT buffer is twice the
 *  number of bins, so given a standard sample rate, the buffer is
 *  2048/44100 seconds long.</p>
 *
 *
 *  @class p5.FFT
 *  @constructor
 *  @param {Number} [smoothing]   Smooth results of Freq Spectrum.
 *                                0.0 < smoothing < 1.0.
 *                                Defaults to 0.8.
 *  @param {Number} [bins]    Length of resulting array.
 *                            Must be a power of two between
 *                            16 and 1024. Defaults to 1024.
 *  @example
 *  <div><code>
 *  function preload(){
 *    sound = loadSound('assets/Damscray_DancingTiger.mp3');
 *  }
 *
 *  function setup(){
 *    let cnv = createCanvas(100,100);
 *    cnv.mouseClicked(togglePlay);
 *    fft = new p5.FFT();
 *    sound.amp(0.2);
 *  }
 *
 *  function draw(){
 *    background(220);
 *
 *    let spectrum = fft.analyze();
 *    noStroke();
 *    fill(255, 0, 255);
 *    for (let i = 0; i< spectrum.length; i++){
 *      let x = map(i, 0, spectrum.length, 0, width);
 *      let h = -height + map(spectrum[i], 0, 255, height, 0);
 *      rect(x, height, width / spectrum.length, h )
 *    }
 *
 *    let waveform = fft.waveform();
 *    noFill();
 *    beginShape();
 *    stroke(20);
 *    for (let i = 0; i < waveform.length; i++){
 *      let x = map(i, 0, waveform.length, 0, width);
 *      let y = map( waveform[i], -1, 1, 0, height);
 *      vertex(x,y);
 *    }
 *    endShape();
 *
 *    text('tap to play', 20, 20);
 *  }
 *
 *  function togglePlay() {
 *    if (sound.isPlaying()) {
 *      sound.pause();
 *    } else {
 *      sound.loop();
 *    }
 *  }
 *  </code></div>
 */

var fft_FFT =
function () {
  function FFT(smoothing, bins) {
    fft_classCallCheck(this, FFT);

    this.input = this.analyser = main.audiocontext.createAnalyser();
    Object.defineProperties(this, {
      bins: {
        get: function get() {
          return this.analyser.fftSize / 2;
        },
        set: function set(b) {
          this.analyser.fftSize = b * 2;
        },
        configurable: true,
        enumerable: true
      },
      smoothing: {
        get: function get() {
          return this.analyser.smoothingTimeConstant;
        },
        set: function set(s) {
          this.analyser.smoothingTimeConstant = s;
        },
        configurable: true,
        enumerable: true
      }
    }); 

    this.smooth(smoothing);
    this.bins = bins || 1024; 

    main.fftMeter.connect(this.analyser);
    this.freqDomain = new Uint8Array(this.analyser.frequencyBinCount);
    this.timeDomain = new Uint8Array(this.analyser.frequencyBinCount); 

    this.bass = [20, 140];
    this.lowMid = [140, 400];
    this.mid = [400, 2600];
    this.highMid = [2600, 5200];
    this.treble = [5200, 14000]; 

    main.soundArray.push(this);
  }
  /**
   *  Set the input source for the FFT analysis. If no source is
   *  provided, FFT will analyze all sound in the sketch.
   *
   *  @method  setInput
   *  @for p5.FFT
   *  @param {Object} [source] p5.sound object (or web audio API source node)
   */


  fft_createClass(FFT, [{
    key: "setInput",
    value: function setInput(source) {
      if (!source) {
        main.fftMeter.connect(this.analyser);
      } else {
        if (source.output) {
          source.output.connect(this.analyser);
        } else if (source.connect) {
          source.connect(this.analyser);
        }

        main.fftMeter.disconnect();
      }
    }
    /**
     *  Returns an array of amplitude values (between -1.0 and +1.0) that represent
     *  a snapshot of amplitude readings in a single buffer. Length will be
     *  equal to bins (defaults to 1024). Can be used to draw the waveform
     *  of a sound.
     *
     *  @method waveform
     *  @for p5.FFT
     *  @param {Number} [bins]    Must be a power of two between
     *                            16 and 1024. Defaults to 1024.
     *  @param {String} [precision] If any value is provided, will return results
     *                              in a Float32 Array which is more precise
     *                              than a regular array.
     *  @return {Array}  Array    Array of amplitude values (-1 to 1)
     *                            over time. Array length = bins.
     *
     */

  }, {
    key: "waveform",
    value: function waveform() {
      var bins, mode;
      var normalArray = new Array();

      for (var i = 0; i < arguments.length; i++) {
        if (typeof arguments[i] === 'number') {
          bins = arguments[i];
          this.analyser.fftSize = bins * 2;
        }

        if (typeof arguments[i] === 'string') {
          mode = arguments[i];
        }
      } 


      if (mode && !p5.prototype._isSafari()) {
        timeToFloat(this, this.timeDomain);
        this.analyser.getFloatTimeDomainData(this.timeDomain);
        return this.timeDomain;
      } else {
        timeToInt(this, this.timeDomain);
        this.analyser.getByteTimeDomainData(this.timeDomain);

        for (var j = 0; j < this.timeDomain.length; j++) {
          var scaled = p5.prototype.map(this.timeDomain[j], 0, 255, -1, 1);
          normalArray.push(scaled);
        }

        return normalArray;
      }
    }
    /**
     *  Returns an array of amplitude values (between 0 and 255)
     *  across the frequency spectrum. Length is equal to FFT bins
     *  (1024 by default). The array indices correspond to frequencies
     *  (i.e. pitches), from the lowest to the highest that humans can
     *  hear. Each value represents amplitude at that slice of the
     *  frequency spectrum. Must be called prior to using
     *  <code>getEnergy()</code>.
     *
     *  @method analyze
     *  @for p5.FFT
     *  @param {Number} [bins]    Must be a power of two between
     *                             16 and 1024. Defaults to 1024.
     *  @param {Number} [scale]    If "dB," returns decibel
     *                             float measurements between
     *                             -140 and 0 (max).
     *                             Otherwise returns integers from 0-255.
     *  @return {Array} spectrum    Array of energy (amplitude/volume)
     *                              values across the frequency spectrum.
     *                              Lowest energy (silence) = 0, highest
     *                              possible is 255.
     *  @example
     *  <div><code>
     *  let osc, fft;
     *
     *  function setup(){
     *    let cnv = createCanvas(100,100);
     *    cnv.mousePressed(startSound);
     *    osc = new p5.Oscillator();
     *    osc.amp(0);
     *    fft = new p5.FFT();
     *  }
     *
     *  function draw(){
     *    background(220);
     *
     *    let freq = map(mouseX, 0, windowWidth, 20, 10000);
     *    freq = constrain(freq, 1, 20000);
     *    osc.freq(freq);
     *
     *    let spectrum = fft.analyze();
     *    noStroke();
     *    fill(255, 0, 255);
     *    for (let i = 0; i< spectrum.length; i++){
     *      let x = map(i, 0, spectrum.length, 0, width);
     *      let h = -height + map(spectrum[i], 0, 255, height, 0);
     *      rect(x, height, width / spectrum.length, h );
     *    }
     *
     *    stroke(255);
     *    if (!osc.started) {
     *      text('tap here and drag to change frequency', 10, 20, width - 20);
     *    } else {
     *      text(round(freq)+'Hz', 10, 20);
     *    }
     *  }
     *
     *  function startSound() {
     *    osc.start();
     *    osc.amp(0.5, 0.2);
     *  }
     *
     *  function mouseReleased() {
     *    osc.amp(0, 0.2);
     *  }
     *  </code></div>
     *
     *
     */

  }, {
    key: "analyze",
    value: function analyze() {
      var mode;

      for (var i = 0; i < arguments.length; i++) {
        if (typeof arguments[i] === 'number') {
          this.bins = arguments[i];
          this.analyser.fftSize = this.bins * 2;
        }

        if (typeof arguments[i] === 'string') {
          mode = arguments[i];
        }
      }

      if (mode && mode.toLowerCase() === 'db') {
        freqToFloat(this);
        this.analyser.getFloatFrequencyData(this.freqDomain);
        return this.freqDomain;
      } else {
        freqToInt(this, this.freqDomain);
        this.analyser.getByteFrequencyData(this.freqDomain);
        var normalArray = Array.apply([], this.freqDomain);
        return normalArray;
      }
    }
    /**
     *  Returns the amount of energy (volume) at a specific
     *  <a href="https://en.wikipedia.org/wiki/Audio_frequency" target="_blank">
     *  frequency</a>, or the average amount of energy between two
     *  frequencies. Accepts Number(s) corresponding
     *  to frequency (in Hz), or a "string" corresponding to predefined
     *  frequency ranges ("bass", "lowMid", "mid", "highMid", "treble").
     *  Returns a range between 0 (no energy/volume at that frequency) and
     *  255 (maximum energy).
     *  <em>NOTE: analyze() must be called prior to getEnergy(). analyze()
     *  tells the FFT to analyze frequency data, and getEnergy() uses
     *  the results to determine the value at a specific frequency or
     *  range of frequencies.</em></p>
     *
     *  @method  getEnergy
     *  @for p5.FFT
     *  @param  {Number|String} frequency1   Will return a value representing
     *                                energy at this frequency. Alternately,
     *                                the strings "bass", "lowMid" "mid",
     *                                "highMid", and "treble" will return
     *                                predefined frequency ranges.
     *  @param  {Number} [frequency2] If a second frequency is given,
     *                                will return average amount of
     *                                energy that exists between the
     *                                two frequencies.
     *  @return {Number}   Energy   Energy (volume/amplitude) from
     *                              0 and 255.
     *
     */

  }, {
    key: "getEnergy",
    value: function getEnergy(frequency1, frequency2) {
      var nyquist = main.audiocontext.sampleRate / 2;

      if (frequency1 === 'bass') {
        frequency1 = this.bass[0];
        frequency2 = this.bass[1];
      } else if (frequency1 === 'lowMid') {
        frequency1 = this.lowMid[0];
        frequency2 = this.lowMid[1];
      } else if (frequency1 === 'mid') {
        frequency1 = this.mid[0];
        frequency2 = this.mid[1];
      } else if (frequency1 === 'highMid') {
        frequency1 = this.highMid[0];
        frequency2 = this.highMid[1];
      } else if (frequency1 === 'treble') {
        frequency1 = this.treble[0];
        frequency2 = this.treble[1];
      }

      if (typeof frequency1 !== 'number') {
        throw 'invalid input for getEnergy()';
      } else if (!frequency2) {
        var index = Math.round(frequency1 / nyquist * this.freqDomain.length);
        return this.freqDomain[index];
      } else if (frequency1 && frequency2) {
        if (frequency1 > frequency2) {
          var swap = frequency2;
          frequency2 = frequency1;
          frequency1 = swap;
        }

        var lowIndex = Math.round(frequency1 / nyquist * this.freqDomain.length);
        var highIndex = Math.round(frequency2 / nyquist * this.freqDomain.length);
        var total = 0;
        var numFrequencies = 0; 

        for (var i = lowIndex; i <= highIndex; i++) {
          total += this.freqDomain[i];
          numFrequencies += 1;
        } 


        var toReturn = total / numFrequencies;
        return toReturn;
      } else {
        throw 'invalid input for getEnergy()';
      }
    } 

  }, {
    key: "getFreq",
    value: function getFreq(freq1, freq2) {
      console.log('getFreq() is deprecated. Please use getEnergy() instead.');
      var x = this.getEnergy(freq1, freq2);
      return x;
    }
    /**
     *  Returns the
     *  <a href="http://en.wikipedia.org/wiki/Spectral_centroid" target="_blank">
     *  spectral centroid</a> of the input signal.
     *  <em>NOTE: analyze() must be called prior to getCentroid(). Analyze()
     *  tells the FFT to analyze frequency data, and getCentroid() uses
     *  the results determine the spectral centroid.</em></p>
     *
     *  @method  getCentroid
     *  @for p5.FFT
     *  @return {Number}   Spectral Centroid Frequency  of the spectral centroid in Hz.
     *
     *
     * @example
     *  <div><code>
     * function setup(){
     *  cnv = createCanvas(100,100);
     *  cnv.mousePressed(userStartAudio);
     *  sound = new p5.AudioIn();
     *  sound.start();
     *  fft = new p5.FFT();
     *  sound.connect(fft);
     *}
     *
     *function draw() {
     *  if (getAudioContext().state !== 'running') {
     *    background(220);
     *    text('tap here and enable mic to begin', 10, 20, width - 20);
     *    return;
     *  }
     *  let centroidplot = 0.0;
     *  let spectralCentroid = 0;
     *
     *  background(0);
     *  stroke(0,255,0);
     *  let spectrum = fft.analyze();
     *  fill(0,255,0); // spectrum is green
     *
     *  //draw the spectrum
     *  for (let i = 0; i < spectrum.length; i++){
     *    let x = map(log(i), 0, log(spectrum.length), 0, width);
     *    let h = map(spectrum[i], 0, 255, 0, height);
     *    let rectangle_width = (log(i+1)-log(i))*(width/log(spectrum.length));
     *    rect(x, height, rectangle_width, -h )
     *  }
     *  let nyquist = 22050;
     *
     *  // get the centroid
     *  spectralCentroid = fft.getCentroid();
     *
     *  // the mean_freq_index calculation is for the display.
     *  let mean_freq_index = spectralCentroid/(nyquist/spectrum.length);
     *
     *  centroidplot = map(log(mean_freq_index), 0, log(spectrum.length), 0, width);
     *
     *  stroke(255,0,0); // the line showing where the centroid is will be red
     *
     *  rect(centroidplot, 0, width / spectrum.length, height)
     *  noStroke();
     *  fill(255,255,255);  // text is white
     *  text('centroid: ', 10, 20);
     *  text(round(spectralCentroid)+' Hz', 10, 40);
     *}
     * </code></div>
     */

  }, {
    key: "getCentroid",
    value: function getCentroid() {
      var nyquist = main.audiocontext.sampleRate / 2;
      var cumulative_sum = 0;
      var centroid_normalization = 0;

      for (var i = 0; i < this.freqDomain.length; i++) {
        cumulative_sum += i * this.freqDomain[i];
        centroid_normalization += this.freqDomain[i];
      }

      var mean_freq_index = 0;

      if (centroid_normalization !== 0) {
        mean_freq_index = cumulative_sum / centroid_normalization;
      }

      var spec_centroid_freq = mean_freq_index * (nyquist / this.freqDomain.length);
      return spec_centroid_freq;
    }
    /**
     *  Smooth FFT analysis by averaging with the last analysis frame.
     *
     *  @method smooth
     *  @param {Number} smoothing    0.0 < smoothing < 1.0.
     *                               Defaults to 0.8.
     */

  }, {
    key: "smooth",
    value: function smooth(s) {
      if (typeof s !== 'undefined') {
        this.smoothing = s;
      }

      return this.smoothing;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      if (this.analyser) {
        this.analyser.disconnect();
        delete this.analyser;
      }
    }
    /**
     *  Returns an array of average amplitude values for a given number
     *  of frequency bands split equally. N defaults to 16.
     *  <em>NOTE: analyze() must be called prior to linAverages(). Analyze()
     *  tells the FFT to analyze frequency data, and linAverages() uses
     *  the results to group them into a smaller set of averages.</em></p>
     *
     *  @method  linAverages
     *  @for p5.FFT
     *  @param  {Number}  N                Number of returned frequency groups
     *  @return {Array}   linearAverages   Array of average amplitude values for each group
     */

  }, {
    key: "linAverages",
    value: function linAverages(_N) {
      var N = _N || 16; 

      var spectrum = this.freqDomain;
      var spectrumLength = spectrum.length;
      var spectrumStep = Math.floor(spectrumLength / N);
      var linearAverages = new Array(N); 

      var groupIndex = 0;

      for (var specIndex = 0; specIndex < spectrumLength; specIndex++) {
        linearAverages[groupIndex] = linearAverages[groupIndex] !== undefined ? (linearAverages[groupIndex] + spectrum[specIndex]) / 2 : spectrum[specIndex]; 

        if (specIndex % spectrumStep === spectrumStep - 1) {
          groupIndex++;
        }
      }

      return linearAverages;
    }
    /**
     *  Returns an array of average amplitude values of the spectrum, for a given
     *  set of <a href="https://en.wikipedia.org/wiki/Octave_band" target="_blank">
     *  Octave Bands</a>
     *  <em>NOTE: analyze() must be called prior to logAverages(). Analyze()
     *  tells the FFT to analyze frequency data, and logAverages() uses
     *  the results to group them into a smaller set of averages.</em></p>
     *
     *  @method  logAverages
     *  @for p5.FFT
     *  @param  {Array}   octaveBands    Array of Octave Bands objects for grouping
     *  @return {Array}   logAverages    Array of average amplitude values for each group
     */

  }, {
    key: "logAverages",
    value: function logAverages(octaveBands) {
      var nyquist = main.audiocontext.sampleRate / 2;
      var spectrum = this.freqDomain;
      var spectrumLength = spectrum.length;
      var logAverages = new Array(octaveBands.length); 

      var octaveIndex = 0;

      for (var specIndex = 0; specIndex < spectrumLength; specIndex++) {
        var specIndexFrequency = Math.round(specIndex * nyquist / this.freqDomain.length); 

        if (specIndexFrequency > octaveBands[octaveIndex].hi) {
          octaveIndex++;
        }

        logAverages[octaveIndex] = logAverages[octaveIndex] !== undefined ? (logAverages[octaveIndex] + spectrum[specIndex]) / 2 : spectrum[specIndex];
      }

      return logAverages;
    }
    /**
     *  Calculates and Returns the 1/N
     *  <a href="https://en.wikipedia.org/wiki/Octave_band" target="_blank">Octave Bands</a>
     *  N defaults to 3 and minimum central frequency to 15.625Hz.
     *  (1/3 Octave Bands ~= 31 Frequency Bands)
     *  Setting fCtr0 to a central value of a higher octave will ignore the lower bands
     *  and produce less frequency groups.
     *
     *  @method   getOctaveBands
     *  @for p5.FFT
     *  @param  {Number}  N             Specifies the 1/N type of generated octave bands
     *  @param  {Number}  fCtr0         Minimum central frequency for the lowest band
     *  @return {Array}   octaveBands   Array of octave band objects with their bounds
     */

  }, {
    key: "getOctaveBands",
    value: function getOctaveBands(_N, _fCtr0) {
      var N = _N || 3; 

      var fCtr0 = _fCtr0 || 15.625; 

      var octaveBands = [];
      var lastFrequencyBand = {
        lo: fCtr0 / Math.pow(2, 1 / (2 * N)),
        ctr: fCtr0,
        hi: fCtr0 * Math.pow(2, 1 / (2 * N))
      };
      octaveBands.push(lastFrequencyBand);
      var nyquist = main.audiocontext.sampleRate / 2;

      while (lastFrequencyBand.hi < nyquist) {
        var newFrequencyBand = {};
        newFrequencyBand.lo = lastFrequencyBand.hi;
        newFrequencyBand.ctr = lastFrequencyBand.ctr * Math.pow(2, 1 / N);
        newFrequencyBand.hi = newFrequencyBand.ctr * Math.pow(2, 1 / (2 * N));
        octaveBands.push(newFrequencyBand);
        lastFrequencyBand = newFrequencyBand;
      }

      return octaveBands;
    }
  }]);

  return FFT;
}(); 


function freqToFloat(fft) {
  if (fft.freqDomain instanceof Float32Array === false) {
    fft.freqDomain = new Float32Array(fft.analyser.frequencyBinCount);
  }
}

function freqToInt(fft) {
  if (fft.freqDomain instanceof Uint8Array === false) {
    fft.freqDomain = new Uint8Array(fft.analyser.frequencyBinCount);
  }
}

function timeToFloat(fft) {
  if (fft.timeDomain instanceof Float32Array === false) {
    fft.timeDomain = new Float32Array(fft.analyser.frequencyBinCount);
  }
}

function timeToInt(fft) {
  if (fft.timeDomain instanceof Uint8Array === false) {
    fft.timeDomain = new Uint8Array(fft.analyser.frequencyBinCount);
  }
}

 var fft = (fft_FFT);
var Add = __nested_webpack_require_117677__(4);
var Add_default = __nested_webpack_require_117677__.n(Add);

var Multiply = __nested_webpack_require_117677__(1);
var Multiply_default = __nested_webpack_require_117677__.n(Multiply);

var Scale = __nested_webpack_require_117677__(8);
var Scale_default = __nested_webpack_require_117677__.n(Scale);

function oscillator_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { oscillator_typeof = function _typeof(obj) { return typeof obj; }; } else { oscillator_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return oscillator_typeof(obj); }

function _possibleConstructorReturn(self, call) { if (call && (oscillator_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function oscillator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function oscillator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function oscillator_createClass(Constructor, protoProps, staticProps) { if (protoProps) oscillator_defineProperties(Constructor.prototype, protoProps); if (staticProps) oscillator_defineProperties(Constructor, staticProps); return Constructor; }






function sigChain(o, mathObj, thisChain, nextChain, type) {
  var chainSource = o.oscillator; 

  for (var i in o.mathOps) {
    if (o.mathOps[i] instanceof type) {
      chainSource.disconnect();
      o.mathOps[i].dispose();
      thisChain = i; 

      if (thisChain < o.mathOps.length - 2) {
        nextChain = o.mathOps[i + 1];
      }
    }
  }

  if (thisChain === o.mathOps.length - 1) {
    o.mathOps.push(nextChain);
  } 


  if (i > 0) {
    chainSource = o.mathOps[i - 1];
  }

  chainSource.disconnect();
  chainSource.connect(mathObj);
  mathObj.connect(nextChain);
  o.mathOps[thisChain] = mathObj;
  return o;
}
/**
 *  <p>Creates a signal that oscillates between -1.0 and 1.0.
 *  By default, the oscillation takes the form of a sinusoidal
 *  shape ('sine'). Additional types include 'triangle',
 *  'sawtooth' and 'square'. The frequency defaults to
 *  440 oscillations per second (440Hz, equal to the pitch of an
 *  'A' note).</p>
 *
 *  <p>Set the type of oscillation with setType(), or by instantiating a
 *  specific oscillator: <a href="/reference/#/p5.SinOsc">p5.SinOsc</a>, <a
 *  href="/reference/#/p5.TriOsc">p5.TriOsc</a>, <a
 *  href="/reference/#/p5.SqrOsc">p5.SqrOsc</a>, or <a
 *  href="/reference/#/p5.SawOsc">p5.SawOsc</a>.
 *  </p>
 *
 *  @class p5.Oscillator
 *  @constructor
 *  @param {Number} [freq] frequency defaults to 440Hz
 *  @param {String} [type] type of oscillator. Options:
 *                         'sine' (default), 'triangle',
 *                         'sawtooth', 'square'
 *  @example
 *  <div><code>
 *  let osc, playing, freq, amp;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playOscillator);
 *    osc = new p5.Oscillator('sine');
 *  }
 *
 *  function draw() {
 *    background(220)
 *    freq = constrain(map(mouseX, 0, width, 100, 500), 100, 500);
 *    amp = constrain(map(mouseY, height, 0, 0, 1), 0, 1);
 *
 *    text('tap to play', 20, 20);
 *    text('freq: ' + freq, 20, 40);
 *    text('amp: ' + amp, 20, 60);
 *
 *    if (playing) {
 *      // smooth the transitions by 0.1 seconds
 *      osc.freq(freq, 0.1);
 *      osc.amp(amp, 0.1);
 *    }
 *  }
 *
 *  function playOscillator() {
 *    // starting an oscillator on a user gesture will enable audio
 *    // in browsers that have a strict autoplay policy.
 *    // See also: userStartAudio();
 *    osc.start();
 *    playing = true;
 *  }
 *
 *  function mouseReleased() {
 *    // ramp amplitude to 0 over 0.5 seconds
 *    osc.amp(0, 0.5);
 *    playing = false;
 *  }
 *  </code> </div>
 */


var oscillator_Oscillator =
function () {
  function Oscillator(freq, type) {
    oscillator_classCallCheck(this, Oscillator);

    if (typeof freq === 'string') {
      var f = type;
      type = freq;
      freq = f;
    }

    if (typeof type === 'number') {
      var _f = type;
      type = freq;
      freq = _f;
    }

    this.started = false; 

    this.phaseAmount = undefined;
    this.oscillator = main.audiocontext.createOscillator();
    this.f = freq || 440.0; 

    this.oscillator.type = type || 'sine';
    this.oscillator.frequency.setValueAtTime(this.f, main.audiocontext.currentTime); 

    this.output = main.audiocontext.createGain();
    this._freqMods = []; 

    this.output.gain.value = 0.5;
    this.output.gain.setValueAtTime(0.5, main.audiocontext.currentTime);
    this.oscillator.connect(this.output); 

    this.panPosition = 0.0;
    this.connection = main.input; 

    this.panner = new panner_0(this.output, this.connection, 1); 

    this.mathOps = [this.output]; 

    main.soundArray.push(this); 

    this.fade = this.amp;
  }
  /**
   *  Start an oscillator.
   *
   *  Starting an oscillator on a user gesture will enable audio in browsers
   *  that have a strict autoplay policy, including Chrome and most mobile
   *  devices. See also: `userStartAudio()`.
   *
   *  @method  start
   *  @for p5.Oscillator
   *  @param  {Number} [time] startTime in seconds from now.
   *  @param  {Number} [frequency] frequency in Hz.
   */


  oscillator_createClass(Oscillator, [{
    key: "start",
    value: function start(time, f) {
      if (this.started) {
        var now = main.audiocontext.currentTime;
        this.stop(now);
      }

      if (!this.started) {
        var freq = f || this.f;
        var type = this.oscillator.type; 

        if (this.oscillator) {
          this.oscillator.disconnect();
          delete this.oscillator;
        } 


        this.oscillator = main.audiocontext.createOscillator();
        this.oscillator.frequency.value = Math.abs(freq);
        this.oscillator.type = type; 

        this.oscillator.connect(this.output);
        time = time || 0;
        this.oscillator.start(time + main.audiocontext.currentTime);
        this.freqNode = this.oscillator.frequency; 

        for (var i in this._freqMods) {
          if (typeof this._freqMods[i].connect !== 'undefined') {
            this._freqMods[i].connect(this.oscillator.frequency);
          }
        }

        this.started = true;
      }
    }
    /**
     *  Stop an oscillator. Accepts an optional parameter
     *  to determine how long (in seconds from now) until the
     *  oscillator stops.
     *
     *  @method  stop
     *  @for p5.Oscillator
     *  @param  {Number} secondsFromNow Time, in seconds from now.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      if (this.started) {
        var t = time || 0;
        var now = main.audiocontext.currentTime;
        this.oscillator.stop(t + now);
        this.started = false;
      }
    }
    /**
     *  Set the amplitude between 0 and 1.0. Or, pass in an object
     *  such as an oscillator to modulate amplitude with an audio signal.
     *
     *  @method  amp
     *  @for p5.Oscillator
     *  @param  {Number|Object} vol between 0 and 1.0
     *                              or a modulating signal/oscillator
     *  @param {Number} [rampTime] create a fade that lasts rampTime
     *  @param {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     *  @return  {AudioParam} gain  If no value is provided,
     *                              returns the Web Audio API
     *                              AudioParam that controls
     *                              this oscillator's
     *                              gain/amplitude/volume)
     */

  }, {
    key: "amp",
    value: function amp(vol) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var tFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (typeof vol === 'number') {
        var now = main.audiocontext.currentTime;
        this.output.gain.linearRampToValueAtTime(vol, now + tFromNow + rampTime);
      } else if (vol) {
        vol.connect(this.output.gain);
      } else {
        return this.output.gain;
      }
    }
    /**
     * Returns the value of output gain
     *
     *  @method  getAmp
     *  @for p5.Oscillator
     *
     * @returns {number} Amplitude value between 0.0 and 1.0
     */

  }, {
    key: "getAmp",
    value: function getAmp() {
      return this.output.gain.value;
    }
    /**
     *  Set frequency of an oscillator to a value. Or, pass in an object
     *  such as an oscillator to modulate the frequency with an audio signal.
     *
     *  @method  freq
     *  @for p5.Oscillator
     *  @param  {Number|Object} Frequency Frequency in Hz
     *                                        or modulating signal/oscillator
     *  @param  {Number} [rampTime] Ramp time (in seconds)
     *  @param  {Number} [timeFromNow] Schedule this event to happen
     *                                   at x seconds from now
     *  @return  {AudioParam} Frequency If no value is provided,
     *                                  returns the Web Audio API
     *                                  AudioParam that controls
     *                                  this oscillator's frequency
     *  @example
     *  <div><code>
     *  let osc;
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(playOscillator);
     *    osc = new p5.Oscillator(300);
     *    background(220);
     *    text('tap to play', 20, 20);
     *  }
     *
     *  function playOscillator() {
     *    osc.start();
     *    osc.amp(0.5);
     *    // start at 700Hz
     *    osc.freq(700);
     *    // ramp to 60Hz over 0.7 seconds
     *    osc.freq(60, 0.7);
     *    osc.amp(0, 0.1, 0.7);
     *  }
     *  </code></div>
     */

  }, {
    key: "freq",
    value: function freq(val) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var tFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (typeof val === 'number' && !isNaN(val)) {
        this.f = val;
        var now = main.audiocontext.currentTime;

        if (rampTime === 0) {
          this.oscillator.frequency.setValueAtTime(val, tFromNow + now);
        } else {
          if (val > 0) {
            this.oscillator.frequency.exponentialRampToValueAtTime(val, tFromNow + rampTime + now);
          } else {
            this.oscillator.frequency.linearRampToValueAtTime(val, tFromNow + rampTime + now);
          }
        } 


        if (this.phaseAmount) {
          this.phase(this.phaseAmount);
        }
      } else if (val) {
        if (val.output) {
          val = val.output;
        }

        val.connect(this.oscillator.frequency); 

        this._freqMods.push(val);
      } else {
        return this.oscillator.frequency;
      }
    }
    /**
     * Returns the value of frequency of oscillator
     *
     *  @method  getFreq
     *  @for p5.Oscillator
     *  @returns {number} Frequency of oscillator in Hertz
     */

  }, {
    key: "getFreq",
    value: function getFreq() {
      return this.oscillator.frequency.value;
    }
    /**
     *  Set type to 'sine', 'triangle', 'sawtooth' or 'square'.
     *
     *  @method  setType
     *  @for p5.Oscillator
     *  @param {String} type 'sine', 'triangle', 'sawtooth' or 'square'.
     */

  }, {
    key: "setType",
    value: function setType(type) {
      this.oscillator.type = type;
    }
    /**
     *  Returns  current type of oscillator eg. 'sine', 'triangle', 'sawtooth' or 'square'.
     *
     *  @method  getType
     *  @for p5.Oscillator
     *  @returns {String} type of oscillator  eg . 'sine', 'triangle', 'sawtooth' or 'square'.
     */

  }, {
    key: "getType",
    value: function getType() {
      return this.oscillator.type;
    }
    /**
     *  Connect to a p5.sound / Web Audio object.
     *
     *  @method  connect
     *  @for p5.Oscillator
     *  @param  {Object} unit A p5.sound or Web Audio object
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      if (!unit) {
        this.panner.connect(main.input);
      } else if (unit.hasOwnProperty('input')) {
        this.panner.connect(unit.input);
        this.connection = unit.input;
      } else {
        this.panner.connect(unit);
        this.connection = unit;
      }
    }
    /**
     *  Disconnect all outputs
     *
     *  @method  disconnect
     *  @for p5.Oscillator
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect();
      }

      if (this.panner) {
        this.panner.disconnect();

        if (this.output) {
          this.output.connect(this.panner);
        }
      }

      this.oscMods = [];
    }
    /**
     *  Pan between Left (-1) and Right (1)
     *
     *  @method  pan
     *  @for p5.Oscillator
     *  @param  {Number} panning Number between -1 and 1
     *  @param  {Number} timeFromNow schedule this event to happen
     *                                seconds from now
     */

  }, {
    key: "pan",
    value: function pan(pval, tFromNow) {
      this.panPosition = pval;
      this.panner.pan(pval, tFromNow);
    }
    /**
     *  Returns the current value of panPosition , between Left (-1) and Right (1)
     *
     *  @method  getPan
     *  @for p5.Oscillator
     *
     *  @returns {number} panPosition of oscillator , between Left (-1) and Right (1)
     */

  }, {
    key: "getPan",
    value: function getPan() {
      return this.panPosition;
    } 

  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      if (this.oscillator) {
        var now = main.audiocontext.currentTime;
        this.stop(now);
        this.disconnect();
        this.panner = null;
        this.oscillator = null;
      } 


      if (this.osc2) {
        this.osc2.dispose();
      }
    }
    /**
     *  Set the phase of an oscillator between 0.0 and 1.0.
     *  In this implementation, phase is a delay time
     *  based on the oscillator's current frequency.
     *
     *  @method  phase
     *  @for p5.Oscillator
     *  @param  {Number} phase float between 0.0 and 1.0
     */

  }, {
    key: "phase",
    value: function phase(p) {
      var delayAmt = p5.prototype.map(p, 0, 1.0, 0, 1 / this.f);
      var now = main.audiocontext.currentTime;
      this.phaseAmount = p;

      if (!this.dNode) {
        this.dNode = main.audiocontext.createDelay(); 

        this.oscillator.disconnect();
        this.oscillator.connect(this.dNode);
        this.dNode.connect(this.output);
      } 


      this.dNode.delayTime.setValueAtTime(delayAmt, now);
    }
    /**
     *  Add a value to the p5.Oscillator's output amplitude,
     *  and return the oscillator. Calling this method again
     *  will override the initial add() with a new value.
     *
     *  @method  add
     *  @for p5.Oscillator
     *  @param {Number} number Constant number to add
     *  @return {p5.Oscillator} Oscillator Returns this oscillator
     *                                     with scaled output
     *
     */

  }, {
    key: "add",
    value: function add(num) {
      var add = new Add_default.a(num);
      var thisChain = this.mathOps.length - 1;
      var nextChain = this.output;
      return sigChain(this, add, thisChain, nextChain, Add_default.a);
    }
    /**
     *  Multiply the p5.Oscillator's output amplitude
     *  by a fixed value (i.e. turn it up!). Calling this method
     *  again will override the initial mult() with a new value.
     *
     *  @method  mult
     *  @for p5.Oscillator
     *  @param {Number} number Constant number to multiply
     *  @return {p5.Oscillator} Oscillator Returns this oscillator
     *                                     with multiplied output
     */

  }, {
    key: "mult",
    value: function mult(num) {
      var mult = new Multiply_default.a(num);
      var thisChain = this.mathOps.length - 1;
      var nextChain = this.output;
      return sigChain(this, mult, thisChain, nextChain, Multiply_default.a);
    }
    /**
     *  Scale this oscillator's amplitude values to a given
     *  range, and return the oscillator. Calling this method
     *  again will override the initial scale() with new values.
     *
     *  @method  scale
     *  @for p5.Oscillator
     *  @param  {Number} inMin  input range minumum
     *  @param  {Number} inMax  input range maximum
     *  @param  {Number} outMin input range minumum
     *  @param  {Number} outMax input range maximum
     *  @return {p5.Oscillator} Oscillator Returns this oscillator
     *                                     with scaled output
     */

  }, {
    key: "scale",
    value: function scale(inMin, inMax, outMin, outMax) {
      var mapOutMin, mapOutMax;

      if (arguments.length === 4) {
        mapOutMin = p5.prototype.map(outMin, inMin, inMax, 0, 1) - 0.5; 

        mapOutMax = p5.prototype.map(outMax, inMin, inMax, 0, 1) - 0.5; 
      } else {
        mapOutMin = arguments[0];
        mapOutMax = arguments[1];
      }

      var scale = new Scale_default.a(mapOutMin, mapOutMax);
      var thisChain = this.mathOps.length - 1;
      var nextChain = this.output;
      return sigChain(this, scale, thisChain, nextChain, Scale_default.a); 
    }
  }]);

  return Oscillator;
}(); 

/**
 *  Constructor: <code>new p5.SinOsc()</code>.
 *  This creates a Sine Wave Oscillator and is
 *  equivalent to <code> new p5.Oscillator('sine')
 *  </code> or creating a p5.Oscillator and then calling
 *  its method <code>setType('sine')</code>.
 *  See p5.Oscillator for methods.
 *
 *  @class  p5.SinOsc
 *  @constructor
 *  @extends p5.Oscillator
 *  @param {Number} [freq] Set the frequency
 */


var SinOsc =
function (_Oscillator) {
  _inherits(SinOsc, _Oscillator);

  function SinOsc(freq) {
    oscillator_classCallCheck(this, SinOsc);

    return _possibleConstructorReturn(this, _getPrototypeOf(SinOsc).call(this, freq, 'sine'));
  }

  return SinOsc;
}(oscillator_Oscillator);
/**
 *  Constructor: <code>new p5.TriOsc()</code>.
 *  This creates a Triangle Wave Oscillator and is
 *  equivalent to <code>new p5.Oscillator('triangle')
 *  </code> or creating a p5.Oscillator and then calling
 *  its method <code>setType('triangle')</code>.
 *  See p5.Oscillator for methods.
 *
 *  @class  p5.TriOsc
 *  @constructor
 *  @extends p5.Oscillator
 *  @param {Number} [freq] Set the frequency
 */


var TriOsc =
function (_Oscillator2) {
  _inherits(TriOsc, _Oscillator2);

  function TriOsc(freq) {
    oscillator_classCallCheck(this, TriOsc);

    return _possibleConstructorReturn(this, _getPrototypeOf(TriOsc).call(this, freq, 'triangle'));
  }

  return TriOsc;
}(oscillator_Oscillator);
/**
 *  Constructor: <code>new p5.SawOsc()</code>.
 *  This creates a SawTooth Wave Oscillator and is
 *  equivalent to <code> new p5.Oscillator('sawtooth')
 *  </code> or creating a p5.Oscillator and then calling
 *  its method <code>setType('sawtooth')</code>.
 *  See p5.Oscillator for methods.
 *
 *  @class  p5.SawOsc
 *  @constructor
 *  @extends p5.Oscillator
 *  @param {Number} [freq] Set the frequency
 */


var SawOsc =
function (_Oscillator3) {
  _inherits(SawOsc, _Oscillator3);

  function SawOsc(freq) {
    oscillator_classCallCheck(this, SawOsc);

    return _possibleConstructorReturn(this, _getPrototypeOf(SawOsc).call(this, freq, 'sawtooth'));
  }

  return SawOsc;
}(oscillator_Oscillator);
/**
 *  Constructor: <code>new p5.SqrOsc()</code>.
 *  This creates a Square Wave Oscillator and is
 *  equivalent to <code> new p5.Oscillator('square')
 *  </code> or creating a p5.Oscillator and then calling
 *  its method <code>setType('square')</code>.
 *  See p5.Oscillator for methods.
 *
 *  @class  p5.SqrOsc
 *  @constructor
 *  @extends p5.Oscillator
 *  @param {Number} [freq] Set the frequency
 */


var SqrOsc =
function (_Oscillator4) {
  _inherits(SqrOsc, _Oscillator4);

  function SqrOsc(freq) {
    oscillator_classCallCheck(this, SqrOsc);

    return _possibleConstructorReturn(this, _getPrototypeOf(SqrOsc).call(this, freq, 'square'));
  }

  return SqrOsc;
}(oscillator_Oscillator);

 var oscillator = (oscillator_Oscillator);

var TimelineSignal = __nested_webpack_require_117677__(7);
var TimelineSignal_default = __nested_webpack_require_117677__.n(TimelineSignal);






/**
 *  <p>Envelopes are pre-defined amplitude distribution over time.
 *  Typically, envelopes are used to control the output volume
 *  of an object, a series of fades referred to as Attack, Decay,
 *  Sustain and Release (
 *  <a href="https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg">ADSR</a>
 *  ). Envelopes can also control other Web Audio Parameters—for example, a p5.Envelope can
 *  control an Oscillator's frequency like this: <code>osc.freq(env)</code>.</p>
 *  <p>Use <code><a href="#/p5.Envelope/setRange">setRange</a></code> to change the attack/release level.
 *  Use <code><a href="#/p5.Envelope/setADSR">setADSR</a></code> to change attackTime, decayTime, sustainPercent and releaseTime.</p>
 *  <p>Use the <code><a href="#/p5.Envelope/play">play</a></code> method to play the entire envelope,
 *  the <code><a href="#/p5.Envelope/ramp">ramp</a></code> method for a pingable trigger,
 *  or <code><a href="#/p5.Envelope/triggerAttack">triggerAttack</a></code>/
 *  <code><a href="#/p5.Envelope/triggerRelease">triggerRelease</a></code> to trigger noteOn/noteOff.</p>
 *
 *  @class p5.Envelope
 *  @constructor
 *  @example
 *  <div><code>
 *  let t1 = 0.1; // attack time in seconds
 *  let l1 = 0.7; // attack level 0.0 to 1.0
 *  let t2 = 0.3; // decay time in seconds
 *  let l2 = 0.1; // decay level  0.0 to 1.0
 *
 *  let env;
 *  let triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    background(220);
 *    text('tap to play', 20, 20);
 *    cnv.mousePressed(playSound);
 *
 *    env = new p5.Envelope(t1, l1, t2, l2);
 *    triOsc = new p5.Oscillator('triangle');
 *  }
 *
 *  function playSound() {
 *    // starting the oscillator ensures that audio is enabled.
 *    triOsc.start();
 *    env.play(triOsc);
 *  }
 *  </code></div>
 */

p5.Envelope = function (t1, l1, t2, l2, t3, l3) {
  /**
   * Time until envelope reaches attackLevel
   * @property attackTime
   */
  this.aTime = t1 || 0.1;
  /**
   * Level once attack is complete.
   * @property attackLevel
   */

  this.aLevel = l1 || 1;
  /**
   * Time until envelope reaches decayLevel.
   * @property decayTime
   */

  this.dTime = t2 || 0.5;
  /**
   * Level after decay. The envelope will sustain here until it is released.
   * @property decayLevel
   */

  this.dLevel = l2 || 0;
  /**
   * Duration of the release portion of the envelope.
   * @property releaseTime
   */

  this.rTime = t3 || 0;
  /**
   * Level at the end of the release.
   * @property releaseLevel
   */

  this.rLevel = l3 || 0;
  this._rampHighPercentage = 0.98;
  this._rampLowPercentage = 0.02;
  this.output = main.audiocontext.createGain();
  this.control = new TimelineSignal_default.a();

  this._init(); 


  this.control.connect(this.output); 

  this.connection = null; 

  this.mathOps = [this.control]; 

  this.isExponential = false; 

  this.sourceToClear = null; 

  this.wasTriggered = false; 

  main.soundArray.push(this);
}; 


p5.Envelope.prototype._init = function () {
  var now = main.audiocontext.currentTime;
  var t = now;
  this.control.setTargetAtTime(0.00001, t, 0.001); 

  this._setRampAD(this.aTime, this.dTime);
};
/**
 *  Reset the envelope with a series of time/value pairs.
 *
 *  @method  set
 *  @for p5.Envelope
 *  @param {Number} attackTime     Time (in seconds) before level
 *                                 reaches attackLevel
 *  @param {Number} attackLevel    Typically an amplitude between
 *                                 0.0 and 1.0
 *  @param {Number} decayTime      Time
 *  @param {Number} decayLevel   Amplitude (In a standard ADSR envelope,
 *                                 decayLevel = sustainLevel)
 *  @param {Number} releaseTime   Release Time (in seconds)
 *  @param {Number} releaseLevel  Amplitude
 *  @example
 *  <div><code>
 *  let attackTime;
 *  let l1 = 0.7; // attack level 0.0 to 1.0
 *  let t2 = 0.3; // decay time in seconds
 *  let l2 = 0.1; // decay level  0.0 to 1.0
 *  let l3 = 0.2; // release time in seconds
 *
 *  let env, triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playSound);
 *
 *    env = new p5.Envelope();
 *    triOsc = new p5.Oscillator('triangle');
 *  }
 *
 *  function draw() {
 *    background(220);
 *    text('tap here to play', 5, 20);
 *
 *    attackTime = map(mouseX, 0, width, 0.0, 1.0);
 *    text('attack time: ' + attackTime, 5, height - 20);
 *  }
 *
 *  // mouseClick triggers envelope if over canvas
 *  function playSound() {
 *    env.set(attackTime, l1, t2, l2, l3);
 *
 *    triOsc.start();
 *    env.play(triOsc);
 *  }
 *  </code></div>
 *
 */


p5.Envelope.prototype.set = function (t1, l1, t2, l2, t3, l3) {
  this.aTime = t1;
  this.aLevel = l1;
  this.dTime = t2 || 0;
  this.dLevel = l2 || 0;
  this.rTime = t3 || 0;
  this.rLevel = l3 || 0; 

  this._setRampAD(t1, t2);
};
/**
 *  Set values like a traditional
 *  <a href="https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg">
 *  ADSR envelope
 *  </a>.
 *
 *  @method  setADSR
 *  @for p5.Envelope
 *  @param {Number} attackTime    Time (in seconds before envelope
 *                                reaches Attack Level
 *  @param {Number} [decayTime]    Time (in seconds) before envelope
 *                                reaches Decay/Sustain Level
 *  @param {Number} [susRatio]    Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,
 *                                where 1.0 = attackLevel, 0.0 = releaseLevel.
 *                                The susRatio determines the decayLevel and the level at which the
 *                                sustain portion of the envelope will sustain.
 *                                For example, if attackLevel is 0.4, releaseLevel is 0,
 *                                and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is
 *                                increased to 1.0 (using <code>setRange</code>),
 *                                then decayLevel would increase proportionally, to become 0.5.
 *  @param {Number} [releaseTime]   Time in seconds from now (defaults to 0)
 *  @example
 *  <div><code>
 *  let attackLevel = 1.0;
 *  let releaseLevel = 0;
 *
 *  let attackTime = 0.001;
 *  let decayTime = 0.2;
 *  let susPercent = 0.2;
 *  let releaseTime = 0.5;
 *
 *  let env, triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playEnv);
 *
 *    env = new p5.Envelope();
 *    triOsc = new p5.Oscillator('triangle');
 *    triOsc.amp(env);
 *    triOsc.freq(220);
 *  }
 *
 *  function draw() {
 *    background(220);
 *    text('tap here to play', 5, 20);
 *    attackTime = map(mouseX, 0, width, 0, 1.0);
 *    text('attack time: ' + attackTime, 5, height - 40);
 *  }
 *
 *  function playEnv() {
 *    triOsc.start();
 *    env.setADSR(attackTime, decayTime, susPercent, releaseTime);
 *    env.play();
 *  }
 *  </code></div>
 */


p5.Envelope.prototype.setADSR = function (aTime, dTime, sPercent, rTime) {
  this.aTime = aTime;
  this.dTime = dTime || 0; 

  this.sPercent = sPercent || 0;
  this.dLevel = typeof sPercent !== 'undefined' ? sPercent * (this.aLevel - this.rLevel) + this.rLevel : 0;
  this.rTime = rTime || 0; 

  this._setRampAD(aTime, dTime);
};
/**
 *  Set max (attackLevel) and min (releaseLevel) of envelope.
 *
 *  @method  setRange
 *  @for p5.Envelope
 *  @param {Number} aLevel attack level (defaults to 1)
 *  @param {Number} rLevel release level (defaults to 0)
 *  @example
 *  <div><code>
 *  let attackLevel = 1.0;
 *  let releaseLevel = 0;
 *
 *  let attackTime = 0.001;
 *  let decayTime = 0.2;
 *  let susPercent = 0.2;
 *  let releaseTime = 0.5;
 *
 *  let env, triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playEnv);
 *
 *    env = new p5.Envelope();
 *    triOsc = new p5.Oscillator('triangle');
 *    triOsc.amp(env);
 *    triOsc.freq(220);
 *  }
 *
 *  function draw() {
 *    background(220);
 *    text('tap here to play', 5, 20);
 *    attackLevel = map(mouseY, height, 0, 0, 1.0);
 *    text('attack level: ' + attackLevel, 5, height - 20);
 *  }
 *
 *  function playEnv() {
 *    triOsc.start();
 *    env.setRange(attackLevel, releaseLevel);
 *    env.play();
 *  }
 *  </code></div>
 */


p5.Envelope.prototype.setRange = function (aLevel, rLevel) {
  this.aLevel = aLevel || 1;
  this.rLevel = rLevel || 0; 
}; 


p5.Envelope.prototype._setRampAD = function (t1, t2) {
  this._rampAttackTime = this.checkExpInput(t1);
  this._rampDecayTime = this.checkExpInput(t2);
  var TCDenominator = 1.0; 

  TCDenominator = Math.log(1.0 / this.checkExpInput(1.0 - this._rampHighPercentage));
  this._rampAttackTC = t1 / this.checkExpInput(TCDenominator);
  TCDenominator = Math.log(1.0 / this._rampLowPercentage);
  this._rampDecayTC = t2 / this.checkExpInput(TCDenominator);
}; 


p5.Envelope.prototype.setRampPercentages = function (p1, p2) {
  this._rampHighPercentage = this.checkExpInput(p1);
  this._rampLowPercentage = this.checkExpInput(p2);
  var TCDenominator = 1.0; 

  TCDenominator = Math.log(1.0 / this.checkExpInput(1.0 - this._rampHighPercentage));
  this._rampAttackTC = this._rampAttackTime / this.checkExpInput(TCDenominator);
  TCDenominator = Math.log(1.0 / this._rampLowPercentage);
  this._rampDecayTC = this._rampDecayTime / this.checkExpInput(TCDenominator);
};
/**
 *  Assign a parameter to be controlled by this envelope.
 *  If a p5.Sound object is given, then the p5.Envelope will control its
 *  output gain. If multiple inputs are provided, the env will
 *  control all of them.
 *
 *  @method  setInput
 *  @for p5.Envelope
 *  @param  {Object} [...inputs]         A p5.sound object or
 *                                Web Audio Param.
 */


p5.Envelope.prototype.setInput = function () {
  for (var i = 0; i < arguments.length; i++) {
    this.connect(arguments[i]);
  }
};
/**
 *  Set whether the envelope ramp is linear (default) or exponential.
 *  Exponential ramps can be useful because we perceive amplitude
 *  and frequency logarithmically.
 *
 *  @method  setExp
 *  @for p5.Envelope
 *  @param {Boolean} isExp true is exponential, false is linear
 */


p5.Envelope.prototype.setExp = function (isExp) {
  this.isExponential = isExp;
}; 


p5.Envelope.prototype.checkExpInput = function (value) {
  if (value <= 0) {
    value = 0.00000001;
  }

  return value;
};
/**
 *  <p>Play tells the envelope to start acting on a given input.
 *  If the input is a p5.sound object (i.e. AudioIn, Oscillator,
 *  SoundFile), then Envelope will control its output volume.
 *  Envelopes can also be used to control any <a href="
 *  http://docs.webplatform.org/wiki/apis/webaudio/AudioParam">
 *  Web Audio Audio Param.</a></p>
 *
 *  @method  play
 *  @for p5.Envelope
 *  @param  {Object} unit         A p5.sound object or
 *                                Web Audio Param.
 *  @param  {Number} [startTime]  time from now (in seconds) at which to play
 *  @param  {Number} [sustainTime] time to sustain before releasing the envelope
 *  @example
 *  <div><code>
 *  let attackLevel = 1.0;
 *  let releaseLevel = 0;
 *
 *  let attackTime = 0.001;
 *  let decayTime = 0.2;
 *  let susPercent = 0.2;
 *  let releaseTime = 0.5;
 *
 *  let env, triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playEnv);
 *
 *    env = new p5.Envelope();
 *    triOsc = new p5.Oscillator('triangle');
 *    triOsc.amp(env);
 *    triOsc.freq(220);
 *    triOsc.start();
 *  }
 *
 *  function draw() {
 *    background(220);
 *    text('tap here to play', 5, 20);
 *    attackTime = map(mouseX, 0, width, 0, 1.0);
 *    attackLevel = map(mouseY, height, 0, 0, 1.0);
 *    text('attack time: ' + attackTime, 5, height - 40);
 *    text('attack level: ' + attackLevel, 5, height - 20);
 *  }
 *
 *  function playEnv() {
 *    // ensure that audio is enabled
 *    userStartAudio();
 *
 *    env.setADSR(attackTime, decayTime, susPercent, releaseTime);
 *    env.setRange(attackLevel, releaseLevel);
 *    env.play();
 *  }
 *  </code></div>
 */


p5.Envelope.prototype.play = function (unit, secondsFromNow, susTime) {
  var tFromNow = secondsFromNow || 0;

  if (unit) {
    if (this.connection !== unit) {
      this.connect(unit);
    }
  }

  this.triggerAttack(unit, tFromNow);
  this.triggerRelease(unit, tFromNow + this.aTime + this.dTime + ~~susTime);
};
/**
 *  Trigger the Attack, and Decay portion of the Envelope.
 *  Similar to holding down a key on a piano, but it will
 *  hold the sustain level until you let go. Input can be
 *  any p5.sound object, or a <a href="
 *  http://docs.webplatform.org/wiki/apis/webaudio/AudioParam">
 *  Web Audio Param</a>.
 *
 *  @method  triggerAttack
 *  @for p5.Envelope
 *  @param  {Object} unit p5.sound Object or Web Audio Param
 *  @param  {Number} secondsFromNow time from now (in seconds)
 *  @example
 *  <div><code>
 *  let attackTime = 0.001;
 *  let decayTime = 0.2;
 *  let susPercent = 0.3;
 *  let releaseTime = 0.4;
 *  let env, triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    background(220);
 *    textAlign(CENTER);
 *    textSize(10);
 *    text('tap to triggerAttack', width/2, height/2);
 *
 *    env = new p5.Envelope();
 *    env.setADSR(attackTime, decayTime, susPercent, releaseTime);
 *    env.setRange(1.0, 0.0);
 *    triOsc = new p5.Oscillator('triangle');
 *    triOsc.freq(220);
 *
 *    cnv.mousePressed(envAttack);
 *  }
 *
 *  function envAttack()  {
 *    background(0, 255, 255);
 *    text('release to release', width/2, height/2);
 *
 *    // ensures audio is enabled. See also: `userStartAudio`
 *    triOsc.start();
 *
 *    env.triggerAttack(triOsc);
 *  }
 *
 *  function mouseReleased() {
 *    background(220);
 *    text('tap to triggerAttack', width/2, height/2);
 *
 *    env.triggerRelease(triOsc);
 *  }
 *  </code></div>
 */


p5.Envelope.prototype.triggerAttack = function (unit, secondsFromNow) {
  var now = main.audiocontext.currentTime;
  var tFromNow = secondsFromNow || 0;
  var t = now + tFromNow;
  this.lastAttack = t;
  this.wasTriggered = true;

  if (unit) {
    if (this.connection !== unit) {
      this.connect(unit);
    }
  } 


  var valToSet = this.control.getValueAtTime(t);

  if (this.isExponential === true) {
    this.control.exponentialRampToValueAtTime(this.checkExpInput(valToSet), t);
  } else {
    this.control.linearRampToValueAtTime(valToSet, t);
  } 


  t += this.aTime;

  if (this.isExponential === true) {
    this.control.exponentialRampToValueAtTime(this.checkExpInput(this.aLevel), t);
    valToSet = this.checkExpInput(this.control.getValueAtTime(t));
    this.control.cancelScheduledValues(t);
    this.control.exponentialRampToValueAtTime(valToSet, t);
  } else {
    this.control.linearRampToValueAtTime(this.aLevel, t);
    valToSet = this.control.getValueAtTime(t);
    this.control.cancelScheduledValues(t);
    this.control.linearRampToValueAtTime(valToSet, t);
  } 


  t += this.dTime;

  if (this.isExponential === true) {
    this.control.exponentialRampToValueAtTime(this.checkExpInput(this.dLevel), t);
    valToSet = this.checkExpInput(this.control.getValueAtTime(t));
    this.control.cancelScheduledValues(t);
    this.control.exponentialRampToValueAtTime(valToSet, t);
  } else {
    this.control.linearRampToValueAtTime(this.dLevel, t);
    valToSet = this.control.getValueAtTime(t);
    this.control.cancelScheduledValues(t);
    this.control.linearRampToValueAtTime(valToSet, t);
  }
};
/**
 *  Trigger the Release of the Envelope. This is similar to releasing
 *  the key on a piano and letting the sound fade according to the
 *  release level and release time.
 *
 *  @method  triggerRelease
 *  @for p5.Envelope
 *  @param  {Object} unit p5.sound Object or Web Audio Param
 *  @param  {Number} secondsFromNow time to trigger the release
 *  @example
 *  <div><code>
 *  let attackTime = 0.001;
 *  let decayTime = 0.2;
 *  let susPercent = 0.3;
 *  let releaseTime = 0.4;
 *  let env, triOsc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    background(220);
 *    textAlign(CENTER);
 *    textSize(10);
 *    text('tap to triggerAttack', width/2, height/2);
 *
 *    env = new p5.Envelope();
 *    env.setADSR(attackTime, decayTime, susPercent, releaseTime);
 *    env.setRange(1.0, 0.0);
 *    triOsc = new p5.Oscillator('triangle');
 *    triOsc.freq(220);
 *
 *    cnv.mousePressed(envAttack);
 *  }
 *
 *  function envAttack()  {
 *    background(0, 255, 255);
 *    text('release to release', width/2, height/2);
 *
 *    // ensures audio is enabled. See also: `userStartAudio`
 *    triOsc.start();
 *
 *    env.triggerAttack(triOsc);
 *  }
 *
 *  function mouseReleased() {
 *    background(220);
 *    text('tap to triggerAttack', width/2, height/2);
 *
 *    env.triggerRelease(triOsc);
 *  }
 *  </code></div>
 */


p5.Envelope.prototype.triggerRelease = function (unit, secondsFromNow) {
  if (!this.wasTriggered) {
    return;
  }

  var now = main.audiocontext.currentTime;
  var tFromNow = secondsFromNow || 0;
  var t = now + tFromNow;

  if (unit) {
    if (this.connection !== unit) {
      this.connect(unit);
    }
  } 


  var valToSet = this.control.getValueAtTime(t);

  if (this.isExponential === true) {
    this.control.exponentialRampToValueAtTime(this.checkExpInput(valToSet), t);
  } else {
    this.control.linearRampToValueAtTime(valToSet, t);
  } 


  t += this.rTime;

  if (this.isExponential === true) {
    this.control.exponentialRampToValueAtTime(this.checkExpInput(this.rLevel), t);
    valToSet = this.checkExpInput(this.control.getValueAtTime(t));
    this.control.cancelScheduledValues(t);
    this.control.exponentialRampToValueAtTime(valToSet, t);
  } else {
    this.control.linearRampToValueAtTime(this.rLevel, t);
    valToSet = this.control.getValueAtTime(t);
    this.control.cancelScheduledValues(t);
    this.control.linearRampToValueAtTime(valToSet, t);
  }

  this.wasTriggered = false;
};
/**
 *  Exponentially ramp to a value using the first two
 *  values from <code><a href="#/p5.Envelope/setADSR">setADSR(attackTime, decayTime)</a></code>
 *  as <a href="https://en.wikipedia.org/wiki/RC_time_constant">
 *  time constants</a> for simple exponential ramps.
 *  If the value is higher than current value, it uses attackTime,
 *  while a decrease uses decayTime.
 *
 *  @method  ramp
 *  @for p5.Envelope
 *  @param  {Object} unit           p5.sound Object or Web Audio Param
 *  @param  {Number} secondsFromNow When to trigger the ramp
 *  @param  {Number} v              Target value
 *  @param  {Number} [v2]           Second target value
 *  @example
 *  <div><code>
 *  let env, osc, amp;
 *
 *  let attackTime = 0.001;
 *  let decayTime = 0.2;
 *  let attackLevel = 1;
 *  let decayLevel = 0;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    fill(0,255,0);
 *    noStroke();
 *
 *    env = new p5.Envelope();
 *    env.setADSR(attackTime, decayTime);
 *    osc = new p5.Oscillator();
 *    osc.amp(env);
 *    amp = new p5.Amplitude();
 *
 *    cnv.mousePressed(triggerRamp);
 *  }
 *
 *  function triggerRamp() {
 *    // ensures audio is enabled. See also: `userStartAudio`
 *    osc.start();
 *
 *    env.ramp(osc, 0, attackLevel, decayLevel);
 *  }
 *
 *  function draw() {
 *    background(20);
 *    text('tap to play', 10, 20);
 *    let h = map(amp.getLevel(), 0, 0.4, 0, height);;
 *    rect(0, height, width, -h);
 *  }
 *  </code></div>
 */


p5.Envelope.prototype.ramp = function (unit, secondsFromNow, v1, v2) {
  var now = main.audiocontext.currentTime;
  var tFromNow = secondsFromNow || 0;
  var t = now + tFromNow;
  var destination1 = this.checkExpInput(v1);
  var destination2 = typeof v2 !== 'undefined' ? this.checkExpInput(v2) : undefined; 

  if (unit) {
    if (this.connection !== unit) {
      this.connect(unit);
    }
  } 


  var currentVal = this.checkExpInput(this.control.getValueAtTime(t)); 

  if (destination1 > currentVal) {
    this.control.setTargetAtTime(destination1, t, this._rampAttackTC);
    t += this._rampAttackTime;
  } 
  else if (destination1 < currentVal) {
      this.control.setTargetAtTime(destination1, t, this._rampDecayTC);
      t += this._rampDecayTime;
    } 


  if (destination2 === undefined) return; 

  if (destination2 > destination1) {
    this.control.setTargetAtTime(destination2, t, this._rampAttackTC);
  } 
  else if (destination2 < destination1) {
      this.control.setTargetAtTime(destination2, t, this._rampDecayTC);
    }
};

p5.Envelope.prototype.connect = function (unit) {
  this.connection = unit; 

  if (unit instanceof p5.Oscillator || unit instanceof p5.SoundFile || unit instanceof p5.AudioIn || unit instanceof p5.Reverb || unit instanceof p5.Noise || unit instanceof p5.Filter || unit instanceof p5.Delay) {
    unit = unit.output.gain;
  }

  if (unit instanceof AudioParam) {
    unit.setValueAtTime(0, main.audiocontext.currentTime);
  }

  this.output.connect(unit);
};

p5.Envelope.prototype.disconnect = function () {
  if (this.output) {
    this.output.disconnect();
  }
}; 

/**
 *  Add a value to the p5.Oscillator's output amplitude,
 *  and return the oscillator. Calling this method
 *  again will override the initial add() with new values.
 *
 *  @method  add
 *  @for p5.Envelope
 *  @param {Number} number Constant number to add
 *  @return {p5.Envelope} Envelope Returns this envelope
 *                                     with scaled output
 */


p5.Envelope.prototype.add = function (num) {
  var add = new Add_default.a(num);
  var thisChain = this.mathOps.length;
  var nextChain = this.output;
  return p5.prototype._mathChain(this, add, thisChain, nextChain, Add_default.a);
};
/**
 *  Multiply the p5.Envelope's output amplitude
 *  by a fixed value. Calling this method
 *  again will override the initial mult() with new values.
 *
 *  @method  mult
 *  @for p5.Envelope
 *  @param {Number} number Constant number to multiply
 *  @return {p5.Envelope} Envelope Returns this envelope
 *                                     with scaled output
 */


p5.Envelope.prototype.mult = function (num) {
  var mult = new Multiply_default.a(num);
  var thisChain = this.mathOps.length;
  var nextChain = this.output;
  return p5.prototype._mathChain(this, mult, thisChain, nextChain, Multiply_default.a);
};
/**
 *  Scale this envelope's amplitude values to a given
 *  range, and return the envelope. Calling this method
 *  again will override the initial scale() with new values.
 *
 *  @method  scale
 *  @for p5.Envelope
 *  @param  {Number} inMin  input range minumum
 *  @param  {Number} inMax  input range maximum
 *  @param  {Number} outMin input range minumum
 *  @param  {Number} outMax input range maximum
 *  @return {p5.Envelope} Envelope Returns this envelope
 *                                     with scaled output
 */


p5.Envelope.prototype.scale = function (inMin, inMax, outMin, outMax) {
  var scale = new Scale_default.a(inMin, inMax, outMin, outMax);
  var thisChain = this.mathOps.length;
  var nextChain = this.output;
  return p5.prototype._mathChain(this, scale, thisChain, nextChain, Scale_default.a);
}; 


p5.Envelope.prototype.dispose = function () {
  var index = main.soundArray.indexOf(this);
  main.soundArray.splice(index, 1);
  this.disconnect();

  if (this.control) {
    this.control.dispose();
    this.control = null;
  }

  for (var i = 1; i < this.mathOps.length; i++) {
    this.mathOps[i].dispose();
  }
}; 


p5.Env = function (t1, l1, t2, l2, t3, l3) {
  console.warn('WARNING: p5.Env is now deprecated and may be removed in future versions. ' + 'Please use the new p5.Envelope instead.');
  p5.Envelope.call(this, t1, l1, t2, l2, t3, l3);
};

p5.Env.prototype = Object.create(p5.Envelope.prototype);
var Envelope = p5.Envelope;
 var envelope = (Envelope);
function noise_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { noise_typeof = function _typeof(obj) { return typeof obj; }; } else { noise_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return noise_typeof(obj); }

function noise_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function noise_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function noise_createClass(Constructor, protoProps, staticProps) { if (protoProps) noise_defineProperties(Constructor.prototype, protoProps); if (staticProps) noise_defineProperties(Constructor, staticProps); return Constructor; }

function noise_possibleConstructorReturn(self, call) { if (call && (noise_typeof(call) === "object" || typeof call === "function")) { return call; } return noise_assertThisInitialized(self); }

function noise_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function noise_getPrototypeOf(o) { noise_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return noise_getPrototypeOf(o); }

function noise_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) noise_setPrototypeOf(subClass, superClass); }

function noise_setPrototypeOf(o, p) { noise_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return noise_setPrototypeOf(o, p); }



var _whiteNoiseBuffer = function () {
  var bufferSize = 2 * main.audiocontext.sampleRate;
  var whiteBuffer = main.audiocontext.createBuffer(1, bufferSize, main.audiocontext.sampleRate);
  var noiseData = whiteBuffer.getChannelData(0);

  for (var i = 0; i < bufferSize; i++) {
    noiseData[i] = Math.random() * 2 - 1;
  }

  whiteBuffer.type = 'white';
  return whiteBuffer;
}();

var _pinkNoiseBuffer = function () {
  var bufferSize = 2 * main.audiocontext.sampleRate;
  var pinkBuffer = main.audiocontext.createBuffer(1, bufferSize, main.audiocontext.sampleRate);
  var noiseData = pinkBuffer.getChannelData(0);
  var b0, b1, b2, b3, b4, b5, b6;
  b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;

  for (var i = 0; i < bufferSize; i++) {
    var white = Math.random() * 2 - 1;
    b0 = 0.99886 * b0 + white * 0.0555179;
    b1 = 0.99332 * b1 + white * 0.0750759;
    b2 = 0.969 * b2 + white * 0.153852;
    b3 = 0.8665 * b3 + white * 0.3104856;
    b4 = 0.55 * b4 + white * 0.5329522;
    b5 = -0.7616 * b5 - white * 0.016898;
    noiseData[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
    noiseData[i] *= 0.11; 

    b6 = white * 0.115926;
  }

  pinkBuffer.type = 'pink';
  return pinkBuffer;
}();

var _brownNoiseBuffer = function () {
  var bufferSize = 2 * main.audiocontext.sampleRate;
  var brownBuffer = main.audiocontext.createBuffer(1, bufferSize, main.audiocontext.sampleRate);
  var noiseData = brownBuffer.getChannelData(0);
  var lastOut = 0.0;

  for (var i = 0; i < bufferSize; i++) {
    var white = Math.random() * 2 - 1;
    noiseData[i] = (lastOut + 0.02 * white) / 1.02;
    lastOut = noiseData[i];
    noiseData[i] *= 3.5;
  }

  brownBuffer.type = 'brown';
  return brownBuffer;
}();
/**
 *  Noise is a type of oscillator that generates a buffer with random values.
 *
 *  @class p5.Noise
 *  @extends p5.Oscillator
 *  @constructor
 *  @param {String} type Type of noise can be 'white' (default),
 *                       'brown' or 'pink'.
 */


var noise_Noise =
function (_Oscillator) {
  noise_inherits(Noise, _Oscillator);

  function Noise(type) {
    var _this;

    noise_classCallCheck(this, Noise);

    _this = noise_possibleConstructorReturn(this, noise_getPrototypeOf(Noise).call(this));
    var assignType;
    delete _this.f;
    delete _this.freq;
    delete _this.oscillator;

    if (type === 'brown') {
      assignType = _brownNoiseBuffer;
    } else if (type === 'pink') {
      assignType = _pinkNoiseBuffer;
    } else {
      assignType = _whiteNoiseBuffer;
    }

    _this.buffer = assignType;
    return _this;
  }
  /**
   *  Set type of noise to 'white', 'pink' or 'brown'.
   *  White is the default.
   *
   *  @method setType
   *  @param {String} [type] 'white', 'pink' or 'brown'
   */


  noise_createClass(Noise, [{
    key: "setType",
    value: function setType(type) {
      switch (type) {
        case 'white':
          this.buffer = _whiteNoiseBuffer;
          break;

        case 'pink':
          this.buffer = _pinkNoiseBuffer;
          break;

        case 'brown':
          this.buffer = _brownNoiseBuffer;
          break;

        default:
          this.buffer = _whiteNoiseBuffer;
      }

      if (this.started) {
        var now = main.audiocontext.currentTime;
        this.stop(now);
        this.start(now + 0.01);
      }
    }
  }, {
    key: "getType",
    value: function getType() {
      return this.buffer.type;
    }
  }, {
    key: "start",
    value: function start() {
      if (this.started) {
        this.stop();
      }

      this.noise = main.audiocontext.createBufferSource();
      this.noise.buffer = this.buffer;
      this.noise.loop = true;
      this.noise.connect(this.output);
      var now = main.audiocontext.currentTime;
      this.noise.start(now);
      this.started = true;
    }
  }, {
    key: "stop",
    value: function stop() {
      var now = main.audiocontext.currentTime;

      if (this.noise) {
        this.noise.stop(now);
        this.started = false;
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var now = main.audiocontext.currentTime; 

      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      if (this.noise) {
        this.noise.disconnect();
        this.stop(now);
      }

      if (this.output) {
        this.output.disconnect();
      }

      if (this.panner) {
        this.panner.disconnect();
      }

      this.output = null;
      this.panner = null;
      this.buffer = null;
      this.noise = null;
    }
  }]);

  return Noise;
}(oscillator);

 var noise = (noise_Noise);
var Signal = __nested_webpack_require_117677__(2);
var Signal_default = __nested_webpack_require_117677__.n(Signal);

function pulse_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { pulse_typeof = function _typeof(obj) { return typeof obj; }; } else { pulse_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return pulse_typeof(obj); }

function pulse_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function pulse_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function pulse_createClass(Constructor, protoProps, staticProps) { if (protoProps) pulse_defineProperties(Constructor.prototype, protoProps); if (staticProps) pulse_defineProperties(Constructor, staticProps); return Constructor; }

function pulse_possibleConstructorReturn(self, call) { if (call && (pulse_typeof(call) === "object" || typeof call === "function")) { return call; } return pulse_assertThisInitialized(self); }

function pulse_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function pulse_getPrototypeOf(o) { pulse_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return pulse_getPrototypeOf(o); }

function pulse_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) pulse_setPrototypeOf(subClass, superClass); }

function pulse_setPrototypeOf(o, p) { pulse_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return pulse_setPrototypeOf(o, p); }





/**
 *  Creates a Pulse object, an oscillator that implements
 *  Pulse Width Modulation.
 *  The pulse is created with two oscillators.
 *  Accepts a parameter for frequency, and to set the
 *  width between the pulses. See <a href="
 *  http://p5js.org/reference/#/p5.Oscillator">
 *  <code>p5.Oscillator</code> for a full list of methods.
 *
 *  @class p5.Pulse
 *  @extends p5.Oscillator
 *  @constructor
 *  @param {Number} [freq] Frequency in oscillations per second (Hz)
 *  @param {Number} [w]    Width between the pulses (0 to 1.0,
 *                         defaults to 0)
 *  @example
 *  <div><code>
 *  let pulse;
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(startPulse);
 *    background(220);
 *
 *    pulse = new p5.Pulse();
 *    pulse.amp(0.5);
 *    pulse.freq(220);
 *  }
 *  function startPulse() {
 *    pulse.start();
 *    pulse.amp(0.5, 0.02);
 *  }
 *  function mouseReleased() {
 *    pulse.amp(0, 0.2);
 *  }
 *  function draw() {
 *    background(220);
 *    text('tap to play', 5, 20, width - 20);
 *    let w = map(mouseX, 0, width, 0, 1);
 *    w = constrain(w, 0, 1);
 *    pulse.width(w);
 *    text('pulse width: ' + w, 5, height - 20);
 *  }
 *  </code></div>
 */

var pulse_Pulse =
function (_Oscillator) {
  pulse_inherits(Pulse, _Oscillator);

  function Pulse(freq, w) {
    var _this;

    pulse_classCallCheck(this, Pulse);

    _this = pulse_possibleConstructorReturn(this, pulse_getPrototypeOf(Pulse).call(this, freq, 'sawtooth')); 

    _this.w = w || 0; 

    _this.osc2 = new SawOsc(freq); 

    _this.dNode = main.audiocontext.createDelay(); 

    _this.dcOffset = createDCOffset();
    _this.dcGain = main.audiocontext.createGain();

    _this.dcOffset.connect(_this.dcGain);

    _this.dcGain.connect(_this.output); 


    _this.f = freq || 440;
    var mW = _this.w / _this.oscillator.frequency.value;
    _this.dNode.delayTime.value = mW;
    _this.dcGain.gain.value = 1.7 * (0.5 - _this.w); 

    _this.osc2.disconnect();

    _this.osc2.panner.disconnect();

    _this.osc2.amp(-1); 


    _this.osc2.output.connect(_this.dNode);

    _this.dNode.connect(_this.output);

    _this.output.gain.value = 1;

    _this.output.connect(_this.panner);

    return _this;
  }
  /**
   *  Set the width of a Pulse object (an oscillator that implements
   *  Pulse Width Modulation).
   *
   *  @method  width
   *  @param {Number} [width]    Width between the pulses (0 to 1.0,
   *                         defaults to 0)
   */


  pulse_createClass(Pulse, [{
    key: "width",
    value: function width(w) {
      if (typeof w === 'number') {
        if (w <= 1.0 && w >= 0.0) {
          this.w = w; 

          var mW = this.w / this.oscillator.frequency.value;
          this.dNode.delayTime.value = mW;
        }

        this.dcGain.gain.value = 1.7 * (0.5 - this.w);
      } else {
        w.connect(this.dNode.delayTime);
        var sig = new Signal_default.a(-0.5); 

        w.connect(sig);
        var mult1 = new Multiply_default.a(-1);
        var mult2 = new Multiply_default.a(1.7);
        sig = sig.connect(mult1).connect(mult2);
        sig.connect(this.dcGain.gain);
      }
    }
  }, {
    key: "start",
    value: function start(f, time) {
      var now = main.audiocontext.currentTime;
      var t = time || 0;

      if (!this.started) {
        var freq = f || this.f;
        var type = this.oscillator.type;
        this.oscillator = main.audiocontext.createOscillator();
        this.oscillator.frequency.setValueAtTime(freq, now);
        this.oscillator.type = type;
        this.oscillator.connect(this.output);
        this.oscillator.start(t + now); 

        this.osc2.oscillator = main.audiocontext.createOscillator();
        this.osc2.oscillator.frequency.setValueAtTime(freq, t + now);
        this.osc2.oscillator.type = type;
        this.osc2.oscillator.connect(this.osc2.output);
        this.osc2.start(t + now);
        this.freqNode = [this.oscillator.frequency, this.osc2.oscillator.frequency]; 

        this.dcOffset = createDCOffset();
        this.dcOffset.connect(this.dcGain);
        this.dcOffset.start(t + now); 

        if (this.mods !== undefined && this.mods.frequency !== undefined) {
          this.mods.frequency.connect(this.freqNode[0]);
          this.mods.frequency.connect(this.freqNode[1]);
        }

        this.started = true;
        this.osc2.started = true;
      }
    }
  }, {
    key: "stop",
    value: function stop(time) {
      if (this.started) {
        var t = time || 0;
        var now = main.audiocontext.currentTime;
        this.oscillator.stop(t + now);

        if (this.osc2.oscillator) {
          this.osc2.oscillator.stop(t + now);
        }

        this.dcOffset.stop(t + now);
        this.started = false;
        this.osc2.started = false;
      }
    }
  }, {
    key: "freq",
    value: function freq(val) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var tFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (typeof val === 'number') {
        this.f = val;
        var now = main.audiocontext.currentTime;
        var currentFreq = this.oscillator.frequency.value;
        this.oscillator.frequency.cancelScheduledValues(now);
        this.oscillator.frequency.setValueAtTime(currentFreq, now + tFromNow);
        this.oscillator.frequency.exponentialRampToValueAtTime(val, tFromNow + rampTime + now);
        this.osc2.oscillator.frequency.cancelScheduledValues(now);
        this.osc2.oscillator.frequency.setValueAtTime(currentFreq, now + tFromNow);
        this.osc2.oscillator.frequency.exponentialRampToValueAtTime(val, tFromNow + rampTime + now);

        if (this.freqMod) {
          this.freqMod.output.disconnect();
          this.freqMod = null;
        }
      } else if (val.output) {
        val.output.disconnect();
        val.output.connect(this.oscillator.frequency);
        val.output.connect(this.osc2.oscillator.frequency);
        this.freqMod = val;
      }
    }
  }]);

  return Pulse;
}(oscillator); 


function createDCOffset() {
  var ac = main.audiocontext;
  var buffer = ac.createBuffer(1, 2048, ac.sampleRate);
  var data = buffer.getChannelData(0);

  for (var i = 0; i < 2048; i++) {
    data[i] = 1.0;
  }

  var bufferSource = ac.createBufferSource();
  bufferSource.buffer = buffer;
  bufferSource.loop = true;
  return bufferSource;
}

 var pulse = (pulse_Pulse);
function audioin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function audioin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function audioin_createClass(Constructor, protoProps, staticProps) { if (protoProps) audioin_defineProperties(Constructor.prototype, protoProps); if (staticProps) audioin_defineProperties(Constructor, staticProps); return Constructor; }



main.inputSources = [];
/**
 *  <p>Get audio from an input, i.e. your computer's microphone.</p>
 *
 *  <p>Turn the mic on/off with the start() and stop() methods. When the mic
 *  is on, its volume can be measured with getLevel or by connecting an
 *  FFT object.</p>
 *
 *  <p>If you want to hear the AudioIn, use the .connect() method.
 *  AudioIn does not connect to p5.sound output by default to prevent
 *  feedback.</p>
 *
 *  <p><em>Note: This uses the <a href="http://caniuse.com/stream">getUserMedia/
 *  Stream</a> API, which is not supported by certain browsers. Access in Chrome browser
 *  is limited to localhost and https, but access over http may be limited.</em></p>
 *
 *  @class p5.AudioIn
 *  @constructor
 *  @param {Function} [errorCallback] A function to call if there is an error
 *                                    accessing the AudioIn. For example,
 *                                    Safari and iOS devices do not
 *                                    currently allow microphone access.
 *  @example
 *  <div><code>
 *  let mic;
 *
 *   function setup(){
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(userStartAudio);
 *    textAlign(CENTER);
 *    mic = new p5.AudioIn();
 *    mic.start();
 *  }
 *
 *  function draw(){
 *    background(0);
 *    fill(255);
 *    text('tap to start', width/2, 20);
 *
 *    micLevel = mic.getLevel();
 *    let y = height - micLevel * height;
 *    ellipse(width/2, y, 10, 10);
 *  }
 *  </code></div>
 */

var audioin_AudioIn =
function () {
  function AudioIn(errorCallback) {
    audioin_classCallCheck(this, AudioIn);


    /**
     * @property {GainNode} input
     */
    this.input = main.audiocontext.createGain();
    /**
     * @property {GainNode} output
     */

    this.output = main.audiocontext.createGain();
    /**
     * @property {MediaStream|null} stream
     */

    this.stream = null;
    /**
     * @property {MediaStreamAudioSourceNode|null} mediaStream
     */

    this.mediaStream = null;
    /**
     * @property {Number|null} currentSource
     */

    this.currentSource = null;
    /**
     *  Client must allow browser to access their microphone / audioin source.
     *  Default: false. Will become true when the client enables access.
     *
     *  @property {Boolean} enabled
     */

    this.enabled = false;
    /**
     * Input amplitude, connect to it by default but not to master out
     *
     *  @property {p5.Amplitude} amplitude
     */

    this.amplitude = new amplitude();
    this.output.connect(this.amplitude.input);

    if (!window.MediaStreamTrack || !window.navigator.mediaDevices || !window.navigator.mediaDevices.getUserMedia) {
      errorCallback ? errorCallback() : window.alert('This browser does not support MediaStreamTrack and mediaDevices');
    } 


    main.soundArray.push(this);
  }
  /**
   *  Start processing audio input. This enables the use of other
   *  AudioIn methods like getLevel(). Note that by default, AudioIn
   *  is not connected to p5.sound's output. So you won't hear
   *  anything unless you use the connect() method.<br/>
   *
   *  Certain browsers limit access to the user's microphone. For example,
   *  Chrome only allows access from localhost and over https. For this reason,
   *  you may want to include an errorCallback—a function that is called in case
   *  the browser won't provide mic access.
   *
   *  @method start
   *  @for p5.AudioIn
   *  @param {Function} [successCallback] Name of a function to call on
   *                                    success.
   *  @param {Function} [errorCallback] Name of a function to call if
   *                                    there was an error. For example,
   *                                    some browsers do not support
   *                                    getUserMedia.
   */


  audioin_createClass(AudioIn, [{
    key: "start",
    value: function start(successCallback, errorCallback) {
      var self = this;

      if (this.stream) {
        this.stop();
      } 


      var audioSource = main.inputSources[self.currentSource];
      var constraints = {
        audio: {
          sampleRate: main.audiocontext.sampleRate,
          echoCancellation: false
        }
      }; 

      if (main.inputSources[this.currentSource]) {
        constraints.audio.deviceId = audioSource.deviceId;
      }

      window.navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {
        self.stream = stream;
        self.enabled = true; 

        self.mediaStream = main.audiocontext.createMediaStreamSource(stream);
        self.mediaStream.connect(self.output); 

        self.amplitude.setInput(self.output);
        if (successCallback) successCallback();
      })["catch"](function (err) {
        if (errorCallback) errorCallback(err);else console.error(err);
      });
    }
    /**
     *  Turn the AudioIn off. If the AudioIn is stopped, it cannot getLevel().
     *  If re-starting, the user may be prompted for permission access.
     *
     *  @method stop
     *  @for p5.AudioIn
     */

  }, {
    key: "stop",
    value: function stop() {
      if (this.stream) {
        this.stream.getTracks().forEach(function (track) {
          track.stop();
        });
        this.mediaStream.disconnect();
        delete this.mediaStream;
        delete this.stream;
      }
    }
    /**
     *  Connect to an audio unit. If no parameter is provided, will
     *  connect to the main output (i.e. your speakers).<br/>
     *
     *  @method  connect
     *  @for p5.AudioIn
     *  @param  {Object} [unit] An object that accepts audio input,
     *                          such as an FFT
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      if (unit) {
        if (unit.hasOwnProperty('input')) {
          this.output.connect(unit.input);
        } else if (unit.hasOwnProperty('analyser')) {
          this.output.connect(unit.analyser);
        } else {
          this.output.connect(unit);
        }
      } else {
        this.output.connect(main.input);
      }
    }
    /**
     *  Disconnect the AudioIn from all audio units. For example, if
     *  connect() had been called, disconnect() will stop sending
     *  signal to your speakers.<br/>
     *
     *  @method  disconnect
     *  @for p5.AudioIn
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect(); 

        this.output.connect(this.amplitude.input);
      }
    }
    /**
     *  Read the Amplitude (volume level) of an AudioIn. The AudioIn
     *  class contains its own instance of the Amplitude class to help
     *  make it easy to get a microphone's volume level. Accepts an
     *  optional smoothing value (0.0 < 1.0). <em>NOTE: AudioIn must
     *  .start() before using .getLevel().</em><br/>
     *
     *  @method  getLevel
     *  @for p5.AudioIn
     *  @param  {Number} [smoothing] Smoothing is 0.0 by default.
     *                               Smooths values based on previous values.
     *  @return {Number}           Volume level (between 0.0 and 1.0)
     */

  }, {
    key: "getLevel",
    value: function getLevel(smoothing) {
      if (smoothing) {
        this.amplitude.smoothing = smoothing;
      }

      return this.amplitude.getLevel();
    }
    /**
     *  Set amplitude (volume) of a mic input between 0 and 1.0. <br/>
     *
     *  @method  amp
     *  @for p5.AudioIn
     *  @param  {Number} vol between 0 and 1.0
     *  @param {Number} [time] ramp time (optional)
     */

  }, {
    key: "amp",
    value: function amp(vol, t) {
      if (t) {
        var rampTime = t || 0;
        var currentVol = this.output.gain.value;
        this.output.gain.cancelScheduledValues(main.audiocontext.currentTime);
        this.output.gain.setValueAtTime(currentVol, main.audiocontext.currentTime);
        this.output.gain.linearRampToValueAtTime(vol, rampTime + main.audiocontext.currentTime);
      } else {
        this.output.gain.cancelScheduledValues(main.audiocontext.currentTime);
        this.output.gain.setValueAtTime(vol, main.audiocontext.currentTime);
      }
    }
    /**
     * Returns a list of available input sources. This is a wrapper
     * for <a href="https://developer.mozilla.org/
     * en-US/docs/Web/API/MediaDevices/enumerateDevices" target="_blank">
     * MediaDevices.enumerateDevices() - Web APIs | MDN</a>
     * and it returns a Promise.
     * @method  getSources
     * @for p5.AudioIn
     * @param  {Function} [successCallback] This callback function handles the sources when they
     *                                      have been enumerated. The callback function
     *                                      receives the deviceList array as its only argument
     * @param  {Function} [errorCallback] This optional callback receives the error
     *                                    message as its argument.
     * @returns {Promise} Returns a Promise that can be used in place of the callbacks, similar
     *                            to the enumerateDevices() method
     * @example
     *  <div><code>
     *  let audioIn;
     *
     *  function setup(){
     *    text('getting sources...', 0, 20);
     *    audioIn = new p5.AudioIn();
     *    audioIn.getSources(gotSources);
     *  }
     *
     *  function gotSources(deviceList) {
     *    if (deviceList.length > 0) {
     *      //set the source to the first item in the deviceList array
     *      audioIn.setSource(0);
     *      let currentSource = deviceList[audioIn.currentSource];
     *      text('set source to: ' + currentSource.deviceId, 5, 20, width);
     *    }
     *  }
     *  </code></div>
     */

  }, {
    key: "getSources",
    value: function getSources(onSuccess, onError) {
      return new Promise(function (resolve, reject) {
        window.navigator.mediaDevices.enumerateDevices().then(function (devices) {
          main.inputSources = devices.filter(function (device) {
            return device.kind === 'audioinput';
          });
          resolve(main.inputSources);

          if (onSuccess) {
            onSuccess(main.inputSources);
          }
        })["catch"](function (error) {
          reject(error);

          if (onError) {
            onError(error);
          } else {
            console.error('This browser does not support MediaStreamTrack.getSources()');
          }
        });
      });
    }
    /**
     *  Set the input source. Accepts a number representing a
     *  position in the array returned by getSources().
     *  This is only available in browsers that support
     * <a href="https://developer.mozilla.org/
     * en-US/docs/Web/API/MediaDevices/enumerateDevices" target="_blank">
     * navigator.mediaDevices.enumerateDevices()</a>
     *
     *  @method setSource
     *  @for p5.AudioIn
     *  @param {number} num position of input source in the array
     *  @example
     *  <div><code>
     *  let audioIn;
     *
     *  function setup(){
     *    text('getting sources...', 0, 20);
     *    audioIn = new p5.AudioIn();
     *    audioIn.getSources(gotSources);
     *  }
     *
     *  function gotSources(deviceList) {
     *    if (deviceList.length > 0) {
     *      //set the source to the first item in the deviceList array
     *      audioIn.setSource(0);
     *      let currentSource = deviceList[audioIn.currentSource];
     *      text('set source to: ' + currentSource.deviceId, 5, 20, width);
     *    }
     *  }
     *  </code></div>
     */

  }, {
    key: "setSource",
    value: function setSource(num) {
      if (main.inputSources.length > 0 && num < main.inputSources.length) {
        this.currentSource = num;
        console.log('set source to ', main.inputSources[this.currentSource]);
      } else {
        console.log('unable to set input source');
      } 


      if (this.stream && this.stream.active) {
        this.start();
      }
    } 

  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);
      this.stop();

      if (this.output) {
        this.output.disconnect();
      }

      if (this.amplitude) {
        this.amplitude.disconnect();
      }

      delete this.amplitude;
      delete this.output;
    }
  }]);

  return AudioIn;
}();

 var audioin = (audioin_AudioIn);
var CrossFade = __nested_webpack_require_117677__(23);
var CrossFade_default = __nested_webpack_require_117677__.n(CrossFade);

function effect_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function effect_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function effect_createClass(Constructor, protoProps, staticProps) { if (protoProps) effect_defineProperties(Constructor.prototype, protoProps); if (staticProps) effect_defineProperties(Constructor, staticProps); return Constructor; }



/**
 * Effect is a base class for audio effects in p5. <br>
 * This module handles the nodes and methods that are
 * common and useful for current and future effects.
 *
 *
 * This class is extended by <a href="/reference/#/p5.Distortion">p5.Distortion</a>,
 * <a href="/reference/#/p5.Compressor">p5.Compressor</a>,
 * <a href="/reference/#/p5.Delay">p5.Delay</a>,
 * <a href="/reference/#/p5.Filter">p5.Filter</a>,
 * <a href="/reference/#/p5.Reverb">p5.Reverb</a>.
 *
 * @class  p5.Effect
 * @constructor
 *
 * @param {Object} [ac]   Reference to the audio context of the p5 object
 * @param {AudioNode} [input]  Gain Node effect wrapper
 * @param {AudioNode} [output] Gain Node effect wrapper
 * @param {Object} [_drywet]   Tone.JS CrossFade node (defaults to value: 1)
 * @param {AudioNode} [wet]  Effects that extend this class should connect
 *                              to the wet signal to this gain node, so that dry and wet
 *                              signals are mixed properly.
 */

var effect_Effect =
function () {
  function Effect() {
    effect_classCallCheck(this, Effect);

    this.ac = main.audiocontext;
    this.input = this.ac.createGain();
    this.output = this.ac.createGain();
    /**
     *	The p5.Effect class is built
     * 	using Tone.js CrossFade
     * 	@private
     */

    this._drywet = new CrossFade_default.a(1);
    /**
     *	In classes that extend
     *	p5.Effect, connect effect nodes
     *	to the wet parameter
     */

    this.wet = this.ac.createGain();
    this.input.connect(this._drywet.a);
    this.wet.connect(this._drywet.b);

    this._drywet.connect(this.output);

    this.connect(); 

    main.soundArray.push(this);
  }
  /**
   *  Set the output volume of the filter.
   *
   *  @method  amp
   *  @for p5.Effect
   *  @param {Number} [vol] amplitude between 0 and 1.0
   *  @param {Number} [rampTime] create a fade that lasts until rampTime
   *  @param {Number} [tFromNow] schedule this event to happen in tFromNow seconds
   */


  effect_createClass(Effect, [{
    key: "amp",
    value: function amp(vol) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var tFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var now = main.audiocontext.currentTime;
      var startTime = now + tFromNow;
      var endTime = startTime + rampTime + 0.001;
      var currentVol = this.output.gain.value;
      this.output.gain.cancelScheduledValues(now);
      this.output.gain.linearRampToValueAtTime(currentVol, startTime + 0.001);
      this.output.gain.linearRampToValueAtTime(vol, endTime);
    }
    /**
     *  Link effects together in a chain
     *  Example usage: filter.chain(reverb, delay, panner);
     *  May be used with an open-ended number of arguments
     *
     *  @method chain
     *  @for p5.Effect
     *  @param {Object} [arguments]  Chain together multiple sound objects
     */

  }, {
    key: "chain",
    value: function chain() {
      if (arguments.length > 0) {
        this.connect(arguments[0]);

        for (var i = 1; i < arguments.length; i += 1) {
          arguments[i - 1].connect(arguments[i]);
        }
      }

      return this;
    }
    /**
     *  Adjust the dry/wet value.
     *
     *  @method drywet
     *  @for p5.Effect
     *  @param {Number} [fade] The desired drywet value (0 - 1.0)
     */

  }, {
    key: "drywet",
    value: function drywet(fade) {
      if (typeof fade !== 'undefined') {
        this._drywet.fade.value = fade;
      }

      return this._drywet.fade.value;
    }
    /**
     *  Send output to a p5.js-sound, Web Audio Node, or use signal to
     *  control an AudioParam
     *
     *  @method connect
     *  @for p5.Effect
     *  @param {Object} unit
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      var u = unit || p5.soundOut.input;
      this.output.connect(u.input ? u.input : u);
    }
    /**
     * Disconnect all output.
     * @method disconnect
     * @for p5.Effect
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect();
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      if (this.input) {
        this.input.disconnect();
        delete this.input;
      }

      if (this.output) {
        this.output.disconnect();
        delete this.output;
      }

      if (this._drywet) {
        this._drywet.disconnect();

        delete this._drywet;
      }

      if (this.wet) {
        this.wet.disconnect();
        delete this.wet;
      }

      this.ac = undefined;
    }
  }]);

  return Effect;
}();

 var effect = (effect_Effect);
function filter_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { filter_typeof = function _typeof(obj) { return typeof obj; }; } else { filter_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return filter_typeof(obj); }

function filter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function filter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function filter_createClass(Constructor, protoProps, staticProps) { if (protoProps) filter_defineProperties(Constructor.prototype, protoProps); if (staticProps) filter_defineProperties(Constructor, staticProps); return Constructor; }

function filter_possibleConstructorReturn(self, call) { if (call && (filter_typeof(call) === "object" || typeof call === "function")) { return call; } return filter_assertThisInitialized(self); }

function filter_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = filter_getPrototypeOf(object); if (object === null) break; } return object; }

function filter_getPrototypeOf(o) { filter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return filter_getPrototypeOf(o); }

function filter_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) filter_setPrototypeOf(subClass, superClass); }

function filter_setPrototypeOf(o, p) { filter_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return filter_setPrototypeOf(o, p); }


/**
 *  <p>A p5.Filter uses a Web Audio Biquad Filter to filter
 *  the frequency response of an input source. Subclasses
 *  include:</p>
 *  <a href="/reference/#/p5.LowPass"><code>p5.LowPass</code></a>:
 *  Allows frequencies below the cutoff frequency to pass through,
 *  and attenuates frequencies above the cutoff.<br/>
 *  <a href="/reference/#/p5.HighPass"><code>p5.HighPass</code></a>:
 *  The opposite of a lowpass filter. <br/>
 *  <a href="/reference/#/p5.BandPass"><code>p5.BandPass</code></a>:
 *  Allows a range of frequencies to pass through and attenuates
 *  the frequencies below and above this frequency range.<br/>
 *
 *  The <code>.res()</code> method controls either width of the
 *  bandpass, or resonance of the low/highpass cutoff frequency.
 *
 *  This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.
 *  Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,
 *  <a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and
 *  <a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.
 *
 *  @class p5.Filter
 *  @extends p5.Effect
 *  @constructor
 *  @param {String} [type] 'lowpass' (default), 'highpass', 'bandpass'
 *  @example
 *  <div><code>
 *  let fft, noise, filter;
 *
 *  function setup() {
 *    let cnv = createCanvas(100,100);
 *    cnv.mousePressed(makeNoise);
 *    fill(255, 0, 255);
 *
 *    filter = new p5.BandPass();
 *    noise = new p5.Noise();
 *    noise.disconnect();
 *    noise.connect(filter);
 *
 *    fft = new p5.FFT();
 *  }
 *
 *  function draw() {
 *    background(220);
 *
 *    // set the BandPass frequency based on mouseX
 *    let freq = map(mouseX, 0, width, 20, 10000);
 *    freq = constrain(freq, 0, 22050);
 *    filter.freq(freq);
 *    // give the filter a narrow band (lower res = wider bandpass)
 *    filter.res(50);
 *
 *    // draw filtered spectrum
 *    let spectrum = fft.analyze();
 *    noStroke();
 *    for (let i = 0; i < spectrum.length; i++) {
 *      let x = map(i, 0, spectrum.length, 0, width);
 *      let h = -height + map(spectrum[i], 0, 255, height, 0);
 *      rect(x, height, width/spectrum.length, h);
 *    }
 *    if (!noise.started) {
 *      text('tap here and drag to change frequency', 10, 20, width - 20);
 *    } else {
 *      text('Frequency: ' + round(freq)+'Hz', 20, 20, width - 20);
 *    }
 *  }
 *
 *  function makeNoise() {
 *    // see also: `userStartAudio()`
 *    noise.start();
 *    noise.amp(0.5, 0.2);
 *  }
 *
 *  function mouseReleased() {
 *    noise.amp(0, 0.2);
 *  }
 *
 *  </code></div>
 */

var Filter =
function (_Effect) {
  filter_inherits(Filter, _Effect);

  function Filter(type) {
    var _this;

    filter_classCallCheck(this, Filter);

    _this = filter_possibleConstructorReturn(this, filter_getPrototypeOf(Filter).call(this)); 

    /**
     *  The p5.Filter is built with a
     *  <a href="http://www.w3.org/TR/webaudio/#BiquadFilterNode">
     *  Web Audio BiquadFilter Node</a>.
     *
     *  @property {DelayNode} biquadFilter
     */

    _this.biquad = _this.ac.createBiquadFilter();

    _this.input.connect(_this.biquad);

    _this.biquad.connect(_this.wet);

    if (type) {
      _this.setType(type);
    } 


    _this._on = true;
    _this._untoggledType = _this.biquad.type;
    return _this;
  }
  /**
   *  Filter an audio signal according to a set
   *  of filter parameters.
   *
   *  @method  process
   *  @param  {Object} Signal  An object that outputs audio
   *  @param {Number} [freq] Frequency in Hz, from 10 to 22050
   *  @param {Number} [res] Resonance/Width of the filter frequency
   *                        from 0.001 to 1000
   */


  filter_createClass(Filter, [{
    key: "process",
    value: function process(src, freq, res, time) {
      src.connect(this.input);
      this.set(freq, res, time);
    }
    /**
     *  Set the frequency and the resonance of the filter.
     *
     *  @method  set
     *  @param {Number} [freq] Frequency in Hz, from 10 to 22050
     *  @param {Number} [res]  Resonance (Q) from 0.001 to 1000
     *  @param {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     */

  }, {
    key: "set",
    value: function set(freq, res, time) {
      if (freq) {
        this.freq(freq, time);
      }

      if (res) {
        this.res(res, time);
      }
    }
    /**
     *  Set the filter frequency, in Hz, from 10 to 22050 (the range of
     *  human hearing, although in reality most people hear in a narrower
     *  range).
     *
     *  @method  freq
     *  @param  {Number} freq Filter Frequency
     *  @param {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     *  @return {Number} value  Returns the current frequency value
     */

  }, {
    key: "freq",
    value: function freq(_freq, time) {
      var t = time || 0;

      if (_freq <= 0) {
        _freq = 1;
      }

      if (typeof _freq === 'number') {
        this.biquad.frequency.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.biquad.frequency.exponentialRampToValueAtTime(_freq, this.ac.currentTime + 0.02 + t);
      } else if (_freq) {
        _freq.connect(this.biquad.frequency);
      }

      return this.biquad.frequency.value;
    }
    /**
     *  Controls either width of a bandpass frequency,
     *  or the resonance of a low/highpass cutoff frequency.
     *
     *  @method  res
     *  @param {Number} res  Resonance/Width of filter freq
     *                       from 0.001 to 1000
     *  @param {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     *  @return {Number} value Returns the current res value
     */

  }, {
    key: "res",
    value: function res(_res, time) {
      var t = time || 0;

      if (typeof _res === 'number') {
        this.biquad.Q.value = _res;
        this.biquad.Q.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.biquad.Q.linearRampToValueAtTime(_res, this.ac.currentTime + 0.02 + t);
      } else if (_res) {
        _res.connect(this.biquad.Q);
      }

      return this.biquad.Q.value;
    }
    /**
     * Controls the gain attribute of a Biquad Filter.
     * This is distinctly different from .amp() which is inherited from p5.Effect
     * .amp() controls the volume via the output gain node
     * p5.Filter.gain() controls the gain parameter of a Biquad Filter node.
     *
     * @method gain
     * @param  {Number} gain
     * @return {Number} Returns the current or updated gain value
     */

  }, {
    key: "gain",
    value: function gain(_gain, time) {
      var t = time || 0;

      if (typeof _gain === 'number') {
        this.biquad.gain.value = _gain;
        this.biquad.gain.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.biquad.gain.linearRampToValueAtTime(_gain, this.ac.currentTime + 0.02 + t);
      } else if (_gain) {
        _gain.connect(this.biquad.gain);
      }

      return this.biquad.gain.value;
    }
    /**
     * Toggle function. Switches between the specified type and allpass
     *
     * @method toggle
     * @return {boolean} [Toggle value]
     */

  }, {
    key: "toggle",
    value: function toggle() {
      this._on = !this._on;

      if (this._on === true) {
        this.biquad.type = this._untoggledType;
      } else if (this._on === false) {
        this.biquad.type = 'allpass';
      }

      return this._on;
    }
    /**
     *  Set the type of a p5.Filter. Possible types include:
     *  "lowpass" (default), "highpass", "bandpass",
     *  "lowshelf", "highshelf", "peaking", "notch",
     *  "allpass".
     *
     *  @method  setType
     *  @param {String} t
     */

  }, {
    key: "setType",
    value: function setType(t) {
      this.biquad.type = t;
      this._untoggledType = this.biquad.type;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(filter_getPrototypeOf(Filter.prototype), "dispose", this).call(this);

      if (this.biquad) {
        this.biquad.disconnect();
        delete this.biquad;
      }
    }
  }]);

  return Filter;
}(effect);
/**
 *  Constructor: <code>new p5.LowPass()</code> Filter.
 *  This is the same as creating a p5.Filter and then calling
 *  its method <code>setType('lowpass')</code>.
 *  See p5.Filter for methods.
 *
 *  @class p5.LowPass
 *  @constructor
 *  @extends p5.Filter
 */


var LowPass =
function (_Filter) {
  filter_inherits(LowPass, _Filter);

  function LowPass() {
    filter_classCallCheck(this, LowPass);

    return filter_possibleConstructorReturn(this, filter_getPrototypeOf(LowPass).call(this, 'lowpass'));
  }

  return LowPass;
}(Filter);
/**
 *  Constructor: <code>new p5.HighPass()</code> Filter.
 *  This is the same as creating a p5.Filter and then calling
 *  its method <code>setType('highpass')</code>.
 *  See p5.Filter for methods.
 *
 *  @class p5.HighPass
 *  @constructor
 *  @extends p5.Filter
 */


var HighPass =
function (_Filter2) {
  filter_inherits(HighPass, _Filter2);

  function HighPass() {
    filter_classCallCheck(this, HighPass);

    return filter_possibleConstructorReturn(this, filter_getPrototypeOf(HighPass).call(this, 'highpass'));
  }

  return HighPass;
}(Filter);
/**
 *  Constructor: <code>new p5.BandPass()</code> Filter.
 *  This is the same as creating a p5.Filter and then calling
 *  its method <code>setType('bandpass')</code>.
 *  See p5.Filter for methods.
 *
 *  @class p5.BandPass
 *  @constructor
 *  @extends p5.Filter
 */


var BandPass =
function (_Filter3) {
  filter_inherits(BandPass, _Filter3);

  function BandPass() {
    filter_classCallCheck(this, BandPass);

    return filter_possibleConstructorReturn(this, filter_getPrototypeOf(BandPass).call(this, 'bandpass'));
  }

  return BandPass;
}(Filter);

 var filter = (Filter);

function eqFilter_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { eqFilter_typeof = function _typeof(obj) { return typeof obj; }; } else { eqFilter_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return eqFilter_typeof(obj); }

function eqFilter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function eqFilter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function eqFilter_createClass(Constructor, protoProps, staticProps) { if (protoProps) eqFilter_defineProperties(Constructor.prototype, protoProps); if (staticProps) eqFilter_defineProperties(Constructor, staticProps); return Constructor; }

function eqFilter_possibleConstructorReturn(self, call) { if (call && (eqFilter_typeof(call) === "object" || typeof call === "function")) { return call; } return eqFilter_assertThisInitialized(self); }

function eqFilter_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function eqFilter_getPrototypeOf(o) { eqFilter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eqFilter_getPrototypeOf(o); }

function eqFilter_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) eqFilter_setPrototypeOf(subClass, superClass); }

function eqFilter_setPrototypeOf(o, p) { eqFilter_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eqFilter_setPrototypeOf(o, p); }



/**
 *  EQFilter extends p5.Filter with constraints
 *  necessary for the p5.EQ
 *
 *  @private
 */

var eqFilter_EQFilter =
function (_Filter) {
  eqFilter_inherits(EQFilter, _Filter);

  function EQFilter(freq, res) {
    var _this;

    eqFilter_classCallCheck(this, EQFilter);

    _this = eqFilter_possibleConstructorReturn(this, eqFilter_getPrototypeOf(EQFilter).call(this, 'peaking'));

    _this.disconnect();

    _this.set(freq, res);

    _this.biquad.gain.value = 0;
    delete _this.input;
    delete _this.output;
    delete _this._drywet;
    delete _this.wet;
    return _this;
  }

  eqFilter_createClass(EQFilter, [{
    key: "amp",
    value: function amp() {
      console.warn('`amp()` is not available for p5.EQ bands. Use `.gain()`');
    }
  }, {
    key: "drywet",
    value: function drywet() {
      console.warn('`drywet()` is not available for p5.EQ bands.');
    }
  }, {
    key: "connect",
    value: function connect(unit) {
      var u = unit || p5.soundOut.input;

      if (this.biquad) {
        this.biquad.connect(u.input ? u.input : u);
      } else {
        this.output.connect(u.input ? u.input : u);
      }
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.biquad) {
        this.biquad.disconnect();
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);
      this.disconnect();
      delete this.biquad;
    }
  }]);

  return EQFilter;
}(filter);

 var eqFilter = (eqFilter_EQFilter);
function eq_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { eq_typeof = function _typeof(obj) { return typeof obj; }; } else { eq_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return eq_typeof(obj); }

function eq_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function eq_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function eq_createClass(Constructor, protoProps, staticProps) { if (protoProps) eq_defineProperties(Constructor.prototype, protoProps); if (staticProps) eq_defineProperties(Constructor, staticProps); return Constructor; }

function eq_possibleConstructorReturn(self, call) { if (call && (eq_typeof(call) === "object" || typeof call === "function")) { return call; } return eq_assertThisInitialized(self); }

function eq_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function eq_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { eq_get = Reflect.get; } else { eq_get = function _get(target, property, receiver) { var base = eq_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return eq_get(target, property, receiver || target); }

function eq_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = eq_getPrototypeOf(object); if (object === null) break; } return object; }

function eq_getPrototypeOf(o) { eq_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eq_getPrototypeOf(o); }

function eq_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) eq_setPrototypeOf(subClass, superClass); }

function eq_setPrototypeOf(o, p) { eq_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eq_setPrototypeOf(o, p); }



/**
 * p5.EQ is an audio effect that performs the function of a multiband
 * audio equalizer. Equalization is used to adjust the balance of
 * frequency compoenents of an audio signal. This process is commonly used
 * in sound production and recording to change the waveform before it reaches
 * a sound output device. EQ can also be used as an audio effect to create
 * interesting distortions by filtering out parts of the spectrum. p5.EQ is
 * built using a chain of Web Audio Biquad Filter Nodes and can be
 * instantiated with 3 or 8 bands. Bands can be added or removed from
 * the EQ by directly modifying p5.EQ.bands (the array that stores filters).
 *
 * This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.
 * Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,
 * <a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and
 * <a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.
 *
 * @class p5.EQ
 * @constructor
 * @extends p5.Effect
 * @param {Number} [_eqsize] Constructor will accept 3 or 8, defaults to 3
 * @return {Object} p5.EQ object
 *
 * @example
 * <div><code>
 * let eq, soundFile
 * let eqBandIndex = 0;
 * let eqBandNames = ['lows', 'mids', 'highs'];
 *
 * function preload() {
 *   soundFormats('mp3', 'ogg');
 *   soundFile = loadSound('assets/beat');
 * }
 *
 * function setup() {
 *   let cnv = createCanvas(100, 100);
 *   cnv.mousePressed(toggleSound);
 *
 *   eq = new p5.EQ(eqBandNames.length);
 *   soundFile.disconnect();
 *   eq.process(soundFile);
 * }
 *
 * function draw() {
 *   background(30);
 *   noStroke();
 *   fill(255);
 *   textAlign(CENTER);
 *   text('filtering ', 50, 25);
 *
 *   fill(255, 40, 255);
 *   textSize(26);
 *   text(eqBandNames[eqBandIndex], 50, 55);
 *
 *   fill(255);
 *   textSize(9);
 *
 *   if (!soundFile.isPlaying()) {
 *     text('tap to play', 50, 80);
 *   } else {
 *     text('tap to filter next band', 50, 80)
 *   }
 * }
 *
 * function toggleSound() {
 *   if (!soundFile.isPlaying()) {
 *     soundFile.play();
 *   } else {
 *     eqBandIndex = (eqBandIndex + 1) % eq.bands.length;
 *   }
 *
 *   for (let i = 0; i < eq.bands.length; i++) {
 *     eq.bands[i].gain(0);
 *   }
 *   // filter the band we want to filter
 *   eq.bands[eqBandIndex].gain(-40);
 * }
 * </code></div>
 */

var eq_EQ =
function (_Effect) {
  eq_inherits(EQ, _Effect);

  function EQ(_eqsize) {
    var _this;

    eq_classCallCheck(this, EQ);

    _this = eq_possibleConstructorReturn(this, eq_getPrototypeOf(EQ).call(this)); 

    _eqsize = _eqsize === 3 || _eqsize === 8 ? _eqsize : 3;
    var factor;
    _eqsize === 3 ? factor = Math.pow(2, 3) : factor = 2;
    /**
     *  The p5.EQ is built with abstracted p5.Filter objects.
     *  To modify any bands, use methods of the <a
     *  href="/reference/#/p5.Filter" title="p5.Filter reference">
     *  p5.Filter</a> API, especially `gain` and `freq`.
     *  Bands are stored in an array, with indices 0 - 3, or 0 - 7
     *  @property {Array}  bands
     *
     */

    _this.bands = [];
    var freq, res;

    for (var i = 0; i < _eqsize; i++) {
      if (i === _eqsize - 1) {
        freq = 21000;
        res = 0.01;
      } else if (i === 0) {
        freq = 100;
        res = 0.1;
      } else if (i === 1) {
        freq = _eqsize === 3 ? 360 * factor : 360;
        res = 1;
      } else {
        freq = _this.bands[i - 1].freq() * factor;
        res = 1;
      }

      _this.bands[i] = _this._newBand(freq, res);

      if (i > 0) {
        _this.bands[i - 1].connect(_this.bands[i].biquad);
      } else {
        _this.input.connect(_this.bands[i].biquad);
      }
    }

    _this.bands[_eqsize - 1].connect(_this.output);

    return _this;
  }
  /**
   * Process an input by connecting it to the EQ
   * @method  process
   * @param  {Object} src Audio source
   */


  eq_createClass(EQ, [{
    key: "process",
    value: function process(src) {
      src.connect(this.input);
    } 
    //   * Set the frequency and gain of each band in the EQ. This method should be
    //   * called with 3 or 8 frequency and gain pairs, depending on the size of the EQ.
    //   * ex. eq.set(freq0, gain0, freq1, gain1, freq2, gain2);
    //   *
    //   * @method  set
    //   * @for p5.EQ
    //   * @param {Number} [freq0] Frequency value for band with index 0
    //   * @param {Number} [gain0] Gain value for band with index 0
    //   * @param {Number} [freq1] Frequency value for band with index 1
    //   * @param {Number} [gain1] Gain value for band with index 1
    //   * @param {Number} [freq2] Frequency value for band with index 2
    //   * @param {Number} [gain2] Gain value for band with index 2
    //   * @param {Number} [freq3] Frequency value for band with index 3
    //   * @param {Number} [gain3] Gain value for band with index 3
    //   * @param {Number} [freq4] Frequency value for band with index 4
    //   * @param {Number} [gain4] Gain value for band with index 4
    //   * @param {Number} [freq5] Frequency value for band with index 5
    //   * @param {Number} [gain5] Gain value for band with index 5
    //   * @param {Number} [freq6] Frequency value for band with index 6
    //   * @param {Number} [gain6] Gain value for band with index 6
    //   * @param {Number} [freq7] Frequency value for band with index 7
    //   * @param {Number} [gain7] Gain value for band with index 7
    //   */

  }, {
    key: "set",
    value: function set() {
      if (arguments.length === this.bands.length * 2) {
        for (var i = 0; i < arguments.length; i += 2) {
          this.bands[i / 2].freq(arguments[i]);
          this.bands[i / 2].gain(arguments[i + 1]);
        }
      } else {
        console.error('Argument mismatch. .set() should be called with ' + this.bands.length * 2 + ' arguments. (one frequency and gain value pair for each band of the eq)');
      }
    }
    /**
     * Add a new band. Creates a p5.Filter and strips away everything but
     * the raw biquad filter. This method returns an abstracted p5.Filter,
     * which can be added to p5.EQ.bands, in order to create new EQ bands.
     * @private
     * @for p5.EQ
     * @method  _newBand
     * @param  {Number} freq
     * @param  {Number} res
     * @return {Object}      Abstracted Filter
     */

  }, {
    key: "_newBand",
    value: function _newBand(freq, res) {
      return new eqFilter(freq, res);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      eq_get(eq_getPrototypeOf(EQ.prototype), "dispose", this).call(this);

      if (this.bands) {
        while (this.bands.length > 0) {
          delete this.bands.pop().dispose();
        }

        delete this.bands;
      }
    }
  }]);

  return EQ;
}(effect);

 var eq = (eq_EQ);
function listener3d_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function listener3d_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function listener3d_createClass(Constructor, protoProps, staticProps) { if (protoProps) listener3d_defineProperties(Constructor.prototype, protoProps); if (staticProps) listener3d_defineProperties(Constructor, staticProps); return Constructor; }

//   * listener is a class that can construct both a Spatial Panner
//   * and a Spatial Listener. The panner is based on the
//   * Web Audio Spatial Panner Node
//   * https://www.w3.org/TR/webaudio/#the-listenernode-interface
//   * This panner is a spatial processing node that allows audio to be positioned
//   * and oriented in 3D space.
//   *
//   * The Listener modifies the properties of the Audio Context Listener.
//   * Both objects types use the same methods. The default is a spatial panner.
//   *
//   * <code>p5.Panner3D</code> - Constructs a Spatial Panner<br/>
//   * <code>p5.Listener3D</code> - Constructs a Spatial Listener<br/>
//   *
//   * @class listener
//   * @constructor
//   * @return {Object} p5.Listener3D Object
//   *
//   * @param {Web Audio Node} listener Web Audio Spatial Panning Node
//   * @param {AudioParam} listener.panningModel "equal power" or "HRTF"
//   * @param {AudioParam} listener.distanceModel "linear", "inverse", or "exponential"
//   * @param {String} [type] [Specify construction of a spatial panner or listener]
//   */

var listener3d_Listener3D =
function () {
  function Listener3D(type) {
    listener3d_classCallCheck(this, Listener3D);

    this.ac = main.audiocontext;
    this.listener = this.ac.listener;
  } 
  //   * Connect an audio sorce
  //   * @param  {Object} src Input source
  //   */


  listener3d_createClass(Listener3D, [{
    key: "process",
    value: function process(src) {
      src.connect(this.input);
    } 
    //   * Set the X,Y,Z position of the Panner
    //   * @param  {[Number]} xVal
    //   * @param  {[Number]} yVal
    //   * @param  {[Number]} zVal
    //   * @param  {[Number]} time
    //   * @return {[Array]}      [Updated x, y, z values as an array]
    //   */

  }, {
    key: "position",
    value: function position(xVal, yVal, zVal, time) {
      this.positionX(xVal, time);
      this.positionY(yVal, time);
      this.positionZ(zVal, time);
      return [this.listener.positionX.value, this.listener.positionY.value, this.listener.positionZ.value];
    } 
    //   * Getter and setter methods for position coordinates
    //   * @return {Number}      [updated coordinate value]
    //   */

  }, {
    key: "positionX",
    value: function positionX(xVal, time) {
      var t = time || 0;

      if (typeof xVal === 'number') {
        this.listener.positionX.value = xVal;
        this.listener.positionX.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.positionX.linearRampToValueAtTime(xVal, this.ac.currentTime + 0.02 + t);
      } else if (xVal) {
        xVal.connect(this.listener.positionX);
      }

      return this.listener.positionX.value;
    }
  }, {
    key: "positionY",
    value: function positionY(yVal, time) {
      var t = time || 0;

      if (typeof yVal === 'number') {
        this.listener.positionY.value = yVal;
        this.listener.positionY.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.positionY.linearRampToValueAtTime(yVal, this.ac.currentTime + 0.02 + t);
      } else if (yVal) {
        yVal.connect(this.listener.positionY);
      }

      return this.listener.positionY.value;
    }
  }, {
    key: "positionZ",
    value: function positionZ(zVal, time) {
      var t = time || 0;

      if (typeof zVal === 'number') {
        this.listener.positionZ.value = zVal;
        this.listener.positionZ.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.positionZ.linearRampToValueAtTime(zVal, this.ac.currentTime + 0.02 + t);
      } else if (zVal) {
        zVal.connect(this.listener.positionZ);
      }

      return this.listener.positionZ.value;
    } 
    //   * Overrides the listener orient() method because Listener has slightly
    //   * different params. In human terms, Forward vectors are the direction the
    //   * nose is pointing. Up vectors are the direction of the top of the head.
    //   *
    //   * @method orient
    //   * @param  {Number} xValF  Forward vector X direction
    //   * @param  {Number} yValF  Forward vector Y direction
    //   * @param  {Number} zValF  Forward vector Z direction
    //   * @param  {Number} xValU  Up vector X direction
    //   * @param  {Number} yValU  Up vector Y direction
    //   * @param  {Number} zValU  Up vector Z direction
    //   * @param  {Number} time
    //   * @return {Array}       All orienation params
    //   */

  }, {
    key: "orient",
    value: function orient(xValF, yValF, zValF, xValU, yValU, zValU, time) {
      if (arguments.length === 3 || arguments.length === 4) {
        time = arguments[3];
        this.orientForward(xValF, yValF, zValF, time);
      } else if (arguments.length === 6 || arguments === 7) {
        this.orientForward(xValF, yValF, zValF);
        this.orientUp(xValU, yValU, zValU, time);
      }

      return [this.listener.forwardX.value, this.listener.forwardY.value, this.listener.forwardZ.value, this.listener.upX.value, this.listener.upY.value, this.listener.upZ.value];
    }
  }, {
    key: "orientForward",
    value: function orientForward(xValF, yValF, zValF, time) {
      this.forwardX(xValF, time);
      this.forwardY(yValF, time);
      this.forwardZ(zValF, time);
      return [this.listener.forwardX, this.listener.forwardY, this.listener.forwardZ];
    }
  }, {
    key: "orientUp",
    value: function orientUp(xValU, yValU, zValU, time) {
      this.upX(xValU, time);
      this.upY(yValU, time);
      this.upZ(zValU, time);
      return [this.listener.upX, this.listener.upY, this.listener.upZ];
    } 
    //   * Getter and setter methods for orient coordinates
    //   * @return {Number}      [updated coordinate value]
    //   */

  }, {
    key: "forwardX",
    value: function forwardX(xVal, time) {
      var t = time || 0;

      if (typeof xVal === 'number') {
        this.listener.forwardX.value = xVal;
        this.listener.forwardX.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.forwardX.linearRampToValueAtTime(xVal, this.ac.currentTime + 0.02 + t);
      } else if (xVal) {
        xVal.connect(this.listener.forwardX);
      }

      return this.listener.forwardX.value;
    }
  }, {
    key: "forwardY",
    value: function forwardY(yVal, time) {
      var t = time || 0;

      if (typeof yVal === 'number') {
        this.listener.forwardY.value = yVal;
        this.listener.forwardY.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.forwardY.linearRampToValueAtTime(yVal, this.ac.currentTime + 0.02 + t);
      } else if (yVal) {
        yVal.connect(this.listener.forwardY);
      }

      return this.listener.forwardY.value;
    }
  }, {
    key: "forwardZ",
    value: function forwardZ(zVal, time) {
      var t = time || 0;

      if (typeof zVal === 'number') {
        this.listener.forwardZ.value = zVal;
        this.listener.forwardZ.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.forwardZ.linearRampToValueAtTime(zVal, this.ac.currentTime + 0.02 + t);
      } else if (zVal) {
        zVal.connect(this.listener.forwardZ);
      }

      return this.listener.forwardZ.value;
    }
  }, {
    key: "upX",
    value: function upX(xVal, time) {
      var t = time || 0;

      if (typeof xVal === 'number') {
        this.listener.upX.value = xVal;
        this.listener.upX.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.upX.linearRampToValueAtTime(xVal, this.ac.currentTime + 0.02 + t);
      } else if (xVal) {
        xVal.connect(this.listener.upX);
      }

      return this.listener.upX.value;
    }
  }, {
    key: "upY",
    value: function upY(yVal, time) {
      var t = time || 0;

      if (typeof yVal === 'number') {
        this.listener.upY.value = yVal;
        this.listener.upY.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.upY.linearRampToValueAtTime(yVal, this.ac.currentTime + 0.02 + t);
      } else if (yVal) {
        yVal.connect(this.listener.upY);
      }

      return this.listener.upY.value;
    }
  }, {
    key: "upZ",
    value: function upZ(zVal, time) {
      var t = time || 0;

      if (typeof zVal === 'number') {
        this.listener.upZ.value = zVal;
        this.listener.upZ.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.listener.upZ.linearRampToValueAtTime(zVal, this.ac.currentTime + 0.02 + t);
      } else if (zVal) {
        zVal.connect(this.listener.upZ);
      }

      return this.listener.upZ.value;
    }
  }]);

  return Listener3D;
}();

 var listener3d = (listener3d_Listener3D);
function panner3d_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { panner3d_typeof = function _typeof(obj) { return typeof obj; }; } else { panner3d_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return panner3d_typeof(obj); }

function panner3d_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function panner3d_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function panner3d_createClass(Constructor, protoProps, staticProps) { if (protoProps) panner3d_defineProperties(Constructor.prototype, protoProps); if (staticProps) panner3d_defineProperties(Constructor, staticProps); return Constructor; }

function panner3d_possibleConstructorReturn(self, call) { if (call && (panner3d_typeof(call) === "object" || typeof call === "function")) { return call; } return panner3d_assertThisInitialized(self); }

function panner3d_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function panner3d_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { panner3d_get = Reflect.get; } else { panner3d_get = function _get(target, property, receiver) { var base = panner3d_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return panner3d_get(target, property, receiver || target); }

function panner3d_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = panner3d_getPrototypeOf(object); if (object === null) break; } return object; }

function panner3d_getPrototypeOf(o) { panner3d_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return panner3d_getPrototypeOf(o); }

function panner3d_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) panner3d_setPrototypeOf(subClass, superClass); }

function panner3d_setPrototypeOf(o, p) { panner3d_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return panner3d_setPrototypeOf(o, p); }


/**
 * Panner3D is based on the <a title="Web Audio Panner docs"  href=
 * "https://developer.mozilla.org/en-US/docs/Web/API/PannerNode">
 * Web Audio Spatial Panner Node</a>.
 * This panner is a spatial processing node that allows audio to be positioned
 * and oriented in 3D space.
 *
 * The position is relative to an <a title="Web Audio Listener docs" href=
 * "https://developer.mozilla.org/en-US/docs/Web/API/AudioListener">
 * Audio Context Listener</a>, which can be accessed
 * by <code>p5.soundOut.audiocontext.listener</code>
 *
 *
 * @class p5.Panner3D
 * @constructor
 */

var Panner3D =
function (_Effect) {
  panner3d_inherits(Panner3D, _Effect);

  function Panner3D() {
    var _this;

    panner3d_classCallCheck(this, Panner3D);

    _this = panner3d_possibleConstructorReturn(this, panner3d_getPrototypeOf(Panner3D).call(this));
    /**
     *  <a title="Web Audio Panner docs"  href=
     *  "https://developer.mozilla.org/en-US/docs/Web/API/PannerNode">
     *  Web Audio Spatial Panner Node</a>
     *
     *  Properties include<br>
     * [Panning Model](https://www.w3.org/TR/webaudio/#idl-def-PanningModelType)
     * : "equal power" or "HRTF"<br>
     * [DistanceModel](https://www.w3.org/TR/webaudio/#idl-def-DistanceModelType)
     *  : "linear", "inverse", or "exponential"
     *
     *  @property {AudioNode} panner
     *
     */

    _this.panner = _this.ac.createPanner();
    _this.panner.panningModel = 'HRTF';
    _this.panner.distanceModel = 'linear';

    _this.panner.connect(_this.output);

    _this.input.connect(_this.panner);

    return _this;
  }
  /**
   * Connect an audio sorce
   *
   * @method  process
   * @for p5.Panner3D
   * @param  {Object} src Input source
   */


  panner3d_createClass(Panner3D, [{
    key: "process",
    value: function process(src) {
      src.connect(this.input);
    }
    /**
     * Set the X,Y,Z position of the Panner
     * @method set
     * @for p5.Panner3D
     * @param  {Number} xVal
     * @param  {Number} yVal
     * @param  {Number} zVal
     * @param  {Number} time
     * @return {Array}      Updated x, y, z values as an array
     */

  }, {
    key: "set",
    value: function set(xVal, yVal, zVal, time) {
      this.positionX(xVal, time);
      this.positionY(yVal, time);
      this.positionZ(zVal, time);
      return [this.panner.positionX.value, this.panner.positionY.value, this.panner.positionZ.value];
    }
    /**
     * Getter and setter methods for position coordinates
     * @method positionX
     * @for p5.Panner3D
     * @return {Number}      updated coordinate value
     */

    /**
     * Getter and setter methods for position coordinates
     * @method positionY
     * @for p5.Panner3D
     * @return {Number}      updated coordinate value
     */

    /**
     * Getter and setter methods for position coordinates
     * @method positionZ
     * @for p5.Panner3D
     * @return {Number}      updated coordinate value
     */

  }, {
    key: "positionX",
    value: function positionX(xVal, time) {
      var t = time || 0;

      if (typeof xVal === 'number') {
        this.panner.positionX.value = xVal;
        this.panner.positionX.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.panner.positionX.linearRampToValueAtTime(xVal, this.ac.currentTime + 0.02 + t);
      } else if (xVal) {
        xVal.connect(this.panner.positionX);
      }

      return this.panner.positionX.value;
    }
  }, {
    key: "positionY",
    value: function positionY(yVal, time) {
      var t = time || 0;

      if (typeof yVal === 'number') {
        this.panner.positionY.value = yVal;
        this.panner.positionY.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.panner.positionY.linearRampToValueAtTime(yVal, this.ac.currentTime + 0.02 + t);
      } else if (yVal) {
        yVal.connect(this.panner.positionY);
      }

      return this.panner.positionY.value;
    }
  }, {
    key: "positionZ",
    value: function positionZ(zVal, time) {
      var t = time || 0;

      if (typeof zVal === 'number') {
        this.panner.positionZ.value = zVal;
        this.panner.positionZ.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.panner.positionZ.linearRampToValueAtTime(zVal, this.ac.currentTime + 0.02 + t);
      } else if (zVal) {
        zVal.connect(this.panner.positionZ);
      }

      return this.panner.positionZ.value;
    }
    /**
     * Set the X,Y,Z position of the Panner
     * @method  orient
     * @for p5.Panner3D
     * @param  {Number} xVal
     * @param  {Number} yVal
     * @param  {Number} zVal
     * @param  {Number} time
     * @return {Array}      Updated x, y, z values as an array
     */

  }, {
    key: "orient",
    value: function orient(xVal, yVal, zVal, time) {
      this.orientX(xVal, time);
      this.orientY(yVal, time);
      this.orientZ(zVal, time);
      return [this.panner.orientationX.value, this.panner.orientationY.value, this.panner.orientationZ.value];
    }
    /**
     * Getter and setter methods for orient coordinates
     * @method orientX
     * @for p5.Panner3D
     * @return {Number}      updated coordinate value
     */

    /**
     * Getter and setter methods for orient coordinates
     * @method orientY
     * @for p5.Panner3D
     * @return {Number}      updated coordinate value
     */

    /**
     * Getter and setter methods for orient coordinates
     * @method orientZ
     * @for p5.Panner3D
     * @return {Number}      updated coordinate value
     */

  }, {
    key: "orientX",
    value: function orientX(xVal, time) {
      var t = time || 0;

      if (typeof xVal === 'number') {
        this.panner.orientationX.value = xVal;
        this.panner.orientationX.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.panner.orientationX.linearRampToValueAtTime(xVal, this.ac.currentTime + 0.02 + t);
      } else if (xVal) {
        xVal.connect(this.panner.orientationX);
      }

      return this.panner.orientationX.value;
    }
  }, {
    key: "orientY",
    value: function orientY(yVal, time) {
      var t = time || 0;

      if (typeof yVal === 'number') {
        this.panner.orientationY.value = yVal;
        this.panner.orientationY.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.panner.orientationY.linearRampToValueAtTime(yVal, this.ac.currentTime + 0.02 + t);
      } else if (yVal) {
        yVal.connect(this.panner.orientationY);
      }

      return this.panner.orientationY.value;
    }
  }, {
    key: "orientZ",
    value: function orientZ(zVal, time) {
      var t = time || 0;

      if (typeof zVal === 'number') {
        this.panner.orientationZ.value = zVal;
        this.panner.orientationZ.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.panner.orientationZ.linearRampToValueAtTime(zVal, this.ac.currentTime + 0.02 + t);
      } else if (zVal) {
        zVal.connect(this.panner.orientationZ);
      }

      return this.panner.orientationZ.value;
    }
    /**
     * Set the rolloff factor and max distance
     * @method  setFalloff
     * @for p5.Panner3D
     * @param {Number} [maxDistance]
     * @param {Number} [rolloffFactor]
     */

  }, {
    key: "setFalloff",
    value: function setFalloff(maxDistance, rolloffFactor) {
      this.maxDist(maxDistance);
      this.rolloff(rolloffFactor);
    }
    /**
     * Maxium distance between the source and the listener
     * @method  maxDist
     * @for p5.Panner3D
     * @param  {Number} maxDistance
     * @return {Number} updated value
     */

  }, {
    key: "maxDist",
    value: function maxDist(maxDistance) {
      if (typeof maxDistance === 'number') {
        this.panner.maxDistance = maxDistance;
      }

      return this.panner.maxDistance;
    }
    /**
     * How quickly the volume is reduced as the source moves away from the listener
     * @method  rollof
     * @for p5.Panner3D
     * @param  {Number} rolloffFactor
     * @return {Number} updated value
     */

  }, {
    key: "rolloff",
    value: function rolloff(rolloffFactor) {
      if (typeof rolloffFactor === 'number') {
        this.panner.rolloffFactor = rolloffFactor;
      }

      return this.panner.rolloffFactor;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      panner3d_get(panner3d_getPrototypeOf(Panner3D.prototype), "dispose", this).call(this);

      if (this.panner) {
        this.panner.disconnect();
        delete this.panner;
      }
    }
  }]);

  return Panner3D;
}(effect);

 var panner3d = (Panner3D);
function delay_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { delay_typeof = function _typeof(obj) { return typeof obj; }; } else { delay_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return delay_typeof(obj); }

function delay_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function delay_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function delay_createClass(Constructor, protoProps, staticProps) { if (protoProps) delay_defineProperties(Constructor.prototype, protoProps); if (staticProps) delay_defineProperties(Constructor, staticProps); return Constructor; }

function delay_possibleConstructorReturn(self, call) { if (call && (delay_typeof(call) === "object" || typeof call === "function")) { return call; } return delay_assertThisInitialized(self); }

function delay_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function delay_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { delay_get = Reflect.get; } else { delay_get = function _get(target, property, receiver) { var base = delay_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return delay_get(target, property, receiver || target); }

function delay_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = delay_getPrototypeOf(object); if (object === null) break; } return object; }

function delay_getPrototypeOf(o) { delay_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return delay_getPrototypeOf(o); }

function delay_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) delay_setPrototypeOf(subClass, superClass); }

function delay_setPrototypeOf(o, p) { delay_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return delay_setPrototypeOf(o, p); }



/**
 *  Delay is an echo effect. It processes an existing sound source,
 *  and outputs a delayed version of that sound. The p5.Delay can
 *  produce different effects depending on the delayTime, feedback,
 *  filter, and type. In the example below, a feedback of 0.5 (the
 *  default value) will produce a looping delay that decreases in
 *  volume by 50% each repeat. A filter will cut out the high
 *  frequencies so that the delay does not sound as piercing as the
 *  original source.
 *
 *
 *  This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.
 *  Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,
 *  <a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and
 *  <a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.
 *  @class p5.Delay
 *  @extends p5.Effect
 *  @constructor
 *  @example
 *  <div><code>
 *  let osc;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    background(220);
 *    textAlign(CENTER);
 *    text('tap to play', width/2, height/2);
 *
 *    osc = new p5.Oscillator('square');
 *    osc.amp(0.5);
 *    delay = new p5.Delay();
 *
 *    // delay.process() accepts 4 parameters:
 *    // source, delayTime (in seconds), feedback, filter frequency
 *    delay.process(osc, 0.12, .7, 2300);
 *
 *    cnv.mousePressed(oscStart);
 *  }
 *
 *  function oscStart() {
 *    osc.start();
 *  }
 *
 *  function mouseReleased() {
 *    osc.stop();
 *  }
 *  </code></div>
 */

var delay_Delay =
function (_Effect) {
  delay_inherits(Delay, _Effect);

  function Delay() {
    var _this;

    delay_classCallCheck(this, Delay);

    _this = delay_possibleConstructorReturn(this, delay_getPrototypeOf(Delay).call(this));
    _this._split = _this.ac.createChannelSplitter(2);
    _this._merge = _this.ac.createChannelMerger(2);
    _this._leftGain = _this.ac.createGain();
    _this._rightGain = _this.ac.createGain();
    /**
     *  The p5.Delay is built with two
     *  <a href="http://www.w3.org/TR/webaudio/#DelayNode">
     *  Web Audio Delay Nodes</a>, one for each stereo channel.
     *
     *  @for p5.Delay
     *  @property {DelayNode} leftDelay
     */

    _this.leftDelay = _this.ac.createDelay();
    /**
     *  The p5.Delay is built with two
     *  <a href="http://www.w3.org/TR/webaudio/#DelayNode">
     *  Web Audio Delay Nodes</a>, one for each stereo channel.
     *  @for p5.Delay
     *  @property {DelayNode} rightDelay
     */

    _this.rightDelay = _this.ac.createDelay();
    _this._leftFilter = new filter();
    _this._rightFilter = new filter();

    _this._leftFilter.disconnect();

    _this._rightFilter.disconnect();

    _this._leftFilter.biquad.frequency.setValueAtTime(1200, _this.ac.currentTime);

    _this._rightFilter.biquad.frequency.setValueAtTime(1200, _this.ac.currentTime);

    _this._leftFilter.biquad.Q.setValueAtTime(0.3, _this.ac.currentTime);

    _this._rightFilter.biquad.Q.setValueAtTime(0.3, _this.ac.currentTime); 


    _this.input.connect(_this._split);

    _this.leftDelay.connect(_this._leftGain);

    _this.rightDelay.connect(_this._rightGain);

    _this._leftGain.connect(_this._leftFilter.input);

    _this._rightGain.connect(_this._rightFilter.input);

    _this._merge.connect(_this.wet);

    _this._leftFilter.biquad.gain.setValueAtTime(1, _this.ac.currentTime);

    _this._rightFilter.biquad.gain.setValueAtTime(1, _this.ac.currentTime); 


    _this.setType(0);

    _this._maxDelay = _this.leftDelay.delayTime.maxValue; 

    _this.feedback(0.5);

    return _this;
  }
  /**
   *  Add delay to an audio signal according to a set
   *  of delay parameters.
   *
   *  @method  process
   *  @for p5.Delay
   *  @param  {Object} Signal  An object that outputs audio
   *  @param  {Number} [delayTime] Time (in seconds) of the delay/echo.
   *                               Some browsers limit delayTime to
   *                               1 second.
   *  @param  {Number} [feedback]  sends the delay back through itself
   *                               in a loop that decreases in volume
   *                               each time.
   *  @param  {Number} [lowPass]   Cutoff frequency. Only frequencies
   *                               below the lowPass will be part of the
   *                               delay.
   */


  delay_createClass(Delay, [{
    key: "process",
    value: function process(src, _delayTime, _feedback, _filter) {
      var feedback = _feedback || 0;
      var delayTime = _delayTime || 0;

      if (feedback >= 1.0) {
        throw new Error('Feedback value will force a positive feedback loop.');
      }

      if (delayTime >= this._maxDelay) {
        throw new Error('Delay Time exceeds maximum delay time of ' + this._maxDelay + ' second.');
      }

      src.connect(this.input);
      this.leftDelay.delayTime.setValueAtTime(delayTime, this.ac.currentTime);
      this.rightDelay.delayTime.setValueAtTime(delayTime, this.ac.currentTime);
      this._leftGain.gain.value = feedback;
      this._rightGain.gain.value = feedback;

      if (_filter) {
        this._leftFilter.freq(_filter);

        this._rightFilter.freq(_filter);
      }
    }
    /**
     *  Set the delay (echo) time, in seconds. Usually this value will be
     *  a floating point number between 0.0 and 1.0.
     *
     *  @method  delayTime
     *  @for p5.Delay
     *  @param {Number} delayTime Time (in seconds) of the delay
     */

  }, {
    key: "delayTime",
    value: function delayTime(t) {
      if (typeof t !== 'number') {
        t.connect(this.leftDelay.delayTime);
        t.connect(this.rightDelay.delayTime);
      } else {
        this.leftDelay.delayTime.cancelScheduledValues(this.ac.currentTime);
        this.rightDelay.delayTime.cancelScheduledValues(this.ac.currentTime);
        this.leftDelay.delayTime.linearRampToValueAtTime(t, this.ac.currentTime);
        this.rightDelay.delayTime.linearRampToValueAtTime(t, this.ac.currentTime);
      }
    }
    /**
     *  Feedback occurs when Delay sends its signal back through its input
     *  in a loop. The feedback amount determines how much signal to send each
     *  time through the loop. A feedback greater than 1.0 is not desirable because
     *  it will increase the overall output each time through the loop,
     *  creating an infinite feedback loop. The default value is 0.5
     *
     *  @method  feedback
     *  @for p5.Delay
     *  @param {Number|Object} feedback 0.0 to 1.0, or an object such as an
     *                                  Oscillator that can be used to
     *                                  modulate this param
     *  @returns {Number} Feedback value
     *
     */

  }, {
    key: "feedback",
    value: function feedback(f) {
      if (f && typeof f !== 'number') {
        f.connect(this._leftGain.gain);
        f.connect(this._rightGain.gain);
      } else if (f >= 1.0) {
        throw new Error('Feedback value will force a positive feedback loop.');
      } else if (typeof f === 'number') {
        this._leftGain.gain.value = f;
        this._rightGain.gain.value = f;
      } 


      return this._leftGain.gain.value;
    }
    /**
     *  Set a lowpass filter frequency for the delay. A lowpass filter
     *  will cut off any frequencies higher than the filter frequency.
     *
     *  @method  filter
     *  @for p5.Delay
     *  @param {Number|Object} cutoffFreq  A lowpass filter will cut off any
     *                              frequencies higher than the filter frequency.
     *  @param {Number|Object} res  Resonance of the filter frequency
     *                              cutoff, or an object (i.e. a p5.Oscillator)
     *                              that can be used to modulate this parameter.
     *                              High numbers (i.e. 15) will produce a resonance,
     *                              low numbers (i.e. .2) will produce a slope.
     */

  }, {
    key: "filter",
    value: function filter(freq, q) {
      this._leftFilter.set(freq, q);

      this._rightFilter.set(freq, q);
    }
    /**
     *  Choose a preset type of delay. 'pingPong' bounces the signal
     *  from the left to the right channel to produce a stereo effect.
     *  Any other parameter will revert to the default delay setting.
     *
     *  @method  setType
     *  @for p5.Delay
     *  @param {String|Number} type 'pingPong' (1) or 'default' (0)
     */

  }, {
    key: "setType",
    value: function setType(t) {
      if (t === 1) {
        t = 'pingPong';
      }

      this._split.disconnect();

      this._leftFilter.disconnect();

      this._rightFilter.disconnect();

      this._split.connect(this.leftDelay, 0);

      this._split.connect(this.rightDelay, 1);

      switch (t) {
        case 'pingPong':
          this._rightFilter.setType(this._leftFilter.biquad.type);

          this._leftFilter.output.connect(this._merge, 0, 0);

          this._rightFilter.output.connect(this._merge, 0, 1);

          this._leftFilter.output.connect(this.rightDelay);

          this._rightFilter.output.connect(this.leftDelay);

          break;

        default:
          this._leftFilter.output.connect(this._merge, 0, 0);

          this._rightFilter.output.connect(this._merge, 0, 1);

          this._leftFilter.output.connect(this.leftDelay);

          this._rightFilter.output.connect(this.rightDelay);

      }
    } 

    /**
     *  Set the output level of the delay effect.
     *
     *  @method  amp
     *  @for p5.Delay
     *  @param  {Number} volume amplitude between 0 and 1.0
     *  @param {Number} [rampTime] create a fade that lasts rampTime
     *  @param {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     */

    /**
     *  Send output to a p5.sound or web audio object
     *
     *  @method  connect
     *  @for p5.Delay
     *  @param  {Object} unit
     */

    /**
     *  Disconnect all output.
     *
     *  @method disconnect
     *  @for p5.Delay
     */

  }, {
    key: "dispose",
    value: function dispose() {
      delay_get(delay_getPrototypeOf(Delay.prototype), "dispose", this).call(this);

      this._split.disconnect();

      this._leftFilter.dispose();

      this._rightFilter.dispose();

      this._merge.disconnect();

      this._leftGain.disconnect();

      this._rightGain.disconnect();

      this.leftDelay.disconnect();
      this.rightDelay.disconnect();
      this._split = undefined;
      this._leftFilter = undefined;
      this._rightFilter = undefined;
      this._merge = undefined;
      this._leftGain = undefined;
      this._rightGain = undefined;
      this.leftDelay = undefined;
      this.rightDelay = undefined;
    }
  }]);

  return Delay;
}(effect);

 var delay = (delay_Delay);
function reverb_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { reverb_typeof = function _typeof(obj) { return typeof obj; }; } else { reverb_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return reverb_typeof(obj); }

function reverb_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function reverb_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function reverb_createClass(Constructor, protoProps, staticProps) { if (protoProps) reverb_defineProperties(Constructor.prototype, protoProps); if (staticProps) reverb_defineProperties(Constructor, staticProps); return Constructor; }

function reverb_possibleConstructorReturn(self, call) { if (call && (reverb_typeof(call) === "object" || typeof call === "function")) { return call; } return reverb_assertThisInitialized(self); }

function reverb_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function reverb_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { reverb_get = Reflect.get; } else { reverb_get = function _get(target, property, receiver) { var base = reverb_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return reverb_get(target, property, receiver || target); }

function reverb_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = reverb_getPrototypeOf(object); if (object === null) break; } return object; }

function reverb_getPrototypeOf(o) { reverb_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return reverb_getPrototypeOf(o); }

function reverb_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) reverb_setPrototypeOf(subClass, superClass); }

function reverb_setPrototypeOf(o, p) { reverb_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return reverb_setPrototypeOf(o, p); }




/**
 *  Reverb adds depth to a sound through a large number of decaying
 *  echoes. It creates the perception that sound is occurring in a
 *  physical space. The p5.Reverb has paramters for Time (how long does the
 *  reverb last) and decayRate (how much the sound decays with each echo)
 *  that can be set with the .set() or .process() methods. The p5.Convolver
 *  extends p5.Reverb allowing you to recreate the sound of actual physical
 *  spaces through convolution.
 *
 *  This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.
 *  Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,
 *  <a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and
 *  <a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.
 *
 *  @class p5.Reverb
 *  @extends p5.Effect
 *  @constructor
 *  @example
 *  <div><code>
 *  let soundFile, reverb;
 *  function preload() {
 *    soundFile = loadSound('assets/Damscray_DancingTiger.mp3');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playSound);
 *
 *    reverb = new p5.Reverb();
 *    soundFile.disconnect(); // so we'll only hear reverb...
 *
 *    // connect soundFile to reverb, process w/
 *    // 3 second reverbTime, decayRate of 2%
 *    reverb.process(soundFile, 3, 2);
 *  }
 *
 *  function draw() {
 *    let dryWet = constrain(map(mouseX, 0, width, 0, 1), 0, 1);
 *    // 1 = all reverb, 0 = no reverb
 *    reverb.drywet(dryWet);
 *
 *    background(220);
 *    text('tap to play', 10, 20);
 *    text('dry/wet: ' + round(dryWet * 100) + '%', 10, height - 20);
 *  }
 *
 *  function playSound() {
 *    soundFile.play();
 *  }
 *  </code></div>
 */

var Reverb =
function (_Effect) {
  reverb_inherits(Reverb, _Effect);

  function Reverb() {
    var _this;

    reverb_classCallCheck(this, Reverb);

    _this = reverb_possibleConstructorReturn(this, reverb_getPrototypeOf(Reverb).call(this));

    _this._initConvolverNode(); 


    _this.input.gain.value = 0.5; 

    _this._seconds = 3;
    _this._decay = 2;
    _this._reverse = false;

    _this._buildImpulse();

    return _this;
  }

  reverb_createClass(Reverb, [{
    key: "_initConvolverNode",
    value: function _initConvolverNode() {
      this.convolverNode = this.ac.createConvolver();
      this.input.connect(this.convolverNode);
      this.convolverNode.connect(this.wet);
    }
  }, {
    key: "_teardownConvolverNode",
    value: function _teardownConvolverNode() {
      if (this.convolverNode) {
        this.convolverNode.disconnect();
        delete this.convolverNode;
      }
    }
  }, {
    key: "_setBuffer",
    value: function _setBuffer(audioBuffer) {
      this._teardownConvolverNode();

      this._initConvolverNode();

      this.convolverNode.buffer = audioBuffer;
    }
    /**
     *  Connect a source to the reverb, and assign reverb parameters.
     *
     *  @method  process
     *  @for p5.Reverb
     *  @param  {Object} src     p5.sound / Web Audio object with a sound
     *                           output.
     *  @param  {Number} [seconds] Duration of the reverb, in seconds.
     *                           Min: 0, Max: 10. Defaults to 3.
     *  @param  {Number} [decayRate] Percentage of decay with each echo.
     *                            Min: 0, Max: 100. Defaults to 2.
     *  @param  {Boolean} [reverse] Play the reverb backwards or forwards.
     */

  }, {
    key: "process",
    value: function process(src, seconds, decayRate, reverse) {
      src.connect(this.input);
      var rebuild = false;

      if (seconds) {
        this._seconds = seconds;
        rebuild = true;
      }

      if (decayRate) {
        this._decay = decayRate;
      }

      if (reverse) {
        this._reverse = reverse;
      }

      if (rebuild) {
        this._buildImpulse();
      }
    }
    /**
     *  Set the reverb settings. Similar to .process(), but without
     *  assigning a new input.
     *
     *  @method  set
     *  @for p5.Reverb
     *  @param  {Number} [seconds] Duration of the reverb, in seconds.
     *                           Min: 0, Max: 10. Defaults to 3.
     *  @param  {Number} [decayRate] Percentage of decay with each echo.
     *                            Min: 0, Max: 100. Defaults to 2.
     *  @param  {Boolean} [reverse] Play the reverb backwards or forwards.
     */

  }, {
    key: "set",
    value: function set(seconds, decayRate, reverse) {
      var rebuild = false;

      if (seconds) {
        this._seconds = seconds;
        rebuild = true;
      }

      if (decayRate) {
        this._decay = decayRate;
      }

      if (reverse) {
        this._reverse = reverse;
      }

      if (rebuild) {
        this._buildImpulse();
      }
    } 

    /**
     *  Set the output level of the reverb effect.
     *
     *  @method  amp
     *  @for p5.Reverb
     *  @param  {Number} volume amplitude between 0 and 1.0
     *  @param  {Number} [rampTime] create a fade that lasts rampTime
     *  @param  {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     */

    /**
     *  Send output to a p5.sound or web audio object
     *
     *  @method  connect
     *  @for p5.Reverb
     *  @param  {Object} unit
     */

    /**
     *  Disconnect all output.
     *
     *  @method disconnect
     *  @for p5.Reverb
     */

    /**
     *  Inspired by Simple Reverb by Jordan Santell
     *  https://github.com/web-audio-components/simple-reverb/blob/master/index.js
     *
     *  Utility function for building an impulse response
     *  based on the module parameters.
     *
     *  @private
     */

  }, {
    key: "_buildImpulse",
    value: function _buildImpulse() {
      var rate = this.ac.sampleRate;
      var length = rate * this._seconds;
      var decay = this._decay;
      var impulse = this.ac.createBuffer(2, length, rate);
      var impulseL = impulse.getChannelData(0);
      var impulseR = impulse.getChannelData(1);
      var n, i;

      for (i = 0; i < length; i++) {
        n = this._reverse ? length - i : i;
        impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);
        impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);
      }

      this._setBuffer(impulse);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      reverb_get(reverb_getPrototypeOf(Reverb.prototype), "dispose", this).call(this);

      this._teardownConvolverNode();
    }
  }]);

  return Reverb;
}(effect); 

/**
 *  <p>p5.Convolver extends p5.Reverb. It can emulate the sound of real
 *  physical spaces through a process called <a href="
 *  https://en.wikipedia.org/wiki/Convolution_reverb#Real_space_simulation">
 *  convolution</a>.</p>
 *
 *  <p>Convolution multiplies any audio input by an "impulse response"
 *  to simulate the dispersion of sound over time. The impulse response is
 *  generated from an audio file that you provide. One way to
 *  generate an impulse response is to pop a balloon in a reverberant space
 *  and record the echo. Convolution can also be used to experiment with
 *  sound.</p>
 *
 *  <p>Use the method <code>createConvolution(path)</code> to instantiate a
 *  p5.Convolver with a path to your impulse response audio file.</p>
 *
 *  @class p5.Convolver
 *  @extends p5.Effect
 *  @constructor
 *  @param  {String}   path     path to a sound file
 *  @param  {Function} [callback] function to call when loading succeeds
 *  @param  {Function} [errorCallback] function to call if loading fails.
 *                                     This function will receive an error or
 *                                     XMLHttpRequest object with information
 *                                     about what went wrong.
 *  @example
 *  <div><code>
 *  let cVerb, sound;
 *  function preload() {
 *    // We have both MP3 and OGG versions of all sound assets
 *    soundFormats('ogg', 'mp3');
 *
 *    // Try replacing 'bx-spring' with other soundfiles like
 *    // 'concrete-tunnel' 'small-plate' 'drum' 'beatbox'
 *    cVerb = createConvolver('assets/bx-spring.mp3');
 *
 *    // Try replacing 'Damscray_DancingTiger' with
 *    // 'beat', 'doorbell', lucky_dragons_-_power_melody'
 *    sound = loadSound('assets/Damscray_DancingTiger.mp3');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playSound);
 *    background(220);
 *    text('tap to play', 20, 20);
 *
 *    // disconnect from main output...
 *    sound.disconnect();
 *
 *    // ...and process with cVerb
 *    // so that we only hear the convolution
 *    cVerb.process(sound);
 *  }
 *
 *  function playSound() {
 *    sound.play();
 *  }
 *  </code></div>
 */


var reverb_Convolver =
function (_Reverb) {
  reverb_inherits(Convolver, _Reverb);

  function Convolver(path, callback, errorCallback) {
    var _this2;

    reverb_classCallCheck(this, Convolver);

    _this2 = reverb_possibleConstructorReturn(this, reverb_getPrototypeOf(Convolver).call(this));
    /**
     *  Internally, the p5.Convolver uses the a
     *  <a href="http://www.w3.org/TR/webaudio/#ConvolverNode">
     *  Web Audio Convolver Node</a>.
     *
     *  @property {ConvolverNode} convolverNode
     */

    _this2._initConvolverNode(); 


    _this2.input.gain.value = 0.5;

    if (path) {
      _this2.impulses = [];

      _this2._loadBuffer(path, callback, errorCallback);
    } else {
      _this2._seconds = 3;
      _this2._decay = 2;
      _this2._reverse = false;

      _this2._buildImpulse();
    }
    /**
     *  If you load multiple impulse files using the .addImpulse method,
     *  they will be stored as Objects in this Array. Toggle between them
     *  with the <code>toggleImpulse(id)</code> method.
     *
     *  @property {Array} impulses
     *  @for p5.Convolver
     */


    _this2.impulses = [];
    _this2.set = null;
    return _this2;
  }
  /**
   *  Private method to load a buffer as an Impulse Response,
   *  assign it to the convolverNode, and add to the Array of .impulses.
   *
   *  @param   {String}   path
   *  @param   {Function} callback
   *  @param   {Function} errorCallback
   *  @private
   */


  reverb_createClass(Convolver, [{
    key: "_loadBuffer",
    value: function _loadBuffer(_path, callback, errorCallback) {
      var path = p5.prototype._checkFileFormats(_path);

      var self = this;
      var errorTrace = new Error().stack;
      var ac = Object(audiocontext["b" ])();
      var request = new XMLHttpRequest();
      request.open('GET', path, true);
      request.responseType = 'arraybuffer';

      request.onload = function () {
        if (request.status === 200) {
          ac.decodeAudioData(request.response, function (buff) {
            var buffer = {};
            var chunks = path.split('/');
            buffer.name = chunks[chunks.length - 1];
            buffer.audioBuffer = buff;
            self.impulses.push(buffer);

            self._setBuffer(buffer.audioBuffer);

            if (callback) {
              callback(buffer);
            }
          }, 
          function () {
            var err = new errorHandler('decodeAudioData', errorTrace, self.url);
            var msg = 'AudioContext error at decodeAudioData for ' + self.url;

            if (errorCallback) {
              err.msg = msg;
              errorCallback(err);
            } else {
              console.error(msg + '\n The error stack trace includes: \n' + err.stack);
            }
          });
        } 
        else {
            var err = new errorHandler('loadConvolver', errorTrace, self.url);
            var msg = 'Unable to load ' + self.url + '. The request status was: ' + request.status + ' (' + request.statusText + ')';

            if (errorCallback) {
              err.message = msg;
              errorCallback(err);
            } else {
              console.error(msg + '\n The error stack trace includes: \n' + err.stack);
            }
          }
      }; 


      request.onerror = function () {
        var err = new errorHandler('loadConvolver', errorTrace, self.url);
        var msg = 'There was no response from the server at ' + self.url + '. Check the url and internet connectivity.';

        if (errorCallback) {
          err.message = msg;
          errorCallback(err);
        } else {
          console.error(msg + '\n The error stack trace includes: \n' + err.stack);
        }
      };

      request.send();
    }
    /**
     *  Connect a source to the convolver.
     *
     *  @method  process
     *  @for p5.Convolver
     *  @param  {Object} src     p5.sound / Web Audio object with a sound
     *                           output.
     *  @example
     *  <div><code>
     *  let cVerb, sound;
     *  function preload() {
     *    // We have both MP3 and OGG versions of all sound assets
     *    soundFormats('ogg', 'mp3');
     *
     *    // Try replacing 'bx-spring' with other soundfiles like
     *    // 'concrete-tunnel' 'small-plate' 'drum' 'beatbox'
     *    cVerb = createConvolver('assets/bx-spring.mp3');
     *
     *    // Try replacing 'Damscray_DancingTiger' with
     *    // 'beat', 'doorbell', lucky_dragons_-_power_melody'
     *    sound = loadSound('assets/Damscray_DancingTiger.mp3');
     *  }
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(playSound);
     *    background(220);
     *    text('tap to play', 20, 20);
     *
     *    // disconnect from main output...
     *    sound.disconnect();
     *
     *    // ...and process with cVerb
     *    // so that we only hear the convolution
     *    cVerb.process(sound);
     *  }
     *
     *  function playSound() {
     *    sound.play();
     *  }
     *
     *  </code></div>
     */

  }, {
    key: "process",
    value: function process(src) {
      src.connect(this.input);
    }
    /**
     *  Load and assign a new Impulse Response to the p5.Convolver.
     *  The impulse is added to the <code>.impulses</code> array. Previous
     *  impulses can be accessed with the <code>.toggleImpulse(id)</code>
     *  method.
     *
     *  @method  addImpulse
     *  @for p5.Convolver
     *  @param  {String}   path     path to a sound file
     *  @param  {Function} callback function (optional)
     *  @param  {Function} errorCallback function (optional)
     */

  }, {
    key: "addImpulse",
    value: function addImpulse(path, callback, errorCallback) {
      if (window.location.origin.indexOf('file://') > -1 && window.cordova === 'undefined') {
        alert('This sketch may require a server to load external files. Please see http://bit.ly/1qcInwS');
      }

      this._loadBuffer(path, callback, errorCallback);
    }
    /**
     *  Similar to .addImpulse, except that the <code>.impulses</code>
     *  Array is reset to save memory. A new <code>.impulses</code>
     *  array is created with this impulse as the only item.
     *
     *  @method  resetImpulse
     *  @for p5.Convolver
     *  @param  {String}   path     path to a sound file
     *  @param  {Function} callback function (optional)
     *  @param  {Function} errorCallback function (optional)
     */

  }, {
    key: "resetImpulse",
    value: function resetImpulse(path, callback, errorCallback) {
      if (window.location.origin.indexOf('file://') > -1 && window.cordova === 'undefined') {
        alert('This sketch may require a server to load external files. Please see http://bit.ly/1qcInwS');
      }

      this.impulses = [];

      this._loadBuffer(path, callback, errorCallback);
    }
    /**
     *  If you have used <code>.addImpulse()</code> to add multiple impulses
     *  to a p5.Convolver, then you can use this method to toggle between
     *  the items in the <code>.impulses</code> Array. Accepts a parameter
     *  to identify which impulse you wish to use, identified either by its
     *  original filename (String) or by its position in the <code>.impulses
     *  </code> Array (Number).<br/>
     *  You can access the objects in the .impulses Array directly. Each
     *  Object has two attributes: an <code>.audioBuffer</code> (type:
     *  Web Audio <a href="
     *  http://webaudio.github.io/web-audio-api/#the-audiobuffer-interface">
     *  AudioBuffer)</a> and a <code>.name</code>, a String that corresponds
     *  with the original filename.
     *
     *  @method toggleImpulse
     *  @for p5.Convolver
     *  @param {String|Number} id Identify the impulse by its original filename
     *                            (String), or by its position in the
     *                            <code>.impulses</code> Array (Number).
     */

  }, {
    key: "toggleImpulse",
    value: function toggleImpulse(id) {
      if (typeof id === 'number' && id < this.impulses.length) {
        this._setBuffer(this.impulses[id].audioBuffer);
      }

      if (typeof id === 'string') {
        for (var i = 0; i < this.impulses.length; i++) {
          if (this.impulses[i].name === id) {
            this._setBuffer(this.impulses[i].audioBuffer);

            break;
          }
        }
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      reverb_get(reverb_getPrototypeOf(Convolver.prototype), "dispose", this).call(this); 


      for (var i in this.impulses) {
        if (this.impulses[i]) {
          this.impulses[i] = null;
        }
      }
    }
  }]);

  return Convolver;
}(Reverb);
/**
 *  Create a p5.Convolver. Accepts a path to a soundfile
 *  that will be used to generate an impulse response.
 *
 *  @method  createConvolver
 *  @for p5
 *  @param  {String}   path     path to a sound file
 *  @param  {Function} [callback] function to call if loading is successful.
 *                                The object will be passed in as the argument
 *                                to the callback function.
 *  @param  {Function} [errorCallback] function to call if loading is not successful.
 *                                A custom error will be passed in as the argument
 *                                to the callback function.
 *  @return {p5.Convolver}
 *  @example
 *  <div><code>
 *  let cVerb, sound;
 *  function preload() {
 *    // We have both MP3 and OGG versions of all sound assets
 *    soundFormats('ogg', 'mp3');
 *
 *    // Try replacing 'bx-spring' with other soundfiles like
 *    // 'concrete-tunnel' 'small-plate' 'drum' 'beatbox'
 *    cVerb = createConvolver('assets/bx-spring.mp3');
 *
 *    // Try replacing 'Damscray_DancingTiger' with
 *    // 'beat', 'doorbell', lucky_dragons_-_power_melody'
 *    sound = loadSound('assets/Damscray_DancingTiger.mp3');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playSound);
 *    background(220);
 *    text('tap to play', 20, 20);
 *
 *    // disconnect from main output...
 *    sound.disconnect();
 *
 *    // ...and process with cVerb
 *    // so that we only hear the convolution
 *    cVerb.process(sound);
 *  }
 *
 *  function playSound() {
 *    sound.play();
 *  }
 *  </code></div>
 */


function createConvolver(path, callback, errorCallback) {
  if (window.location.origin.indexOf('file://') > -1 && window.cordova === 'undefined') {
    alert('This sketch may require a server to load external files. Please see http://bit.ly/1qcInwS');
  }

  var self = this;
  var cReverb = new reverb_Convolver(path, function (buffer) {
    if (typeof callback === 'function') {
      callback(buffer);
    }

    if (typeof self._decrementPreload === 'function') {
      self._decrementPreload();
    }
  }, errorCallback);
  cReverb.impulses = [];
  return cReverb;
}


var Clock = __nested_webpack_require_117677__(11);
var Clock_default = __nested_webpack_require_117677__.n(Clock);

function metro_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function metro_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function metro_createClass(Constructor, protoProps, staticProps) { if (protoProps) metro_defineProperties(Constructor.prototype, protoProps); if (staticProps) metro_defineProperties(Constructor, staticProps); return Constructor; }




var metro_Metro =
function () {
  function Metro() {
    metro_classCallCheck(this, Metro);

    this.clock = new Clock_default.a({
      callback: this.ontick.bind(this)
    });
    this.syncedParts = [];
    this.bpm = 120; 

    this._init();

    this.prevTick = 0;
    this.tatumTime = 0;

    this.tickCallback = function () {};
  }

  metro_createClass(Metro, [{
    key: "ontick",
    value: function ontick(tickTime) {
      var elapsedTime = tickTime - this.prevTick;
      var secondsFromNow = tickTime - main.audiocontext.currentTime;

      if (elapsedTime - this.tatumTime <= -0.02) {
        return;
      } else {
        this.prevTick = tickTime; 

        var self = this;
        this.syncedParts.forEach(function (thisPart) {
          if (!thisPart.isPlaying) return;
          thisPart.incrementStep(secondsFromNow); 

          thisPart.phrases.forEach(function (thisPhrase) {
            var phraseArray = thisPhrase.sequence;
            var bNum = self.metroTicks % phraseArray.length;

            if (phraseArray[bNum] !== 0 && (self.metroTicks < phraseArray.length || !thisPhrase.looping)) {
              thisPhrase.callback(secondsFromNow, phraseArray[bNum]);
            }
          });
        });
        this.metroTicks += 1;
        this.tickCallback(secondsFromNow);
      }
    }
  }, {
    key: "setBPM",
    value: function setBPM(bpm) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var beatTime = 60 / (bpm * this.tatums);
      var now = main.audiocontext.currentTime;
      this.tatumTime = beatTime;
      this.clock.frequency.setValueAtTime(this.clock.frequency.value, now);
      this.clock.frequency.linearRampToValueAtTime(bpm, now + rampTime);
      this.bpm = bpm;
    }
  }, {
    key: "getBPM",
    value: function getBPM() {
      return this.clock.getRate() / this.tatums * 60;
    }
  }, {
    key: "_init",
    value: function _init() {
      this.metroTicks = 0; 
    } 

  }, {
    key: "resetSync",
    value: function resetSync(part) {
      this.syncedParts = [part];
    } 

  }, {
    key: "pushSync",
    value: function pushSync(part) {
      this.syncedParts.push(part);
    }
  }, {
    key: "start",
    value: function start(timeFromNow) {
      var t = timeFromNow || 0;
      var now = main.audiocontext.currentTime;
      this.clock.start(now + t);
      this.setBPM(this.bpm);
    }
  }, {
    key: "stop",
    value: function stop(timeFromNow) {
      var t = timeFromNow || 0;
      var now = main.audiocontext.currentTime;
      this.clock.stop(now + t);
    }
  }, {
    key: "beatLength",
    value: function beatLength(tatums) {
      this.tatums = 1 / tatums / 4; 
    }
  }]);

  return Metro;
}();

 var metro = (metro_Metro);
function looper_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function looper_createClass(Constructor, protoProps, staticProps) { if (protoProps) looper_defineProperties(Constructor.prototype, protoProps); if (staticProps) looper_defineProperties(Constructor, staticProps); return Constructor; }

function looper_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var BPM = 120;
/**
 *  Set the global tempo, in beats per minute, for all
 *  p5.Parts. This method will impact all active p5.Parts.
 *
 *  @method setBPM
 *  @for p5
 *  @param {Number} BPM      Beats Per Minute
 *  @param {Number} rampTime Seconds from now
 */

p5.prototype.setBPM = function (bpm, rampTime) {
  BPM = bpm;

  for (var i in main.parts) {
    if (main.parts[i]) {
      main.parts[i].setBPM(bpm, rampTime);
    }
  }
};
/**
 *  <p>A phrase is a pattern of musical events over time, i.e.
 *  a series of notes and rests.</p>
 *
 *  <p>Phrases must be added to a p5.Part for playback, and
 *  each part can play multiple phrases at the same time.
 *  For example, one Phrase might be a kick drum, another
 *  could be a snare, and another could be the bassline.</p>
 *
 *  <p>The first parameter is a name so that the phrase can be
 *  modified or deleted later. The callback is a a function that
 *  this phrase will call at every step—for example it might be
 *  called <code>playNote(value){}</code>. The array determines
 *  which value is passed into the callback at each step of the
 *  phrase. It can be numbers, an object with multiple numbers,
 *  or a zero (0) indicates a rest so the callback won't be called).</p>
 *
 *  @class p5.Phrase
 *  @constructor
 *  @param {String}   name     Name so that you can access the Phrase.
 *  @param {Function} callback The name of a function that this phrase
 *                             will call. Typically it will play a sound,
 *                             and accept two parameters: a time at which
 *                             to play the sound (in seconds from now),
 *                             and a value from the sequence array. The
 *                             time should be passed into the play() or
 *                             start() method to ensure precision.
 *  @param {Array}   sequence    Array of values to pass into the callback
 *                            at each step of the phrase.
 *  @example
 *  <div><code>
 *  let mySound, myPhrase, myPart;
 *  let pattern = [1,0,0,2,0,2,0,0];
 *
 *  function preload() {
 *    mySound = loadSound('assets/beatbox.mp3');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playMyPart);
 *    background(220);
 *    text('tap to play', width/2, height/2);
 *    textAlign(CENTER, CENTER);
 *
 *    myPhrase = new p5.Phrase('bbox', onEachStep, pattern);
 *    myPart = new p5.Part();
 *    myPart.addPhrase(myPhrase);
 *    myPart.setBPM(60);
 *  }
 *
 *  function onEachStep(time, playbackRate) {
 *    mySound.rate(playbackRate);
 *    mySound.play(time);
 *  }
 *
 *  function playMyPart() {
 *    userStartAudio();
 *    myPart.start();
 *  }
 *  </code></div>
 */


var Phrase = function Phrase(name, callback, sequence) {
  looper_classCallCheck(this, Phrase);

  this.phraseStep = 0;
  this.name = name;
  this.callback = callback;
  /**
   * Array of values to pass into the callback
   * at each step of the phrase. Depending on the callback
   * function's requirements, these values may be numbers,
   * strings, or an object with multiple parameters.
   * Zero (0) indicates a rest.
   *
   * @property {Array} sequence
   */

  this.sequence = sequence;
};
/**
 *  <p>A p5.Part plays back one or more p5.Phrases. Instantiate a part
 *  with steps and tatums. By default, each step represents a 1/16th note.</p>
 *
 *  <p>See p5.Phrase for more about musical timing.</p>
 *
 *  @class p5.Part
 *  @constructor
 *  @param {Number} [steps]   Steps in the part
 *  @param {Number} [tatums] Divisions of a beat, e.g. use 1/4, or 0.25 for a quater note (default is 1/16, a sixteenth note)
 *  @example
 *  <div><code>
 *  let box, drum, myPart;
 *  let boxPat = [1,0,0,2,0,2,0,0];
 *  let drumPat = [0,1,1,0,2,0,1,0];
 *
 *  function preload() {
 *    box = loadSound('assets/beatbox.mp3');
 *    drum = loadSound('assets/drum.mp3');
 *  }
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playMyPart);
 *    background(220);
 *    textAlign(CENTER, CENTER);
 *    text('tap to play', width/2, height/2);
 *
 *    let boxPhrase = new p5.Phrase('box', playBox, boxPat);
 *    let drumPhrase = new p5.Phrase('drum', playDrum, drumPat);
 *    myPart = new p5.Part();
 *    myPart.addPhrase(boxPhrase);
 *    myPart.addPhrase(drumPhrase);
 *    myPart.setBPM(60);
 *  }
 *
 *  function playBox(time, playbackRate) {
 *    box.rate(playbackRate);
 *    box.play(time);
 *  }
 *
 *  function playDrum(time, playbackRate) {
 *    drum.rate(playbackRate);
 *    drum.play(time);
 *  }
 *
 *  function playMyPart() {
 *    userStartAudio();
 *
 *    myPart.start();
 *  }
 *  </code></div>
 */


var looper_Part =
function () {
  function Part(steps, bLength) {
    looper_classCallCheck(this, Part);

    this.length = steps || 0; 

    this.partStep = 0;
    this.phrases = [];
    this.isPlaying = false;
    this.noLoop();
    this.tatums = bLength || 0.0625; 

    this.metro = new metro();

    this.metro._init();

    this.metro.beatLength(this.tatums);
    this.metro.setBPM(BPM);
    main.parts.push(this);

    this.callback = function () {};
  }
  /**
   *  Set the tempo of this part, in Beats Per Minute.
   *
   *  @method  setBPM
   *  @for p5.Part
   *  @param {Number} BPM      Beats Per Minute
   *  @param {Number} [rampTime] Seconds from now
   */


  looper_createClass(Part, [{
    key: "setBPM",
    value: function setBPM(tempo, rampTime) {
      this.metro.setBPM(tempo, rampTime);
    }
    /**
     *  Returns the tempo, in Beats Per Minute, of this part.
     *
     *  @method getBPM
     *  @for p5.Part
     *  @return {Number}
     */

  }, {
    key: "getBPM",
    value: function getBPM() {
      return this.metro.getBPM();
    }
    /**
     *  Start playback of this part. It will play
     *  through all of its phrases at a speed
     *  determined by setBPM.
     *
     *  @method  start
     *  @for p5.Part
     *  @param  {Number} [time] seconds from now
     */

  }, {
    key: "start",
    value: function start(time) {
      if (!this.isPlaying) {
        this.isPlaying = true;
        this.metro.resetSync(this);
        var t = time || 0;
        this.metro.start(t);
      }
    }
    /**
     *  Loop playback of this part. It will begin
     *  looping through all of its phrases at a speed
     *  determined by setBPM.
     *
     *  @method  loop
     *  @for p5.Part
     *  @param  {Number} [time] seconds from now
     */

  }, {
    key: "loop",
    value: function loop(time) {
      this.looping = true; 

      this.onended = function () {
        this.partStep = 0;
      };

      var t = time || 0;
      this.start(t);
    }
    /**
     *  Tell the part to stop looping.
     *
     *  @method  noLoop
     *  @for p5.Part
     */

  }, {
    key: "noLoop",
    value: function noLoop() {
      this.looping = false; 

      this.onended = function () {
        this.stop();
      };
    }
    /**
     *  Stop the part and cue it to step 0. Playback will resume from the begining of the Part when it is played again.
     *
     *  @method  stop
     *  @for p5.Part
     *  @param  {Number} [time] seconds from now
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this.partStep = 0;
      this.pause(time);
    }
    /**
     *  Pause the part. Playback will resume
     *  from the current step.
     *
     *  @method  pause
     *  @for p5.Part
     *  @param  {Number} time seconds from now
     */

  }, {
    key: "pause",
    value: function pause(time) {
      this.isPlaying = false;
      var t = time || 0;
      this.metro.stop(t);
    }
    /**
     *  Add a p5.Phrase to this Part.
     *
     *  @method  addPhrase
     *  @for p5.Part
     *  @param {p5.Phrase}   phrase   reference to a p5.Phrase
     */

  }, {
    key: "addPhrase",
    value: function addPhrase(name, callback, array) {
      var p;

      if (arguments.length === 3) {
        p = new Phrase(name, callback, array);
      } else if (arguments[0] instanceof Phrase) {
        p = arguments[0];
      } else {
        throw 'invalid input. addPhrase accepts name, callback, array or a p5.Phrase';
      }

      this.phrases.push(p); 

      if (p.sequence.length > this.length) {
        this.length = p.sequence.length;
      }
    }
    /**
     *  Remove a phrase from this part, based on the name it was
     *  given when it was created.
     *
     *  @method  removePhrase
     *  @for p5.Part
     *  @param  {String} phraseName
     */

  }, {
    key: "removePhrase",
    value: function removePhrase(name) {
      for (var i in this.phrases) {
        if (this.phrases[i].name === name) {
          this.phrases.splice(i, 1);
        }
      }
    }
    /**
     *  Get a phrase from this part, based on the name it was
     *  given when it was created. Now you can modify its array.
     *
     *  @method  getPhrase
     *  @for p5.Part
     *  @param  {String} phraseName
     */

  }, {
    key: "getPhrase",
    value: function getPhrase(name) {
      for (var i in this.phrases) {
        if (this.phrases[i].name === name) {
          return this.phrases[i];
        }
      }
    }
    /**
     *  Find all sequences with the specified name, and replace their patterns with the specified array.
     *
     *  @method  replaceSequence
     *  @for p5.Part
     *  @param  {String} phraseName
     *  @param  {Array} sequence  Array of values to pass into the callback
     *                            at each step of the phrase.
     */

  }, {
    key: "replaceSequence",
    value: function replaceSequence(name, array) {
      for (var i in this.phrases) {
        if (this.phrases[i].name === name) {
          this.phrases[i].sequence = array;
        }
      }
    }
  }, {
    key: "incrementStep",
    value: function incrementStep(time) {
      if (this.partStep < this.length - 1) {
        this.callback(time);
        this.partStep += 1;
      } else {
        if (!this.looping && this.partStep === this.length - 1) {
          this.onended();
        }
      }
    }
    /**
     *  Set the function that will be called at every step. This will clear the previous function.
     *
     *  @method onStep
     *  @for p5.Part
     *  @param  {Function} callback The name of the callback
     *                              you want to fire
     *                              on every beat/tatum.
     */

  }, {
    key: "onStep",
    value: function onStep(callback) {
      this.callback = callback;
    }
  }]);

  return Part;
}(); 

/**
 *  A Score consists of a series of Parts. The parts will
 *  be played back in order. For example, you could have an
 *  A part, a B part, and a C part, and play them back in this order
 *  <code>new p5.Score(a, a, b, a, c)</code>
 *
 *  @class p5.Score
 *  @constructor
 *  @param {p5.Part} [...parts] One or multiple parts, to be played in sequence.
 */


var Score =
function () {
  function Score() {
    looper_classCallCheck(this, Score);

    this.parts = [];
    this.currentPart = new Array(arguments.length);
    ;
    var thisScore = this;

    for (var i in arguments) {
      this.parts[i] = arguments[i];
      this.parts[i].nextPart = this.parts[i + 1];

      this.parts[i].onended = function () {
        thisScore.resetPart(i);
        playNextPart(thisScore);
      };
    }

    this.looping = false;
  }

  looper_createClass(Score, [{
    key: "onended",
    value: function onended() {
      if (this.looping) {
        this.parts[0].start();
      } else {
        this.parts[this.parts.length - 1].onended = function () {
          this.stop();
          this.resetParts();
        };
      }

      this.currentPart = 0;
    }
    /**
     *  Start playback of the score.
     *
     *  @method  start
     *  @for p5.Score
     */

  }, {
    key: "start",
    value: function start() {
      this.parts[this.currentPart].start();
      this.scoreStep = 0;
    }
    /**
     *  Stop playback of the score.
     *
     *  @method  stop
     *  @for p5.Score
     */

  }, {
    key: "stop",
    value: function stop() {
      this.parts[this.currentPart].stop();
      this.currentPart = 0;
      this.scoreStep = 0;
    }
    /**
     *  Pause playback of the score.
     *
     *  @method  pause
     *  @for p5.Score
     */

  }, {
    key: "pause",
    value: function pause() {
      this.parts[this.currentPart].stop();
    }
    /**
     *  Loop playback of the score.
     *
     *  @method  loop
     *  @for p5.Score
     */

  }, {
    key: "loop",
    value: function loop() {
      this.looping = true;
      this.start();
    }
    /**
     *  Stop looping playback of the score. If it
     *  is currently playing, this will go into effect
     *  after the current round of playback completes.
     *
     *  @method  noLoop
     *  @for p5.Score
     */

  }, {
    key: "noLoop",
    value: function noLoop() {
      this.looping = false;
    }
  }, {
    key: "resetParts",
    value: function resetParts() {
      var self = this;
      this.parts.forEach(function (part) {
        self.resetParts[part];
      });
    }
  }, {
    key: "resetPart",
    value: function resetPart(i) {
      this.parts[i].stop();
      this.parts[i].partStep = 0;

      for (var p in this.parts[i].phrases) {
        if (this.parts[i]) {
          this.parts[i].phrases[p].phraseStep = 0;
        }
      }
    }
    /**
     *  Set the tempo for all parts in the score
     *
     *  @method setBPM
     *  @for p5.Score
     *  @param {Number} BPM      Beats Per Minute
     *  @param {Number} rampTime Seconds from now
     */

  }, {
    key: "setBPM",
    value: function setBPM(bpm, rampTime) {
      for (var i in this.parts) {
        if (this.parts[i]) {
          this.parts[i].setBPM(bpm, rampTime);
        }
      }
    }
  }]);

  return Score;
}();

function playNextPart(aScore) {
  aScore.currentPart++;

  if (aScore.currentPart >= aScore.parts.length) {
    aScore.scoreStep = 0;
    aScore.onended();
  } else {
    aScore.scoreStep = 0;
    aScore.parts[aScore.currentPart - 1].stop();
    aScore.parts[aScore.currentPart].start();
  }
}


function soundLoop_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function soundLoop_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function soundLoop_createClass(Constructor, protoProps, staticProps) { if (protoProps) soundLoop_defineProperties(Constructor.prototype, protoProps); if (staticProps) soundLoop_defineProperties(Constructor, staticProps); return Constructor; }



/**
 * SoundLoop
 *
 * @class p5.SoundLoop
 * @constructor
 *
 * @param {Function} callback this function will be called on each iteration of theloop
 * @param {Number|String} [interval] amount of time (if a number) or beats (if a string, following <a href = "https://github.com/Tonejs/Tone.js/wiki/Time">Tone.Time</a> convention) for each iteration of the loop. Defaults to 1 second.
 *
 * @example
 * <div><code>
 *  let synth, soundLoop;
 *  let notePattern = [60, 62, 64, 67, 69, 72];
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(canvasPressed);
 *    colorMode(HSB);
 *    background(0, 0, 86);
 *    text('tap to start/stop', 10, 20);
 *
 *    //the looper's callback is passed the timeFromNow
 *    //this value should be used as a reference point from
 *    //which to schedule sounds
 *    let intervalInSeconds = 0.2;
 *    soundLoop = new p5.SoundLoop(onSoundLoop, intervalInSeconds);
 *
 *    synth = new p5.MonoSynth();
 * }
 *
 * function canvasPressed() {
 *   // ensure audio is enabled
 *   userStartAudio();
 *
 *   if (soundLoop.isPlaying) {
 *     soundLoop.stop();
 *   } else {
 *     // start the loop
 *     soundLoop.start();
 *   }
 * }
 *
 * function onSoundLoop(timeFromNow) {
 *   let noteIndex = (soundLoop.iterations - 1) % notePattern.length;
 *   let note = midiToFreq(notePattern[noteIndex]);
 *   synth.play(note, 0.5, timeFromNow);
 *   background(noteIndex * 360 / notePattern.length, 50, 100);
 * }
 * </code></div>
 */

var soundLoop_SoundLoop =
function () {
  function SoundLoop(callback, interval) {
    soundLoop_classCallCheck(this, SoundLoop);

    /**
     * Getters and Setters, setting any paramter will result in a change in the clock's
     * frequency, that will be reflected after the next callback
     * beats per minute (defaults to 60)
     * @property {Number} bpm
     * @for p5.SoundLoop
     */
    Object.defineProperty(this, 'bpm', {
      get: function get() {
        return this._bpm;
      },
      set: function set(bpm) {
        if (!this.musicalTimeMode) {
          console.warn('Changing the BPM in "seconds" mode has no effect. ' + 'BPM is only relevant in musicalTimeMode ' + 'when the interval is specified as a string ' + '("2n", "4n", "1m"...etc)');
        }

        this._bpm = bpm;

        this._update();
      }
    });
    /**
     * number of quarter notes in a measure (defaults to 4)
     * @property {Number} timeSignature
     * @for p5.SoundLoop
     */

    Object.defineProperty(this, 'timeSignature', {
      get: function get() {
        return this._timeSignature;
      },
      set: function set(timeSig) {
        if (!this.musicalTimeMode) {
          console.warn('Changing the timeSignature in "seconds" mode has no effect. ' + 'BPM is only relevant in musicalTimeMode ' + 'when the interval is specified as a string ' + '("2n", "4n", "1m"...etc)');
        }

        this._timeSignature = timeSig;

        this._update();
      }
    });
    /**
     * length of the loops interval
     * @property {Number|String} interval
     * @for p5.SoundLoop
     */

    Object.defineProperty(this, 'interval', {
      get: function get() {
        return this._interval;
      },
      set: function set(interval) {
        this.musicalTimeMode = typeof interval === 'number' ? false : true;
        this._interval = interval;

        this._update();
      }
    });
    /**
     * how many times the callback has been called so far
     * @property {Number} iterations
     * @for p5.SoundLoop
     * @readonly
     */

    Object.defineProperty(this, 'iterations', {
      get: function get() {
        return this.clock.ticks;
      }
    });
    this.callback = callback;
    /**
     * musicalTimeMode uses <a href = "https://github.com/Tonejs/Tone.js/wiki/Time">Tone.Time</a> convention
     * true if string, false if number
     * @property {Boolean} musicalTimeMode
     */

    this.musicalTimeMode = typeof this._interval === 'number' ? false : true;
    this._interval = interval || 1;
    /**
     * musicalTimeMode variables
     * modify these only when the interval is specified in musicalTime format as a string
     */

    this._timeSignature = 4;
    this._bpm = 60;
    this.isPlaying = false;
    /**
     * Set a limit to the number of loops to play. defaults to Infinity
     * @property {Number} maxIterations
     */

    this.maxIterations = Infinity;
    var self = this;
    this.clock = new Clock_default.a({
      callback: function callback(time) {
        var timeFromNow = time - main.audiocontext.currentTime;
        /**
         * Do not initiate the callback if timeFromNow is < 0
         * This ususually occurs for a few milliseconds when the page
         * is not fully loaded
         *
         * The callback should only be called until maxIterations is reached
         */

        if (timeFromNow > 0 && self.iterations <= self.maxIterations) {
          self.callback(timeFromNow);
        }
      },
      frequency: this._calcFreq()
    });
  }
  /**
   * Start the loop
   * @method  start
   * @for p5.SoundLoop
   * @param  {Number} [timeFromNow] schedule a starting time
   */


  soundLoop_createClass(SoundLoop, [{
    key: "start",
    value: function start(timeFromNow) {
      var t = timeFromNow || 0;
      var now = main.audiocontext.currentTime;

      if (!this.isPlaying) {
        this.clock.start(now + t);
        this.isPlaying = true;
      }
    }
    /**
     * Stop the loop
     * @method  stop
     * @for p5.SoundLoop
     * @param  {Number} [timeFromNow] schedule a stopping time
     */

  }, {
    key: "stop",
    value: function stop(timeFromNow) {
      var t = timeFromNow || 0;
      var now = main.audiocontext.currentTime;

      if (this.isPlaying) {
        this.clock.stop(now + t);
        this.isPlaying = false;
      }
    }
    /**
     * Pause the loop
     * @method pause
     * @for p5.SoundLoop
     * @param  {Number} [timeFromNow] schedule a pausing time
     */

  }, {
    key: "pause",
    value: function pause(timeFromNow) {
      var t = timeFromNow || 0;
      var now = main.audiocontext.currentTime;

      if (this.isPlaying) {
        this.clock.pause(now + t);
        this.isPlaying = false;
      }
    }
    /**
     * Synchronize loops. Use this method to start two or more loops in synchronization
     * or to start a loop in synchronization with a loop that is already playing
     * This method will schedule the implicit loop in sync with the explicit master loop
     * i.e. loopToStart.syncedStart(loopToSyncWith)
     *
     * @method  syncedStart
     * @for p5.SoundLoop
     * @param  {Object} otherLoop   a p5.SoundLoop to sync with
     * @param  {Number} [timeFromNow] Start the loops in sync after timeFromNow seconds
     */

  }, {
    key: "syncedStart",
    value: function syncedStart(otherLoop, timeFromNow) {
      var t = timeFromNow || 0;
      var now = main.audiocontext.currentTime;

      if (!otherLoop.isPlaying) {
        otherLoop.clock.start(now + t);
        otherLoop.isPlaying = true;
        this.clock.start(now + t);
        this.isPlaying = true;
      } else if (otherLoop.isPlaying) {
        var time = otherLoop.clock._nextTick - main.audiocontext.currentTime;
        this.clock.start(now + time);
        this.isPlaying = true;
      }
    }
    /**
     * Updates frequency value, reflected in next callback
     * @private
     * @for p5.SoundLoop
     * @method  _update
     */

  }, {
    key: "_update",
    value: function _update() {
      this.clock.frequency.value = this._calcFreq();
    }
    /**
     * Calculate the frequency of the clock's callback based on bpm, interval, and timesignature
     * @private
     * @for p5.SoundLoop
     * @method  _calcFreq
     * @return {Number} new clock frequency value
     */

  }, {
    key: "_calcFreq",
    value: function _calcFreq() {
      if (typeof this._interval === 'number') {
        this.musicalTimeMode = false;
        return 1 / this._interval;
      } 
      else if (typeof this._interval === 'string') {
          this.musicalTimeMode = true;
          return this._bpm / 60 / this._convertNotation(this._interval) * (this._timeSignature / 4);
        }
    }
    /**
     * Convert notation from musical time format to seconds
     * Uses <a href = "https://github.com/Tonejs/Tone.js/wiki/Time">Tone.Time</a> convention
     * @private
     * @for p5.SoundLoop
     * @method _convertNotation
     * @param  {String} value value to be converted
     * @return {Number}       converted value in seconds
     */

  }, {
    key: "_convertNotation",
    value: function _convertNotation(value) {
      var type = value.slice(-1);
      value = Number(value.slice(0, -1));

      switch (type) {
        case 'm':
          return this._measure(value);

        case 'n':
          return this._note(value);

        default:
          console.warn('Specified interval is not formatted correctly. See Tone.js ' + 'timing reference for more info: https://github.com/Tonejs/Tone.js/wiki/Time');
      }
    }
    /**
     * Helper conversion methods of measure and note
     * @private
     * @for p5.SoundLoop
     * @method  _measure
     */

  }, {
    key: "_measure",
    value: function _measure(value) {
      return value * this._timeSignature;
    }
    /**
     * @private
     * @method  _note
     * @for p5.SoundLoop
     */

  }, {
    key: "_note",
    value: function _note(value) {
      return this._timeSignature / value;
    }
  }]);

  return SoundLoop;
}();

 var soundLoop = (soundLoop_SoundLoop);
function compressor_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { compressor_typeof = function _typeof(obj) { return typeof obj; }; } else { compressor_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return compressor_typeof(obj); }

function compressor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function compressor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function compressor_createClass(Constructor, protoProps, staticProps) { if (protoProps) compressor_defineProperties(Constructor.prototype, protoProps); if (staticProps) compressor_defineProperties(Constructor, staticProps); return Constructor; }

function compressor_possibleConstructorReturn(self, call) { if (call && (compressor_typeof(call) === "object" || typeof call === "function")) { return call; } return compressor_assertThisInitialized(self); }

function compressor_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function compressor_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { compressor_get = Reflect.get; } else { compressor_get = function _get(target, property, receiver) { var base = compressor_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return compressor_get(target, property, receiver || target); }

function compressor_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = compressor_getPrototypeOf(object); if (object === null) break; } return object; }

function compressor_getPrototypeOf(o) { compressor_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return compressor_getPrototypeOf(o); }

function compressor_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) compressor_setPrototypeOf(subClass, superClass); }

function compressor_setPrototypeOf(o, p) { compressor_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return compressor_setPrototypeOf(o, p); }


/**
 * Compressor is an audio effect class that performs dynamics compression
 * on an audio input source. This is a very commonly used technique in music
 * and sound production. Compression creates an overall louder, richer,
 * and fuller sound by lowering the volume of louds and raising that of softs.
 * Compression can be used to avoid clipping (sound distortion due to
 * peaks in volume) and is especially useful when many sounds are played
 * at once. Compression can be used on indivudal sound sources in addition
 * to the main output.
 *
 * This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.
 * Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,
 * <a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and
 * <a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.
 *
 * @class p5.Compressor
 * @constructor
 * @extends p5.Effect
 *
 *
 */

var Compressor =
function (_Effect) {
  compressor_inherits(Compressor, _Effect);

  function Compressor() {
    var _this;

    compressor_classCallCheck(this, Compressor);

    _this = compressor_possibleConstructorReturn(this, compressor_getPrototypeOf(Compressor).call(this));
    /**
     *
     * The p5.Compressor is built with a <a href="https://www.w3.org/TR/webaudio/#the-dynamicscompressornode-interface"
     *   target="_blank" title="W3 spec for Dynamics Compressor Node">Web Audio Dynamics Compressor Node
     *   </a>
     * @property {AudioNode} compressor
     */

    _this.compressor = _this.ac.createDynamicsCompressor();

    _this.input.connect(_this.compressor);

    _this.compressor.connect(_this.wet);

    return _this;
  }
  /**
   * Performs the same function as .connect, but also accepts
   * optional parameters to set compressor's audioParams
   * @method process
   * @for p5.Compressor
   *
   * @param {Object} src         Sound source to be connected
   *
   * @param {Number} [attack]     The amount of time (in seconds) to reduce the gain by 10dB,
   *                            default = .003, range 0 - 1
   * @param {Number} [knee]       A decibel value representing the range above the
   *                            threshold where the curve smoothly transitions to the "ratio" portion.
   *                            default = 30, range 0 - 40
   * @param {Number} [ratio]      The amount of dB change in input for a 1 dB change in output
   *                            default = 12, range 1 - 20
   * @param {Number} [threshold]  The decibel value above which the compression will start taking effect
   *                            default = -24, range -100 - 0
   * @param {Number} [release]    The amount of time (in seconds) to increase the gain by 10dB
   *                            default = .25, range 0 - 1
   */


  compressor_createClass(Compressor, [{
    key: "process",
    value: function process(src, attack, knee, ratio, threshold, release) {
      src.connect(this.input);
      this.set(attack, knee, ratio, threshold, release);
    }
    /**
     * Set the paramters of a compressor.
     * @method  set
     * @for p5.Compressor
     * @param {Number} attack     The amount of time (in seconds) to reduce the gain by 10dB,
     *                            default = .003, range 0 - 1
     * @param {Number} knee       A decibel value representing the range above the
     *                            threshold where the curve smoothly transitions to the "ratio" portion.
     *                            default = 30, range 0 - 40
     * @param {Number} ratio      The amount of dB change in input for a 1 dB change in output
     *                            default = 12, range 1 - 20
     * @param {Number} threshold  The decibel value above which the compression will start taking effect
     *                            default = -24, range -100 - 0
     * @param {Number} release    The amount of time (in seconds) to increase the gain by 10dB
     *                            default = .25, range 0 - 1
     */

  }, {
    key: "set",
    value: function set(attack, knee, ratio, threshold, release) {
      if (typeof attack !== 'undefined') {
        this.attack(attack);
      }

      if (typeof knee !== 'undefined') {
        this.knee(knee);
      }

      if (typeof ratio !== 'undefined') {
        this.ratio(ratio);
      }

      if (typeof threshold !== 'undefined') {
        this.threshold(threshold);
      }

      if (typeof release !== 'undefined') {
        this.release(release);
      }
    }
    /**
     * Get current attack or set value w/ time ramp
     *
     *
     * @method attack
     * @for p5.Compressor
     * @param {Number} [attack] Attack is the amount of time (in seconds) to reduce the gain by 10dB,
     *                          default = .003, range 0 - 1
     * @param {Number} [time]  Assign time value to schedule the change in value
     */

  }, {
    key: "attack",
    value: function attack(_attack, time) {
      var t = time || 0;

      if (typeof _attack === 'number') {
        this.compressor.attack.value = _attack;
        this.compressor.attack.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.compressor.attack.linearRampToValueAtTime(_attack, this.ac.currentTime + 0.02 + t);
      } else if (typeof _attack !== 'undefined') {
        _attack.connect(this.compressor.attack);
      }

      return this.compressor.attack.value;
    }
    /**
     * Get current knee or set value w/ time ramp
     *
     * @method knee
     * @for p5.Compressor
     * @param {Number} [knee] A decibel value representing the range above the
     *                        threshold where the curve smoothly transitions to the "ratio" portion.
     *                        default = 30, range 0 - 40
     * @param {Number} [time]  Assign time value to schedule the change in value
     */

  }, {
    key: "knee",
    value: function knee(_knee, time) {
      var t = time || 0;

      if (typeof _knee === 'number') {
        this.compressor.knee.value = _knee;
        this.compressor.knee.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.compressor.knee.linearRampToValueAtTime(_knee, this.ac.currentTime + 0.02 + t);
      } else if (typeof _knee !== 'undefined') {
        _knee.connect(this.compressor.knee);
      }

      return this.compressor.knee.value;
    }
    /**
     * Get current ratio or set value w/ time ramp
     * @method ratio
     * @for p5.Compressor
     * @param {Number} [ratio]      The amount of dB change in input for a 1 dB change in output
     *                            default = 12, range 1 - 20
     * @param {Number} [time]  Assign time value to schedule the change in value
     */

  }, {
    key: "ratio",
    value: function ratio(_ratio, time) {
      var t = time || 0;

      if (typeof _ratio === 'number') {
        this.compressor.ratio.value = _ratio;
        this.compressor.ratio.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.compressor.ratio.linearRampToValueAtTime(_ratio, this.ac.currentTime + 0.02 + t);
      } else if (typeof _ratio !== 'undefined') {
        _ratio.connect(this.compressor.ratio);
      }

      return this.compressor.ratio.value;
    }
    /**
     * Get current threshold or set value w/ time ramp
     * @method threshold
     * @for p5.Compressor
     * @param {Number} threshold  The decibel value above which the compression will start taking effect
     *                            default = -24, range -100 - 0
     * @param {Number} [time]  Assign time value to schedule the change in value
     */

  }, {
    key: "threshold",
    value: function threshold(_threshold, time) {
      var t = time || 0;

      if (typeof _threshold === 'number') {
        this.compressor.threshold.value = _threshold;
        this.compressor.threshold.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.compressor.threshold.linearRampToValueAtTime(_threshold, this.ac.currentTime + 0.02 + t);
      } else if (typeof _threshold !== 'undefined') {
        _threshold.connect(this.compressor.threshold);
      }

      return this.compressor.threshold.value;
    }
    /**
     * Get current release or set value w/ time ramp
     * @method release
     * @for p5.Compressor
     * @param {Number} release    The amount of time (in seconds) to increase the gain by 10dB
     *                            default = .25, range 0 - 1
     *
     * @param {Number} [time]  Assign time value to schedule the change in value
     */

  }, {
    key: "release",
    value: function release(_release, time) {
      var t = time || 0;

      if (typeof _release === 'number') {
        this.compressor.release.value = _release;
        this.compressor.release.cancelScheduledValues(this.ac.currentTime + 0.01 + t);
        this.compressor.release.linearRampToValueAtTime(_release, this.ac.currentTime + 0.02 + t);
      } else if (typeof number !== 'undefined') {
        _release.connect(this.compressor.release);
      }

      return this.compressor.release.value;
    }
    /**
     * Return the current reduction value
     *
     * @method reduction
     * @for p5.Compressor
     * @return {Number} Value of the amount of gain reduction that is applied to the signal
     */

  }, {
    key: "reduction",
    value: function reduction() {
      return this.compressor.reduction.value;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      compressor_get(compressor_getPrototypeOf(Compressor.prototype), "dispose", this).call(this);

      if (this.compressor) {
        this.compressor.disconnect();
        delete this.compressor;
      }
    }
  }]);

  return Compressor;
}(effect);

 var compressor = (Compressor);
function peakDetect_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function peakDetect_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function peakDetect_createClass(Constructor, protoProps, staticProps) { if (protoProps) peakDetect_defineProperties(Constructor.prototype, protoProps); if (staticProps) peakDetect_defineProperties(Constructor, staticProps); return Constructor; }

/**
 *  <p>PeakDetect works in conjunction with p5.FFT to
 *  look for onsets in some or all of the frequency spectrum.
 *  </p>
 *  <p>
 *  To use p5.PeakDetect, call <code>update</code> in the draw loop
 *  and pass in a p5.FFT object.
 *  </p>
 *  <p>
 *  You can listen for a specific part of the frequency spectrum by
 *  setting the range between <code>freq1</code> and <code>freq2</code>.
 *  </p>
 *
 *  <p><code>threshold</code> is the threshold for detecting a peak,
 *  scaled between 0 and 1. It is logarithmic, so 0.1 is half as loud
 *  as 1.0.</p>
 *
 *  <p>
 *  The update method is meant to be run in the draw loop, and
 *  <b>frames</b> determines how many loops must pass before
 *  another peak can be detected.
 *  For example, if the frameRate() = 60, you could detect the beat of a
 *  120 beat-per-minute song with this equation:
 *  <code> framesPerPeak = 60 / (estimatedBPM / 60 );</code>
 *  </p>
 *
 *  <p>
 *  Based on example contribtued by @b2renger, and a simple beat detection
 *  explanation by <a
 *  href="http://www.airtightinteractive.com/2013/10/making-audio-reactive-visuals/"
 *  target="_blank">Felix Turner</a>.
 *  </p>
 *
 *  @class  p5.PeakDetect
 *  @constructor
 *  @param {Number} [freq1]     lowFrequency - defaults to 20Hz
 *  @param {Number} [freq2]     highFrequency - defaults to 20000 Hz
 *  @param {Number} [threshold] Threshold for detecting a beat between 0 and 1
 *                            scaled logarithmically where 0.1 is 1/2 the loudness
 *                            of 1.0. Defaults to 0.35.
 *  @param {Number} [framesPerPeak]     Defaults to 20.
 *  @example
 *  <div><code>
 *
 *  var cnv, soundFile, fft, peakDetect;
 *  var ellipseWidth = 10;
 *
 *  function preload() {
 *    soundFile = loadSound('assets/beat.mp3');
 *  }
 *
 *  function setup() {
 *    background(0);
 *    noStroke();
 *    fill(255);
 *    textAlign(CENTER);
 *
 *    // p5.PeakDetect requires a p5.FFT
 *    fft = new p5.FFT();
 *    peakDetect = new p5.PeakDetect();
 *  }
 *
 *  function draw() {
 *    background(0);
 *    text('click to play/pause', width/2, height/2);
 *
 *    // peakDetect accepts an fft post-analysis
 *    fft.analyze();
 *    peakDetect.update(fft);
 *
 *    if ( peakDetect.isDetected ) {
 *      ellipseWidth = 50;
 *    } else {
 *      ellipseWidth *= 0.95;
 *    }
 *
 *    ellipse(width/2, height/2, ellipseWidth, ellipseWidth);
 *  }
 *
 *  // toggle play/stop when canvas is clicked
 *  function mouseClicked() {
 *    if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {
 *      if (soundFile.isPlaying() ) {
 *        soundFile.stop();
 *      } else {
 *        soundFile.play();
 *      }
 *    }
 *  }
 *  </code></div>
 */
var PeakDetect =
function () {
  function PeakDetect(freq1, freq2, threshold, _framesPerPeak) {
    peakDetect_classCallCheck(this, PeakDetect);

    this.framesPerPeak = _framesPerPeak || 20;
    this.framesSinceLastPeak = 0;
    this.decayRate = 0.95;
    this.threshold = threshold || 0.35;
    this.cutoff = 0; 

    this.cutoffMult = 1.5;
    this.energy = 0;
    this.penergy = 0; 

    this.currentValue = 0;
    /**
     *  isDetected is set to true when a peak is detected.
     *
     *  @attribute isDetected {Boolean}
     *  @default  false
     */

    this.isDetected = false;
    this.f1 = freq1 || 40;
    this.f2 = freq2 || 20000; 

    this._onPeak = function () {};
  }
  /**
   *  The update method is run in the draw loop.
   *
   *  Accepts an FFT object. You must call .analyze()
   *  on the FFT object prior to updating the peakDetect
   *  because it relies on a completed FFT analysis.
   *
   *  @method  update
   *  @param  {p5.FFT} fftObject A p5.FFT object
   */


  peakDetect_createClass(PeakDetect, [{
    key: "update",
    value: function update(fftObject) {
      var nrg = this.energy = fftObject.getEnergy(this.f1, this.f2) / 255;

      if (nrg > this.cutoff && nrg > this.threshold && nrg - this.penergy > 0) {
        this._onPeak();

        this.isDetected = true; 

        this.cutoff = nrg * this.cutoffMult;
        this.framesSinceLastPeak = 0;
      } else {
        this.isDetected = false;

        if (this.framesSinceLastPeak <= this.framesPerPeak) {
          this.framesSinceLastPeak++;
        } else {
          this.cutoff *= this.decayRate;
          this.cutoff = Math.max(this.cutoff, this.threshold);
        }
      }

      this.currentValue = nrg;
      this.penergy = nrg;
    }
    /**
     *  onPeak accepts two arguments: a function to call when
     *  a peak is detected. The value of the peak,
     *  between 0.0 and 1.0, is passed to the callback.
     *
     *  @method  onPeak
     *  @param  {Function} callback Name of a function that will
     *                              be called when a peak is
     *                              detected.
     *  @param  {Object}   [val]    Optional value to pass
     *                              into the function when
     *                              a peak is detected.
     *  @example
     *  <div><code>
     *  var cnv, soundFile, fft, peakDetect;
     *  var ellipseWidth = 0;
     *
     *  function preload() {
     *    soundFile = loadSound('assets/beat.mp3');
     *  }
     *
     *  function setup() {
     *    cnv = createCanvas(100,100);
     *    textAlign(CENTER);
     *
     *    fft = new p5.FFT();
     *    peakDetect = new p5.PeakDetect();
     *
     *    setupSound();
     *
     *    // when a beat is detected, call triggerBeat()
     *    peakDetect.onPeak(triggerBeat);
     *  }
     *
     *  function draw() {
     *    background(0);
     *    fill(255);
     *    text('click to play', width/2, height/2);
     *
     *    fft.analyze();
     *    peakDetect.update(fft);
     *
     *    ellipseWidth *= 0.95;
     *    ellipse(width/2, height/2, ellipseWidth, ellipseWidth);
     *  }
     *
     *  // this function is called by peakDetect.onPeak
     *  function triggerBeat() {
     *    ellipseWidth = 50;
     *  }
     *
     *  // mouseclick starts/stops sound
     *  function setupSound() {
     *    cnv.mouseClicked( function() {
     *      if (soundFile.isPlaying() ) {
     *        soundFile.stop();
     *      } else {
     *        soundFile.play();
     *      }
     *    });
     *  }
     *  </code></div>
     */

  }, {
    key: "onPeak",
    value: function onPeak(callback, val) {
      var self = this;

      self._onPeak = function () {
        callback(self.energy, val);
      };
    }
  }]);

  return PeakDetect;
}();

 var peakDetect = (PeakDetect);
function soundRecorder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function soundRecorder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function soundRecorder_createClass(Constructor, protoProps, staticProps) { if (protoProps) soundRecorder_defineProperties(Constructor.prototype, protoProps); if (staticProps) soundRecorder_defineProperties(Constructor, staticProps); return Constructor; }




var soundRecorder_ac = main.audiocontext;
/**
 *  <p>Record sounds for playback and/or to save as a .wav file.
 *  The p5.SoundRecorder records all sound output from your sketch,
 *  or can be assigned a specific source with setInput().</p>
 *  <p>The record() method accepts a p5.SoundFile as a parameter.
 *  When playback is stopped (either after the given amount of time,
 *  or with the stop() method), the p5.SoundRecorder will send its
 *  recording to that p5.SoundFile for playback.</p>
 *
 *  @class p5.SoundRecorder
 *  @constructor
 *  @example
 *  <div><code>
 *  let mic, recorder, soundFile;
 *  let state = 0;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(canvasPressed);
 *    background(220);
 *    textAlign(CENTER, CENTER);
 *
 *    // create an audio in
 *    mic = new p5.AudioIn();
 *
 *    // prompts user to enable their browser mic
 *    mic.start();
 *
 *    // create a sound recorder
 *    recorder = new p5.SoundRecorder();
 *
 *    // connect the mic to the recorder
 *    recorder.setInput(mic);
 *
 *    // this sound file will be used to
 *    // playback & save the recording
 *    soundFile = new p5.SoundFile();
 *
 *    text('tap to record', width/2, height/2);
 *  }
 *
 *  function canvasPressed() {
 *    // ensure audio is enabled
 *    userStartAudio();
 *
 *    // make sure user enabled the mic
 *    if (state === 0 && mic.enabled) {
 *
 *      // record to our p5.SoundFile
 *      recorder.record(soundFile);
 *
 *      background(255,0,0);
 *      text('Recording!', width/2, height/2);
 *      state++;
 *    }
 *    else if (state === 1) {
 *      background(0,255,0);
 *
 *      // stop recorder and
 *      // send result to soundFile
 *      recorder.stop();
 *
 *      text('Done! Tap to play and download', width/2, height/2, width - 20);
 *      state++;
 *    }
 *
 *    else if (state === 2) {
 *      soundFile.play(); // play the result!
 *      save(soundFile, 'mySound.wav');
 *      state++;
 *    }
 *  }
 *  </div></code>
 */

var soundRecorder_SoundRecorder =
function () {
  function SoundRecorder() {
    soundRecorder_classCallCheck(this, SoundRecorder);

    this.input = soundRecorder_ac.createGain();
    this.output = soundRecorder_ac.createGain();
    this._inputChannels = 2;
    this._outputChannels = 2; 

    var workletBufferSize = safeBufferSize(1024);
    this._workletNode = new AudioWorkletNode(soundRecorder_ac, processorNames_default.a.recorderProcessor, {
      outputChannelCount: [this._outputChannels],
      processorOptions: {
        numInputChannels: this._inputChannels,
        bufferSize: workletBufferSize
      }
    });

    this._workletNode.port.onmessage = function (event) {
      if (event.data.name === 'buffers') {
        var buffers = [new Float32Array(event.data.leftBuffer), new Float32Array(event.data.rightBuffer)];

        this._callback(buffers);
      }
    }.bind(this);
    /**
     *  callback invoked when the recording is over
     *  @private
     *  @type Function(Float32Array)
     */


    this._callback = function () {}; 


    this._workletNode.connect(p5.soundOut._silentNode);

    this.setInput(); 

    main.soundArray.push(this);
  }
  /**
   *  Connect a specific device to the p5.SoundRecorder.
   *  If no parameter is given, p5.SoundRecorer will record
   *  all audible p5.sound from your sketch.
   *
   *  @method  setInput
   *  @for p5.SoundRecorder
   *  @param {Object} [unit] p5.sound object or a web audio unit
   *                         that outputs sound
   */


  soundRecorder_createClass(SoundRecorder, [{
    key: "setInput",
    value: function setInput(unit) {
      this.input.disconnect();
      this.input = null;
      this.input = soundRecorder_ac.createGain();
      this.input.connect(this._workletNode);
      this.input.connect(this.output);

      if (unit) {
        unit.connect(this.input);
      } else {
        p5.soundOut.output.connect(this.input);
      }
    }
    /**
     *  Start recording. To access the recording, provide
     *  a p5.SoundFile as the first parameter. The p5.SoundRecorder
     *  will send its recording to that p5.SoundFile for playback once
     *  recording is complete. Optional parameters include duration
     *  (in seconds) of the recording, and a callback function that
     *  will be called once the complete recording has been
     *  transfered to the p5.SoundFile.
     *
     *  @method  record
     *  @for p5.SoundRecorder
     *  @param  {p5.SoundFile}   soundFile    p5.SoundFile
     *  @param  {Number}   [duration] Time (in seconds)
     *  @param  {Function} [callback] The name of a function that will be
     *                                called once the recording completes
     */

  }, {
    key: "record",
    value: function record(sFile, duration, callback) {
      this._workletNode.port.postMessage({
        name: 'start',
        duration: duration
      });

      if (sFile && callback) {
        this._callback = function (buffer) {
          sFile.setBuffer(buffer);
          callback();
        };
      } else if (sFile) {
        this._callback = function (buffer) {
          sFile.setBuffer(buffer);
        };
      }
    }
    /**
     *  Stop the recording. Once the recording is stopped,
     *  the results will be sent to the p5.SoundFile that
     *  was given on .record(), and if a callback function
     *  was provided on record, that function will be called.
     *
     *  @method  stop
     *  @for p5.SoundRecorder
     */

  }, {
    key: "stop",
    value: function stop() {
      this._workletNode.port.postMessage({
        name: 'stop'
      });
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      this._callback = function () {};

      if (this.input) {
        this.input.disconnect();
      }

      this.input = null;
      this._workletNode = null;
    }
  }]);

  return SoundRecorder;
}();

 var soundRecorder = (soundRecorder_SoundRecorder);
function distortion_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { distortion_typeof = function _typeof(obj) { return typeof obj; }; } else { distortion_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return distortion_typeof(obj); }

function distortion_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function distortion_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function distortion_createClass(Constructor, protoProps, staticProps) { if (protoProps) distortion_defineProperties(Constructor.prototype, protoProps); if (staticProps) distortion_defineProperties(Constructor, staticProps); return Constructor; }

function distortion_possibleConstructorReturn(self, call) { if (call && (distortion_typeof(call) === "object" || typeof call === "function")) { return call; } return distortion_assertThisInitialized(self); }

function distortion_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function distortion_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { distortion_get = Reflect.get; } else { distortion_get = function _get(target, property, receiver) { var base = distortion_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return distortion_get(target, property, receiver || target); }

function distortion_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = distortion_getPrototypeOf(object); if (object === null) break; } return object; }

function distortion_getPrototypeOf(o) { distortion_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return distortion_getPrototypeOf(o); }

function distortion_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) distortion_setPrototypeOf(subClass, superClass); }

function distortion_setPrototypeOf(o, p) { distortion_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return distortion_setPrototypeOf(o, p); }



function makeDistortionCurve(amount) {
  var k = typeof amount === 'number' ? amount : 50;
  var numSamples = 44100;
  var curve = new Float32Array(numSamples);
  var deg = Math.PI / 180;
  var i = 0;
  var x;

  for (; i < numSamples; ++i) {
    x = i * 2 / numSamples - 1;
    curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));
  }

  return curve;
}
/**
 * A Distortion effect created with a Waveshaper Node,
 * with an approach adapted from
 * [Kevin Ennis](http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion)
 *
 * This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.
 * Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,
 * <a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and
 * <a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.
 *
 * @class p5.Distortion
 * @extends p5.Effect
 * @constructor
 * @param {Number} [amount=0.25] Unbounded distortion amount.
 *                                Normal values range from 0-1.
 * @param {String} [oversample='none'] 'none', '2x', or '4x'.
 *
 */


var Distortion =
function (_Effect) {
  distortion_inherits(Distortion, _Effect);

  function Distortion(amount, oversample) {
    var _this;

    distortion_classCallCheck(this, Distortion);

    _this = distortion_possibleConstructorReturn(this, distortion_getPrototypeOf(Distortion).call(this));

    if (typeof amount === 'undefined') {
      amount = 0.25;
    }

    if (typeof amount !== 'number') {
      throw new Error('amount must be a number');
    }

    if (typeof oversample === 'undefined') {
      oversample = '2x';
    }

    if (typeof oversample !== 'string') {
      throw new Error('oversample must be a String');
    }

    var curveAmount = p5.prototype.map(amount, 0.0, 1.0, 0, 2000);
    /**
     *  The p5.Distortion is built with a
     *  <a href="http://www.w3.org/TR/webaudio/#WaveShaperNode">
     *  Web Audio WaveShaper Node</a>.
     *
     *  @property {AudioNode} WaveShaperNode
     */

    _this.waveShaperNode = _this.ac.createWaveShaper();
    _this.amount = curveAmount;
    _this.waveShaperNode.curve = makeDistortionCurve(curveAmount);
    _this.waveShaperNode.oversample = oversample;

    _this.input.connect(_this.waveShaperNode);

    _this.waveShaperNode.connect(_this.wet);

    return _this;
  }
  /**
   * Process a sound source, optionally specify amount and oversample values.
   *
   * @method process
   * @for p5.Distortion
   * @param {Number} [amount=0.25] Unbounded distortion amount.
   *                                Normal values range from 0-1.
   * @param {String} [oversample='none'] 'none', '2x', or '4x'.
   */


  distortion_createClass(Distortion, [{
    key: "process",
    value: function process(src, amount, oversample) {
      src.connect(this.input);
      this.set(amount, oversample);
    }
    /**
     * Set the amount and oversample of the waveshaper distortion.
     *
     * @method set
     * @for p5.Distortion
     * @param {Number} [amount=0.25] Unbounded distortion amount.
     *                                Normal values range from 0-1.
     * @param {String} [oversample='none'] 'none', '2x', or '4x'.
     */

  }, {
    key: "set",
    value: function set(amount, oversample) {
      if (amount) {
        var curveAmount = p5.prototype.map(amount, 0.0, 1.0, 0, 2000);
        this.amount = curveAmount;
        this.waveShaperNode.curve = makeDistortionCurve(curveAmount);
      }

      if (oversample) {
        this.waveShaperNode.oversample = oversample;
      }
    }
    /**
     *  Return the distortion amount, typically between 0-1.
     *
     *  @method  getAmount
     *  @for p5.Distortion
     *  @return {Number} Unbounded distortion amount.
     *                   Normal values range from 0-1.
     */

  }, {
    key: "getAmount",
    value: function getAmount() {
      return this.amount;
    }
    /**
     *  Return the oversampling.
     *
     *  @method getOversample
     *  @for p5.Distortion
     *  @return {String} Oversample can either be 'none', '2x', or '4x'.
     */

  }, {
    key: "getOversample",
    value: function getOversample() {
      return this.waveShaperNode.oversample;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      distortion_get(distortion_getPrototypeOf(Distortion.prototype), "dispose", this).call(this);

      if (this.waveShaperNode) {
        this.waveShaperNode.disconnect();
        this.waveShaperNode = null;
      }
    }
  }]);

  return Distortion;
}(effect);

 var distortion = (Distortion);
function gain_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function gain_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function gain_createClass(Constructor, protoProps, staticProps) { if (protoProps) gain_defineProperties(Constructor.prototype, protoProps); if (staticProps) gain_defineProperties(Constructor, staticProps); return Constructor; }


/**
 *  A gain node is usefull to set the relative volume of sound.
 *  It's typically used to build mixers.
 *
 *  @class p5.Gain
 *  @constructor
 *  @example
 *  <div><code>
 *
 *  // load two soundfile and crossfade beetween them
 *  let sound1,sound2;
 *  let sound1Gain, sound2Gain, mixGain;
 *  function preload(){
 *    soundFormats('ogg', 'mp3');
 *    sound1 = loadSound('assets/Damscray_-_Dancing_Tiger_01');
 *    sound2 = loadSound('assets/beat');
 *  }
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(startSound);
 *    // create a 'mix' gain bus to which we will connect both soundfiles
 *    mixGain = new p5.Gain();
 *    mixGain.connect();
 *    sound1.disconnect(); // diconnect from p5 output
 *    sound1Gain = new p5.Gain(); // setup a gain node
 *    sound1Gain.setInput(sound1); // connect the first sound to its input
 *    sound1Gain.connect(mixGain); // connect its output to the final mix bus
 *    sound2.disconnect();
 *    sound2Gain = new p5.Gain();
 *    sound2Gain.setInput(sound2);
 *    sound2Gain.connect(mixGain);
 *  }
 *  function startSound() {
 *    sound1.loop();
 *    sound2.loop();
 *    loop();
 *  }
 *  function mouseReleased() {
 *    sound1.stop();
 *    sound2.stop();
 *  }
 *  function draw(){
 *    background(220);
 *    textAlign(CENTER);
 *    textSize(11);
 *    fill(0);
 *    if (!sound1.isPlaying()) {
 *      text('tap and drag to play', width/2, height/2);
 *      return;
 *    }
 *    // map the horizontal position of the mouse to values useable for volume    *  control of sound1
 *    var sound1Volume = constrain(map(mouseX,width,0,0,1), 0, 1);
 *    var sound2Volume = 1-sound1Volume;
 *    sound1Gain.amp(sound1Volume);
 *    sound2Gain.amp(sound2Volume);
 *    // map the vertical position of the mouse to values useable for 'output    *  volume control'
 *    var outputVolume = constrain(map(mouseY,height,0,0,1), 0, 1);
 *    mixGain.amp(outputVolume);
 *    text('output', width/2, height - outputVolume * height * 0.9)
 *    fill(255, 0, 255);
 *    textAlign(LEFT);
 *    text('sound1', 5, height - sound1Volume * height * 0.9);
 *    textAlign(RIGHT);
 *    text('sound2', width - 5, height - sound2Volume * height * 0.9);
 *  }
 *</code></div>
 */

var gain_Gain =
function () {
  function Gain() {
    gain_classCallCheck(this, Gain);

    this.ac = main.audiocontext;
    this.input = this.ac.createGain();
    this.output = this.ac.createGain(); 

    this.input.gain.value = 0.5;
    this.input.connect(this.output); 

    main.soundArray.push(this);
  }
  /**
   *  Connect a source to the gain node.
   *
   *  @method  setInput
   *  @for p5.Gain
   *  @param  {Object} src     p5.sound / Web Audio object with a sound
   *                           output.
   */


  gain_createClass(Gain, [{
    key: "setInput",
    value: function setInput(src) {
      src.connect(this.input);
    }
    /**
     *  Send output to a p5.sound or web audio object
     *
     *  @method  connect
     *  @for p5.Gain
     *  @param  {Object} unit
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      var u = unit || p5.soundOut.input;
      this.output.connect(u.input ? u.input : u);
    }
    /**
     *  Disconnect all output.
     *
     *  @method disconnect
     *  @for p5.Gain
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect();
      }
    }
    /**
     *  Set the output level of the gain node.
     *
     *  @method  amp
     *  @for p5.Gain
     *  @param  {Number} volume amplitude between 0 and 1.0
     *  @param  {Number} [rampTime] create a fade that lasts rampTime
     *  @param  {Number} [timeFromNow] schedule this event to happen
     *                                seconds from now
     */

  }, {
    key: "amp",
    value: function amp(vol) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var tFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var now = main.audiocontext.currentTime;
      var currentVol = this.output.gain.value;
      this.output.gain.cancelScheduledValues(now);
      this.output.gain.linearRampToValueAtTime(currentVol, now + tFromNow);
      this.output.gain.linearRampToValueAtTime(vol, now + tFromNow + rampTime);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var index = main.soundArray.indexOf(this);
      main.soundArray.splice(index, 1);

      if (this.output) {
        this.output.disconnect();
        delete this.output;
      }

      if (this.input) {
        this.input.disconnect();
        delete this.input;
      }
    }
  }]);

  return Gain;
}();

 var gain = (gain_Gain);
function audioVoice_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function audioVoice_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function audioVoice_createClass(Constructor, protoProps, staticProps) { if (protoProps) audioVoice_defineProperties(Constructor.prototype, protoProps); if (staticProps) audioVoice_defineProperties(Constructor, staticProps); return Constructor; }


/**
 * Base class for monophonic synthesizers. Any extensions of this class
 * should follow the API and implement the methods below in order to
 * remain compatible with p5.PolySynth();
 *
 * @class p5.AudioVoice
 * @constructor
 */

var audioVoice_AudioVoice =
function () {
  function AudioVoice() {
    audioVoice_classCallCheck(this, AudioVoice);

    this.ac = main.audiocontext;
    this.output = this.ac.createGain();
    this.connect();
    main.soundArray.push(this);
  }

  audioVoice_createClass(AudioVoice, [{
    key: "play",
    value: function play(note, velocity, secondsFromNow, sustime) {}
  }, {
    key: "triggerAttack",
    value: function triggerAttack(note, velocity, secondsFromNow) {}
  }, {
    key: "triggerRelease",
    value: function triggerRelease(secondsFromNow) {}
  }, {
    key: "amp",
    value: function amp(vol, rampTime) {}
    /**
     * Connect to p5 objects or Web Audio Nodes
     * @method  connect
     * @for p5.AudioVoice
     * @param {Object} unit
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      var u = unit || main.input;
      this.output.connect(u.input ? u.input : u);
    }
    /**
     * Disconnect from soundOut
     * @method  disconnect
     * @for p5.AudioVoice
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      this.output.disconnect();
    }
  }, {
    key: "dispose",
    value: function dispose() {
      if (this.output) {
        this.output.disconnect();
        delete this.output;
      }
    }
  }]);

  return AudioVoice;
}();

 var audioVoice_0 = (audioVoice_AudioVoice);
function monosynth_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { monosynth_typeof = function _typeof(obj) { return typeof obj; }; } else { monosynth_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return monosynth_typeof(obj); }

function monosynth_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function monosynth_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function monosynth_createClass(Constructor, protoProps, staticProps) { if (protoProps) monosynth_defineProperties(Constructor.prototype, protoProps); if (staticProps) monosynth_defineProperties(Constructor, staticProps); return Constructor; }

function monosynth_possibleConstructorReturn(self, call) { if (call && (monosynth_typeof(call) === "object" || typeof call === "function")) { return call; } return monosynth_assertThisInitialized(self); }

function monosynth_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function monosynth_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { monosynth_get = Reflect.get; } else { monosynth_get = function _get(target, property, receiver) { var base = monosynth_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return monosynth_get(target, property, receiver || target); }

function monosynth_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = monosynth_getPrototypeOf(object); if (object === null) break; } return object; }

function monosynth_getPrototypeOf(o) { monosynth_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return monosynth_getPrototypeOf(o); }

function monosynth_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) monosynth_setPrototypeOf(subClass, superClass); }

function monosynth_setPrototypeOf(o, p) { monosynth_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return monosynth_setPrototypeOf(o, p); }






var DEFAULT_SUSTAIN = 0.15;
/**
 *  A MonoSynth is used as a single voice for sound synthesis.
 *  This is a class to be used in conjunction with the PolySynth
 *  class. Custom synthetisers should be built inheriting from
 *  this class.
 *
 *  @class p5.MonoSynth
 *  @constructor
 *  @example
 *  <div><code>
 *  let monoSynth;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playSynth);
 *    background(220);
 *    textAlign(CENTER);
 *    text('tap to play', width/2, height/2);
 *
 *    monoSynth = new p5.MonoSynth();
 *  }
 *
 *  function playSynth() {
 *    userStartAudio();
 *
 *    let note = random(['Fb4', 'G4']);
 *    // note velocity (volume, from 0 to 1)
 *    let velocity = random();
 *    // time from now (in seconds)
 *    let time = 0;
 *    // note duration (in seconds)
 *    let dur = 1/6;
 *
 *    monoSynth.play(note, velocity, time, dur);
 *  }
 *  </code></div>
 **/

var monosynth_MonoSynth =
function (_AudioVoice) {
  monosynth_inherits(MonoSynth, _AudioVoice);

  function MonoSynth() {
    var _this;

    monosynth_classCallCheck(this, MonoSynth);

    _this = monosynth_possibleConstructorReturn(this, monosynth_getPrototypeOf(MonoSynth).call(this));
    _this.oscillator = new oscillator();
    _this.env = new envelope(); 

    _this.env.setRange(1, 0);

    _this.env.setExp(true); 


    _this.setADSR(0.02, 0.25, 0.05, 0.35); 


    _this.oscillator.disconnect();

    _this.oscillator.connect(_this.output);

    _this.env.disconnect();

    _this.env.setInput(_this.output.gain); 


    _this.oscillator.output.gain.value = 1.0;

    _this.oscillator.start();

    _this.connect();

    main.soundArray.push(monosynth_assertThisInitialized(_this));
    /**
     * Getters and Setters
     * @property {Number} attack
     * @for p5.MonoSynth
     */

    /**
     * @property {Number} decay
     * @for p5.MonoSynth
     */

    /**
     * @property {Number} sustain
     * @for p5.MonoSynth
     */

    /**
     * @property {Number} release
     * @for p5.MonoSynth
     */

    Object.defineProperties(monosynth_assertThisInitialized(_this), {
      attack: {
        get: function get() {
          return this.env.aTime;
        },
        set: function set(attack) {
          this.env.setADSR(attack, this.env.dTime, this.env.sPercent, this.env.rTime);
        }
      },
      decay: {
        get: function get() {
          return this.env.dTime;
        },
        set: function set(decay) {
          this.env.setADSR(this.env.aTime, decay, this.env.sPercent, this.env.rTime);
        }
      },
      sustain: {
        get: function get() {
          return this.env.sPercent;
        },
        set: function set(sustain) {
          this.env.setADSR(this.env.aTime, this.env.dTime, sustain, this.env.rTime);
        }
      },
      release: {
        get: function get() {
          return this.env.rTime;
        },
        set: function set(release) {
          this.env.setADSR(this.env.aTime, this.env.dTime, this.env.sPercent, release);
        }
      }
    });
    return _this;
  }
  /**
   *  Play tells the MonoSynth to start playing a note. This method schedules
   *  the calling of .triggerAttack and .triggerRelease.
   *
   *  @method play
   *  @for p5.MonoSynth
   *  @param {String | Number} note the note you want to play, specified as a
   *                                 frequency in Hertz (Number) or as a midi
   *                                 value in Note/Octave format ("C4", "Eb3"...etc")
   *                                 See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">
   *                                 Tone</a>. Defaults to 440 hz.
   *  @param  {Number} [velocity] velocity of the note to play (ranging from 0 to 1)
   *  @param  {Number} [secondsFromNow]  time from now (in seconds) at which to play
   *  @param  {Number} [sustainTime] time to sustain before releasing the envelope. Defaults to 0.15 seconds.
   *  @example
   *  <div><code>
   *  let monoSynth;
   *
   *  function setup() {
   *    let cnv = createCanvas(100, 100);
   *    cnv.mousePressed(playSynth);
   *    background(220);
   *    textAlign(CENTER);
   *    text('tap to play', width/2, height/2);
   *
   *    monoSynth = new p5.MonoSynth();
   *  }
   *
   *  function playSynth() {
   *    userStartAudio();
   *
   *    let note = random(['Fb4', 'G4']);
   *    // note velocity (volume, from 0 to 1)
   *    let velocity = random();
   *    // time from now (in seconds)
   *    let time = 0;
   *    // note duration (in seconds)
   *    let dur = 1/6;
   *
   *    monoSynth.play(note, velocity, time, dur);
   *  }
   *  </code></div>
   *
   */


  monosynth_createClass(MonoSynth, [{
    key: "play",
    value: function play(note, velocity, secondsFromNow, susTime) {
      this.triggerAttack(note, velocity, ~~secondsFromNow);
      this.triggerRelease(~~secondsFromNow + (susTime || DEFAULT_SUSTAIN));
    }
    /**
     *  Trigger the Attack, and Decay portion of the Envelope.
     *  Similar to holding down a key on a piano, but it will
     *  hold the sustain level until you let go.
     *
     *  @param {String | Number} note the note you want to play, specified as a
     *                                 frequency in Hertz (Number) or as a midi
     *                                 value in Note/Octave format ("C4", "Eb3"...etc")
     *                                 See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">
     *                                 Tone</a>. Defaults to 440 hz
     *  @param  {Number} [velocity] velocity of the note to play (ranging from 0 to 1)
     *  @param  {Number} [secondsFromNow]  time from now (in seconds) at which to play
     *  @method  triggerAttack
     *  @for p5.MonoSynth
     *  @example
     *  <div><code>
     *  let monoSynth;
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(triggerAttack);
     *    background(220);
     *    text('tap here for attack, let go to release', 5, 20, width - 20);
     *    monoSynth = new p5.MonoSynth();
     *  }
     *
     *  function triggerAttack() {
     *    userStartAudio();
     *
     *    monoSynth.triggerAttack("E3");
     *  }
     *
     *  function mouseReleased() {
     *    monoSynth.triggerRelease();
     *  }
     *  </code></div>
     */

  }, {
    key: "triggerAttack",
    value: function triggerAttack(note, velocity) {
      var secondsFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var freq = noteToFreq(note);
      var vel = velocity || 0.1;
      this.oscillator.freq(freq, 0, secondsFromNow);
      this.env.ramp(this.output.gain, secondsFromNow, vel);
    }
    /**
     *  Trigger the release of the Envelope. This is similar to releasing
     *  the key on a piano and letting the sound fade according to the
     *  release level and release time.
     *
     *  @param  {Number} secondsFromNow time to trigger the release
     *  @method  triggerRelease
     *  @for p5.MonoSynth
     *  @example
     *  <div><code>
     *  let monoSynth;
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(triggerAttack);
     *    background(220);
     *    text('tap here for attack, let go to release', 5, 20, width - 20);
     *    monoSynth = new p5.MonoSynth();
     *  }
     *
     *  function triggerAttack() {
     *    userStartAudio();
     *
     *    monoSynth.triggerAttack("E3");
     *  }
     *
     *  function mouseReleased() {
     *    monoSynth.triggerRelease();
     *  }
     *  </code></div>
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease() {
      var secondsFromNow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      this.env.ramp(this.output.gain, secondsFromNow, 0);
    }
    /**
     *  Set values like a traditional
     *  <a href="https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg">
     *  ADSR envelope
     *  </a>.
     *
     *  @method  setADSR
     *  @for p5.MonoSynth
     *  @param {Number} attackTime    Time (in seconds before envelope
     *                                reaches Attack Level
     *  @param {Number} [decayTime]    Time (in seconds) before envelope
     *                                reaches Decay/Sustain Level
     *  @param {Number} [susRatio]    Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,
     *                                where 1.0 = attackLevel, 0.0 = releaseLevel.
     *                                The susRatio determines the decayLevel and the level at which the
     *                                sustain portion of the envelope will sustain.
     *                                For example, if attackLevel is 0.4, releaseLevel is 0,
     *                                and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is
     *                                increased to 1.0 (using <code>setRange</code>),
     *                                then decayLevel would increase proportionally, to become 0.5.
     *  @param {Number} [releaseTime]   Time in seconds from now (defaults to 0)
     */

  }, {
    key: "setADSR",
    value: function setADSR(attack, decay, sustain, release) {
      this.env.setADSR(attack, decay, sustain, release);
    }
    /**
     * MonoSynth amp
     * @method  amp
     * @for p5.MonoSynth
     * @param  {Number} vol      desired volume
     * @param  {Number} [rampTime] Time to reach new volume
     * @return {Number}          new volume value
     */

  }, {
    key: "amp",
    value: function amp(vol, rampTime) {
      var t = rampTime || 0;

      if (typeof vol !== 'undefined') {
        this.oscillator.amp(vol, t);
      }

      return this.oscillator.amp().value;
    }
    /**
     *  Connect to a p5.sound / Web Audio object.
     *
     *  @method  connect
     *  @for p5.MonoSynth
     *  @param  {Object} unit A p5.sound or Web Audio object
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      var u = unit || main.input;
      this.output.connect(u.input ? u.input : u);
    }
    /**
     *  Disconnect all outputs
     *
     *  @method  disconnect
     *  @for p5.MonoSynth
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect();
      }
    }
    /**
     *  Get rid of the MonoSynth and free up its resources / memory.
     *
     *  @method  dispose
     *  @for p5.MonoSynth
     */

  }, {
    key: "dispose",
    value: function dispose() {
      monosynth_get(monosynth_getPrototypeOf(MonoSynth.prototype), "dispose", this).call(this);

      if (this.env) {
        this.env.dispose();
      }

      if (this.oscillator) {
        this.oscillator.dispose();
      }
    }
  }]);

  return MonoSynth;
}(audioVoice_0);

 var monosynth = (monosynth_MonoSynth);
function onsetDetect_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function onsetDetect_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function onsetDetect_createClass(Constructor, protoProps, staticProps) { if (protoProps) onsetDetect_defineProperties(Constructor.prototype, protoProps); if (staticProps) onsetDetect_defineProperties(Constructor, staticProps); return Constructor; }

/**
 *  Listen for onsets (a sharp increase in volume) within a given
 *  frequency range.
 *
 *  @class p5.OnsetDetect
 *  @constructor
 *  @param {Number} freqLow     Low frequency
 *  @param {Number} freqHigh     High frequency
 *  @param {Number} threshold   Amplitude threshold between 0 (no energy) and 1 (maximum)
 *  @param {Function} callback  Function to call when an onset is detected
 */
var OnsetDetect =
function () {
  function OnsetDetect(freqLow, freqHigh, threshold, callback) {
    onsetDetect_classCallCheck(this, OnsetDetect);

    this.isDetected = false;
    this.freqLow = freqLow;
    this.freqHigh = freqHigh;
    this.treshold = threshold;
    this.energy = 0;
    this.penergy = 0; 

    this.sensitivity = 500;
    this.callback = callback;
  } 


  onsetDetect_createClass(OnsetDetect, [{
    key: "update",
    value: function update(fftObject, callback) {
      this.energy = fftObject.getEnergy(this.freqLow, this.freqHigh) / 255;

      if (this.isDetected === false) {
        if (this.energy - this.penergy > this.treshold) {
          this.isDetected = true;

          if (this.callback) {
            this.callback(this.energy);
          } else if (callback) {
            callback(this.energy);
          }

          var self = this;
          setTimeout(function () {
            self.isDetected = false;
          }, this.sensitivity);
        }
      }

      this.penergy = this.energy;
    }
  }]);

  return OnsetDetect;
}();

 var onsetDetect = (OnsetDetect);
function polysynth_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function polysynth_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function polysynth_createClass(Constructor, protoProps, staticProps) { if (protoProps) polysynth_defineProperties(Constructor.prototype, protoProps); if (staticProps) polysynth_defineProperties(Constructor, staticProps); return Constructor; }




/**
 *  An AudioVoice is used as a single voice for sound synthesis.
 *  The PolySynth class holds an array of AudioVoice, and deals
 *  with voices allocations, with setting notes to be played, and
 *  parameters to be set.
 *
 *  @class p5.PolySynth
 *  @constructor
 *
 *  @param {Number} [synthVoice]   A monophonic synth voice inheriting
 *                                 the AudioVoice class. Defaults to p5.MonoSynth
 *  @param {Number} [maxVoices] Number of voices, defaults to 8;
 *  @example
 *  <div><code>
 *  let polySynth;
 *
 *  function setup() {
 *    let cnv = createCanvas(100, 100);
 *    cnv.mousePressed(playSynth);
 *    background(220);
 *    text('click to play', 20, 20);
 *
 *    polySynth = new p5.PolySynth();
 *  }
 *
 *  function playSynth() {
 *    userStartAudio();
 *
 *    // note duration (in seconds)
 *    let dur = 1.5;
 *
 *    // time from now (in seconds)
 *    let time = 0;
 *
 *    // velocity (volume, from 0 to 1)
 *    let vel = 0.1;
 *
 *    // notes can overlap with each other
 *    polySynth.play('G2', vel, 0, dur);
 *    polySynth.play('C3', vel, time += 1/3, dur);
 *    polySynth.play('G3', vel, time += 1/3, dur);
 *  }
 *  </code></div>
 **/

var polysynth_PolySynth =
function () {
  function PolySynth(audioVoice, maxVoices) {
    polysynth_classCallCheck(this, PolySynth);

    this.audiovoices = [];
    /**
     * An object that holds information about which notes have been played and
     * which notes are currently being played. New notes are added as keys
     * on the fly. While a note has been attacked, but not released, the value of the
     * key is the audiovoice which is generating that note. When notes are released,
     * the value of the key becomes undefined.
     * @property notes
     */

    this.notes = {}; 

    this._newest = 0;
    this._oldest = 0;
    /**
     * A PolySynth must have at least 1 voice, defaults to 8
     * @property polyvalue
     */

    this.maxVoices = maxVoices || 8;
    /**
     * Monosynth that generates the sound for each note that is triggered. The
     * p5.PolySynth defaults to using the p5.MonoSynth as its voice.
     * @property AudioVoice
     */

    this.AudioVoice = audioVoice === undefined ? p5.MonoSynth : audioVoice;
    /**
     * This value must only change as a note is attacked or released. Due to delay
     * and sustain times, Tone.TimelineSignal is required to schedule the change in value.
     * @private
     * @property {Tone.TimelineSignal} _voicesInUse
     */

    this._voicesInUse = new TimelineSignal_default.a(0);
    this.output = main.audiocontext.createGain();
    this.connect(); 

    this._allocateVoices();

    main.soundArray.push(this);
  }
  /**
   * Construct the appropriate number of audiovoices
   * @private
   * @for p5.PolySynth
   * @method  _allocateVoices
   */


  polysynth_createClass(PolySynth, [{
    key: "_allocateVoices",
    value: function _allocateVoices() {
      for (var i = 0; i < this.maxVoices; i++) {
        this.audiovoices.push(new this.AudioVoice());
        this.audiovoices[i].disconnect();
        this.audiovoices[i].connect(this.output);
      }
    }
    /**
     *  Play a note by triggering noteAttack and noteRelease with sustain time
     *
     *  @method  play
     *  @for p5.PolySynth
     *  @param  {Number} [note] midi note to play (ranging from 0 to 127 - 60 being a middle C)
     *  @param  {Number} [velocity] velocity of the note to play (ranging from 0 to 1)
     *  @param  {Number} [secondsFromNow]  time from now (in seconds) at which to play
     *  @param  {Number} [sustainTime] time to sustain before releasing the envelope
     *  @example
     *  <div><code>
     *  let polySynth;
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(playSynth);
     *    background(220);
     *    text('click to play', 20, 20);
     *
     *    polySynth = new p5.PolySynth();
     *  }
     *
     *  function playSynth() {
     *    userStartAudio();
     *
     *    // note duration (in seconds)
     *    let dur = 1.5;
     *
     *    // time from now (in seconds)
     *    let time = 0;
     *
     *    // velocity (volume, from 0 to 1)
     *    let vel = 0.1;
     *
     *    // notes can overlap with each other
     *    polySynth.play('G2', vel, 0, dur);
     *    polySynth.play('C3', vel, time += 1/3, dur);
     *    polySynth.play('G3', vel, time += 1/3, dur);
     *  }
     *  </code></div>
     */

  }, {
    key: "play",
    value: function play(note, velocity, secondsFromNow) {
      var susTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      this.noteAttack(note, velocity, secondsFromNow);
      this.noteRelease(note, secondsFromNow + susTime);
    }
    /**
     *  noteADSR sets the envelope for a specific note that has just been triggered.
     *  Using this method modifies the envelope of whichever audiovoice is being used
     *  to play the desired note. The envelope should be reset before noteRelease is called
     *  in order to prevent the modified envelope from being used on other notes.
     *
     *  @method  noteADSR
     *  @for p5.PolySynth
     *  @param {Number} [note]        Midi note on which ADSR should be set.
     *  @param {Number} [attackTime]  Time (in seconds before envelope
     *                                reaches Attack Level
     *  @param {Number} [decayTime]   Time (in seconds) before envelope
     *                                reaches Decay/Sustain Level
     *  @param {Number} [susRatio]    Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,
     *                                where 1.0 = attackLevel, 0.0 = releaseLevel.
     *                                The susRatio determines the decayLevel and the level at which the
     *                                sustain portion of the envelope will sustain.
     *                                For example, if attackLevel is 0.4, releaseLevel is 0,
     *                                and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is
     *                                increased to 1.0 (using <code>setRange</code>),
     *                                then decayLevel would increase proportionally, to become 0.5.
     *  @param {Number} [releaseTime]   Time in seconds from now (defaults to 0)
     **/

  }, {
    key: "noteADSR",
    value: function noteADSR(note, a, d, s, r) {
      var timeFromNow = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
      var now = main.audiocontext.currentTime;
      var t = now + timeFromNow;
      this.audiovoices[this.notes[note].getValueAtTime(t)].setADSR(a, d, s, r);
    }
    /**
     * Set the PolySynths global envelope. This method modifies the envelopes of each
     * monosynth so that all notes are played with this envelope.
     *
     *  @method  setADSR
     *  @for p5.PolySynth
     *  @param {Number} [attackTime]  Time (in seconds before envelope
     *                                reaches Attack Level
     *  @param {Number} [decayTime]   Time (in seconds) before envelope
     *                                reaches Decay/Sustain Level
     *  @param {Number} [susRatio]    Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,
     *                                where 1.0 = attackLevel, 0.0 = releaseLevel.
     *                                The susRatio determines the decayLevel and the level at which the
     *                                sustain portion of the envelope will sustain.
     *                                For example, if attackLevel is 0.4, releaseLevel is 0,
     *                                and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is
     *                                increased to 1.0 (using <code>setRange</code>),
     *                                then decayLevel would increase proportionally, to become 0.5.
     *  @param {Number} [releaseTime]   Time in seconds from now (defaults to 0)
     **/

  }, {
    key: "setADSR",
    value: function setADSR(a, d, s, r) {
      this.audiovoices.forEach(function (voice) {
        voice.setADSR(a, d, s, r);
      });
    }
    /**
     *  Trigger the Attack, and Decay portion of a MonoSynth.
     *  Similar to holding down a key on a piano, but it will
     *  hold the sustain level until you let go.
     *
     *  @method  noteAttack
     *  @for p5.PolySynth
     *  @param  {Number} [note]           midi note on which attack should be triggered.
     *  @param  {Number} [velocity]       velocity of the note to play (ranging from 0 to 1)/
     *  @param  {Number} [secondsFromNow] time from now (in seconds)
     *  @example
     *  <div><code>
     *  let polySynth = new p5.PolySynth();
     *  let pitches = ['G', 'D', 'G', 'C'];
     *  let octaves = [2, 3, 4];
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(playChord);
     *    background(220);
     *    text('tap to play', 20, 20);
     *  }
     *
     *  function playChord() {
     *    userStartAudio();
     *
     *    // play a chord: multiple notes at the same time
     *    for (let i = 0; i < 4; i++) {
     *      let note = random(pitches) + random(octaves);
     *      polySynth.noteAttack(note, 0.1);
     *    }
     *  }
     *
     *  function mouseReleased() {
     *    // release all voices
     *    polySynth.noteRelease();
     *  }
     *  </code></div>
     */

  }, {
    key: "noteAttack",
    value: function noteAttack(_note, _velocity) {
      var secondsFromNow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var acTime = main.audiocontext.currentTime + secondsFromNow; 

      var note = noteToFreq(_note);
      var velocity = _velocity || 0.1;
      var currentVoice; 

      if (this.notes[note] && this.notes[note].getValueAtTime(acTime) !== null) {
        this.noteRelease(note, 0);
      } 


      if (this._voicesInUse.getValueAtTime(acTime) < this.maxVoices) {
        currentVoice = Math.max(~~this._voicesInUse.getValueAtTime(acTime), 0);
      } 
      else {
          currentVoice = this._oldest;
          oldestNote = freqToMidi(this.audiovoices[this._oldest].oscillator.freq().value);
          this.noteRelease(oldestNote);
          this._oldest = (this._oldest + 1) % (this.maxVoices - 1);
        } 


      this.notes[note] = new TimelineSignal_default.a();
      this.notes[note].setValueAtTime(currentVoice, acTime); 

      var previousVal = this._voicesInUse._searchBefore(acTime) === null ? 0 : this._voicesInUse._searchBefore(acTime).value;

      this._voicesInUse.setValueAtTime(previousVal + 1, acTime); 


      this._updateAfter(acTime, 1);

      this._newest = currentVoice; 

      if (typeof velocity === 'number') {
        var maxRange = 1 / this._voicesInUse.getValueAtTime(acTime) * 2;
        velocity = velocity > maxRange ? maxRange : velocity;
      } 


      this.audiovoices[currentVoice].triggerAttack(note, velocity, secondsFromNow);
    }
    /**
     * Private method to ensure accurate values of this._voicesInUse
     * Any time a new value is scheduled, it is necessary to increment all subsequent
     * scheduledValues after attack, and decrement all subsequent
     * scheduledValues after release
     *
     * @private
     * @for p5.PolySynth
     * @param  {[type]} time  [description]
     * @param  {[type]} value [description]
     * @return {[type]}       [description]
     */

  }, {
    key: "_updateAfter",
    value: function _updateAfter(time, value) {
      if (this._voicesInUse._searchAfter(time) === null) {
        return;
      } else {
        this._voicesInUse._searchAfter(time).value += value;

        var nextTime = this._voicesInUse._searchAfter(time).time;

        this._updateAfter(nextTime, value);
      }
    }
    /**
     *  Trigger the Release of an AudioVoice note. This is similar to releasing
     *  the key on a piano and letting the sound fade according to the
     *  release level and release time.
     *
     *  @method  noteRelease
     *  @for p5.PolySynth
     *  @param  {Number} [note]           midi note on which attack should be triggered.
     *                                    If no value is provided, all notes will be released.
     *  @param  {Number} [secondsFromNow] time to trigger the release
     *  @example
     *  <div><code>
     *  let polySynth = new p5.PolySynth();
     *  let pitches = ['G', 'D', 'G', 'C'];
     *  let octaves = [2, 3, 4];
     *
     *  function setup() {
     *    let cnv = createCanvas(100, 100);
     *    cnv.mousePressed(playChord);
     *    background(220);
     *    text('tap to play', 20, 20);
     *  }
     *
     *  function playChord() {
     *    userStartAudio();
     *
     *    // play a chord: multiple notes at the same time
     *    for (let i = 0; i < 4; i++) {
     *      let note = random(pitches) + random(octaves);
     *      polySynth.noteAttack(note, 0.1);
     *    }
     *  }
     *
     *  function mouseReleased() {
     *    // release all voices
     *    polySynth.noteRelease();
     *  }
     *  </code></div>
     *
     */

  }, {
    key: "noteRelease",
    value: function noteRelease(_note, secondsFromNow) {
      var now = main.audiocontext.currentTime;
      var tFromNow = secondsFromNow || 0;
      var t = now + tFromNow; 

      if (!_note) {
        this.audiovoices.forEach(function (voice) {
          voice.triggerRelease(tFromNow);
        });

        this._voicesInUse.setValueAtTime(0, t);

        for (var n in this.notes) {
          this.notes[n].dispose();
          delete this.notes[n];
        }

        return;
      } 


      var note = noteToFreq(_note);

      if (!this.notes[note] || this.notes[note].getValueAtTime(t) === null) {
        console.warn('Cannot release a note that is not already playing');
      } else {
        var previousVal = Math.max(~~this._voicesInUse.getValueAtTime(t).value, 1);

        this._voicesInUse.setValueAtTime(previousVal - 1, t); 


        if (previousVal > 0) {
          this._updateAfter(t, -1);
        }

        this.audiovoices[this.notes[note].getValueAtTime(t)].triggerRelease(tFromNow);
        this.notes[note].dispose();
        delete this.notes[note];
        this._newest = this._newest === 0 ? 0 : (this._newest - 1) % (this.maxVoices - 1);
      }
    }
    /**
     *  Connect to a p5.sound / Web Audio object.
     *
     *  @method  connect
     *  @for p5.PolySynth
     *  @param  {Object} unit A p5.sound or Web Audio object
     */

  }, {
    key: "connect",
    value: function connect(unit) {
      var u = unit || main.input;
      this.output.connect(u.input ? u.input : u);
    }
    /**
     *  Disconnect all outputs
     *
     *  @method  disconnect
     *  @for p5.PolySynth
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.output) {
        this.output.disconnect();
      }
    }
    /**
     *  Get rid of the MonoSynth and free up its resources / memory.
     *
     *  @method  dispose
     *  @for p5.PolySynth
     */

  }, {
    key: "dispose",
    value: function dispose() {
      this.audiovoices.forEach(function (voice) {
        voice.dispose();
      });

      if (this.output) {
        this.output.disconnect();
        delete this.output;
      }
    }
  }]);

  return PolySynth;
}();

 var polysynth = (polysynth_PolySynth);
function Signal_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Signal_Signal = function Signal() {
  Signal_classCallCheck(this, Signal);

  console.warn('p5.Signal is deprecated , Use Tone.js Signal instead ');
};

 var deprecations_Signal = (Signal_Signal);



p5.prototype.getAudioContext = audiocontext["b" ];
p5.prototype.userStartAudio = audiocontext["c" ];


p5.prototype.sampleRate = sampleRate;
p5.prototype.freqToMidi = freqToMidi;
p5.prototype.midiToFreq = midiToFreq;
p5.prototype.noteToFreq = noteToFreq;
p5.prototype.soundFormats = soundFormats;
p5.prototype.disposeSound = disposeSound;
p5.prototype._checkFileFormats = _checkFileFormats;
p5.prototype._mathChain = _mathChain;
p5.prototype.convertToWav = convertToWav;
p5.prototype.interleave = interleave;
p5.prototype.writeUTFBytes = writeUTFBytes;
p5.prototype.safeBufferSize = safeBufferSize;
p5.prototype.saveSound = saveSound; 

p5.prototype.registerMethod('remove', p5.prototype.disposeSound);



p5.Panner = panner_0;

p5.SoundFile = soundfile;
p5.prototype.loadSound = loadSound; 

p5.prototype.registerPreloadMethod('loadSound', p5.prototype);

p5.Amplitude = amplitude;

p5.FFT = fft;

p5.Oscillator = oscillator;
p5.SinOsc = SinOsc;
p5.TriOsc = TriOsc;
p5.SawOsc = SawOsc;
p5.SqrOsc = SqrOsc;


p5.Noise = noise;

p5.Pulse = pulse;

p5.AudioIn = audioin;

p5.Effect = effect;

p5.Filter = filter;
p5.LowPass = LowPass;
p5.HighPass = HighPass;
p5.BandPass = BandPass;

p5.EQ = eq;

p5.listener3D = listener3d;

p5.Panner3D = panner3d;

p5.Delay = delay;

p5.Reverb = Reverb;
p5.Convolver = reverb_Convolver;
p5.prototype.createConvolver = createConvolver;
p5.prototype.registerPreloadMethod('createConvolver', p5.prototype);

p5.Metro = metro;

p5.Phrase = Phrase;
p5.Part = looper_Part;
p5.Score = Score;

p5.SoundLoop = soundLoop;

p5.Compressor = compressor;

p5.peakDetect = peakDetect;

p5.SoundRecorder = soundRecorder;

p5.Distortion = distortion;

p5.Gain = gain;

p5.AudioVoice = audioVoice_0;

p5.MonoSynth = monosynth;

p5.OnsetDetect = onsetDetect;

p5.PolySynth = polysynth;

p5.PeakDetect = peakDetect; 


p5.Signal = deprecations_Signal;

 })
 ]);


/***/ }),

/***/ "./node_modules/p5/lib/p5.min.js":
/*!***************************************!*\
  !*** ./node_modules/p5/lib/p5.min.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*! p5.js v1.4.1 February 02, 2022 */

!function(e){if(true)module.exports=e();else {}}(function(){var i,e,t;return function i(a,s,l){function u(t,e){if(!s[t]){if(!a[t]){var r=undefined;if(!e&&r)return require(t,!0);if(c)return c(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var o=s[t]={exports:{}};a[t][0].call(o.exports,function(e){return u(a[t][1][e]||e)},o,o.exports,i,a,s,l)}return s[t].exports}for(var c=undefined,e=0;e<l.length;e++)u(l[e]);return u}({1:[function(e,t,r){"use strict";r.byteLength=function(e){var t=d(e),r=t[0],n=t[1];return 3*(r+n)/4-n},r.toByteArray=function(e){var t,r,n=d(e),o=n[0],i=n[1],a=new c(function(e,t){return 3*(e+t)/4-t}(o,i)),s=0,l=0<i?o-4:o;for(r=0;r<l;r+=4)t=u[e.charCodeAt(r)]<<18|u[e.charCodeAt(r+1)]<<12|u[e.charCodeAt(r+2)]<<6|u[e.charCodeAt(r+3)],a[s++]=t>>16&255,a[s++]=t>>8&255,a[s++]=255&t;2===i&&(t=u[e.charCodeAt(r)]<<2|u[e.charCodeAt(r+1)]>>4,a[s++]=255&t);1===i&&(t=u[e.charCodeAt(r)]<<10|u[e.charCodeAt(r+1)]<<4|u[e.charCodeAt(r+2)]>>2,a[s++]=t>>8&255,a[s++]=255&t);return a},r.fromByteArray=function(e){for(var t,r=e.length,n=r%3,o=[],i=0,a=r-n;i<a;i+=16383)o.push(l(e,i,a<i+16383?a:i+16383));1==n?(t=e[r-1],o.push(s[t>>2]+s[t<<4&63]+"==")):2==n&&(t=(e[r-2]<<8)+e[r-1],o.push(s[t>>10]+s[t>>4&63]+s[t<<2&63]+"="));return o.join("")};for(var s=[],u=[],c="undefined"!=typeof Uint8Array?Uint8Array:Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,i=n.length;o<i;++o)s[o]=n[o],u[n.charCodeAt(o)]=o;function d(e){var t=e.length;if(0<t%4)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function l(e,t,r){for(var n,o,i=[],a=t;a<r;a+=3)n=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),i.push(s[(o=n)>>18&63]+s[o>>12&63]+s[o>>6&63]+s[63&o]);return i.join("")}u["-".charCodeAt(0)]=62,u["_".charCodeAt(0)]=63},{}],2:[function(e,t,r){},{}],3:[function(e,t,r){arguments[4][2][0].apply(r,arguments)},{dup:2}],4:[function(U,e,N){(function(d){"use strict";var n=U("base64-js"),i=U("ieee754"),e="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;N.Buffer=d,N.SlowBuffer=function(e){+e!=e&&(e=0);return d.alloc(+e)},N.INSPECT_MAX_BYTES=50;var r=2147483647;function a(e){if(r<e)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,d.prototype),t}function d(e,t,r){if("number"!=typeof e)return o(e,t,r);if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return l(e)}function o(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!d.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var r=0|f(e,t),n=a(r),o=n.write(e,t);o!==r&&(n=n.slice(0,o));return n}(e,t);if(ArrayBuffer.isView(e))return u(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(R(e,ArrayBuffer)||e&&R(e.buffer,ArrayBuffer))return function(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');var n;n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r);return Object.setPrototypeOf(n,d.prototype),n}(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return d.from(n,t,r);var o=function(e){if(d.isBuffer(e)){var t=0|c(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||D(e.length)?a(0):u(e);if("Buffer"===e.type&&Array.isArray(e.data))return u(e.data)}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return d.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function s(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function l(e){return s(e),a(e<0?0:0|c(e))}function u(e){for(var t=e.length<0?0:0|c(e.length),r=a(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function c(e){if(r<=e)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r.toString(16)+" bytes");return 0|e}function f(e,t){if(d.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||R(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var r=e.length,n=2<arguments.length&&!0===arguments[2];if(!n&&0===r)return 0;for(var o=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return P(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return A(e).length;default:if(o)return n?-1:P(e).length;t=(""+t).toLowerCase(),o=!0}}function h(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function p(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):2147483647<r?r=2147483647:r<-2147483648&&(r=-2147483648),D(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=d.from(t,n)),d.isBuffer(t))return 0===t.length?-1:y(e,t,r,n,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):y(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function y(e,t,r,n,o){var i,a=1,s=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s/=a=2,l/=2,r/=2}function u(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){var c=-1;for(i=r;i<s;i++)if(u(e,i)===u(t,-1===c?0:i-c)){if(-1===c&&(c=i),i-c+1===l)return c*a}else-1!==c&&(i-=i-c),c=-1}else for(s<r+l&&(r=s-l),i=r;0<=i;i--){for(var d=!0,f=0;f<l;f++)if(u(e,i+f)!==u(t,f)){d=!1;break}if(d)return i}return-1}function m(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?o<(n=Number(n))&&(n=o):n=o;var i=t.length;i/2<n&&(n=i/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(D(s))return a;e[r+a]=s}return a}function g(e,t,r,n){return k(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function v(e,t,r,n){return k(function(e,t){for(var r,n,o,i=[],a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function b(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function _(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var i,a,s,l,u=e[o],c=null,d=239<u?4:223<u?3:191<u?2:1;if(o+d<=r)switch(d){case 1:u<128&&(c=u);break;case 2:128==(192&(i=e[o+1]))&&127<(l=(31&u)<<6|63&i)&&(c=l);break;case 3:i=e[o+1],a=e[o+2],128==(192&i)&&128==(192&a)&&2047<(l=(15&u)<<12|(63&i)<<6|63&a)&&(l<55296||57343<l)&&(c=l);break;case 4:i=e[o+1],a=e[o+2],s=e[o+3],128==(192&i)&&128==(192&a)&&128==(192&s)&&65535<(l=(15&u)<<18|(63&i)<<12|(63&a)<<6|63&s)&&l<1114112&&(c=l)}null===c?(c=65533,d=1):65535<c&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),o+=d}return function(e){var t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=x));return r}(n)}N.kMaxLength=r,(d.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}())||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(d.prototype,"parent",{enumerable:!0,get:function(){if(d.isBuffer(this))return this.buffer}}),Object.defineProperty(d.prototype,"offset",{enumerable:!0,get:function(){if(d.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&d[Symbol.species]===d&&Object.defineProperty(d,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),d.poolSize=8192,d.from=function(e,t,r){return o(e,t,r)},Object.setPrototypeOf(d.prototype,Uint8Array.prototype),Object.setPrototypeOf(d,Uint8Array),d.alloc=function(e,t,r){return o=t,i=r,s(n=e),n<=0?a(n):void 0!==o?"string"==typeof i?a(n).fill(o,i):a(n).fill(o):a(n);var n,o,i},d.allocUnsafe=function(e){return l(e)},d.allocUnsafeSlow=function(e){return l(e)},d.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==d.prototype},d.compare=function(e,t){if(R(e,Uint8Array)&&(e=d.from(e,e.offset,e.byteLength)),R(t,Uint8Array)&&(t=d.from(t,t.offset,t.byteLength)),!d.isBuffer(e)||!d.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var r=e.length,n=t.length,o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},d.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},d.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return d.alloc(0);var r;if(void 0===t)for(r=t=0;r<e.length;++r)t+=e[r].length;var n=d.allocUnsafe(t),o=0;for(r=0;r<e.length;++r){var i=e[r];if(R(i,Uint8Array)&&(i=d.from(i)),!d.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(n,o),o+=i.length}return n},d.byteLength=f,d.prototype._isBuffer=!0,d.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)h(this,t,t+1);return this},d.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)h(this,t,t+3),h(this,t+1,t+2);return this},d.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)h(this,t,t+7),h(this,t+1,t+6),h(this,t+2,t+5),h(this,t+3,t+4);return this},d.prototype.toLocaleString=d.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?_(this,0,e):function(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e=e||"utf8";;)switch(e){case"hex":return S(this,t,r);case"utf8":case"utf-8":return _(this,t,r);case"ascii":return w(this,t,r);case"latin1":case"binary":return j(this,t,r);case"base64":return b(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}.apply(this,arguments)},d.prototype.equals=function(e){if(!d.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===d.compare(this,e)},d.prototype.inspect=function(){var e="",t=N.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},e&&(d.prototype[e]=d.prototype.inspect),d.prototype.compare=function(e,t,r,n,o){if(R(e,Uint8Array)&&(e=d.from(e,e.offset,e.byteLength)),!d.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(o<=n&&r<=t)return 0;if(o<=n)return-1;if(r<=t)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(i,a),l=this.slice(n,o),u=e.slice(t,r),c=0;c<s;++c)if(l[c]!==u[c]){i=l[c],a=u[c];break}return i<a?-1:a<i?1:0},d.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},d.prototype.indexOf=function(e,t,r){return p(this,e,t,r,!0)},d.prototype.lastIndexOf=function(e,t,r){return p(this,e,t,r,!1)},d.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||o<r)&&(r=o),0<e.length&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n=n||"utf8";for(var i,a,s,l,u,c,d=!1;;)switch(n){case"hex":return m(this,e,t,r);case"utf8":case"utf-8":return u=t,c=r,k(P(e,(l=this).length-u),l,u,c);case"ascii":return g(this,e,t,r);case"latin1":case"binary":return g(this,e,t,r);case"base64":return i=this,a=t,s=r,k(A(e),i,a,s);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return v(this,e,t,r);default:if(d)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),d=!0}},d.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var x=4096;function w(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function j(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function S(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||n<r)&&(r=n);for(var o="",i=t;i<r;++i)o+=I[e[i]];return o}function M(e,t,r){for(var n=e.slice(t,r),o="",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}function E(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(r<e+t)throw new RangeError("Trying to access beyond buffer length")}function T(e,t,r,n,o,i){if(!d.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(o<t||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function O(e,t,r,n){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function C(e,t,r,n,o){return t=+t,r>>>=0,o||O(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function L(e,t,r,n,o){return t=+t,r>>>=0,o||O(e,0,r,8),i.write(e,t,r,n,52,8),r+8}d.prototype.slice=function(e,t){var r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):r<e&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):r<t&&(t=r),t<e&&(t=e);var n=this.subarray(e,t);return Object.setPrototypeOf(n,d.prototype),n},d.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n},d.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=this[e+--t],o=1;0<t&&(o*=256);)n+=this[e+--t]*o;return n},d.prototype.readUInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),this[e]},d.prototype.readUInt16LE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]|this[e+1]<<8},d.prototype.readUInt16BE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]<<8|this[e+1]},d.prototype.readUInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},d.prototype.readUInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},d.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return(o*=128)<=n&&(n-=Math.pow(2,8*t)),n},d.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=t,o=1,i=this[e+--n];0<n&&(o*=256);)i+=this[e+--n]*o;return(o*=128)<=i&&(i-=Math.pow(2,8*t)),i},d.prototype.readInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},d.prototype.readInt16LE=function(e,t){e>>>=0,t||E(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},d.prototype.readInt16BE=function(e,t){e>>>=0,t||E(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},d.prototype.readInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},d.prototype.readInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},d.prototype.readFloatLE=function(e,t){return e>>>=0,t||E(e,4,this.length),i.read(this,e,!0,23,4)},d.prototype.readFloatBE=function(e,t){return e>>>=0,t||E(e,4,this.length),i.read(this,e,!1,23,4)},d.prototype.readDoubleLE=function(e,t){return e>>>=0,t||E(e,8,this.length),i.read(this,e,!0,52,8)},d.prototype.readDoubleBE=function(e,t){return e>>>=0,t||E(e,8,this.length),i.read(this,e,!1,52,8)},d.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||T(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},d.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||T(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,i=1;for(this[t+o]=255&e;0<=--o&&(i*=256);)this[t+o]=e/i&255;return t+r},d.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,1,255,0),this[t]=255&e,t+1},d.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},d.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},d.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},d.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},d.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var o=Math.pow(2,8*r-1);T(this,e,t,r,o-1,-o)}var i=0,a=1,s=0;for(this[t]=255&e;++i<r&&(a*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},d.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var o=Math.pow(2,8*r-1);T(this,e,t,r,o-1,-o)}var i=r-1,a=1,s=0;for(this[t+i]=255&e;0<=--i&&(a*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},d.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},d.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},d.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},d.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},d.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},d.prototype.writeFloatLE=function(e,t,r){return C(this,e,t,!0,r)},d.prototype.writeFloatBE=function(e,t,r){return C(this,e,t,!1,r)},d.prototype.writeDoubleLE=function(e,t,r){return L(this,e,t,!0,r)},d.prototype.writeDoubleBE=function(e,t,r){return L(this,e,t,!1,r)},d.prototype.copy=function(e,t,r,n){if(!d.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r=r||0,n||0===n||(n=this.length),t>=e.length&&(t=e.length),t=t||0,0<n&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var o=n-r;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,r,n);else if(this===e&&r<t&&t<n)for(var i=o-1;0<=i;--i)e[i+t]=this[i+r];else Uint8Array.prototype.set.call(e,this.subarray(r,n),t);return o},d.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!d.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){var o=e.charCodeAt(0);("utf8"===n&&o<128||"latin1"===n)&&(e=o)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,"number"==typeof(e=e||0))for(i=t;i<r;++i)this[i]=e;else{var a=d.isBuffer(e)?e:d.from(e,n),s=a.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=a[i%s]}return this};var t=/[^+/0-9A-Za-z-_]/g;function P(e,t){var r;t=t||1/0;for(var n=e.length,o=null,i=[],a=0;a<n;++a){if(55295<(r=e.charCodeAt(a))&&r<57344){if(!o){if(56319<r){-1<(t-=3)&&i.push(239,191,189);continue}if(a+1===n){-1<(t-=3)&&i.push(239,191,189);continue}o=r;continue}if(r<56320){-1<(t-=3)&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&-1<(t-=3)&&i.push(239,191,189);if(o=null,r<128){if(--t<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function A(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(t,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function k(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function R(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function D(e){return e!=e}var I=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var n=16*r,o=0;o<16;++o)t[n+o]=e[r]+e[o];return t}()}).call(this,U("buffer").Buffer)},{"base64-js":1,buffer:4,ieee754:236}],5:[function(e,t,r){t.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},{}],6:[function(e,t,r){var n=e("../internals/is-object");t.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},{"../internals/is-object":74}],7:[function(e,t,r){var n=e("../internals/well-known-symbol"),o=e("../internals/object-create"),i=e("../internals/object-define-property"),a=n("unscopables"),s=Array.prototype;null==s[a]&&i.f(s,a,{configurable:!0,value:o(null)}),t.exports=function(e){s[a][e]=!0}},{"../internals/object-create":90,"../internals/object-define-property":92,"../internals/well-known-symbol":146}],8:[function(e,t,r){"use strict";var n=e("../internals/string-multibyte").charAt;t.exports=function(e,t,r){return t+(r?n(e,t).length:1)}},{"../internals/string-multibyte":123}],9:[function(e,t,r){t.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},{}],10:[function(e,t,r){var n=e("../internals/is-object");t.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},{"../internals/is-object":74}],11:[function(e,t,r){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},{}],12:[function(e,t,r){"use strict";function n(e){return l(e)&&u(L,c(e))}var o,i=e("../internals/array-buffer-native"),a=e("../internals/descriptors"),s=e("../internals/global"),l=e("../internals/is-object"),u=e("../internals/has"),c=e("../internals/classof"),d=e("../internals/create-non-enumerable-property"),f=e("../internals/redefine"),h=e("../internals/object-define-property").f,p=e("../internals/object-get-prototype-of"),y=e("../internals/object-set-prototype-of"),m=e("../internals/well-known-symbol"),g=e("../internals/uid"),v=s.Int8Array,b=v&&v.prototype,_=s.Uint8ClampedArray,x=_&&_.prototype,w=v&&p(v),j=b&&p(b),S=Object.prototype,M=S.isPrototypeOf,E=m("toStringTag"),T=g("TYPED_ARRAY_TAG"),O=i&&!!y&&"Opera"!==c(s.opera),C=!1,L={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8};for(o in L)s[o]||(O=!1);if((!O||"function"!=typeof w||w===Function.prototype)&&(w=function(){throw TypeError("Incorrect invocation")},O))for(o in L)s[o]&&y(s[o],w);if((!O||!j||j===S)&&(j=w.prototype,O))for(o in L)s[o]&&y(s[o].prototype,j);if(O&&p(x)!==j&&y(x,j),a&&!u(j,E))for(o in C=!0,h(j,E,{get:function(){return l(this)?this[T]:void 0}}),L)s[o]&&d(s[o],T,o);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:O,TYPED_ARRAY_TAG:C&&T,aTypedArray:function(e){if(n(e))return e;throw TypeError("Target is not a typed array")},aTypedArrayConstructor:function(e){if(y){if(M.call(w,e))return e}else for(var t in L)if(u(L,o)){var r=s[t];if(r&&(e===r||M.call(r,e)))return e}throw TypeError("Target is not a typed array constructor")},exportTypedArrayMethod:function(e,t,r){if(a){if(r)for(var n in L){var o=s[n];o&&u(o.prototype,e)&&delete o.prototype[e]}j[e]&&!r||f(j,e,r?t:O&&b[e]||t)}},exportTypedArrayStaticMethod:function(e,t,r){var n,o;if(a){if(y){if(r)for(n in L)(o=s[n])&&u(o,e)&&delete o[e];if(w[e]&&!r)return;try{return f(w,e,r?t:O&&v[e]||t)}catch(e){}}for(n in L)!(o=s[n])||o[e]&&!r||f(o,e,t)}},isView:function(e){var t=c(e);return"DataView"===t||u(L,t)},isTypedArray:n,TypedArray:w,TypedArrayPrototype:j}},{"../internals/array-buffer-native":11,"../internals/classof":29,"../internals/create-non-enumerable-property":37,"../internals/descriptors":42,"../internals/global":59,"../internals/has":60,"../internals/is-object":74,"../internals/object-define-property":92,"../internals/object-get-prototype-of":97,"../internals/object-set-prototype-of":101,"../internals/redefine":108,"../internals/uid":143,"../internals/well-known-symbol":146}],13:[function(e,t,r){"use strict";function n(e){return[255&e]}function o(e){return[255&e,e>>8&255]}function i(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function a(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function s(e){return V(e,23,4)}function l(e){return V(e,52,8)}function u(e,t){E(e[R],t,{get:function(){return L(this)[t]}})}function c(e,t,r,n){var o=x(r),i=L(e);if(o+t>i.byteLength)throw G(D);var a=L(i.buffer).bytes,s=o+i.byteOffset,l=a.slice(s,s+t);return n?l:l.reverse()}function d(e,t,r,n,o,i){var a=x(r),s=L(e);if(a+t>s.byteLength)throw G(D);for(var l=L(s.buffer).bytes,u=a+s.byteOffset,c=n(+o),d=0;d<t;d++)l[u+d]=c[i?d:t-d-1]}var f=e("../internals/global"),h=e("../internals/descriptors"),p=e("../internals/array-buffer-native"),y=e("../internals/create-non-enumerable-property"),m=e("../internals/redefine-all"),g=e("../internals/fails"),v=e("../internals/an-instance"),b=e("../internals/to-integer"),_=e("../internals/to-length"),x=e("../internals/to-index"),w=e("../internals/ieee754"),j=e("../internals/object-get-prototype-of"),S=e("../internals/object-set-prototype-of"),M=e("../internals/object-get-own-property-names").f,E=e("../internals/object-define-property").f,T=e("../internals/array-fill"),O=e("../internals/set-to-string-tag"),C=e("../internals/internal-state"),L=C.get,P=C.set,A="ArrayBuffer",k="DataView",R="prototype",D="Wrong index",I=f[A],U=I,N=f[k],F=N&&N[R],B=Object.prototype,G=f.RangeError,V=w.pack,z=w.unpack;if(p){if(!g(function(){I(1)})||!g(function(){new I(-1)})||g(function(){return new I,new I(1.5),new I(NaN),I.name!=A})){for(var H,W=(U=function(e){return v(this,U),new I(x(e))})[R]=I[R],q=M(I),X=0;q.length>X;)(H=q[X++])in U||y(U,H,I[H]);W.constructor=U}S&&j(F)!==B&&S(F,B);var Y=new N(new U(2)),Z=F.setInt8;Y.setInt8(0,2147483648),Y.setInt8(1,2147483649),!Y.getInt8(0)&&Y.getInt8(1)||m(F,{setInt8:function(e,t){Z.call(this,e,t<<24>>24)},setUint8:function(e,t){Z.call(this,e,t<<24>>24)}},{unsafe:!0})}else U=function(e){v(this,U,A);var t=x(e);P(this,{bytes:T.call(new Array(t),0),byteLength:t}),h||(this.byteLength=t)},N=function(e,t,r){v(this,N,k),v(e,U,k);var n=L(e).byteLength,o=b(t);if(o<0||n<o)throw G("Wrong offset");if(n<o+(r=void 0===r?n-o:_(r)))throw G("Wrong length");P(this,{buffer:e,byteLength:r,byteOffset:o}),h||(this.buffer=e,this.byteLength=r,this.byteOffset=o)},h&&(u(U,"byteLength"),u(N,"buffer"),u(N,"byteLength"),u(N,"byteOffset")),m(N[R],{getInt8:function(e){return c(this,1,e)[0]<<24>>24},getUint8:function(e){return c(this,1,e)[0]},getInt16:function(e,t){var r=c(this,2,e,1<arguments.length?t:void 0);return(r[1]<<8|r[0])<<16>>16},getUint16:function(e,t){var r=c(this,2,e,1<arguments.length?t:void 0);return r[1]<<8|r[0]},getInt32:function(e,t){return a(c(this,4,e,1<arguments.length?t:void 0))},getUint32:function(e,t){return a(c(this,4,e,1<arguments.length?t:void 0))>>>0},getFloat32:function(e,t){return z(c(this,4,e,1<arguments.length?t:void 0),23)},getFloat64:function(e,t){return z(c(this,8,e,1<arguments.length?t:void 0),52)},setInt8:function(e,t){d(this,1,e,n,t)},setUint8:function(e,t){d(this,1,e,n,t)},setInt16:function(e,t,r){d(this,2,e,o,t,2<arguments.length?r:void 0)},setUint16:function(e,t,r){d(this,2,e,o,t,2<arguments.length?r:void 0)},setInt32:function(e,t,r){d(this,4,e,i,t,2<arguments.length?r:void 0)},setUint32:function(e,t,r){d(this,4,e,i,t,2<arguments.length?r:void 0)},setFloat32:function(e,t,r){d(this,4,e,s,t,2<arguments.length?r:void 0)},setFloat64:function(e,t,r){d(this,8,e,l,t,2<arguments.length?r:void 0)}});O(U,A),O(N,k),t.exports={ArrayBuffer:U,DataView:N}},{"../internals/an-instance":9,"../internals/array-buffer-native":11,"../internals/array-fill":15,"../internals/create-non-enumerable-property":37,"../internals/descriptors":42,"../internals/fails":50,"../internals/global":59,"../internals/ieee754":65,"../internals/internal-state":70,"../internals/object-define-property":92,"../internals/object-get-own-property-names":95,"../internals/object-get-prototype-of":97,"../internals/object-set-prototype-of":101,"../internals/redefine-all":107,"../internals/set-to-string-tag":117,"../internals/to-index":131,"../internals/to-integer":133,"../internals/to-length":134}],14:[function(e,t,r){"use strict";var c=e("../internals/to-object"),d=e("../internals/to-absolute-index"),f=e("../internals/to-length"),h=Math.min;t.exports=[].copyWithin||function(e,t,r){var n=c(this),o=f(n.length),i=d(e,o),a=d(t,o),s=2<arguments.length?r:void 0,l=h((void 0===s?o:d(s,o))-a,o-i),u=1;for(a<i&&i<a+l&&(u=-1,a+=l-1,i+=l-1);0<l--;)a in n?n[i]=n[a]:delete n[i],i+=u,a+=u;return n}},{"../internals/to-absolute-index":130,"../internals/to-length":134,"../internals/to-object":135}],15:[function(e,t,r){"use strict";var u=e("../internals/to-object"),c=e("../internals/to-absolute-index"),d=e("../internals/to-length");t.exports=function(e,t,r){for(var n=u(this),o=d(n.length),i=arguments.length,a=c(1<i?t:void 0,o),s=2<i?r:void 0,l=void 0===s?o:c(s,o);a<l;)n[a++]=e;return n}},{"../internals/to-absolute-index":130,"../internals/to-length":134,"../internals/to-object":135}],16:[function(e,t,r){"use strict";var n=e("../internals/array-iteration").forEach,o=e("../internals/array-method-is-strict"),i=e("../internals/array-method-uses-to-length"),a=o("forEach"),s=i("forEach");t.exports=a&&s?[].forEach:function(e,t){return n(this,e,1<arguments.length?t:void 0)}},{"../internals/array-iteration":19,"../internals/array-method-is-strict":22,"../internals/array-method-uses-to-length":23}],17:[function(e,t,r){"use strict";var m=e("../internals/function-bind-context"),g=e("../internals/to-object"),v=e("../internals/call-with-safe-iteration-closing"),b=e("../internals/is-array-iterator-method"),_=e("../internals/to-length"),x=e("../internals/create-property"),w=e("../internals/get-iterator-method");t.exports=function(e,t,r){var n,o,i,a,s,l,u=g(e),c="function"==typeof this?this:Array,d=arguments.length,f=1<d?t:void 0,h=void 0!==f,p=w(u),y=0;if(h&&(f=m(f,2<d?r:void 0,2)),null==p||c==Array&&b(p))for(o=new c(n=_(u.length));y<n;y++)l=h?f(u[y],y):u[y],x(o,y,l);else for(s=(a=p.call(u)).next,o=new c;!(i=s.call(a)).done;y++)l=h?v(a,f,[i.value,y],!0):i.value,x(o,y,l);return o.length=y,o}},{"../internals/call-with-safe-iteration-closing":26,"../internals/create-property":39,"../internals/function-bind-context":54,"../internals/get-iterator-method":57,"../internals/is-array-iterator-method":71,"../internals/to-length":134,"../internals/to-object":135}],18:[function(e,t,r){function n(s){return function(e,t,r){var n,o=l(e),i=u(o.length),a=c(r,i);if(s&&t!=t){for(;a<i;)if((n=o[a++])!=n)return!0}else for(;a<i;a++)if((s||a in o)&&o[a]===t)return s||a||0;return!s&&-1}}var l=e("../internals/to-indexed-object"),u=e("../internals/to-length"),c=e("../internals/to-absolute-index");t.exports={includes:n(!0),indexOf:n(!1)}},{"../internals/to-absolute-index":130,"../internals/to-indexed-object":132,"../internals/to-length":134}],19:[function(e,t,r){function n(h){var p=1==h,y=2==h,m=3==h,g=4==h,v=6==h,b=5==h||v;return function(e,t,r,n){for(var o,i,a=w(e),s=x(a),l=_(t,r,3),u=j(s.length),c=0,d=n||S,f=p?d(e,u):y?d(e,0):void 0;c<u;c++)if((b||c in s)&&(i=l(o=s[c],c,a),h))if(p)f[c]=i;else if(i)switch(h){case 3:return!0;case 5:return o;case 6:return c;case 2:M.call(f,o)}else if(g)return!1;return v?-1:m||g?g:f}}var _=e("../internals/function-bind-context"),x=e("../internals/indexed-object"),w=e("../internals/to-object"),j=e("../internals/to-length"),S=e("../internals/array-species-create"),M=[].push;t.exports={forEach:n(0),map:n(1),filter:n(2),some:n(3),every:n(4),find:n(5),findIndex:n(6)}},{"../internals/array-species-create":25,"../internals/function-bind-context":54,"../internals/indexed-object":66,"../internals/to-length":134,"../internals/to-object":135}],20:[function(e,t,r){"use strict";var i=e("../internals/to-indexed-object"),a=e("../internals/to-integer"),s=e("../internals/to-length"),n=e("../internals/array-method-is-strict"),o=e("../internals/array-method-uses-to-length"),l=Math.min,u=[].lastIndexOf,c=!!u&&1/[1].lastIndexOf(1,-0)<0,d=n("lastIndexOf"),f=o("indexOf",{ACCESSORS:!0,1:0}),h=c||!d||!f;t.exports=h?function(e,t){if(c)return u.apply(this,arguments)||0;var r=i(this),n=s(r.length),o=n-1;for(1<arguments.length&&(o=l(o,a(t))),o<0&&(o=n+o);0<=o;o--)if(o in r&&r[o]===e)return o||0;return-1}:u},{"../internals/array-method-is-strict":22,"../internals/array-method-uses-to-length":23,"../internals/to-indexed-object":132,"../internals/to-integer":133,"../internals/to-length":134}],21:[function(e,t,r){var n=e("../internals/fails"),o=e("../internals/well-known-symbol"),i=e("../internals/engine-v8-version"),a=o("species");t.exports=function(t){return 51<=i||!n(function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo})}},{"../internals/engine-v8-version":47,"../internals/fails":50,"../internals/well-known-symbol":146}],22:[function(e,t,r){"use strict";var n=e("../internals/fails");t.exports=function(e,t){var r=[][e];return!!r&&n(function(){r.call(null,t||function(){throw 1},1)})}},{"../internals/fails":50}],23:[function(e,t,r){function a(e){throw e}var s=e("../internals/descriptors"),l=e("../internals/fails"),u=e("../internals/has"),c=Object.defineProperty,d={};t.exports=function(e,t){if(u(d,e))return d[e];var r=[][e],n=!!u(t=t||{},"ACCESSORS")&&t.ACCESSORS,o=u(t,0)?t[0]:a,i=u(t,1)?t[1]:void 0;return d[e]=!!r&&!l(function(){if(n&&!s)return!0;var e={length:-1};n?c(e,1,{enumerable:!0,get:a}):e[1]=1,r.call(e,o,i)})}},{"../internals/descriptors":42,"../internals/fails":50,"../internals/has":60}],24:[function(e,t,r){function n(u){return function(e,t,r,n){c(t);var o=d(e),i=f(o),a=h(o.length),s=u?a-1:0,l=u?-1:1;if(r<2)for(;;){if(s in i){n=i[s],s+=l;break}if(s+=l,u?s<0:a<=s)throw TypeError("Reduce of empty array with no initial value")}for(;u?0<=s:s<a;s+=l)s in i&&(n=t(n,i[s],s,o));return n}}var c=e("../internals/a-function"),d=e("../internals/to-object"),f=e("../internals/indexed-object"),h=e("../internals/to-length");t.exports={left:n(!1),right:n(!0)}},{"../internals/a-function":5,"../internals/indexed-object":66,"../internals/to-length":134,"../internals/to-object":135}],25:[function(e,t,r){var n=e("../internals/is-object"),o=e("../internals/is-array"),i=e("../internals/well-known-symbol")("species");t.exports=function(e,t){var r;return o(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!o(r.prototype)?n(r)&&null===(r=r[i])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},{"../internals/is-array":72,"../internals/is-object":74,"../internals/well-known-symbol":146}],26:[function(e,t,r){var i=e("../internals/an-object");t.exports=function(t,e,r,n){try{return n?e(i(r)[0],r[1]):e(r)}catch(e){var o=t.return;throw void 0!==o&&i(o.call(t)),e}}},{"../internals/an-object":10}],27:[function(e,t,r){var o=e("../internals/well-known-symbol")("iterator"),i=!1;try{var n=0,a={next:function(){return{done:!!n++}},return:function(){i=!0}};a[o]=function(){return this},Array.from(a,function(){throw 2})}catch(e){}t.exports=function(e,t){if(!t&&!i)return!1;var r=!1;try{var n={};n[o]=function(){return{next:function(){return{done:r=!0}}}},e(n)}catch(e){}return r}},{"../internals/well-known-symbol":146}],28:[function(e,t,r){var n={}.toString;t.exports=function(e){return n.call(e).slice(8,-1)}},{}],29:[function(e,t,r){var n=e("../internals/to-string-tag-support"),o=e("../internals/classof-raw"),i=e("../internals/well-known-symbol")("toStringTag"),a="Arguments"==o(function(){return arguments}());t.exports=n?o:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?r:a?o(t):"Object"==(n=o(t))&&"function"==typeof t.callee?"Arguments":n}},{"../internals/classof-raw":28,"../internals/to-string-tag-support":139,"../internals/well-known-symbol":146}],30:[function(e,t,r){"use strict";var u=e("../internals/object-define-property").f,c=e("../internals/object-create"),d=e("../internals/redefine-all"),f=e("../internals/function-bind-context"),h=e("../internals/an-instance"),p=e("../internals/iterate"),a=e("../internals/define-iterator"),s=e("../internals/set-species"),y=e("../internals/descriptors"),m=e("../internals/internal-metadata").fastKey,n=e("../internals/internal-state"),g=n.set,v=n.getterFor;t.exports={getConstructor:function(e,r,n,o){function i(e,t,r){var n,o,i=s(e),a=l(e,t);return a?a.value=r:(i.last=a={index:o=m(t,!0),key:t,value:r,previous:n=i.last,next:void 0,removed:!1},i.first||(i.first=a),n&&(n.next=a),y?i.size++:e.size++,"F"!==o&&(i.index[o]=a)),e}var a=e(function(e,t){h(e,a,r),g(e,{type:r,index:c(null),first:void 0,last:void 0,size:0}),y||(e.size=0),null!=t&&p(t,e[o],e,n)}),s=v(r),l=function(e,t){var r,n=s(e),o=m(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return d(a.prototype,{clear:function(){for(var e=s(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,y?e.size=0:this.size=0},delete:function(e){var t=s(this),r=l(this,e);if(r){var n=r.next,o=r.previous;delete t.index[r.index],r.removed=!0,o&&(o.next=n),n&&(n.previous=o),t.first==r&&(t.first=n),t.last==r&&(t.last=o),y?t.size--:this.size--}return!!r},forEach:function(e,t){for(var r,n=s(this),o=f(e,1<arguments.length?t:void 0,3);r=r?r.next:n.first;)for(o(r.value,r.key,this);r&&r.removed;)r=r.previous},has:function(e){return!!l(this,e)}}),d(a.prototype,n?{get:function(e){var t=l(this,e);return t&&t.value},set:function(e,t){return i(this,0===e?0:e,t)}}:{add:function(e){return i(this,e=0===e?0:e,e)}}),y&&u(a.prototype,"size",{get:function(){return s(this).size}}),a},setStrong:function(e,t,r){var n=t+" Iterator",o=v(t),i=v(n);a(e,t,function(e,t){g(this,{type:n,target:e,state:o(e),kind:t,last:void 0})},function(){for(var e=i(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:{value:e.target=void 0,done:!0}},r?"entries":"values",!r,!0),s(t)}}},{"../internals/an-instance":9,"../internals/define-iterator":40,"../internals/descriptors":42,"../internals/function-bind-context":54,"../internals/internal-metadata":69,"../internals/internal-state":70,"../internals/iterate":77,"../internals/object-create":90,"../internals/object-define-property":92,"../internals/redefine-all":107,"../internals/set-species":116}],31:[function(e,t,r){"use strict";var m=e("../internals/export"),g=e("../internals/global"),v=e("../internals/is-forced"),b=e("../internals/redefine"),_=e("../internals/internal-metadata"),x=e("../internals/iterate"),w=e("../internals/an-instance"),j=e("../internals/is-object"),S=e("../internals/fails"),M=e("../internals/check-correctness-of-iteration"),E=e("../internals/set-to-string-tag"),T=e("../internals/inherit-if-required");t.exports=function(n,e,t){function r(e){var r=l[e];b(l,e,"add"==e?function(e){return r.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(i&&!j(e))&&r.call(this,0===e?0:e)}:"get"==e?function(e){return i&&!j(e)?void 0:r.call(this,0===e?0:e)}:"has"==e?function(e){return!(i&&!j(e))&&r.call(this,0===e?0:e)}:function(e,t){return r.call(this,0===e?0:e,t),this})}var o=-1!==n.indexOf("Map"),i=-1!==n.indexOf("Weak"),a=o?"set":"add",s=g[n],l=s&&s.prototype,u=s,c={};if(v(n,"function"!=typeof s||!(i||l.forEach&&!S(function(){(new s).entries().next()}))))u=t.getConstructor(e,n,o,a),_.REQUIRED=!0;else if(v(n,!0)){var d=new u,f=d[a](i?{}:-0,1)!=d,h=S(function(){d.has(1)}),p=M(function(e){new s(e)}),y=!i&&S(function(){for(var e=new s,t=5;t--;)e[a](t,t);return!e.has(-0)});p||(((u=e(function(e,t){w(e,u,n);var r=T(new s,e,u);return null!=t&&x(t,r[a],r,o),r})).prototype=l).constructor=u),(h||y)&&(r("delete"),r("has"),o&&r("get")),(y||f)&&r(a),i&&l.clear&&delete l.clear}return c[n]=u,m({global:!0,forced:u!=s},c),E(u,n),i||t.setStrong(u,n,o),u}},{"../internals/an-instance":9,"../internals/check-correctness-of-iteration":27,"../internals/export":49,"../internals/fails":50,"../internals/global":59,"../internals/inherit-if-required":67,"../internals/internal-metadata":69,"../internals/is-forced":73,"../internals/is-object":74,"../internals/iterate":77,"../internals/redefine":108,"../internals/set-to-string-tag":117}],32:[function(e,t,r){var s=e("../internals/has"),l=e("../internals/own-keys"),u=e("../internals/object-get-own-property-descriptor"),c=e("../internals/object-define-property");t.exports=function(e,t){for(var r=l(t),n=c.f,o=u.f,i=0;i<r.length;i++){var a=r[i];s(e,a)||n(e,a,o(t,a))}}},{"../internals/has":60,"../internals/object-define-property":92,"../internals/object-get-own-property-descriptor":93,"../internals/own-keys":103}],33:[function(e,t,r){var n=e("../internals/well-known-symbol")("match");t.exports=function(t){var r=/./;try{"/./"[t](r)}catch(e){try{return r[n]=!1,"/./"[t](r)}catch(e){}}return!1}},{"../internals/well-known-symbol":146}],34:[function(e,t,r){var n=e("../internals/fails");t.exports=!n(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})},{"../internals/fails":50}],35:[function(e,t,r){var a=e("../internals/require-object-coercible"),s=/"/g;t.exports=function(e,t,r,n){var o=String(a(e)),i="<"+t;return""!==r&&(i+=" "+r+'="'+String(n).replace(s,"&quot;")+'"'),i+">"+o+"</"+t+">"}},{"../internals/require-object-coercible":113}],36:[function(e,t,r){"use strict";function o(){return this}var i=e("../internals/iterators-core").IteratorPrototype,a=e("../internals/object-create"),s=e("../internals/create-property-descriptor"),l=e("../internals/set-to-string-tag"),u=e("../internals/iterators");t.exports=function(e,t,r){var n=t+" Iterator";return e.prototype=a(i,{next:s(1,r)}),l(e,n,!1,!0),u[n]=o,e}},{"../internals/create-property-descriptor":38,"../internals/iterators":79,"../internals/iterators-core":78,"../internals/object-create":90,"../internals/set-to-string-tag":117}],37:[function(e,t,r){var n=e("../internals/descriptors"),o=e("../internals/object-define-property"),i=e("../internals/create-property-descriptor");t.exports=n?function(e,t,r){return o.f(e,t,i(1,r))}:function(e,t,r){return e[t]=r,e}},{"../internals/create-property-descriptor":38,"../internals/descriptors":42,"../internals/object-define-property":92}],38:[function(e,t,r){t.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},{}],39:[function(e,t,r){"use strict";var o=e("../internals/to-primitive"),i=e("../internals/object-define-property"),a=e("../internals/create-property-descriptor");t.exports=function(e,t,r){var n=o(t);n in e?i.f(e,n,a(0,r)):e[n]=r}},{"../internals/create-property-descriptor":38,"../internals/object-define-property":92,"../internals/to-primitive":138}],40:[function(e,t,r){"use strict";function g(){return this}var v=e("../internals/export"),b=e("../internals/create-iterator-constructor"),_=e("../internals/object-get-prototype-of"),x=e("../internals/object-set-prototype-of"),w=e("../internals/set-to-string-tag"),j=e("../internals/create-non-enumerable-property"),S=e("../internals/redefine"),n=e("../internals/well-known-symbol"),M=e("../internals/is-pure"),E=e("../internals/iterators"),o=e("../internals/iterators-core"),T=o.IteratorPrototype,O=o.BUGGY_SAFARI_ITERATORS,C=n("iterator"),L="values",P="entries";t.exports=function(e,t,r,n,o,i,a){b(r,t,n);function s(e){if(e===o&&y)return y;if(!O&&e in h)return h[e];switch(e){case"keys":case L:case P:return function(){return new r(this,e)}}return function(){return new r(this)}}var l,u,c,d=t+" Iterator",f=!1,h=e.prototype,p=h[C]||h["@@iterator"]||o&&h[o],y=!O&&p||s(o),m="Array"==t&&h.entries||p;if(m&&(l=_(m.call(new e)),T!==Object.prototype&&l.next&&(M||_(l)===T||(x?x(l,T):"function"!=typeof l[C]&&j(l,C,g)),w(l,d,!0,!0),M&&(E[d]=g))),o==L&&p&&p.name!==L&&(f=!0,y=function(){return p.call(this)}),M&&!a||h[C]===y||j(h,C,y),E[t]=y,o)if(u={values:s(L),keys:i?y:s("keys"),entries:s(P)},a)for(c in u)!O&&!f&&c in h||S(h,c,u[c]);else v({target:t,proto:!0,forced:O||f},u);return u}},{"../internals/create-iterator-constructor":36,"../internals/create-non-enumerable-property":37,"../internals/export":49,"../internals/is-pure":75,"../internals/iterators":79,"../internals/iterators-core":78,"../internals/object-get-prototype-of":97,"../internals/object-set-prototype-of":101,"../internals/redefine":108,"../internals/set-to-string-tag":117,"../internals/well-known-symbol":146}],41:[function(e,t,r){var n=e("../internals/path"),o=e("../internals/has"),i=e("../internals/well-known-symbol-wrapped"),a=e("../internals/object-define-property").f;t.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||a(t,e,{value:i.f(e)})}},{"../internals/has":60,"../internals/object-define-property":92,"../internals/path":104,"../internals/well-known-symbol-wrapped":145}],42:[function(e,t,r){var n=e("../internals/fails");t.exports=!n(function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})},{"../internals/fails":50}],43:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/is-object"),i=n.document,a=o(i)&&o(i.createElement);t.exports=function(e){return a?i.createElement(e):{}}},{"../internals/global":59,"../internals/is-object":74}],44:[function(e,t,r){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},{}],45:[function(e,t,r){var n=e("../internals/engine-user-agent");t.exports=/(iphone|ipod|ipad).*applewebkit/i.test(n)},{"../internals/engine-user-agent":46}],46:[function(e,t,r){var n=e("../internals/get-built-in");t.exports=n("navigator","userAgent")||""},{"../internals/get-built-in":56}],47:[function(e,t,r){var n,o,i=e("../internals/global"),a=e("../internals/engine-user-agent"),s=i.process,l=s&&s.versions,u=l&&l.v8;u?o=(n=u.split("."))[0]+n[1]:a&&(!(n=a.match(/Edge\/(\d+)/))||74<=n[1])&&(n=a.match(/Chrome\/(\d+)/))&&(o=n[1]),t.exports=o&&+o},{"../internals/engine-user-agent":46,"../internals/global":59}],48:[function(e,t,r){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},{}],49:[function(e,t,r){var c=e("../internals/global"),d=e("../internals/object-get-own-property-descriptor").f,f=e("../internals/create-non-enumerable-property"),h=e("../internals/redefine"),p=e("../internals/set-global"),y=e("../internals/copy-constructor-properties"),m=e("../internals/is-forced");t.exports=function(e,t){var r,n,o,i,a,s=e.target,l=e.global,u=e.stat;if(r=l?c:u?c[s]||p(s,{}):(c[s]||{}).prototype)for(n in t){if(i=t[n],o=e.noTargetGet?(a=d(r,n))&&a.value:r[n],!m(l?n:s+(u?".":"#")+n,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;y(i,o)}(e.sham||o&&o.sham)&&f(i,"sham",!0),h(r,n,i,e)}}},{"../internals/copy-constructor-properties":32,"../internals/create-non-enumerable-property":37,"../internals/global":59,"../internals/is-forced":73,"../internals/object-get-own-property-descriptor":93,"../internals/redefine":108,"../internals/set-global":115}],50:[function(e,t,r){t.exports=function(e){try{return!!e()}catch(e){return!0}}},{}],51:[function(e,t,r){"use strict";e("../modules/es.regexp.exec");var d=e("../internals/redefine"),f=e("../internals/fails"),h=e("../internals/well-known-symbol"),p=e("../internals/regexp-exec"),y=e("../internals/create-non-enumerable-property"),m=h("species"),g=!f(function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}),v="$0"==="a".replace(/./,"$0"),n=h("replace"),b=!!/./[n]&&""===/./[n]("a","$0"),_=!f(function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2!==r.length||"a"!==r[0]||"b"!==r[1]});t.exports=function(r,e,t,n){var o=h(r),i=!f(function(){var e={};return e[o]=function(){return 7},7!=""[r](e)}),a=i&&!f(function(){var e=!1,t=/a/;return"split"===r&&((t={constructor:{}}).constructor[m]=function(){return t},t.flags="",t[o]=/./[o]),t.exec=function(){return e=!0,null},t[o](""),!e});if(!i||!a||"replace"===r&&(!g||!v||b)||"split"===r&&!_){var s=/./[o],l=t(o,""[r],function(e,t,r,n,o){return t.exec===p?i&&!o?{done:!0,value:s.call(t,r,n)}:{done:!0,value:e.call(r,t,n)}:{done:!1}},{REPLACE_KEEPS_$0:v,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:b}),u=l[0],c=l[1];d(String.prototype,r,u),d(RegExp.prototype,o,2==e?function(e,t){return c.call(e,this,t)}:function(e){return c.call(e,this)})}n&&y(RegExp.prototype[o],"sham",!0)}},{"../internals/create-non-enumerable-property":37,"../internals/fails":50,"../internals/redefine":108,"../internals/regexp-exec":110,"../internals/well-known-symbol":146,"../modules/es.regexp.exec":181}],52:[function(e,t,r){"use strict";var f=e("../internals/is-array"),h=e("../internals/to-length"),p=e("../internals/function-bind-context"),y=function(e,t,r,n,o,i,a,s){for(var l,u=o,c=0,d=!!a&&p(a,s,3);c<n;){if(c in r){if(l=d?d(r[c],c,t):r[c],0<i&&f(l))u=y(e,t,l,h(l.length),u,i-1)-1;else{if(9007199254740991<=u)throw TypeError("Exceed the acceptable array length");e[u]=l}u++}c++}return u};t.exports=y},{"../internals/function-bind-context":54,"../internals/is-array":72,"../internals/to-length":134}],53:[function(e,t,r){var n=e("../internals/fails");t.exports=!n(function(){return Object.isExtensible(Object.preventExtensions({}))})},{"../internals/fails":50}],54:[function(e,t,r){var i=e("../internals/a-function");t.exports=function(n,o,e){if(i(n),void 0===o)return n;switch(e){case 0:return function(){return n.call(o)};case 1:return function(e){return n.call(o,e)};case 2:return function(e,t){return n.call(o,e,t)};case 3:return function(e,t,r){return n.call(o,e,t,r)}}return function(){return n.apply(o,arguments)}}},{"../internals/a-function":5}],55:[function(e,t,r){"use strict";var i=e("../internals/a-function"),a=e("../internals/is-object"),s=[].slice,l={};t.exports=Function.bind||function(t){var r=i(this),n=s.call(arguments,1),o=function(){var e=n.concat(s.call(arguments));return this instanceof o?function(e,t,r){if(!(t in l)){for(var n=[],o=0;o<t;o++)n[o]="a["+o+"]";l[t]=Function("C,a","return new C("+n.join(",")+")")}return l[t](e,r)}(r,e.length,e):r.apply(t,e)};return a(r.prototype)&&(o.prototype=r.prototype),o}},{"../internals/a-function":5,"../internals/is-object":74}],56:[function(e,t,r){function n(e){return"function"==typeof e?e:void 0}var o=e("../internals/path"),i=e("../internals/global");t.exports=function(e,t){return arguments.length<2?n(o[e])||n(i[e]):o[e]&&o[e][t]||i[e]&&i[e][t]}},{"../internals/global":59,"../internals/path":104}],57:[function(e,t,r){var n=e("../internals/classof"),o=e("../internals/iterators"),i=e("../internals/well-known-symbol")("iterator");t.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||o[n(e)]}},{"../internals/classof":29,"../internals/iterators":79,"../internals/well-known-symbol":146}],58:[function(e,t,r){var n=e("../internals/an-object"),o=e("../internals/get-iterator-method");t.exports=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},{"../internals/an-object":10,"../internals/get-iterator-method":57}],59:[function(e,r,t){(function(e){function t(e){return e&&e.Math==Math&&e}r.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof e&&e)||Function("return this")()}).call(this,"undefined"!=typeof __webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],60:[function(e,t,r){var n={}.hasOwnProperty;t.exports=function(e,t){return n.call(e,t)}},{}],61:[function(e,t,r){t.exports={}},{}],62:[function(e,t,r){var n=e("../internals/global");t.exports=function(e,t){var r=n.console;r&&r.error&&(1===arguments.length?r.error(e):r.error(e,t))}},{"../internals/global":59}],63:[function(e,t,r){var n=e("../internals/get-built-in");t.exports=n("document","documentElement")},{"../internals/get-built-in":56}],64:[function(e,t,r){var n=e("../internals/descriptors"),o=e("../internals/fails"),i=e("../internals/document-create-element");t.exports=!n&&!o(function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a})},{"../internals/descriptors":42,"../internals/document-create-element":43,"../internals/fails":50}],65:[function(e,t,r){var h=Math.abs,p=Math.pow,y=Math.floor,m=Math.log,g=Math.LN2;t.exports={pack:function(e,t,r){var n,o,i,a=new Array(r),s=8*r-t-1,l=(1<<s)-1,u=l>>1,c=23===t?p(2,-24)-p(2,-77):0,d=e<0||0===e&&1/e<0?1:0,f=0;for((e=h(e))!=e||e===1/0?(o=e!=e?1:0,n=l):(n=y(m(e)/g),e*(i=p(2,-n))<1&&(n--,i*=2),2<=(e+=1<=n+u?c/i:c*p(2,1-u))*i&&(n++,i/=2),l<=n+u?(o=0,n=l):1<=n+u?(o=(e*i-1)*p(2,t),n+=u):(o=e*p(2,u-1)*p(2,t),n=0));8<=t;a[f++]=255&o,o/=256,t-=8);for(n=n<<t|o,s+=t;0<s;a[f++]=255&n,n/=256,s-=8);return a[--f]|=128*d,a},unpack:function(e,t){var r,n=e.length,o=8*n-t-1,i=(1<<o)-1,a=i>>1,s=o-7,l=n-1,u=e[l--],c=127&u;for(u>>=7;0<s;c=256*c+e[l],l--,s-=8);for(r=c&(1<<-s)-1,c>>=-s,s+=t;0<s;r=256*r+e[l],l--,s-=8);if(0===c)c=1-a;else{if(c===i)return r?NaN:u?-1/0:1/0;r+=p(2,t),c-=a}return(u?-1:1)*r*p(2,c-t)}}},{}],66:[function(e,t,r){var n=e("../internals/fails"),o=e("../internals/classof-raw"),i="".split;t.exports=n(function(){return!Object("z").propertyIsEnumerable(0)})?function(e){return"String"==o(e)?i.call(e,""):Object(e)}:Object},{"../internals/classof-raw":28,"../internals/fails":50}],67:[function(e,t,r){var i=e("../internals/is-object"),a=e("../internals/object-set-prototype-of");t.exports=function(e,t,r){var n,o;return a&&"function"==typeof(n=t.constructor)&&n!==r&&i(o=n.prototype)&&o!==r.prototype&&a(e,o),e}},{"../internals/is-object":74,"../internals/object-set-prototype-of":101}],68:[function(e,t,r){var n=e("../internals/shared-store"),o=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return o.call(e)}),t.exports=n.inspectSource},{"../internals/shared-store":119}],69:[function(e,t,r){function n(e){s(e,c,{value:{objectID:"O"+ ++d,weakData:{}}})}var o=e("../internals/hidden-keys"),i=e("../internals/is-object"),a=e("../internals/has"),s=e("../internals/object-define-property").f,l=e("../internals/uid"),u=e("../internals/freezing"),c=l("meta"),d=0,f=Object.isExtensible||function(){return!0},h=t.exports={REQUIRED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,c)){if(!f(e))return"F";if(!t)return"E";n(e)}return e[c].objectID},getWeakData:function(e,t){if(!a(e,c)){if(!f(e))return!0;if(!t)return!1;n(e)}return e[c].weakData},onFreeze:function(e){return u&&h.REQUIRED&&f(e)&&!a(e,c)&&n(e),e}};o[c]=!0},{"../internals/freezing":53,"../internals/has":60,"../internals/hidden-keys":61,"../internals/is-object":74,"../internals/object-define-property":92,"../internals/uid":143}],70:[function(e,t,r){var n,o,i,a=e("../internals/native-weak-map"),s=e("../internals/global"),l=e("../internals/is-object"),u=e("../internals/create-non-enumerable-property"),c=e("../internals/has"),d=e("../internals/shared-key"),f=e("../internals/hidden-keys"),h=s.WeakMap;if(a){var p=new h,y=p.get,m=p.has,g=p.set;n=function(e,t){return g.call(p,e,t),t},o=function(e){return y.call(p,e)||{}},i=function(e){return m.call(p,e)}}else{var v=d("state");f[v]=!0,n=function(e,t){return u(e,v,t),t},o=function(e){return c(e,v)?e[v]:{}},i=function(e){return c(e,v)}}t.exports={set:n,get:o,has:i,enforce:function(e){return i(e)?o(e):n(e,{})},getterFor:function(r){return function(e){var t;if(!l(e)||(t=o(e)).type!==r)throw TypeError("Incompatible receiver, "+r+" required");return t}}}},{"../internals/create-non-enumerable-property":37,"../internals/global":59,"../internals/has":60,"../internals/hidden-keys":61,"../internals/is-object":74,"../internals/native-weak-map":85,"../internals/shared-key":118}],71:[function(e,t,r){var n=e("../internals/well-known-symbol"),o=e("../internals/iterators"),i=n("iterator"),a=Array.prototype;t.exports=function(e){return void 0!==e&&(o.Array===e||a[i]===e)}},{"../internals/iterators":79,"../internals/well-known-symbol":146}],72:[function(e,t,r){var n=e("../internals/classof-raw");t.exports=Array.isArray||function(e){return"Array"==n(e)}},{"../internals/classof-raw":28}],73:[function(e,t,r){function n(e,t){var r=s[a(e)];return r==u||r!=l&&("function"==typeof t?o(t):!!t)}var o=e("../internals/fails"),i=/#|\.prototype\./,a=n.normalize=function(e){return String(e).replace(i,".").toLowerCase()},s=n.data={},l=n.NATIVE="N",u=n.POLYFILL="P";t.exports=n},{"../internals/fails":50}],74:[function(e,t,r){t.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},{}],75:[function(e,t,r){t.exports=!1},{}],76:[function(e,t,r){var n=e("../internals/is-object"),o=e("../internals/classof-raw"),i=e("../internals/well-known-symbol")("match");t.exports=function(e){var t;return n(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},{"../internals/classof-raw":28,"../internals/is-object":74,"../internals/well-known-symbol":146}],77:[function(e,t,r){function h(e,t){this.stopped=e,this.result=t}var p=e("../internals/an-object"),y=e("../internals/is-array-iterator-method"),m=e("../internals/to-length"),g=e("../internals/function-bind-context"),v=e("../internals/get-iterator-method"),b=e("../internals/call-with-safe-iteration-closing");(t.exports=function(e,t,r,n,o){var i,a,s,l,u,c,d,f=g(t,r,n?2:1);if(o)i=e;else{if("function"!=typeof(a=v(e)))throw TypeError("Target is not iterable");if(y(a)){for(s=0,l=m(e.length);s<l;s++)if((u=n?f(p(d=e[s])[0],d[1]):f(e[s]))&&u instanceof h)return u;return new h(!1)}i=a.call(e)}for(c=i.next;!(d=c.call(i)).done;)if("object"==typeof(u=b(i,f,d.value,n))&&u&&u instanceof h)return u;return new h(!1)}).stop=function(e){return new h(!0,e)}},{"../internals/an-object":10,"../internals/call-with-safe-iteration-closing":26,"../internals/function-bind-context":54,"../internals/get-iterator-method":57,"../internals/is-array-iterator-method":71,"../internals/to-length":134}],78:[function(e,t,r){"use strict";var n,o,i,a=e("../internals/object-get-prototype-of"),s=e("../internals/create-non-enumerable-property"),l=e("../internals/has"),u=e("../internals/well-known-symbol"),c=e("../internals/is-pure"),d=u("iterator"),f=!1;[].keys&&("next"in(i=[].keys())?(o=a(a(i)))!==Object.prototype&&(n=o):f=!0),null==n&&(n={}),c||l(n,d)||s(n,d,function(){return this}),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:f}},{"../internals/create-non-enumerable-property":37,"../internals/has":60,"../internals/is-pure":75,"../internals/object-get-prototype-of":97,"../internals/well-known-symbol":146}],79:[function(e,t,r){arguments[4][61][0].apply(r,arguments)},{dup:61}],80:[function(e,t,r){t.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},{}],81:[function(e,t,r){var n,o,i,a,s,l,u,c,d=e("../internals/global"),f=e("../internals/object-get-own-property-descriptor").f,h=e("../internals/classof-raw"),p=e("../internals/task").set,y=e("../internals/engine-is-ios"),m=d.MutationObserver||d.WebKitMutationObserver,g=d.process,v=d.Promise,b="process"==h(g),_=f(d,"queueMicrotask"),x=_&&_.value;x||(n=function(){var e,t;for(b&&(e=g.domain)&&e.exit();o;){t=o.fn,o=o.next;try{t()}catch(e){throw o?a():i=void 0,e}}i=void 0,e&&e.enter()},a=b?function(){g.nextTick(n)}:m&&!y?(s=!0,l=document.createTextNode(""),new m(n).observe(l,{characterData:!0}),function(){l.data=s=!s}):v&&v.resolve?(u=v.resolve(void 0),c=u.then,function(){c.call(u,n)}):function(){p.call(d,n)}),t.exports=x||function(e){var t={fn:e,next:void 0};i&&(i.next=t),o||(o=t,a()),i=t}},{"../internals/classof-raw":28,"../internals/engine-is-ios":45,"../internals/global":59,"../internals/object-get-own-property-descriptor":93,"../internals/task":128}],82:[function(e,t,r){var n=e("../internals/global");t.exports=n.Promise},{"../internals/global":59}],83:[function(e,t,r){var n=e("../internals/fails");t.exports=!!Object.getOwnPropertySymbols&&!n(function(){return!String(Symbol())})},{"../internals/fails":50}],84:[function(e,t,r){var n=e("../internals/fails"),o=e("../internals/well-known-symbol"),i=e("../internals/is-pure"),a=o("iterator");t.exports=!n(function(){var e=new URL("b?a=1&b=2&c=3","http://a"),r=e.searchParams,n="";return e.pathname="c%20d",r.forEach(function(e,t){r.delete("b"),n+=t+e}),i&&!e.toJSON||!r.sort||"http://a/c%20d?a=1&c=3"!==e.href||"3"!==r.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!r[a]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==n||"x"!==new URL("http://x",void 0).host})},{"../internals/fails":50,"../internals/is-pure":75,"../internals/well-known-symbol":146}],85:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/inspect-source"),i=n.WeakMap;t.exports="function"==typeof i&&/native code/.test(o(i))},{"../internals/global":59,"../internals/inspect-source":68}],86:[function(e,t,r){"use strict";function n(e){var r,n;this.promise=new e(function(e,t){if(void 0!==r||void 0!==n)throw TypeError("Bad Promise constructor");r=e,n=t}),this.resolve=o(r),this.reject=o(n)}var o=e("../internals/a-function");t.exports.f=function(e){return new n(e)}},{"../internals/a-function":5}],87:[function(e,t,r){var n=e("../internals/is-regexp");t.exports=function(e){if(n(e))throw TypeError("The method doesn't accept regular expressions");return e}},{"../internals/is-regexp":76}],88:[function(e,t,r){var n=e("../internals/global").isFinite;t.exports=Number.isFinite||function(e){return"number"==typeof e&&n(e)}},{"../internals/global":59}],89:[function(e,t,r){"use strict";var f=e("../internals/descriptors"),n=e("../internals/fails"),h=e("../internals/object-keys"),p=e("../internals/object-get-own-property-symbols"),y=e("../internals/object-property-is-enumerable"),m=e("../internals/to-object"),g=e("../internals/indexed-object"),o=Object.assign,i=Object.defineProperty;t.exports=!o||n(function(){if(f&&1!==o({b:1},o(i({},"a",{enumerable:!0,get:function(){i(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=o({},e)[r]||h(o({},t)).join("")!=n})?function(e,t){for(var r=m(e),n=arguments.length,o=1,i=p.f,a=y.f;o<n;)for(var s,l=g(arguments[o++]),u=i?h(l).concat(i(l)):h(l),c=u.length,d=0;d<c;)s=u[d++],f&&!a.call(l,s)||(r[s]=l[s]);return r}:o},{"../internals/descriptors":42,"../internals/fails":50,"../internals/indexed-object":66,"../internals/object-get-own-property-symbols":96,"../internals/object-keys":99,"../internals/object-property-is-enumerable":100,"../internals/to-object":135}],90:[function(e,t,r){function n(){}function o(e){return"<script>"+e+"</"+p+">"}var i,a=e("../internals/an-object"),s=e("../internals/object-define-properties"),l=e("../internals/enum-bug-keys"),u=e("../internals/hidden-keys"),c=e("../internals/html"),d=e("../internals/document-create-element"),f=e("../internals/shared-key"),h="prototype",p="script",y=f("IE_PROTO"),m=function(){try{i=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;m=i?function(e){e.write(o("")),e.close();var t=e.parentWindow.Object;return e=null,t}(i):((t=d("iframe")).style.display="none",c.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(o("document.F=Object")),e.close(),e.F);for(var r=l.length;r--;)delete m[h][l[r]];return m()};u[y]=!0,t.exports=Object.create||function(e,t){var r;return null!==e?(n[h]=a(e),r=new n,n[h]=null,r[y]=e):r=m(),void 0===t?r:s(r,t)}},{"../internals/an-object":10,"../internals/document-create-element":43,"../internals/enum-bug-keys":48,"../internals/hidden-keys":61,"../internals/html":63,"../internals/object-define-properties":91,"../internals/shared-key":118}],91:[function(e,t,r){var n=e("../internals/descriptors"),a=e("../internals/object-define-property"),s=e("../internals/an-object"),l=e("../internals/object-keys");t.exports=n?Object.defineProperties:function(e,t){s(e);for(var r,n=l(t),o=n.length,i=0;i<o;)a.f(e,r=n[i++],t[r]);return e}},{"../internals/an-object":10,"../internals/descriptors":42,"../internals/object-define-property":92,"../internals/object-keys":99}],92:[function(e,t,r){var n=e("../internals/descriptors"),o=e("../internals/ie8-dom-define"),i=e("../internals/an-object"),a=e("../internals/to-primitive"),s=Object.defineProperty;r.f=n?s:function(e,t,r){if(i(e),t=a(t,!0),i(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},{"../internals/an-object":10,"../internals/descriptors":42,"../internals/ie8-dom-define":64,"../internals/to-primitive":138}],93:[function(e,t,r){var n=e("../internals/descriptors"),o=e("../internals/object-property-is-enumerable"),i=e("../internals/create-property-descriptor"),a=e("../internals/to-indexed-object"),s=e("../internals/to-primitive"),l=e("../internals/has"),u=e("../internals/ie8-dom-define"),c=Object.getOwnPropertyDescriptor;r.f=n?c:function(e,t){if(e=a(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(l(e,t))return i(!o.f.call(e,t),e[t])}},{"../internals/create-property-descriptor":38,"../internals/descriptors":42,"../internals/has":60,"../internals/ie8-dom-define":64,"../internals/object-property-is-enumerable":100,"../internals/to-indexed-object":132,"../internals/to-primitive":138}],94:[function(e,t,r){var n=e("../internals/to-indexed-object"),o=e("../internals/object-get-own-property-names").f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(n(e))}},{"../internals/object-get-own-property-names":95,"../internals/to-indexed-object":132}],95:[function(e,t,r){var n=e("../internals/object-keys-internal"),o=e("../internals/enum-bug-keys").concat("length","prototype");r.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},{"../internals/enum-bug-keys":48,"../internals/object-keys-internal":98}],96:[function(e,t,r){r.f=Object.getOwnPropertySymbols},{}],97:[function(e,t,r){var n=e("../internals/has"),o=e("../internals/to-object"),i=e("../internals/shared-key"),a=e("../internals/correct-prototype-getter"),s=i("IE_PROTO"),l=Object.prototype;t.exports=a?Object.getPrototypeOf:function(e){return e=o(e),n(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},{"../internals/correct-prototype-getter":34,"../internals/has":60,"../internals/shared-key":118,"../internals/to-object":135}],98:[function(e,t,r){var a=e("../internals/has"),s=e("../internals/to-indexed-object"),l=e("../internals/array-includes").indexOf,u=e("../internals/hidden-keys");t.exports=function(e,t){var r,n=s(e),o=0,i=[];for(r in n)!a(u,r)&&a(n,r)&&i.push(r);for(;t.length>o;)a(n,r=t[o++])&&(~l(i,r)||i.push(r));return i}},{"../internals/array-includes":18,"../internals/has":60,"../internals/hidden-keys":61,"../internals/to-indexed-object":132}],99:[function(e,t,r){var n=e("../internals/object-keys-internal"),o=e("../internals/enum-bug-keys");t.exports=Object.keys||function(e){return n(e,o)}},{"../internals/enum-bug-keys":48,"../internals/object-keys-internal":98}],100:[function(e,t,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!n.call({1:2},1);r.f=i?function(e){var t=o(this,e);return!!t&&t.enumerable}:n},{}],101:[function(e,t,r){var o=e("../internals/an-object"),i=e("../internals/a-possible-prototype");t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var r,n=!1,e={};try{(r=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(e,[]),n=e instanceof Array}catch(e){}return function(e,t){return o(e),i(t),n?r.call(e,t):e.__proto__=t,e}}():void 0)},{"../internals/a-possible-prototype":6,"../internals/an-object":10}],102:[function(e,t,r){"use strict";var n=e("../internals/to-string-tag-support"),o=e("../internals/classof");t.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},{"../internals/classof":29,"../internals/to-string-tag-support":139}],103:[function(e,t,r){var n=e("../internals/get-built-in"),o=e("../internals/object-get-own-property-names"),i=e("../internals/object-get-own-property-symbols"),a=e("../internals/an-object");t.exports=n("Reflect","ownKeys")||function(e){var t=o.f(a(e)),r=i.f;return r?t.concat(r(e)):t}},{"../internals/an-object":10,"../internals/get-built-in":56,"../internals/object-get-own-property-names":95,"../internals/object-get-own-property-symbols":96}],104:[function(e,t,r){var n=e("../internals/global");t.exports=n},{"../internals/global":59}],105:[function(e,t,r){t.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},{}],106:[function(e,t,r){var n=e("../internals/an-object"),o=e("../internals/is-object"),i=e("../internals/new-promise-capability");t.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},{"../internals/an-object":10,"../internals/is-object":74,"../internals/new-promise-capability":86}],107:[function(e,t,r){var o=e("../internals/redefine");t.exports=function(e,t,r){for(var n in t)o(e,n,t[n],r);return e}},{"../internals/redefine":108}],108:[function(e,t,r){var s=e("../internals/global"),l=e("../internals/create-non-enumerable-property"),u=e("../internals/has"),c=e("../internals/set-global"),n=e("../internals/inspect-source"),o=e("../internals/internal-state"),i=o.get,d=o.enforce,f=String(String).split("String");(t.exports=function(e,t,r,n){var o=!!n&&!!n.unsafe,i=!!n&&!!n.enumerable,a=!!n&&!!n.noTargetGet;"function"==typeof r&&("string"!=typeof t||u(r,"name")||l(r,"name",t),d(r).source=f.join("string"==typeof t?t:"")),e!==s?(o?!a&&e[t]&&(i=!0):delete e[t],i?e[t]=r:l(e,t,r)):i?e[t]=r:c(t,r)})(Function.prototype,"toString",function(){return"function"==typeof this&&i(this).source||n(this)})},{"../internals/create-non-enumerable-property":37,"../internals/global":59,"../internals/has":60,"../internals/inspect-source":68,"../internals/internal-state":70,"../internals/set-global":115}],109:[function(e,t,r){var o=e("./classof-raw"),i=e("./regexp-exec");t.exports=function(e,t){var r=e.exec;if("function"==typeof r){var n=r.call(e,t);if("object"!=typeof n)throw TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==o(e))throw TypeError("RegExp#exec called on incompatible receiver");return i.call(e,t)}},{"./classof-raw":28,"./regexp-exec":110}],110:[function(e,t,r){"use strict";var n,o,d=e("./regexp-flags"),i=e("./regexp-sticky-helpers"),f=RegExp.prototype.exec,h=String.prototype.replace,a=f,p=(n=/a/,o=/b*/g,f.call(n,"a"),f.call(o,"a"),0!==n.lastIndex||0!==o.lastIndex),y=i.UNSUPPORTED_Y||i.BROKEN_CARET,m=void 0!==/()??/.exec("")[1];(p||m||y)&&(a=function(e){var t,r,n,o,i=this,a=y&&i.sticky,s=d.call(i),l=i.source,u=0,c=e;return a&&(-1===(s=s.replace("y","")).indexOf("g")&&(s+="g"),c=String(e).slice(i.lastIndex),0<i.lastIndex&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(l="(?: "+l+")",c=" "+c,u++),r=new RegExp("^(?:"+l+")",s)),m&&(r=new RegExp("^"+l+"$(?!\\s)",s)),p&&(t=i.lastIndex),n=f.call(a?r:i,c),a?n?(n.input=n.input.slice(u),n[0]=n[0].slice(u),n.index=i.lastIndex,i.lastIndex+=n[0].length):i.lastIndex=0:p&&n&&(i.lastIndex=i.global?n.index+n[0].length:t),m&&n&&1<n.length&&h.call(n[0],r,function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)}),n}),t.exports=a},{"./regexp-flags":111,"./regexp-sticky-helpers":112}],111:[function(e,t,r){"use strict";var n=e("../internals/an-object");t.exports=function(){var e=n(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},{"../internals/an-object":10}],112:[function(e,t,r){"use strict";var n=e("./fails");function o(e,t){return RegExp(e,t)}r.UNSUPPORTED_Y=n(function(){var e=o("a","y");return e.lastIndex=2,null!=e.exec("abcd")}),r.BROKEN_CARET=n(function(){var e=o("^r","gy");return e.lastIndex=2,null!=e.exec("str")})},{"./fails":50}],113:[function(e,t,r){t.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},{}],114:[function(e,t,r){t.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},{}],115:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/create-non-enumerable-property");t.exports=function(t,r){try{o(n,t,r)}catch(e){n[t]=r}return r}},{"../internals/create-non-enumerable-property":37,"../internals/global":59}],116:[function(e,t,r){"use strict";var n=e("../internals/get-built-in"),o=e("../internals/object-define-property"),i=e("../internals/well-known-symbol"),a=e("../internals/descriptors"),s=i("species");t.exports=function(e){var t=n(e),r=o.f;a&&t&&!t[s]&&r(t,s,{configurable:!0,get:function(){return this}})}},{"../internals/descriptors":42,"../internals/get-built-in":56,"../internals/object-define-property":92,"../internals/well-known-symbol":146}],117:[function(e,t,r){var n=e("../internals/object-define-property").f,o=e("../internals/has"),i=e("../internals/well-known-symbol")("toStringTag");t.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},{"../internals/has":60,"../internals/object-define-property":92,"../internals/well-known-symbol":146}],118:[function(e,t,r){var n=e("../internals/shared"),o=e("../internals/uid"),i=n("keys");t.exports=function(e){return i[e]||(i[e]=o(e))}},{"../internals/shared":120,"../internals/uid":143}],119:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/set-global"),i="__core-js_shared__",a=n[i]||o(i,{});t.exports=a},{"../internals/global":59,"../internals/set-global":115}],120:[function(e,t,r){var n=e("../internals/is-pure"),o=e("../internals/shared-store");(t.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:n?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},{"../internals/is-pure":75,"../internals/shared-store":119}],121:[function(e,t,r){var o=e("../internals/an-object"),i=e("../internals/a-function"),a=e("../internals/well-known-symbol")("species");t.exports=function(e,t){var r,n=o(e).constructor;return void 0===n||null==(r=o(n)[a])?t:i(r)}},{"../internals/a-function":5,"../internals/an-object":10,"../internals/well-known-symbol":146}],122:[function(e,t,r){var n=e("../internals/fails");t.exports=function(t){return n(function(){var e=""[t]('"');return e!==e.toLowerCase()||3<e.split('"').length})}},{"../internals/fails":50}],123:[function(e,t,r){function n(s){return function(e,t){var r,n,o=String(u(e)),i=l(t),a=o.length;return i<0||a<=i?s?"":void 0:(r=o.charCodeAt(i))<55296||56319<r||i+1===a||(n=o.charCodeAt(i+1))<56320||57343<n?s?o.charAt(i):r:s?o.slice(i,i+2):n-56320+(r-55296<<10)+65536}}var l=e("../internals/to-integer"),u=e("../internals/require-object-coercible");t.exports={codeAt:n(!1),charAt:n(!0)}},{"../internals/require-object-coercible":113,"../internals/to-integer":133}],124:[function(e,t,r){"use strict";function g(e){return e+22+75*(e<26)}function v(e,t,r){var n=0;for(e=r?x(e/700):e>>1,e+=x(e/t);455<e;n+=36)e=x(e/35);return x(n+36*e/(e+38))}function i(e){var t,r,n=[],o=(e=function(e){for(var t=[],r=0,n=e.length;r<n;){var o=e.charCodeAt(r++);if(55296<=o&&o<=56319&&r<n){var i=e.charCodeAt(r++);56320==(64512&i)?t.push(((1023&o)<<10)+(1023&i)+65536):(t.push(o),r--)}else t.push(o)}return t}(e)).length,i=128,a=0,s=72;for(t=0;t<e.length;t++)(r=e[t])<128&&n.push(w(r));var l=n.length,u=l;for(l&&n.push("-");u<o;){var c=b;for(t=0;t<e.length;t++)i<=(r=e[t])&&r<c&&(c=r);var d=u+1;if(c-i>x((b-a)/d))throw RangeError(_);for(a+=(c-i)*d,i=c,t=0;t<e.length;t++){if((r=e[t])<i&&++a>b)throw RangeError(_);if(r==i){for(var f=a,h=36;;h+=36){var p=h<=s?1:s+26<=h?26:h-s;if(f<p)break;var y=f-p,m=36-p;n.push(w(g(p+y%m))),f=x(y/m)}n.push(w(g(f))),s=v(a,d,u==l),a=0,++u}}++a,++i}return n.join("")}var b=2147483647,a=/[^\0-\u007E]/,s=/[.\u3002\uFF0E\uFF61]/g,_="Overflow: input needs wider integers to process",x=Math.floor,w=String.fromCharCode;t.exports=function(e){var t,r,n=[],o=e.toLowerCase().replace(s,".").split(".");for(t=0;t<o.length;t++)r=o[t],n.push(a.test(r)?"xn--"+i(r):r);return n.join(".")}},{}],125:[function(e,t,r){"use strict";var o=e("../internals/to-integer"),i=e("../internals/require-object-coercible");t.exports="".repeat||function(e){var t=String(i(this)),r="",n=o(e);if(n<0||n==1/0)throw RangeError("Wrong number of repetitions");for(;0<n;(n>>>=1)&&(t+=t))1&n&&(r+=t);return r}},{"../internals/require-object-coercible":113,"../internals/to-integer":133}],126:[function(e,t,r){var n=e("../internals/fails"),o=e("../internals/whitespaces");t.exports=function(e){return n(function(){return!!o[e]()||"​᠎"!="​᠎"[e]()||o[e].name!==e})}},{"../internals/fails":50,"../internals/whitespaces":147}],127:[function(e,t,r){function n(r){return function(e){var t=String(o(e));return 1&r&&(t=t.replace(a,"")),2&r&&(t=t.replace(s,"")),t}}var o=e("../internals/require-object-coercible"),i="["+e("../internals/whitespaces")+"]",a=RegExp("^"+i+i+"*"),s=RegExp(i+i+"*$");t.exports={start:n(1),end:n(2),trim:n(3)}},{"../internals/require-object-coercible":113,"../internals/whitespaces":147}],128:[function(e,t,r){function n(e){if(S.hasOwnProperty(e)){var t=S[e];delete S[e],t()}}function o(e){return function(){n(e)}}function i(e){n(e.data)}function a(e){c.postMessage(e+"",g.protocol+"//"+g.host)}var s,l,u,c=e("../internals/global"),d=e("../internals/fails"),f=e("../internals/classof-raw"),h=e("../internals/function-bind-context"),p=e("../internals/html"),y=e("../internals/document-create-element"),m=e("../internals/engine-is-ios"),g=c.location,v=c.setImmediate,b=c.clearImmediate,_=c.process,x=c.MessageChannel,w=c.Dispatch,j=0,S={},M="onreadystatechange";v&&b||(v=function(e){for(var t=[],r=1;r<arguments.length;)t.push(arguments[r++]);return S[++j]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},s(j),j},b=function(e){delete S[e]},"process"==f(_)?s=function(e){_.nextTick(o(e))}:w&&w.now?s=function(e){w.now(o(e))}:x&&!m?(u=(l=new x).port2,l.port1.onmessage=i,s=h(u.postMessage,u,1)):!c.addEventListener||"function"!=typeof postMessage||c.importScripts||d(a)||"file:"===g.protocol?s=M in y("script")?function(e){p.appendChild(y("script"))[M]=function(){p.removeChild(this),n(e)}}:function(e){setTimeout(o(e),0)}:(s=a,c.addEventListener("message",i,!1))),t.exports={set:v,clear:b}},{"../internals/classof-raw":28,"../internals/document-create-element":43,"../internals/engine-is-ios":45,"../internals/fails":50,"../internals/function-bind-context":54,"../internals/global":59,"../internals/html":63}],129:[function(e,t,r){var n=e("../internals/classof-raw");t.exports=function(e){if("number"!=typeof e&&"Number"!=n(e))throw TypeError("Incorrect invocation");return+e}},{"../internals/classof-raw":28}],130:[function(e,t,r){var n=e("../internals/to-integer"),o=Math.max,i=Math.min;t.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):i(r,t)}},{"../internals/to-integer":133}],131:[function(e,t,r){var n=e("../internals/to-integer"),o=e("../internals/to-length");t.exports=function(e){if(void 0===e)return 0;var t=n(e),r=o(t);if(t!==r)throw RangeError("Wrong length or index");return r}},{"../internals/to-integer":133,"../internals/to-length":134}],132:[function(e,t,r){var n=e("../internals/indexed-object"),o=e("../internals/require-object-coercible");t.exports=function(e){return n(o(e))}},{"../internals/indexed-object":66,"../internals/require-object-coercible":113}],133:[function(e,t,r){var n=Math.ceil,o=Math.floor;t.exports=function(e){return isNaN(e=+e)?0:(0<e?o:n)(e)}},{}],134:[function(e,t,r){var n=e("../internals/to-integer"),o=Math.min;t.exports=function(e){return 0<e?o(n(e),9007199254740991):0}},{"../internals/to-integer":133}],135:[function(e,t,r){var n=e("../internals/require-object-coercible");t.exports=function(e){return Object(n(e))}},{"../internals/require-object-coercible":113}],136:[function(e,t,r){var n=e("../internals/to-positive-integer");t.exports=function(e,t){var r=n(e);if(r%t)throw RangeError("Wrong offset");return r}},{"../internals/to-positive-integer":137}],137:[function(e,t,r){var n=e("../internals/to-integer");t.exports=function(e){var t=n(e);if(t<0)throw RangeError("The argument can't be less than 0");return t}},{"../internals/to-integer":133}],138:[function(e,t,r){var o=e("../internals/is-object");t.exports=function(e,t){if(!o(e))return e;var r,n;if(t&&"function"==typeof(r=e.toString)&&!o(n=r.call(e)))return n;if("function"==typeof(r=e.valueOf)&&!o(n=r.call(e)))return n;if(!t&&"function"==typeof(r=e.toString)&&!o(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")}},{"../internals/is-object":74}],139:[function(e,t,r){var n={};n[e("../internals/well-known-symbol")("toStringTag")]="z",t.exports="[object z]"===String(n)},{"../internals/well-known-symbol":146}],140:[function(e,t,r){"use strict";function p(e,t){for(var r=0,n=t.length,o=new(X(e))(n);r<n;)o[r]=t[r++];return o}function n(e,t){U(e,t,{get:function(){return D(this)[t]}})}function y(e){var t;return e instanceof G||"ArrayBuffer"==(t=j(e))||"SharedArrayBuffer"==t}function o(e,t){return Y(e)&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)}function i(e,t){return o(e,t=h(t,!0))?f(2,e[t]):N(e,t)}function a(e,t,r){return!(o(e,t=h(t,!0))&&S(r)&&w(r,"value"))||w(r,"get")||w(r,"set")||r.configurable||w(r,"writable")&&!r.writable||w(r,"enumerable")&&!r.enumerable?U(e,t,r):(e[t]=r.value,e)}var l=e("../internals/export"),u=e("../internals/global"),s=e("../internals/descriptors"),m=e("../internals/typed-array-constructors-require-wrappers"),c=e("../internals/array-buffer-view-core"),d=e("../internals/array-buffer"),g=e("../internals/an-instance"),f=e("../internals/create-property-descriptor"),v=e("../internals/create-non-enumerable-property"),b=e("../internals/to-length"),_=e("../internals/to-index"),x=e("../internals/to-offset"),h=e("../internals/to-primitive"),w=e("../internals/has"),j=e("../internals/classof"),S=e("../internals/is-object"),M=e("../internals/object-create"),E=e("../internals/object-set-prototype-of"),T=e("../internals/object-get-own-property-names").f,O=e("../internals/typed-array-from"),C=e("../internals/array-iteration").forEach,L=e("../internals/set-species"),P=e("../internals/object-define-property"),A=e("../internals/object-get-own-property-descriptor"),k=e("../internals/internal-state"),R=e("../internals/inherit-if-required"),D=k.get,I=k.set,U=P.f,N=A.f,F=Math.round,B=u.RangeError,G=d.ArrayBuffer,V=d.DataView,z=c.NATIVE_ARRAY_BUFFER_VIEWS,H=c.TYPED_ARRAY_TAG,W=c.TypedArray,q=c.TypedArrayPrototype,X=c.aTypedArrayConstructor,Y=c.isTypedArray,Z="BYTES_PER_ELEMENT",Q="Wrong length";s?(z||(A.f=i,P.f=a,n(q,"buffer"),n(q,"byteOffset"),n(q,"byteLength"),n(q,"length")),l({target:"Object",stat:!0,forced:!z},{getOwnPropertyDescriptor:i,defineProperty:a}),t.exports=function(e,t,i){function c(e,o){U(e,o,{get:function(){return e=o,(t=D(this)).view[r](e*d+t.byteOffset,!0);var e,t},set:function(e){return t=o,r=e,n=D(this),i&&(r=(r=F(r))<0?0:255<r?255:255&r),void n.view[a](t*d+n.byteOffset,r,!0);var t,r,n},enumerable:!0})}var d=e.match(/\d+$/)[0]/8,f=e+(i?"Clamped":"")+"Array",r="get"+e,a="set"+e,o=u[f],h=o,n=h&&h.prototype,s={};z?m&&(h=t(function(e,t,r,n){return g(e,h,f),R(S(t)?y(t)?void 0!==n?new o(t,x(r,d),n):void 0!==r?new o(t,x(r,d)):new o(t):Y(t)?p(h,t):O.call(h,t):new o(_(t)),e,h)}),E&&E(h,W),C(T(o),function(e){e in h||v(h,e,o[e])}),h.prototype=n):(h=t(function(e,t,r,n){g(e,h,f);var o,i,a,s=0,l=0;if(S(t)){if(!y(t))return Y(t)?p(h,t):O.call(h,t);o=t,l=x(r,d);var u=t.byteLength;if(void 0===n){if(u%d)throw B(Q);if((i=u-l)<0)throw B(Q)}else if(u<(i=b(n)*d)+l)throw B(Q);a=i/d}else a=_(t),o=new G(i=a*d);for(I(e,{buffer:o,byteOffset:l,byteLength:i,length:a,view:new V(o)});s<a;)c(e,s++)}),E&&E(h,W),n=h.prototype=M(q)),n.constructor!==h&&v(n,"constructor",h),H&&v(n,H,f),s[f]=h,l({global:!0,forced:h!=o,sham:!z},s),Z in h||v(h,Z,d),Z in n||v(n,Z,d),L(f)}):t.exports=function(){}},{"../internals/an-instance":9,"../internals/array-buffer":13,"../internals/array-buffer-view-core":12,"../internals/array-iteration":19,"../internals/classof":29,"../internals/create-non-enumerable-property":37,"../internals/create-property-descriptor":38,"../internals/descriptors":42,"../internals/export":49,"../internals/global":59,"../internals/has":60,"../internals/inherit-if-required":67,"../internals/internal-state":70,"../internals/is-object":74,"../internals/object-create":90,"../internals/object-define-property":92,"../internals/object-get-own-property-descriptor":93,"../internals/object-get-own-property-names":95,"../internals/object-set-prototype-of":101,"../internals/set-species":116,"../internals/to-index":131,"../internals/to-length":134,"../internals/to-offset":136,"../internals/to-primitive":138,"../internals/typed-array-constructors-require-wrappers":141,"../internals/typed-array-from":142}],141:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/fails"),i=e("../internals/check-correctness-of-iteration"),a=e("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS,s=n.ArrayBuffer,l=n.Int8Array;t.exports=!a||!o(function(){l(1)})||!o(function(){new l(-1)})||!i(function(e){new l,new l(null),new l(1.5),new l(e)},!0)||o(function(){return 1!==new l(new s(2),1,void 0).length})},{"../internals/array-buffer-view-core":12,"../internals/check-correctness-of-iteration":27,"../internals/fails":50,"../internals/global":59}],142:[function(e,t,r){var p=e("../internals/to-object"),y=e("../internals/to-length"),m=e("../internals/get-iterator-method"),g=e("../internals/is-array-iterator-method"),v=e("../internals/function-bind-context"),b=e("../internals/array-buffer-view-core").aTypedArrayConstructor;t.exports=function(e,t,r){var n,o,i,a,s,l,u=p(e),c=arguments.length,d=1<c?t:void 0,f=void 0!==d,h=m(u);if(null!=h&&!g(h))for(l=(s=h.call(u)).next,u=[];!(a=l.call(s)).done;)u.push(a.value);for(f&&2<c&&(d=v(d,r,2)),o=y(u.length),i=new(b(this))(o),n=0;n<o;n++)i[n]=f?d(u[n],n):u[n];return i}},{"../internals/array-buffer-view-core":12,"../internals/function-bind-context":54,"../internals/get-iterator-method":57,"../internals/is-array-iterator-method":71,"../internals/to-length":134,"../internals/to-object":135}],143:[function(e,t,r){var n=0,o=Math.random();t.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+o).toString(36)}},{}],144:[function(e,t,r){var n=e("../internals/native-symbol");t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},{"../internals/native-symbol":83}],145:[function(e,t,r){var n=e("../internals/well-known-symbol");r.f=n},{"../internals/well-known-symbol":146}],146:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/shared"),i=e("../internals/has"),a=e("../internals/uid"),s=e("../internals/native-symbol"),l=e("../internals/use-symbol-as-uid"),u=o("wks"),c=n.Symbol,d=l?c:c&&c.withoutSetter||a;t.exports=function(e){return i(u,e)||(s&&i(c,e)?u[e]=c[e]:u[e]=d("Symbol."+e)),u[e]}},{"../internals/global":59,"../internals/has":60,"../internals/native-symbol":83,"../internals/shared":120,"../internals/uid":143,"../internals/use-symbol-as-uid":144}],147:[function(e,t,r){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},{}],148:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/global"),i=e("../internals/array-buffer"),a=e("../internals/set-species"),s="ArrayBuffer",l=i[s];n({global:!0,forced:o[s]!==l},{ArrayBuffer:l}),a(s)},{"../internals/array-buffer":13,"../internals/export":49,"../internals/global":59,"../internals/set-species":116}],149:[function(e,t,r){"use strict";function u(e){if(!a(e))return!1;var t=e[y];return void 0!==t?!!t:i(e)}var n=e("../internals/export"),o=e("../internals/fails"),i=e("../internals/is-array"),a=e("../internals/is-object"),c=e("../internals/to-object"),d=e("../internals/to-length"),f=e("../internals/create-property"),h=e("../internals/array-species-create"),s=e("../internals/array-method-has-species-support"),l=e("../internals/well-known-symbol"),p=e("../internals/engine-v8-version"),y=l("isConcatSpreadable"),m=9007199254740991,g="Maximum allowed index exceeded",v=51<=p||!o(function(){var e=[];return e[y]=!1,e.concat()[0]!==e}),b=s("concat");n({target:"Array",proto:!0,forced:!v||!b},{concat:function(e){var t,r,n,o,i,a=c(this),s=h(a,0),l=0;for(t=-1,n=arguments.length;t<n;t++)if(u(i=-1===t?a:arguments[t])){if(o=d(i.length),m<l+o)throw TypeError(g);for(r=0;r<o;r++,l++)r in i&&f(s,l,i[r])}else{if(m<=l)throw TypeError(g);f(s,l++,i)}return s.length=l,s}})},{"../internals/array-method-has-species-support":21,"../internals/array-species-create":25,"../internals/create-property":39,"../internals/engine-v8-version":47,"../internals/export":49,"../internals/fails":50,"../internals/is-array":72,"../internals/is-object":74,"../internals/to-length":134,"../internals/to-object":135,"../internals/well-known-symbol":146}],150:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-iteration").every,i=e("../internals/array-method-is-strict"),a=e("../internals/array-method-uses-to-length"),s=i("every"),l=a("every");n({target:"Array",proto:!0,forced:!s||!l},{every:function(e,t){return o(this,e,1<arguments.length?t:void 0)}})},{"../internals/array-iteration":19,"../internals/array-method-is-strict":22,"../internals/array-method-uses-to-length":23,"../internals/export":49}],151:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/array-fill"),i=e("../internals/add-to-unscopables");n({target:"Array",proto:!0},{fill:o}),i("fill")},{"../internals/add-to-unscopables":7,"../internals/array-fill":15,"../internals/export":49}],152:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-iteration").filter,i=e("../internals/array-method-has-species-support"),a=e("../internals/array-method-uses-to-length"),s=i("filter"),l=a("filter");n({target:"Array",proto:!0,forced:!s||!l},{filter:function(e,t){return o(this,e,1<arguments.length?t:void 0)}})},{"../internals/array-iteration":19,"../internals/array-method-has-species-support":21,"../internals/array-method-uses-to-length":23,"../internals/export":49}],153:[function(e,t,r){"use strict";var n=e("../internals/export"),i=e("../internals/flatten-into-array"),a=e("../internals/to-object"),s=e("../internals/to-length"),l=e("../internals/a-function"),u=e("../internals/array-species-create");n({target:"Array",proto:!0},{flatMap:function(e,t){var r,n=a(this),o=s(n.length);return l(e),(r=u(n,0)).length=i(r,n,n,o,0,1,e,1<arguments.length?t:void 0),r}})},{"../internals/a-function":5,"../internals/array-species-create":25,"../internals/export":49,"../internals/flatten-into-array":52,"../internals/to-length":134,"../internals/to-object":135}],154:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-for-each");n({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},{"../internals/array-for-each":16,"../internals/export":49}],155:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/array-from");n({target:"Array",stat:!0,forced:!e("../internals/check-correctness-of-iteration")(function(e){Array.from(e)})},{from:o})},{"../internals/array-from":17,"../internals/check-correctness-of-iteration":27,"../internals/export":49}],156:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-includes").includes,i=e("../internals/add-to-unscopables");n({target:"Array",proto:!0,forced:!e("../internals/array-method-uses-to-length")("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e,t){return o(this,e,1<arguments.length?t:void 0)}}),i("includes")},{"../internals/add-to-unscopables":7,"../internals/array-includes":18,"../internals/array-method-uses-to-length":23,"../internals/export":49}],157:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-includes").indexOf,i=e("../internals/array-method-is-strict"),a=e("../internals/array-method-uses-to-length"),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,u=i("indexOf"),c=a("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:l||!u||!c},{indexOf:function(e,t){return l?s.apply(this,arguments)||0:o(this,e,1<arguments.length?t:void 0)}})},{"../internals/array-includes":18,"../internals/array-method-is-strict":22,"../internals/array-method-uses-to-length":23,"../internals/export":49}],158:[function(e,t,r){"use strict";var n=e("../internals/to-indexed-object"),o=e("../internals/add-to-unscopables"),i=e("../internals/iterators"),a=e("../internals/internal-state"),s=e("../internals/define-iterator"),l="Array Iterator",u=a.set,c=a.getterFor(l);t.exports=s(Array,"Array",function(e,t){u(this,{type:l,target:n(e),index:0,kind:t})},function(){var e=c(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?{value:e.target=void 0,done:!0}:"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}},"values"),i.Arguments=i.Array,o("keys"),o("values"),o("entries")},{"../internals/add-to-unscopables":7,"../internals/define-iterator":40,"../internals/internal-state":70,"../internals/iterators":79,"../internals/to-indexed-object":132}],159:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/indexed-object"),i=e("../internals/to-indexed-object"),a=e("../internals/array-method-is-strict"),s=[].join,l=o!=Object,u=a("join",",");n({target:"Array",proto:!0,forced:l||!u},{join:function(e){return s.call(i(this),void 0===e?",":e)}})},{"../internals/array-method-is-strict":22,"../internals/export":49,"../internals/indexed-object":66,"../internals/to-indexed-object":132}],160:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/array-last-index-of");n({target:"Array",proto:!0,forced:o!==[].lastIndexOf},{lastIndexOf:o})},{"../internals/array-last-index-of":20,"../internals/export":49}],161:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-iteration").map,i=e("../internals/array-method-has-species-support"),a=e("../internals/array-method-uses-to-length"),s=i("map"),l=a("map");n({target:"Array",proto:!0,forced:!s||!l},{map:function(e,t){return o(this,e,1<arguments.length?t:void 0)}})},{"../internals/array-iteration":19,"../internals/array-method-has-species-support":21,"../internals/array-method-uses-to-length":23,"../internals/export":49}],162:[function(e,t,r){"use strict";var n=e("../internals/export"),u=e("../internals/is-object"),c=e("../internals/is-array"),d=e("../internals/to-absolute-index"),f=e("../internals/to-length"),h=e("../internals/to-indexed-object"),p=e("../internals/create-property"),o=e("../internals/well-known-symbol"),i=e("../internals/array-method-has-species-support"),a=e("../internals/array-method-uses-to-length"),s=i("slice"),l=a("slice",{ACCESSORS:!0,0:0,1:2}),y=o("species"),m=[].slice,g=Math.max;n({target:"Array",proto:!0,forced:!s||!l},{slice:function(e,t){var r,n,o,i=h(this),a=f(i.length),s=d(e,a),l=d(void 0===t?a:t,a);if(c(i)&&("function"!=typeof(r=i.constructor)||r!==Array&&!c(r.prototype)?u(r)&&null===(r=r[y])&&(r=void 0):r=void 0,r===Array||void 0===r))return m.call(i,s,l);for(n=new(void 0===r?Array:r)(g(l-s,0)),o=0;s<l;s++,o++)s in i&&p(n,o,i[s]);return n.length=o,n}})},{"../internals/array-method-has-species-support":21,"../internals/array-method-uses-to-length":23,"../internals/create-property":39,"../internals/export":49,"../internals/is-array":72,"../internals/is-object":74,"../internals/to-absolute-index":130,"../internals/to-indexed-object":132,"../internals/to-length":134,"../internals/well-known-symbol":146}],163:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/array-iteration").some,i=e("../internals/array-method-is-strict"),a=e("../internals/array-method-uses-to-length"),s=i("some"),l=a("some");n({target:"Array",proto:!0,forced:!s||!l},{some:function(e,t){return o(this,e,1<arguments.length?t:void 0)}})},{"../internals/array-iteration":19,"../internals/array-method-is-strict":22,"../internals/array-method-uses-to-length":23,"../internals/export":49}],164:[function(e,t,r){"use strict";var n=e("../internals/export"),f=e("../internals/to-absolute-index"),h=e("../internals/to-integer"),p=e("../internals/to-length"),y=e("../internals/to-object"),m=e("../internals/array-species-create"),g=e("../internals/create-property"),o=e("../internals/array-method-has-species-support"),i=e("../internals/array-method-uses-to-length"),a=o("splice"),s=i("splice",{ACCESSORS:!0,0:0,1:2}),v=Math.max,b=Math.min;n({target:"Array",proto:!0,forced:!a||!s},{splice:function(e,t){var r,n,o,i,a,s,l=y(this),u=p(l.length),c=f(e,u),d=arguments.length;if(0===d?r=n=0:n=1===d?(r=0,u-c):(r=d-2,b(v(h(t),0),u-c)),9007199254740991<u+r-n)throw TypeError("Maximum allowed length exceeded");for(o=m(l,n),i=0;i<n;i++)(a=c+i)in l&&g(o,i,l[a]);if(r<(o.length=n)){for(i=c;i<u-n;i++)s=i+r,(a=i+n)in l?l[s]=l[a]:delete l[s];for(i=u;u-n+r<i;i--)delete l[i-1]}else if(n<r)for(i=u-n;c<i;i--)s=i+r-1,(a=i+n-1)in l?l[s]=l[a]:delete l[s];for(i=0;i<r;i++)l[i+c]=arguments[i+2];return l.length=u-n+r,o}})},{"../internals/array-method-has-species-support":21,"../internals/array-method-uses-to-length":23,"../internals/array-species-create":25,"../internals/create-property":39,"../internals/export":49,"../internals/to-absolute-index":130,"../internals/to-integer":133,"../internals/to-length":134,"../internals/to-object":135}],165:[function(e,t,r){e("../internals/add-to-unscopables")("flatMap")},{"../internals/add-to-unscopables":7}],166:[function(e,t,r){var n=e("../internals/descriptors"),o=e("../internals/object-define-property").f,i=Function.prototype,a=i.toString,s=/^\s*function ([^ (]*)/;!n||"name"in i||o(i,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(e){return""}}})},{"../internals/descriptors":42,"../internals/object-define-property":92}],167:[function(e,t,r){"use strict";var n=e("../internals/collection"),o=e("../internals/collection-strong");t.exports=n("Map",function(t){return function(e){return t(this,arguments.length?e:void 0)}},o)},{"../internals/collection":31,"../internals/collection-strong":30}],168:[function(e,t,r){var n=e("../internals/export"),o=Math.hypot,l=Math.abs,u=Math.sqrt;n({target:"Math",stat:!0,forced:!!o&&o(1/0,NaN)!==1/0},{hypot:function(e,t){for(var r,n,o=0,i=0,a=arguments.length,s=0;i<a;)s<(r=l(arguments[i++]))?(o=o*(n=s/r)*n+1,s=r):o+=0<r?(n=r/s)*n:r;return s===1/0?1/0:s*u(o)}})},{"../internals/export":49}],169:[function(e,t,r){e("../internals/export")({target:"Math",stat:!0},{sign:e("../internals/math-sign")})},{"../internals/export":49,"../internals/math-sign":80}],170:[function(e,t,r){"use strict";function n(e){var t,r,n,o,i,a,s,l,u=d(e,!1);if("string"==typeof u&&2<u.length)if(43===(t=(u=g(u)).charCodeAt(0))||45===t){if(88===(r=u.charCodeAt(2))||120===r)return NaN}else if(48===t){switch(u.charCodeAt(1)){case 66:case 98:n=2,o=49;break;case 79:case 111:n=8,o=55;break;default:return+u}for(a=(i=u.slice(2)).length,s=0;s<a;s++)if((l=i.charCodeAt(s))<48||o<l)return NaN;return parseInt(i,n)}return+u}var o=e("../internals/descriptors"),i=e("../internals/global"),a=e("../internals/is-forced"),s=e("../internals/redefine"),l=e("../internals/has"),u=e("../internals/classof-raw"),c=e("../internals/inherit-if-required"),d=e("../internals/to-primitive"),f=e("../internals/fails"),h=e("../internals/object-create"),p=e("../internals/object-get-own-property-names").f,y=e("../internals/object-get-own-property-descriptor").f,m=e("../internals/object-define-property").f,g=e("../internals/string-trim").trim,v="Number",b=i[v],_=b.prototype,x=u(h(_))==v;if(a(v,!b(" 0o1")||!b("0b1")||b("+0x1"))){for(var w,j=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof j&&(x?f(function(){_.valueOf.call(r)}):u(r)!=v)?c(new b(n(t)),r,j):n(t)},S=o?p(b):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),M=0;S.length>M;M++)l(b,w=S[M])&&!l(j,w)&&m(j,w,y(b,w));(j.prototype=_).constructor=j,s(i,v,j)}},{"../internals/classof-raw":28,"../internals/descriptors":42,"../internals/fails":50,"../internals/global":59,"../internals/has":60,"../internals/inherit-if-required":67,"../internals/is-forced":73,"../internals/object-create":90,"../internals/object-define-property":92,"../internals/object-get-own-property-descriptor":93,"../internals/object-get-own-property-names":95,"../internals/redefine":108,"../internals/string-trim":127,"../internals/to-primitive":138}],171:[function(e,t,r){e("../internals/export")({target:"Number",stat:!0},{isFinite:e("../internals/number-is-finite")})},{"../internals/export":49,"../internals/number-is-finite":88}],172:[function(e,t,r){"use strict";var n=e("../internals/export"),h=e("../internals/to-integer"),p=e("../internals/this-number-value"),y=e("../internals/string-repeat"),o=e("../internals/fails"),i=1..toFixed,m=Math.floor,g=function(e,t,r){return 0===t?r:t%2==1?g(e,t-1,r*e):g(e*e,t/2,r)};n({target:"Number",proto:!0,forced:i&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!o(function(){i.call({})})},{toFixed:function(e){function t(e,t){for(var r=-1,n=t;++r<6;)n+=e*c[r],c[r]=n%1e7,n=m(n/1e7)}function r(e){for(var t=6,r=0;0<=--t;)r+=c[t],c[t]=m(r/e),r=r%e*1e7}function n(){for(var e=6,t="";0<=--e;)if(""!==t||0===e||0!==c[e]){var r=String(c[e]);t=""===t?r:t+y.call("0",7-r.length)+r}return t}var o,i,a,s,l=p(this),u=h(e),c=[0,0,0,0,0,0],d="",f="0";if(u<0||20<u)throw RangeError("Incorrect fraction digits");if(l!=l)return"NaN";if(l<=-1e21||1e21<=l)return String(l);if(l<0&&(d="-",l=-l),1e-21<l)if(i=(o=function(e){for(var t=0,r=e;4096<=r;)t+=12,r/=4096;for(;2<=r;)t+=1,r/=2;return t}(l*g(2,69,1))-69)<0?l*g(2,-o,1):l/g(2,o,1),i*=4503599627370496,0<(o=52-o)){for(t(0,i),a=u;7<=a;)t(1e7,0),a-=7;for(t(g(10,a,1),0),a=o-1;23<=a;)r(1<<23),a-=23;r(1<<a),t(1,1),r(2),f=n()}else t(0,i),t(1<<-o,0),f=n()+y.call("0",u);return f=0<u?d+((s=f.length)<=u?"0."+y.call("0",u-s)+f:f.slice(0,s-u)+"."+f.slice(s-u)):d+f}})},{"../internals/export":49,"../internals/fails":50,"../internals/string-repeat":125,"../internals/this-number-value":129,"../internals/to-integer":133}],173:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/object-assign");n({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},{"../internals/export":49,"../internals/object-assign":89}],174:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/fails"),i=e("../internals/object-get-own-property-names-external").f;n({target:"Object",stat:!0,forced:o(function(){return!Object.getOwnPropertyNames(1)})},{getOwnPropertyNames:i})},{"../internals/export":49,"../internals/fails":50,"../internals/object-get-own-property-names-external":94}],175:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/fails"),i=e("../internals/to-object"),a=e("../internals/object-get-prototype-of"),s=e("../internals/correct-prototype-getter");n({target:"Object",stat:!0,forced:o(function(){a(1)}),sham:!s},{getPrototypeOf:function(e){return a(i(e))}})},{"../internals/correct-prototype-getter":34,"../internals/export":49,"../internals/fails":50,"../internals/object-get-prototype-of":97,"../internals/to-object":135}],176:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/to-object"),i=e("../internals/object-keys");n({target:"Object",stat:!0,forced:e("../internals/fails")(function(){i(1)})},{keys:function(e){return i(o(e))}})},{"../internals/export":49,"../internals/fails":50,"../internals/object-keys":99,"../internals/to-object":135}],177:[function(e,t,r){var n=e("../internals/to-string-tag-support"),o=e("../internals/redefine"),i=e("../internals/object-to-string");n||o(Object.prototype,"toString",i,{unsafe:!0})},{"../internals/object-to-string":102,"../internals/redefine":108,"../internals/to-string-tag-support":139}],178:[function(e,t,r){"use strict";function y(e){var t;return!(!x(e)||"function"!=typeof(t=e.then))&&t}function i(d,f,h){if(!f.notified){f.notified=!0;var p=f.reactions;L(function(){for(var e=f.value,t=1==f.state,r=0;p.length>r;){var n,o,i,a=p[r++],s=t?a.ok:a.fail,l=a.resolve,u=a.reject,c=a.domain;try{s?(t||(2===f.rejection&&oe(d,f),f.rejection=1),!0===s?n=e:(c&&c.enter(),n=s(e),c&&(c.exit(),i=!0)),n===a.promise?u(W("Promise-chain cycle")):(o=y(n))?o.call(n,l,u):l(n)):u(e)}catch(e){c&&!i&&c.exit(),u(e)}}f.reactions=[],f.notified=!1,h&&!f.rejection&&re(d,f)})}}function o(e,t,r){var n,o;J?((n=q.createEvent("Event")).promise=t,n.reason=r,n.initEvent(e,!1,!0),h.dispatchEvent(n)):n={promise:t,reason:r},(o=h["on"+e])?o(n):e===$&&A("Unhandled promise rejection",r)}function a(t,r,n,o){return function(e){t(r,n,e,o)}}function s(e,t,r,n){t.done||(t.done=!0,n&&(t=n),t.value=r,t.state=2,i(e,t,!0))}var n,l,u,c,d=e("../internals/export"),f=e("../internals/is-pure"),h=e("../internals/global"),p=e("../internals/get-built-in"),m=e("../internals/native-promise-constructor"),g=e("../internals/redefine"),v=e("../internals/redefine-all"),b=e("../internals/set-to-string-tag"),_=e("../internals/set-species"),x=e("../internals/is-object"),w=e("../internals/a-function"),j=e("../internals/an-instance"),S=e("../internals/classof-raw"),M=e("../internals/inspect-source"),E=e("../internals/iterate"),T=e("../internals/check-correctness-of-iteration"),O=e("../internals/species-constructor"),C=e("../internals/task").set,L=e("../internals/microtask"),P=e("../internals/promise-resolve"),A=e("../internals/host-report-errors"),k=e("../internals/new-promise-capability"),R=e("../internals/perform"),D=e("../internals/internal-state"),I=e("../internals/is-forced"),U=e("../internals/well-known-symbol"),N=e("../internals/engine-v8-version"),F=U("species"),B="Promise",G=D.get,V=D.set,z=D.getterFor(B),H=m,W=h.TypeError,q=h.document,X=h.process,Y=p("fetch"),Z=k.f,Q=Z,K="process"==S(X),J=!!(q&&q.createEvent&&h.dispatchEvent),$="unhandledrejection",ee=I(B,function(){if(!(M(H)!==String(H))){if(66===N)return!0;if(!K&&"function"!=typeof PromiseRejectionEvent)return!0}if(f&&!H.prototype.finally)return!0;if(51<=N&&/native code/.test(H))return!1;function e(e){e(function(){},function(){})}var t=H.resolve(1);return(t.constructor={})[F]=e,!(t.then(function(){})instanceof e)}),te=ee||!T(function(e){H.all(e).catch(function(){})}),re=function(r,n){C.call(h,function(){var e,t=n.value;if(ne(n)&&(e=R(function(){K?X.emit("unhandledRejection",t,r):o($,r,t)}),n.rejection=K||ne(n)?2:1,e.error))throw e.value})},ne=function(e){return 1!==e.rejection&&!e.parent},oe=function(e,t){C.call(h,function(){K?X.emit("rejectionHandled",e):o("rejectionhandled",e,t.value)})},ie=function(r,n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(r===e)throw W("Promise can't be resolved itself");var o=y(e);o?L(function(){var t={done:!1};try{o.call(e,a(ie,r,t,n),a(s,r,t,n))}catch(e){s(r,t,e,n)}}):(n.value=e,n.state=1,i(r,n,!1))}catch(e){s(r,{done:!1},e,n)}}};ee&&(H=function(e){j(this,H,B),w(e),n.call(this);var t=G(this);try{e(a(ie,this,t),a(s,this,t))}catch(e){s(this,t,e)}},(n=function(){V(this,{type:B,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=v(H.prototype,{then:function(e,t){var r=z(this),n=Z(O(this,H));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=K?X.domain:void 0,r.parent=!0,r.reactions.push(n),0!=r.state&&i(this,r,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),l=function(){var e=new n,t=G(e);this.promise=e,this.resolve=a(ie,e,t),this.reject=a(s,e,t)},k.f=Z=function(e){return e===H||e===u?new l(e):Q(e)},f||"function"!=typeof m||(c=m.prototype.then,g(m.prototype,"then",function(e,t){var r=this;return new H(function(e,t){c.call(r,e,t)}).then(e,t)},{unsafe:!0}),"function"==typeof Y&&d({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return P(H,Y.apply(h,arguments))}}))),d({global:!0,wrap:!0,forced:ee},{Promise:H}),b(H,B,!1,!0),_(B),u=p(B),d({target:B,stat:!0,forced:ee},{reject:function(e){var t=Z(this);return t.reject.call(void 0,e),t.promise}}),d({target:B,stat:!0,forced:f||ee},{resolve:function(e){return P(f&&this===u?H:this,e)}}),d({target:B,stat:!0,forced:te},{all:function(e){var s=this,t=Z(s),l=t.resolve,u=t.reject,r=R(function(){var n=w(s.resolve),o=[],i=0,a=1;E(e,function(e){var t=i++,r=!1;o.push(void 0),a++,n.call(s,e).then(function(e){r||(r=!0,o[t]=e,--a||l(o))},u)}),--a||l(o)});return r.error&&u(r.value),t.promise},race:function(e){var r=this,n=Z(r),o=n.reject,t=R(function(){var t=w(r.resolve);E(e,function(e){t.call(r,e).then(n.resolve,o)})});return t.error&&o(t.value),n.promise}})},{"../internals/a-function":5,"../internals/an-instance":9,"../internals/check-correctness-of-iteration":27,"../internals/classof-raw":28,"../internals/engine-v8-version":47,"../internals/export":49,"../internals/get-built-in":56,"../internals/global":59,"../internals/host-report-errors":62,"../internals/inspect-source":68,"../internals/internal-state":70,"../internals/is-forced":73,"../internals/is-object":74,"../internals/is-pure":75,"../internals/iterate":77,"../internals/microtask":81,"../internals/native-promise-constructor":82,"../internals/new-promise-capability":86,"../internals/perform":105,"../internals/promise-resolve":106,"../internals/redefine":108,"../internals/redefine-all":107,"../internals/set-species":116,"../internals/set-to-string-tag":117,"../internals/species-constructor":121,"../internals/task":128,"../internals/well-known-symbol":146}],179:[function(e,t,r){var n=e("../internals/export"),o=e("../internals/get-built-in"),l=e("../internals/a-function"),u=e("../internals/an-object"),c=e("../internals/is-object"),d=e("../internals/object-create"),f=e("../internals/function-bind"),i=e("../internals/fails"),h=o("Reflect","construct"),p=i(function(){function e(){}return!(h(function(){},[],e)instanceof e)}),y=!i(function(){h(function(){})}),a=p||y;n({target:"Reflect",stat:!0,forced:a,sham:a},{construct:function(e,t,r){l(e),u(t);var n=arguments.length<3?e:l(r);if(y&&!p)return h(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var o=[null];return o.push.apply(o,t),new(f.apply(e,o))}var i=n.prototype,a=d(c(i)?i:Object.prototype),s=Function.apply.call(e,a,t);return c(s)?s:a}})},{"../internals/a-function":5,"../internals/an-object":10,"../internals/export":49,"../internals/fails":50,"../internals/function-bind":55,"../internals/get-built-in":56,"../internals/is-object":74,"../internals/object-create":90}],180:[function(e,t,r){var n=e("../internals/descriptors"),o=e("../internals/global"),i=e("../internals/is-forced"),s=e("../internals/inherit-if-required"),a=e("../internals/object-define-property").f,l=e("../internals/object-get-own-property-names").f,u=e("../internals/is-regexp"),c=e("../internals/regexp-flags"),d=e("../internals/regexp-sticky-helpers"),f=e("../internals/redefine"),h=e("../internals/fails"),p=e("../internals/internal-state").set,y=e("../internals/set-species"),m=e("../internals/well-known-symbol")("match"),g=o.RegExp,v=g.prototype,b=/a/g,_=/a/g,x=new g(b)!==b,w=d.UNSUPPORTED_Y;if(n&&i("RegExp",!x||w||h(function(){return _[m]=!1,g(b)!=b||g(_)==_||"/a/i"!=g(b,"i")}))){function j(t){t in S||a(S,t,{configurable:!0,get:function(){return g[t]},set:function(e){g[t]=e}})}for(var S=function(e,t){var r,n=this instanceof S,o=u(e),i=void 0===t;if(!n&&o&&e.constructor===S&&i)return e;x?o&&!i&&(e=e.source):e instanceof S&&(i&&(t=c.call(e)),e=e.source),w&&(r=!!t&&-1<t.indexOf("y"))&&(t=t.replace(/y/g,""));var a=s(x?new g(e,t):g(e,t),n?this:v,S);return w&&r&&p(a,{sticky:r}),a},M=l(g),E=0;M.length>E;)j(M[E++]);(v.constructor=S).prototype=v,f(o,"RegExp",S)}y("RegExp")},{"../internals/descriptors":42,"../internals/fails":50,"../internals/global":59,"../internals/inherit-if-required":67,"../internals/internal-state":70,"../internals/is-forced":73,"../internals/is-regexp":76,"../internals/object-define-property":92,"../internals/object-get-own-property-names":95,"../internals/redefine":108,"../internals/regexp-flags":111,"../internals/regexp-sticky-helpers":112,"../internals/set-species":116,"../internals/well-known-symbol":146}],181:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/regexp-exec");n({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},{"../internals/export":49,"../internals/regexp-exec":110}],182:[function(e,t,r){"use strict";var n=e("../internals/redefine"),o=e("../internals/an-object"),i=e("../internals/fails"),a=e("../internals/regexp-flags"),s="toString",l=RegExp.prototype,u=l[s],c=i(function(){return"/a/b"!=u.call({source:"a",flags:"b"})}),d=u.name!=s;(c||d)&&n(RegExp.prototype,s,function(){var e=o(this),t=String(e.source),r=e.flags;return"/"+t+"/"+String(void 0===r&&e instanceof RegExp&&!("flags"in l)?a.call(e):r)},{unsafe:!0})},{"../internals/an-object":10,"../internals/fails":50,"../internals/redefine":108,"../internals/regexp-flags":111}],183:[function(e,t,r){"use strict";var n=e("../internals/collection"),o=e("../internals/collection-strong");t.exports=n("Set",function(t){return function(e){return t(this,arguments.length?e:void 0)}},o)},{"../internals/collection":31,"../internals/collection-strong":30}],184:[function(e,t,r){"use strict";var n,o=e("../internals/export"),i=e("../internals/object-get-own-property-descriptor").f,s=e("../internals/to-length"),l=e("../internals/not-a-regexp"),u=e("../internals/require-object-coercible"),a=e("../internals/correct-is-regexp-logic"),c=e("../internals/is-pure"),d="".endsWith,f=Math.min,h=a("endsWith");o({target:"String",proto:!0,forced:!!(c||h||(!(n=i(String.prototype,"endsWith"))||n.writable))&&!h},{endsWith:function(e,t){var r=String(u(this));l(e);var n=1<arguments.length?t:void 0,o=s(r.length),i=void 0===n?o:f(s(n),o),a=String(e);return d?d.call(r,a,i):r.slice(i-a.length,i)===a}})},{"../internals/correct-is-regexp-logic":33,"../internals/export":49,"../internals/is-pure":75,"../internals/not-a-regexp":87,"../internals/object-get-own-property-descriptor":93,"../internals/require-object-coercible":113,"../internals/to-length":134}],185:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/not-a-regexp"),i=e("../internals/require-object-coercible");n({target:"String",proto:!0,forced:!e("../internals/correct-is-regexp-logic")("includes")},{includes:function(e,t){return!!~String(i(this)).indexOf(o(e),1<arguments.length?t:void 0)}})},{"../internals/correct-is-regexp-logic":33,"../internals/export":49,"../internals/not-a-regexp":87,"../internals/require-object-coercible":113}],186:[function(e,t,r){"use strict";var o=e("../internals/string-multibyte").charAt,n=e("../internals/internal-state"),i=e("../internals/define-iterator"),a="String Iterator",s=n.set,l=n.getterFor(a);i(String,"String",function(e){s(this,{type:a,string:String(e),index:0})},function(){var e,t=l(this),r=t.string,n=t.index;return n>=r.length?{value:void 0,done:!0}:(e=o(r,n),t.index+=e.length,{value:e,done:!1})})},{"../internals/define-iterator":40,"../internals/internal-state":70,"../internals/string-multibyte":123}],187:[function(e,t,r){"use strict";var n=e("../internals/fix-regexp-well-known-symbol-logic"),d=e("../internals/an-object"),f=e("../internals/to-length"),o=e("../internals/require-object-coercible"),h=e("../internals/advance-string-index"),p=e("../internals/regexp-exec-abstract");n("match",1,function(n,u,c){return[function(e){var t=o(this),r=null==e?void 0:e[n];return void 0!==r?r.call(e,t):new RegExp(e)[n](String(t))},function(e){var t=c(u,e,this);if(t.done)return t.value;var r=d(e),n=String(this);if(!r.global)return p(r,n);for(var o,i=r.unicode,a=[],s=r.lastIndex=0;null!==(o=p(r,n));){var l=String(o[0]);""===(a[s]=l)&&(r.lastIndex=h(n,f(r.lastIndex),i)),s++}return 0===s?null:a}]})},{"../internals/advance-string-index":8,"../internals/an-object":10,"../internals/fix-regexp-well-known-symbol-logic":51,"../internals/regexp-exec-abstract":109,"../internals/require-object-coercible":113,"../internals/to-length":134}],188:[function(e,t,r){e("../internals/export")({target:"String",proto:!0},{repeat:e("../internals/string-repeat")})},{"../internals/export":49,"../internals/string-repeat":125}],189:[function(e,t,r){"use strict";var n=e("../internals/fix-regexp-well-known-symbol-logic"),T=e("../internals/an-object"),f=e("../internals/to-object"),O=e("../internals/to-length"),C=e("../internals/to-integer"),i=e("../internals/require-object-coercible"),L=e("../internals/advance-string-index"),P=e("../internals/regexp-exec-abstract"),A=Math.max,k=Math.min,h=Math.floor,p=/\$([$&'`]|\d\d?|<[^>]*>)/g,y=/\$([$&'`]|\d\d?)/g;n("replace",2,function(o,x,w,e){var j=e.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,S=e.REPLACE_KEEPS_$0,M=j?"$":"$0";return[function(e,t){var r=i(this),n=null==e?void 0:e[o];return void 0!==n?n.call(e,r,t):x.call(String(r),e,t)},function(e,t){if(!j&&S||"string"==typeof t&&-1===t.indexOf(M)){var r=w(x,e,this,t);if(r.done)return r.value}var n=T(e),o=String(this),i="function"==typeof t;i||(t=String(t));var a=n.global;if(a){var s=n.unicode;n.lastIndex=0}for(var l=[];;){var u=P(n,o);if(null===u)break;if(l.push(u),!a)break;""===String(u[0])&&(n.lastIndex=L(o,O(n.lastIndex),s))}for(var c,d="",f=0,h=0;h<l.length;h++){u=l[h];for(var p=String(u[0]),y=A(k(C(u.index),o.length),0),m=[],g=1;g<u.length;g++)m.push(void 0===(c=u[g])?c:String(c));var v=u.groups;if(i){var b=[p].concat(m,y,o);void 0!==v&&b.push(v);var _=String(t.apply(void 0,b))}else _=E(p,o,y,m,v,t);f<=y&&(d+=o.slice(f,y)+_,f=y+p.length)}return d+o.slice(f)}];function E(i,a,s,l,u,e){var c=s+i.length,d=l.length,t=y;return void 0!==u&&(u=f(u),t=p),x.call(e,t,function(e,t){var r;switch(t.charAt(0)){case"$":return"$";case"&":return i;case"`":return a.slice(0,s);case"'":return a.slice(c);case"<":r=u[t.slice(1,-1)];break;default:var n=+t;if(0==n)return e;if(d<n){var o=h(n/10);return 0===o?e:o<=d?void 0===l[o-1]?t.charAt(1):l[o-1]+t.charAt(1):e}r=l[n-1]}return void 0===r?"":r})}})},{"../internals/advance-string-index":8,"../internals/an-object":10,"../internals/fix-regexp-well-known-symbol-logic":51,"../internals/regexp-exec-abstract":109,"../internals/require-object-coercible":113,"../internals/to-integer":133,"../internals/to-length":134,"../internals/to-object":135}],190:[function(e,t,r){"use strict";var n=e("../internals/fix-regexp-well-known-symbol-logic"),l=e("../internals/an-object"),o=e("../internals/require-object-coercible"),u=e("../internals/same-value"),c=e("../internals/regexp-exec-abstract");n("search",1,function(n,a,s){return[function(e){var t=o(this),r=null==e?void 0:e[n];return void 0!==r?r.call(e,t):new RegExp(e)[n](String(t))},function(e){var t=s(a,e,this);if(t.done)return t.value;var r=l(e),n=String(this),o=r.lastIndex;u(o,0)||(r.lastIndex=0);var i=c(r,n);return u(r.lastIndex,o)||(r.lastIndex=o),null===i?-1:i.index}]})},{"../internals/an-object":10,"../internals/fix-regexp-well-known-symbol-logic":51,"../internals/regexp-exec-abstract":109,"../internals/require-object-coercible":113,"../internals/same-value":114}],191:[function(e,t,r){"use strict";var n=e("../internals/fix-regexp-well-known-symbol-logic"),d=e("../internals/is-regexp"),b=e("../internals/an-object"),f=e("../internals/require-object-coercible"),_=e("../internals/species-constructor"),x=e("../internals/advance-string-index"),w=e("../internals/to-length"),j=e("../internals/regexp-exec-abstract"),h=e("../internals/regexp-exec"),o=e("../internals/fails"),p=[].push,S=Math.min,M=4294967295,E=!o(function(){return!RegExp(M,"y")});n("split",2,function(o,m,g){var v;return v="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||1<".".split(/()()/).length||"".split(/.?/).length?function(e,t){var r=String(f(this)),n=void 0===t?M:t>>>0;if(0==n)return[];if(void 0===e)return[r];if(!d(e))return m.call(r,e,n);for(var o,i,a,s=[],l=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),u=0,c=new RegExp(e.source,l+"g");(o=h.call(c,r))&&!(u<(i=c.lastIndex)&&(s.push(r.slice(u,o.index)),1<o.length&&o.index<r.length&&p.apply(s,o.slice(1)),a=o[0].length,u=i,s.length>=n));)c.lastIndex===o.index&&c.lastIndex++;return u===r.length?!a&&c.test("")||s.push(""):s.push(r.slice(u)),s.length>n?s.slice(0,n):s}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:m.call(this,e,t)}:m,[function(e,t){var r=f(this),n=null==e?void 0:e[o];return void 0!==n?n.call(e,r,t):v.call(String(r),e,t)},function(e,t){var r=g(v,e,this,t,v!==m);if(r.done)return r.value;var n=b(e),o=String(this),i=_(n,RegExp),a=n.unicode,s=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(E?"y":"g"),l=new i(E?n:"^(?:"+n.source+")",s),u=void 0===t?M:t>>>0;if(0==u)return[];if(0===o.length)return null===j(l,o)?[o]:[];for(var c=0,d=0,f=[];d<o.length;){l.lastIndex=E?d:0;var h,p=j(l,E?o:o.slice(d));if(null===p||(h=S(w(l.lastIndex+(E?0:d)),o.length))===c)d=x(o,d,a);else{if(f.push(o.slice(c,d)),f.length===u)return f;for(var y=1;y<=p.length-1;y++)if(f.push(p[y]),f.length===u)return f;d=c=h}}return f.push(o.slice(c)),f}]},!E)},{"../internals/advance-string-index":8,"../internals/an-object":10,"../internals/fails":50,"../internals/fix-regexp-well-known-symbol-logic":51,"../internals/is-regexp":76,"../internals/regexp-exec":110,"../internals/regexp-exec-abstract":109,"../internals/require-object-coercible":113,"../internals/species-constructor":121,"../internals/to-length":134}],192:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/create-html");n({target:"String",proto:!0,forced:e("../internals/string-html-forced")("sub")},{sub:function(){return o(this,"sub","","")}})},{"../internals/create-html":35,"../internals/export":49,"../internals/string-html-forced":122}],193:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/string-trim").trim;n({target:"String",proto:!0,forced:e("../internals/string-trim-forced")("trim")},{trim:function(){return o(this)}})},{"../internals/export":49,"../internals/string-trim":127,"../internals/string-trim-forced":126}],194:[function(e,t,r){"use strict";var n=e("../internals/export"),o=e("../internals/descriptors"),i=e("../internals/global"),a=e("../internals/has"),s=e("../internals/is-object"),l=e("../internals/object-define-property").f,u=e("../internals/copy-constructor-properties"),c=i.Symbol;if(o&&"function"==typeof c&&(!("description"in c.prototype)||void 0!==c().description)){var d={},f=function(e){var t=arguments.length<1||void 0===e?void 0:String(e),r=this instanceof f?new c(t):void 0===t?c():c(t);return""===t&&(d[r]=!0),r};u(f,c);var h=f.prototype=c.prototype;h.constructor=f;var p=h.toString,y="Symbol(test)"==String(c("test")),m=/^Symbol\((.*)\)[^)]+$/;l(h,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=p.call(e);if(a(d,e))return"";var r=y?t.slice(7,-1):t.replace(m,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:f})}},{"../internals/copy-constructor-properties":32,"../internals/descriptors":42,"../internals/export":49,"../internals/global":59,"../internals/has":60,"../internals/is-object":74,"../internals/object-define-property":92}],195:[function(e,t,r){e("../internals/define-well-known-symbol")("iterator")},{"../internals/define-well-known-symbol":41}],196:[function(e,t,r){"use strict";function o(e,t){var r=re[e]=j(Q[W]);return X(r,{type:H,tag:e,description:t}),d||(r.description=t),r}function n(t,e){v(t);var r=_(e),n=S(r).concat(he(r));return V(n,function(e){d&&!fe.call(r,e)||de(t,e,r[e])}),t}function i(e,t){var r=_(e),n=x(t,!0);if(r!==Z||!y(re,n)||y(ne,n)){var o=J(r,n);return!o||!y(re,n)||y(r,z)&&r[z][n]||(o.enumerable=!0),o}}function a(e){var t=ee(_(e)),r=[];return V(t,function(e){y(re,e)||y(D,e)||r.push(e)}),r}var s=e("../internals/export"),l=e("../internals/global"),u=e("../internals/get-built-in"),c=e("../internals/is-pure"),d=e("../internals/descriptors"),f=e("../internals/native-symbol"),h=e("../internals/use-symbol-as-uid"),p=e("../internals/fails"),y=e("../internals/has"),m=e("../internals/is-array"),g=e("../internals/is-object"),v=e("../internals/an-object"),b=e("../internals/to-object"),_=e("../internals/to-indexed-object"),x=e("../internals/to-primitive"),w=e("../internals/create-property-descriptor"),j=e("../internals/object-create"),S=e("../internals/object-keys"),M=e("../internals/object-get-own-property-names"),E=e("../internals/object-get-own-property-names-external"),T=e("../internals/object-get-own-property-symbols"),O=e("../internals/object-get-own-property-descriptor"),C=e("../internals/object-define-property"),L=e("../internals/object-property-is-enumerable"),P=e("../internals/create-non-enumerable-property"),A=e("../internals/redefine"),k=e("../internals/shared"),R=e("../internals/shared-key"),D=e("../internals/hidden-keys"),I=e("../internals/uid"),U=e("../internals/well-known-symbol"),N=e("../internals/well-known-symbol-wrapped"),F=e("../internals/define-well-known-symbol"),B=e("../internals/set-to-string-tag"),G=e("../internals/internal-state"),V=e("../internals/array-iteration").forEach,z=R("hidden"),H="Symbol",W="prototype",q=U("toPrimitive"),X=G.set,Y=G.getterFor(H),Z=Object[W],Q=l.Symbol,K=u("JSON","stringify"),J=O.f,$=C.f,ee=E.f,te=L.f,re=k("symbols"),ne=k("op-symbols"),oe=k("string-to-symbol-registry"),ie=k("symbol-to-string-registry"),ae=k("wks"),se=l.QObject,le=!se||!se[W]||!se[W].findChild,ue=d&&p(function(){return 7!=j($({},"a",{get:function(){return $(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=J(Z,t);n&&delete Z[t],$(e,t,r),n&&e!==Z&&$(Z,t,n)}:$,ce=h?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof Q},de=function(e,t,r){e===Z&&de(ne,t,r),v(e);var n=x(t,!0);return v(r),y(re,n)?(r.enumerable?(y(e,z)&&e[z][n]&&(e[z][n]=!1),r=j(r,{enumerable:w(0,!1)})):(y(e,z)||$(e,z,w(1,{})),e[z][n]=!0),ue(e,n,r)):$(e,n,r)},fe=function(e){var t=x(e,!0),r=te.call(this,t);return!(this===Z&&y(re,t)&&!y(ne,t))&&(!(r||!y(this,t)||!y(re,t)||y(this,z)&&this[z][t])||r)},he=function(e){var t=e===Z,r=ee(t?ne:_(e)),n=[];return V(r,function(e){!y(re,e)||t&&!y(Z,e)||n.push(re[e])}),n};f||(A((Q=function(e){if(this instanceof Q)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==e?String(e):void 0,r=I(t),n=function(e){this===Z&&n.call(ne,e),y(this,z)&&y(this[z],r)&&(this[z][r]=!1),ue(this,r,w(1,e))};return d&&le&&ue(Z,r,{configurable:!0,set:n}),o(r,t)})[W],"toString",function(){return Y(this).tag}),A(Q,"withoutSetter",function(e){return o(I(e),e)}),L.f=fe,C.f=de,O.f=i,M.f=E.f=a,T.f=he,N.f=function(e){return o(U(e),e)},d&&($(Q[W],"description",{configurable:!0,get:function(){return Y(this).description}}),c||A(Z,"propertyIsEnumerable",fe,{unsafe:!0}))),s({global:!0,wrap:!0,forced:!f,sham:!f},{Symbol:Q}),V(S(ae),function(e){F(e)}),s({target:H,stat:!0,forced:!f},{for:function(e){var t=String(e);if(y(oe,t))return oe[t];var r=Q(t);return oe[t]=r,ie[r]=t,r},keyFor:function(e){if(!ce(e))throw TypeError(e+" is not a symbol");if(y(ie,e))return ie[e]},useSetter:function(){le=!0},useSimple:function(){le=!1}}),s({target:"Object",stat:!0,forced:!f,sham:!d},{create:function(e,t){return void 0===t?j(e):n(j(e),t)},defineProperty:de,defineProperties:n,getOwnPropertyDescriptor:i}),s({target:"Object",stat:!0,forced:!f},{getOwnPropertyNames:a,getOwnPropertySymbols:he}),s({target:"Object",stat:!0,forced:p(function(){T.f(1)})},{getOwnPropertySymbols:function(e){return T.f(b(e))}}),K&&s({target:"JSON",stat:!0,forced:!f||p(function(){var e=Q();return"[null]"!=K([e])||"{}"!=K({a:e})||"{}"!=K(Object(e))})},{stringify:function(e,t,r){for(var n,o=[e],i=1;i<arguments.length;)o.push(arguments[i++]);if((g(n=t)||void 0!==e)&&!ce(e))return m(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ce(t))return t}),o[1]=t,K.apply(null,o)}});Q[W][q]||P(Q[W],q,Q[W].valueOf),B(Q,H),D[z]=!0},{"../internals/an-object":10,"../internals/array-iteration":19,"../internals/create-non-enumerable-property":37,"../internals/create-property-descriptor":38,"../internals/define-well-known-symbol":41,"../internals/descriptors":42,"../internals/export":49,"../internals/fails":50,"../internals/get-built-in":56,"../internals/global":59,"../internals/has":60,"../internals/hidden-keys":61,"../internals/internal-state":70,"../internals/is-array":72,"../internals/is-object":74,"../internals/is-pure":75,"../internals/native-symbol":83,"../internals/object-create":90,"../internals/object-define-property":92,"../internals/object-get-own-property-descriptor":93,"../internals/object-get-own-property-names":95,"../internals/object-get-own-property-names-external":94,"../internals/object-get-own-property-symbols":96,"../internals/object-keys":99,"../internals/object-property-is-enumerable":100,"../internals/redefine":108,"../internals/set-to-string-tag":117,"../internals/shared":120,"../internals/shared-key":118,"../internals/to-indexed-object":132,"../internals/to-object":135,"../internals/to-primitive":138,"../internals/uid":143,"../internals/use-symbol-as-uid":144,"../internals/well-known-symbol":146,"../internals/well-known-symbol-wrapped":145}],197:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-copy-within"),i=n.aTypedArray;(0,n.exportTypedArrayMethod)("copyWithin",function(e,t,r){return o.call(i(this),e,t,2<arguments.length?r:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-copy-within":14}],198:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-iteration").every,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("every",function(e,t){return o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19}],199:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-fill"),i=n.aTypedArray;(0,n.exportTypedArrayMethod)("fill",function(e){return o.apply(i(this),arguments)})},{"../internals/array-buffer-view-core":12,"../internals/array-fill":15}],200:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),s=e("../internals/array-iteration").filter,l=e("../internals/species-constructor"),u=n.aTypedArray,c=n.aTypedArrayConstructor;(0,n.exportTypedArrayMethod)("filter",function(e,t){for(var r=s(u(this),e,1<arguments.length?t:void 0),n=l(this,this.constructor),o=0,i=r.length,a=new(c(n))(i);o<i;)a[o]=r[o++];return a})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19,"../internals/species-constructor":121}],201:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-iteration").findIndex,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("findIndex",function(e,t){return o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19}],202:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-iteration").find,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("find",function(e,t){return o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19}],203:[function(e,t,r){e("../internals/typed-array-constructor")("Float32",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],204:[function(e,t,r){e("../internals/typed-array-constructor")("Float64",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],205:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-iteration").forEach,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("forEach",function(e,t){o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19}],206:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-includes").includes,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("includes",function(e,t){return o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-includes":18}],207:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-includes").indexOf,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("indexOf",function(e,t){return o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-includes":18}],208:[function(e,t,r){e("../internals/typed-array-constructor")("Int16",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],209:[function(e,t,r){e("../internals/typed-array-constructor")("Int32",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],210:[function(e,t,r){"use strict";function n(){return u.call(f(this))}var o=e("../internals/global"),i=e("../internals/array-buffer-view-core"),a=e("../modules/es.array.iterator"),s=e("../internals/well-known-symbol")("iterator"),l=o.Uint8Array,u=a.values,c=a.keys,d=a.entries,f=i.aTypedArray,h=i.exportTypedArrayMethod,p=l&&l.prototype[s],y=!!p&&("values"==p.name||null==p.name);h("entries",function(){return d.call(f(this))}),h("keys",function(){return c.call(f(this))}),h("values",n,!y),h(s,n,!y)},{"../internals/array-buffer-view-core":12,"../internals/global":59,"../internals/well-known-symbol":146,"../modules/es.array.iterator":158}],211:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=n.aTypedArray,i=n.exportTypedArrayMethod,a=[].join;i("join",function(e){return a.apply(o(this),arguments)})},{"../internals/array-buffer-view-core":12}],212:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-last-index-of"),i=n.aTypedArray;(0,n.exportTypedArrayMethod)("lastIndexOf",function(e){return o.apply(i(this),arguments)})},{"../internals/array-buffer-view-core":12,"../internals/array-last-index-of":20}],213:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-iteration").map,i=e("../internals/species-constructor"),a=n.aTypedArray,s=n.aTypedArrayConstructor;(0,n.exportTypedArrayMethod)("map",function(e,t){return o(a(this),e,1<arguments.length?t:void 0,function(e,t){return new(s(i(e,e.constructor)))(t)})})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19,"../internals/species-constructor":121}],214:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-reduce").right,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduceRight",function(e,t){return o(i(this),e,arguments.length,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-reduce":24}],215:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-reduce").left,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduce",function(e,t){return o(i(this),e,arguments.length,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-reduce":24}],216:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=n.aTypedArray,i=n.exportTypedArrayMethod,a=Math.floor;i("reverse",function(){for(var e,t=o(this).length,r=a(t/2),n=0;n<r;)e=this[n],this[n++]=this[--t],this[t]=e;return this})},{"../internals/array-buffer-view-core":12}],217:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),s=e("../internals/to-length"),l=e("../internals/to-offset"),u=e("../internals/to-object"),o=e("../internals/fails"),c=n.aTypedArray;(0,n.exportTypedArrayMethod)("set",function(e,t){c(this);var r=l(1<arguments.length?t:void 0,1),n=this.length,o=u(e),i=s(o.length),a=0;if(n<i+r)throw RangeError("Wrong length");for(;a<i;)this[r+a]=o[a++]},o(function(){new Int8Array(1).set({})}))},{"../internals/array-buffer-view-core":12,"../internals/fails":50,"../internals/to-length":134,"../internals/to-object":135,"../internals/to-offset":136}],218:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),s=e("../internals/species-constructor"),o=e("../internals/fails"),l=n.aTypedArray,u=n.aTypedArrayConstructor,i=n.exportTypedArrayMethod,c=[].slice;i("slice",function(e,t){for(var r=c.call(l(this),e,t),n=s(this,this.constructor),o=0,i=r.length,a=new(u(n))(i);o<i;)a[o]=r[o++];return a},o(function(){new Int8Array(1).slice()}))},{"../internals/array-buffer-view-core":12,"../internals/fails":50,"../internals/species-constructor":121}],219:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=e("../internals/array-iteration").some,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("some",function(e,t){return o(i(this),e,1<arguments.length?t:void 0)})},{"../internals/array-buffer-view-core":12,"../internals/array-iteration":19}],220:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),o=n.aTypedArray,i=n.exportTypedArrayMethod,a=[].sort;i("sort",function(e){return a.call(o(this),e)})},{"../internals/array-buffer-view-core":12}],221:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core"),i=e("../internals/to-length"),a=e("../internals/to-absolute-index"),s=e("../internals/species-constructor"),l=n.aTypedArray;(0,n.exportTypedArrayMethod)("subarray",function(e,t){var r=l(this),n=r.length,o=a(e,n);return new(s(r,r.constructor))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,i((void 0===t?n:a(t,n))-o))})},{"../internals/array-buffer-view-core":12,"../internals/species-constructor":121,"../internals/to-absolute-index":130,"../internals/to-length":134}],222:[function(e,t,r){"use strict";var n=e("../internals/global"),o=e("../internals/array-buffer-view-core"),i=e("../internals/fails"),a=n.Int8Array,s=o.aTypedArray,l=o.exportTypedArrayMethod,u=[].toLocaleString,c=[].slice,d=!!a&&i(function(){u.call(new a(1))});l("toLocaleString",function(){return u.apply(d?c.call(s(this)):s(this),arguments)},i(function(){return[1,2].toLocaleString()!=new a([1,2]).toLocaleString()})||!i(function(){a.prototype.toLocaleString.call([1,2])}))},{"../internals/array-buffer-view-core":12,"../internals/fails":50,"../internals/global":59}],223:[function(e,t,r){"use strict";var n=e("../internals/array-buffer-view-core").exportTypedArrayMethod,o=e("../internals/fails"),i=e("../internals/global").Uint8Array,a=i&&i.prototype||{},s=[].toString,l=[].join;o(function(){s.call({})})&&(s=function(){return l.call(this)}),n("toString",s,a.toString!=s)},{"../internals/array-buffer-view-core":12,"../internals/fails":50,"../internals/global":59}],224:[function(e,t,r){e("../internals/typed-array-constructor")("Uint16",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],225:[function(e,t,r){e("../internals/typed-array-constructor")("Uint32",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],226:[function(e,t,r){e("../internals/typed-array-constructor")("Uint8",function(n){return function(e,t,r){return n(this,e,t,r)}})},{"../internals/typed-array-constructor":140}],227:[function(e,t,r){e("../internals/typed-array-constructor")("Uint8",function(n){return function(e,t,r){return n(this,e,t,r)}},!0)},{"../internals/typed-array-constructor":140}],228:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/dom-iterables"),i=e("../internals/array-for-each"),a=e("../internals/create-non-enumerable-property");for(var s in o){var l=n[s],u=l&&l.prototype;if(u&&u.forEach!==i)try{a(u,"forEach",i)}catch(e){u.forEach=i}}},{"../internals/array-for-each":16,"../internals/create-non-enumerable-property":37,"../internals/dom-iterables":44,"../internals/global":59}],229:[function(e,t,r){var n=e("../internals/global"),o=e("../internals/dom-iterables"),i=e("../modules/es.array.iterator"),a=e("../internals/create-non-enumerable-property"),s=e("../internals/well-known-symbol"),l=s("iterator"),u=s("toStringTag"),c=i.values;for(var d in o){var f=n[d],h=f&&f.prototype;if(h){if(h[l]!==c)try{a(h,l,c)}catch(e){h[l]=c}if(h[u]||a(h,u,d),o[d])for(var p in i)if(h[p]!==i[p])try{a(h,p,i[p])}catch(e){h[p]=i[p]}}}},{"../internals/create-non-enumerable-property":37,"../internals/dom-iterables":44,"../internals/global":59,"../internals/well-known-symbol":146,"../modules/es.array.iterator":158}],230:[function(e,t,r){"use strict";e("../modules/es.array.iterator");function o(t){try{return decodeURIComponent(t)}catch(e){return t}}function a(e){var t,r=e.replace(U," "),n=4;try{return decodeURIComponent(r)}catch(e){for(;n;)r=r.replace((t=n--,N[t-1]||(N[t-1]=RegExp("((?:%[\\da-f]{2}){"+t+"})","gi"))),o);return r}}function n(e){return B[e]}function i(e){return encodeURIComponent(e).replace(F,n)}function f(e,t){if(t)for(var r,n,o=t.split("&"),i=0;i<o.length;)(r=o[i++]).length&&(n=r.split("="),e.push({key:a(n.shift()),value:a(n.join("="))}))}function h(e){this.entries.length=0,f(this.entries,e)}function u(e,t){if(e<t)throw TypeError("Not enough arguments")}var s=e("../internals/export"),l=e("../internals/get-built-in"),c=e("../internals/native-url"),d=e("../internals/redefine"),p=e("../internals/redefine-all"),y=e("../internals/set-to-string-tag"),m=e("../internals/create-iterator-constructor"),g=e("../internals/internal-state"),v=e("../internals/an-instance"),b=e("../internals/has"),_=e("../internals/function-bind-context"),x=e("../internals/classof"),w=e("../internals/an-object"),j=e("../internals/is-object"),S=e("../internals/object-create"),M=e("../internals/create-property-descriptor"),E=e("../internals/get-iterator"),T=e("../internals/get-iterator-method"),O=e("../internals/well-known-symbol"),C=l("fetch"),L=l("Headers"),P=O("iterator"),A="URLSearchParams",k=A+"Iterator",R=g.set,D=g.getterFor(A),I=g.getterFor(k),U=/\+/g,N=Array(4),F=/[!'()~]|%20/g,B={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},G=m(function(e,t){R(this,{type:k,iterator:E(D(e).entries),kind:t})},"Iterator",function(){var e=I(this),t=e.kind,r=e.iterator.next(),n=r.value;return r.done||(r.value="keys"===t?n.key:"values"===t?n.value:[n.key,n.value]),r}),V=function(e){v(this,V,A);var t,r,n,o,i,a,s,l,u,c=0<arguments.length?e:void 0,d=[];if(R(this,{type:A,entries:d,updateURL:function(){},updateSearchParams:h}),void 0!==c)if(j(c))if("function"==typeof(t=T(c)))for(n=(r=t.call(c)).next;!(o=n.call(r)).done;){if((s=(a=(i=E(w(o.value))).next).call(i)).done||(l=a.call(i)).done||!a.call(i).done)throw TypeError("Expected sequence with length 2");d.push({key:s.value+"",value:l.value+""})}else for(u in c)b(c,u)&&d.push({key:u,value:c[u]+""});else f(d,"string"==typeof c?"?"===c.charAt(0)?c.slice(1):c:c+"")},z=V.prototype;p(z,{append:function(e,t){u(arguments.length,2);var r=D(this);r.entries.push({key:e+"",value:t+""}),r.updateURL()},delete:function(e){u(arguments.length,1);for(var t=D(this),r=t.entries,n=e+"",o=0;o<r.length;)r[o].key===n?r.splice(o,1):o++;t.updateURL()},get:function(e){u(arguments.length,1);for(var t=D(this).entries,r=e+"",n=0;n<t.length;n++)if(t[n].key===r)return t[n].value;return null},getAll:function(e){u(arguments.length,1);for(var t=D(this).entries,r=e+"",n=[],o=0;o<t.length;o++)t[o].key===r&&n.push(t[o].value);return n},has:function(e){u(arguments.length,1);for(var t=D(this).entries,r=e+"",n=0;n<t.length;)if(t[n++].key===r)return!0;return!1},set:function(e,t){u(arguments.length,1);for(var r,n=D(this),o=n.entries,i=!1,a=e+"",s=t+"",l=0;l<o.length;l++)(r=o[l]).key===a&&(i?o.splice(l--,1):(i=!0,r.value=s));i||o.push({key:a,value:s}),n.updateURL()},sort:function(){var e,t,r,n=D(this),o=n.entries,i=o.slice();for(r=o.length=0;r<i.length;r++){for(e=i[r],t=0;t<r;t++)if(o[t].key>e.key){o.splice(t,0,e);break}t===r&&o.push(e)}n.updateURL()},forEach:function(e,t){for(var r,n=D(this).entries,o=_(e,1<arguments.length?t:void 0,3),i=0;i<n.length;)o((r=n[i++]).value,r.key,this)},keys:function(){return new G(this,"keys")},values:function(){return new G(this,"values")},entries:function(){return new G(this,"entries")}},{enumerable:!0}),d(z,P,z.entries),d(z,"toString",function(){for(var e,t=D(this).entries,r=[],n=0;n<t.length;)e=t[n++],r.push(i(e.key)+"="+i(e.value));return r.join("&")},{enumerable:!0}),y(V,A),s({global:!0,forced:!c},{URLSearchParams:V}),c||"function"!=typeof C||"function"!=typeof L||s({global:!0,enumerable:!0,forced:!0},{fetch:function(e,t){var r,n,o,i=[e];return 1<arguments.length&&(j(r=t)&&(n=r.body,x(n)===A&&((o=r.headers?new L(r.headers):new L).has("content-type")||o.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),r=S(r,{body:M(0,String(n)),headers:M(0,o)}))),i.push(r)),C.apply(this,i)}}),t.exports={URLSearchParams:V,getState:D}},{"../internals/an-instance":9,"../internals/an-object":10,"../internals/classof":29,"../internals/create-iterator-constructor":36,"../internals/create-property-descriptor":38,"../internals/export":49,"../internals/function-bind-context":54,"../internals/get-built-in":56,"../internals/get-iterator":58,"../internals/get-iterator-method":57,"../internals/has":60,"../internals/internal-state":70,"../internals/is-object":74,"../internals/native-url":84,"../internals/object-create":90,"../internals/redefine":108,"../internals/redefine-all":107,"../internals/set-to-string-tag":117,"../internals/well-known-symbol":146,"../modules/es.array.iterator":158}],231:[function(e,t,r){"use strict";e("../modules/es.string.iterator");function _(e,t){var r,n,o;if("["==t.charAt(0)){if("]"!=t.charAt(t.length-1))return I;if(!(r=Q(t.slice(1,-1))))return I;e.host=r}else if(ne(e)){if(t=m(t),W.test(t))return I;if(null===(r=Z(t)))return I;e.host=r}else{if(q.test(t))return I;for(r="",n=T(t),o=0;o<n.length;o++)r+=te(n[o],K);e.host=r}}function c(e){var t,r,n,o;if("number"==typeof e){for(t=[],r=0;r<4;r++)t.unshift(e%256),e=k(e/256);return t.join(".")}if("object"!=typeof e)return e;for(t="",n=function(e){for(var t=null,r=1,n=null,o=0,i=0;i<8;i++)0!==e[i]?(r<o&&(t=n,r=o),n=null,o=0):(null===n&&(n=i),++o);return r<o&&(t=n,r=o),t}(e),r=0;r<8;r++)o&&0===e[r]||(o=o&&!1,n===r?(t+=r?":":"::",o=!0):(t+=e[r].toString(16),r<7&&(t+=":")));return"["+t+"]"}function x(e){return""!=e.username||""!=e.password}function o(e){return!e.host||e.cannotBeABaseURL||"file"==e.scheme}function w(e,t){var r;return 2==e.length&&N.test(e.charAt(0))&&(":"==(r=e.charAt(1))||!t&&"|"==r)}function j(e){var t;return 1<e.length&&w(e.slice(0,2))&&(2==e.length||"/"===(t=e.charAt(2))||"\\"===t||"?"===t||"#"===t)}function S(e){var t=e.path,r=t.length;!r||"file"==e.scheme&&1==r&&w(t[0],!0)||t.pop()}function d(e,t,r,n){var o,i,a,s,l,u,c=r||oe,d=0,f="",h=!1,p=!1,y=!1;for(r||(e.scheme="",e.username="",e.password="",e.host=null,e.port=null,e.path=[],e.query=null,e.fragment=null,e.cannotBeABaseURL=!1,t=t.replace(X,"")),t=t.replace(Y,""),o=T(t);d<=o.length;){switch(i=o[d],c){case oe:if(!i||!N.test(i)){if(r)return D;c=ae;continue}f+=i.toLowerCase(),c=ie;break;case ie:if(i&&(F.test(i)||"+"==i||"-"==i||"."==i))f+=i.toLowerCase();else{if(":"!=i){if(r)return D;f="",c=ae,d=0;continue}if(r&&(ne(e)!=E(re,f)||"file"==f&&(x(e)||null!==e.port)||"file"==e.scheme&&!e.host))return;if(e.scheme=f,r)return void(ne(e)&&re[e.scheme]==e.port&&(e.port=null));f="","file"==e.scheme?c=ge:ne(e)&&n&&n.scheme==e.scheme?c=se:ne(e)?c=de:"/"==o[d+1]?(c=le,d++):(e.cannotBeABaseURL=!0,e.path.push(""),c=we)}break;case ae:if(!n||n.cannotBeABaseURL&&"#"!=i)return D;if(n.cannotBeABaseURL&&"#"==i){e.scheme=n.scheme,e.path=n.path.slice(),e.query=n.query,e.fragment="",e.cannotBeABaseURL=!0,c=Se;break}c="file"==n.scheme?ge:ue;continue;case se:if("/"!=i||"/"!=o[d+1]){c=ue;continue}c=fe,d++;break;case le:if("/"==i){c=he;break}c=xe;continue;case ue:if(e.scheme=n.scheme,i==M)e.username=n.username,e.password=n.password,e.host=n.host,e.port=n.port,e.path=n.path.slice(),e.query=n.query;else if("/"==i||"\\"==i&&ne(e))c=ce;else if("?"==i)e.username=n.username,e.password=n.password,e.host=n.host,e.port=n.port,e.path=n.path.slice(),e.query="",c=je;else{if("#"!=i){e.username=n.username,e.password=n.password,e.host=n.host,e.port=n.port,e.path=n.path.slice(),e.path.pop(),c=xe;continue}e.username=n.username,e.password=n.password,e.host=n.host,e.port=n.port,e.path=n.path.slice(),e.query=n.query,e.fragment="",c=Se}break;case ce:if(!ne(e)||"/"!=i&&"\\"!=i){if("/"!=i){e.username=n.username,e.password=n.password,e.host=n.host,e.port=n.port,c=xe;continue}c=he}else c=fe;break;case de:if(c=fe,"/"!=i||"/"!=f.charAt(d+1))continue;d++;break;case fe:if("/"==i||"\\"==i)break;c=he;continue;case he:if("@"==i){h&&(f="%40"+f),h=!0,a=T(f);for(var m=0;m<a.length;m++){var g=a[m];if(":"!=g||y){var v=te(g,ee);y?e.password+=v:e.username+=v}else y=!0}f=""}else if(i==M||"/"==i||"?"==i||"#"==i||"\\"==i&&ne(e)){if(h&&""==f)return"Invalid authority";d-=T(f).length+1,f="",c=pe}else f+=i;break;case pe:case ye:if(r&&"file"==e.scheme){c=be;continue}if(":"!=i||p){if(i==M||"/"==i||"?"==i||"#"==i||"\\"==i&&ne(e)){if(ne(e)&&""==f)return I;if(r&&""==f&&(x(e)||null!==e.port))return;if(s=_(e,f))return s;if(f="",c=_e,r)return;continue}"["==i?p=!0:"]"==i&&(p=!1),f+=i}else{if(""==f)return I;if(s=_(e,f))return s;if(f="",c=me,r==ye)return}break;case me:if(!B.test(i)){if(i==M||"/"==i||"?"==i||"#"==i||"\\"==i&&ne(e)||r){if(""!=f){var b=parseInt(f,10);if(65535<b)return U;e.port=ne(e)&&b===re[e.scheme]?null:b,f=""}if(r)return;c=_e;continue}return U}f+=i;break;case ge:if(e.scheme="file","/"==i||"\\"==i)c=ve;else{if(!n||"file"!=n.scheme){c=xe;continue}if(i==M)e.host=n.host,e.path=n.path.slice(),e.query=n.query;else if("?"==i)e.host=n.host,e.path=n.path.slice(),e.query="",c=je;else{if("#"!=i){j(o.slice(d).join(""))||(e.host=n.host,e.path=n.path.slice(),S(e)),c=xe;continue}e.host=n.host,e.path=n.path.slice(),e.query=n.query,e.fragment="",c=Se}}break;case ve:if("/"==i||"\\"==i){c=be;break}n&&"file"==n.scheme&&!j(o.slice(d).join(""))&&(w(n.path[0],!0)?e.path.push(n.path[0]):e.host=n.host),c=xe;continue;case be:if(i==M||"/"==i||"\\"==i||"?"==i||"#"==i){if(!r&&w(f))c=xe;else if(""==f){if(e.host="",r)return;c=_e}else{if(s=_(e,f))return s;if("localhost"==e.host&&(e.host=""),r)return;f="",c=_e}continue}f+=i;break;case _e:if(ne(e)){if(c=xe,"/"!=i&&"\\"!=i)continue}else if(r||"?"!=i)if(r||"#"!=i){if(i!=M&&(c=xe,"/"!=i))continue}else e.fragment="",c=Se;else e.query="",c=je;break;case xe:if(i==M||"/"==i||"\\"==i&&ne(e)||!r&&("?"==i||"#"==i)){if(".."===(u=(u=f).toLowerCase())||"%2e."===u||".%2e"===u||"%2e%2e"===u?(S(e),"/"==i||"\\"==i&&ne(e)||e.path.push("")):"."===(l=f)||"%2e"===l.toLowerCase()?"/"==i||"\\"==i&&ne(e)||e.path.push(""):("file"==e.scheme&&!e.path.length&&w(f)&&(e.host&&(e.host=""),f=f.charAt(0)+":"),e.path.push(f)),f="","file"==e.scheme&&(i==M||"?"==i||"#"==i))for(;1<e.path.length&&""===e.path[0];)e.path.shift();"?"==i?(e.query="",c=je):"#"==i&&(e.fragment="",c=Se)}else f+=te(i,$);break;case we:"?"==i?(e.query="",c=je):"#"==i?(e.fragment="",c=Se):i!=M&&(e.path[0]+=te(i,K));break;case je:r||"#"!=i?i!=M&&("'"==i&&ne(e)?e.query+="%27":e.query+="#"==i?"%23":te(i,K)):(e.fragment="",c=Se);break;case Se:i!=M&&(e.fragment+=te(i,J))}d++}}function n(e,t){return{get:e,set:t,configurable:!0,enumerable:!0}}var M,i=e("../internals/export"),f=e("../internals/descriptors"),a=e("../internals/native-url"),s=e("../internals/global"),l=e("../internals/object-define-properties"),u=e("../internals/redefine"),h=e("../internals/an-instance"),E=e("../internals/has"),p=e("../internals/object-assign"),T=e("../internals/array-from"),y=e("../internals/string-multibyte").codeAt,m=e("../internals/string-punycode-to-ascii"),g=e("../internals/set-to-string-tag"),v=e("../modules/web.url-search-params"),b=e("../internals/internal-state"),O=s.URL,C=v.URLSearchParams,L=v.getState,P=b.set,A=b.getterFor("URL"),k=Math.floor,R=Math.pow,D="Invalid scheme",I="Invalid host",U="Invalid port",N=/[A-Za-z]/,F=/[\d+-.A-Za-z]/,B=/\d/,G=/^(0x|0X)/,V=/^[0-7]+$/,z=/^\d+$/,H=/^[\dA-Fa-f]+$/,W=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,q=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,X=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,Y=/[\u0009\u000A\u000D]/g,Z=function(e){var t,r,n,o,i,a,s,l=e.split(".");if(l.length&&""==l[l.length-1]&&l.pop(),4<(t=l.length))return e;for(r=[],n=0;n<t;n++){if(""==(o=l[n]))return e;if(i=10,1<o.length&&"0"==o.charAt(0)&&(i=G.test(o)?16:8,o=o.slice(8==i?1:2)),""===o)a=0;else{if(!(10==i?z:8==i?V:H).test(o))return e;a=parseInt(o,i)}r.push(a)}for(n=0;n<t;n++)if(a=r[n],n==t-1){if(a>=R(256,5-t))return null}else if(255<a)return null;for(s=r.pop(),n=0;n<r.length;n++)s+=r[n]*R(256,3-n);return s},Q=function(e){function t(){return e.charAt(f)}var r,n,o,i,a,s,l,u=[0,0,0,0,0,0,0,0],c=0,d=null,f=0;if(":"==t()){if(":"!=e.charAt(1))return;f+=2,d=++c}for(;t();){if(8==c)return;if(":"!=t()){for(r=n=0;n<4&&H.test(t());)r=16*r+parseInt(t(),16),f++,n++;if("."==t()){if(0==n)return;if(f-=n,6<c)return;for(o=0;t();){if(i=null,0<o){if(!("."==t()&&o<4))return;f++}if(!B.test(t()))return;for(;B.test(t());){if(a=parseInt(t(),10),null===i)i=a;else{if(0==i)return;i=10*i+a}if(255<i)return;f++}u[c]=256*u[c]+i,2!=++o&&4!=o||c++}if(4!=o)return;break}if(":"==t()){if(f++,!t())return}else if(t())return;u[c++]=r}else{if(null!==d)return;f++,d=++c}}if(null!==d)for(s=c-d,c=7;0!=c&&0<s;)l=u[c],u[c--]=u[d+s-1],u[d+--s]=l;else if(8!=c)return;return u},K={},J=p({},K,{" ":1,'"':1,"<":1,">":1,"`":1}),$=p({},J,{"#":1,"?":1,"{":1,"}":1}),ee=p({},$,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),te=function(e,t){var r=y(e,0);return 32<r&&r<127&&!E(t,e)?e:encodeURIComponent(e)},re={ftp:21,file:null,http:80,https:443,ws:80,wss:443},ne=function(e){return E(re,e.scheme)},oe={},ie={},ae={},se={},le={},ue={},ce={},de={},fe={},he={},pe={},ye={},me={},ge={},ve={},be={},_e={},xe={},we={},je={},Se={},Me=function(e,t){var r,n,o=h(this,Me,"URL"),i=1<arguments.length?t:void 0,a=String(e),s=P(o,{type:"URL"});if(void 0!==i)if(i instanceof Me)r=A(i);else if(n=d(r={},String(i)))throw TypeError(n);if(n=d(s,a,null,r))throw TypeError(n);var l=s.searchParams=new C,u=L(l);u.updateSearchParams(s.query),u.updateURL=function(){s.query=String(l)||null},f||(o.href=Te.call(o),o.origin=Oe.call(o),o.protocol=Ce.call(o),o.username=Le.call(o),o.password=Pe.call(o),o.host=Ae.call(o),o.hostname=ke.call(o),o.port=Re.call(o),o.pathname=De.call(o),o.search=Ie.call(o),o.searchParams=Ue.call(o),o.hash=Ne.call(o))},Ee=Me.prototype,Te=function(){var e=A(this),t=e.scheme,r=e.username,n=e.password,o=e.host,i=e.port,a=e.path,s=e.query,l=e.fragment,u=t+":";return null!==o?(u+="//",x(e)&&(u+=r+(n?":"+n:"")+"@"),u+=c(o),null!==i&&(u+=":"+i)):"file"==t&&(u+="//"),u+=e.cannotBeABaseURL?a[0]:a.length?"/"+a.join("/"):"",null!==s&&(u+="?"+s),null!==l&&(u+="#"+l),u},Oe=function(){var e=A(this),t=e.scheme,r=e.port;if("blob"==t)try{return new URL(t.path[0]).origin}catch(e){return"null"}return"file"!=t&&ne(e)?t+"://"+c(e.host)+(null!==r?":"+r:""):"null"},Ce=function(){return A(this).scheme+":"},Le=function(){return A(this).username},Pe=function(){return A(this).password},Ae=function(){var e=A(this),t=e.host,r=e.port;return null===t?"":null===r?c(t):c(t)+":"+r},ke=function(){var e=A(this).host;return null===e?"":c(e)},Re=function(){var e=A(this).port;return null===e?"":String(e)},De=function(){var e=A(this),t=e.path;return e.cannotBeABaseURL?t[0]:t.length?"/"+t.join("/"):""},Ie=function(){var e=A(this).query;return e?"?"+e:""},Ue=function(){return A(this).searchParams},Ne=function(){var e=A(this).fragment;return e?"#"+e:""};if(f&&l(Ee,{href:n(Te,function(e){var t=A(this),r=String(e),n=d(t,r);if(n)throw TypeError(n);L(t.searchParams).updateSearchParams(t.query)}),origin:n(Oe),protocol:n(Ce,function(e){var t=A(this);d(t,String(e)+":",oe)}),username:n(Le,function(e){var t=A(this),r=T(String(e));if(!o(t)){t.username="";for(var n=0;n<r.length;n++)t.username+=te(r[n],ee)}}),password:n(Pe,function(e){var t=A(this),r=T(String(e));if(!o(t)){t.password="";for(var n=0;n<r.length;n++)t.password+=te(r[n],ee)}}),host:n(Ae,function(e){var t=A(this);t.cannotBeABaseURL||d(t,String(e),pe)}),hostname:n(ke,function(e){var t=A(this);t.cannotBeABaseURL||d(t,String(e),ye)}),port:n(Re,function(e){var t=A(this);o(t)||(""==(e=String(e))?t.port=null:d(t,e,me))}),pathname:n(De,function(e){var t=A(this);t.cannotBeABaseURL||(t.path=[],d(t,e+"",_e))}),search:n(Ie,function(e){var t=A(this);""==(e=String(e))?t.query=null:("?"==e.charAt(0)&&(e=e.slice(1)),t.query="",d(t,e,je)),L(t.searchParams).updateSearchParams(t.query)}),searchParams:n(Ue),hash:n(Ne,function(e){var t=A(this);""!=(e=String(e))?("#"==e.charAt(0)&&(e=e.slice(1)),t.fragment="",d(t,e,Se)):t.fragment=null})}),u(Ee,"toJSON",function(){return Te.call(this)},{enumerable:!0}),u(Ee,"toString",function(){return Te.call(this)},{enumerable:!0}),O){var Fe=O.createObjectURL,Be=O.revokeObjectURL;Fe&&u(Me,"createObjectURL",function(e){return Fe.apply(O,arguments)}),Be&&u(Me,"revokeObjectURL",function(e){return Be.apply(O,arguments)})}g(Me,"URL"),i({global:!0,forced:!a,sham:!f},{URL:Me})},{"../internals/an-instance":9,"../internals/array-from":17,"../internals/descriptors":42,"../internals/export":49,"../internals/global":59,"../internals/has":60,"../internals/internal-state":70,"../internals/native-url":84,"../internals/object-assign":89,"../internals/object-define-properties":91,"../internals/redefine":108,"../internals/set-to-string-tag":117,"../internals/string-multibyte":123,"../internals/string-punycode-to-ascii":124,"../modules/es.string.iterator":186,"../modules/web.url-search-params":230}],232:[function(e,t,r){"use strict";t.exports=e("./").polyfill()},{"./":233}],233:[function(z,r,n){(function(G,V){var e,t;e=this,t=function(){"use strict";function l(e){return"function"==typeof e}var r=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},n=0,t=void 0,o=void 0,a=function(e,t){f[n]=e,f[n+1]=t,2===(n+=2)&&(o?o(h):v())};var e="undefined"!=typeof window?window:void 0,i=e||{},s=i.MutationObserver||i.WebKitMutationObserver,u="undefined"==typeof self&&void 0!==G&&"[object process]"==={}.toString.call(G),c="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function d(){var e=setTimeout;return function(){return e(h,1)}}var f=new Array(1e3);function h(){for(var e=0;e<n;e+=2){(0,f[e])(f[e+1]),f[e]=void 0,f[e+1]=void 0}n=0}var p,y,m,g,v=void 0;function b(e,t){var r=this,n=new this.constructor(w);void 0===n[x]&&I(n);var o=r._state;if(o){var i=arguments[o-1];a(function(){return R(o,n,i,r._result)})}else A(r,n,e,t);return n}function _(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(w);return O(t,e),t}v=u?function(){return G.nextTick(h)}:s?(y=0,m=new s(h),g=document.createTextNode(""),m.observe(g,{characterData:!0}),function(){g.data=y=++y%2}):c?((p=new MessageChannel).port1.onmessage=h,function(){return p.port2.postMessage(0)}):void 0===e&&"function"==typeof z?function(){try{var e=Function("return this")().require("vertx");return void 0!==(t=e.runOnLoop||e.runOnContext)?function(){t(h)}:d()}catch(e){return d()}}():d();var x=Math.random().toString(36).substring(2);function w(){}var j=void 0,S=1,M=2;function E(e,n,o){a(function(t){var r=!1,e=function(e,t,r,n){try{e.call(t,r,n)}catch(e){return e}}(o,n,function(e){r||(r=!0,n!==e?O(t,e):L(t,e))},function(e){r||(r=!0,P(t,e))},t._label);!r&&e&&(r=!0,P(t,e))},e)}function T(e,t,r){var n,o;t.constructor===e.constructor&&r===b&&t.constructor.resolve===_?(n=e,(o=t)._state===S?L(n,o._result):o._state===M?P(n,o._result):A(o,void 0,function(e){return O(n,e)},function(e){return P(n,e)})):void 0===r?L(e,t):l(r)?E(e,t,r):L(e,t)}function O(t,e){if(t===e)P(t,new TypeError("You cannot resolve a promise with itself"));else if(o=typeof(n=e),null===n||"object"!=o&&"function"!=o)L(t,e);else{var r=void 0;try{r=e.then}catch(e){return void P(t,e)}T(t,e,r)}var n,o}function C(e){e._onerror&&e._onerror(e._result),k(e)}function L(e,t){e._state===j&&(e._result=t,e._state=S,0!==e._subscribers.length&&a(k,e))}function P(e,t){e._state===j&&(e._state=M,e._result=t,a(C,e))}function A(e,t,r,n){var o=e._subscribers,i=o.length;e._onerror=null,o[i]=t,o[i+S]=r,o[i+M]=n,0===i&&e._state&&a(k,e)}function k(e){var t=e._subscribers,r=e._state;if(0!==t.length){for(var n=void 0,o=void 0,i=e._result,a=0;a<t.length;a+=3)n=t[a],o=t[a+r],n?R(r,n,o,i):o(i);e._subscribers.length=0}}function R(e,t,r,n){var o=l(r),i=void 0,a=void 0,s=!0;if(o){try{i=r(n)}catch(e){s=!1,a=e}if(t===i)return void P(t,new TypeError("A promises callback cannot return that same promise."))}else i=n;t._state!==j||(o&&s?O(t,i):!1===s?P(t,a):e===S?L(t,i):e===M&&P(t,i))}var D=0;function I(e){e[x]=D++,e._state=void 0,e._result=void 0,e._subscribers=[]}var U=(N.prototype._enumerate=function(e){for(var t=0;this._state===j&&t<e.length;t++)this._eachEntry(e[t],t)},N.prototype._eachEntry=function(t,e){var r=this._instanceConstructor,n=r.resolve;if(n===_){var o=void 0,i=void 0,a=!1;try{o=t.then}catch(e){a=!0,i=e}if(o===b&&t._state!==j)this._settledAt(t._state,e,t._result);else if("function"!=typeof o)this._remaining--,this._result[e]=t;else if(r===F){var s=new r(w);a?P(s,i):T(s,t,o),this._willSettleAt(s,e)}else this._willSettleAt(new r(function(e){return e(t)}),e)}else this._willSettleAt(n(t),e)},N.prototype._settledAt=function(e,t,r){var n=this.promise;n._state===j&&(this._remaining--,e===M?P(n,r):this._result[t]=r),0===this._remaining&&L(n,this._result)},N.prototype._willSettleAt=function(e,t){var r=this;A(e,void 0,function(e){return r._settledAt(S,t,e)},function(e){return r._settledAt(M,t,e)})},N);function N(e,t){this._instanceConstructor=e,this.promise=new e(w),this.promise[x]||I(this.promise),r(t)?(this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?L(this.promise,this._result):(this.length=this.length||0,this._enumerate(t),0===this._remaining&&L(this.promise,this._result))):P(this.promise,new Error("Array Methods must be provided an Array"))}var F=(B.prototype.catch=function(e){return this.then(null,e)},B.prototype.finally=function(t){var r=this.constructor;return l(t)?this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})}):this.then(t,t)},B);function B(e){this[x]=D++,this._result=this._state=void 0,this._subscribers=[],w!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof B?function(t,e){try{e(function(e){O(t,e)},function(e){P(t,e)})}catch(e){P(t,e)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return F.prototype.then=b,F.all=function(e){return new U(this,e).promise},F.race=function(o){var i=this;return r(o)?new i(function(e,t){for(var r=o.length,n=0;n<r;n++)i.resolve(o[n]).then(e,t)}):new i(function(e,t){return t(new TypeError("You must pass an array to race."))})},F.resolve=_,F.reject=function(e){var t=new this(w);return P(t,e),t},F._setScheduler=function(e){o=e},F._setAsap=function(e){a=e},F._asap=a,F.polyfill=function(){var e=void 0;if(void 0!==V)e=V;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===r&&!t.cast)return}e.Promise=F},F.Promise=F},"object"==typeof n&&void 0!==r?r.exports=t():"function"==typeof i&&i.amd?i(t):e.ES6Promise=t()}).call(this,z("_process"),"undefined"!=typeof __webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:241}],234:[function(e,n,o){!function(e,t){if("function"==typeof i&&i.amd)i(["exports","module"],t);else if(void 0!==o&&void 0!==n)t(o,n);else{var r={exports:{}};t(r.exports,r),e.fetchJsonp=r.exports}}(this,function(e,t){"use strict";var r=5e3,n="callback";function d(t){try{delete window[t]}catch(e){window[t]=void 0}}function f(e){var t=document.getElementById(e);t&&document.getElementsByTagName("head")[0].removeChild(t)}t.exports=function(i){var a=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],s=i,l=a.timeout||r,u=a.jsonpCallback||n,c=void 0;return new Promise(function(t,e){var r=a.jsonpCallbackFunction||"jsonp_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),n=u+"_"+r;window[r]=function(e){t({ok:!0,json:function(){return Promise.resolve(e)}}),c&&clearTimeout(c),f(n),d(r)},s+=-1===s.indexOf("?")?"?":"&";var o=document.createElement("script");o.setAttribute("src",""+s+u+"="+r),a.charset&&o.setAttribute("charset",a.charset),o.id=n,document.getElementsByTagName("head")[0].appendChild(o),c=setTimeout(function(){e(new Error("JSONP request to "+i+" timed out")),d(r),f(n),window[r]=function(){d(r)}},l),o.onerror=function(){e(new Error("JSONP request to "+i+" failed")),d(r),f(n),c&&clearTimeout(c)}})}})},{}],235:[function(e,t,r){var n=n||function(s){"use strict";if(!(void 0===s||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var e=s.document,l=function(){return s.URL||s.webkitURL||s},u=e.createElementNS("http://www.w3.org/1999/xhtml","a"),c="download"in u,d=/constructor/i.test(s.HTMLElement)||s.safari,f=/CriOS\/[\d]+/.test(navigator.userAgent),h=function(e){(s.setImmediate||s.setTimeout)(function(){throw e},0)},p=function(e){setTimeout(function(){"string"==typeof e?l().revokeObjectURL(e):e.remove()},4e4)},y=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},n=function(e,r,t){t||(e=y(e));function n(){!function(e,t,r){for(var n=(t=[].concat(t)).length;n--;){var o=e["on"+t[n]];if("function"==typeof o)try{o.call(e,r||e)}catch(e){h(e)}}}(i,"writestart progress write writeend".split(" "))}var o,i=this,a="application/octet-stream"===e.type;if(i.readyState=i.INIT,c)return o=l().createObjectURL(e),void setTimeout(function(){var e,t;u.href=o,u.download=r,e=u,t=new MouseEvent("click"),e.dispatchEvent(t),n(),p(o),i.readyState=i.DONE});!function(){if((f||a&&d)&&s.FileReader){var t=new FileReader;return t.onloadend=function(){var e=f?t.result:t.result.replace(/^data:[^;]*;/,"data:attachment/file;");s.open(e,"_blank")||(s.location.href=e),e=void 0,i.readyState=i.DONE,n()},t.readAsDataURL(e),i.readyState=i.INIT}(o=o||l().createObjectURL(e),a)?s.location.href=o:s.open(o,"_blank")||(s.location.href=o);i.readyState=i.DONE,n(),p(o)}()},t=n.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,r){return t=t||e.name||"download",r||(e=y(e)),navigator.msSaveOrOpenBlob(e,t)}:(t.abort=function(){},t.readyState=t.INIT=0,t.WRITING=1,t.DONE=2,t.error=t.onwritestart=t.onprogress=t.onwrite=t.onabort=t.onerror=t.onwriteend=null,function(e,t,r){return new n(e,t||e.name||"download",r)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==t&&t.exports?t.exports.saveAs=n:null!=i&&null!==i.amd&&i("FileSaver.js",function(){return n})},{}],236:[function(e,t,r){r.read=function(e,t,r,n,o){var i,a,s=8*o-n-1,l=(1<<s)-1,u=l>>1,c=-7,d=r?o-1:0,f=r?-1:1,h=e[t+d];for(d+=f,i=h&(1<<-c)-1,h>>=-c,c+=s;0<c;i=256*i+e[t+d],d+=f,c-=8);for(a=i&(1<<-c)-1,i>>=-c,c+=n;0<c;a=256*a+e[t+d],d+=f,c-=8);if(0===i)i=1-u;else{if(i===l)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,n),i-=u}return(h?-1:1)*a*Math.pow(2,i-n)},r.write=function(e,t,r,n,o,i){var a,s,l,u=8*i-o-1,c=(1<<u)-1,d=c>>1,f=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:i-1,p=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),2<=(t+=1<=a+d?f/l:f*Math.pow(2,1-d))*l&&(a++,l/=2),c<=a+d?(s=0,a=c):1<=a+d?(s=(t*l-1)*Math.pow(2,o),a+=d):(s=t*Math.pow(2,d-1)*Math.pow(2,o),a=0));8<=o;e[r+h]=255&s,h+=p,s/=256,o-=8);for(a=a<<o|s,u+=o;0<u;e[r+h]=255&a,h+=p,a/=256,u-=8);e[r+h-p]|=128*y}},{}],237:[function(e,t,r){"use strict";var n;function m(e,t){return e.b===t.b&&e.a===t.a}function g(e,t){return e.b<t.b||e.b===t.b&&e.a<=t.a}function v(e,t,r){var n=t.b-e.b,o=r.b-t.b;return 0<n+o?n<o?t.a-e.a+n/(n+o)*(e.a-r.a):t.a-r.a+o/(n+o)*(r.a-e.a):0}function b(e,t,r){var n=t.b-e.b,o=r.b-t.b;return 0<n+o?(t.a-r.a)*n+(t.a-e.a)*o:0}function _(e,t){return e.a<t.a||e.a===t.a&&e.b<=t.b}function x(e,t,r){var n=t.a-e.a,o=r.a-t.a;return 0<n+o?n<o?t.b-e.b+n/(n+o)*(e.b-r.b):t.b-r.b+o/(n+o)*(r.b-e.b):0}function w(e,t,r){var n=t.a-e.a,o=r.a-t.a;return 0<n+o?(t.b-r.b)*n+(t.b-e.b)*o:0}function j(e,t,r,n){return(e=e<0?0:e)<=(r=r<0?0:r)?0===r?(t+n)/2:t+e/(e+r)*(n-t):n+r/(e+r)*(t-n)}function a(e){var t=i(e.b);return o(t,e.c),o(t.b,e.c),s(t,e.a),t}function S(e,t){var r=!1,n=!1;e!==t&&(t.a!==e.a&&(n=!0,y(t.a,e.a)),t.d!==e.d&&(r=!0,l(t.d,e.d)),h(t,e),n||(o(t,e.a),e.a.c=e),r||(s(t,e.d),e.d.a=e))}function d(e){var t=e.b,r=!1;e.d!==e.b.d&&(r=!0,l(e.d,e.b.d)),e.c===e?y(e.a,null):(e.b.d.a=K(e),e.a.c=e.c,h(e,K(e)),r||s(e,e.d)),t.c===t?(y(t.a,null),l(t.d,null)):(e.d.a=K(t),t.a.c=t.c,h(t,K(t))),p(e)}function M(e){var t=i(e),r=t.b;return h(t,e.e),t.a=e.b.a,o(r,t.a),t.d=r.d=e.d,t=t.b,h(e.b,K(e.b)),h(e.b,t),e.b.a=t.a,t.b.a.c=t.b,t.b.d=e.b.d,t.f=e.f,t.b.f=e.b.f,t}function f(e,t){var r=!1,n=i(e),o=n.b;return t.d!==e.d&&(r=!0,l(t.d,e.d)),h(n,e.e),h(o,t),n.a=e.b.a,o.a=t.a,n.d=o.d=e.d,e.d.a=o,r||s(n,e.d),n}function i(e){var t=new Q,r=new Q,n=e.b.h;return(((r.h=n).b.h=t).h=e).b.h=r,t.b=r,((t.c=t).e=r).b=t,(r.c=r).e=t}function h(e,t){var r=e.c,n=t.c;r.b.e=t,(n.b.e=e).c=n,t.c=r}function o(e,t){var r=t.f,n=new $(t,r);for(r.e=n,r=(t.f=n).c=e;r.a=n,(r=r.c)!==e;);}function s(e,t){var r=t.d,n=new Z(t,r);for(r.b=n,(t.d=n).a=e,n.c=t.c,r=e;r.d=n,(r=r.e)!==e;);}function p(e){var t=e.h;e=e.b.h,(t.b.h=e).b.h=t}function y(e,t){for(var r=e.c,n=r;n.a=t,(n=n.c)!==r;);r=e.f,((n=e.e).f=r).e=n}function l(e,t){for(var r=e.a,n=r;n.d=t,(n=n.e)!==r;);r=e.d,((n=e.b).d=r).b=n}function E(e){var t=0;return Math.abs(e[1])>Math.abs(e[0])&&(t=1),Math.abs(e[2])>Math.abs(e[t])&&(t=2),t}function T(e,t){e.f+=t.f,e.b.f+=t.b.f}function u(e,t,r){return e=e.a,t=t.a,r=r.a,t.b.a===e?r.b.a===e?g(t.a,r.a)?b(r.b.a,t.a,r.a)<=0:0<=b(t.b.a,r.a,t.a):b(r.b.a,e,r.a)<=0:r.b.a===e?0<=b(t.b.a,e,t.a):(t=v(t.b.a,e,t.a),(e=v(r.b.a,e,r.a))<=t)}function O(e){e.a.i=null;var t=e.e;t.a.c=t.c,t.c.a=t.a,e.e=null}function c(e,t){d(e.a),e.c=!1,(e.a=t).i=e}function C(e){for(var t=e.a.a;(e=de(e)).a.a===t;);return e.c&&(c(e,t=f(ce(e).a.b,e.a.e)),e=de(e)),e}function L(e,t,r){var n=new ue;return n.a=r,n.e=H(e.f,t.e,n),r.i=n}function P(e,t){switch(e.s){case 100130:return 0!=(1&t);case 100131:return 0!==t;case 100132:return 0<t;case 100133:return t<0;case 100134:return 2<=t||t<=-2}return!1}function A(e){var t=e.a,r=t.d;r.c=e.d,r.a=t,O(e)}function k(e,t,r){for(t=(e=t).a;e!==r;){e.c=!1;var n=ce(e),o=n.a;if(o.a!==t.a){if(!n.c){A(e);break}c(n,o=f(t.c.b,o.b))}t.c!==o&&(S(K(o),o),S(t,o)),A(e),t=n.a,e=n}return t}function R(e,t,r,n,o,i){for(var a=!0;L(e,t,r.b),(r=r.c)!==n;);for(null===o&&(o=ce(t).a.b.c);(r=(n=ce(t)).a.b).a===o.a;)r.c!==o&&(S(K(r),r),S(K(o),r)),n.f=t.f-r.f,n.d=P(e,n.f),t.b=!0,!a&&N(e,t)&&(T(r,o),O(t),d(o)),a=!1,t=n,o=r;t.b=!0,i&&B(e,t)}function D(e,t,r,n,o){var i=[t.g[0],t.g[1],t.g[2]];t.d=null,t.d=e.o&&e.o(i,r,n,e.c)||null,null===t.d&&(o?e.n||(Y(e,100156),e.n=!0):t.d=r[0])}function I(e,t,r){var n=[null,null,null,null];n[0]=t.a.d,n[1]=r.a.d,D(e,t.a,n,[.5,.5,0,0],!1),S(t,r)}function U(e,t,r,n,o){var i=Math.abs(t.b-e.b)+Math.abs(t.a-e.a),a=Math.abs(r.b-e.b)+Math.abs(r.a-e.a),s=o+1;n[o]=.5*a/(i+a),n[s]=.5*i/(i+a),e.g[0]+=n[o]*t.g[0]+n[s]*r.g[0],e.g[1]+=n[o]*t.g[1]+n[s]*r.g[1],e.g[2]+=n[o]*t.g[2]+n[s]*r.g[2]}function N(e,t){var r=ce(t),n=t.a,o=r.a;if(g(n.a,o.a)){if(0<b(o.b.a,n.a,o.a))return!1;if(m(n.a,o.a)){if(n.a!==o.a){r=e.e;var i=n.a.h;if(0<=i){var a=(r=r.b).d,s=r.e,l=r.c,u=l[i];a[u]=a[r.a],(l[a[u]]=u)<=--r.a&&(u<=1?se(r,u):g(s[a[u>>1]],s[a[u]])?se(r,u):le(r,u)),s[i]=null,l[i]=r.b,r.b=i}else for(r.c[-(i+1)]=null;0<r.a&&null===r.c[r.d[r.a-1]];)--r.a;I(e,K(o),n)}}else M(o.b),S(n,K(o)),t.b=r.b=!0}else{if(b(n.b.a,o.a,n.a)<0)return!1;de(t).b=t.b=!0,M(n.b),S(K(o),n)}return!0}function F(e,t){var r=ce(t),n=t.a,o=r.a,i=n.a,a=o.a,s=n.b.a,l=o.b.a,u=new $;if(b(s,e.a,i),b(l,e.a,a),i===a||Math.min(i.a,s.a)>Math.max(a.a,l.a))return!1;if(g(i,a)){if(0<b(l,i,a))return!1}else if(b(s,a,i)<0)return!1;var c,d,f=s,h=i,p=l,y=a;if(g(f,h)||(c=f,f=h,h=c),g(p,y)||(c=p,p=y,y=c),g(f,p)||(c=f,f=p,p=c,c=h,h=y,y=c),g(p,h)?g(h,y)?((c=v(f,p,h))+(d=v(p,h,y))<0&&(c=-c,d=-d),u.b=j(c,p.b,d,h.b)):((c=b(f,p,h))+(d=-b(f,y,h))<0&&(c=-c,d=-d),u.b=j(c,p.b,d,y.b)):u.b=(p.b+h.b)/2,_(f,h)||(c=f,f=h,h=c),_(p,y)||(c=p,p=y,y=c),_(f,p)||(c=f,f=p,p=c,c=h,h=y,y=c),_(p,h)?_(h,y)?((c=x(f,p,h))+(d=x(p,h,y))<0&&(c=-c,d=-d),u.a=j(c,p.a,d,h.a)):((c=w(f,p,h))+(d=-w(f,y,h))<0&&(c=-c,d=-d),u.a=j(c,p.a,d,y.a)):u.a=(p.a+h.a)/2,g(u,e.a)&&(u.b=e.a.b,u.a=e.a.a),f=g(i,a)?i:a,g(f,u)&&(u.b=f.b,u.a=f.a),m(u,i)||m(u,a))return N(e,t),!1;if(!m(s,e.a)&&0<=b(s,e.a,u)||!m(l,e.a)&&b(l,e.a,u)<=0){if(l===e.a)return M(n.b),S(o.b,n),n=ce(t=C(t)).a,k(e,ce(t),r),R(e,t,K(n),n,n,!0),!0;if(s!==e.a)return 0<=b(s,e.a,u)&&(de(t).b=t.b=!0,M(n.b),n.a.b=e.a.b,n.a.a=e.a.a),b(l,e.a,u)<=0&&(t.b=r.b=!0,M(o.b),o.a.b=e.a.b,o.a.a=e.a.a),!1;for(M(o.b),S(n.e,K(o)),a=(i=r=t).a.b.a;(i=de(i)).a.b.a===a;);return i=ce(t=i).a.b.c,r.a=K(o),R(e,t,(o=k(e,r,null)).c,n.b.c,i,!0),!0}return M(n.b),M(o.b),S(K(o),n),n.a.b=u.b,n.a.a=u.a,n.a.h=te(e.e,n.a),n=n.a,o=[0,0,0,0],u=[i.d,s.d,a.d,l.d],n.g[0]=n.g[1]=n.g[2]=0,U(n,i,s,o,0),U(n,a,l,o,2),D(e,n,u,o,!0),de(t).b=t.b=r.b=!0,!1}function B(e,t){for(var r=ce(t);;){for(;r.b;)r=ce(t=r);if(!t.b&&(null===(t=de(r=t))||!t.b))break;t.b=!1;var n,o=t.a,i=r.a;if(n=o.b.a!==i.b.a)e:{var a=ce(n=t),s=n.a,l=a.a,u=void 0;if(g(s.b.a,l.b.a)){if(b(s.b.a,l.b.a,s.a)<0){n=!1;break e}de(n).b=n.b=!0,u=M(s),S(l.b,u),u.d.c=n.d}else{if(0<b(l.b.a,s.b.a,l.a)){n=!1;break e}n.b=a.b=!0,u=M(l),S(s.e,l.b),u.b.d.c=n.d}n=!0}if(n&&(r.c?(O(r),d(i),i=(r=ce(t)).a):t.c&&(O(t),d(o),o=(t=de(r)).a)),o.a!==i.a)if(o.b.a===i.b.a||t.c||r.c||o.b.a!==e.a&&i.b.a!==e.a)N(e,t);else if(F(e,t))break;o.a===i.a&&o.b.a===i.b.a&&(T(i,o),O(t),d(o),t=de(r))}}function G(e,t){for(var r=(e.a=t).c;null===r.i;)if((r=r.c)===t.c){r=e;var n=t;(a=new ue).a=n.c.b;for(var o=(l=r.f).a;null!==(o=o.a).b&&!l.c(l.b,a,o.b););var i=ce(l=o.b),a=l.a;o=i.a;if(0===b(a.b.a,n,a.a))m((a=l.a).a,n)||m(a.b.a,n)||(M(a.b),l.c&&(d(a.c),l.c=!1),S(n.c,a),G(r,n));else{var s=g(o.b.a,a.b.a)?l:i;i=void 0;l.d||s.c?(i=s===l?f(n.c.b,a.e):f(o.b.c.b,n.c).b,s.c?c(s,i):((l=L(a=r,l,i)).f=de(l).f+l.a.f,l.d=P(a,l.f)),G(r,n)):R(r,l,n.c,n.c,null,!0)}return}if(l=(a=ce(r=C(r.i))).a,(a=k(e,a,null)).c===l){a=(l=a).c,o=ce(r),i=r.a,s=o.a;var l,u=!1;i.b.a!==s.b.a&&F(e,r),m(i.a,e.a)&&(S(K(a),i),a=ce(r=C(r)).a,k(e,ce(r),o),u=!0),m(s.a,e.a)&&(S(l,K(s)),l=k(e,o,null),u=!0),u?R(e,r,l.c,a,a,!0):(n=g(s.a,i.a)?K(s):i,R(e,r,n=f(l.c.b,n),n.c,n.c,!1),n.b.i.c=!0,B(e,r))}else R(e,r,a.c,l,l,!0)}function V(e,t){var r=new ue,n=a(e.b);n.a.b=4e150,n.a.a=t,n.b.a.b=-4e150,n.b.a.a=t,e.a=n.b.a,r.a=n,r.f=0,r.d=!1,r.c=!1,r.h=!0,r.b=!1,n=H(n=e.f,n.a,r),r.e=n}function z(e){this.a=new W,this.b=e,this.c=u}function H(e,t,r){for(;null!==(t=t.c).b&&!e.c(e.b,t.b,r););return e=new W(r,t.a,t),t.a.c=e,t.a=e}function W(e,t,r){this.b=e||null,this.a=t||this,this.c=r||this}function q(){this.d=0,this.p=this.b=this.q=null,this.j=[0,0,0],this.s=100130,this.n=!1,this.o=this.a=this.e=this.f=null,this.m=!1,this.c=this.r=this.i=this.k=this.l=this.h=null}function X(e,t){if(e.d!==t)for(;e.d!==t;)if(e.d<t)switch(e.d){case 0:Y(e,100151),e.u(null);break;case 1:Y(e,100152),e.t()}else switch(e.d){case 2:Y(e,100154),e.v();break;case 1:Y(e,100153),e.w()}}function Y(e,t){e.p&&e.p(t,e.c)}function Z(e,t){this.b=e||this,this.d=t||this,this.a=null,this.c=!1}function Q(){(this.h=this).i=this.d=this.a=this.e=this.c=this.b=null,this.f=0}function K(e){return e.b.e}function J(){this.c=new $,this.a=new Z,this.b=new Q,this.d=new Q,this.b.b=this.d,this.d.b=this.b}function $(e,t){this.e=e||this,this.f=t||this,this.d=this.c=null,this.g=[0,0,0],this.h=this.a=this.b=0}function ee(){this.c=[],this.d=null,this.a=0,this.e=!1,this.b=new ne}function te(e,t){if(e.e){var r,n=e.b,o=++n.a;return 2*o>n.f&&(n.f*=2,n.c=oe(n.c,n.f+1)),0===n.b?r=o:(r=n.b,n.b=n.c[n.b]),n.e[r]=t,n.c[r]=o,n.d[o]=r,n.h&&le(n,o),r}return n=e.a++,e.c[n]=t,-(n+1)}function re(e){if(0===e.a)return ae(e.b);var t=e.c[e.d[e.a-1]];if(0!==e.b.a&&g(ie(e.b),t))return ae(e.b);for(;--e.a,0<e.a&&null===e.c[e.d[e.a-1]];);return t}function ne(){this.d=oe([0],33),this.e=[null,null],this.c=[0,0],this.a=0,this.f=32,this.b=0,this.h=!1,this.d[1]=1}function oe(e,t){for(var r=Array(t),n=0;n<e.length;n++)r[n]=e[n];for(;n<t;n++)r[n]=0;return r}function ie(e){return e.e[e.d[1]]}function ae(e){var t=e.d,r=e.e,n=e.c,o=t[1],i=r[o];return 0<e.a&&(t[1]=t[e.a],n[t[1]]=1,r[o]=null,n[o]=e.b,e.b=o,0<--e.a&&se(e,1)),i}function se(e,t){for(var r=e.d,n=e.e,o=e.c,i=t,a=r[i];;){var s=i<<1;s<e.a&&g(n[r[s+1]],n[r[s]])&&(s+=1);var l=r[s];if(s>e.a||g(n[a],n[l])){o[r[i]=a]=i;break}o[r[i]=l]=i,i=s}}function le(e,t){for(var r=e.d,n=e.e,o=e.c,i=t,a=r[i];;){var s=i>>1,l=r[s];if(0==s||g(n[l],n[a])){o[r[i]=a]=i;break}o[r[i]=l]=i,i=s}}function ue(){this.e=this.a=null,this.f=0,this.c=this.b=this.h=this.d=!1}function ce(e){return e.e.c.b}function de(e){return e.e.a.b}(n=q.prototype).x=function(){X(this,0)},n.B=function(e,t){switch(e){case 100142:return;case 100140:switch(t){case 100130:case 100131:case 100132:case 100133:case 100134:return void(this.s=t)}break;case 100141:return void(this.m=!!t);default:return void Y(this,100900)}Y(this,100901)},n.y=function(e){switch(e){case 100142:return 0;case 100140:return this.s;case 100141:return this.m;default:Y(this,100900)}return!1},n.A=function(e,t,r){this.j[0]=e,this.j[1]=t,this.j[2]=r},n.z=function(e,t){var r=t||null;switch(e){case 100100:case 100106:this.h=r;break;case 100104:case 100110:this.l=r;break;case 100101:case 100107:this.k=r;break;case 100102:case 100108:this.i=r;break;case 100103:case 100109:this.p=r;break;case 100105:case 100111:this.o=r;break;case 100112:this.r=r;break;default:Y(this,100900)}},n.C=function(e,t){var r=!1,n=[0,0,0];X(this,2);for(var o=0;o<3;++o){var i=e[o];i<-1e150&&(i=-1e150,r=!0),1e150<i&&(i=1e150,r=!0),n[o]=i}r&&Y(this,100155),null===(r=this.q)?S(r=a(this.b),r.b):(M(r),r=r.e),r.a.d=t,r.a.g[0]=n[0],r.a.g[1]=n[1],r.a.g[2]=n[2],r.f=1,r.b.f=-1,this.q=r},n.u=function(e){X(this,0),this.d=1,this.b=new J,this.c=e},n.t=function(){X(this,1),this.d=2,this.q=null},n.v=function(){X(this,2),this.d=1},n.w=function(){X(this,1),this.d=0;var e,t,r=!1,n=[l=this.j[0],o=this.j[1],a=this.j[2]];if(0===l&&0===o&&0===a){for(var o=[-2e150,-2e150,-2e150],i=[2e150,2e150,2e150],a=[],s=[],l=(r=this.b.c).e;l!==r;l=l.e)for(var u=0;u<3;++u){var c=l.g[u];c<i[u]&&(i[u]=c,s[u]=l),c>o[u]&&(o[u]=c,a[u]=l)}if(l=0,o[1]-i[1]>o[0]-i[0]&&(l=1),o[2]-i[2]>o[l]-i[l]&&(l=2),i[l]>=o[l])n[0]=0,n[1]=0,n[2]=1;else{for(o=0,i=s[l],a=a[l],s=[0,0,0],i=[i.g[0]-a.g[0],i.g[1]-a.g[1],i.g[2]-a.g[2]],u=[0,0,0],l=r.e;l!==r;l=l.e)u[0]=l.g[0]-a.g[0],u[1]=l.g[1]-a.g[1],u[2]=l.g[2]-a.g[2],s[0]=i[1]*u[2]-i[2]*u[1],s[1]=i[2]*u[0]-i[0]*u[2],s[2]=i[0]*u[1]-i[1]*u[0],o<(c=s[0]*s[0]+s[1]*s[1]+s[2]*s[2])&&(o=c,n[0]=s[0],n[1]=s[1],n[2]=s[2]);o<=0&&(n[0]=n[1]=n[2]=0,n[E(i)]=1)}r=!0}for(s=E(n),l=this.b.c,o=(s+1)%3,a=(s+2)%3,s=0<n[s]?1:-1,n=l.e;n!==l;n=n.e)n.b=n.g[o],n.a=s*n.g[a];if(r){for(n=0,l=(r=this.b.a).b;l!==r;l=l.b)if(!((o=l.a).f<=0))for(;n+=(o.a.b-o.b.a.b)*(o.a.a+o.b.a.a),(o=o.e)!==l.a;);if(n<0)for(r=(n=this.b.c).e;r!==n;r=r.e)r.a=-r.a}for(this.n=!1,l=(n=this.b.b).h;l!==n;l=r)r=l.h,o=l.e,m(l.a,l.b.a)&&l.e.e!==l&&(I(this,o,l),d(l),o=(l=o).e),o.e===l&&(o!==l&&(o!==r&&o!==r.b||(r=r.h),d(o)),l!==r&&l!==r.b||(r=r.h),d(l));for(this.e=n=new ee,l=(r=this.b.c).e;l!==r;l=l.e)l.h=te(n,l);for(!function(e){e.d=[];for(var t=0;t<e.a;t++)e.d[t]=t;e.d.sort(function(r){return function(e,t){return g(r[e],r[t])?1:-1}}(e.c)),e.e=!0,function(e){for(var t=e.a;1<=t;--t)se(e,t);e.h=!0}(e.b)}(n),this.f=new z(this),V(this,-4e150),V(this,4e150);null!==(n=re(this.e));){for(;;){e:if(l=this.e,0===l.a)r=ie(l.b);else if(r=l.c[l.d[l.a-1]],0!==l.b.a&&(l=ie(l.b),g(l,r))){r=l;break e}if(null===r||!m(r,n))break;r=re(this.e),I(this,n.c,r.c)}G(this,n)}for(this.a=this.f.a.a.b.a.a,n=0;null!==(r=this.f.a.a.b);)r.h||++n,O(r);for(this.f=null,(n=this.e).b=null,n.d=null,this.e=n.c=null,l=(n=this.b).a.b;l!==n.a;l=r)r=l.b,(l=l.a).e.e===l&&(T(l.c,l),d(l));if(!this.n){if(n=this.b,this.m)for(l=n.b.h;l!==n.b;l=r)r=l.h,l.b.d.c!==l.d.c?l.f=l.d.c?1:-1:d(l);else for(l=n.a.b;l!==n.a;l=r)if(r=l.b,l.c){for(l=l.a;g(l.b.a,l.a);l=l.c.b);for(;g(l.a,l.b.a);l=l.e);for(o=l.c.b,a=void 0;l.e!==o;)if(g(l.b.a,o.a)){for(;o.e!==l&&(g((t=o.e).b.a,t.a)||b(o.a,o.b.a,o.e.b.a)<=0);)o=(a=f(o.e,o)).b;o=o.c.b}else{for(;o.e!==l&&(g((e=l.c.b).a,e.b.a)||0<=b(l.b.a,l.a,l.c.b.a));)l=(a=f(l,l.c.b)).b;l=l.e}for(;o.e.e!==l;)o=(a=f(o.e,o)).b}if(this.h||this.i||this.k||this.l)if(this.m){for(r=(n=this.b).a.b;r!==n.a;r=r.b)if(r.c){for(this.h&&this.h(2,this.c),l=r.a;this.k&&this.k(l.a.d,this.c),(l=l.e)!==r.a;);this.i&&this.i(this.c)}}else{for(n=this.b,r=!!this.l,l=!1,o=-1,a=n.a.d;a!==n.a;a=a.d)if(a.c)for(l||(this.h&&this.h(4,this.c),l=!0),s=a.a;r&&(o!==(i=s.b.d.c?0:1)&&(o=i,this.l&&this.l(!!o,this.c))),this.k&&this.k(s.a.d,this.c),(s=s.e)!==a.a;);l&&this.i&&this.i(this.c)}if(this.r){for(l=(n=this.b).a.b;l!==n.a;l=r)if(r=l.b,!l.c){for(a=(o=l.a).e,s=void 0;a=(s=a).e,(s.d=null)===s.b.d&&(s.c===s?y(s.a,null):(s.a.c=s.c,h(s,K(s))),(i=s.b).c===i?y(i.a,null):(i.a.c=i.c,h(i,K(i))),p(s)),s!==o;);o=l.d,((l=l.b).d=o).b=l}return this.r(this.b),void(this.c=this.b=null)}}this.b=this.c=null},this.libtess={GluTesselator:q,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111}},q.prototype.gluDeleteTess=q.prototype.x,q.prototype.gluTessProperty=q.prototype.B,q.prototype.gluGetTessProperty=q.prototype.y,q.prototype.gluTessNormal=q.prototype.A,q.prototype.gluTessCallback=q.prototype.z,q.prototype.gluTessVertex=q.prototype.C,q.prototype.gluTessBeginPolygon=q.prototype.u,q.prototype.gluTessBeginContour=q.prototype.t,q.prototype.gluTessEndContour=q.prototype.v,q.prototype.gluTessEndPolygon=q.prototype.w,void 0!==t&&(t.exports=this.libtess)},{}],238:[function(e,t,r){"use strict";function O(e,t,r,n){for(var o=e[t++],i=1<<o,a=1+i,s=1+a,l=o+1,u=(1<<l)-1,c=0,d=0,f=0,h=e[t++],p=new Int32Array(4096),y=null;;){for(;c<16&&0!==h;)d|=e[t++]<<c,c+=8,1===h?h=e[t++]:--h;if(c<l)break;var m=d&u;if(d>>=l,c-=l,m!=i){if(m==a)break;for(var g=m<s?m:y,v=0,b=g;i<b;)b=p[b]>>8,++v;var _=b;if(n<f+v+(g!==m?1:0))return void console.log("Warning, gif stream longer than expected.");r[f++]=_;var x=f+=v;for(g!==m&&(r[f++]=_),b=g;v--;)b=p[b],r[--x]=255&b,b>>=8;null!==y&&s<4096&&(p[s++]=y<<8|_,u+1<=s&&l<12&&(++l,u=u<<1|1)),y=m}else s=1+a,u=(1<<(l=o+1))-1,y=null}return f!==n&&console.log("Warning, gif stream shorter than expected."),r}try{r.GifWriter=function(g,e,t,r){var v=0,n=void 0===(r=void 0===r?{}:r).loop?null:r.loop,b=void 0===r.palette?null:r.palette;if(e<=0||t<=0||65535<e||65535<t)throw new Error("Width/Height invalid.");function _(e){var t=e.length;if(t<2||256<t||t&t-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return t}g[v++]=71,g[v++]=73,g[v++]=70,g[v++]=56,g[v++]=57,g[v++]=97;var o=0,i=0;if(null!==b){for(var a=_(b);a>>=1;)++o;if(a=1<<o,--o,void 0!==r.background){if(a<=(i=r.background))throw new Error("Background index out of range.");if(0===i)throw new Error("Background index explicitly passed as 0.")}}if(g[v++]=255&e,g[v++]=e>>8&255,g[v++]=255&t,g[v++]=t>>8&255,g[v++]=(null!==b?128:0)|o,g[v++]=i,g[v++]=0,null!==b)for(var s=0,l=b.length;s<l;++s){var u=b[s];g[v++]=u>>16&255,g[v++]=u>>8&255,g[v++]=255&u}if(null!==n){if(n<0||65535<n)throw new Error("Loop count invalid.");g[v++]=33,g[v++]=255,g[v++]=11,g[v++]=78,g[v++]=69,g[v++]=84,g[v++]=83,g[v++]=67,g[v++]=65,g[v++]=80,g[v++]=69,g[v++]=50,g[v++]=46,g[v++]=48,g[v++]=3,g[v++]=1,g[v++]=255&n,g[v++]=n>>8&255,g[v++]=0}var x=!1;this.addFrame=function(e,t,r,n,o,i){if(!0===x&&(--v,x=!1),i=void 0===i?{}:i,e<0||t<0||65535<e||65535<t)throw new Error("x/y invalid.");if(r<=0||n<=0||65535<r||65535<n)throw new Error("Width/Height invalid.");if(o.length<r*n)throw new Error("Not enough pixels for the frame size.");var a=!0,s=i.palette;if(null==s&&(a=!1,s=b),null==s)throw new Error("Must supply either a local or global palette.");for(var l=_(s),u=0;l>>=1;)++u;l=1<<u;var c=void 0===i.delay?0:i.delay,d=void 0===i.disposal?0:i.disposal;if(d<0||3<d)throw new Error("Disposal out of range.");var f=!1,h=0;if(void 0!==i.transparent&&null!==i.transparent&&(f=!0,(h=i.transparent)<0||l<=h))throw new Error("Transparent color index.");if(0===d&&!f&&0===c||(g[v++]=33,g[v++]=249,g[v++]=4,g[v++]=d<<2|(!0===f?1:0),g[v++]=255&c,g[v++]=c>>8&255,g[v++]=h,g[v++]=0),g[v++]=44,g[v++]=255&e,g[v++]=e>>8&255,g[v++]=255&t,g[v++]=t>>8&255,g[v++]=255&r,g[v++]=r>>8&255,g[v++]=255&n,g[v++]=n>>8&255,g[v++]=!0===a?128|u-1:0,!0===a)for(var p=0,y=s.length;p<y;++p){var m=s[p];g[v++]=m>>16&255,g[v++]=m>>8&255,g[v++]=255&m}return v=function(t,r,e,n){t[r++]=e;var o=r++,i=1<<e,a=i-1,s=1+i,l=1+s,u=e+1,c=0,d=0;function f(e){for(;e<=c;)t[r++]=255&d,d>>=8,c-=8,r===o+256&&(t[o]=255,o=r++)}function h(e){d|=e<<c,c+=u,f(8)}var p=n[0]&a,y={};h(i);for(var m=1,g=n.length;m<g;++m){var v=n[m]&a,b=p<<8|v,_=y[b];if(void 0===_){for(d|=p<<c,c+=u;8<=c;)t[r++]=255&d,d>>=8,c-=8,r===o+256&&(t[o]=255,o=r++);4096===l?(h(i),l=1+s,u=e+1,y={}):(1<<u<=l&&++u,y[b]=l++),p=v}else p=_}h(p),h(s),f(1),o+1===r?t[o]=0:(t[o]=r-o-1,t[r++]=0);return r}(g,v,u<2?2:u,o)},this.end=function(){return!1===x&&(g[v++]=59,x=!0),v},this.getOutputBuffer=function(){return g},this.setOutputBuffer=function(e){g=e},this.getOutputBufferPosition=function(){return v},this.setOutputBufferPosition=function(e){v=e}},r.GifReader=function(x){var e=0;if(71!==x[e++]||73!==x[e++]||70!==x[e++]||56!==x[e++]||56!=(x[e++]+1&253)||97!==x[e++])throw new Error("Invalid GIF 87a/89a header.");var w=x[e++]|x[e++]<<8,t=x[e++]|x[e++]<<8,r=x[e++],n=r>>7,o=1<<1+(7&r);x[e++],x[e++];var i=null,a=null;n&&(i=e,e+=3*(a=o));var s=!0,l=[],u=0,c=null,d=0,f=null;for(this.width=w,this.height=t;s&&e<x.length;)switch(x[e++]){case 33:switch(x[e++]){case 255:if(11!==x[e]||78==x[e+1]&&69==x[e+2]&&84==x[e+3]&&83==x[e+4]&&67==x[e+5]&&65==x[e+6]&&80==x[e+7]&&69==x[e+8]&&50==x[e+9]&&46==x[e+10]&&48==x[e+11]&&3==x[e+12]&&1==x[e+13]&&0==x[e+16])e+=14,f=x[e++]|x[e++]<<8,e++;else for(e+=12;;){if(!(0<=(T=x[e++])))throw Error("Invalid block size");if(0===T)break;e+=T}break;case 249:if(4!==x[e++]||0!==x[e+4])throw new Error("Invalid graphics extension block.");var h=x[e++];u=x[e++]|x[e++]<<8,c=x[e++],0==(1&h)&&(c=null),d=h>>2&7,e++;break;case 254:for(;;){if(!(0<=(T=x[e++])))throw Error("Invalid block size");if(0===T)break;e+=T}break;default:throw new Error("Unknown graphic control label: 0x"+x[e-1].toString(16))}break;case 44:var p=x[e++]|x[e++]<<8,y=x[e++]|x[e++]<<8,m=x[e++]|x[e++]<<8,g=x[e++]|x[e++]<<8,v=x[e++],b=v>>6&1,_=1<<1+(7&v),j=i,S=a,M=!1;if(v>>7){M=!0;j=e,e+=3*(S=_)}var E=e;for(e++;;){var T;if(!(0<=(T=x[e++])))throw Error("Invalid block size");if(0===T)break;e+=T}l.push({x:p,y:y,width:m,height:g,has_local_palette:M,palette_offset:j,palette_size:S,data_offset:E,data_length:e-E,transparent_index:c,interlaced:!!b,delay:u,disposal:d});break;case 59:s=!1;break;default:throw new Error("Unknown gif block: 0x"+x[e-1].toString(16))}this.numFrames=function(){return l.length},this.loopCount=function(){return f},this.frameInfo=function(e){if(e<0||e>=l.length)throw new Error("Frame index out of range.");return l[e]},this.decodeAndBlitFrameBGRA=function(e,t){var r=this.frameInfo(e),n=r.width*r.height,o=new Uint8Array(n);O(x,r.data_offset,o,n);var i=r.palette_offset,a=r.transparent_index;null===a&&(a=256);var s=r.width,l=w-s,u=s,c=4*(r.y*w+r.x),d=4*((r.y+r.height)*w+r.x),f=c,h=4*l;!0===r.interlaced&&(h+=4*w*7);for(var p=8,y=0,m=o.length;y<m;++y){var g=o[y];if(0===u&&(u=s,d<=(f+=h)&&(h=4*l+4*w*(p-1),f=c+(s+l)*(p<<1),p>>=1)),g===a)f+=4;else{var v=x[i+3*g],b=x[i+3*g+1],_=x[i+3*g+2];t[f++]=_,t[f++]=b,t[f++]=v,t[f++]=255}--u}},this.decodeAndBlitFrameRGBA=function(e,t){var r=this.frameInfo(e),n=r.width*r.height,o=new Uint8Array(n);O(x,r.data_offset,o,n);var i=r.palette_offset,a=r.transparent_index;null===a&&(a=256);var s=r.width,l=w-s,u=s,c=4*(r.y*w+r.x),d=4*((r.y+r.height)*w+r.x),f=c,h=4*l;!0===r.interlaced&&(h+=4*w*7);for(var p=8,y=0,m=o.length;y<m;++y){var g=o[y];if(0===u&&(u=s,d<=(f+=h)&&(h=4*l+4*w*(p-1),f=c+(s+l)*(p<<1),p>>=1)),g===a)f+=4;else{var v=x[i+3*g],b=x[i+3*g+1],_=x[i+3*g+2];t[f++]=v,t[f++]=b,t[f++]=_,t[f++]=255}--u}}}}catch(e){}},{}],239:[function(Br,r,n){(function(Fr){var e,t;e=this,t=function(M){"use strict";function e(e){if(null==this)throw TypeError();var t=String(this),r=t.length,n=e?Number(e):0;if(n!=n&&(n=0),!(n<0||r<=n)){var o,i=t.charCodeAt(n);return 55296<=i&&i<=56319&&n+1<r&&56320<=(o=t.charCodeAt(n+1))&&o<=57343?1024*(i-55296)+o-56320+65536:i}}var t;String.prototype.codePointAt||((t=function(){try{var e={},t=Object.defineProperty,r=t(e,e,e)&&t}catch(e){}return r}())?t(String.prototype,"codePointAt",{value:e,configurable:!0,writable:!0}):String.prototype.codePointAt=e);var l=0,i=-3;function r(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function a(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new r,this.dtree=new r}var s=new r,u=new r,c=new Uint8Array(30),d=new Uint16Array(30),f=new Uint8Array(30),h=new Uint16Array(30),p=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),y=new r,m=new Uint8Array(320);function n(e,t,r,n){var o,i;for(o=0;o<r;++o)e[o]=0;for(o=0;o<30-r;++o)e[o+r]=o/r|0;for(i=n,o=0;o<30;++o)t[o]=i,i+=1<<e[o]}var g=new Uint16Array(16);function v(e,t,r,n){var o,i;for(o=0;o<16;++o)e.table[o]=0;for(o=0;o<n;++o)e.table[t[r+o]]++;for(o=i=e.table[0]=0;o<16;++o)g[o]=i,i+=e.table[o];for(o=0;o<n;++o)t[r+o]&&(e.trans[g[t[r+o]]++]=o)}function b(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function _(e,t,r){if(!t)return r;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,n+r}function x(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;for(var r=0,n=0,o=0,i=e.tag;n=2*n+(1&i),i>>>=1,++o,r+=t.table[o],0<=(n-=t.table[o]););return e.tag=i,e.bitcount-=o,t.trans[r+n]}function w(e,t,r){var n,o,i,a,s,l;for(n=_(e,5,257),o=_(e,5,1),i=_(e,4,4),a=0;a<19;++a)m[a]=0;for(a=0;a<i;++a){var u=_(e,3,0);m[p[a]]=u}for(v(y,m,0,19),s=0;s<n+o;){var c=x(e,y);switch(c){case 16:var d=m[s-1];for(l=_(e,2,3);l;--l)m[s++]=d;break;case 17:for(l=_(e,3,3);l;--l)m[s++]=0;break;case 18:for(l=_(e,7,11);l;--l)m[s++]=0;break;default:m[s++]=c}}v(t,m,0,n),v(r,m,n,o)}function j(e,t,r){for(;;){var n,o,i,a,s=x(e,t);if(256===s)return l;if(s<256)e.dest[e.destLen++]=s;else for(n=_(e,c[s-=257],d[s]),o=x(e,r),a=i=e.destLen-_(e,f[o],h[o]);a<i+n;++a)e.dest[e.destLen++]=e.dest[a]}}function S(e){for(var t,r;8<e.bitcount;)e.sourceIndex--,e.bitcount-=8;if((t=256*(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return i;for(e.sourceIndex+=4,r=t;r;--r)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,l}!function(e,t){var r;for(r=0;r<7;++r)e.table[r]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,r=0;r<24;++r)e.trans[r]=256+r;for(r=0;r<144;++r)e.trans[24+r]=r;for(r=0;r<8;++r)e.trans[168+r]=280+r;for(r=0;r<112;++r)e.trans[176+r]=144+r;for(r=0;r<5;++r)t.table[r]=0;for(t.table[5]=32,r=0;r<32;++r)t.trans[r]=r}(s,u),n(c,d,4,3),n(f,h,2,1),c[28]=0,d[28]=258;var o=function(e,t){var r,n,o=new a(e,t);do{switch(r=b(o),_(o,2,0)){case 0:n=S(o);break;case 1:n=j(o,s,u);break;case 2:w(o,o.ltree,o.dtree),n=j(o,o.ltree,o.dtree);break;default:n=i}if(n!==l)throw new Error("Data error")}while(!r);return o.destLen<o.dest.length?"function"==typeof o.dest.slice?o.dest.slice(0,o.destLen):o.dest.subarray(0,o.destLen):o.dest};function E(e,t,r,n,o){return Math.pow(1-o,3)*e+3*Math.pow(1-o,2)*o*t+3*(1-o)*Math.pow(o,2)*r+Math.pow(o,3)*n}function T(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}function D(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}function O(e){throw new Error(e)}function C(e,t){e||O(t)}T.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},T.prototype.addPoint=function(e,t){"number"==typeof e&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=e,this.x2=e),e<this.x1&&(this.x1=e),e>this.x2&&(this.x2=e)),"number"==typeof t&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=t,this.y2=t),t<this.y1&&(this.y1=t),t>this.y2&&(this.y2=t))},T.prototype.addX=function(e){this.addPoint(e,null)},T.prototype.addY=function(e){this.addPoint(null,e)},T.prototype.addBezier=function(e,t,r,n,o,i,a,s){var l=[e,t],u=[r,n],c=[o,i],d=[a,s];this.addPoint(e,t),this.addPoint(a,s);for(var f=0;f<=1;f++){var h=6*l[f]-12*u[f]+6*c[f],p=-3*l[f]+9*u[f]-9*c[f]+3*d[f],y=3*u[f]-3*l[f];if(0!=p){var m=Math.pow(h,2)-4*y*p;if(!(m<0)){var g=(-h+Math.sqrt(m))/(2*p);0<g&&g<1&&(0===f&&this.addX(E(l[f],u[f],c[f],d[f],g)),1===f&&this.addY(E(l[f],u[f],c[f],d[f],g)));var v=(-h-Math.sqrt(m))/(2*p);0<v&&v<1&&(0===f&&this.addX(E(l[f],u[f],c[f],d[f],v)),1===f&&this.addY(E(l[f],u[f],c[f],d[f],v)))}}else{if(0==h)continue;var b=-y/h;0<b&&b<1&&(0===f&&this.addX(E(l[f],u[f],c[f],d[f],b)),1===f&&this.addY(E(l[f],u[f],c[f],d[f],b)))}}},T.prototype.addQuad=function(e,t,r,n,o,i){var a=e+2/3*(r-e),s=t+2/3*(n-t),l=a+1/3*(o-e),u=s+1/3*(i-t);this.addBezier(e,t,a,s,l,u,o,i)},D.prototype.moveTo=function(e,t){this.commands.push({type:"M",x:e,y:t})},D.prototype.lineTo=function(e,t){this.commands.push({type:"L",x:e,y:t})},D.prototype.curveTo=D.prototype.bezierCurveTo=function(e,t,r,n,o,i){this.commands.push({type:"C",x1:e,y1:t,x2:r,y2:n,x:o,y:i})},D.prototype.quadTo=D.prototype.quadraticCurveTo=function(e,t,r,n){this.commands.push({type:"Q",x1:e,y1:t,x:r,y:n})},D.prototype.close=D.prototype.closePath=function(){this.commands.push({type:"Z"})},D.prototype.extend=function(e){if(e.commands)e=e.commands;else if(e instanceof T){var t=e;return this.moveTo(t.x1,t.y1),this.lineTo(t.x2,t.y1),this.lineTo(t.x2,t.y2),this.lineTo(t.x1,t.y2),void this.close()}Array.prototype.push.apply(this.commands,e)},D.prototype.getBoundingBox=function(){for(var e=new T,t=0,r=0,n=0,o=0,i=0;i<this.commands.length;i++){var a=this.commands[i];switch(a.type){case"M":e.addPoint(a.x,a.y),t=n=a.x,r=o=a.y;break;case"L":e.addPoint(a.x,a.y),n=a.x,o=a.y;break;case"Q":e.addQuad(n,o,a.x1,a.y1,a.x,a.y),n=a.x,o=a.y;break;case"C":e.addBezier(n,o,a.x1,a.y1,a.x2,a.y2,a.x,a.y),n=a.x,o=a.y;break;case"Z":n=t,o=r;break;default:throw new Error("Unexpected path command "+a.type)}}return e.isEmpty()&&e.addPoint(0,0),e},D.prototype.draw=function(e){e.beginPath();for(var t=0;t<this.commands.length;t+=1){var r=this.commands[t];"M"===r.type?e.moveTo(r.x,r.y):"L"===r.type?e.lineTo(r.x,r.y):"C"===r.type?e.bezierCurveTo(r.x1,r.y1,r.x2,r.y2,r.x,r.y):"Q"===r.type?e.quadraticCurveTo(r.x1,r.y1,r.x,r.y):"Z"===r.type&&e.closePath()}this.fill&&(e.fillStyle=this.fill,e.fill()),this.stroke&&(e.strokeStyle=this.stroke,e.lineWidth=this.strokeWidth,e.stroke())},D.prototype.toPathData=function(i){function e(){for(var e,t=arguments,r="",n=0;n<arguments.length;n+=1){var o=t[n];0<=o&&0<n&&(r+=" "),r+=(e=o,Math.round(e)===e?""+Math.round(e):e.toFixed(i))}return r}i=void 0!==i?i:2;for(var t="",r=0;r<this.commands.length;r+=1){var n=this.commands[r];"M"===n.type?t+="M"+e(n.x,n.y):"L"===n.type?t+="L"+e(n.x,n.y):"C"===n.type?t+="C"+e(n.x1,n.y1,n.x2,n.y2,n.x,n.y):"Q"===n.type?t+="Q"+e(n.x1,n.y1,n.x,n.y):"Z"===n.type&&(t+="Z")}return t},D.prototype.toSVG=function(e){var t='<path d="';return t+=this.toPathData(e),t+='"',this.fill&&"black"!==this.fill&&(null===this.fill?t+=' fill="none"':t+=' fill="'+this.fill+'"'),this.stroke&&(t+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),t+="/>"},D.prototype.toDOMElement=function(e){var t=this.toPathData(e),r=document.createElementNS("http://www.w3.org/2000/svg","path");return r.setAttribute("d",t),r};var L={fail:O,argument:C,assert:C},P={},A={},k={};function R(e){return function(){return e}}A.BYTE=function(e){return L.argument(0<=e&&e<=255,"Byte value should be between 0 and 255."),[e]},k.BYTE=R(1),A.CHAR=function(e){return[e.charCodeAt(0)]},k.CHAR=R(1),A.CHARARRAY=function(e){for(var t=[],r=0;r<e.length;r+=1)t[r]=e.charCodeAt(r);return t},k.CHARARRAY=function(e){return e.length},A.USHORT=function(e){return[e>>8&255,255&e]},k.USHORT=R(2),A.SHORT=function(e){return 32768<=e&&(e=-(65536-e)),[e>>8&255,255&e]},k.SHORT=R(2),A.UINT24=function(e){return[e>>16&255,e>>8&255,255&e]},k.UINT24=R(3),A.ULONG=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},k.ULONG=R(4),A.LONG=function(e){return 2147483648<=e&&(e=-(4294967296-e)),[e>>24&255,e>>16&255,e>>8&255,255&e]},k.LONG=R(4),A.FIXED=A.ULONG,k.FIXED=k.ULONG,A.FWORD=A.SHORT,k.FWORD=k.SHORT,A.UFWORD=A.USHORT,k.UFWORD=k.USHORT,A.LONGDATETIME=function(e){return[0,0,0,0,e>>24&255,e>>16&255,e>>8&255,255&e]},k.LONGDATETIME=R(8),A.TAG=function(e){return L.argument(4===e.length,"Tag should be exactly 4 ASCII characters."),[e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]},k.TAG=R(4),A.Card8=A.BYTE,k.Card8=k.BYTE,A.Card16=A.USHORT,k.Card16=k.USHORT,A.OffSize=A.BYTE,k.OffSize=k.BYTE,A.SID=A.USHORT,k.SID=k.USHORT,A.NUMBER=function(e){return-107<=e&&e<=107?[e+139]:108<=e&&e<=1131?[247+((e-=108)>>8),255&e]:-1131<=e&&e<=-108?[251+((e=-e-108)>>8),255&e]:-32768<=e&&e<=32767?A.NUMBER16(e):A.NUMBER32(e)},k.NUMBER=function(e){return A.NUMBER(e).length},A.NUMBER16=function(e){return[28,e>>8&255,255&e]},k.NUMBER16=R(3),A.NUMBER32=function(e){return[29,e>>24&255,e>>16&255,e>>8&255,255&e]},k.NUMBER32=R(5),A.REAL=function(e){var t=e.toString(),r=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var n=parseFloat("1e"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*n)/n).toString()}for(var o="",i=0,a=t.length;i<a;i+=1){var s=t[i];o+="e"===s?"-"===t[++i]?"c":"b":"."===s?"a":"-"===s?"e":s}for(var l=[30],u=0,c=(o+=1&o.length?"f":"ff").length;u<c;u+=2)l.push(parseInt(o.substr(u,2),16));return l},k.REAL=function(e){return A.REAL(e).length},A.NAME=A.CHARARRAY,k.NAME=k.CHARARRAY,A.STRING=A.CHARARRAY,k.STRING=k.CHARARRAY,P.UTF8=function(e,t,r){for(var n=[],o=r,i=0;i<o;i++,t+=1)n[i]=e.getUint8(t);return String.fromCharCode.apply(null,n)},P.UTF16=function(e,t,r){for(var n=[],o=r/2,i=0;i<o;i++,t+=2)n[i]=e.getUint16(t);return String.fromCharCode.apply(null,n)},A.UTF16=function(e){for(var t=[],r=0;r<e.length;r+=1){var n=e.charCodeAt(r);t[t.length]=n>>8&255,t[t.length]=255&n}return t},k.UTF16=function(e){return 2*e.length};var I={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",macintosh:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};P.MACSTRING=function(e,t,r,n){var o=I[n];if(void 0!==o){for(var i="",a=0;a<r;a++){var s=e.getUint8(t+a);i+=s<=127?String.fromCharCode(s):o[127&s]}return i}};var U,N="function"==typeof WeakMap&&new WeakMap;function F(e){return-128<=e&&e<=127}function B(e,t,r){for(var n=0,o=e.length;t<o&&n<64&&0===e[t];)++t,++n;return r.push(128|n-1),t}function G(e,t,r){for(var n=0,o=e.length,i=t;i<o&&n<64;){var a=e[i];if(!F(a))break;if(0===a&&i+1<o&&0===e[i+1])break;++i,++n}r.push(n-1);for(var s=t;s<i;++s)r.push(e[s]+256&255);return i}function V(e,t,r){for(var n=0,o=e.length,i=t;i<o&&n<64;){var a=e[i];if(0===a)break;if(F(a)&&i+1<o&&F(e[i+1]))break;++i,++n}r.push(64|n-1);for(var s=t;s<i;++s){var l=e[s];r.push(l+65536>>8&255,l+256&255)}return i}A.MACSTRING=function(e,t){var r=function(e){if(!U)for(var t in U={},I)U[t]=new String(t);var r=U[e];if(void 0!==r){if(N){var n=N.get(r);if(void 0!==n)return n}var o=I[e];if(void 0!==o){for(var i={},a=0;a<o.length;a++)i[o.charCodeAt(a)]=a+128;return N&&N.set(r,i),i}}}(t);if(void 0!==r){for(var n=[],o=0;o<e.length;o++){var i=e.charCodeAt(o);if(128<=i&&void 0===(i=r[i]))return;n[o]=i}return n}},k.MACSTRING=function(e,t){var r=A.MACSTRING(e,t);return void 0!==r?r.length:0},A.VARDELTAS=function(e){for(var t=0,r=[];t<e.length;){var n=e[t];t=0===n?B(e,t,r):-128<=n&&n<=127?G(e,t,r):V(e,t,r)}return r},A.INDEX=function(e){for(var t=1,r=[t],n=[],o=0;o<e.length;o+=1){var i=A.OBJECT(e[o]);Array.prototype.push.apply(n,i),t+=i.length,r.push(t)}if(0===n.length)return[0,0];for(var a=[],s=1+Math.floor(Math.log(t)/Math.log(2))/8|0,l=[void 0,A.BYTE,A.USHORT,A.UINT24,A.ULONG][s],u=0;u<r.length;u+=1){var c=l(r[u]);Array.prototype.push.apply(a,c)}return Array.prototype.concat(A.Card16(e.length),A.OffSize(s),a,n)},k.INDEX=function(e){return A.INDEX(e).length},A.DICT=function(e){for(var t=[],r=Object.keys(e),n=r.length,o=0;o<n;o+=1){var i=parseInt(r[o],0),a=e[i];t=(t=t.concat(A.OPERAND(a.value,a.type))).concat(A.OPERATOR(i))}return t},k.DICT=function(e){return A.DICT(e).length},A.OPERATOR=function(e){return e<1200?[e]:[12,e-1200]},A.OPERAND=function(e,t){var r=[];if(Array.isArray(t))for(var n=0;n<t.length;n+=1)L.argument(e.length===t.length,"Not enough arguments given for type"+t),r=r.concat(A.OPERAND(e[n],t[n]));else if("SID"===t)r=r.concat(A.NUMBER(e));else if("offset"===t)r=r.concat(A.NUMBER32(e));else if("number"===t)r=r.concat(A.NUMBER(e));else{if("real"!==t)throw new Error("Unknown operand type "+t);r=r.concat(A.REAL(e))}return r},A.OP=A.BYTE,k.OP=k.BYTE;var z="function"==typeof WeakMap&&new WeakMap;function H(e,t,r){for(var n=0;n<t.length;n+=1){var o=t[n];this[o.name]=o.value}if(this.tableName=e,this.fields=t,r)for(var i=Object.keys(r),a=0;a<i.length;a+=1){var s=i[a],l=r[s];void 0!==this[s]&&(this[s]=l)}}function W(e,t,r){void 0===r&&(r=t.length);var n=new Array(t.length+1);n[0]={name:e+"Count",type:"USHORT",value:r};for(var o=0;o<t.length;o++)n[o+1]={name:e+o,type:"USHORT",value:t[o]};return n}function q(e,t,r){var n=t.length,o=new Array(n+1);o[0]={name:e+"Count",type:"USHORT",value:n};for(var i=0;i<n;i++)o[i+1]={name:e+i,type:"TABLE",value:r(t[i],i)};return o}function X(e,t,r){var n=t.length,o=[];o[0]={name:e+"Count",type:"USHORT",value:n};for(var i=0;i<n;i++)o=o.concat(r(t[i],i));return o}function Y(e){1===e.format?H.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(W("glyph",e.glyphs))):L.assert(!1,"Can't create coverage table format 2 yet.")}function Z(e){H.call(this,"scriptListTable",X("scriptRecord",e,function(e,t){var r=e.script,n=r.defaultLangSys;return L.assert(!!n,"Unable to write GSUB: script "+e.tag+" has no default language system."),[{name:"scriptTag"+t,type:"TAG",value:e.tag},{name:"script"+t,type:"TABLE",value:new H("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new H("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:n.reqFeatureIndex}].concat(W("featureIndex",n.featureIndexes)))}].concat(X("langSys",r.langSysRecords,function(e,t){var r=e.langSys;return[{name:"langSysTag"+t,type:"TAG",value:e.tag},{name:"langSys"+t,type:"TABLE",value:new H("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:r.reqFeatureIndex}].concat(W("featureIndex",r.featureIndexes)))}]})))}]}))}function Q(e){H.call(this,"featureListTable",X("featureRecord",e,function(e,t){var r=e.feature;return[{name:"featureTag"+t,type:"TAG",value:e.tag},{name:"feature"+t,type:"TABLE",value:new H("featureTable",[{name:"featureParams",type:"USHORT",value:r.featureParams}].concat(W("lookupListIndex",r.lookupListIndexes)))}]}))}function K(e,r){H.call(this,"lookupListTable",q("lookup",e,function(e){var t=r[e.lookupType];return L.assert(!!t,"Unable to write GSUB lookup type "+e.lookupType+" tables."),new H("lookupTable",[{name:"lookupType",type:"USHORT",value:e.lookupType},{name:"lookupFlag",type:"USHORT",value:e.lookupFlag}].concat(q("subtable",e.subtables,t)))}))}A.CHARSTRING=function(e){if(z){var t=z.get(e);if(void 0!==t)return t}for(var r=[],n=e.length,o=0;o<n;o+=1){var i=e[o];r=r.concat(A[i.type](i.value))}return z&&z.set(e,r),r},k.CHARSTRING=function(e){return A.CHARSTRING(e).length},A.OBJECT=function(e){var t=A[e.type];return L.argument(void 0!==t,"No encoding function for type "+e.type),t(e.value)},k.OBJECT=function(e){var t=k[e.type];return L.argument(void 0!==t,"No sizeOf function for type "+e.type),t(e.value)},A.TABLE=function(e){for(var t=[],r=e.fields.length,n=[],o=[],i=0;i<r;i+=1){var a=e.fields[i],s=A[a.type];L.argument(void 0!==s,"No encoding function for field type "+a.type+" ("+a.name+")");var l=e[a.name];void 0===l&&(l=a.value);var u=s(l);"TABLE"===a.type?(o.push(t.length),t=t.concat([0,0]),n.push(u)):t=t.concat(u)}for(var c=0;c<n.length;c+=1){var d=o[c],f=t.length;L.argument(f<65536,"Table "+e.tableName+" too big."),t[d]=f>>8,t[d+1]=255&f,t=t.concat(n[c])}return t},k.TABLE=function(e){for(var t=0,r=e.fields.length,n=0;n<r;n+=1){var o=e.fields[n],i=k[o.type];L.argument(void 0!==i,"No sizeOf function for field type "+o.type+" ("+o.name+")");var a=e[o.name];void 0===a&&(a=o.value),t+=i(a),"TABLE"===o.type&&(t+=2)}return t},A.RECORD=A.TABLE,k.RECORD=k.TABLE,A.LITERAL=function(e){return e},k.LITERAL=function(e){return e.length},H.prototype.encode=function(){return A.TABLE(this)},H.prototype.sizeOf=function(){return k.TABLE(this)};var J={Table:H,Record:H,Coverage:(Y.prototype=Object.create(H.prototype)).constructor=Y,ScriptList:(Z.prototype=Object.create(H.prototype)).constructor=Z,FeatureList:(Q.prototype=Object.create(H.prototype)).constructor=Q,LookupList:(K.prototype=Object.create(H.prototype)).constructor=K,ushortList:W,tableList:q,recordList:X};function $(e,t){return e.getUint8(t)}function ee(e,t){return e.getUint16(t,!1)}function te(e,t){return e.getUint32(t,!1)}function re(e,t){return e.getInt16(t,!1)+e.getUint16(t+2,!1)/65535}var ne={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};function oe(e,t){this.data=e,this.offset=t,this.relativeOffset=0}oe.prototype.parseByte=function(){var e=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},oe.prototype.parseChar=function(){var e=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},oe.prototype.parseCard8=oe.prototype.parseByte,oe.prototype.parseCard16=oe.prototype.parseUShort=function(){var e=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},oe.prototype.parseSID=oe.prototype.parseUShort,oe.prototype.parseOffset16=oe.prototype.parseUShort,oe.prototype.parseShort=function(){var e=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},oe.prototype.parseF2Dot14=function(){var e=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,e},oe.prototype.parseOffset32=oe.prototype.parseULong=function(){var e=te(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},oe.prototype.parseFixed=function(){var e=re(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},oe.prototype.parseString=function(e){var t=this.data,r=this.offset+this.relativeOffset,n="";this.relativeOffset+=e;for(var o=0;o<e;o++)n+=String.fromCharCode(t.getUint8(r+o));return n},oe.prototype.parseTag=function(){return this.parseString(4)},oe.prototype.parseLongDateTime=function(){var e=te(this.data,this.offset+this.relativeOffset+4);return e-=2082844800,this.relativeOffset+=8,e},oe.prototype.parseVersion=function(e){var t=ee(this.data,this.offset+this.relativeOffset),r=ee(this.data,this.offset+this.relativeOffset+2);return this.relativeOffset+=4,void 0===e&&(e=4096),t+r/e/10},oe.prototype.skip=function(e,t){void 0===t&&(t=1),this.relativeOffset+=ne[e]*t},oe.prototype.parseULongList=function(e){void 0===e&&(e=this.parseULong());for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getUint32(n),n+=4;return this.relativeOffset+=4*e,t},oe.prototype.parseOffset16List=oe.prototype.parseUShortList=function(e){void 0===e&&(e=this.parseUShort());for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getUint16(n),n+=2;return this.relativeOffset+=2*e,t},oe.prototype.parseShortList=function(e){for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getInt16(n),n+=2;return this.relativeOffset+=2*e,t},oe.prototype.parseByteList=function(e){for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getUint8(n++);return this.relativeOffset+=e,t},oe.prototype.parseList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),n=0;n<e;n++)r[n]=t.call(this);return r},oe.prototype.parseList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),n=0;n<e;n++)r[n]=t.call(this);return r},oe.prototype.parseRecordList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),n=Object.keys(t),o=0;o<e;o++){for(var i={},a=0;a<n.length;a++){var s=n[a],l=t[s];i[s]=l.call(this)}r[o]=i}return r},oe.prototype.parseRecordList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),n=Object.keys(t),o=0;o<e;o++){for(var i={},a=0;a<n.length;a++){var s=n[a],l=t[s];i[s]=l.call(this)}r[o]=i}return r},oe.prototype.parseStruct=function(e){if("function"==typeof e)return e.call(this);for(var t=Object.keys(e),r={},n=0;n<t.length;n++){var o=t[n],i=e[o];r[o]=i.call(this)}return r},oe.prototype.parseValueRecord=function(e){if(void 0===e&&(e=this.parseUShort()),0!==e){var t={};return 1&e&&(t.xPlacement=this.parseShort()),2&e&&(t.yPlacement=this.parseShort()),4&e&&(t.xAdvance=this.parseShort()),8&e&&(t.yAdvance=this.parseShort()),16&e&&(t.xPlaDevice=void 0,this.parseShort()),32&e&&(t.yPlaDevice=void 0,this.parseShort()),64&e&&(t.xAdvDevice=void 0,this.parseShort()),128&e&&(t.yAdvDevice=void 0,this.parseShort()),t}},oe.prototype.parseValueRecordList=function(){for(var e=this.parseUShort(),t=this.parseUShort(),r=new Array(t),n=0;n<t;n++)r[n]=this.parseValueRecord(e);return r},oe.prototype.parsePointer=function(e){var t=this.parseOffset16();if(0<t)return new oe(this.data,this.offset+t).parseStruct(e)},oe.prototype.parsePointer32=function(e){var t=this.parseOffset32();if(0<t)return new oe(this.data,this.offset+t).parseStruct(e)},oe.prototype.parseListOfLists=function(e){for(var t=this.parseOffset16List(),r=t.length,n=this.relativeOffset,o=new Array(r),i=0;i<r;i++){var a=t[i];if(0!==a)if(this.relativeOffset=a,e){for(var s=this.parseOffset16List(),l=new Array(s.length),u=0;u<s.length;u++)this.relativeOffset=a+s[u],l[u]=e.call(this);o[i]=l}else o[i]=this.parseUShortList();else o[i]=void 0}return this.relativeOffset=n,o},oe.prototype.parseCoverage=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort(),r=this.parseUShort();if(1===t)return{format:1,glyphs:this.parseUShortList(r)};if(2!==t)throw new Error("0x"+e.toString(16)+": Coverage format must be 1 or 2.");for(var n=new Array(r),o=0;o<r;o++)n[o]={start:this.parseUShort(),end:this.parseUShort(),index:this.parseUShort()};return{format:2,ranges:n}},oe.prototype.parseClassDef=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===t)return{format:2,ranges:this.parseRecordList({start:oe.uShort,end:oe.uShort,classId:oe.uShort})};throw new Error("0x"+e.toString(16)+": ClassDef format must be 1 or 2.")},oe.list=function(e,t){return function(){return this.parseList(e,t)}},oe.list32=function(e,t){return function(){return this.parseList32(e,t)}},oe.recordList=function(e,t){return function(){return this.parseRecordList(e,t)}},oe.recordList32=function(e,t){return function(){return this.parseRecordList32(e,t)}},oe.pointer=function(e){return function(){return this.parsePointer(e)}},oe.pointer32=function(e){return function(){return this.parsePointer32(e)}},oe.tag=oe.prototype.parseTag,oe.byte=oe.prototype.parseByte,oe.uShort=oe.offset16=oe.prototype.parseUShort,oe.uShortList=oe.prototype.parseUShortList,oe.uLong=oe.offset32=oe.prototype.parseULong,oe.uLongList=oe.prototype.parseULongList,oe.struct=oe.prototype.parseStruct,oe.coverage=oe.prototype.parseCoverage,oe.classDef=oe.prototype.parseClassDef;var ie={reserved:oe.uShort,reqFeatureIndex:oe.uShort,featureIndexes:oe.uShortList};oe.prototype.parseScriptList=function(){return this.parsePointer(oe.recordList({tag:oe.tag,script:oe.pointer({defaultLangSys:oe.pointer(ie),langSysRecords:oe.recordList({tag:oe.tag,langSys:oe.pointer(ie)})})}))||[]},oe.prototype.parseFeatureList=function(){return this.parsePointer(oe.recordList({tag:oe.tag,feature:oe.pointer({featureParams:oe.offset16,lookupListIndexes:oe.uShortList})}))||[]},oe.prototype.parseLookupList=function(n){return this.parsePointer(oe.list(oe.pointer(function(){var e=this.parseUShort();L.argument(1<=e&&e<=9,"GPOS/GSUB lookup type "+e+" unknown.");var t=this.parseUShort(),r=16&t;return{lookupType:e,lookupFlag:t,subtables:this.parseList(oe.pointer(n[e])),markFilteringSet:r?this.parseUShort():void 0}})))||[]},oe.prototype.parseFeatureVariationsList=function(){return this.parsePointer32(function(){var e=this.parseUShort(),t=this.parseUShort();return L.argument(1===e&&t<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:oe.offset32,featureTableSubstitutionOffset:oe.offset32})})||[]};var ae={getByte:$,getCard8:$,getUShort:ee,getCard16:ee,getShort:function(e,t){return e.getInt16(t,!1)},getULong:te,getFixed:re,getTag:function(e,t){for(var r="",n=t;n<t+4;n+=1)r+=String.fromCharCode(e.getInt8(n));return r},getOffset:function(e,t,r){for(var n=0,o=0;o<r;o+=1)n<<=8,n+=e.getUint8(t+o);return n},getBytes:function(e,t,r){for(var n=[],o=t;o<r;o+=1)n.push(e.getUint8(o));return n},bytesToString:function(e){for(var t="",r=0;r<e.length;r+=1)t+=String.fromCharCode(e[r]);return t},Parser:oe};var se={parse:function(e,t){var r={};r.version=ae.getUShort(e,t),L.argument(0===r.version,"cmap table version should be 0."),r.numTables=ae.getUShort(e,t+2);for(var n=-1,o=r.numTables-1;0<=o;--o){var i=ae.getUShort(e,t+4+8*o),a=ae.getUShort(e,t+4+8*o+2);if(3===i&&(0===a||1===a||10===a)||0===i&&(0===a||1===a||2===a||3===a||4===a)){n=ae.getULong(e,t+4+8*o+4);break}}if(-1===n)throw new Error("No valid cmap sub-tables found.");var s=new ae.Parser(e,t+n);if(r.format=s.parseUShort(),12===r.format)!function(e,t){var r;t.parseUShort(),e.length=t.parseULong(),e.language=t.parseULong(),e.groupCount=r=t.parseULong(),e.glyphIndexMap={};for(var n=0;n<r;n+=1)for(var o=t.parseULong(),i=t.parseULong(),a=t.parseULong(),s=o;s<=i;s+=1)e.glyphIndexMap[s]=a,a++}(r,s);else{if(4!==r.format)throw new Error("Only format 4 and 12 cmap tables are supported (found format "+r.format+").");!function(e,t,r,n,o){var i;e.length=t.parseUShort(),e.language=t.parseUShort(),e.segCount=i=t.parseUShort()>>1,t.skip("uShort",3),e.glyphIndexMap={};for(var a=new ae.Parser(r,n+o+14),s=new ae.Parser(r,n+o+16+2*i),l=new ae.Parser(r,n+o+16+4*i),u=new ae.Parser(r,n+o+16+6*i),c=n+o+16+8*i,d=0;d<i-1;d+=1)for(var f=void 0,h=a.parseUShort(),p=s.parseUShort(),y=l.parseShort(),m=u.parseUShort(),g=p;g<=h;g+=1)0!==m?(c=u.offset+u.relativeOffset-2,c+=m,c+=2*(g-p),0!==(f=ae.getUShort(r,c))&&(f=f+y&65535)):f=g+y&65535,e.glyphIndexMap[g]=f}(r,s,e,t,n)}return r},make:function(e){var t,r=!0;for(t=e.length-1;0<t;--t){if(65535<e.get(t).unicode){console.log("Adding CMAP format 12 (needed!)"),r=!1;break}}var n=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:r?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:r?12:20}];r||(n=n.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),n=n.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var o,i,a,s=new J.Table("cmap",n);for(s.segments=[],t=0;t<e.length;t+=1){for(var l=e.get(t),u=0;u<l.unicodes.length;u+=1)o=s,i=l.unicodes[u],a=t,o.segments.push({end:i,start:i,delta:-(i-a),offset:0,glyphIndex:a});s.segments=s.segments.sort(function(e,t){return e.start-t.start})}s.segments.push({end:65535,start:65535,delta:1,offset:0});var c=s.segments.length,d=0,f=[],h=[],p=[],y=[],m=[],g=[];for(t=0;t<c;t+=1){var v=s.segments[t];v.end<=65535&&v.start<=65535?(f=f.concat({name:"end_"+t,type:"USHORT",value:v.end}),h=h.concat({name:"start_"+t,type:"USHORT",value:v.start}),p=p.concat({name:"idDelta_"+t,type:"SHORT",value:v.delta}),y=y.concat({name:"idRangeOffset_"+t,type:"USHORT",value:v.offset}),void 0!==v.glyphId&&(m=m.concat({name:"glyph_"+t,type:"USHORT",value:v.glyphId}))):d+=1,r||void 0===v.glyphIndex||(g=(g=(g=g.concat({name:"cmap12Start_"+t,type:"ULONG",value:v.start})).concat({name:"cmap12End_"+t,type:"ULONG",value:v.end})).concat({name:"cmap12Glyph_"+t,type:"ULONG",value:v.glyphIndex}))}if(s.segCountX2=2*(c-d),s.searchRange=2*Math.pow(2,Math.floor(Math.log(c-d)/Math.log(2))),s.entrySelector=Math.log(s.searchRange/2)/Math.log(2),s.rangeShift=s.segCountX2-s.searchRange,s.fields=s.fields.concat(f),s.fields.push({name:"reservedPad",type:"USHORT",value:0}),s.fields=s.fields.concat(h),s.fields=s.fields.concat(p),s.fields=s.fields.concat(y),s.fields=s.fields.concat(m),s.cmap4Length=14+2*f.length+2+2*h.length+2*p.length+2*y.length+2*m.length,!r){var b=16+4*g.length;s.cmap12Offset=20+s.cmap4Length,s.fields=s.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:b},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:g.length/3}]),s.fields=s.fields.concat(g)}return s}},le=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],ue=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],ce=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],de=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];function fe(e){this.font=e}function he(e){this.cmap=e}function pe(e,t){this.encoding=e,this.charset=t}function ye(e){switch(e.version){case 1:this.names=de.slice();break;case 2:this.names=new Array(e.numberOfGlyphs);for(var t=0;t<e.numberOfGlyphs;t++)e.glyphNameIndex[t]<de.length?this.names[t]=de[e.glyphNameIndex[t]]:this.names[t]=e.names[e.glyphNameIndex[t]-de.length];break;case 2.5:this.names=new Array(e.numberOfGlyphs);for(var r=0;r<e.numberOfGlyphs;r++)this.names[r]=de[r+e.glyphNameIndex[r]];break;case 3:default:this.names=[]}}fe.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.font.glyphs;if(r)for(var n=0;n<r.length;n+=1)for(var o=r.get(n),i=0;i<o.unicodes.length;i+=1)if(o.unicodes[i]===t)return n;return null},he.prototype.charToGlyphIndex=function(e){return this.cmap.glyphIndexMap[e.codePointAt(0)]||0},pe.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.encoding[t];return this.charset.indexOf(r)},ye.prototype.nameToGlyphIndex=function(e){return this.names.indexOf(e)},ye.prototype.glyphIndexToName=function(e){return this.names[e]};var me={line:function(e,t,r,n,o){e.beginPath(),e.moveTo(t,r),e.lineTo(n,o),e.stroke()}};function ge(e){this.bindConstructorValues(e)}function ve(t,e,r){Object.defineProperty(t,e,{get:function(){return t.path,t[r]},set:function(e){t[r]=e},enumerable:!0,configurable:!0})}function be(e,t){if(this.font=e,this.glyphs={},Array.isArray(t))for(var r=0;r<t.length;r++)this.glyphs[r]=t[r];this.length=t&&t.length||0}ge.prototype.bindConstructorValues=function(e){var t,r;this.index=e.index||0,this.name=e.name||null,this.unicode=e.unicode||void 0,this.unicodes=e.unicodes||void 0!==e.unicode?[e.unicode]:[],e.xMin&&(this.xMin=e.xMin),e.yMin&&(this.yMin=e.yMin),e.xMax&&(this.xMax=e.xMax),e.yMax&&(this.yMax=e.yMax),e.advanceWidth&&(this.advanceWidth=e.advanceWidth),Object.defineProperty(this,"path",(t=e.path,r=t||new D,{configurable:!0,get:function(){return"function"==typeof r&&(r=r()),r},set:function(e){r=e}}))},ge.prototype.addUnicode=function(e){0===this.unicodes.length&&(this.unicode=e),this.unicodes.push(e)},ge.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},ge.prototype.getPath=function(e,t,r,n,o){var i,a;e=void 0!==e?e:0,t=void 0!==t?t:0,r=void 0!==r?r:72;var s=(n=n||{}).xScale,l=n.yScale;if(n.hinting&&o&&o.hinting&&(a=this.path&&o.hinting.exec(this,r)),a)i=o.hinting.getCommands(a),e=Math.round(e),t=Math.round(t),s=l=1;else{i=this.path.commands;var u=1/this.path.unitsPerEm*r;void 0===s&&(s=u),void 0===l&&(l=u)}for(var c=new D,d=0;d<i.length;d+=1){var f=i[d];"M"===f.type?c.moveTo(e+f.x*s,t+-f.y*l):"L"===f.type?c.lineTo(e+f.x*s,t+-f.y*l):"Q"===f.type?c.quadraticCurveTo(e+f.x1*s,t+-f.y1*l,e+f.x*s,t+-f.y*l):"C"===f.type?c.curveTo(e+f.x1*s,t+-f.y1*l,e+f.x2*s,t+-f.y2*l,e+f.x*s,t+-f.y*l):"Z"===f.type&&c.closePath()}return c},ge.prototype.getContours=function(){if(void 0===this.points)return[];for(var e=[],t=[],r=0;r<this.points.length;r+=1){var n=this.points[r];t.push(n),n.lastPointOfContour&&(e.push(t),t=[])}return L.argument(0===t.length,"There are still points left in the current contour."),e},ge.prototype.getMetrics=function(){for(var e=this.path.commands,t=[],r=[],n=0;n<e.length;n+=1){var o=e[n];"Z"!==o.type&&(t.push(o.x),r.push(o.y)),"Q"!==o.type&&"C"!==o.type||(t.push(o.x1),r.push(o.y1)),"C"===o.type&&(t.push(o.x2),r.push(o.y2))}var i={xMin:Math.min.apply(null,t),yMin:Math.min.apply(null,r),xMax:Math.max.apply(null,t),yMax:Math.max.apply(null,r),leftSideBearing:this.leftSideBearing};return isFinite(i.xMin)||(i.xMin=0),isFinite(i.xMax)||(i.xMax=this.advanceWidth),isFinite(i.yMin)||(i.yMin=0),isFinite(i.yMax)||(i.yMax=0),i.rightSideBearing=this.advanceWidth-i.leftSideBearing-(i.xMax-i.xMin),i},ge.prototype.draw=function(e,t,r,n,o){this.getPath(t,r,n,o).draw(e)},ge.prototype.drawPoints=function(a,e,t,r){function n(e,t,r,n){var o=2*Math.PI;a.beginPath();for(var i=0;i<e.length;i+=1)a.moveTo(t+e[i].x*n,r+e[i].y*n),a.arc(t+e[i].x*n,r+e[i].y*n,2,0,o,!1);a.closePath(),a.fill()}e=void 0!==e?e:0,t=void 0!==t?t:0,r=void 0!==r?r:24;for(var o=1/this.path.unitsPerEm*r,i=[],s=[],l=this.path,u=0;u<l.commands.length;u+=1){var c=l.commands[u];void 0!==c.x&&i.push({x:c.x,y:-c.y}),void 0!==c.x1&&s.push({x:c.x1,y:-c.y1}),void 0!==c.x2&&s.push({x:c.x2,y:-c.y2})}a.fillStyle="blue",n(i,e,t,o),a.fillStyle="red",n(s,e,t,o)},ge.prototype.drawMetrics=function(e,t,r,n){var o;t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:24,o=1/this.path.unitsPerEm*n,e.lineWidth=1,e.strokeStyle="black",me.line(e,t,-1e4,t,1e4),me.line(e,-1e4,r,1e4,r);var i=this.xMin||0,a=this.yMin||0,s=this.xMax||0,l=this.yMax||0,u=this.advanceWidth||0;e.strokeStyle="blue",me.line(e,t+i*o,-1e4,t+i*o,1e4),me.line(e,t+s*o,-1e4,t+s*o,1e4),me.line(e,-1e4,r+-a*o,1e4,r+-a*o),me.line(e,-1e4,r+-l*o,1e4,r+-l*o),e.strokeStyle="green",me.line(e,t+u*o,-1e4,t+u*o,1e4)},be.prototype.get=function(e){return"function"==typeof this.glyphs[e]&&(this.glyphs[e]=this.glyphs[e]()),this.glyphs[e]},be.prototype.push=function(e,t){this.glyphs[e]=t,this.length++};var _e={GlyphSet:be,glyphLoader:function(e,t){return new ge({index:t,font:e})},ttfGlyphLoader:function(r,e,n,o,i,a){return function(){var t=new ge({index:e,font:r});return t.path=function(){n(t,o,i);var e=a(r.glyphs,t);return e.unitsPerEm=r.unitsPerEm,e},ve(t,"xMin","_xMin"),ve(t,"xMax","_xMax"),ve(t,"yMin","_yMin"),ve(t,"yMax","_yMax"),t}},cffGlyphLoader:function(r,e,n,o){return function(){var t=new ge({index:e,font:r});return t.path=function(){var e=n(r,t,o);return e.unitsPerEm=r.unitsPerEm,e},t}}};function xe(e,t){if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r+=1)if(!xe(e[r],t[r]))return!1;return!0}return!1}function we(e){return e.length<1240?107:e.length<33900?1131:32768}function je(e,t,r){var n,o,i=[],a=[],s=ae.getCard16(e,t);if(0!==s){var l=ae.getByte(e,t+2);n=t+(s+1)*l+2;for(var u=t+3,c=0;c<s+1;c+=1)i.push(ae.getOffset(e,u,l)),u+=l;o=n+i[s]}else o=t+2;for(var d=0;d<i.length-1;d+=1){var f=ae.getBytes(e,n+i[d],n+i[d+1]);r&&(f=r(f)),a.push(f)}return{objects:a,startOffset:t,endOffset:o}}function Se(e,t){if(28===t)return e.parseByte()<<8|e.parseByte();if(29===t)return e.parseByte()<<24|e.parseByte()<<16|e.parseByte()<<8|e.parseByte();if(30===t)return function(e){for(var t="",r=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var n=e.parseByte(),o=n>>4,i=15&n;if(15==o)break;if(t+=r[o],15==i)break;t+=r[i]}return parseFloat(t)}(e);if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.parseByte()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.parseByte()-108;throw new Error("Invalid b0 "+t)}function Me(e,t,r){t=void 0!==t?t:0;var n=new ae.Parser(e,t),o=[],i=[];for(r=void 0!==r?r:e.length;n.relativeOffset<r;){var a=n.parseByte();a<=21?(12===a&&(a=1200+n.parseByte()),o.push([a,i]),i=[]):i.push(Se(n,a))}return function(e){for(var t={},r=0;r<e.length;r+=1){var n=e[r][0],o=e[r][1],i=void 0;if(i=1===o.length?o[0]:o,t.hasOwnProperty(n)&&!isNaN(t[n]))throw new Error("Object "+t+" already has key "+n);t[n]=i}return t}(o)}function Ee(e,t){return t=t<=390?le[t]:e[t-391]}function Te(e,t,r){for(var n,o={},i=0;i<t.length;i+=1){var a=t[i];if(Array.isArray(a.type)){var s=[];s.length=a.type.length;for(var l=0;l<a.type.length;l++)void 0===(n=void 0!==e[a.op]?e[a.op][l]:void 0)&&(n=void 0!==a.value&&void 0!==a.value[l]?a.value[l]:null),"SID"===a.type[l]&&(n=Ee(r,n)),s[l]=n;o[a.name]=s}else void 0===(n=e[a.op])&&(n=void 0!==a.value?a.value:null),"SID"===a.type&&(n=Ee(r,n)),o[a.name]=n}return o}var Oe=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],Ce=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];function Le(e,t,r,n){return Te(Me(e,t,r),Ce,n)}function Pe(e,t,r,n){for(var o,i,a=[],s=0;s<r.length;s+=1){var l=new DataView(new Uint8Array(r[s]).buffer),u=(i=n,Te(Me(o=l,0,o.byteLength),Oe,i));u._subrs=[],u._subrsBias=0;var c=u.private[0],d=u.private[1];if(0!==c&&0!==d){var f=Le(e,d+t,c,n);if(u._defaultWidthX=f.defaultWidthX,u._nominalWidthX=f.nominalWidthX,0!==f.subrs){var h=je(e,d+f.subrs+t);u._subrs=h.objects,u._subrsBias=we(u._subrs)}u._privateDict=f}a.push(u)}return a}function Ae(m,g,e){var v,b,_,x,w,j,t,S,M=new D,E=[],T=0,O=!1,C=!1,L=0,P=0;if(m.isCIDFont){var r=m.tables.cff.topDict._fdSelect[g.index],n=m.tables.cff.topDict._fdArray[r];w=n._subrs,j=n._subrsBias,t=n._defaultWidthX,S=n._nominalWidthX}else w=m.tables.cff.topDict._subrs,j=m.tables.cff.topDict._subrsBias,t=m.tables.cff.topDict._defaultWidthX,S=m.tables.cff.topDict._nominalWidthX;var A=t;function k(e,t){C&&M.closePath(),M.moveTo(e,t),C=!0}function R(){E.length%2==0||O||(A=E.shift()+S),T+=E.length>>1,E.length=0,O=!0}return function e(t){for(var r,n,o,i,a,s,l,u,c,d,f,h,p=0;p<t.length;){var y=t[p];switch(p+=1,y){case 1:case 3:R();break;case 4:1<E.length&&!O&&(A=E.shift()+S,O=!0),P+=E.pop(),k(L,P);break;case 5:for(;0<E.length;)L+=E.shift(),P+=E.shift(),M.lineTo(L,P);break;case 6:for(;0<E.length&&(L+=E.shift(),M.lineTo(L,P),0!==E.length);)P+=E.shift(),M.lineTo(L,P);break;case 7:for(;0<E.length&&(P+=E.shift(),M.lineTo(L,P),0!==E.length);)L+=E.shift(),M.lineTo(L,P);break;case 8:for(;0<E.length;)v=L+E.shift(),b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),L=_+E.shift(),P=x+E.shift(),M.curveTo(v,b,_,x,L,P);break;case 10:a=E.pop()+j,(s=w[a])&&e(s);break;case 11:return;case 12:switch(y=t[p],p+=1,y){case 35:v=L+E.shift(),b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x+E.shift(),c=l+E.shift(),d=u+E.shift(),f=c+E.shift(),h=d+E.shift(),L=f+E.shift(),P=h+E.shift(),E.shift(),M.curveTo(v,b,_,x,l,u),M.curveTo(c,d,f,h,L,P);break;case 34:v=L+E.shift(),b=P,_=v+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x,c=l+E.shift(),d=x,f=c+E.shift(),h=P,L=f+E.shift(),M.curveTo(v,b,_,x,l,u),M.curveTo(c,d,f,h,L,P);break;case 36:v=L+E.shift(),b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x,c=l+E.shift(),d=x,f=c+E.shift(),h=d+E.shift(),L=f+E.shift(),M.curveTo(v,b,_,x,l,u),M.curveTo(c,d,f,h,L,P);break;case 37:v=L+E.shift(),b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x+E.shift(),c=l+E.shift(),d=u+E.shift(),f=c+E.shift(),h=d+E.shift(),Math.abs(f-L)>Math.abs(h-P)?L=f+E.shift():P=h+E.shift(),M.curveTo(v,b,_,x,l,u),M.curveTo(c,d,f,h,L,P);break;default:console.log("Glyph "+g.index+": unknown operator 1200"+y),E.length=0}break;case 14:0<E.length&&!O&&(A=E.shift()+S,O=!0),C&&(M.closePath(),C=!1);break;case 18:R();break;case 19:case 20:R(),p+=T+7>>3;break;case 21:2<E.length&&!O&&(A=E.shift()+S,O=!0),P+=E.pop(),k(L+=E.pop(),P);break;case 22:1<E.length&&!O&&(A=E.shift()+S,O=!0),k(L+=E.pop(),P);break;case 23:R();break;case 24:for(;2<E.length;)v=L+E.shift(),b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),L=_+E.shift(),P=x+E.shift(),M.curveTo(v,b,_,x,L,P);L+=E.shift(),P+=E.shift(),M.lineTo(L,P);break;case 25:for(;6<E.length;)L+=E.shift(),P+=E.shift(),M.lineTo(L,P);v=L+E.shift(),b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),L=_+E.shift(),P=x+E.shift(),M.curveTo(v,b,_,x,L,P);break;case 26:for(E.length%2&&(L+=E.shift());0<E.length;)v=L,b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),L=_,P=x+E.shift(),M.curveTo(v,b,_,x,L,P);break;case 27:for(E.length%2&&(P+=E.shift());0<E.length;)v=L+E.shift(),b=P,_=v+E.shift(),x=b+E.shift(),L=_+E.shift(),P=x,M.curveTo(v,b,_,x,L,P);break;case 28:r=t[p],n=t[p+1],E.push((r<<24|n<<16)>>16),p+=2;break;case 29:a=E.pop()+m.gsubrsBias,(s=m.gsubrs[a])&&e(s);break;case 30:for(;0<E.length&&(v=L,b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),L=_+E.shift(),P=x+(1===E.length?E.shift():0),M.curveTo(v,b,_,x,L,P),0!==E.length);)v=L+E.shift(),b=P,_=v+E.shift(),x=b+E.shift(),P=x+E.shift(),L=_+(1===E.length?E.shift():0),M.curveTo(v,b,_,x,L,P);break;case 31:for(;0<E.length&&(v=L+E.shift(),b=P,_=v+E.shift(),x=b+E.shift(),P=x+E.shift(),L=_+(1===E.length?E.shift():0),M.curveTo(v,b,_,x,L,P),0!==E.length);)v=L,b=P+E.shift(),_=v+E.shift(),x=b+E.shift(),L=_+E.shift(),P=x+(1===E.length?E.shift():0),M.curveTo(v,b,_,x,L,P);break;default:y<32?console.log("Glyph "+g.index+": unknown operator "+y):y<247?E.push(y-139):y<251?(r=t[p],p+=1,E.push(256*(y-247)+r+108)):y<255?(r=t[p],p+=1,E.push(256*-(y-251)-r-108)):(r=t[p],n=t[p+1],o=t[p+2],i=t[p+3],p+=4,E.push((r<<24|n<<16|o<<8|i)/65536))}}}(e),g.advanceWidth=A,M}function ke(e,t){var r,n=le.indexOf(e);return 0<=n&&(r=n),0<=(n=t.indexOf(e))?r=n+le.length:(r=le.length+t.length,t.push(e)),r}function Re(e,t,r){for(var n={},o=0;o<e.length;o+=1){var i=e[o],a=t[i.name];void 0===a||xe(a,i.value)||("SID"===i.type&&(a=ke(a,r)),n[i.op]={name:i.name,type:i.type,value:a})}return n}function De(e,t){var r=new J.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return r.dict=Re(Oe,e,t),r}function Ie(e){var t=new J.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return t.topDicts=[{name:"topDict_0",type:"TABLE",value:e}],t}function Ue(e){var t=[],r=e.path;t.push({name:"width",type:"NUMBER",value:e.advanceWidth});for(var n=0,o=0,i=0;i<r.commands.length;i+=1){var a=void 0,s=void 0,l=r.commands[i];if("Q"===l.type){l={type:"C",x:l.x,y:l.y,x1:1/3*n+2/3*l.x1,y1:1/3*o+2/3*l.y1,x2:1/3*l.x+2/3*l.x1,y2:1/3*l.y+2/3*l.y1}}if("M"===l.type)a=Math.round(l.x-n),s=Math.round(l.y-o),t.push({name:"dx",type:"NUMBER",value:a}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rmoveto",type:"OP",value:21}),n=Math.round(l.x),o=Math.round(l.y);else if("L"===l.type)a=Math.round(l.x-n),s=Math.round(l.y-o),t.push({name:"dx",type:"NUMBER",value:a}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rlineto",type:"OP",value:5}),n=Math.round(l.x),o=Math.round(l.y);else if("C"===l.type){var u=Math.round(l.x1-n),c=Math.round(l.y1-o),d=Math.round(l.x2-l.x1),f=Math.round(l.y2-l.y1);a=Math.round(l.x-l.x2),s=Math.round(l.y-l.y2),t.push({name:"dx1",type:"NUMBER",value:u}),t.push({name:"dy1",type:"NUMBER",value:c}),t.push({name:"dx2",type:"NUMBER",value:d}),t.push({name:"dy2",type:"NUMBER",value:f}),t.push({name:"dx",type:"NUMBER",value:a}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rrcurveto",type:"OP",value:8}),n=Math.round(l.x),o=Math.round(l.y)}}return t.push({name:"endchar",type:"OP",value:14}),t}var Ne={parse:function(e,t,r){r.tables.cff={};var n,o,i,a=je(e,(n=e,o=t,(i={}).formatMajor=ae.getCard8(n,o),i.formatMinor=ae.getCard8(n,o+1),i.size=ae.getCard8(n,o+2),i.offsetSize=ae.getCard8(n,o+3),i.startOffset=o,i.endOffset=o+4,i).endOffset,ae.bytesToString),s=je(e,a.endOffset),l=je(e,s.endOffset,ae.bytesToString),u=je(e,l.endOffset);r.gsubrs=u.objects,r.gsubrsBias=we(r.gsubrs);var c=Pe(e,t,s.objects,l.objects);if(1!==c.length)throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+c.length);var d=c[0];if((r.tables.cff.topDict=d)._privateDict&&(r.defaultWidthX=d._privateDict.defaultWidthX,r.nominalWidthX=d._privateDict.nominalWidthX),void 0!==d.ros[0]&&void 0!==d.ros[1]&&(r.isCIDFont=!0),r.isCIDFont){var f=d.fdArray,h=d.fdSelect;if(0===f||0===h)throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var p=Pe(e,t,je(e,f+=t).objects,l.objects);d._fdArray=p,h+=t,d._fdSelect=function(e,t,r,n){var o,i=[],a=new ae.Parser(e,t),s=a.parseCard8();if(0===s)for(var l=0;l<r;l++){if(n<=(o=a.parseCard8()))throw new Error("CFF table CID Font FDSelect has bad FD index value "+o+" (FD count "+n+")");i.push(o)}else{if(3!==s)throw new Error("CFF Table CID Font FDSelect table has unsupported format "+s);var u,c=a.parseCard16(),d=a.parseCard16();if(0!==d)throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+d);for(var f=0;f<c;f++){if(o=a.parseCard8(),u=a.parseCard16(),n<=o)throw new Error("CFF table CID Font FDSelect has bad FD index value "+o+" (FD count "+n+")");if(r<u)throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID "+u);for(;d<u;d++)i.push(o);d=u}if(u!==r)throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+u)}return i}(e,h,r.numGlyphs,p.length)}var y=t+d.private[1],m=Le(e,y,d.private[0],l.objects);if(r.defaultWidthX=m.defaultWidthX,r.nominalWidthX=m.nominalWidthX,0!==m.subrs){var g=je(e,y+m.subrs);r.subrs=g.objects,r.subrsBias=we(r.subrs)}else r.subrs=[],r.subrsBias=0;var v=je(e,t+d.charStrings);r.nGlyphs=v.objects.length;var b=function(e,t,r,n){var o,i,a=new ae.Parser(e,t);--r;var s=[".notdef"],l=a.parseCard8();if(0===l)for(var u=0;u<r;u+=1)o=a.parseSID(),s.push(Ee(n,o));else if(1===l)for(;s.length<=r;){o=a.parseSID(),i=a.parseCard8();for(var c=0;c<=i;c+=1)s.push(Ee(n,o)),o+=1}else{if(2!==l)throw new Error("Unknown charset format "+l);for(;s.length<=r;){o=a.parseSID(),i=a.parseCard16();for(var d=0;d<=i;d+=1)s.push(Ee(n,o)),o+=1}}return s}(e,t+d.charset,r.nGlyphs,l.objects);0===d.encoding?r.cffEncoding=new pe(ue,b):1===d.encoding?r.cffEncoding=new pe(ce,b):r.cffEncoding=function(e,t,r){var n,o={},i=new ae.Parser(e,t),a=i.parseCard8();if(0===a)for(var s=i.parseCard8(),l=0;l<s;l+=1)o[n=i.parseCard8()]=l;else{if(1!==a)throw new Error("Unknown encoding format "+a);var u=i.parseCard8();n=1;for(var c=0;c<u;c+=1)for(var d=i.parseCard8(),f=i.parseCard8(),h=d;h<=d+f;h+=1)o[h]=n,n+=1}return new pe(o,r)}(e,t+d.encoding,b),r.encoding=r.encoding||r.cffEncoding,r.glyphs=new _e.GlyphSet(r);for(var _=0;_<r.nGlyphs;_+=1){var x=v.objects[_];r.glyphs.push(_,_e.cffGlyphLoader(r,_,Ae,x))}},make:function(e,t){for(var r,n=new J.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),o=1/t.unitsPerEm,i={version:t.version,fullName:t.fullName,familyName:t.familyName,weight:t.weightName,fontBBox:t.fontBBox||[0,0,0,0],fontMatrix:[o,0,0,o,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},a=[],s=1;s<e.length;s+=1)r=e.get(s),a.push(r.name);var l=[];n.header=new J.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}]),n.nameIndex=function(e){var t=new J.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);t.names=[];for(var r=0;r<e.length;r+=1)t.names.push({name:"name_"+r,type:"NAME",value:e[r]});return t}([t.postScriptName]);var u,c,d,f=De(i,l);n.topDictIndex=Ie(f),n.globalSubrIndex=new J.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}]),n.charsets=function(e,t){for(var r=new J.Record("Charsets",[{name:"format",type:"Card8",value:0}]),n=0;n<e.length;n+=1){var o=ke(e[n],t);r.fields.push({name:"glyph_"+n,type:"SID",value:o})}return r}(a,l),n.charStringsIndex=function(e){for(var t=new J.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),r=0;r<e.length;r+=1){var n=e.get(r),o=Ue(n);t.charStrings.push({name:n.name,type:"CHARSTRING",value:o})}return t}(e),n.privateDict=(u={},c=l,(d=new J.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}])).dict=Re(Ce,u,c),d),n.stringIndex=function(e){var t=new J.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);t.strings=[];for(var r=0;r<e.length;r+=1)t.strings.push({name:"string_"+r,type:"STRING",value:e[r]});return t}(l);var h=n.header.sizeOf()+n.nameIndex.sizeOf()+n.topDictIndex.sizeOf()+n.stringIndex.sizeOf()+n.globalSubrIndex.sizeOf();return i.charset=h,i.encoding=0,i.charStrings=i.charset+n.charsets.sizeOf(),i.private[1]=i.charStrings+n.charStringsIndex.sizeOf(),f=De(i,l),n.topDictIndex=Ie(f),n}};var Fe={parse:function(e,t){var r={},n=new ae.Parser(e,t);return r.version=n.parseVersion(),r.fontRevision=Math.round(1e3*n.parseFixed())/1e3,r.checkSumAdjustment=n.parseULong(),r.magicNumber=n.parseULong(),L.argument(1594834165===r.magicNumber,"Font header has wrong magic number."),r.flags=n.parseUShort(),r.unitsPerEm=n.parseUShort(),r.created=n.parseLongDateTime(),r.modified=n.parseLongDateTime(),r.xMin=n.parseShort(),r.yMin=n.parseShort(),r.xMax=n.parseShort(),r.yMax=n.parseShort(),r.macStyle=n.parseUShort(),r.lowestRecPPEM=n.parseUShort(),r.fontDirectionHint=n.parseShort(),r.indexToLocFormat=n.parseShort(),r.glyphDataFormat=n.parseShort(),r},make:function(e){var t=Math.round((new Date).getTime()/1e3)+2082844800,r=t;return e.createdTimestamp&&(r=e.createdTimestamp+2082844800),new J.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:r},{name:"modified",type:"LONGDATETIME",value:t},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],e)}};var Be={parse:function(e,t){var r={},n=new ae.Parser(e,t);return r.version=n.parseVersion(),r.ascender=n.parseShort(),r.descender=n.parseShort(),r.lineGap=n.parseShort(),r.advanceWidthMax=n.parseUShort(),r.minLeftSideBearing=n.parseShort(),r.minRightSideBearing=n.parseShort(),r.xMaxExtent=n.parseShort(),r.caretSlopeRise=n.parseShort(),r.caretSlopeRun=n.parseShort(),r.caretOffset=n.parseShort(),n.relativeOffset+=8,r.metricDataFormat=n.parseShort(),r.numberOfHMetrics=n.parseUShort(),r},make:function(e){return new J.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],e)}};var Ge={parse:function(e,t,r,n,o){for(var i,a,s=new ae.Parser(e,t),l=0;l<n;l+=1){l<r&&(i=s.parseUShort(),a=s.parseShort());var u=o.get(l);u.advanceWidth=i,u.leftSideBearing=a}},make:function(e){for(var t=new J.Table("hmtx",[]),r=0;r<e.length;r+=1){var n=e.get(r),o=n.advanceWidth||0,i=n.leftSideBearing||0;t.fields.push({name:"advanceWidth_"+r,type:"USHORT",value:o}),t.fields.push({name:"leftSideBearing_"+r,type:"SHORT",value:i})}return t}};var Ve={make:function(e){for(var t=new J.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:e.length}]),r="",n=12+4*e.length,o=0;o<e.length;++o){var i=r.indexOf(e[o]);i<0&&(i=r.length,r+=e[o]),t.fields.push({name:"offset "+o,type:"USHORT",value:n+i}),t.fields.push({name:"length "+o,type:"USHORT",value:e[o].length})}return t.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),t},parse:function(e,t){var r=new ae.Parser(e,t),n=r.parseULong();L.argument(1===n,"Unsupported ltag table version."),r.skip("uLong",1);for(var o=r.parseULong(),i=[],a=0;a<o;a++){for(var s="",l=t+r.parseUShort(),u=r.parseUShort(),c=l;c<l+u;++c)s+=String.fromCharCode(e.getInt8(c));i.push(s)}return i}};var ze={parse:function(e,t){var r={},n=new ae.Parser(e,t);return r.version=n.parseVersion(),r.numGlyphs=n.parseUShort(),1===r.version&&(r.maxPoints=n.parseUShort(),r.maxContours=n.parseUShort(),r.maxCompositePoints=n.parseUShort(),r.maxCompositeContours=n.parseUShort(),r.maxZones=n.parseUShort(),r.maxTwilightPoints=n.parseUShort(),r.maxStorage=n.parseUShort(),r.maxFunctionDefs=n.parseUShort(),r.maxInstructionDefs=n.parseUShort(),r.maxStackElements=n.parseUShort(),r.maxSizeOfInstructions=n.parseUShort(),r.maxComponentElements=n.parseUShort(),r.maxComponentDepth=n.parseUShort()),r},make:function(e){return new J.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:e}])}},He=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"],We={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},qe={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:5,11:1,12:4,13:0,14:6,15:0,16:0,17:0,18:0,19:2,20:4,21:9,22:21,23:3,24:29,25:29,26:29,27:29,28:29,29:0,30:0,31:4,32:7,33:25,34:0,35:0,36:0,37:0,38:29,39:29,40:0,41:5,42:7,43:7,44:7,45:7,46:7,47:7,48:7,49:7,50:4,51:24,52:23,53:7,54:7,55:7,56:7,57:27,58:7,59:4,60:4,61:4,62:4,63:26,64:9,65:9,66:9,67:13,68:13,69:11,70:10,71:12,72:17,73:16,74:14,75:15,76:18,77:19,78:20,79:22,80:30,81:0,82:0,83:0,84:4,85:28,86:28,87:28,88:0,89:0,90:0,91:0,92:0,93:0,94:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:7,136:4,137:26,138:0,139:0,140:0,141:0,142:0,143:28,144:0,145:0,146:0,147:0,148:6,149:0,150:0,151:0},Xe={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};function Ye(e,t,r){switch(e){case 0:if(65535===t)return"und";if(r)return r[t];break;case 1:return We[t];case 3:return Xe[t]}}var Ze="utf-16",Qe={0:"macintosh",1:"x-mac-japanese",2:"x-mac-chinesetrad",3:"x-mac-korean",6:"x-mac-greek",7:"x-mac-cyrillic",9:"x-mac-devanagai",10:"x-mac-gurmukhi",11:"x-mac-gujarati",12:"x-mac-oriya",13:"x-mac-bengali",14:"x-mac-tamil",15:"x-mac-telugu",16:"x-mac-kannada",17:"x-mac-malayalam",18:"x-mac-sinhalese",19:"x-mac-burmese",20:"x-mac-khmer",21:"x-mac-thai",22:"x-mac-lao",23:"x-mac-georgian",24:"x-mac-armenian",25:"x-mac-chinesesimp",26:"x-mac-tibetan",27:"x-mac-mongolian",28:"x-mac-ethiopic",29:"x-mac-ce",30:"x-mac-vietnamese",31:"x-mac-extarabic"},Ke={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};function Je(e,t,r){switch(e){case 0:return Ze;case 1:return Ke[r]||Qe[t];case 3:if(1===t||10===t)return Ze}}function $e(e){var t={};for(var r in e)t[e[r]]=parseInt(r);return t}function et(e,t,r,n,o,i){return new J.Record("NameRecord",[{name:"platformID",type:"USHORT",value:e},{name:"encodingID",type:"USHORT",value:t},{name:"languageID",type:"USHORT",value:r},{name:"nameID",type:"USHORT",value:n},{name:"length",type:"USHORT",value:o},{name:"offset",type:"USHORT",value:i}])}function tt(e,t){var r=function(e,t){var r=e.length,n=t.length-r+1;e:for(var o=0;o<n;o++)for(;o<n;o++){for(var i=0;i<r;i++)if(t[o+i]!==e[i])continue e;return o}return-1}(e,t);if(r<0){r=t.length;for(var n=0,o=e.length;n<o;++n)t.push(e[n])}return r}var rt={parse:function(e,t,r){for(var n={},o=new ae.Parser(e,t),i=o.parseUShort(),a=o.parseUShort(),s=o.offset+o.parseUShort(),l=0;l<a;l++){var u=o.parseUShort(),c=o.parseUShort(),d=o.parseUShort(),f=o.parseUShort(),h=He[f]||f,p=o.parseUShort(),y=o.parseUShort(),m=Ye(u,d,r),g=Je(u,c,d);if(void 0!==g&&void 0!==m){var v=void 0;if(v=g===Ze?P.UTF16(e,s+y,p):P.MACSTRING(e,s+y,p,g)){var b=n[h];void 0===b&&(b=n[h]={}),b[m]=v}}}return 1===i&&o.parseUShort(),n},make:function(e,t){var r,n=[],o={},i=$e(He);for(var a in e){var s=i[a];if(void 0===s&&(s=a),r=parseInt(s),isNaN(r))throw new Error('Name table entry "'+a+'" does not exist, see nameTableNames for complete list.');o[r]=e[a],n.push(r)}for(var l=$e(We),u=$e(Xe),c=[],d=[],f=0;f<n.length;f++){var h=o[r=n[f]];for(var p in h){var y=h[p],m=1,g=l[p],v=qe[g],b=Je(m,v,g),_=A.MACSTRING(y,b);void 0===_&&(m=0,(g=t.indexOf(p))<0&&(g=t.length,t.push(p)),v=4,_=A.UTF16(y));var x=tt(_,d);c.push(et(m,v,g,r,_.length,x));var w=u[p];if(void 0!==w){var j=A.UTF16(y),S=tt(j,d);c.push(et(3,1,w,r,j.length,S))}}}c.sort(function(e,t){return e.platformID-t.platformID||e.encodingID-t.encodingID||e.languageID-t.languageID||e.nameID-t.nameID});for(var M=new J.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:c.length},{name:"stringOffset",type:"USHORT",value:6+12*c.length}]),E=0;E<c.length;E++)M.fields.push({name:"record_"+E,type:"RECORD",value:c[E]});return M.fields.push({name:"strings",type:"LITERAL",value:d}),M}},nt=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var ot={parse:function(e,t){var r={},n=new ae.Parser(e,t);r.version=n.parseUShort(),r.xAvgCharWidth=n.parseShort(),r.usWeightClass=n.parseUShort(),r.usWidthClass=n.parseUShort(),r.fsType=n.parseUShort(),r.ySubscriptXSize=n.parseShort(),r.ySubscriptYSize=n.parseShort(),r.ySubscriptXOffset=n.parseShort(),r.ySubscriptYOffset=n.parseShort(),r.ySuperscriptXSize=n.parseShort(),r.ySuperscriptYSize=n.parseShort(),r.ySuperscriptXOffset=n.parseShort(),r.ySuperscriptYOffset=n.parseShort(),r.yStrikeoutSize=n.parseShort(),r.yStrikeoutPosition=n.parseShort(),r.sFamilyClass=n.parseShort(),r.panose=[];for(var o=0;o<10;o++)r.panose[o]=n.parseByte();return r.ulUnicodeRange1=n.parseULong(),r.ulUnicodeRange2=n.parseULong(),r.ulUnicodeRange3=n.parseULong(),r.ulUnicodeRange4=n.parseULong(),r.achVendID=String.fromCharCode(n.parseByte(),n.parseByte(),n.parseByte(),n.parseByte()),r.fsSelection=n.parseUShort(),r.usFirstCharIndex=n.parseUShort(),r.usLastCharIndex=n.parseUShort(),r.sTypoAscender=n.parseShort(),r.sTypoDescender=n.parseShort(),r.sTypoLineGap=n.parseShort(),r.usWinAscent=n.parseUShort(),r.usWinDescent=n.parseUShort(),1<=r.version&&(r.ulCodePageRange1=n.parseULong(),r.ulCodePageRange2=n.parseULong()),2<=r.version&&(r.sxHeight=n.parseShort(),r.sCapHeight=n.parseShort(),r.usDefaultChar=n.parseUShort(),r.usBreakChar=n.parseUShort(),r.usMaxContent=n.parseUShort()),r},make:function(e){return new J.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],e)},unicodeRanges:nt,getUnicodeRange:function(e){for(var t=0;t<nt.length;t+=1){var r=nt[t];if(e>=r.begin&&e<r.end)return t}return-1}};var it={parse:function(e,t){var r={},n=new ae.Parser(e,t);switch(r.version=n.parseVersion(),r.italicAngle=n.parseFixed(),r.underlinePosition=n.parseShort(),r.underlineThickness=n.parseShort(),r.isFixedPitch=n.parseULong(),r.minMemType42=n.parseULong(),r.maxMemType42=n.parseULong(),r.minMemType1=n.parseULong(),r.maxMemType1=n.parseULong(),r.version){case 1:r.names=de.slice();break;case 2:r.numberOfGlyphs=n.parseUShort(),r.glyphNameIndex=new Array(r.numberOfGlyphs);for(var o=0;o<r.numberOfGlyphs;o++)r.glyphNameIndex[o]=n.parseUShort();r.names=[];for(var i=0;i<r.numberOfGlyphs;i++)if(r.glyphNameIndex[i]>=de.length){var a=n.parseChar();r.names.push(n.parseString(a))}break;case 2.5:r.numberOfGlyphs=n.parseUShort(),r.offset=new Array(r.numberOfGlyphs);for(var s=0;s<r.numberOfGlyphs;s++)r.offset[s]=n.parseChar()}return r},make:function(){return new J.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])}},at=new Array(9);at[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(oe.coverage),deltaGlyphId:this.parseUShort()}:2===t?{substFormat:2,coverage:this.parsePointer(oe.coverage),substitute:this.parseOffset16List()}:void L.assert(!1,"0x"+e.toString(16)+": lookup type 1 format must be 1 or 2.")},at[2]=function(){var e=this.parseUShort();return L.argument(1===e,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),sequences:this.parseListOfLists()}},at[3]=function(){var e=this.parseUShort();return L.argument(1===e,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),alternateSets:this.parseListOfLists()}},at[4]=function(){var e=this.parseUShort();return L.argument(1===e,"GSUB ligature table identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),ligatureSets:this.parseListOfLists(function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}})}};var st={sequenceIndex:oe.uShort,lookupListIndex:oe.uShort};at[5]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{substFormat:t,coverage:this.parsePointer(oe.coverage),ruleSets:this.parseListOfLists(function(){var e=this.parseUShort(),t=this.parseUShort();return{input:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,st)}})};if(2===t)return{substFormat:t,coverage:this.parsePointer(oe.coverage),classDef:this.parsePointer(oe.classDef),classSets:this.parseListOfLists(function(){var e=this.parseUShort(),t=this.parseUShort();return{classes:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,st)}})};if(3===t){var r=this.parseUShort(),n=this.parseUShort();return{substFormat:t,coverages:this.parseList(r,oe.pointer(oe.coverage)),lookupRecords:this.parseRecordList(n,st)}}L.assert(!1,"0x"+e.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},at[6]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(oe.coverage),chainRuleSets:this.parseListOfLists(function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(st)}})}:2===t?{substFormat:2,coverage:this.parsePointer(oe.coverage),backtrackClassDef:this.parsePointer(oe.classDef),inputClassDef:this.parsePointer(oe.classDef),lookaheadClassDef:this.parsePointer(oe.classDef),chainClassSet:this.parseListOfLists(function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(st)}})}:3===t?{substFormat:3,backtrackCoverage:this.parseList(oe.pointer(oe.coverage)),inputCoverage:this.parseList(oe.pointer(oe.coverage)),lookaheadCoverage:this.parseList(oe.pointer(oe.coverage)),lookupRecords:this.parseRecordList(st)}:void L.assert(!1,"0x"+e.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},at[7]=function(){var e=this.parseUShort();L.argument(1===e,"GSUB Extension Substitution subtable identifier-format must be 1");var t=this.parseUShort(),r=new oe(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:t,extension:at[t].call(r)}},at[8]=function(){var e=this.parseUShort();return L.argument(1===e,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),backtrackCoverage:this.parseList(oe.pointer(oe.coverage)),lookaheadCoverage:this.parseList(oe.pointer(oe.coverage)),substitutes:this.parseUShortList()}};var lt=new Array(9);lt[1]=function(e){return 1===e.substFormat?new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)},{name:"deltaGlyphID",type:"USHORT",value:e.deltaGlyphId}]):new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.ushortList("substitute",e.substitute)))},lt[3]=function(e){return L.assert(1===e.substFormat,"Lookup type 3 substFormat must be 1."),new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.tableList("altSet",e.alternateSets,function(e){return new J.Table("alternateSetTable",J.ushortList("alternate",e))})))},lt[4]=function(e){return L.assert(1===e.substFormat,"Lookup type 4 substFormat must be 1."),new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.tableList("ligSet",e.ligatureSets,function(e){return new J.Table("ligatureSetTable",J.tableList("ligature",e,function(e){return new J.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:e.ligGlyph}].concat(J.ushortList("component",e.components,e.components.length+1)))}))})))};var ut={parse:function(e,t){var r=new oe(e,t=t||0),n=r.parseVersion(1);return L.argument(1===n||1.1===n,"Unsupported GSUB table version."),1===n?{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(at)}:{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(at),variations:r.parseFeatureVariationsList()}},make:function(e){return new J.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new J.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new J.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new J.LookupList(e.lookups,lt)}])}};var ct={parse:function(e,t){var r=new ae.Parser(e,t),n=r.parseULong();L.argument(1===n,"Unsupported META table version."),r.parseULong(),r.parseULong();for(var o=r.parseULong(),i={},a=0;a<o;a++){var s=r.parseTag(),l=r.parseULong(),u=r.parseULong(),c=P.UTF8(e,t+l,u);i[s]=c}return i},make:function(e){var t=Object.keys(e).length,r="",n=16+12*t,o=new J.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:n},{name:"numTags",type:"ULONG",value:t}]);for(var i in e){var a=r.length;r+=e[i],o.fields.push({name:"tag "+i,type:"TAG",value:i}),o.fields.push({name:"offset "+i,type:"ULONG",value:n+a}),o.fields.push({name:"length "+i,type:"ULONG",value:e[i].length})}return o.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),o}};function dt(e){return Math.log(e)/Math.log(2)|0}function ft(e){for(;e.length%4!=0;)e.push(0);for(var t=0,r=0;r<e.length;r+=4)t+=(e[r]<<24)+(e[r+1]<<16)+(e[r+2]<<8)+e[r+3];return t%=Math.pow(2,32)}function ht(e,t,r,n){return new J.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==e?e:""},{name:"checkSum",type:"ULONG",value:void 0!==t?t:0},{name:"offset",type:"ULONG",value:void 0!==r?r:0},{name:"length",type:"ULONG",value:void 0!==n?n:0}])}function pt(e){var t=new J.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);t.tables=e,t.numTables=e.length;var r=Math.pow(2,dt(t.numTables));t.searchRange=16*r,t.entrySelector=dt(r),t.rangeShift=16*t.numTables-t.searchRange;for(var n=[],o=[],i=t.sizeOf()+ht().sizeOf()*t.numTables;i%4!=0;)i+=1,o.push({name:"padding",type:"BYTE",value:0});for(var a=0;a<e.length;a+=1){var s=e[a];L.argument(4===s.tableName.length,"Table name"+s.tableName+" is invalid.");var l=s.sizeOf(),u=ht(s.tableName,ft(s.encode()),i,l);for(n.push({name:u.tag+" Table Record",type:"RECORD",value:u}),o.push({name:s.tableName+" table",type:"RECORD",value:s}),i+=l,L.argument(!isNaN(i),"Something went wrong calculating the offset.");i%4!=0;)i+=1,o.push({name:"padding",type:"BYTE",value:0})}return n.sort(function(e,t){return e.value.tag>t.value.tag?1:-1}),t.fields=t.fields.concat(n),t.fields=t.fields.concat(o),t}function yt(e,t,r){for(var n=0;n<t.length;n+=1){var o=e.charToGlyphIndex(t[n]);if(0<o)return e.glyphs.get(o).getMetrics()}return r}var mt={make:pt,fontToTable:function(e){for(var t,r=[],n=[],o=[],i=[],a=[],s=[],l=[],u=0,c=0,d=0,f=0,h=0,p=0;p<e.glyphs.length;p+=1){var y=e.glyphs.get(p),m=0|y.unicode;if(isNaN(y.advanceWidth))throw new Error("Glyph "+y.name+" ("+p+"): advanceWidth is not a number.");(m<t||void 0===t)&&0<m&&(t=m),u<m&&(u=m);var g=ot.getUnicodeRange(m);if(g<32)c|=1<<g;else if(g<64)d|=1<<g-32;else if(g<96)f|=1<<g-64;else{if(!(g<123))throw new Error("Unicode ranges bits > 123 are reserved for internal usage");h|=1<<g-96}if(".notdef"!==y.name){var v=y.getMetrics();r.push(v.xMin),n.push(v.yMin),o.push(v.xMax),i.push(v.yMax),s.push(v.leftSideBearing),l.push(v.rightSideBearing),a.push(y.advanceWidth)}}var b={xMin:Math.min.apply(null,r),yMin:Math.min.apply(null,n),xMax:Math.max.apply(null,o),yMax:Math.max.apply(null,i),advanceWidthMax:Math.max.apply(null,a),advanceWidthAvg:function(e){for(var t=0,r=0;r<e.length;r+=1)t+=e[r];return t/e.length}(a),minLeftSideBearing:Math.min.apply(null,s),maxLeftSideBearing:Math.max.apply(null,s),minRightSideBearing:Math.min.apply(null,l)};b.ascender=e.ascender,b.descender=e.descender;var _=Fe.make({flags:3,unitsPerEm:e.unitsPerEm,xMin:b.xMin,yMin:b.yMin,xMax:b.xMax,yMax:b.yMax,lowestRecPPEM:3,createdTimestamp:e.createdTimestamp}),x=Be.make({ascender:b.ascender,descender:b.descender,advanceWidthMax:b.advanceWidthMax,minLeftSideBearing:b.minLeftSideBearing,minRightSideBearing:b.minRightSideBearing,xMaxExtent:b.maxLeftSideBearing+(b.xMax-b.xMin),numberOfHMetrics:e.glyphs.length}),w=ze.make(e.glyphs.length),j=ot.make({xAvgCharWidth:Math.round(b.advanceWidthAvg),usWeightClass:e.tables.os2.usWeightClass,usWidthClass:e.tables.os2.usWidthClass,usFirstCharIndex:t,usLastCharIndex:u,ulUnicodeRange1:c,ulUnicodeRange2:d,ulUnicodeRange3:f,ulUnicodeRange4:h,fsSelection:e.tables.os2.fsSelection,sTypoAscender:b.ascender,sTypoDescender:b.descender,sTypoLineGap:0,usWinAscent:b.yMax,usWinDescent:Math.abs(b.yMin),ulCodePageRange1:1,sxHeight:yt(e,"xyvw",{yMax:Math.round(b.ascender/2)}).yMax,sCapHeight:yt(e,"HIKLEFJMNTZBDPRAGOQSUVWXY",b).yMax,usDefaultChar:e.hasChar(" ")?32:0,usBreakChar:e.hasChar(" ")?32:0}),S=Ge.make(e.glyphs),M=se.make(e.glyphs),E=e.getEnglishName("fontFamily"),T=e.getEnglishName("fontSubfamily"),O=E+" "+T,C=e.getEnglishName("postScriptName");C=C||E.replace(/\s/g,"")+"-"+T;var L={};for(var P in e.names)L[P]=e.names[P];L.uniqueID||(L.uniqueID={en:e.getEnglishName("manufacturer")+":"+O}),L.postScriptName||(L.postScriptName={en:C}),L.preferredFamily||(L.preferredFamily=e.names.fontFamily),L.preferredSubfamily||(L.preferredSubfamily=e.names.fontSubfamily);var A=[],k=rt.make(L,A),R=0<A.length?Ve.make(A):void 0,D=it.make(),I=Ne.make(e.glyphs,{version:e.getEnglishName("version"),fullName:O,familyName:E,weightName:T,postScriptName:C,unitsPerEm:e.unitsPerEm,fontBBox:[0,b.yMin,b.ascender,b.advanceWidthMax]}),U=e.metas&&0<Object.keys(e.metas).length?ct.make(e.metas):void 0,N=[_,x,w,j,k,M,D,I,S];R&&N.push(R),e.tables.gsub&&N.push(ut.make(e.tables.gsub)),U&&N.push(U);for(var F=pt(N),B=ft(F.encode()),G=F.fields,V=!1,z=0;z<G.length;z+=1)if("head table"===G[z].name){G[z].value.checkSumAdjustment=2981146554-B,V=!0;break}if(!V)throw new Error("Could not find head table with checkSum to adjust.");return F},computeCheckSum:ft};function gt(e,t){for(var r=0,n=e.length-1;r<=n;){var o=r+n>>>1,i=e[o].tag;if(i===t)return o;i<t?r=1+o:n=o-1}return-r-1}function vt(e,t){for(var r=0,n=e.length-1;r<=n;){var o=r+n>>>1,i=e[o];if(i===t)return o;i<t?r=1+o:n=o-1}return-r-1}function bt(e,t){for(var r,n=0,o=e.length-1;n<=o;){var i=n+o>>>1,a=(r=e[i]).start;if(a===t)return r;a<t?n=1+i:o=i-1}if(0<n)return t>(r=e[n-1]).end?0:r}function _t(e,t){this.font=e,this.tableName=t}function xt(e){_t.call(this,e,"gpos")}function wt(e){_t.call(this,e,"gsub")}function jt(e,t){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0}function St(e,t,r){for(var n=e.subtables,o=0;o<n.length;o++){var i=n[o];if(i.substFormat===t)return i}if(r)return n.push(r),r}function Mt(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n<e.length;++n)r[n]=e[n];return t}function Et(e,t){if(!e)throw t}function Tt(e,t,r,n,o){var i;return i=0<(t&n)?(i=e.parseByte(),0==(t&o)&&(i=-i),r+i):0<(t&o)?r:r+e.parseShort()}function Ot(e,t,r){var n,o,i=new ae.Parser(t,r);if(e.numberOfContours=i.parseShort(),e._xMin=i.parseShort(),e._yMin=i.parseShort(),e._xMax=i.parseShort(),e._yMax=i.parseShort(),0<e.numberOfContours){for(var a=e.endPointIndices=[],s=0;s<e.numberOfContours;s+=1)a.push(i.parseUShort());e.instructionLength=i.parseUShort(),e.instructions=[];for(var l=0;l<e.instructionLength;l+=1)e.instructions.push(i.parseByte());var u=a[a.length-1]+1;n=[];for(var c=0;c<u;c+=1)if(o=i.parseByte(),n.push(o),0<(8&o))for(var d=i.parseByte(),f=0;f<d;f+=1)n.push(o),c+=1;if(L.argument(n.length===u,"Bad flags."),0<a.length){var h,p=[];if(0<u){for(var y=0;y<u;y+=1)o=n[y],(h={}).onCurve=!!(1&o),h.lastPointOfContour=0<=a.indexOf(y),p.push(h);for(var m=0,g=0;g<u;g+=1)o=n[g],(h=p[g]).x=Tt(i,o,m,2,16),m=h.x;for(var v=0,b=0;b<u;b+=1)o=n[b],(h=p[b]).y=Tt(i,o,v,4,32),v=h.y}e.points=p}else e.points=[]}else if(0===e.numberOfContours)e.points=[];else{e.isComposite=!0,e.points=[],e.components=[];for(var _=!0;_;){n=i.parseUShort();var x={glyphIndex:i.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};0<(1&n)?0<(2&n)?(x.dx=i.parseShort(),x.dy=i.parseShort()):x.matchedPoints=[i.parseUShort(),i.parseUShort()]:0<(2&n)?(x.dx=i.parseChar(),x.dy=i.parseChar()):x.matchedPoints=[i.parseByte(),i.parseByte()],0<(8&n)?x.xScale=x.yScale=i.parseF2Dot14():0<(64&n)?(x.xScale=i.parseF2Dot14(),x.yScale=i.parseF2Dot14()):0<(128&n)&&(x.xScale=i.parseF2Dot14(),x.scale01=i.parseF2Dot14(),x.scale10=i.parseF2Dot14(),x.yScale=i.parseF2Dot14()),e.components.push(x),_=!!(32&n)}if(256&n){e.instructionLength=i.parseUShort(),e.instructions=[];for(var w=0;w<e.instructionLength;w+=1)e.instructions.push(i.parseByte())}}}function Ct(e,t){for(var r=[],n=0;n<e.length;n+=1){var o=e[n],i={x:t.xScale*o.x+t.scale01*o.y+t.dx,y:t.scale10*o.x+t.yScale*o.y+t.dy,onCurve:o.onCurve,lastPointOfContour:o.lastPointOfContour};r.push(i)}return r}function Lt(e){var t=new D;if(!e)return t;for(var r=function(e){for(var t=[],r=[],n=0;n<e.length;n+=1){var o=e[n];r.push(o),o.lastPointOfContour&&(t.push(r),r=[])}return L.argument(0===r.length,"There are still points left in the current contour."),t}(e),n=0;n<r.length;++n){var o=r[n],i=null,a=o[o.length-1],s=o[0];if(a.onCurve)t.moveTo(a.x,a.y);else if(s.onCurve)t.moveTo(s.x,s.y);else{var l={x:.5*(a.x+s.x),y:.5*(a.y+s.y)};t.moveTo(l.x,l.y)}for(var u=0;u<o.length;++u)if(i=a,a=s,s=o[(u+1)%o.length],a.onCurve)t.lineTo(a.x,a.y);else{var c=s;i.onCurve||{x:.5*(a.x+i.x),y:.5*(a.y+i.y)},s.onCurve||(c={x:.5*(a.x+s.x),y:.5*(a.y+s.y)}),t.quadraticCurveTo(a.x,a.y,c.x,c.y)}t.closePath()}return t}function Pt(e,t){if(t.isComposite)for(var r=0;r<t.components.length;r+=1){var n=t.components[r],o=e.get(n.glyphIndex);if(o.getPath(),o.points){var i=void 0;if(void 0===n.matchedPoints)i=Ct(o.points,n);else{if(n.matchedPoints[0]>t.points.length-1||n.matchedPoints[1]>o.points.length-1)throw Error("Matched points out of range in "+t.name);var a=t.points[n.matchedPoints[0]],s=o.points[n.matchedPoints[1]],l={xScale:n.xScale,scale01:n.scale01,scale10:n.scale10,yScale:n.yScale,dx:0,dy:0};s=Ct([s],l)[0],l.dx=a.x-s.x,l.dy=a.y-s.y,i=Ct(o.points,l)}t.points=t.points.concat(i)}}return Lt(t.points)}(xt.prototype=_t.prototype={searchTag:gt,binSearch:vt,getTable:function(e){var t=this.font.tables[this.tableName];return!t&&e&&(t=this.font.tables[this.tableName]=this.createDefaultTable()),t},getScriptNames:function(){var e=this.getTable();return e?e.scripts.map(function(e){return e.tag}):[]},getDefaultScriptName:function(){var e=this.getTable();if(e){for(var t=!1,r=0;r<e.scripts.length;r++){var n=e.scripts[r].tag;if("DFLT"===n)return n;"latn"===n&&(t=!0)}return t?"latn":void 0}},getScriptTable:function(e,t){var r=this.getTable(t);if(r){e=e||"DFLT";var n=r.scripts,o=gt(r.scripts,e);if(0<=o)return n[o].script;if(t){var i={tag:e,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return n.splice(-1-o,0,i),i.script}}},getLangSysTable:function(e,t,r){var n=this.getScriptTable(e,r);if(n){if(!t||"dflt"===t||"DFLT"===t)return n.defaultLangSys;var o=gt(n.langSysRecords,t);if(0<=o)return n.langSysRecords[o].langSys;if(r){var i={tag:t,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return n.langSysRecords.splice(-1-o,0,i),i.langSys}}},getFeatureTable:function(e,t,r,n){var o=this.getLangSysTable(e,t,n);if(o){for(var i,a=o.featureIndexes,s=this.font.tables[this.tableName].features,l=0;l<a.length;l++)if((i=s[a[l]]).tag===r)return i.feature;if(n){var u=s.length;return L.assert(0===u||r>=s[u-1].tag,"Features must be added in alphabetical order."),i={tag:r,feature:{params:0,lookupListIndexes:[]}},s.push(i),a.push(u),i.feature}}},getLookupTables:function(e,t,r,n,o){var i=this.getFeatureTable(e,t,r,o),a=[];if(i){for(var s,l=i.lookupListIndexes,u=this.font.tables[this.tableName].lookups,c=0;c<l.length;c++)(s=u[l[c]]).lookupType===n&&a.push(s);if(0===a.length&&o){s={lookupType:n,lookupFlag:0,subtables:[],markFilteringSet:void 0};var d=u.length;return u.push(s),l.push(d),[s]}}return a},getGlyphClass:function(e,t){switch(e.format){case 1:return e.startGlyph<=t&&t<e.startGlyph+e.classes.length?e.classes[t-e.startGlyph]:0;case 2:var r=bt(e.ranges,t);return r?r.classId:0}},getCoverageIndex:function(e,t){switch(e.format){case 1:var r=vt(e.glyphs,t);return 0<=r?r:-1;case 2:var n=bt(e.ranges,t);return n?n.index+t-n.start:-1}},expandCoverage:function(e){if(1===e.format)return e.glyphs;for(var t=[],r=e.ranges,n=0;n<r.length;n++)for(var o=r[n],i=o.start,a=o.end,s=i;s<=a;s++)t.push(s);return t}}).init=function(){var e=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(e)},xt.prototype.getKerningValue=function(e,t,r){for(var n=0;n<e.length;n++)for(var o=e[n].subtables,i=0;i<o.length;i++){var a=o[i],s=this.getCoverageIndex(a.coverage,t);if(!(s<0))switch(a.posFormat){case 1:for(var l=a.pairSets[s],u=0;u<l.length;u++){var c=l[u];if(c.secondGlyph===r)return c.value1&&c.value1.xAdvance||0}break;case 2:var d=this.getGlyphClass(a.classDef1,t),f=this.getGlyphClass(a.classDef2,r),h=a.classRecords[d][f];return h.value1&&h.value1.xAdvance||0}}return 0},xt.prototype.getKerningTables=function(e,t){if(this.font.tables.gpos)return this.getLookupTables(e,t,"kern",2)},(wt.prototype=_t.prototype).createDefaultTable=function(){return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},wt.prototype.getSingle=function(e,t,r){for(var n=[],o=this.getLookupTables(t,r,e,1),i=0;i<o.length;i++)for(var a=o[i].subtables,s=0;s<a.length;s++){var l=a[s],u=this.expandCoverage(l.coverage),c=void 0;if(1===l.substFormat){var d=l.deltaGlyphId;for(c=0;c<u.length;c++){var f=u[c];n.push({sub:f,by:f+d})}}else{var h=l.substitute;for(c=0;c<u.length;c++)n.push({sub:u[c],by:h[c]})}}return n},wt.prototype.getAlternates=function(e,t,r){for(var n=[],o=this.getLookupTables(t,r,e,3),i=0;i<o.length;i++)for(var a=o[i].subtables,s=0;s<a.length;s++)for(var l=a[s],u=this.expandCoverage(l.coverage),c=l.alternateSets,d=0;d<u.length;d++)n.push({sub:u[d],by:c[d]});return n},wt.prototype.getLigatures=function(e,t,r){for(var n=[],o=this.getLookupTables(t,r,e,4),i=0;i<o.length;i++)for(var a=o[i].subtables,s=0;s<a.length;s++)for(var l=a[s],u=this.expandCoverage(l.coverage),c=l.ligatureSets,d=0;d<u.length;d++)for(var f=u[d],h=c[d],p=0;p<h.length;p++){var y=h[p];n.push({sub:[f].concat(y.components),by:y.ligGlyph})}return n},wt.prototype.addSingle=function(e,t,r,n){var o=St(this.getLookupTables(r,n,e,1,!0)[0],2,{substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});L.assert(1===o.coverage.format,"Ligature: unable to modify coverage table format "+o.coverage.format);var i=t.sub,a=this.binSearch(o.coverage.glyphs,i);a<0&&(a=-1-a,o.coverage.glyphs.splice(a,0,i),o.substitute.splice(a,0,0)),o.substitute[a]=t.by},wt.prototype.addAlternate=function(e,t,r,n){var o=St(this.getLookupTables(r,n,e,3,!0)[0],1,{substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});L.assert(1===o.coverage.format,"Ligature: unable to modify coverage table format "+o.coverage.format);var i=t.sub,a=this.binSearch(o.coverage.glyphs,i);a<0&&(a=-1-a,o.coverage.glyphs.splice(a,0,i),o.alternateSets.splice(a,0,0)),o.alternateSets[a]=t.by},wt.prototype.addLigature=function(e,t,r,n){var o=this.getLookupTables(r,n,e,4,!0)[0],i=o.subtables[0];i||(i={substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},o.subtables[0]=i),L.assert(1===i.coverage.format,"Ligature: unable to modify coverage table format "+i.coverage.format);var a=t.sub[0],s=t.sub.slice(1),l={ligGlyph:t.by,components:s},u=this.binSearch(i.coverage.glyphs,a);if(0<=u){for(var c=i.ligatureSets[u],d=0;d<c.length;d++)if(jt(c[d].components,s))return;c.push(l)}else u=-1-u,i.coverage.glyphs.splice(u,0,a),i.ligatureSets.splice(u,0,[l])},wt.prototype.getFeature=function(e,t,r){if(/ss\d\d/.test(e))return this.getSingle(e,t,r);switch(e){case"aalt":case"salt":return this.getSingle(e,t,r).concat(this.getAlternates(e,t,r));case"dlig":case"liga":case"rlig":return this.getLigatures(e,t,r)}},wt.prototype.add=function(e,t,r,n){if(/ss\d\d/.test(e))return this.addSingle(e,t,r,n);switch(e){case"aalt":case"salt":return"number"==typeof t.by?this.addSingle(e,t,r,n):this.addAlternate(e,t,r,n);case"dlig":case"liga":case"rlig":return this.addLigature(e,t,r,n)}};var At,kt,Rt,Dt,It={getPath:Lt,parse:function(e,t,r,n){for(var o=new _e.GlyphSet(n),i=0;i<r.length-1;i+=1){var a=r[i];a!==r[i+1]?o.push(i,_e.ttfGlyphLoader(n,i,Ot,e,t+a,Pt)):o.push(i,_e.glyphLoader(n,i))}return o}};function Ut(e){this.font=e,this.getCommands=function(e){return It.getPath(e).commands},this._fpgmState=this._prepState=void 0,this._errorState=0}function Nt(e){return e}function Ft(e){return Math.sign(e)*Math.round(Math.abs(e))}function Bt(e){return Math.sign(e)*Math.round(Math.abs(2*e))/2}function Gt(e){return Math.sign(e)*(Math.round(Math.abs(e)+.5)-.5)}function Vt(e){return Math.sign(e)*Math.ceil(Math.abs(e))}function zt(e){return Math.sign(e)*Math.floor(Math.abs(e))}function Ht(e){var t=this.srPeriod,r=this.srPhase,n=1;return e<0&&(e=-e,n=-1),e+=this.srThreshold-r,e=Math.trunc(e/t)*t,(e+=r)<0?r*n:e*n}var Wt={x:1,y:0,axis:"x",distance:function(e,t,r,n){return(r?e.xo:e.x)-(n?t.xo:t.x)},interpolate:function(e,t,r,n){var o,i,a,s,l,u,c;if(!n||n===this)return o=e.xo-t.xo,i=e.xo-r.xo,l=t.x-t.xo,u=r.x-r.xo,0===(c=(a=Math.abs(o))+(s=Math.abs(i)))?void(e.x=e.xo+(l+u)/2):void(e.x=e.xo+(l*s+u*a)/c);o=n.distance(e,t,!0,!0),i=n.distance(e,r,!0,!0),l=n.distance(t,t,!1,!0),u=n.distance(r,r,!1,!0),0!==(c=(a=Math.abs(o))+(s=Math.abs(i)))?Wt.setRelative(e,e,(l*s+u*a)/c,n,!0):Wt.setRelative(e,e,(l+u)/2,n,!0)},normalSlope:Number.NEGATIVE_INFINITY,setRelative:function(e,t,r,n,o){if(n&&n!==this){var i=o?t.xo:t.x,a=o?t.yo:t.y,s=i+r*n.x,l=a+r*n.y;e.x=s+(e.y-l)/n.normalSlope}else e.x=(o?t.xo:t.x)+r},slope:0,touch:function(e){e.xTouched=!0},touched:function(e){return e.xTouched},untouch:function(e){e.xTouched=!1}},qt={x:0,y:1,axis:"y",distance:function(e,t,r,n){return(r?e.yo:e.y)-(n?t.yo:t.y)},interpolate:function(e,t,r,n){var o,i,a,s,l,u,c;if(!n||n===this)return o=e.yo-t.yo,i=e.yo-r.yo,l=t.y-t.yo,u=r.y-r.yo,0===(c=(a=Math.abs(o))+(s=Math.abs(i)))?void(e.y=e.yo+(l+u)/2):void(e.y=e.yo+(l*s+u*a)/c);o=n.distance(e,t,!0,!0),i=n.distance(e,r,!0,!0),l=n.distance(t,t,!1,!0),u=n.distance(r,r,!1,!0),0!==(c=(a=Math.abs(o))+(s=Math.abs(i)))?qt.setRelative(e,e,(l*s+u*a)/c,n,!0):qt.setRelative(e,e,(l+u)/2,n,!0)},normalSlope:0,setRelative:function(e,t,r,n,o){if(n&&n!==this){var i=o?t.xo:t.x,a=o?t.yo:t.y,s=i+r*n.x,l=a+r*n.y;e.y=l+n.normalSlope*(e.x-s)}else e.y=(o?t.yo:t.y)+r},slope:Number.POSITIVE_INFINITY,touch:function(e){e.yTouched=!0},touched:function(e){return e.yTouched},untouch:function(e){e.yTouched=!1}};function Xt(e,t){this.x=e,this.y=t,this.axis=void 0,this.slope=t/e,this.normalSlope=-e/t,Object.freeze(this)}function Yt(e,t){var r=Math.sqrt(e*e+t*t);return t/=r,1===(e/=r)&&0===t?Wt:0===e&&1===t?qt:new Xt(e,t)}function Zt(e,t,r,n){this.x=this.xo=Math.round(64*e)/64,this.y=this.yo=Math.round(64*t)/64,this.lastPointOfContour=r,this.onCurve=n,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}Object.freeze(Wt),Object.freeze(qt),Xt.prototype.distance=function(e,t,r,n){return this.x*Wt.distance(e,t,r,n)+this.y*qt.distance(e,t,r,n)},Xt.prototype.interpolate=function(e,t,r,n){var o,i,a,s,l,u,c;a=n.distance(e,t,!0,!0),s=n.distance(e,r,!0,!0),o=n.distance(t,t,!1,!0),i=n.distance(r,r,!1,!0),0!==(c=(l=Math.abs(a))+(u=Math.abs(s)))?this.setRelative(e,e,(o*u+i*l)/c,n,!0):this.setRelative(e,e,(o+i)/2,n,!0)},Xt.prototype.setRelative=function(e,t,r,n,o){n=n||this;var i=o?t.xo:t.x,a=o?t.yo:t.y,s=i+r*n.x,l=a+r*n.y,u=n.normalSlope,c=this.slope,d=e.x,f=e.y;e.x=(c*d-u*s+l-f)/(c-u),e.y=c*(e.x-d)+f},Xt.prototype.touch=function(e){e.xTouched=!0,e.yTouched=!0},Zt.prototype.nextTouched=function(e){for(var t=this.nextPointOnContour;!e.touched(t)&&t!==this;)t=t.nextPointOnContour;return t},Zt.prototype.prevTouched=function(e){for(var t=this.prevPointOnContour;!e.touched(t)&&t!==this;)t=t.prevPointOnContour;return t};var Qt=Object.freeze(new Zt(0,0)),Kt={cvCutIn:17/16,deltaBase:9,deltaShift:.125,loop:1,minDis:1,autoFlip:!0};function Jt(e,t){switch(this.env=e,this.stack=[],this.prog=t,e){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;case"prep":this.fv=this.pv=this.dpv=Wt,this.round=Ft}}function $t(e){for(var t=e.tZone=new Array(e.gZone.length),r=0;r<t.length;r++)t[r]=new Zt(0,0)}function er(e,t){var r,n=e.prog,o=e.ip,i=1;do{if(88===(r=n[++o]))i++;else if(89===r)i--;else if(64===r)o+=n[o+1]+1;else if(65===r)o+=2*n[o+1]+1;else if(176<=r&&r<=183)o+=r-176+1;else if(184<=r&&r<=191)o+=2*(r-184+1);else if(t&&1===i&&27===r)break}while(0<i);e.ip=o}function tr(e,t){M.DEBUG&&console.log(t.step,"SVTCA["+e.axis+"]"),t.fv=t.pv=t.dpv=e}function rr(e,t){M.DEBUG&&console.log(t.step,"SPVTCA["+e.axis+"]"),t.pv=t.dpv=e}function nr(e,t){M.DEBUG&&console.log(t.step,"SFVTCA["+e.axis+"]"),t.fv=e}function or(e,t){var r,n,o=t.stack,i=o.pop(),a=o.pop(),s=t.z2[i],l=t.z1[a];M.DEBUG&&console.log("SPVTL["+e+"]",i,a),n=e?(r=s.y-l.y,l.x-s.x):(r=l.x-s.x,l.y-s.y),t.pv=t.dpv=Yt(r,n)}function ir(e,t){var r,n,o=t.stack,i=o.pop(),a=o.pop(),s=t.z2[i],l=t.z1[a];M.DEBUG&&console.log("SFVTL["+e+"]",i,a),n=e?(r=s.y-l.y,l.x-s.x):(r=l.x-s.x,l.y-s.y),t.fv=Yt(r,n)}function ar(e){M.DEBUG&&console.log(e.step,"POP[]"),e.stack.pop()}function sr(e,t){var r=t.stack.pop(),n=t.z0[r],o=t.fv,i=t.pv;M.DEBUG&&console.log(t.step,"MDAP["+e+"]",r);var a=i.distance(n,Qt);e&&(a=t.round(a)),o.setRelative(n,Qt,a,i),o.touch(n),t.rp0=t.rp1=r}function lr(e,t){var r,n,o,i=t.z2,a=i.length-2;M.DEBUG&&console.log(t.step,"IUP["+e.axis+"]");for(var s=0;s<a;s++)r=i[s],e.touched(r)||(n=r.prevTouched(e))!==r&&(n===(o=r.nextTouched(e))&&e.setRelative(r,r,e.distance(n,n,!1,!0),e,!0),e.interpolate(r,n,o,e))}function ur(e,t){for(var r=t.stack,n=e?t.rp1:t.rp2,o=(e?t.z0:t.z1)[n],i=t.fv,a=t.pv,s=t.loop,l=t.z2;s--;){var u=r.pop(),c=l[u],d=a.distance(o,o,!1,!0);i.setRelative(c,c,d,a),i.touch(c),M.DEBUG&&console.log(t.step,(1<t.loop?"loop "+(t.loop-s)+": ":"")+"SHP["+(e?"rp1":"rp2")+"]",u)}t.loop=1}function cr(e,t){var r=t.stack,n=e?t.rp1:t.rp2,o=(e?t.z0:t.z1)[n],i=t.fv,a=t.pv,s=r.pop(),l=t.z2[t.contours[s]],u=l;M.DEBUG&&console.log(t.step,"SHC["+e+"]",s);for(var c=a.distance(o,o,!1,!0);u!==o&&i.setRelative(u,u,c,a),(u=u.nextPointOnContour)!==l;);}function dr(e,t){var r,n,o=t.stack,i=e?t.rp1:t.rp2,a=(e?t.z0:t.z1)[i],s=t.fv,l=t.pv,u=o.pop();switch(M.DEBUG&&console.log(t.step,"SHZ["+e+"]",u),u){case 0:r=t.tZone;break;case 1:r=t.gZone;break;default:throw new Error("Invalid zone")}for(var c=l.distance(a,a,!1,!0),d=r.length-2,f=0;f<d;f++)n=r[f],s.setRelative(n,n,c,l)}function fr(e,t){var r=t.stack,n=r.pop()/64,o=r.pop(),i=t.z1[o],a=t.z0[t.rp0],s=t.fv,l=t.pv;s.setRelative(i,a,n,l),s.touch(i),M.DEBUG&&console.log(t.step,"MSIRP["+e+"]",n,o),t.rp1=t.rp0,t.rp2=o,e&&(t.rp0=o)}function hr(e,t){var r=t.stack,n=r.pop(),o=r.pop(),i=t.z0[o],a=t.fv,s=t.pv,l=t.cvt[n];M.DEBUG&&console.log(t.step,"MIAP["+e+"]",n,"(",l,")",o);var u=s.distance(i,Qt);e&&(Math.abs(u-l)<t.cvCutIn&&(u=l),u=t.round(u)),a.setRelative(i,Qt,u,s),0===t.zp0&&(i.xo=i.x,i.yo=i.y),a.touch(i),t.rp0=t.rp1=o}function pr(e,t){var r=t.stack,n=r.pop(),o=t.z2[n];M.DEBUG&&console.log(t.step,"GC["+e+"]",n),r.push(64*t.dpv.distance(o,Qt,e,!1))}function yr(e,t){var r=t.stack,n=r.pop(),o=r.pop(),i=t.z1[n],a=t.z0[o],s=t.dpv.distance(a,i,e,e);M.DEBUG&&console.log(t.step,"MD["+e+"]",n,o,"->",s),t.stack.push(Math.round(64*s))}function mr(e,t){var r=t.stack,n=r.pop(),o=t.fv,i=t.pv,a=t.ppem,s=t.deltaBase+16*(e-1),l=t.deltaShift,u=t.z0;M.DEBUG&&console.log(t.step,"DELTAP["+e+"]",n,r);for(var c=0;c<n;c++){var d=r.pop(),f=r.pop();if(s+((240&f)>>4)===a){var h=(15&f)-8;0<=h&&h++,M.DEBUG&&console.log(t.step,"DELTAPFIX",d,"by",h*l);var p=u[d];o.setRelative(p,p,h*l,i)}}}function gr(e,t){var r=t.stack,n=r.pop();M.DEBUG&&console.log(t.step,"ROUND[]"),r.push(64*t.round(n/64))}function vr(e,t){var r=t.stack,n=r.pop(),o=t.ppem,i=t.deltaBase+16*(e-1),a=t.deltaShift;M.DEBUG&&console.log(t.step,"DELTAC["+e+"]",n,r);for(var s=0;s<n;s++){var l=r.pop(),u=r.pop();if(i+((240&u)>>4)===o){var c=(15&u)-8;0<=c&&c++;var d=c*a;M.DEBUG&&console.log(t.step,"DELTACFIX",l,"by",d),t.cvt[l]+=d}}}function br(e,t){var r,n,o=t.stack,i=o.pop(),a=o.pop(),s=t.z2[i],l=t.z1[a];M.DEBUG&&console.log(t.step,"SDPVTL["+e+"]",i,a),n=e?(r=s.y-l.y,l.x-s.x):(r=l.x-s.x,l.y-s.y),t.dpv=Yt(r,n)}function _r(e,t){var r=t.stack,n=t.prog,o=t.ip;M.DEBUG&&console.log(t.step,"PUSHB["+e+"]");for(var i=0;i<e;i++)r.push(n[++o]);t.ip=o}function xr(e,t){var r=t.ip,n=t.prog,o=t.stack;M.DEBUG&&console.log(t.ip,"PUSHW["+e+"]");for(var i=0;i<e;i++){var a=n[++r]<<8|n[++r];32768&a&&(a=-(1+(65535^a))),o.push(a)}t.ip=r}function wr(e,t,r,n,o,i){var a,s,l,u,c=i.stack,d=e&&c.pop(),f=c.pop(),h=i.rp0,p=i.z0[h],y=i.z1[f],m=i.minDis,g=i.fv,v=i.dpv;l=0<=(s=a=v.distance(y,p,!0,!0))?1:-1,s=Math.abs(s),e&&(u=i.cvt[d],n&&Math.abs(s-u)<i.cvCutIn&&(s=u)),r&&s<m&&(s=m),n&&(s=i.round(s)),g.setRelative(y,p,l*s,v),g.touch(y),M.DEBUG&&console.log(i.step,(e?"MIRP[":"MDRP[")+(t?"M":"m")+(r?">":"_")+(n?"R":"_")+(0===o?"Gr":1===o?"Bl":2===o?"Wh":"")+"]",e?d+"("+i.cvt[d]+","+u+")":"",f,"(d =",a,"->",l*s,")"),i.rp1=i.rp0,i.rp2=f,t&&(i.rp0=f)}Ut.prototype.exec=function(e,t){if("number"!=typeof t)throw new Error("Point size is not a number!");if(!(2<this._errorState)){var r=this.font,n=this._prepState;if(!n||n.ppem!==t){var o=this._fpgmState;if(!o){Jt.prototype=Kt,(o=this._fpgmState=new Jt("fpgm",r.tables.fpgm)).funcs=[],o.font=r,M.DEBUG&&(console.log("---EXEC FPGM---"),o.step=-1);try{kt(o)}catch(e){return console.log("Hinting error in FPGM:"+e),void(this._errorState=3)}}Jt.prototype=o,(n=this._prepState=new Jt("prep",r.tables.prep)).ppem=t;var i=r.tables.cvt;if(i)for(var a=n.cvt=new Array(i.length),s=t/r.unitsPerEm,l=0;l<i.length;l++)a[l]=i[l]*s;else n.cvt=[];M.DEBUG&&(console.log("---EXEC PREP---"),n.step=-1);try{kt(n)}catch(e){this._errorState<2&&console.log("Hinting error in PREP:"+e),this._errorState=2}}if(!(1<this._errorState))try{return Rt(e,n)}catch(e){return this._errorState<1&&(console.log("Hinting error:"+e),console.log("Note: further hinting errors are silenced")),void(this._errorState=1)}}},Rt=function(e,t){var r,n,o,i=t.ppem/t.font.unitsPerEm,a=i,s=e.components;if(Jt.prototype=t,s){var l=t.font;n=[],r=[];for(var u=0;u<s.length;u++){var c=s[u],d=l.glyphs.get(c.glyphIndex);o=new Jt("glyf",d.instructions),M.DEBUG&&(console.log("---EXEC COMP "+u+"---"),o.step=-1),Dt(d,o,i,a);for(var f=Math.round(c.dx*i),h=Math.round(c.dy*a),p=o.gZone,y=o.contours,m=0;m<p.length;m++){var g=p[m];g.xTouched=g.yTouched=!1,g.xo=g.x=g.x+f,g.yo=g.y=g.y+h}var v=n.length;n.push.apply(n,p);for(var b=0;b<y.length;b++)r.push(y[b]+v)}e.instructions&&!o.inhibitGridFit&&((o=new Jt("glyf",e.instructions)).gZone=o.z0=o.z1=o.z2=n,o.contours=r,n.push(new Zt(0,0),new Zt(Math.round(e.advanceWidth*i),0)),M.DEBUG&&(console.log("---EXEC COMPOSITE---"),o.step=-1),kt(o),n.length-=2)}else o=new Jt("glyf",e.instructions),M.DEBUG&&(console.log("---EXEC GLYPH---"),o.step=-1),Dt(e,o,i,a),n=o.gZone;return n},Dt=function(e,t,r,n){for(var o,i,a,s=e.points||[],l=s.length,u=t.gZone=t.z0=t.z1=t.z2=[],c=t.contours=[],d=0;d<l;d++)o=s[d],u[d]=new Zt(o.x*r,o.y*n,o.lastPointOfContour,o.onCurve);for(var f=0;f<l;f++)o=u[f],i||(i=o,c.push(f)),o.lastPointOfContour?((o.nextPointOnContour=i).prevPointOnContour=o,i=void 0):(a=u[f+1],(o.nextPointOnContour=a).prevPointOnContour=o);if(!t.inhibitGridFit){if(M.DEBUG){console.log("PROCESSING GLYPH",t.stack);for(var h=0;h<l;h++)console.log(h,u[h].x,u[h].y)}if(u.push(new Zt(0,0),new Zt(Math.round(e.advanceWidth*r),0)),kt(t),u.length-=2,M.DEBUG){console.log("FINISHED GLYPH",t.stack);for(var p=0;p<l;p++)console.log(p,u[p].x,u[p].y)}}},kt=function(e){var t=e.prog;if(t){var r,n=t.length;for(e.ip=0;e.ip<n;e.ip++){if(M.DEBUG&&e.step++,!(r=At[t[e.ip]]))throw new Error("unknown instruction: 0x"+Number(t[e.ip]).toString(16));r(e)}}},At=[tr.bind(void 0,qt),tr.bind(void 0,Wt),rr.bind(void 0,qt),rr.bind(void 0,Wt),nr.bind(void 0,qt),nr.bind(void 0,Wt),or.bind(void 0,0),or.bind(void 0,1),ir.bind(void 0,0),ir.bind(void 0,1),function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"SPVFS[]",r,n),e.pv=e.dpv=Yt(n,r)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"SPVFS[]",r,n),e.fv=Yt(n,r)},function(e){var t=e.stack,r=e.pv;M.DEBUG&&console.log(e.step,"GPV[]"),t.push(16384*r.x),t.push(16384*r.y)},function(e){var t=e.stack,r=e.fv;M.DEBUG&&console.log(e.step,"GFV[]"),t.push(16384*r.x),t.push(16384*r.y)},function(e){e.fv=e.pv,M.DEBUG&&console.log(e.step,"SFVTPV[]")},function(e){var t=e.stack,r=t.pop(),n=t.pop(),o=t.pop(),i=t.pop(),a=t.pop(),s=e.z0,l=e.z1,u=s[r],c=s[n],d=l[o],f=l[i],h=e.z2[a];M.DEBUG&&console.log("ISECT[], ",r,n,o,i,a);var p=u.x,y=u.y,m=c.x,g=c.y,v=d.x,b=d.y,_=f.x,x=f.y,w=(p-m)*(b-x)-(y-g)*(v-_),j=p*g-y*m,S=v*x-b*_;h.x=(j*(v-_)-S*(p-m))/w,h.y=(j*(b-x)-S*(y-g))/w},function(e){e.rp0=e.stack.pop(),M.DEBUG&&console.log(e.step,"SRP0[]",e.rp0)},function(e){e.rp1=e.stack.pop(),M.DEBUG&&console.log(e.step,"SRP1[]",e.rp1)},function(e){e.rp2=e.stack.pop(),M.DEBUG&&console.log(e.step,"SRP2[]",e.rp2)},function(e){var t=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"SZP0[]",t),e.zp0=t){case 0:e.tZone||$t(e),e.z0=e.tZone;break;case 1:e.z0=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var t=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"SZP1[]",t),e.zp1=t){case 0:e.tZone||$t(e),e.z1=e.tZone;break;case 1:e.z1=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var t=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"SZP2[]",t),e.zp2=t){case 0:e.tZone||$t(e),e.z2=e.tZone;break;case 1:e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var t=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"SZPS[]",t),e.zp0=e.zp1=e.zp2=t,t){case 0:e.tZone||$t(e),e.z0=e.z1=e.z2=e.tZone;break;case 1:e.z0=e.z1=e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){e.loop=e.stack.pop(),M.DEBUG&&console.log(e.step,"SLOOP[]",e.loop)},function(e){M.DEBUG&&console.log(e.step,"RTG[]"),e.round=Ft},function(e){M.DEBUG&&console.log(e.step,"RTHG[]"),e.round=Gt},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"SMD[]",t),e.minDis=t/64},function(e){M.DEBUG&&console.log(e.step,"ELSE[]"),er(e,!1)},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"JMPR[]",t),e.ip+=t-1},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"SCVTCI[]",t),e.cvCutIn=t/64},void 0,void 0,function(e){var t=e.stack;M.DEBUG&&console.log(e.step,"DUP[]"),t.push(t[t.length-1])},ar,function(e){M.DEBUG&&console.log(e.step,"CLEAR[]"),e.stack.length=0},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"SWAP[]"),t.push(r),t.push(n)},function(e){var t=e.stack;M.DEBUG&&console.log(e.step,"DEPTH[]"),t.push(t.length)},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"CINDEX[]",r),t.push(t[t.length-r])},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"MINDEX[]",r),t.push(t.splice(t.length-r,1)[0])},void 0,void 0,void 0,function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"LOOPCALL[]",r,n);var o=e.ip,i=e.prog;e.prog=e.funcs[r];for(var a=0;a<n;a++)kt(e),M.DEBUG&&console.log(++e.step,a+1<n?"next loopcall":"done loopcall",a);e.ip=o,e.prog=i},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"CALL[]",t);var r=e.ip,n=e.prog;e.prog=e.funcs[t],kt(e),e.ip=r,e.prog=n,M.DEBUG&&console.log(++e.step,"returning from",t)},function(e){if("fpgm"!==e.env)throw new Error("FDEF not allowed here");var t=e.stack,r=e.prog,n=e.ip,o=t.pop(),i=n;for(M.DEBUG&&console.log(e.step,"FDEF[]",o);45!==r[++n];);e.ip=n,e.funcs[o]=r.slice(i+1,n)},void 0,sr.bind(void 0,0),sr.bind(void 0,1),lr.bind(void 0,qt),lr.bind(void 0,Wt),ur.bind(void 0,0),ur.bind(void 0,1),cr.bind(void 0,0),cr.bind(void 0,1),dr.bind(void 0,0),dr.bind(void 0,1),function(e){for(var t=e.stack,r=e.loop,n=e.fv,o=t.pop()/64,i=e.z2;r--;){var a=t.pop(),s=i[a];M.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-r)+": ":"")+"SHPIX[]",a,o),n.setRelative(s,s,o),n.touch(s)}e.loop=1},function(e){for(var t=e.stack,r=e.rp1,n=e.rp2,o=e.loop,i=e.z0[r],a=e.z1[n],s=e.fv,l=e.dpv,u=e.z2;o--;){var c=t.pop(),d=u[c];M.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-o)+": ":"")+"IP[]",c,r,"<->",n),s.interpolate(d,i,a,l),s.touch(d)}e.loop=1},fr.bind(void 0,0),fr.bind(void 0,1),function(e){for(var t=e.stack,r=e.rp0,n=e.z0[r],o=e.loop,i=e.fv,a=e.pv,s=e.z1;o--;){var l=t.pop(),u=s[l];M.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-o)+": ":"")+"ALIGNRP[]",l),i.setRelative(u,n,0,a),i.touch(u)}e.loop=1},function(e){M.DEBUG&&console.log(e.step,"RTDG[]"),e.round=Bt},hr.bind(void 0,0),hr.bind(void 0,1),function(e){var t=e.prog,r=e.ip,n=e.stack,o=t[++r];M.DEBUG&&console.log(e.step,"NPUSHB[]",o);for(var i=0;i<o;i++)n.push(t[++r]);e.ip=r},function(e){var t=e.ip,r=e.prog,n=e.stack,o=r[++t];M.DEBUG&&console.log(e.step,"NPUSHW[]",o);for(var i=0;i<o;i++){var a=r[++t]<<8|r[++t];32768&a&&(a=-(1+(65535^a))),n.push(a)}e.ip=t},function(e){var t=e.stack,r=e.store;r=r||(e.store=[]);var n=t.pop(),o=t.pop();M.DEBUG&&console.log(e.step,"WS",n,o),r[o]=n},function(e){var t=e.stack,r=e.store,n=t.pop();M.DEBUG&&console.log(e.step,"RS",n);var o=r&&r[n]||0;t.push(o)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"WCVTP",r,n),e.cvt[n]=r/64},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"RCVT",r),t.push(64*e.cvt[r])},pr.bind(void 0,0),pr.bind(void 0,1),void 0,yr.bind(void 0,0),yr.bind(void 0,1),function(e){M.DEBUG&&console.log(e.step,"MPPEM[]"),e.stack.push(e.ppem)},void 0,function(e){M.DEBUG&&console.log(e.step,"FLIPON[]"),e.autoFlip=!0},void 0,void 0,function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"LT[]",r,n),t.push(n<r?1:0)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"LTEQ[]",r,n),t.push(n<=r?1:0)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"GT[]",r,n),t.push(r<n?1:0)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"GTEQ[]",r,n),t.push(r<=n?1:0)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"EQ[]",r,n),t.push(r===n?1:0)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"NEQ[]",r,n),t.push(r!==n?1:0)},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"ODD[]",r),t.push(Math.trunc(r)%2?1:0)},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"EVEN[]",r),t.push(Math.trunc(r)%2?0:1)},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"IF[]",t),t||(er(e,!0),M.DEBUG&&console.log(e.step,"EIF[]"))},function(e){M.DEBUG&&console.log(e.step,"EIF[]")},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"AND[]",r,n),t.push(r&&n?1:0)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"OR[]",r,n),t.push(r||n?1:0)},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"NOT[]",r),t.push(r?0:1)},mr.bind(void 0,1),function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"SDB[]",t),e.deltaBase=t},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"SDS[]",t),e.deltaShift=Math.pow(.5,t)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"ADD[]",r,n),t.push(n+r)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"SUB[]",r,n),t.push(n-r)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"DIV[]",r,n),t.push(64*n/r)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"MUL[]",r,n),t.push(n*r/64)},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"ABS[]",r),t.push(Math.abs(r))},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"NEG[]",r),t.push(-r)},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"FLOOR[]",r),t.push(64*Math.floor(r/64))},function(e){var t=e.stack,r=t.pop();M.DEBUG&&console.log(e.step,"CEILING[]",r),t.push(64*Math.ceil(r/64))},gr.bind(void 0,0),gr.bind(void 0,1),gr.bind(void 0,2),gr.bind(void 0,3),void 0,void 0,void 0,void 0,function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"WCVTF[]",r,n),e.cvt[n]=r*e.ppem/e.font.unitsPerEm},mr.bind(void 0,2),mr.bind(void 0,3),vr.bind(void 0,1),vr.bind(void 0,2),vr.bind(void 0,3),function(e){var t,r=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"SROUND[]",r),e.round=Ht,192&r){case 0:t=.5;break;case 64:t=1;break;case 128:t=2;break;default:throw new Error("invalid SROUND value")}switch(e.srPeriod=t,48&r){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*t;break;case 32:e.srPhase=.5*t;break;case 48:e.srPhase=.75*t;break;default:throw new Error("invalid SROUND value")}r&=15,e.srThreshold=0===r?0:(r/8-.5)*t},function(e){var t,r=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"S45ROUND[]",r),e.round=Ht,192&r){case 0:t=Math.sqrt(2)/2;break;case 64:t=Math.sqrt(2);break;case 128:t=2*Math.sqrt(2);break;default:throw new Error("invalid S45ROUND value")}switch(e.srPeriod=t,48&r){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*t;break;case 32:e.srPhase=.5*t;break;case 48:e.srPhase=.75*t;break;default:throw new Error("invalid S45ROUND value")}r&=15,e.srThreshold=0===r?0:(r/8-.5)*t},void 0,void 0,function(e){M.DEBUG&&console.log(e.step,"ROFF[]"),e.round=Nt},void 0,function(e){M.DEBUG&&console.log(e.step,"RUTG[]"),e.round=Vt},function(e){M.DEBUG&&console.log(e.step,"RDTG[]"),e.round=zt},ar,ar,void 0,void 0,void 0,void 0,void 0,function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"SCANCTRL[]",t)},br.bind(void 0,0),br.bind(void 0,1),function(e){var t=e.stack,r=t.pop(),n=0;M.DEBUG&&console.log(e.step,"GETINFO[]",r),1&r&&(n=35),32&r&&(n|=4096),t.push(n)},void 0,function(e){var t=e.stack,r=t.pop(),n=t.pop(),o=t.pop();M.DEBUG&&console.log(e.step,"ROLL[]"),t.push(n),t.push(r),t.push(o)},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"MAX[]",r,n),t.push(Math.max(n,r))},function(e){var t=e.stack,r=t.pop(),n=t.pop();M.DEBUG&&console.log(e.step,"MIN[]",r,n),t.push(Math.min(n,r))},function(e){var t=e.stack.pop();M.DEBUG&&console.log(e.step,"SCANTYPE[]",t)},function(e){var t=e.stack.pop(),r=e.stack.pop();switch(M.DEBUG&&console.log(e.step,"INSTCTRL[]",t,r),t){case 1:return void(e.inhibitGridFit=!!r);case 2:return void(e.ignoreCvt=!!r);default:throw new Error("invalid INSTCTRL[] selector")}},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,_r.bind(void 0,1),_r.bind(void 0,2),_r.bind(void 0,3),_r.bind(void 0,4),_r.bind(void 0,5),_r.bind(void 0,6),_r.bind(void 0,7),_r.bind(void 0,8),xr.bind(void 0,1),xr.bind(void 0,2),xr.bind(void 0,3),xr.bind(void 0,4),xr.bind(void 0,5),xr.bind(void 0,6),xr.bind(void 0,7),xr.bind(void 0,8),wr.bind(void 0,0,0,0,0,0),wr.bind(void 0,0,0,0,0,1),wr.bind(void 0,0,0,0,0,2),wr.bind(void 0,0,0,0,0,3),wr.bind(void 0,0,0,0,1,0),wr.bind(void 0,0,0,0,1,1),wr.bind(void 0,0,0,0,1,2),wr.bind(void 0,0,0,0,1,3),wr.bind(void 0,0,0,1,0,0),wr.bind(void 0,0,0,1,0,1),wr.bind(void 0,0,0,1,0,2),wr.bind(void 0,0,0,1,0,3),wr.bind(void 0,0,0,1,1,0),wr.bind(void 0,0,0,1,1,1),wr.bind(void 0,0,0,1,1,2),wr.bind(void 0,0,0,1,1,3),wr.bind(void 0,0,1,0,0,0),wr.bind(void 0,0,1,0,0,1),wr.bind(void 0,0,1,0,0,2),wr.bind(void 0,0,1,0,0,3),wr.bind(void 0,0,1,0,1,0),wr.bind(void 0,0,1,0,1,1),wr.bind(void 0,0,1,0,1,2),wr.bind(void 0,0,1,0,1,3),wr.bind(void 0,0,1,1,0,0),wr.bind(void 0,0,1,1,0,1),wr.bind(void 0,0,1,1,0,2),wr.bind(void 0,0,1,1,0,3),wr.bind(void 0,0,1,1,1,0),wr.bind(void 0,0,1,1,1,1),wr.bind(void 0,0,1,1,1,2),wr.bind(void 0,0,1,1,1,3),wr.bind(void 0,1,0,0,0,0),wr.bind(void 0,1,0,0,0,1),wr.bind(void 0,1,0,0,0,2),wr.bind(void 0,1,0,0,0,3),wr.bind(void 0,1,0,0,1,0),wr.bind(void 0,1,0,0,1,1),wr.bind(void 0,1,0,0,1,2),wr.bind(void 0,1,0,0,1,3),wr.bind(void 0,1,0,1,0,0),wr.bind(void 0,1,0,1,0,1),wr.bind(void 0,1,0,1,0,2),wr.bind(void 0,1,0,1,0,3),wr.bind(void 0,1,0,1,1,0),wr.bind(void 0,1,0,1,1,1),wr.bind(void 0,1,0,1,1,2),wr.bind(void 0,1,0,1,1,3),wr.bind(void 0,1,1,0,0,0),wr.bind(void 0,1,1,0,0,1),wr.bind(void 0,1,1,0,0,2),wr.bind(void 0,1,1,0,0,3),wr.bind(void 0,1,1,0,1,0),wr.bind(void 0,1,1,0,1,1),wr.bind(void 0,1,1,0,1,2),wr.bind(void 0,1,1,0,1,3),wr.bind(void 0,1,1,1,0,0),wr.bind(void 0,1,1,1,0,1),wr.bind(void 0,1,1,1,0,2),wr.bind(void 0,1,1,1,0,3),wr.bind(void 0,1,1,1,1,0),wr.bind(void 0,1,1,1,1,1),wr.bind(void 0,1,1,1,1,2),wr.bind(void 0,1,1,1,1,3)];var jr=Array.from||function(e){return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g)||[]};function Sr(e){(e=e||{}).empty||(Et(e.familyName,"When creating a new Font object, familyName is required."),Et(e.styleName,"When creating a new Font object, styleName is required."),Et(e.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),Et(e.ascender,"When creating a new Font object, ascender is required."),Et(e.descender,"When creating a new Font object, descender is required."),Et(e.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:e.familyName||" "},fontSubfamily:{en:e.styleName||" "},fullName:{en:e.fullName||e.familyName+" "+e.styleName},postScriptName:{en:e.postScriptName||(e.familyName+e.styleName).replace(/\s/g,"")},designer:{en:e.designer||" "},designerURL:{en:e.designerURL||" "},manufacturer:{en:e.manufacturer||" "},manufacturerURL:{en:e.manufacturerURL||" "},license:{en:e.license||" "},licenseURL:{en:e.licenseURL||" "},version:{en:e.version||"Version 0.1"},description:{en:e.description||" "},copyright:{en:e.copyright||" "},trademark:{en:e.trademark||" "}},this.unitsPerEm=e.unitsPerEm||1e3,this.ascender=e.ascender,this.descender=e.descender,this.createdTimestamp=e.createdTimestamp,this.tables={os2:{usWeightClass:e.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:e.widthClass||this.usWidthClasses.MEDIUM,fsSelection:e.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new _e.GlyphSet(this,e.glyphs||[]),this.encoding=new fe(this),this.position=new xt(this),this.substitution=new wt(this),this.tables=this.tables||{},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new Ut(this):void 0}})}function Mr(e,t){var r=JSON.stringify(e),n=256;for(var o in t){var i=parseInt(o);if(i&&!(i<256)){if(JSON.stringify(t[o])===r)return i;n<=i&&(n=i+1)}}return t[n]=e,n}function Er(e,t,r,n){for(var o=[{name:"nameID_"+e,type:"USHORT",value:Mr(t.name,n)},{name:"flags_"+e,type:"USHORT",value:0}],i=0;i<r.length;++i){var a=r[i].tag;o.push({name:"axis_"+e+" "+a,type:"FIXED",value:t.coordinates[a]<<16})}return o}function Tr(e,t,r,n){var o={},i=new ae.Parser(e,t);o.name=n[i.parseUShort()]||{},i.skip("uShort",1),o.coordinates={};for(var a=0;a<r.length;++a)o.coordinates[r[a].tag]=i.parseFixed();return o}Sr.prototype.hasChar=function(e){return null!==this.encoding.charToGlyphIndex(e)},Sr.prototype.charToGlyphIndex=function(e){return this.encoding.charToGlyphIndex(e)},Sr.prototype.charToGlyph=function(e){var t=this.charToGlyphIndex(e),r=this.glyphs.get(t);return r=r||this.glyphs.get(0)},Sr.prototype.stringToGlyphs=function(e,t){t=t||this.defaultRenderOptions;for(var r=jr(e),n=[],o=0;o<r.length;o+=1){var i=r[o];n.push(this.charToGlyphIndex(i))}var a=n.length;if(t.features){var s=t.script||this.substitution.getDefaultScriptName(),l=[];t.features.liga&&(l=l.concat(this.substitution.getFeature("liga",s,t.language))),t.features.rlig&&(l=l.concat(this.substitution.getFeature("rlig",s,t.language)));for(var u=0;u<a;u+=1)for(var c=0;c<l.length;c++){for(var d=l[c],f=d.sub,h=f.length,p=0;p<h&&f[p]===n[u+p];)p++;p===h&&(n.splice(u,h,d.by),a=a-h+1)}}for(var y=new Array(a),m=this.glyphs.get(0),g=0;g<a;g+=1)y[g]=this.glyphs.get(n[g])||m;return y},Sr.prototype.nameToGlyphIndex=function(e){return this.glyphNames.nameToGlyphIndex(e)},Sr.prototype.nameToGlyph=function(e){var t=this.nameToGlyphIndex(e),r=this.glyphs.get(t);return r=r||this.glyphs.get(0)},Sr.prototype.glyphIndexToName=function(e){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(e):""},Sr.prototype.getKerningValue=function(e,t){e=e.index||e,t=t.index||t;var r=this.position.defaultKerningTables;return r?this.position.getKerningValue(r,e,t):this.kerningPairs[e+","+t]||0},Sr.prototype.defaultRenderOptions={kerning:!0,features:{liga:!0,rlig:!0}},Sr.prototype.forEachGlyph=function(e,t,r,n,o,i){t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:72,o=o||this.defaultRenderOptions;var a,s=1/this.unitsPerEm*n,l=this.stringToGlyphs(e,o);if(o.kerning){var u=o.script||this.position.getDefaultScriptName();a=this.position.getKerningTables(u,o.language)}for(var c=0;c<l.length;c+=1){var d=l[c];if(i.call(this,d,t,r,n,o),d.advanceWidth&&(t+=d.advanceWidth*s),o.kerning&&c<l.length-1)t+=(a?this.position.getKerningValue(a,d.index,l[c+1].index):this.getKerningValue(d,l[c+1]))*s;o.letterSpacing?t+=o.letterSpacing*n:o.tracking&&(t+=o.tracking/1e3*n)}return t},Sr.prototype.getPath=function(e,t,r,n,i){var a=new D;return this.forEachGlyph(e,t,r,n,i,function(e,t,r,n){var o=e.getPath(t,r,n,i,this);a.extend(o)}),a},Sr.prototype.getPaths=function(e,t,r,n,i){var a=[];return this.forEachGlyph(e,t,r,n,i,function(e,t,r,n){var o=e.getPath(t,r,n,i,this);a.push(o)}),a},Sr.prototype.getAdvanceWidth=function(e,t,r){return this.forEachGlyph(e,0,0,t,r,function(){})},Sr.prototype.draw=function(e,t,r,n,o,i){this.getPath(t,r,n,o,i).draw(e)},Sr.prototype.drawPoints=function(o,e,t,r,n,i){this.forEachGlyph(e,t,r,n,i,function(e,t,r,n){e.drawPoints(o,t,r,n)})},Sr.prototype.drawMetrics=function(o,e,t,r,n,i){this.forEachGlyph(e,t,r,n,i,function(e,t,r,n){e.drawMetrics(o,t,r,n)})},Sr.prototype.getEnglishName=function(e){var t=this.names[e];if(t)return t.en},Sr.prototype.validate=function(){var r=this;function e(e){var t=r.getEnglishName(e);t&&t.trim().length}e("fontFamily"),e("weightName"),e("manufacturer"),e("copyright"),e("version"),this.unitsPerEm},Sr.prototype.toTables=function(){return mt.fontToTable(this)},Sr.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},Sr.prototype.toArrayBuffer=function(){for(var e=this.toTables().encode(),t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n<e.length;n++)r[n]=e[n];return t},Sr.prototype.download=function(t){var e=this.getEnglishName("fontFamily"),r=this.getEnglishName("fontSubfamily");t=t||e.replace(/\s/g,"")+"-"+r+".otf";var o=this.toArrayBuffer();if("undefined"!=typeof window)window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.TEMPORARY,o.byteLength,function(e){e.root.getFile(t,{create:!0},function(n){n.createWriter(function(e){var t=new DataView(o),r=new Blob([t],{type:"font/opentype"});e.write(r),e.addEventListener("writeend",function(){location.href=n.toURL()},!1)})})},function(e){throw new Error(e.name+": "+e.message)});else{var n=Br("fs"),i=function(e){for(var t=new Fr(e.byteLength),r=new Uint8Array(e),n=0;n<t.length;++n)t[n]=r[n];return t}(o);n.writeFileSync(t,i)}},Sr.prototype.fsSelectionValues={ITALIC:1,UNDERSCORE:2,NEGATIVE:4,OUTLINED:8,STRIKEOUT:16,BOLD:32,REGULAR:64,USER_TYPO_METRICS:128,WWS:256,OBLIQUE:512},Sr.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},Sr.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var Or={make:function(e,t){var r,n,o,i,a=new J.Table("fvar",[{name:"version",type:"ULONG",value:65536},{name:"offsetToData",type:"USHORT",value:0},{name:"countSizePairs",type:"USHORT",value:2},{name:"axisCount",type:"USHORT",value:e.axes.length},{name:"axisSize",type:"USHORT",value:20},{name:"instanceCount",type:"USHORT",value:e.instances.length},{name:"instanceSize",type:"USHORT",value:4+4*e.axes.length}]);a.offsetToData=a.sizeOf();for(var s=0;s<e.axes.length;s++)a.fields=a.fields.concat((r=s,n=e.axes[s],o=t,i=Mr(n.name,o),[{name:"tag_"+r,type:"TAG",value:n.tag},{name:"minValue_"+r,type:"FIXED",value:n.minValue<<16},{name:"defaultValue_"+r,type:"FIXED",value:n.defaultValue<<16},{name:"maxValue_"+r,type:"FIXED",value:n.maxValue<<16},{name:"flags_"+r,type:"USHORT",value:0},{name:"nameID_"+r,type:"USHORT",value:i}]));for(var l=0;l<e.instances.length;l++)a.fields=a.fields.concat(Er(l,e.instances[l],e.axes,t));return a},parse:function(e,t,r){var n=new ae.Parser(e,t),o=n.parseULong();L.argument(65536===o,"Unsupported fvar table version.");var i=n.parseOffset16();n.skip("uShort",1);for(var a,s,l,u,c,d=n.parseUShort(),f=n.parseUShort(),h=n.parseUShort(),p=n.parseUShort(),y=[],m=0;m<d;m++)y.push((a=e,s=t+i+m*f,l=r,c=u=void 0,u={},c=new ae.Parser(a,s),u.tag=c.parseTag(),u.minValue=c.parseFixed(),u.defaultValue=c.parseFixed(),u.maxValue=c.parseFixed(),c.skip("uShort",1),u.name=l[c.parseUShort()]||{},u));for(var g=[],v=t+i+d*f,b=0;b<h;b++)g.push(Tr(e,v+b*p,y,r));return{axes:y,instances:g}}},Cr=new Array(10);Cr[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{posFormat:1,coverage:this.parsePointer(oe.coverage),value:this.parseValueRecord()}:2===t?{posFormat:2,coverage:this.parsePointer(oe.coverage),values:this.parseValueRecordList()}:void L.assert(!1,"0x"+e.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},Cr[2]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();L.assert(1===t||2===t,"0x"+e.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var r=this.parsePointer(oe.coverage),n=this.parseUShort(),o=this.parseUShort();if(1===t)return{posFormat:t,coverage:r,valueFormat1:n,valueFormat2:o,pairSets:this.parseList(oe.pointer(oe.list(function(){return{secondGlyph:this.parseUShort(),value1:this.parseValueRecord(n),value2:this.parseValueRecord(o)}})))};if(2===t){var i=this.parsePointer(oe.classDef),a=this.parsePointer(oe.classDef),s=this.parseUShort(),l=this.parseUShort();return{posFormat:t,coverage:r,valueFormat1:n,valueFormat2:o,classDef1:i,classDef2:a,class1Count:s,class2Count:l,classRecords:this.parseList(s,oe.list(l,function(){return{value1:this.parseValueRecord(n),value2:this.parseValueRecord(o)}}))}}},Cr[3]=function(){return{error:"GPOS Lookup 3 not supported"}},Cr[4]=function(){return{error:"GPOS Lookup 4 not supported"}},Cr[5]=function(){return{error:"GPOS Lookup 5 not supported"}},Cr[6]=function(){return{error:"GPOS Lookup 6 not supported"}},Cr[7]=function(){return{error:"GPOS Lookup 7 not supported"}},Cr[8]=function(){return{error:"GPOS Lookup 8 not supported"}},Cr[9]=function(){return{error:"GPOS Lookup 9 not supported"}};var Lr=new Array(10);var Pr={parse:function(e,t){var r=new oe(e,t=t||0),n=r.parseVersion(1);return L.argument(1===n||1.1===n,"Unsupported GPOS table version "+n),1===n?{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Cr)}:{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Cr),variations:r.parseFeatureVariationsList()}},make:function(e){return new J.Table("GPOS",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new J.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new J.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new J.LookupList(e.lookups,Lr)}])}};var Ar={parse:function(e,t){var r=new ae.Parser(e,t),n=r.parseUShort();if(0===n)return function(e){var t={};e.skip("uShort");var r=e.parseUShort();L.argument(0===r,"Unsupported kern sub-table version."),e.skip("uShort",2);var n=e.parseUShort();e.skip("uShort",3);for(var o=0;o<n;o+=1){var i=e.parseUShort(),a=e.parseUShort(),s=e.parseShort();t[i+","+a]=s}return t}(r);if(1===n)return function(e){var t={};e.skip("uShort"),1<e.parseULong()&&console.warn("Only the first kern subtable is supported."),e.skip("uLong");var r=255&e.parseUShort();if(e.skip("uShort"),0==r){var n=e.parseUShort();e.skip("uShort",3);for(var o=0;o<n;o+=1){var i=e.parseUShort(),a=e.parseUShort(),s=e.parseShort();t[i+","+a]=s}}return t}(r);throw new Error("Unsupported kern table version ("+n+").")}};var kr={parse:function(e,t,r,n){for(var o=new ae.Parser(e,t),i=n?o.parseUShort:o.parseULong,a=[],s=0;s<r+1;s+=1){var l=i.call(o);n&&(l*=2),a.push(l)}return a}};function Rr(e,r){Br("fs").readFile(e,function(e,t){if(e)return r(e.message);r(null,Mt(t))})}function Dr(e,t){var r=new XMLHttpRequest;r.open("get",e,!0),r.responseType="arraybuffer",r.onload=function(){return r.response?t(null,r.response):t("Font could not be loaded: "+r.statusText)},r.onerror=function(){t("Font could not be loaded")},r.send()}function Ir(e,t){for(var r=[],n=12,o=0;o<t;o+=1){var i=ae.getTag(e,n),a=ae.getULong(e,n+4),s=ae.getULong(e,n+8),l=ae.getULong(e,n+12);r.push({tag:i,checksum:a,offset:s,length:l,compression:!1}),n+=16}return r}function Ur(e,t){if("WOFF"!==t.compression)return{data:e,offset:t.offset};var r=new Uint8Array(e.buffer,t.offset+2,t.compressedLength-2),n=new Uint8Array(t.length);if(o(r,n),n.byteLength!==t.length)throw new Error("Decompression error: "+t.tag+" decompressed length doesn't match recorded length");return{data:new DataView(n.buffer,0),offset:0}}function Nr(e){var t,r,n,o,i,a,s,l,u,c,d,f,h,p,y=new Sr({empty:!0}),m=new DataView(e,0),g=[],v=ae.getTag(m,0);if(v===String.fromCharCode(0,1,0,0)||"true"===v||"typ1"===v)y.outlinesFormat="truetype",g=Ir(m,n=ae.getUShort(m,4));else if("OTTO"===v)y.outlinesFormat="cff",g=Ir(m,n=ae.getUShort(m,4));else{if("wOFF"!==v)throw new Error("Unsupported OpenType signature "+v);var b=ae.getTag(m,4);if(b===String.fromCharCode(0,1,0,0))y.outlinesFormat="truetype";else{if("OTTO"!==b)throw new Error("Unsupported OpenType flavor "+v);y.outlinesFormat="cff"}g=function(e,t){for(var r=[],n=44,o=0;o<t;o+=1){var i=ae.getTag(e,n),a=ae.getULong(e,n+4),s=ae.getULong(e,n+8),l=ae.getULong(e,n+12),u=void 0;u=s<l&&"WOFF",r.push({tag:i,offset:a,compression:u,compressedLength:s,length:l}),n+=20}return r}(m,n=ae.getUShort(m,12))}for(var _=0;_<n;_+=1){var x=g[_],w=void 0;switch(x.tag){case"cmap":w=Ur(m,x),y.tables.cmap=se.parse(w.data,w.offset),y.encoding=new he(y.tables.cmap);break;case"cvt ":w=Ur(m,x),p=new ae.Parser(w.data,w.offset),y.tables.cvt=p.parseShortList(x.length/2);break;case"fvar":i=x;break;case"fpgm":w=Ur(m,x),p=new ae.Parser(w.data,w.offset),y.tables.fpgm=p.parseByteList(x.length);break;case"head":w=Ur(m,x),y.tables.head=Fe.parse(w.data,w.offset),y.unitsPerEm=y.tables.head.unitsPerEm,t=y.tables.head.indexToLocFormat;break;case"hhea":w=Ur(m,x),y.tables.hhea=Be.parse(w.data,w.offset),y.ascender=y.tables.hhea.ascender,y.descender=y.tables.hhea.descender,y.numberOfHMetrics=y.tables.hhea.numberOfHMetrics;break;case"hmtx":u=x;break;case"ltag":w=Ur(m,x),r=Ve.parse(w.data,w.offset);break;case"maxp":w=Ur(m,x),y.tables.maxp=ze.parse(w.data,w.offset),y.numGlyphs=y.tables.maxp.numGlyphs;break;case"name":f=x;break;case"OS/2":w=Ur(m,x),y.tables.os2=ot.parse(w.data,w.offset);break;case"post":w=Ur(m,x),y.tables.post=it.parse(w.data,w.offset),y.glyphNames=new ye(y.tables.post);break;case"prep":w=Ur(m,x),p=new ae.Parser(w.data,w.offset),y.tables.prep=p.parseByteList(x.length);break;case"glyf":a=x;break;case"loca":d=x;break;case"CFF ":o=x;break;case"kern":c=x;break;case"GPOS":s=x;break;case"GSUB":l=x;break;case"meta":h=x}}var j=Ur(m,f);if(y.tables.name=rt.parse(j.data,j.offset,r),y.names=y.tables.name,a&&d){var S=0===t,M=Ur(m,d),E=kr.parse(M.data,M.offset,y.numGlyphs,S),T=Ur(m,a);y.glyphs=It.parse(T.data,T.offset,E,y)}else{if(!o)throw new Error("Font doesn't contain TrueType or CFF outlines.");var O=Ur(m,o);Ne.parse(O.data,O.offset,y)}var C=Ur(m,u);if(Ge.parse(C.data,C.offset,y.numberOfHMetrics,y.numGlyphs,y.glyphs),function(e){for(var t,r=e.tables.cmap.glyphIndexMap,n=Object.keys(r),o=0;o<n.length;o+=1){var i=n[o],a=r[i];(t=e.glyphs.get(a)).addUnicode(parseInt(i))}for(var s=0;s<e.glyphs.length;s+=1)t=e.glyphs.get(s),e.cffEncoding?e.isCIDFont?t.name="gid"+s:t.name=e.cffEncoding.charset[s]:e.glyphNames.names&&(t.name=e.glyphNames.glyphIndexToName(s))}(y),c){var L=Ur(m,c);y.kerningPairs=Ar.parse(L.data,L.offset)}else y.kerningPairs={};if(s){var P=Ur(m,s);y.tables.gpos=Pr.parse(P.data,P.offset),y.position.init()}if(l){var A=Ur(m,l);y.tables.gsub=ut.parse(A.data,A.offset)}if(i){var k=Ur(m,i);y.tables.fvar=Or.parse(k.data,k.offset,y.names)}if(h){var R=Ur(m,h);y.tables.meta=ct.parse(R.data,R.offset),y.metas=y.tables.meta}return y}M.Font=Sr,M.Glyph=ge,M.Path=D,M.BoundingBox=T,M._parse=ae,M.parse=Nr,M.load=function(e,n){("undefined"==typeof window?Rr:Dr)(e,function(e,t){if(e)return n(e);var r;try{r=Nr(t)}catch(e){return n(e,null)}return n(null,r)})},M.loadSync=function(e){return Nr(Mt(Br("fs").readFileSync(e)))},Object.defineProperty(M,"__esModule",{value:!0})},"object"==typeof n&&void 0!==r?t(n):"function"==typeof i&&i.amd?i(["exports"],t):t(e.opentype={})}).call(this,Br("buffer").Buffer)},{buffer:4,fs:2}],240:[function(e,t,u){(function(o){function i(e,t){for(var r=0,n=e.length-1;0<=n;n--){var o=e[n];"."===o?e.splice(n,1):".."===o?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}if(t)for(;r--;)e.unshift("..");return e}function a(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}u.resolve=function(){for(var e="",t=!1,r=arguments.length-1;-1<=r&&!t;r--){var n=0<=r?arguments[r]:o.cwd();if("string"!=typeof n)throw new TypeError("Arguments to path.resolve must be strings");n&&(e=n+"/"+e,t="/"===n.charAt(0))}return(t?"/":"")+(e=i(a(e.split("/"),function(e){return!!e}),!t).join("/"))||"."},u.normalize=function(e){var t=u.isAbsolute(e),r="/"===n(e,-1);return(e=i(a(e.split("/"),function(e){return!!e}),!t).join("/"))||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e},u.isAbsolute=function(e){return"/"===e.charAt(0)},u.join=function(){var e=Array.prototype.slice.call(arguments,0);return u.normalize(a(e,function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))},u.relative=function(e,t){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;0<=r&&""===e[r];r--);return r<t?[]:e.slice(t,r-t+1)}e=u.resolve(e).substr(1),t=u.resolve(t).substr(1);for(var n=r(e.split("/")),o=r(t.split("/")),i=Math.min(n.length,o.length),a=i,s=0;s<i;s++)if(n[s]!==o[s]){a=s;break}var l=[];for(s=a;s<n.length;s++)l.push("..");return(l=l.concat(o.slice(a))).join("/")},u.sep="/",u.delimiter=":",u.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),r=47===t,n=-1,o=!0,i=e.length-1;1<=i;--i)if(47===(t=e.charCodeAt(i))){if(!o){n=i;break}}else o=!1;return-1===n?r?"/":".":r&&1===n?"/":e.slice(0,n)},u.basename=function(e,t){var r=function(e){"string"!=typeof e&&(e+="");var t,r=0,n=-1,o=!0;for(t=e.length-1;0<=t;--t)if(47===e.charCodeAt(t)){if(!o){r=t+1;break}}else-1===n&&(o=!1,n=t+1);return-1===n?"":e.slice(r,n)}(e);return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},u.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,r=0,n=-1,o=!0,i=0,a=e.length-1;0<=a;--a){var s=e.charCodeAt(a);if(47===s){if(o)continue;r=a+1;break}-1===n&&(o=!1,n=a+1),46===s?-1===t?t=a:1!==i&&(i=1):-1!==t&&(i=-1)}return-1===t||-1===n||0===i||1===i&&t===n-1&&t===r+1?"":e.slice(t,n)};var n= true?function(e,t,r){return e.substr(t,r)}:0}).call(this,e("_process"))},{_process:241}],241:[function(e,t,r){var n,o,i=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function l(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{o="function"==typeof clearTimeout?clearTimeout:s}catch(e){o=s}}();var u,c=[],d=!1,f=-1;function h(){d&&u&&(d=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!d){var e=l(h);d=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,d=!1,function(t){if(o===clearTimeout)return clearTimeout(t);if((o===s||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(t);try{o(t)}catch(e){try{return o.call(null,t)}catch(e){return o.call(this,t)}}}(e)}}function y(e,t){this.fun=e,this.array=t}function m(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new y(e,t)),1!==c.length||d||l(p)},y.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},{}],242:[function(e,t,r){!function(e){"use strict";if(!e.fetch){var t="URLSearchParams"in e,r="Symbol"in e&&"iterator"in Symbol,a="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),n="FormData"in e,o="ArrayBuffer"in e;if(o)var i=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=function(e){return e&&DataView.prototype.isPrototypeOf(e)},l=ArrayBuffer.isView||function(e){return e&&-1<i.indexOf(Object.prototype.toString.call(e))};p.prototype.append=function(e,t){e=d(e),t=f(t);var r=this.map[e];this.map[e]=r?r+","+t:t},p.prototype.delete=function(e){delete this.map[d(e)]},p.prototype.get=function(e){return e=d(e),this.has(e)?this.map[e]:null},p.prototype.has=function(e){return this.map.hasOwnProperty(d(e))},p.prototype.set=function(e,t){this.map[d(e)]=f(t)},p.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},p.prototype.keys=function(){var r=[];return this.forEach(function(e,t){r.push(t)}),h(r)},p.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),h(t)},p.prototype.entries=function(){var r=[];return this.forEach(function(e,t){r.push([t,e])}),h(r)},r&&(p.prototype[Symbol.iterator]=p.prototype.entries);var u=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];_.prototype.clone=function(){return new _(this,{body:this._bodyInit})},b.call(_.prototype),b.call(w.prototype),w.prototype.clone=function(){return new w(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new p(this.headers),url:this.url})},w.error=function(){var e=new w(null,{status:0,statusText:""});return e.type="error",e};var c=[301,302,303,307,308];w.redirect=function(e,t){if(-1===c.indexOf(t))throw new RangeError("Invalid status code");return new w(null,{status:t,headers:{location:e}})},e.Headers=p,e.Request=_,e.Response=w,e.fetch=function(r,o){return new Promise(function(n,e){var t=new _(r,o),i=new XMLHttpRequest;i.onload=function(){var e,o,t={status:i.status,statusText:i.statusText,headers:(e=i.getAllResponseHeaders()||"",o=new p,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach(function(e){var t=e.split(":"),r=t.shift().trim();if(r){var n=t.join(":").trim();o.append(r,n)}}),o)};t.url="responseURL"in i?i.responseURL:t.headers.get("X-Request-URL");var r="response"in i?i.response:i.responseText;n(new w(r,t))},i.onerror=function(){e(new TypeError("Network request failed"))},i.ontimeout=function(){e(new TypeError("Network request failed"))},i.open(t.method,t.url,!0),"include"===t.credentials?i.withCredentials=!0:"omit"===t.credentials&&(i.withCredentials=!1),"responseType"in i&&a&&(i.responseType="blob"),t.headers.forEach(function(e,t){i.setRequestHeader(t,e)}),i.send(void 0===t._bodyInit?null:t._bodyInit)})},e.fetch.polyfill=!0}function d(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function f(e){return"string"!=typeof e&&(e=String(e)),e}function h(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function p(t){this.map={},t instanceof p?t.forEach(function(e,t){this.append(t,e)},this):Array.isArray(t)?t.forEach(function(e){this.append(e[0],e[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}function y(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function m(r){return new Promise(function(e,t){r.onload=function(){e(r.result)},r.onerror=function(){t(r.error)}})}function g(e){var t=new FileReader,r=m(t);return t.readAsArrayBuffer(e),r}function v(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e)if("string"==typeof e)this._bodyText=e;else if(a&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(n&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(t&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(o&&a&&s(e))this._bodyArrayBuffer=v(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!o||!ArrayBuffer.prototype.isPrototypeOf(e)&&!l(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=v(e)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):t&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},a&&(this.blob=function(){var e=y(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?y(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var e,t,r,n=y(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=m(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},n&&(this.formData=function(){return this.text().then(x)}),this.json=function(){return this.text().then(JSON.parse)},this}function _(e,t){var r,n,o=(t=t||{}).body;if(e instanceof _){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new p(e.headers)),this.method=e.method,this.mode=e.mode,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new p(t.headers)),this.method=(r=t.method||this.method||"GET",n=r.toUpperCase(),-1<u.indexOf(n)?n:r),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(o)}function x(e){var o=new FormData;return e.trim().split("&").forEach(function(e){if(e){var t=e.split("="),r=t.shift().replace(/\+/g," "),n=t.join("=").replace(/\+/g," ");o.append(decodeURIComponent(r),decodeURIComponent(n))}}),o}function w(e,t){t=t||{},this.type="default",this.status=void 0===t.status?200:t.status,this.ok=200<=this.status&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new p(t.headers),this.url=t.url||"",this._initBody(e)}}("undefined"!=typeof self?self:this)},{}],243:[function(e,t,r){"use strict";e("core-js/modules/es.function.name"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.split"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var l,n=i(e("../core/main")),o=i(e("../color/color_conversion"));function i(e){return e&&e.__esModule?e:{default:e}}var u=[{h:0,s:0,b:.8275,name:"gray"},{h:0,s:0,b:.8627,name:"gray"},{h:0,s:0,b:.7529,name:"gray"},{h:.0167,s:.1176,b:1,name:"light pink"}],c=[{h:0,s:0,b:0,name:"black"},{h:0,s:0,b:.5,name:"gray"},{h:0,s:0,b:1,name:"white"},{h:0,s:.5,b:.5,name:"dark maroon"},{h:0,s:.5,b:1,name:"salmon pink"},{h:0,s:1,b:0,name:"black"},{h:0,s:1,b:.5,name:"dark red"},{h:0,s:1,b:1,name:"red"},{h:5,s:0,b:1,name:"very light peach"},{h:5,s:.5,b:.5,name:"brown"},{h:5,s:.5,b:1,name:"peach"},{h:5,s:1,b:.5,name:"brick red"},{h:5,s:1,b:1,name:"crimson"},{h:10,s:0,b:1,name:"light peach"},{h:10,s:.5,b:.5,name:"brown"},{h:10,s:.5,b:1,name:"light orange"},{h:10,s:1,b:.5,name:"brown"},{h:10,s:1,b:1,name:"orange"},{h:15,s:0,b:1,name:"very light yellow"},{h:15,s:.5,b:.5,name:"olive green"},{h:15,s:.5,b:1,name:"light yellow"},{h:15,s:1,b:0,name:"dark olive green"},{h:15,s:1,b:.5,name:"olive green"},{h:15,s:1,b:1,name:"yellow"},{h:20,s:0,b:1,name:"very light yellow"},{h:20,s:.5,b:.5,name:"olive green"},{h:20,s:.5,b:1,name:"light yellow green"},{h:20,s:1,b:0,name:"dark olive green"},{h:20,s:1,b:.5,name:"dark yellow green"},{h:20,s:1,b:1,name:"yellow green"},{h:25,s:.5,b:.5,name:"dark yellow green"},{h:25,s:.5,b:1,name:"light green"},{h:25,s:1,b:.5,name:"dark green"},{h:25,s:1,b:1,name:"green"},{h:30,s:.5,b:1,name:"light green"},{h:30,s:1,b:.5,name:"dark green"},{h:30,s:1,b:1,name:"green"},{h:35,s:0,b:.5,name:"light green"},{h:35,s:0,b:1,name:"very light green"},{h:35,s:.5,b:.5,name:"dark green"},{h:35,s:.5,b:1,name:"light green"},{h:35,s:1,b:0,name:"very dark green"},{h:35,s:1,b:.5,name:"dark green"},{h:35,s:1,b:1,name:"green"},{h:40,s:0,b:1,name:"very light green"},{h:40,s:.5,b:.5,name:"dark green"},{h:40,s:.5,b:1,name:"light green"},{h:40,s:1,b:.5,name:"dark green"},{h:40,s:1,b:1,name:"green"},{h:45,s:.5,b:1,name:"light turquoise"},{h:45,s:1,b:.5,name:"dark turquoise"},{h:45,s:1,b:1,name:"turquoise"},{h:50,s:0,b:1,name:"light sky blue"},{h:50,s:.5,b:.5,name:"dark cyan"},{h:50,s:.5,b:1,name:"light cyan"},{h:50,s:1,b:.5,name:"dark cyan"},{h:50,s:1,b:1,name:"cyan"},{h:55,s:0,b:1,name:"light sky blue"},{h:55,s:.5,b:1,name:"light sky blue"},{h:55,s:1,b:.5,name:"dark blue"},{h:55,s:1,b:1,name:"sky blue"},{h:60,s:0,b:.5,name:"gray"},{h:60,s:0,b:1,name:"very light blue"},{h:60,s:.5,b:.5,name:"blue"},{h:60,s:.5,b:1,name:"light blue"},{h:60,s:1,b:.5,name:"navy blue"},{h:60,s:1,b:1,name:"blue"},{h:65,s:0,b:1,name:"lavender"},{h:65,s:.5,b:.5,name:"navy blue"},{h:65,s:.5,b:1,name:"light purple"},{h:65,s:1,b:.5,name:"dark navy blue"},{h:65,s:1,b:1,name:"blue"},{h:70,s:0,b:1,name:"lavender"},{h:70,s:.5,b:.5,name:"navy blue"},{h:70,s:.5,b:1,name:"lavender blue"},{h:70,s:1,b:.5,name:"dark navy blue"},{h:70,s:1,b:1,name:"blue"},{h:75,s:.5,b:1,name:"lavender"},{h:75,s:1,b:.5,name:"dark purple"},{h:75,s:1,b:1,name:"purple"},{h:80,s:.5,b:1,name:"pinkish purple"},{h:80,s:1,b:.5,name:"dark purple"},{h:80,s:1,b:1,name:"purple"},{h:85,s:0,b:1,name:"light pink"},{h:85,s:.5,b:.5,name:"purple"},{h:85,s:.5,b:1,name:"light fuchsia"},{h:85,s:1,b:.5,name:"dark fuchsia"},{h:85,s:1,b:1,name:"fuchsia"},{h:90,s:.5,b:.5,name:"dark fuchsia"},{h:90,s:.5,b:1,name:"hot pink"},{h:90,s:1,b:.5,name:"dark fuchsia"},{h:90,s:1,b:1,name:"fuchsia"},{h:95,s:0,b:1,name:"pink"},{h:95,s:.5,b:1,name:"light pink"},{h:95,s:1,b:.5,name:"dark magenta"},{h:95,s:1,b:1,name:"magenta"}];n.default.prototype._rgbColorName=function(e){var t=o.default._rgbaToHSBA(e);return function(e){var t;if(0!==e[0]){e[0]=Math.round(100*e[0]);var r=e[0].toString().split(""),n=r.length-1;r[n]=parseInt(r[n]),r[n]<2.5?r[n]=0:2.5<=r[n]&&r[n]<7.5&&(r[n]=5),2===r.length?(r[0]=parseInt(r[0]),7.5<=r[n]&&(r[n]=0,r[0]=r[0]+1),e[0]=10*r[0]+r[1]):7.5<=r[n]?e[0]=10:e[0]=r[n]}e[2]=e[2]/255;for(var o=e.length-1;1<=o;o--)e[o]<=.25?e[o]=0:.25<e[o]&&e[o]<.75?e[o]=.5:e[o]=1;if(0===e[0]&&0===e[1]&&1===e[2]){for(var i=2;0<=i;i--)l[i]=Math.round(1e4*l[i])/1e4;for(var a=0;a<u.length;a++){if(u[a].h===l[0]&&u[a].s===l[1]&&u[a].b===l[2]){t=u[a].name;break}t="white"}}else for(var s=0;s<c.length;s++)if(c[s].h===e[0]&&c[s].s===e[1]&&c[s].b===e[2]){t=c[s].name;break}return t}([(l=t)[0],t[1],t[2]])};var a=n.default;r.default=a},{"../color/color_conversion":249,"../core/main":264,"core-js/modules/es.function.name":166,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.split":191}],244:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.ends-with"),e("core-js/modules/es.string.replace"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,a=(n=e("../core/main"))&&n.__esModule?n:{default:n};var l="_Description",u="_fallbackDesc",c="_fallbackTable",d="_Label",f="_labelDesc",h="_labelTable";function s(e){if("label"===e||"fallback"===e)throw new Error("description should not be LABEL or FALLBACK");return e.endsWith(".")||e.endsWith(";")||e.endsWith(",")||e.endsWith("?")||e.endsWith("!")||(e+="."),e}a.default.prototype.describe=function(e,t){if(a.default._validateParameters("describe",arguments),"string"==typeof e){var r=this.canvas.id;e=s(e),this.dummyDOM||(this.dummyDOM=document.getElementById(r).parentNode),this.descriptions||(this.descriptions={}),this.descriptions.fallback?this.descriptions.fallback.innerHTML!==e&&(this.descriptions.fallback.innerHTML=e):this._describeHTML("fallback",e),t===this.LABEL&&(this.descriptions.label?this.descriptions.label.innerHTML!==e&&(this.descriptions.label.innerHTML=e):this._describeHTML("label",e))}},a.default.prototype.describeElement=function(e,t,r){if(a.default._validateParameters("describeElement",arguments),"string"==typeof t&&"string"==typeof e){var n=this.canvas.id;t=s(t);var o=function(e){if("label"===e||"fallback"===e)throw new Error("element name should not be LABEL or FALLBACK");e.endsWith(".")||e.endsWith(";")||e.endsWith(",")?e=e.replace(/.$/,":"):e.endsWith(":")||(e+=":");return e}(e);e=e.replace(/[^a-zA-Z0-9]/g,"");var i='<th scope="row">'.concat(o,"</th><td>").concat(t,"</td>");this.dummyDOM||(this.dummyDOM=document.getElementById(n).parentNode),this.descriptions?this.descriptions.fallbackElements||(this.descriptions.fallbackElements={}):this.descriptions={fallbackElements:{}},this.descriptions.fallbackElements[e]?this.descriptions.fallbackElements[e].innerHTML!==i&&(this.descriptions.fallbackElements[e].innerHTML=i):this._describeElementHTML("fallback",e,i),r===this.LABEL&&(this.descriptions.labelElements||(this.descriptions.labelElements={}),this.descriptions.labelElements[e]?this.descriptions.labelElements[e].innerHTML!==i&&(this.descriptions.labelElements[e].innerHTML=i):this._describeElementHTML("label",e,i))}},a.default.prototype._describeHTML=function(e,t){var r=this.canvas.id;if("fallback"===e){if(this.dummyDOM.querySelector("#".concat(r+l)))this.dummyDOM.querySelector("#"+r+c).insertAdjacentHTML("beforebegin",'<p id="'.concat(r+u,'"></p>'));else{var n='<div id="'.concat(r).concat(l,'" role="region" aria-label="Canvas Description"><p id="').concat(r).concat(u,'"></p></div>');this.dummyDOM.querySelector("#".concat(r,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(r,"accessibleOutput")).insertAdjacentHTML("beforebegin",n):this.dummyDOM.querySelector("#".concat(r)).innerHTML=n}return this.descriptions.fallback=this.dummyDOM.querySelector("#".concat(r).concat(u)),void(this.descriptions.fallback.innerHTML=t)}if("label"===e){if(this.dummyDOM.querySelector("#".concat(r+d)))this.dummyDOM.querySelector("#".concat(r+h))&&this.dummyDOM.querySelector("#".concat(r+h)).insertAdjacentHTML("beforebegin",'<p id="'.concat(r).concat(f,'"></p>'));else{var o='<div id="'.concat(r).concat(d,'" class="p5Label"><p id="').concat(r).concat(f,'"></p></div>');this.dummyDOM.querySelector("#".concat(r,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(r,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",o):this.dummyDOM.querySelector("#"+r).insertAdjacentHTML("afterend",o)}return this.descriptions.label=this.dummyDOM.querySelector("#"+r+f),void(this.descriptions.label.innerHTML=t)}},a.default.prototype._describeElementHTML=function(e,t,r){var n=this.canvas.id;if("fallback"===e){if(this.dummyDOM.querySelector("#".concat(n+l)))this.dummyDOM.querySelector("#"+n+c)||this.dummyDOM.querySelector("#"+n+u).insertAdjacentHTML("afterend",'<table id="'.concat(n).concat(c,'"><caption>Canvas elements and their descriptions</caption></table>'));else{var o='<div id="'.concat(n).concat(l,'" role="region" aria-label="Canvas Description"><table id="').concat(n).concat(c,'"><caption>Canvas elements and their descriptions</caption></table></div>');this.dummyDOM.querySelector("#".concat(n,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(n,"accessibleOutput")).insertAdjacentHTML("beforebegin",o):this.dummyDOM.querySelector("#"+n).innerHTML=o}var i=document.createElement("tr");return i.id=n+"_fte_"+t,this.dummyDOM.querySelector("#"+n+c).appendChild(i),this.descriptions.fallbackElements[t]=this.dummyDOM.querySelector("#".concat(n).concat("_fte_").concat(t)),void(this.descriptions.fallbackElements[t].innerHTML=r)}if("label"===e){if(this.dummyDOM.querySelector("#".concat(n+d)))this.dummyDOM.querySelector("#".concat(n+h))||this.dummyDOM.querySelector("#"+n+f).insertAdjacentHTML("afterend",'<table id="'.concat(n+h,'"></table>'));else{var a='<div id="'.concat(n).concat(d,'" class="p5Label"><table id="').concat(n).concat(h,'"></table></div>');this.dummyDOM.querySelector("#".concat(n,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(n,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",a):this.dummyDOM.querySelector("#"+n).insertAdjacentHTML("afterend",a)}var s=document.createElement("tr");s.id=n+"_lte_"+t,this.dummyDOM.querySelector("#"+n+h).appendChild(s),this.descriptions.labelElements[t]=this.dummyDOM.querySelector("#".concat(n).concat("_lte_").concat(t)),this.descriptions.labelElements[t].innerHTML=r}};var o=a.default;r.default=o},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.ends-with":184,"core-js/modules/es.string.replace":189}],245:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.map"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype._updateGridOutput=function(e){if(this.dummyDOM.querySelector("#".concat(e,"_summary"))){var t=this._accessibleOutputs[e],r=function(e,t){var r="",n="",o=0;for(var i in t){var a=0;for(var s in t[i]){var l='<li id="'.concat(e,"shape").concat(o,'">').concat(t[i][s].color," ").concat(i,",");"line"===i?l+=" location = ".concat(t[i][s].pos,", length = ").concat(t[i][s].length," pixels"):(l+=" location = ".concat(t[i][s].pos),"point"!==i&&(l+=", area = ".concat(t[i][s].area," %")),l+="</li>"),r+=l,a++,o++}n=1<a?"".concat(n," ").concat(a," ").concat(i,"s"):"".concat(n," ").concat(a," ").concat(i)}return{numShapes:[o,n],details:r}}(e,this.ingredients.shapes),n=function(e,t,r,n){var o="".concat(t," canvas, ").concat(r," by ").concat(n," pixels, contains ").concat(e[0]);o=1===e[0]?"".concat(o," shape: ").concat(e[1]):"".concat(o," shapes: ").concat(e[1]);return o}(r.numShapes,this.ingredients.colors.background,this.width,this.height),o=function(e,t){var r=0,n="",o=Array.apply(null,Array(10)).map(function(){});for(var i in o)o[i]=Array.apply(null,Array(10)).map(function(){});for(var a in t)for(var s in t[a]){var l=void 0;l="line"!==a?'<a href="#'.concat(e,"shape").concat(r,'">').concat(t[a][s].color," ").concat(a,"</a>"):'<a href="#'.concat(e,"shape").concat(r,'">').concat(t[a][s].color," ").concat(a," midpoint</a>"),o[t[a][s].loc.locY][t[a][s].loc.locX]?o[t[a][s].loc.locY][t[a][s].loc.locX]=o[t[a][s].loc.locY][t[a][s].loc.locX]+"  "+l:o[t[a][s].loc.locY][t[a][s].loc.locX]=l,r++}for(var u in o){var c="<tr>";for(var d in o[u])c+="<td>",void 0!==o[u][d]&&(c+=o[u][d]),c+="</td>";n=n+c+"</tr>"}return n}(e,this.ingredients.shapes);n!==t.summary.innerHTML&&(t.summary.innerHTML=n),o!==t.map.innerHTML&&(t.map.innerHTML=o),r.details!==t.shapeDetails.innerHTML&&(t.shapeDetails.innerHTML=r.details),this._accessibleOutputs[e]=t}};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.map":161}],246:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.fill"),e("core-js/modules/es.array.map"),e("core-js/modules/es.number.to-fixed"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function l(e,t,r){return e[0]<.4*t?e[1]<.4*r?"top left":e[1]>.6*r?"bottom left":"mid left":e[0]>.6*t?e[1]<.4*r?"top right":e[1]>.6*r?"bottom right":"mid right":e[1]<.4*r?"top middle":e[1]>.6*r?"bottom middle":"middle"}function u(e,t,r){var n=Math.floor(e[0]/t*10),o=Math.floor(e[1]/r*10);return 10===n&&--n,10===o&&--o,{locX:n,locY:o}}o.default.prototype.textOutput=function(e){o.default._validateParameters("textOutput",arguments),this._accessibleOutputs.text||(this._accessibleOutputs.text=!0,this._createOutput("textOutput","Fallback"),e===this.LABEL&&(this._accessibleOutputs.textLabel=!0,this._createOutput("textOutput","Label")))},o.default.prototype.gridOutput=function(e){o.default._validateParameters("gridOutput",arguments),this._accessibleOutputs.grid||(this._accessibleOutputs.grid=!0,this._createOutput("gridOutput","Fallback"),e===this.LABEL&&(this._accessibleOutputs.gridLabel=!0,this._createOutput("gridOutput","Label")))},o.default.prototype._addAccsOutput=function(){return this._accessibleOutputs||(this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1}),this._accessibleOutputs.grid||this._accessibleOutputs.text},o.default.prototype._createOutput=function(e,t){var r,n,o,i=this.canvas.id;this.ingredients||(this.ingredients={shapes:{},colors:{background:"white",fill:"white",stroke:"black"},pShapes:""}),this.dummyDOM||(this.dummyDOM=document.getElementById(i).parentNode);var a="";"Fallback"===t?(r=i+e,n=i+"accessibleOutput",this.dummyDOM.querySelector("#".concat(n))||(this.dummyDOM.querySelector("#".concat(i,"_Description"))?this.dummyDOM.querySelector("#".concat(i,"_Description")).insertAdjacentHTML("afterend",'<div id="'.concat(n,'" role="region" aria-label="Canvas Outputs"></div>')):this.dummyDOM.querySelector("#".concat(i)).innerHTML='<div id="'.concat(n,'" role="region" aria-label="Canvas Outputs"></div>'))):"Label"===t&&(r=i+e+(a=t),n=i+"accessibleOutput"+t,this.dummyDOM.querySelector("#".concat(n))||(this.dummyDOM.querySelector("#".concat(i,"_Label"))?this.dummyDOM.querySelector("#".concat(i,"_Label")).insertAdjacentHTML("afterend",'<div id="'.concat(n,'"></div>')):this.dummyDOM.querySelector("#".concat(i)).insertAdjacentHTML("afterend",'<div id="'.concat(n,'"></div>')))),this._accessibleOutputs[r]={},"textOutput"===e?(a="#".concat(i,"gridOutput").concat(a),o='<div id="'.concat(r,'">Text Output<div id="').concat(r,'Summary" aria-label="text output summary"><p id="').concat(r,'_summary"></p><ul id="').concat(r,'_list"></ul></div><table id="').concat(r,'_shapeDetails" summary="text output shape details"></table></div>'),this.dummyDOM.querySelector(a)?this.dummyDOM.querySelector(a).insertAdjacentHTML("beforebegin",o):this.dummyDOM.querySelector("#".concat(n)).innerHTML=o,this._accessibleOutputs[r].list=this.dummyDOM.querySelector("#".concat(r,"_list"))):"gridOutput"===e&&(a="#".concat(i,"textOutput").concat(a),o='<div id="'.concat(r,'">Grid Output<p id="').concat(r,'_summary" aria-label="grid output summary"><table id="').concat(r,'_map" summary="grid output content"></table><ul id="').concat(r,'_shapeDetails" aria-label="grid output shape details"></ul></div>'),this.dummyDOM.querySelector(a)?this.dummyDOM.querySelector(a).insertAdjacentHTML("afterend",o):this.dummyDOM.querySelector("#".concat(n)).innerHTML=o,this._accessibleOutputs[r].map=this.dummyDOM.querySelector("#".concat(r,"_map"))),this._accessibleOutputs[r].shapeDetails=this.dummyDOM.querySelector("#".concat(r,"_shapeDetails")),this._accessibleOutputs[r].summary=this.dummyDOM.querySelector("#".concat(r,"_summary"))},o.default.prototype._updateAccsOutput=function(){var e=this.canvas.id;JSON.stringify(this.ingredients.shapes)!==this.ingredients.pShapes&&(this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this._accessibleOutputs.text&&this._updateTextOutput(e+"textOutput"),this._accessibleOutputs.grid&&this._updateGridOutput(e+"gridOutput"),this._accessibleOutputs.textLabel&&this._updateTextOutput(e+"textOutputLabel"),this._accessibleOutputs.gridLabel&&this._updateGridOutput(e+"gridOutputLabel"))},o.default.prototype._accsBackground=function(e){this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this.ingredients.shapes={},this.ingredients.colors.backgroundRGBA!==e&&(this.ingredients.colors.backgroundRGBA=e,this.ingredients.colors.background=this._rgbColorName(e))},o.default.prototype._accsCanvasColors=function(e,t){"fill"===e?this.ingredients.colors.fillRGBA!==t&&(this.ingredients.colors.fillRGBA=t,this.ingredients.colors.fill=this._rgbColorName(t)):"stroke"===e&&this.ingredients.colors.strokeRGBA!==t&&(this.ingredients.colors.strokeRGBA=t,this.ingredients.colors.stroke=this._rgbColorName(t))},o.default.prototype._accsOutput=function(e,t){"ellipse"===e&&t[2]===t[3]?e="circle":"rectangle"===e&&t[2]===t[3]&&(e="square");var r={},n=!0,o=function(e,t){var r,n;n="rectangle"===e||"ellipse"===e||"arc"===e||"circle"===e||"square"===e?(r=Math.round(t[0]+t[2]/2),Math.round(t[1]+t[3]/2)):"triangle"===e?(r=(t[0]+t[2]+t[4])/3,(t[1]+t[3]+t[5])/3):"quadrilateral"===e?(r=(t[0]+t[2]+t[4]+t[6])/4,(t[1]+t[3]+t[5]+t[7])/4):"line"===e?(r=(t[0]+t[2])/2,(t[1]+t[3])/2):(r=t[0],t[1]);return[r,n]}(e,t);if("line"===e){r.color=this.ingredients.colors.stroke,r.length=Math.round(this.dist(t[0],t[1],t[2],t[3]));var i=l([t[0],[1]],this.width,this.height),a=l([t[2],[3]],this.width,this.height);r.loc=u(o,this.width,this.height),r.pos=i===a?"at ".concat(i):"from ".concat(i," to ").concat(a)}else"point"===e?r.color=this.ingredients.colors.stroke:(r.color=this.ingredients.colors.fill,r.area=function(e,t,r,n){var o=0;if("arc"===e){var i=((t[5]-t[4])%(2*Math.PI)+2*Math.PI)%(2*Math.PI);if(o=i*t[2]*t[3]/8,"open"===t[6]||"chord"===t[6]){var a=t[0],s=t[1],l=t[0]+t[2]/2*Math.cos(t[4]).toFixed(2),u=t[1]+t[3]/2*Math.sin(t[4]).toFixed(2),c=t[0]+t[2]/2*Math.cos(t[5]).toFixed(2),d=t[1]+t[3]/2*Math.sin(t[5]).toFixed(2),f=Math.abs(a*(u-d)+l*(d-s)+c*(s-u))/2;i>Math.PI?o+=f:o-=f}}else"ellipse"===e||"circle"===e?o=3.14*t[2]/2*t[3]/2:"line"===e?o=0:"point"===e?o=0:"quadrilateral"===e?o=Math.abs((t[6]+t[0])*(t[7]-t[1])+(t[0]+t[2])*(t[1]-t[3])+(t[2]+t[4])*(t[3]-t[5])+(t[4]+t[6])*(t[5]-t[7]))/2:"rectangle"===e||"square"===e?o=t[2]*t[3]:"triangle"===e&&(o=Math.abs(t[0]*(t[3]-t[5])+t[2]*(t[5]-t[1])+t[4]*(t[1]-t[3]))/2);return Math.round(100*o/(r*n))}(e,t,this.width,this.height)),r.pos=l(o,this.width,this.height),r.loc=u(o,this.width,this.height);if(this.ingredients.shapes[e]){if(this.ingredients.shapes[e]!==[r]){for(var s in this.ingredients.shapes[e])JSON.stringify(this.ingredients.shapes[e][s])===JSON.stringify(r)&&(n=!1);!0===n&&this.ingredients.shapes[e].push(r)}}else this.ingredients.shapes[e]=[r]};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.fill":151,"core-js/modules/es.array.map":161,"core-js/modules/es.number.to-fixed":172}],247:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype._updateTextOutput=function(e){if(this.dummyDOM.querySelector("#".concat(e,"_summary"))){var t=this._accessibleOutputs[e],r=function(e,t){var r="",n=0;for(var o in t)for(var i in t[o]){var a='<li><a href="#'.concat(e,"shape").concat(n,'">').concat(t[o][i].color," ").concat(o,"</a>");"line"===o?a+=", ".concat(t[o][i].pos,", ").concat(t[o][i].length," pixels long.</li>"):(a+=", at ".concat(t[o][i].pos),"point"!==o&&(a+=", covering ".concat(t[o][i].area,"% of the canvas")),a+=".</li>"),r+=a,n++}return{numShapes:n,listShapes:r}}(e,this.ingredients.shapes),n=function(e,t,r,n){var o="Your output is a, ".concat(r," by ").concat(n," pixels, ").concat(t," canvas containing the following");o=1===e?"".concat(o," shape:"):"".concat(o," ").concat(e," shapes:");return o}(r.numShapes,this.ingredients.colors.background,this.width,this.height),o=function(e,t){var r="",n=0;for(var o in t)for(var i in t[o]){var a='<tr id="'.concat(e,"shape").concat(n,'"><th>').concat(t[o][i].color," ").concat(o,"</th>");"line"===o?a+="<td>location = ".concat(t[o][i].pos,"</td><td>length = ").concat(t[o][i].length," pixels</td></tr>"):(a+="<td>location = ".concat(t[o][i].pos,"</td>"),"point"!==o&&(a+="<td> area = ".concat(t[o][i].area,"%</td>")),a+="</tr>"),r+=a,n++}return r}(e,this.ingredients.shapes);n!==t.summary.innerHTML&&(t.summary.innerHTML=n),r.listShapes!==t.list.innerHTML&&(t.list.innerHTML=r.listShapes),o!==t.shapeDetails.innerHTML&&(t.shapeDetails.innerHTML=o),this._accessibleOutputs[e]=t}};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.concat":149}],248:[function(e,t,r){"use strict";var n,o=(n=e("./core/main"))&&n.__esModule?n:{default:n};e("./core/constants"),e("./core/environment"),e("./core/friendly_errors/stacktrace"),e("./core/friendly_errors/validate_params"),e("./core/friendly_errors/file_errors"),e("./core/friendly_errors/fes_core"),e("./core/friendly_errors/sketch_reader"),e("./core/helpers"),e("./core/legacy"),e("./core/preload"),e("./core/p5.Element"),e("./core/p5.Graphics"),e("./core/p5.Renderer"),e("./core/p5.Renderer2D"),e("./core/rendering"),e("./core/shim"),e("./core/structure"),e("./core/transform"),e("./core/shape/2d_primitives"),e("./core/shape/attributes"),e("./core/shape/curves"),e("./core/shape/vertex"),e("./accessibility/outputs"),e("./accessibility/textOutput"),e("./accessibility/gridOutput"),e("./accessibility/color_namer"),e("./color/color_conversion"),e("./color/creating_reading"),e("./color/p5.Color"),e("./color/setting"),e("./data/p5.TypedDict"),e("./data/local_storage.js"),e("./dom/dom"),e("./accessibility/describe"),e("./events/acceleration"),e("./events/keyboard"),e("./events/mouse"),e("./events/touch"),e("./image/filters"),e("./image/image"),e("./image/loading_displaying"),e("./image/p5.Image"),e("./image/pixels"),e("./io/files"),e("./io/p5.Table"),e("./io/p5.TableRow"),e("./io/p5.XML"),e("./math/calculation"),e("./math/math"),e("./math/noise"),e("./math/p5.Vector"),e("./math/random"),e("./math/trigonometry"),e("./typography/attributes"),e("./typography/loading_displaying"),e("./typography/p5.Font"),e("./utilities/array_functions"),e("./utilities/conversion"),e("./utilities/string_functions"),e("./utilities/time_date"),e("./webgl/3d_primitives"),e("./webgl/interaction"),e("./webgl/light"),e("./webgl/loading"),e("./webgl/material"),e("./webgl/p5.Camera"),e("./webgl/p5.Geometry"),e("./webgl/p5.Matrix"),e("./webgl/p5.RendererGL.Immediate"),e("./webgl/p5.RendererGL"),e("./webgl/p5.RendererGL.Retained"),e("./webgl/p5.Shader"),e("./webgl/p5.RenderBuffer"),e("./webgl/p5.Texture"),e("./webgl/text"),e("./core/init"),t.exports=o.default},{"./accessibility/color_namer":243,"./accessibility/describe":244,"./accessibility/gridOutput":245,"./accessibility/outputs":246,"./accessibility/textOutput":247,"./color/color_conversion":249,"./color/creating_reading":250,"./color/p5.Color":251,"./color/setting":252,"./core/constants":253,"./core/environment":254,"./core/friendly_errors/fes_core":255,"./core/friendly_errors/file_errors":256,"./core/friendly_errors/sketch_reader":257,"./core/friendly_errors/stacktrace":258,"./core/friendly_errors/validate_params":259,"./core/helpers":260,"./core/init":261,"./core/legacy":263,"./core/main":264,"./core/p5.Element":265,"./core/p5.Graphics":266,"./core/p5.Renderer":267,"./core/p5.Renderer2D":268,"./core/preload":269,"./core/rendering":270,"./core/shape/2d_primitives":271,"./core/shape/attributes":272,"./core/shape/curves":273,"./core/shape/vertex":274,"./core/shim":275,"./core/structure":276,"./core/transform":277,"./data/local_storage.js":278,"./data/p5.TypedDict":279,"./dom/dom":280,"./events/acceleration":281,"./events/keyboard":282,"./events/mouse":283,"./events/touch":284,"./image/filters":285,"./image/image":286,"./image/loading_displaying":287,"./image/p5.Image":288,"./image/pixels":289,"./io/files":290,"./io/p5.Table":291,"./io/p5.TableRow":292,"./io/p5.XML":293,"./math/calculation":294,"./math/math":295,"./math/noise":296,"./math/p5.Vector":297,"./math/random":298,"./math/trigonometry":299,"./typography/attributes":300,"./typography/loading_displaying":301,"./typography/p5.Font":302,"./utilities/array_functions":303,"./utilities/conversion":304,"./utilities/string_functions":305,"./utilities/time_date":306,"./webgl/3d_primitives":307,"./webgl/interaction":308,"./webgl/light":309,"./webgl/loading":310,"./webgl/material":311,"./webgl/p5.Camera":312,"./webgl/p5.Geometry":313,"./webgl/p5.Matrix":314,"./webgl/p5.RenderBuffer":315,"./webgl/p5.RendererGL":318,"./webgl/p5.RendererGL.Immediate":316,"./webgl/p5.RendererGL.Retained":317,"./webgl/p5.Shader":319,"./webgl/p5.Texture":320,"./webgl/text":321}],249:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.ColorConversion={},o.default.ColorConversion._hsbaToHSLA=function(e){var t=e[0],r=e[1],n=e[2],o=(2-r)*n/2;return 0!=o&&(1==o?r=0:o<.5?r/=2-r:r=r*n/(2-2*o)),[t,r,o,e[3]]},o.default.ColorConversion._hsbaToRGBA=function(e){var t=6*e[0],r=e[1],n=e[2],o=[];if(0===r)o=[n,n,n,e[3]];else{var i,a,s,l=Math.floor(t),u=n*(1-r),c=n*(1-r*(t-l)),d=n*(1-r*(1+l-t));s=1===l?(i=c,a=n,u):2===l?(i=u,a=n,d):3===l?(i=u,a=c,n):4===l?(i=d,a=u,n):5===l?(i=n,a=u,c):(i=n,a=d,u),o=[i,a,s,e[3]]}return o},o.default.ColorConversion._hslaToHSBA=function(e){var t,r=e[0],n=e[1],o=e[2];return[r,n=2*((t=o<.5?(1+n)*o:o+n-o*n)-o)/t,t,e[3]]},o.default.ColorConversion._hslaToRGBA=function(e){var t=6*e[0],r=e[1],n=e[2],o=[];if(0===r)o=[n,n,n,e[3]];else{var i,a=2*n-(i=n<.5?(1+r)*n:n+r-n*r),s=function(e,t,r){return e<0?e+=6:6<=e&&(e-=6),e<1?t+(r-t)*e:e<3?r:e<4?t+(r-t)*(4-e):t};o=[s(2+t,a,i),s(t,a,i),s(t-2,a,i),e[3]]}return o},o.default.ColorConversion._rgbaToHSBA=function(e){var t,r,n=e[0],o=e[1],i=e[2],a=Math.max(n,o,i),s=a-Math.min(n,o,i);return 0==s?r=t=0:(r=s/a,n===a?t=(o-i)/s:o===a?t=2+(i-n)/s:i===a&&(t=4+(n-o)/s),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,a,e[3]]},o.default.ColorConversion._rgbaToHSLA=function(e){var t,r,n=e[0],o=e[1],i=e[2],a=Math.max(n,o,i),s=Math.min(n,o,i),l=a+s,u=a-s;return 0==u?r=t=0:(r=l<1?u/l:u/(2-l),n===a?t=(o-i)/u:o===a?t=2+(i-n)/u:i===a&&(t=4+(n-o)/u),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,l/2,e[3]]};var i=o.default.ColorConversion;r.default=i},{"../core/main":264}],250:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.map"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,d=(n=e("../core/main"))&&n.__esModule?n:{default:n},f=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Color"),e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),d.default.prototype.alpha=function(e){return d.default._validateParameters("alpha",arguments),this.color(e)._getAlpha()},d.default.prototype.blue=function(e){return d.default._validateParameters("blue",arguments),this.color(e)._getBlue()},d.default.prototype.brightness=function(e){return d.default._validateParameters("brightness",arguments),this.color(e)._getBrightness()},d.default.prototype.color=function(){if(d.default._validateParameters("color",arguments),arguments[0]instanceof d.default.Color)return arguments[0];var e=arguments[0]instanceof Array?arguments[0]:arguments;return new d.default.Color(this,e)},d.default.prototype.green=function(e){return d.default._validateParameters("green",arguments),this.color(e)._getGreen()},d.default.prototype.hue=function(e){return d.default._validateParameters("hue",arguments),this.color(e)._getHue()},d.default.prototype.lerpColor=function(e,t,r){d.default._validateParameters("lerpColor",arguments);var n,o,i,a,s,l,u=this._colorMode,c=this._colorMaxes;if(u===f.RGB)s=e.levels.map(function(e){return e/255}),l=t.levels.map(function(e){return e/255});else if(u===f.HSB)e._getBrightness(),t._getBrightness(),s=e.hsba,l=t.hsba;else{if(u!==f.HSL)throw new Error("".concat(u,"cannot be used for interpolation."));e._getLightness(),t._getLightness(),s=e.hsla,l=t.hsla}return r=Math.max(Math.min(r,1),0),void 0===this.lerp&&(this.lerp=function(e,t,r){return r*(t-e)+e}),n=this.lerp(s[0],l[0],r),o=this.lerp(s[1],l[1],r),i=this.lerp(s[2],l[2],r),a=this.lerp(s[3],l[3],r),n*=c[u][0],o*=c[u][1],i*=c[u][2],a*=c[u][3],this.color(n,o,i,a)},d.default.prototype.lightness=function(e){return d.default._validateParameters("lightness",arguments),this.color(e)._getLightness()},d.default.prototype.red=function(e){return d.default._validateParameters("red",arguments),this.color(e)._getRed()},d.default.prototype.saturation=function(e){return d.default._validateParameters("saturation",arguments),this.color(e)._getSaturation()};var o=d.default;r.default=o},{"../core/constants":253,"../core/friendly_errors/fes_core":255,"../core/friendly_errors/file_errors":256,"../core/friendly_errors/validate_params":259,"../core/main":264,"./p5.Color":251,"core-js/modules/es.array.map":161}],251:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.join"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.constructor"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.trim"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var d=n(e("../core/main")),f=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants")),h=n(e("./color_conversion"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function n(e){return e&&e.__esModule?e:{default:e}}d.default.Color=function(e,t){if(this._storeModeAndMaxes(e._colorMode,e._colorMaxes),this.mode!==f.RGB&&this.mode!==f.HSL&&this.mode!==f.HSB)throw new Error("".concat(this.mode," is an invalid colorMode."));return this._array=d.default.Color._parseInputs.apply(this,t),this._calculateLevels(),this},d.default.Color.prototype.toString=function(e){var t=this.levels,r=this._array,n=r[3];switch(e){case"#rrggbb":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16));case"#rrggbbaa":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16),t[3]<16?"0".concat(t[3].toString(16)):t[3].toString(16));case"#rgb":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16));case"#rgba":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16),Math.round(15*r[3]).toString(16));case"rgb":return"rgb(".concat(t[0],", ",t[1],", ",t[2],")");case"rgb%":return"rgb(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%)");case"rgba%":return"rgba(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%, ",(100*r[3]).toPrecision(3),"%)");case"hsb":case"hsv":return this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),"hsb(".concat(this.hsba[0]*this.maxes[f.HSB][0],", ",this.hsba[1]*this.maxes[f.HSB][1],", ",this.hsba[2]*this.maxes[f.HSB][2],")");case"hsb%":case"hsv%":return this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),"hsb(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%)");case"hsba":case"hsva":return this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),"hsba(".concat(this.hsba[0]*this.maxes[f.HSB][0],", ",this.hsba[1]*this.maxes[f.HSB][1],", ",this.hsba[2]*this.maxes[f.HSB][2],", ",n,")");case"hsba%":case"hsva%":return this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),"hsba(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%, ",(100*n).toPrecision(3),"%)");case"hsl":return this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),"hsl(".concat(this.hsla[0]*this.maxes[f.HSL][0],", ",this.hsla[1]*this.maxes[f.HSL][1],", ",this.hsla[2]*this.maxes[f.HSL][2],")");case"hsl%":return this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%)");case"hsla":return this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),"hsla(".concat(this.hsla[0]*this.maxes[f.HSL][0],", ",this.hsla[1]*this.maxes[f.HSL][1],", ",this.hsla[2]*this.maxes[f.HSL][2],", ",n,")");case"hsla%":return this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%, ",(100*n).toPrecision(3),"%)");case"rgba":default:return"rgba(".concat(t[0],",",t[1],",",t[2],",",n,")")}},d.default.Color.prototype.setRed=function(e){this._array[0]=e/this.maxes[f.RGB][0],this._calculateLevels()},d.default.Color.prototype.setGreen=function(e){this._array[1]=e/this.maxes[f.RGB][1],this._calculateLevels()},d.default.Color.prototype.setBlue=function(e){this._array[2]=e/this.maxes[f.RGB][2],this._calculateLevels()},d.default.Color.prototype.setAlpha=function(e){this._array[3]=e/this.maxes[this.mode][3],this._calculateLevels()},d.default.Color.prototype._calculateLevels=function(){for(var e=this._array,t=this.levels=new Array(e.length),r=e.length-1;0<=r;--r)t[r]=Math.round(255*e[r])},d.default.Color.prototype._getAlpha=function(){return this._array[3]*this.maxes[this.mode][3]},d.default.Color.prototype._storeModeAndMaxes=function(e,t){this.mode=e,this.maxes=t},d.default.Color.prototype._getMode=function(){return this.mode},d.default.Color.prototype._getMaxes=function(){return this.maxes},d.default.Color.prototype._getBlue=function(){return this._array[2]*this.maxes[f.RGB][2]},d.default.Color.prototype._getBrightness=function(){return this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),this.hsba[2]*this.maxes[f.HSB][2]},d.default.Color.prototype._getGreen=function(){return this._array[1]*this.maxes[f.RGB][1]},d.default.Color.prototype._getHue=function(){return this.mode===f.HSB?(this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),this.hsba[0]*this.maxes[f.HSB][0]):(this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),this.hsla[0]*this.maxes[f.HSL][0])},d.default.Color.prototype._getLightness=function(){return this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),this.hsla[2]*this.maxes[f.HSL][2]},d.default.Color.prototype._getRed=function(){return this._array[0]*this.maxes[f.RGB][0]},d.default.Color.prototype._getSaturation=function(){return this.mode===f.HSB?(this.hsba||(this.hsba=h.default._rgbaToHSBA(this._array)),this.hsba[1]*this.maxes[f.HSB][1]):(this.hsla||(this.hsla=h.default._rgbaToHSLA(this._array)),this.hsla[1]*this.maxes[f.HSL][1])};var p={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},o=/\s*/,i=/(\d{1,3})/,l=/((?:\d+(?:\.\d+)?)|(?:\.\d+))/,u=new RegExp("".concat(l.source,"%")),y={HEX3:/^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX4:/^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX6:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,HEX8:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,RGB:new RegExp(["^rgb\\(",i.source,",",i.source,",",i.source,"\\)$"].join(o.source),"i"),RGB_PERCENT:new RegExp(["^rgb\\(",u.source,",",u.source,",",u.source,"\\)$"].join(o.source),"i"),RGBA:new RegExp(["^rgba\\(",i.source,",",i.source,",",i.source,",",l.source,"\\)$"].join(o.source),"i"),RGBA_PERCENT:new RegExp(["^rgba\\(",u.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(o.source),"i"),HSL:new RegExp(["^hsl\\(",i.source,",",u.source,",",u.source,"\\)$"].join(o.source),"i"),HSLA:new RegExp(["^hsla\\(",i.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(o.source),"i"),HSB:new RegExp(["^hsb\\(",i.source,",",u.source,",",u.source,"\\)$"].join(o.source),"i"),HSBA:new RegExp(["^hsba\\(",i.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(o.source),"i")};d.default.Color._parseInputs=function(e,t,r,n){var o,i=arguments.length,a=this.mode,s=this.maxes[a],l=[];if(3<=i){for(l[0]=e/s[0],l[1]=t/s[1],l[2]=r/s[2],l[3]="number"==typeof n?n/s[3]:1,o=l.length-1;0<=o;--o){var u=l[o];u<0?l[o]=0:1<u&&(l[o]=1)}return a===f.HSL?h.default._hslaToRGBA(l):a===f.HSB?h.default._hsbaToRGBA(l):l}if(1===i&&"string"==typeof e){var c=e.trim().toLowerCase();if(p[c])return d.default.Color._parseInputs.call(this,p[c]);if(y.HEX3.test(c))return(l=y.HEX3.exec(c).slice(1).map(function(e){return parseInt(e+e,16)/255}))[3]=1,l;if(y.HEX6.test(c))return(l=y.HEX6.exec(c).slice(1).map(function(e){return parseInt(e,16)/255}))[3]=1,l;if(y.HEX4.test(c))return l=y.HEX4.exec(c).slice(1).map(function(e){return parseInt(e+e,16)/255});if(y.HEX8.test(c))return l=y.HEX8.exec(c).slice(1).map(function(e){return parseInt(e,16)/255});if(y.RGB.test(c))return(l=y.RGB.exec(c).slice(1).map(function(e){return e/255}))[3]=1,l;if(y.RGB_PERCENT.test(c))return(l=y.RGB_PERCENT.exec(c).slice(1).map(function(e){return parseFloat(e)/100}))[3]=1,l;if(y.RGBA.test(c))return l=y.RGBA.exec(c).slice(1).map(function(e,t){return 3===t?parseFloat(e):e/255});if(y.RGBA_PERCENT.test(c))return l=y.RGBA_PERCENT.exec(c).slice(1).map(function(e,t){return 3===t?parseFloat(e):parseFloat(e)/100});if(y.HSL.test(c)?(l=y.HSL.exec(c).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100}))[3]=1:y.HSLA.test(c)&&(l=y.HSLA.exec(c).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100})),(l=l.map(function(e){return Math.max(Math.min(e,1),0)})).length)return h.default._hslaToRGBA(l);if(y.HSB.test(c)?(l=y.HSB.exec(c).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100}))[3]=1:y.HSBA.test(c)&&(l=y.HSBA.exec(c).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100})),l.length){for(o=l.length-1;0<=o;--o)l[o]=Math.max(Math.min(l[o],1),0);return h.default._hsbaToRGBA(l)}l=[1,1,1,1]}else{if(1!==i&&2!==i||"number"!=typeof e)throw new Error("".concat(arguments,"is not a valid color representation."));l[0]=e/s[2],l[1]=e/s[2],l[2]=e/s[2],l[3]="number"==typeof t?t/s[3]:1,l=l.map(function(e){return Math.max(Math.min(e,1),0)})}return l};var c=d.default.Color;r.default=c},{"../core/constants":253,"../core/main":264,"./color_conversion":249,"core-js/modules/es.array.join":159,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.constructor":180,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.trim":193}],252:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.fill"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("../core/main"))&&n.__esModule?n:{default:n},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}e("./p5.Color"),s.default.prototype.background=function(){var e;return(e=this._renderer).background.apply(e,arguments),this},s.default.prototype.clear=function(){var e=(arguments.length<=0?void 0:arguments[0])||0,t=(arguments.length<=1?void 0:arguments[1])||0,r=(arguments.length<=2?void 0:arguments[2])||0,n=(arguments.length<=3?void 0:arguments[3])||0;return this._renderer.clear(e,t,r,n),this},s.default.prototype.colorMode=function(e,t,r,n,o){if(s.default._validateParameters("colorMode",arguments),e===l.RGB||e===l.HSB||e===l.HSL){this._colorMode=e;var i=this._colorMaxes[e];2===arguments.length?(i[0]=t,i[1]=t,i[2]=t,i[3]=t):4===arguments.length?(i[0]=t,i[1]=r,i[2]=n):5===arguments.length&&(i[0]=t,i[1]=r,i[2]=n,i[3]=o)}return this},s.default.prototype.fill=function(){var e;return this._renderer._setProperty("_fillSet",!0),this._renderer._setProperty("_doFill",!0),(e=this._renderer).fill.apply(e,arguments),this},s.default.prototype.noFill=function(){return this._renderer._setProperty("_doFill",!1),this},s.default.prototype.noStroke=function(){return this._renderer._setProperty("_doStroke",!1),this},s.default.prototype.stroke=function(){var e;return this._renderer._setProperty("_strokeSet",!0),this._renderer._setProperty("_doStroke",!0),(e=this._renderer).stroke.apply(e,arguments),this},s.default.prototype.erase=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:255,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:255;return this._renderer.erase(e,t),this},s.default.prototype.noErase=function(){return this._renderer.noErase(),this};var o=s.default;r.default=o},{"../core/constants":253,"../core/main":264,"./p5.Color":251,"core-js/modules/es.array.fill":151}],253:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.BEZIER=r.QUADRATIC=r.LINEAR=r._CTX_MIDDLE=r._DEFAULT_LEADMULT=r._DEFAULT_TEXT_FILL=r.WORD=r.CHAR=r.BOLDITALIC=r.BOLD=r.ITALIC=r.NORMAL=r.BLUR=r.ERODE=r.DILATE=r.POSTERIZE=r.INVERT=r.OPAQUE=r.GRAY=r.THRESHOLD=r.BURN=r.DODGE=r.SOFT_LIGHT=r.HARD_LIGHT=r.OVERLAY=r.REPLACE=r.SCREEN=r.MULTIPLY=r.EXCLUSION=r.SUBTRACT=r.DIFFERENCE=r.LIGHTEST=r.DARKEST=r.ADD=r.REMOVE=r.BLEND=r.UP_ARROW=r.TAB=r.SHIFT=r.RIGHT_ARROW=r.RETURN=r.OPTION=r.LEFT_ARROW=r.ESCAPE=r.ENTER=r.DOWN_ARROW=r.DELETE=r.CONTROL=r.BACKSPACE=r.ALT=r.AUTO=r.HSL=r.HSB=r.RGB=r.MITER=r.BEVEL=r.ROUND=r.SQUARE=r.PROJECT=r.PIE=r.CHORD=r.OPEN=r.CLOSE=r.TESS=r.QUAD_STRIP=r.QUADS=r.TRIANGLE_STRIP=r.TRIANGLE_FAN=r.TRIANGLES=r.LINE_LOOP=r.LINE_STRIP=r.LINES=r.POINTS=r.BASELINE=r.BOTTOM=r.TOP=r.CENTER=r.LEFT=r.RIGHT=r.RADIUS=r.CORNERS=r.CORNER=r.RAD_TO_DEG=r.DEG_TO_RAD=r.RADIANS=r.DEGREES=r.TWO_PI=r.TAU=r.QUARTER_PI=r.PI=r.HALF_PI=r.WAIT=r.TEXT=r.MOVE=r.HAND=r.CROSS=r.ARROW=r.WEBGL=r.P2D=r.VERSION=void 0,r.FALLBACK=r.LABEL=r.AXES=r.GRID=r._DEFAULT_FILL=r._DEFAULT_STROKE=r.PORTRAIT=r.LANDSCAPE=r.MIRROR=r.CLAMP=r.REPEAT=r.NEAREST=r.IMAGE=r.IMMEDIATE=r.TEXTURE=r.FILL=r.STROKE=r.CURVE=void 0;var n=Math.PI;r.VERSION="1.4.1";r.P2D="p2d";r.WEBGL="webgl";r.ARROW="default";r.CROSS="crosshair";r.HAND="pointer";r.MOVE="move";r.TEXT="text";r.WAIT="wait";var o=n/2;r.HALF_PI=o;var i=n;r.PI=i;var a=n/4;r.QUARTER_PI=a;var s=2*n;r.TAU=s;var l=2*n;r.TWO_PI=l;r.DEGREES="degrees";r.RADIANS="radians";var u=n/180;r.DEG_TO_RAD=u;var c=180/n;r.RAD_TO_DEG=c;r.CORNER="corner";r.CORNERS="corners";r.RADIUS="radius";r.RIGHT="right";r.LEFT="left";r.CENTER="center";r.TOP="top";r.BOTTOM="bottom";r.BASELINE="alphabetic";r.POINTS=0;r.LINES=1;r.LINE_STRIP=3;r.LINE_LOOP=2;r.TRIANGLES=4;r.TRIANGLE_FAN=6;r.TRIANGLE_STRIP=5;r.QUADS="quads";r.QUAD_STRIP="quad_strip";r.TESS="tess";r.CLOSE="close";r.OPEN="open";r.CHORD="chord";r.PIE="pie";r.PROJECT="square";r.SQUARE="butt";r.ROUND="round";r.BEVEL="bevel";r.MITER="miter";r.RGB="rgb";r.HSB="hsb";r.HSL="hsl";r.AUTO="auto";r.ALT=18;r.BACKSPACE=8;r.CONTROL=17;r.DELETE=46;r.DOWN_ARROW=40;r.ENTER=13;r.ESCAPE=27;r.LEFT_ARROW=37;r.OPTION=18;r.RETURN=13;r.RIGHT_ARROW=39;r.SHIFT=16;r.TAB=9;r.UP_ARROW=38;r.BLEND="source-over";r.REMOVE="destination-out";r.ADD="lighter";r.DARKEST="darken";r.LIGHTEST="lighten";r.DIFFERENCE="difference";r.SUBTRACT="subtract";r.EXCLUSION="exclusion";r.MULTIPLY="multiply";r.SCREEN="screen";r.REPLACE="copy";r.OVERLAY="overlay";r.HARD_LIGHT="hard-light";r.SOFT_LIGHT="soft-light";r.DODGE="color-dodge";r.BURN="color-burn";r.THRESHOLD="threshold";r.GRAY="gray";r.OPAQUE="opaque";r.INVERT="invert";r.POSTERIZE="posterize";r.DILATE="dilate";r.ERODE="erode";r.BLUR="blur";r.NORMAL="normal";r.ITALIC="italic";r.BOLD="bold";r.BOLDITALIC="bold italic";r.CHAR="CHAR";r.WORD="WORD";r._DEFAULT_TEXT_FILL="#000000";r._DEFAULT_LEADMULT=1.25;r._CTX_MIDDLE="middle";r.LINEAR="linear";r.QUADRATIC="quadratic";r.BEZIER="bezier";r.CURVE="curve";r.STROKE="stroke";r.FILL="fill";r.TEXTURE="texture";r.IMMEDIATE="immediate";r.IMAGE="image";r.NEAREST="nearest";r.REPEAT="repeat";r.CLAMP="clamp";r.MIRROR="mirror";r.LANDSCAPE="landscape";r.PORTRAIT="portrait";r._DEFAULT_STROKE="#000000";r._DEFAULT_FILL="#FFFFFF";r.GRID="grid";r.AXES="axes";r.LABEL="label";r.FALLBACK="fallback"},{}],254:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.includes"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.string.search"),e("core-js/modules/es.string.split"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}var l=[i.ARROW,i.CROSS,i.HAND,i.MOVE,i.TEXT,i.WAIT];o.default.prototype._frameRate=0,o.default.prototype._lastFrameTime=window.performance.now(),o.default.prototype._targetFrameRate=60;var u=window.print;function c(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth||0}function d(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight||0}o.default.prototype.print=function(){var e;arguments.length?(e=console).log.apply(e,arguments):u()},o.default.prototype.frameCount=0,o.default.prototype.deltaTime=0,o.default.prototype.focused=document.hasFocus(),o.default.prototype.cursor=function(e,t,r){var n="auto",o=this._curElement.elt;if(l.includes(e))n=e;else if("string"==typeof e){var i="";t&&r&&"number"==typeof t&&"number"==typeof r&&(i="".concat(t," ").concat(r)),n="http://"===e.substring(0,7)||"https://"===e.substring(0,8)?"url(".concat(e,") ").concat(i,", auto"):/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e)?"url(".concat(e,") ").concat(i,", auto"):e}o.style.cursor=n},o.default.prototype.frameRate=function(e){return o.default._validateParameters("frameRate",arguments),"number"!=typeof e||e<0?this._frameRate:(this._setProperty("_targetFrameRate",e),0===e&&this._setProperty("_frameRate",e),this)},o.default.prototype.getFrameRate=function(){return this.frameRate()},o.default.prototype.setFrameRate=function(e){return this.frameRate(e)},o.default.prototype.noCursor=function(){this._curElement.elt.style.cursor="none"},o.default.prototype.displayWidth=screen.width,o.default.prototype.displayHeight=screen.height,o.default.prototype.windowWidth=c(),o.default.prototype.windowHeight=d(),o.default.prototype._onresize=function(e){this._setProperty("windowWidth",c()),this._setProperty("windowHeight",d());var t,r=this._isGlobal?window:this;"function"==typeof r.windowResized&&(void 0===(t=r.windowResized(e))||t||e.preventDefault())},o.default.prototype.width=0,o.default.prototype.height=0,o.default.prototype.fullscreen=function(e){if(o.default._validateParameters("fullscreen",arguments),void 0===e)return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;e?function(e){if(!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled))throw new Error("Fullscreen not enabled in this browser.");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}(document.documentElement):document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},o.default.prototype.pixelDensity=function(e){var t;return o.default._validateParameters("pixelDensity",arguments),"number"==typeof e?(e!==this._pixelDensity&&(this._pixelDensity=e),(t=this).resizeCanvas(this.width,this.height,!0)):t=this._pixelDensity,t},o.default.prototype.displayDensity=function(){return window.devicePixelRatio},o.default.prototype.getURL=function(){return location.href},o.default.prototype.getURLPath=function(){return location.pathname.split("/").filter(function(e){return""!==e})},o.default.prototype.getURLParams=function(){for(var e,t=/[?&]([^&=]+)(?:[&=])([^&=]+)/gim,r={};null!=(e=t.exec(location.search));)e.index===t.lastIndex&&t.lastIndex++,r[e[1]]=e[2];return r};var f=o.default;r.default=f},{"./constants":253,"./main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.includes":156,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.includes":185,"core-js/modules/es.string.search":190,"core-js/modules/es.string.split":191}],255:[function(r,e,t){"use strict";r("core-js/modules/es.symbol"),r("core-js/modules/es.symbol.description"),r("core-js/modules/es.symbol.iterator"),r("core-js/modules/es.array.concat"),r("core-js/modules/es.array.filter"),r("core-js/modules/es.array.for-each"),r("core-js/modules/es.array.includes"),r("core-js/modules/es.array.iterator"),r("core-js/modules/es.array.join"),r("core-js/modules/es.array.map"),r("core-js/modules/es.array.slice"),r("core-js/modules/es.array.some"),r("core-js/modules/es.function.name"),r("core-js/modules/es.object.assign"),r("core-js/modules/es.object.get-own-property-names"),r("core-js/modules/es.object.keys"),r("core-js/modules/es.object.to-string"),r("core-js/modules/es.regexp.constructor"),r("core-js/modules/es.regexp.exec"),r("core-js/modules/es.regexp.to-string"),r("core-js/modules/es.string.iterator"),r("core-js/modules/es.string.match"),r("core-js/modules/es.string.replace"),r("core-js/modules/es.string.search"),r("core-js/modules/es.string.split"),r("core-js/modules/web.dom-collections.for-each"),r("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,o=(n=r("../main"))&&n.__esModule?n:{default:n};r("../internationalization");var i=null,a=null;o.default._friendlyError=o.default._checkForUserDefinedFunctions=o.default._fesErrorMonitor=function(){},i=null;var s="https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup";a=function(){function e(r){return Object.getOwnPropertyNames(r).filter(function(e){return"_"!==e[0]&&(!(e in t)&&(t[e]=!0))}).map(function(e){var t;return t="function"==typeof r[e]?"function":e===e.toUpperCase()?"constant":"variable",{name:e,type:t}})}var t={};(i=[].concat(e(o.default.prototype),e(r("../constants")))).sort(function(e,t){return t.name.length-e.name.length})};function l(r,n){n=n||console.log.bind(console),i||a(),i.some(function(e){if(r.message&&null!==r.message.match("\\W?".concat(e.name,"\\W"))){var t="function"===e.type?"".concat(e.name,"()"):e.name;return n("Did you just try to use p5.js's ".concat(t," ").concat(e.type,"? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(s)),!0}})}o.default.prototype._helpForMisusedAtTopLevelCode=l,"complete"!==document.readyState&&(window.addEventListener("error",l,!1),window.addEventListener("load",function(){window.removeEventListener("error",l,!1)}));var u=o.default;t.default=u},{"../constants":253,"../internationalization":262,"../main":264,"./browser_errors":void 0,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.for-each":154,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.join":159,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.some":163,"core-js/modules/es.function.name":166,"core-js/modules/es.object.assign":173,"core-js/modules/es.object.get-own-property-names":174,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.constructor":180,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.match":187,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.search":190,"core-js/modules/es.string.split":191,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.for-each":228,"core-js/modules/web.dom-collections.iterator":229}],256:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};e("../internationalization");o.default._friendlyFileLoadError=function(){};var i=o.default;r.default=i},{"../internationalization":262,"../main":264}],257:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.flat-map"),e("core-js/modules/es.array.for-each"),e("core-js/modules/es.array.from"),e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.unscopables.flat-map"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.constructor"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.match"),e("core-js/modules/es.string.split"),e("core-js/modules/es.string.trim"),e("core-js/modules/web.dom-collections.for-each"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=_(e("../main")),o=e("../internationalization"),i=b(e("../constants")),s,l,u,c,d,f,h,p,y,m,g;function v(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return v=function(){return e},e}function b(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=v();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}function _(e){return e&&e.__esModule?e:{default:e}}function x(e){return S(e)||j(e)||w()}function w(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function j(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function S(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}n.default._fesCodeReader=function(){};var M=n.default;r.default=M},{"../constants":253,"../internationalization":262,"../main":264,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.flat-map":153,"core-js/modules/es.array.for-each":154,"core-js/modules/es.array.from":155,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.map":161,"core-js/modules/es.array.unscopables.flat-map":165,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.constructor":180,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.includes":185,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.match":187,"core-js/modules/es.string.split":191,"core-js/modules/es.string.trim":193,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.for-each":228,"core-js/modules/web.dom-collections.iterator":229}],258:[function(e,t,r){"use strict";e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.join"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.match"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.split"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};function i(){var t=/(^|@)\S+:\d+/,r=/^\s*at .*(\S+:\d+|\(native\))/m,n=/^(eval@)?(\[native code])?$/;return{parse:function(e){return void 0!==e.stacktrace||void 0!==e["opera#sourceloc"]?this.parseOpera(e):e.stack&&e.stack.match(r)?this.parseV8OrIE(e):e.stack?this.parseFFOrSafari(e):void 0},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e.replace(/[()]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(e){return e.stack.split("\n").filter(function(e){return!!e.match(r)},this).map(function(e){-1<e.indexOf("(eval ")&&(e=e.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(\),.*$)/g,""));var t=e.replace(/^\s+/,"").replace(/\(eval code/g,"("),r=t.match(/ (\((.+):(\d+):(\d+)\)$)/),n=(t=r?t.replace(r[0],""):t).split(/\s+/).slice(1),o=this.extractLocation(r?r[1]:n.pop());return{functionName:n.join(" ")||void 0,fileName:-1<["eval","<anonymous>"].indexOf(o[0])?void 0:o[0],lineNumber:o[1],columnNumber:o[2],source:e}},this)},parseFFOrSafari:function(e){return e.stack.split("\n").filter(function(e){return!e.match(n)},this).map(function(e){if(-1<e.indexOf(" > eval")&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===e.indexOf("@")&&-1===e.indexOf(":"))return{functionName:e};var t=/((.*".+"[^@]*)?[^@]*)(?:@)/,r=e.match(t),n=r&&r[1]?r[1]:void 0,o=this.extractLocation(e.replace(t,""));return{functionName:n,fileName:o[0],lineNumber:o[1],columnNumber:o[2],source:e}},this)},parseOpera:function(e){return!e.stacktrace||-1<e.message.indexOf("\n")&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)/i,r=e.message.split("\n"),n=[],o=2,i=r.length;o<i;o+=2){var a=t.exec(r[o]);a&&n.push({fileName:a[2],lineNumber:a[1],source:r[o]})}return n},parseOpera10:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,r=e.stacktrace.split("\n"),n=[],o=0,i=r.length;o<i;o+=2){var a=t.exec(r[o]);a&&n.push({functionName:a[3]||void 0,fileName:a[2],lineNumber:a[1],source:r[o]})}return n},parseOpera11:function(e){return e.stack.split("\n").filter(function(e){return!!e.match(t)&&!e.match(/^Error created at/)},this).map(function(e){var t,r=e.split("@"),n=this.extractLocation(r.pop()),o=r.shift()||"",i=o.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;return o.match(/\(([^)]*)\)/)&&(t=o.replace(/^[^(]+\(([^)]*)\)$/,"$1")),{functionName:i,args:void 0===t||"[arguments not available]"===t?void 0:t.split(","),fileName:n[0],lineNumber:n[1],columnNumber:n[2],source:e}},this)}}}o.default._getErrorStackParser=function(){return new i};var a=o.default;r.default=a},{"../main":264,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.join":159,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.match":187,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.split":191}],259:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.for-each"),e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.join"),e("core-js/modules/es.array.last-index-of"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.function.name"),e("core-js/modules/es.map"),e("core-js/modules/es.number.constructor"),e("core-js/modules/es.object.get-prototype-of"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.reflect.construct"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.set"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.split"),e("core-js/modules/web.dom-collections.for-each"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};(function(e){if(e&&e.__esModule)return;if(null===e||"object"!==s(e)&&"function"!=typeof e)return;var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r)})(e("../constants")),e("../internationalization");function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o.default._validateParameters=o.default._clearValidateParamsCache=function(){};var i=o.default;r.default=i},{"../../../docs/parameterData.json":void 0,"../constants":253,"../internationalization":262,"../main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.for-each":154,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.join":159,"core-js/modules/es.array.last-index-of":160,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.function.name":166,"core-js/modules/es.map":167,"core-js/modules/es.number.constructor":170,"core-js/modules/es.object.get-prototype-of":175,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.reflect.construct":179,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.set":183,"core-js/modules/es.string.includes":185,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.split":191,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.for-each":228,"core-js/modules/web.dom-collections.iterator":229}],260:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}var n={modeAdjust:function(e,t,r,n,o){return o===i.CORNER?{x:e,y:t,w:r,h:n}:o===i.CORNERS?{x:e,y:t,w:r-e,h:n-t}:o===i.RADIUS?{x:e-r,y:t-n,w:2*r,h:2*n}:o===i.CENTER?{x:e-.5*r,y:t-.5*n,w:r,h:n}:void 0}};r.default=n},{"./constants":253}],261:[function(e,t,r){"use strict";e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.promise"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.iterator");var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./internationalization");var i=Promise.resolve();Promise.all([new Promise(function(e,t){"complete"===document.readyState?e():window.addEventListener("load",e,!1)}),i]).then(function(){void 0===window._setupDone?window.mocha||(window.setup&&"function"==typeof window.setup||window.draw&&"function"==typeof window.draw)&&!o.default.instance&&new o.default:console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import")})},{"../core/main":264,"./internationalization":262,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.promise":178,"core-js/modules/es.string.iterator":186,"core-js/modules/web.dom-collections.iterator":229}],262:[function(e,t,r){"use strict";e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.join"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.promise"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.split"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.setTranslatorLanguage=r.currentTranslatorLanguage=r.availableTranslatorLanguages=r.initialize=r.translator=void 0;var i,a,n=s(e("i18next")),o=s(e("i18next-browser-languagedetector"));function s(e){return e&&e.__esModule?e:{default:e}}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var u=function(){function r(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r),this.init(e,t)}var e,t,n;return e=r,(t=[{key:"fetchWithTimeout",value:function(e,t,r){var n=2<arguments.length&&void 0!==r?r:2e3;return Promise.race([fetch(e,t),new Promise(function(e,t){return setTimeout(function(){return t(new Error("timeout"))},n)})])}},{key:"init",value:function(e,t){var r=1<arguments.length&&void 0!==t?t:{};this.services=e,this.options=r}},{key:"read",value:function(e,t,r){var n=this.options.loadPath;if(e===this.options.fallback)r(null,i[e][t]);else if(a.includes(e)){var o=this.services.interpolator.interpolate(n,{lng:e,ns:t});this.loadUrl(o,r)}else r("Not found",!1)}},{key:"loadUrl",value:function(t,r){this.fetchWithTimeout(t).then(function(e){if(!e.ok)throw new Error("failed loading ".concat(t));return e.json()},function(){throw new Error("failed loading ".concat(t))}).then(function(e){return r(null,e)}).catch(r)}}])&&l(e.prototype,t),n&&l(e,n),r}();u.type="backend";var c=function(e,t){console.debug("p5.js translator called before translations were loaded"),n.default.t(e,t)};r.translator=c;r.initialize=function(){return n.default.use(o.default).use(u).init({fallbackLng:"en",nestingPrefix:"$tr(",nestingSuffix:")",defaultNS:"translation",returnEmptyString:!1,interpolation:{escapeValue:!1},detection:{checkWhitelist:!1,order:["querystring","navigator","htmlTag","path","subdomain"],caches:[]},backend:{fallback:"en",loadPath:"https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"},partialBundledLanguages:!0,resources:i}).then(function(e){r.translator=c=e},function(e){return console.debug("Translations failed to load (".concat(e,")"))})};r.availableTranslatorLanguages=function(){return n.default.languages};r.currentTranslatorLanguage=function(){return n.default.language};r.setTranslatorLanguage=function(e){return n.default.changeLanguage(e||void 0,function(e){return console.debug("Translations failed to load (".concat(e,")"))})}},{"../../translations":void 0,"../../translations/dev":void 0,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.join":159,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.promise":178,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.includes":185,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.split":191,"core-js/modules/web.dom-collections.iterator":229,i18next:3,"i18next-browser-languagedetector":3}],263:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.prototype.pushStyle=function(){throw new Error("pushStyle() not used, see push()")},o.default.prototype.popStyle=function(){throw new Error("popStyle() not used, see pop()")},o.default.prototype.popMatrix=function(){throw new Error("popMatrix() not used, see pop()")},o.default.prototype.pushMatrix=function(){throw new Error("pushMatrix() not used, see push()")};var i=o.default;r.default=i},{"./main":264}],264:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.for-each"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.get-own-property-names"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.for-each"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,e("./shim");var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var i=function(){function _(e,t,r){var f=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,_),this._setupDone=!1,this._pixelDensity=Math.ceil(window.devicePixelRatio)||1,this._userNode=t,this._curElement=null,this._elements=[],this._glAttributes=null,this._requestAnimId=0,this._preloadCount=0,this._isGlobal=!1,this._loop=!0,this._initializeInstanceVariables(),this._defaultCanvasSize={width:100,height:100},this._events={mousemove:null,mousedown:null,mouseup:null,dragend:null,dragover:null,click:null,dblclick:null,mouseover:null,mouseout:null,keydown:null,keyup:null,keypress:null,touchstart:null,touchmove:null,touchend:null,resize:null,blur:null},this._millisStart=-1,this._lcg_random_state=null,this._gaussian_previous=!1,this._events.wheel=null,this._loadingScreenId="p5_loading",this._registeredMethods={};var n=Object.getOwnPropertyNames(_.prototype._registeredMethods),o=!0,i=!1,a=void 0;try{for(var s,l=n[Symbol.iterator]();!(o=(s=l.next()).done);o=!0){var u=s.value;this._registeredMethods[u]=_.prototype._registeredMethods[u].slice()}}catch(e){i=!0,a=e}finally{try{o||null==l.return||l.return()}finally{if(i)throw a}}window.DeviceOrientationEvent&&(this._events.deviceorientation=null),window.DeviceMotionEvent&&!window._isNodeWebkit&&(this._events.devicemotion=null),this._start=function(){f._userNode&&"string"==typeof f._userNode&&(f._userNode=document.getElementById(f._userNode));var e=f._isGlobal?window:f;if(e.preload){var t=document.getElementById(f._loadingScreenId);if(!t)(t=document.createElement("div")).innerHTML="Loading...",t.style.position="absolute",t.id=f._loadingScreenId,(f._userNode||document.body).appendChild(t);var r=f._preloadMethods;for(var n in r){r[n]=r[n]||_;var o=r[n];o!==_.prototype&&o!==_||(f._isGlobal&&(window[n]=f._wrapPreload(f,n)),o=f),f._registeredPreloadMethods[n]=o[n],o[n]=f._wrapPreload(o,n)}e.preload(),f._runIfPreloadsAreDone()}else f._setup(),f._draw()},this._runIfPreloadsAreDone=function(){var e=this._isGlobal?window:this;if(0===e._preloadCount){var t=document.getElementById(e._loadingScreenId);t&&t.parentNode.removeChild(t),this._setupDone||(this._lastFrameTime=window.performance.now(),e._setup(),e._draw())}},this._decrementPreload=function(){var e=this._isGlobal?window:this;"function"==typeof e.preload&&(e._setProperty("_preloadCount",e._preloadCount-1),e._runIfPreloadsAreDone())},this._wrapPreload=function(n,o){var i=this;return function(){i._incrementPreload();for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i._registeredPreloadMethods[o].apply(n,t)}},this._incrementPreload=function(){var e=this._isGlobal?window:this;e._setProperty("_preloadCount",e._preloadCount+1)},this._setup=function(){f.createCanvas(f._defaultCanvasSize.width,f._defaultCanvasSize.height,"p2d");var e=f._isGlobal?window:f;if("function"==typeof e.preload)for(var t in f._preloadMethods)e[t]=f._preloadMethods[t][t],e[t]&&f&&(e[t]=e[t].bind(f));f._millisStart=window.performance.now(),"function"==typeof e.setup&&e.setup();var r=document.getElementsByTagName("canvas"),n=!0,o=!1,i=void 0;try{for(var a,s=r[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;"true"===l.dataset.hidden&&(l.style.visibility="",delete l.dataset.hidden)}}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}f._lastFrameTime=window.performance.now(),f._setupDone=!0,(f._accessibleOutputs.grid||f._accessibleOutputs.text)&&f._updateAccsOutput()},this._draw=function(){var e=window.performance.now(),t=e-f._lastFrameTime,r=1e3/f._targetFrameRate;(!f._loop||r-5<=t)&&(f.redraw(),f._frameRate=1e3/(e-f._lastFrameTime),f.deltaTime=e-f._lastFrameTime,f._setProperty("deltaTime",f.deltaTime),f._lastFrameTime=e,void 0!==f._updateMouseCoords&&(f._updateMouseCoords(),f._setProperty("movedX",0),f._setProperty("movedY",0))),f._loop&&(f._requestAnimId=window.requestAnimationFrame(f._draw))},this._setProperty=function(e,t){f[e]=t,f._isGlobal&&(window[e]=t)},this.remove=function(){var e=document.getElementById(f._loadingScreenId);if(e&&(e.parentNode.removeChild(e),f._incrementPreload()),f._curElement){for(var t in f._loop=!1,f._requestAnimId&&window.cancelAnimationFrame(f._requestAnimId),f._events)window.removeEventListener(t,f._events[t]);var r=!0,n=!1,o=void 0;try{for(var i,a=f._elements[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value;for(var l in s.elt&&s.elt.parentNode&&s.elt.parentNode.removeChild(s.elt),s._events)s.elt.removeEventListener(l,s._events[l])}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}var u=f;f._registeredMethods.remove.forEach(function(e){void 0!==e&&e.call(u)})}if(f._isGlobal){for(var c in _.prototype)try{delete window[c]}catch(e){window[c]=void 0}for(var d in f)if(f.hasOwnProperty(d))try{delete window[d]}catch(e){window[d]=void 0}_.instance=null}},this._registeredMethods.init.forEach(function(e){void 0!==e&&e.call(this)},this),this._setupPromisePreloads();var c=this._createFriendlyGlobalFunctionBinder();if(e)e(this),_._checkForUserDefinedFunctions(this);else{for(var d in this._isGlobal=!0,_.instance=this,_.prototype)if("function"==typeof _.prototype[d]){var h=d.substring(2);this._events.hasOwnProperty(h)||(Math.hasOwnProperty(d)&&Math[d]===_.prototype[d]?c(d,_.prototype[d]):c(d,_.prototype[d].bind(this)))}else c(d,_.prototype[d]);for(var p in this)this.hasOwnProperty(p)&&c(p,this[p])}for(var y in this._events){var m=this["_on".concat(y)];if(m){var g=m.bind(this);window.addEventListener(y,g,{passive:!1}),this._events[y]=g}}function v(){f._setProperty("focused",!0)}function b(){f._setProperty("focused",!1)}window.addEventListener("focus",v),window.addEventListener("blur",b),this.registerMethod("remove",function(){window.removeEventListener("focus",v),window.removeEventListener("blur",b)}),"complete"===document.readyState?this._start():window.addEventListener("load",this._start.bind(this),!1)}var e,t,r;return e=_,(t=[{key:"_initializeInstanceVariables",value:function(){this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1},this._styles=[],this._bezierDetail=20,this._curveDetail=20,this._colorMode=n.RGB,this._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},this._downKeys={}}},{key:"registerPreloadMethod",value:function(e,t){_.prototype._preloadMethods.hasOwnProperty(e)||(_.prototype._preloadMethods[e]=t)}},{key:"registerMethod",value:function(e,t){var r=this||_.prototype;r._registeredMethods.hasOwnProperty(e)||(r._registeredMethods[e]=[]),r._registeredMethods[e].push(t)}},{key:"_createFriendlyGlobalFunctionBinder",value:function(e){var t=0<arguments.length&&void 0!==e?e:{},r=t.globalObject||window;t.log||console.log.bind(console);return function(e,t){r[e]=t}}}])&&o(e.prototype,t),r&&o(e,r),_}();for(var l in i.instance=null,i.disableFriendlyErrors=!1,n)i.prototype[l]=n[l];i.VERSION=n.VERSION,i.prototype._preloadMethods={loadJSON:i.prototype,loadImage:i.prototype,loadStrings:i.prototype,loadXML:i.prototype,loadBytes:i.prototype,loadTable:i.prototype,loadFont:i.prototype,loadModel:i.prototype,loadShader:i.prototype},i.prototype._registeredMethods={init:[],pre:[],post:[],remove:[]},i.prototype._registeredPreloadMethods={};var u=i;r.default=u},{"./constants":253,"./shim":275,"core-js/modules/es.array.for-each":154,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.get-own-property-names":174,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.for-each":228,"core-js/modules/web.dom-collections.iterator":229}],265:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.Element=function(e,t){this.elt=e,this._pInst=this._pixelsState=t,this._events={},this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight},o.default.Element.prototype.parent=function(e){return void 0===e?this.elt.parentNode:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof o.default.Element&&(e=e.elt),e.appendChild(this.elt),this)},o.default.Element.prototype.id=function(e){return void 0===e?this.elt.id:(this.elt.id=e,this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this)},o.default.Element.prototype.class=function(e){return void 0===e?this.elt.className:(this.elt.className=e,this)},o.default.Element.prototype.mousePressed=function(t){return o.default.Element._adjustListener("mousedown",function(e){return this._pInst._setProperty("mouseIsPressed",!0),this._pInst._setMouseButton(e),t.call(this)},this),this},o.default.Element.prototype.doubleClicked=function(e){return o.default.Element._adjustListener("dblclick",e,this),this},o.default.Element.prototype.mouseWheel=function(e){return o.default.Element._adjustListener("wheel",e,this),this},o.default.Element.prototype.mouseReleased=function(e){return o.default.Element._adjustListener("mouseup",e,this),this},o.default.Element.prototype.mouseClicked=function(e){return o.default.Element._adjustListener("click",e,this),this},o.default.Element.prototype.mouseMoved=function(e){return o.default.Element._adjustListener("mousemove",e,this),this},o.default.Element.prototype.mouseOver=function(e){return o.default.Element._adjustListener("mouseover",e,this),this},o.default.Element.prototype.mouseOut=function(e){return o.default.Element._adjustListener("mouseout",e,this),this},o.default.Element.prototype.touchStarted=function(e){return o.default.Element._adjustListener("touchstart",e,this),this},o.default.Element.prototype.touchMoved=function(e){return o.default.Element._adjustListener("touchmove",e,this),this},o.default.Element.prototype.touchEnded=function(e){return o.default.Element._adjustListener("touchend",e,this),this},o.default.Element.prototype.dragOver=function(e){return o.default.Element._adjustListener("dragover",e,this),this},o.default.Element.prototype.dragLeave=function(e){return o.default.Element._adjustListener("dragleave",e,this),this},o.default.Element._adjustListener=function(e,t,r){return!1===t?o.default.Element._detachListener(e,r):o.default.Element._attachListener(e,t,r),this},o.default.Element._attachListener=function(e,t,r){r._events[e]&&o.default.Element._detachListener(e,r);var n=t.bind(r);r.elt.addEventListener(e,n,!1),r._events[e]=n},o.default.Element._detachListener=function(e,t){var r=t._events[e];t.elt.removeEventListener(e,r,!1),t._events[e]=null},o.default.Element.prototype._setProperty=function(e,t){this[e]=t};var i=o.default.Element;r.default=i},{"./main":264}],266:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.splice"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("./main"))&&n.__esModule?n:{default:n},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}s.default.Graphics=function(e,t,r,n){var o=r||l.P2D;this.canvas=document.createElement("canvas");var i=n._userNode||document.body;for(var a in i.appendChild(this.canvas),s.default.Element.call(this,this.canvas,n),s.default.prototype)this[a]||("function"==typeof s.default.prototype[a]?this[a]=s.default.prototype[a].bind(this):this[a]=s.default.prototype[a]);return s.default.prototype._initializeInstanceVariables.apply(this),this.width=e,this.height=t,this._pixelDensity=n._pixelDensity,o===l.WEBGL?this._renderer=new s.default.RendererGL(this.canvas,this,!1):this._renderer=new s.default.Renderer2D(this.canvas,this,!1),n._elements.push(this),Object.defineProperty(this,"deltaTime",{get:function(){return this._pInst.deltaTime}}),this._renderer.resize(e,t),this._renderer._applyDefaults(),this},s.default.Graphics.prototype=Object.create(s.default.Element.prototype),s.default.Graphics.prototype.reset=function(){this._renderer.resetMatrix(),this._renderer.isP3D&&this._renderer._update()},s.default.Graphics.prototype.remove=function(){this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt);var e=this._pInst._elements.indexOf(this);for(var t in-1!==e&&this._pInst._elements.splice(e,1),this._events)this.elt.removeEventListener(t,this._events[t])};var o=s.default.Graphics;r.default=o},{"./constants":253,"./main":264,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.splice":164}],267:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.number.constructor"),e("core-js/modules/es.object.assign"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.split"),e("core-js/modules/es.string.trim"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,l=(n=e("./main"))&&n.__esModule?n:{default:n},k=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e){var t=0,r=0;if(e.offsetParent)for(;t+=e.offsetLeft,r+=e.offsetTop,e=e.offsetParent;);else t+=e.offsetLeft,r+=e.offsetTop;return[t,r]}l.default.Renderer=function(e,t,r){l.default.Element.call(this,e,t),this.canvas=e,this._pixelsState=t,r?(this._isMainCanvas=!0,this._pInst._setProperty("_curElement",this),this._pInst._setProperty("canvas",this.canvas),this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height)):(this.canvas.style.display="none",this._styles=[]),this._textSize=12,this._textLeading=15,this._textFont="sans-serif",this._textStyle=k.NORMAL,this._textAscent=null,this._textDescent=null,this._textAlign=k.LEFT,this._textBaseline=k.BASELINE,this._textWrap=k.WORD,this._rectMode=k.CORNER,this._ellipseMode=k.CENTER,this._curveTightness=0,this._imageMode=k.CORNER,this._tint=null,this._doStroke=!0,this._doFill=!0,this._strokeSet=!1,this._fillSet=!1,this._leadingSet=!1},l.default.Renderer.prototype=Object.create(l.default.Element.prototype),l.default.Renderer.prototype.push=function(){return{properties:{_doStroke:this._doStroke,_strokeSet:this._strokeSet,_doFill:this._doFill,_fillSet:this._fillSet,_tint:this._tint,_imageMode:this._imageMode,_rectMode:this._rectMode,_ellipseMode:this._ellipseMode,_textFont:this._textFont,_textLeading:this._textLeading,_leadingSet:this._leadingSet,_textSize:this._textSize,_textAlign:this._textAlign,_textBaseline:this._textBaseline,_textStyle:this._textStyle,_textWrap:this._textWrap}}},l.default.Renderer.prototype.pop=function(e){e.properties&&Object.assign(this,e.properties)},l.default.Renderer.prototype.resize=function(e,t){this.width=e,this.height=t,this.elt.width=e*this._pInst._pixelDensity,this.elt.height=t*this._pInst._pixelDensity,this.elt.style.width="".concat(e,"px"),this.elt.style.height="".concat(t,"px"),this._isMainCanvas&&(this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height))},l.default.Renderer.prototype.get=function(e,t,r,n){var o=this._pixelsState,i=o._pixelDensity,a=this.canvas;if(void 0===e&&void 0===t)e=t=0,r=o.width,n=o.height;else if(e*=i,t*=i,void 0===r&&void 0===n)return e<0||t<0||e>=a.width||t>=a.height?[0,0,0,0]:this._getPixel(e,t);var s=new l.default.Image(r,n);return s.canvas.getContext("2d").drawImage(a,e,t,r*i,n*i,0,0,r,n),s},l.default.Renderer.prototype.textLeading=function(e){return"number"==typeof e?(this._setProperty("_leadingSet",!0),this._setProperty("_textLeading",e),this._pInst):this._textLeading},l.default.Renderer.prototype.textSize=function(e){return"number"==typeof e?(this._setProperty("_textSize",e),this._leadingSet||this._setProperty("_textLeading",e*k._DEFAULT_LEADMULT),this._applyTextProperties()):this._textSize},l.default.Renderer.prototype.textStyle=function(e){return e?(e!==k.NORMAL&&e!==k.ITALIC&&e!==k.BOLD&&e!==k.BOLDITALIC||this._setProperty("_textStyle",e),this._applyTextProperties()):this._textStyle},l.default.Renderer.prototype.textAscent=function(){return null===this._textAscent&&this._updateTextMetrics(),this._textAscent},l.default.Renderer.prototype.textDescent=function(){return null===this._textDescent&&this._updateTextMetrics(),this._textDescent},l.default.Renderer.prototype.textAlign=function(e,t){return void 0!==e?(this._setProperty("_textAlign",e),void 0!==t&&this._setProperty("_textBaseline",t),this._applyTextProperties()):{horizontal:this._textAlign,vertical:this._textBaseline}},l.default.Renderer.prototype.textWrap=function(e){return this._setProperty("_textWrap",e),this._textWrap},l.default.Renderer.prototype.text=function(e,t,r,n,o){var i,a,s,l,u,c,d,f=this._pInst,h=this._textWrap,p=Number.MAX_VALUE;if((this._doFill||this._doStroke)&&void 0!==e){if("string"!=typeof e&&(e=e.toString()),i=(e=e.replace(/(\t)/g,"  ")).split("\n"),void 0!==n){switch(this._rectMode===k.CENTER&&(t-=n/2),this._textAlign){case k.CENTER:t+=n/2;break;case k.RIGHT:t+=n}var y=!1;if(void 0!==o){switch(this._rectMode===k.CENTER&&(r-=o/2),this._textBaseline){case k.BOTTOM:d=r+o,r=Math.max(d,r);break;case k.CENTER:d=r+o/2,r=Math.max(d,r);break;case k.BASELINE:y=!0,this._textBaseline=k.TOP}p=r+o-f.textAscent()}if(h===k.WORD){for(var m=[],g=0;g<i.length;g++){a="",u=i[g].split(" ");for(var v=0;v<u.length;v++)s="".concat(a+u[v])+" ",a=n<(l=this.textWidth(s))&&0<a.length?(m.push(a),"".concat(u[v])+" "):s;m.push(a)}var b=0,_=f.textAlign().vertical;_===k.CENTER?b=(m.length-1)*f.textLeading()/2:_===k.BOTTOM&&(b=(m.length-1)*f.textLeading());for(var x=0;x<i.length;x++){a="",u=i[x].split(" ");for(var w=0;w<u.length;w++)s="".concat(a+u[w])+" ",n<(l=this.textWidth(s))&&0<a.length?(this._renderText(f,a.trim(),t,r-b,p),a="".concat(u[w])+" ",r+=f.textLeading()):a=s;this._renderText(f,a.trim(),t,r-b,p),r+=f.textLeading(),y&&(this._textBaseline=k.BASELINE)}}else{for(var j=[],S=0;S<i.length;S++){a="",c=i[S].split("");for(var M=0;M<c.length;M++)s="".concat(a+c[M]),(l=this.textWidth(s))<=n?a+=c[M]:n<l&&0<a.length&&(j.push(a),a="".concat(c[M]))}j.push(a);var E=0,T=f.textAlign().vertical;T===k.CENTER?E=(j.length-1)*f.textLeading()/2:T===k.BOTTOM&&(E=(j.length-1)*f.textLeading());for(var O=0;O<i.length;O++){a="",c=i[O].split("");for(var C=0;C<c.length;C++)s="".concat(a+c[C]),(l=this.textWidth(s))<=n?a+=c[C]:n<l&&0<a.length&&(this._renderText(f,a.trim(),t,r-E,p),r+=f.textLeading(),a="".concat(c[C]))}this._renderText(f,a.trim(),t,r-E,p),r+=f.textLeading(),y&&(this._textBaseline=k.BASELINE)}}else{var L=0,P=f.textAlign().vertical;P===k.CENTER?L=(i.length-1)*f.textLeading()/2:P===k.BOTTOM&&(L=(i.length-1)*f.textLeading());for(var A=0;A<i.length;A++)this._renderText(f,i[A],t,r-L,p),r+=f.textLeading()}return f}},l.default.Renderer.prototype._applyDefaults=function(){return this},l.default.Renderer.prototype._isOpenType=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this._textFont;return"object"===s(e)&&e.font&&e.font.supported},l.default.Renderer.prototype._updateTextMetrics=function(){if(this._isOpenType())return this._setProperty("_textAscent",this._textFont._textAscent()),this._setProperty("_textDescent",this._textFont._textDescent()),this;var e=document.createElement("span");e.style.fontFamily=this._textFont,e.style.fontSize="".concat(this._textSize,"px"),e.innerHTML="ABCjgq|";var t=document.createElement("div");t.style.display="inline-block",t.style.width="1px",t.style.height="0px";var r=document.createElement("div");r.appendChild(e),r.appendChild(t),r.style.height="0px",r.style.overflow="hidden",document.body.appendChild(r),t.style.verticalAlign="baseline";var n=u(t),o=u(e),i=n[1]-o[1];t.style.verticalAlign="bottom",n=u(t),o=u(e);var a=n[1]-o[1]-i;return document.body.removeChild(r),this._setProperty("_textAscent",i),this._setProperty("_textDescent",a),this};var o=l.default.Renderer;r.default=o},{"../core/constants":253,"./main":264,"core-js/modules/es.array.iterator":158,"core-js/modules/es.number.constructor":170,"core-js/modules/es.object.assign":173,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.split":191,"core-js/modules/es.string.trim":193,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],268:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.fill"),e("core-js/modules/es.array.for-each"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.function.name"),e("core-js/modules/es.number.to-fixed"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var d=n(e("./main")),p=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("./constants")),f=n(e("../image/filters"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function n(e){return e&&e.__esModule?e:{default:e}}e("./p5.Renderer");var m="rgba(0,0,0,0)";d.default.Renderer2D=function(e,t,r){return d.default.Renderer.call(this,e,t,r),this.drawingContext=this.canvas.getContext("2d"),this._pInst._setProperty("drawingContext",this.drawingContext),this},d.default.Renderer2D.prototype=Object.create(d.default.Renderer.prototype),d.default.Renderer2D.prototype._applyDefaults=function(){this._cachedFillStyle=this._cachedStrokeStyle=void 0,this._cachedBlendMode=p.BLEND,this._setFill(p._DEFAULT_FILL),this._setStroke(p._DEFAULT_STROKE),this.drawingContext.lineCap=p.ROUND,this.drawingContext.font="normal 12px sans-serif"},d.default.Renderer2D.prototype.resize=function(e,t){d.default.Renderer.prototype.resize.call(this,e,t),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity)},d.default.Renderer2D.prototype.background=function(){if(this.drawingContext.save(),this.resetMatrix(),(arguments.length<=0?void 0:arguments[0])instanceof d.default.Image)this._pInst.image(arguments.length<=0?void 0:arguments[0],0,0,this.width,this.height);else{var e,t=this._getFill(),r=(e=this._pInst).color.apply(e,arguments);this._pInst._addAccsOutput()&&this._pInst._accsBackground(r.levels);var n=r.toString();this._setFill(n),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.fillRect(0,0,this.width,this.height),this._setFill(t),this._isErasing&&this._pInst.erase()}this.drawingContext.restore()},d.default.Renderer2D.prototype.clear=function(){this.drawingContext.save(),this.resetMatrix(),this.drawingContext.clearRect(0,0,this.width,this.height),this.drawingContext.restore()},d.default.Renderer2D.prototype.fill=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setFill(t.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("fill",t.levels)},d.default.Renderer2D.prototype.stroke=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setStroke(t.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("stroke",t.levels)},d.default.Renderer2D.prototype.erase=function(e,t){if(!this._isErasing){this._cachedFillStyle=this.drawingContext.fillStyle;var r=this._pInst.color(255,e).toString();this.drawingContext.fillStyle=r,this._cachedStrokeStyle=this.drawingContext.strokeStyle;var n=this._pInst.color(255,t).toString();this.drawingContext.strokeStyle=n;var o=this._cachedBlendMode;this.blendMode(p.REMOVE),this._cachedBlendMode=o,this._isErasing=!0}},d.default.Renderer2D.prototype.noErase=function(){this._isErasing&&(this.drawingContext.fillStyle=this._cachedFillStyle,this.drawingContext.strokeStyle=this._cachedStrokeStyle,this.blendMode(this._cachedBlendMode),this._isErasing=!1)},d.default.Renderer2D.prototype.image=function(e,t,r,n,o,i,a,s,l){var u;e.gifProperties&&e._animateGif(this._pInst);try{this._tint&&(d.default.MediaElement&&e instanceof d.default.MediaElement&&e.loadPixels(),e.canvas&&(u=this._getTintedImageCanvas(e))),u=u||(e.canvas||e.elt);var c=1;e.width&&0<e.width&&(c=u.width/e.width),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.drawImage(u,c*t,c*r,c*n,c*o,i,a,s,l),this._isErasing&&this._pInst.erase()}catch(e){if("NS_ERROR_NOT_AVAILABLE"!==e.name)throw e}},d.default.Renderer2D.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=f.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var n=r.getContext("2d"),o=n.createImageData(e.canvas.width,e.canvas.height),i=o.data,a=0;a<t.length;a+=4){var s=t[a],l=t[a+1],u=t[a+2],c=t[a+3];i[a]=s*this._tint[0]/255,i[a+1]=l*this._tint[1]/255,i[a+2]=u*this._tint[2]/255,i[a+3]=c*this._tint[3]/255}return n.putImageData(o,0,0),r},d.default.Renderer2D.prototype.blendMode=function(e){if(e===p.SUBTRACT)console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");else{if(e!==p.BLEND&&e!==p.REMOVE&&e!==p.DARKEST&&e!==p.LIGHTEST&&e!==p.DIFFERENCE&&e!==p.MULTIPLY&&e!==p.EXCLUSION&&e!==p.SCREEN&&e!==p.REPLACE&&e!==p.OVERLAY&&e!==p.HARD_LIGHT&&e!==p.SOFT_LIGHT&&e!==p.DODGE&&e!==p.BURN&&e!==p.ADD)throw new Error("Mode ".concat(e," not recognized."));this._cachedBlendMode=e,this.drawingContext.globalCompositeOperation=e}},d.default.Renderer2D.prototype.blend=function(){for(var e=this.drawingContext.globalCompositeOperation,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];var o=r[r.length-1],i=Array.prototype.slice.call(r,0,r.length-1);this.drawingContext.globalCompositeOperation=o,d.default.prototype.copy.apply(this,i),this.drawingContext.globalCompositeOperation=e},d.default.Renderer2D.prototype._getPixel=function(e,t){var r;return[(r=this.drawingContext.getImageData(e,t,1,1).data)[0],r[1],r[2],r[3]]},d.default.Renderer2D.prototype.loadPixels=function(){var e=this._pixelsState,t=e._pixelDensity,r=this.width*t,n=this.height*t,o=this.drawingContext.getImageData(0,0,r,n);e._setProperty("imageData",o),e._setProperty("pixels",o.data)},d.default.Renderer2D.prototype.set=function(e,t,r){e=Math.floor(e),t=Math.floor(t);var n=this._pixelsState;if(r instanceof d.default.Image)this.drawingContext.save(),this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(n._pixelDensity,n._pixelDensity),this.drawingContext.clearRect(e,t,r.width,r.height),this.drawingContext.drawImage(r.canvas,e,t),this.drawingContext.restore();else{var o=0,i=0,a=0,s=0,l=4*(t*n._pixelDensity*(this.width*n._pixelDensity)+e*n._pixelDensity);if(n.imageData||n.loadPixels.call(n),"number"==typeof r)l<n.pixels.length&&(a=i=o=r,s=255);else if(r instanceof Array){if(r.length<4)throw new Error("pixel array must be of the form [R, G, B, A]");l<n.pixels.length&&(o=r[0],i=r[1],a=r[2],s=r[3])}else r instanceof d.default.Color&&l<n.pixels.length&&(o=r.levels[0],i=r.levels[1],a=r.levels[2],s=r.levels[3]);for(var u=0;u<n._pixelDensity;u++)for(var c=0;c<n._pixelDensity;c++)l=4*((t*n._pixelDensity+c)*this.width*n._pixelDensity+(e*n._pixelDensity+u)),n.pixels[l]=o,n.pixels[l+1]=i,n.pixels[l+2]=a,n.pixels[l+3]=s}},d.default.Renderer2D.prototype.updatePixels=function(e,t,r,n){var o=this._pixelsState,i=o._pixelDensity;void 0===e&&void 0===t&&void 0===r&&void 0===n&&(t=e=0,r=this.width,n=this.height),e*=i,t*=i,r*=i,n*=i,this.gifProperties&&(this.gifProperties.frames[this.gifProperties.displayIndex].image=o.imageData),this.drawingContext.putImageData(o.imageData,e,t,0,0,r,n)},d.default.Renderer2D.prototype._acuteArcToBezier=function(e,t){var r=t/2,n=Math.cos(r),o=Math.sin(r),i=1/Math.tan(r),a=e+r,s=Math.cos(a),l=Math.sin(a),u=(4-n)/3,c=o+(n-u)*i;return{ax:Math.cos(e).toFixed(7),ay:Math.sin(e).toFixed(7),bx:(u*s+c*l).toFixed(7),by:(u*l-c*s).toFixed(7),cx:(u*s-c*l).toFixed(7),cy:(u*l+c*s).toFixed(7),dx:Math.cos(e+t).toFixed(7),dy:Math.sin(e+t).toFixed(7)}},d.default.Renderer2D.prototype.arc=function(r,n,e,t,o,i,a){var s=this.drawingContext,l=e/2,u=t/2,c=0,d=[];for(r+=l,n+=u;1e-5<=i-o;)c=Math.min(i-o,p.HALF_PI),d.push(this._acuteArcToBezier(o,c)),o+=c;return this._doFill&&(s.beginPath(),d.forEach(function(e,t){0===t&&s.moveTo(r+e.ax*l,n+e.ay*u),s.bezierCurveTo(r+e.bx*l,n+e.by*u,r+e.cx*l,n+e.cy*u,r+e.dx*l,n+e.dy*u)}),a!==p.PIE&&null!=a||s.lineTo(r,n),s.closePath(),s.fill()),this._doStroke&&(s.beginPath(),d.forEach(function(e,t){0===t&&s.moveTo(r+e.ax*l,n+e.ay*u),s.bezierCurveTo(r+e.bx*l,n+e.by*u,r+e.cx*l,n+e.cy*u,r+e.dx*l,n+e.dy*u)}),a===p.PIE?(s.lineTo(r,n),s.closePath()):a===p.CHORD&&s.closePath(),s.stroke()),this},d.default.Renderer2D.prototype.ellipse=function(e){var t=this.drawingContext,r=this._doFill,n=this._doStroke,o=parseFloat(e[0]),i=parseFloat(e[1]),a=parseFloat(e[2]),s=parseFloat(e[3]);if(r&&!n){if(this._getFill()===m)return this}else if(!r&&n&&this._getStroke()===m)return this;var l=a/2*.5522847498,u=s/2*.5522847498,c=o+a,d=i+s,f=o+a/2,h=i+s/2;t.beginPath(),t.moveTo(o,h),t.bezierCurveTo(o,h-u,f-l,i,f,i),t.bezierCurveTo(f+l,i,c,h-u,c,h),t.bezierCurveTo(c,h+u,f+l,d,f,d),t.bezierCurveTo(f-l,d,o,h+u,o,h),r&&t.fill(),n&&t.stroke()},d.default.Renderer2D.prototype.line=function(e,t,r,n){var o=this.drawingContext;return this._doStroke&&(this._getStroke()===m||(o.beginPath(),o.moveTo(e,t),o.lineTo(r,n),o.stroke())),this},d.default.Renderer2D.prototype.point=function(e,t){var r=this.drawingContext;if(!this._doStroke)return this;if(this._getStroke()===m)return this;var n=this._getStroke(),o=this._getFill();this._setFill(n),r.beginPath(),r.arc(e,t,r.lineWidth/2,0,p.TWO_PI,!1),r.fill(),this._setFill(o)},d.default.Renderer2D.prototype.quad=function(e,t,r,n,o,i,a,s){var l=this.drawingContext,u=this._doFill,c=this._doStroke;if(u&&!c){if(this._getFill()===m)return this}else if(!u&&c&&this._getStroke()===m)return this;return l.beginPath(),l.moveTo(e,t),l.lineTo(r,n),l.lineTo(o,i),l.lineTo(a,s),l.closePath(),u&&l.fill(),c&&l.stroke(),this},d.default.Renderer2D.prototype.rect=function(e){var t=e[0],r=e[1],n=e[2],o=e[3],i=e[4],a=e[5],s=e[6],l=e[7],u=this.drawingContext,c=this._doFill,d=this._doStroke;if(c&&!d){if(this._getFill()===m)return this}else if(!c&&d&&this._getStroke()===m)return this;if(u.beginPath(),void 0===i)u.rect(t,r,n,o);else{void 0===a&&(a=i),void 0===s&&(s=a),void 0===l&&(l=s);var f=Math.abs(n),h=Math.abs(o),p=f/2,y=h/2;f<2*i&&(i=p),h<2*i&&(i=y),f<2*a&&(a=p),h<2*a&&(a=y),f<2*s&&(s=p),h<2*s&&(s=y),f<2*l&&(l=p),h<2*l&&(l=y),u.beginPath(),u.moveTo(t+i,r),u.arcTo(t+n,r,t+n,r+o,a),u.arcTo(t+n,r+o,t,r+o,s),u.arcTo(t,r+o,t,r,l),u.arcTo(t,r,t+n,r,i),u.closePath()}return this._doFill&&u.fill(),this._doStroke&&u.stroke(),this},d.default.Renderer2D.prototype.triangle=function(e){var t=this.drawingContext,r=this._doFill,n=this._doStroke,o=e[0],i=e[1],a=e[2],s=e[3],l=e[4],u=e[5];if(r&&!n){if(this._getFill()===m)return this}else if(!r&&n&&this._getStroke()===m)return this;t.beginPath(),t.moveTo(o,i),t.lineTo(a,s),t.lineTo(l,u),t.closePath(),r&&t.fill(),n&&t.stroke()},d.default.Renderer2D.prototype.endShape=function(e,t,r,n,o,i,a){if(0===t.length)return this;if(!this._doStroke&&!this._doFill)return this;var s,l,u,c=e===p.CLOSE;c&&!i&&t.push(t[0]);var d=t.length;if(!r||a!==p.POLYGON&&null!==a)if(!n||a!==p.POLYGON&&null!==a)if(!o||a!==p.POLYGON&&null!==a)if(a===p.POINTS)for(l=0;l<d;l++)s=t[l],this._doStroke&&this._pInst.stroke(s[6]),this._pInst.point(s[0],s[1]);else if(a===p.LINES)for(l=0;l+1<d;l+=2)s=t[l],this._doStroke&&this._pInst.stroke(t[l+1][6]),this._pInst.line(s[0],s[1],t[l+1][0],t[l+1][1]);else if(a===p.TRIANGLES)for(l=0;l+2<d;l+=3)s=t[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(s[0],s[1]),this.drawingContext.lineTo(t[l+1][0],t[l+1][1]),this.drawingContext.lineTo(t[l+2][0],t[l+2][1]),this.drawingContext.closePath(),this._doFill&&(this._pInst.fill(t[l+2][5]),this.drawingContext.fill()),this._doStroke&&(this._pInst.stroke(t[l+2][6]),this.drawingContext.stroke());else if(a===p.TRIANGLE_STRIP)for(l=0;l+1<d;l++)s=t[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(t[l+1][0],t[l+1][1]),this.drawingContext.lineTo(s[0],s[1]),this._doStroke&&this._pInst.stroke(t[l+1][6]),this._doFill&&this._pInst.fill(t[l+1][5]),l+2<d&&(this.drawingContext.lineTo(t[l+2][0],t[l+2][1]),this._doStroke&&this._pInst.stroke(t[l+2][6]),this._doFill&&this._pInst.fill(t[l+2][5])),this._doFillStrokeClose(c);else if(a===p.TRIANGLE_FAN){if(2<d){for(this.drawingContext.beginPath(),l=2;l<d;l++)s=t[l],this.drawingContext.moveTo(t[0][0],t[0][1]),this.drawingContext.lineTo(t[l-1][0],t[l-1][1]),this.drawingContext.lineTo(s[0],s[1]),this.drawingContext.lineTo(t[0][0],t[0][1]),l<d-1&&(this._doFill&&s[5]!==t[l+1][5]||this._doStroke&&s[6]!==t[l+1][6])&&(this._doFill&&(this._pInst.fill(s[5]),this.drawingContext.fill(),this._pInst.fill(t[l+1][5])),this._doStroke&&(this._pInst.stroke(s[6]),this.drawingContext.stroke(),this._pInst.stroke(t[l+1][6])),this.drawingContext.closePath(),this.drawingContext.beginPath());this._doFillStrokeClose(c)}}else if(a===p.QUADS)for(l=0;l+3<d;l+=4){for(s=t[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(s[0],s[1]),u=1;u<4;u++)this.drawingContext.lineTo(t[l+u][0],t[l+u][1]);this.drawingContext.lineTo(s[0],s[1]),this._doFill&&this._pInst.fill(t[l+3][5]),this._doStroke&&this._pInst.stroke(t[l+3][6]),this._doFillStrokeClose(c)}else if(a===p.QUAD_STRIP){if(3<d)for(l=0;l+1<d;l+=2)s=t[l],this.drawingContext.beginPath(),l+3<d?(this.drawingContext.moveTo(t[l+2][0],t[l+2][1]),this.drawingContext.lineTo(s[0],s[1]),this.drawingContext.lineTo(t[l+1][0],t[l+1][1]),this.drawingContext.lineTo(t[l+3][0],t[l+3][1]),this._doFill&&this._pInst.fill(t[l+3][5]),this._doStroke&&this._pInst.stroke(t[l+3][6])):(this.drawingContext.moveTo(s[0],s[1]),this.drawingContext.lineTo(t[l+1][0],t[l+1][1])),this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[0][0],t[0][1]),l=1;l<d;l++)(s=t[l]).isVert&&(s.moveTo?this.drawingContext.moveTo(s[0],s[1]):this.drawingContext.lineTo(s[0],s[1]));this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),l=0;l<d;l++)t[l].isVert?t[l].moveTo?this.drawingContext.moveTo(t[l][0],t[l][1]):this.drawingContext.lineTo(t[l][0],t[l][1]):this.drawingContext.quadraticCurveTo(t[l][0],t[l][1],t[l][2],t[l][3]);this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),l=0;l<d;l++)t[l].isVert?t[l].moveTo?this.drawingContext.moveTo(t[l][0],t[l][1]):this.drawingContext.lineTo(t[l][0],t[l][1]):this.drawingContext.bezierCurveTo(t[l][0],t[l][1],t[l][2],t[l][3],t[l][4],t[l][5]);this._doFillStrokeClose(c)}else if(3<d){var f=[],h=1-this._curveTightness;for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[1][0],t[1][1]),l=1;l+2<d;l++)s=t[l],f[0]=[s[0],s[1]],f[1]=[s[0]+(h*t[l+1][0]-h*t[l-1][0])/6,s[1]+(h*t[l+1][1]-h*t[l-1][1])/6],f[2]=[t[l+1][0]+(h*t[l][0]-h*t[l+2][0])/6,t[l+1][1]+(h*t[l][1]-h*t[l+2][1])/6],f[3]=[t[l+1][0],t[l+1][1]],this.drawingContext.bezierCurveTo(f[1][0],f[1][1],f[2][0],f[2][1],f[3][0],f[3][1]);c&&this.drawingContext.lineTo(t[l+1][0],t[l+1][1]),this._doFillStrokeClose(c)}return i=o=n=r=!1,c&&t.pop(),this},d.default.Renderer2D.prototype.strokeCap=function(e){return e!==p.ROUND&&e!==p.SQUARE&&e!==p.PROJECT||(this.drawingContext.lineCap=e),this},d.default.Renderer2D.prototype.strokeJoin=function(e){return e!==p.ROUND&&e!==p.BEVEL&&e!==p.MITER||(this.drawingContext.lineJoin=e),this},d.default.Renderer2D.prototype.strokeWeight=function(e){return this.drawingContext.lineWidth=void 0===e||0===e?1e-4:e,this},d.default.Renderer2D.prototype._getFill=function(){return this._cachedFillStyle||(this._cachedFillStyle=this.drawingContext.fillStyle),this._cachedFillStyle},d.default.Renderer2D.prototype._setFill=function(e){e!==this._cachedFillStyle&&(this.drawingContext.fillStyle=e,this._cachedFillStyle=e)},d.default.Renderer2D.prototype._getStroke=function(){return this._cachedStrokeStyle||(this._cachedStrokeStyle=this.drawingContext.strokeStyle),this._cachedStrokeStyle},d.default.Renderer2D.prototype._setStroke=function(e){e!==this._cachedStrokeStyle&&(this.drawingContext.strokeStyle=e,this._cachedStrokeStyle=e)},d.default.Renderer2D.prototype.bezier=function(e,t,r,n,o,i,a,s){return this._pInst.beginShape(),this._pInst.vertex(e,t),this._pInst.bezierVertex(r,n,o,i,a,s),this._pInst.endShape(),this},d.default.Renderer2D.prototype.curve=function(e,t,r,n,o,i,a,s){return this._pInst.beginShape(),this._pInst.curveVertex(e,t),this._pInst.curveVertex(r,n),this._pInst.curveVertex(o,i),this._pInst.curveVertex(a,s),this._pInst.endShape(),this},d.default.Renderer2D.prototype._doFillStrokeClose=function(e){e&&this.drawingContext.closePath(),this._doFill&&this.drawingContext.fill(),this._doStroke&&this.drawingContext.stroke()},d.default.Renderer2D.prototype.applyMatrix=function(e,t,r,n,o,i){this.drawingContext.transform(e,t,r,n,o,i)},d.default.Renderer2D.prototype.resetMatrix=function(){return this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),this},d.default.Renderer2D.prototype.rotate=function(e){this.drawingContext.rotate(e)},d.default.Renderer2D.prototype.scale=function(e,t){return this.drawingContext.scale(e,t),this},d.default.Renderer2D.prototype.translate=function(e,t){return e instanceof d.default.Vector&&(t=e.y,e=e.x),this.drawingContext.translate(e,t),this},d.default.Renderer2D.prototype.text=function(e,t,r,n,o){var i;void 0!==n&&this.drawingContext.textBaseline===p.BASELINE&&(i=!0,this.drawingContext.textBaseline=p.TOP);var a=d.default.Renderer.prototype.text.apply(this,arguments);return i&&(this.drawingContext.textBaseline=p.BASELINE),a},d.default.Renderer2D.prototype._renderText=function(e,t,r,n,o){if(!(o<=n))return e.push(),this._isOpenType()?this._textFont._renderPath(t,r,n,{renderer:this}):(this._doStroke&&this._strokeSet&&this.drawingContext.strokeText(t,r,n),this._doFill&&(this._fillSet||this._setFill(p._DEFAULT_TEXT_FILL),this.drawingContext.fillText(t,r,n))),e.pop(),e},d.default.Renderer2D.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):this.drawingContext.measureText(e).width},d.default.Renderer2D.prototype._applyTextProperties=function(){var e,t=this._pInst;return this._setProperty("_textAscent",null),this._setProperty("_textDescent",null),e=this._textFont,this._isOpenType()&&(e=this._textFont.font.familyName,this._setProperty("_textStyle",this._textFont.font.styleName)),this.drawingContext.font="".concat(this._textStyle||"normal"," ").concat(this._textSize||12,"px ").concat(e||"sans-serif"),this.drawingContext.textAlign=this._textAlign,this._textBaseline===p.CENTER?this.drawingContext.textBaseline=p._CTX_MIDDLE:this.drawingContext.textBaseline=this._textBaseline,t},d.default.Renderer2D.prototype.push=function(){return this.drawingContext.save(),d.default.Renderer.prototype.push.apply(this)},d.default.Renderer2D.prototype.pop=function(e){this.drawingContext.restore(),this._cachedFillStyle=this.drawingContext.fillStyle,this._cachedStrokeStyle=this.drawingContext.strokeStyle,d.default.Renderer.prototype.pop.call(this,e)};var o=d.default.Renderer2D;r.default=o},{"../image/filters":285,"./constants":253,"./main":264,"./p5.Renderer":267,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.fill":151,"core-js/modules/es.array.for-each":154,"core-js/modules/es.array.slice":162,"core-js/modules/es.function.name":166,"core-js/modules/es.number.to-fixed":172,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182}],269:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.assign"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.promise"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.iterator");var n,f=(n=e("./main"))&&n.__esModule?n:{default:n};f.default.prototype._promisePreloads=[];var h=!(f.default.prototype.registerPromisePreload=function(e){f.default.prototype._promisePreloads.push(e)});f.default.prototype._setupPromisePreloads=function(){var e=!0,t=!1,r=void 0;try{for(var n,o=this._promisePreloads[Symbol.iterator]();!(e=(n=o.next()).done);e=!0){var i=n.value,a=this,s=i.method,l=i.addCallbacks,u=i.legacyPreloadSetup,c=i.target||this,d=c[s].bind(c);if(c===f.default.prototype){if(h)continue;a=null,d=c[s]}if(c[s]=this._wrapPromisePreload(a,d,l),u)c[u.method]=this._legacyPreloadGenerator(a,u,c[s])}}catch(e){t=!0,r=e}finally{try{e||null==o.return||o.return()}finally{if(t)throw r}}h=!0},f.default.prototype._wrapPromisePreload=function(e,l,u){var t=function(){var e=this;this._incrementPreload();for(var t=null,r=null,n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];if(u)for(var a=o.length-1;0<=a&&!r&&"function"==typeof o[a];a--)r=t,t=o.pop();var s=Promise.resolve(l.apply(this,o));return t&&s.then(t),r&&s.catch(r),s.then(function(){return e._decrementPreload()}),s};return e&&(t=t.bind(e)),t};function i(){return{}}f.default.prototype._legacyPreloadGenerator=function(e,t,n){var o=t.createBaseObject||i,r=function(){var t=this;this._incrementPreload();var r=o.apply(this,arguments);return n.apply(this,arguments).then(function(e){Object.assign(r,e),t._decrementPreload()}),r};return e&&(r=r.bind(e)),r}},{"./main":264,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.assign":173,"core-js/modules/es.object.to-string":177,"core-js/modules/es.promise":178,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],270:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,l=(n=e("./main"))&&n.__esModule?n:{default:n},u=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("./p5.Graphics"),e("./p5.Renderer2D"),e("../webgl/p5.RendererGL");var c="defaultCanvas0";l.default.prototype.createCanvas=function(e,t,r){l.default._validateParameters("createCanvas",arguments);var n,o=r||u.P2D;if(o===u.WEBGL){if(n=document.getElementById(c)){n.parentNode.removeChild(n);var i=this._renderer;this._elements=this._elements.filter(function(e){return e!==i})}(n=document.createElement("canvas")).id=c,n.classList.add("p5Canvas")}else if(this._defaultGraphicsCreated)n=this.canvas;else{n=document.createElement("canvas");for(var a=0;document.getElementById("defaultCanvas".concat(a));)a++;c="defaultCanvas".concat(a),n.id=c,n.classList.add("p5Canvas")}if(this._setupDone||(n.dataset.hidden=!0,n.style.visibility="hidden"),this._userNode)this._userNode.appendChild(n);else{if(0===document.getElementsByTagName("main").length){var s=document.createElement("main");document.body.appendChild(s)}document.getElementsByTagName("main")[0].appendChild(n)}return o===u.WEBGL?(this._setProperty("_renderer",new l.default.RendererGL(n,this,!0)),this._elements.push(this._renderer)):this._defaultGraphicsCreated||(this._setProperty("_renderer",new l.default.Renderer2D(n,this,!0)),this._defaultGraphicsCreated=!0,this._elements.push(this._renderer)),this._renderer.resize(e,t),this._renderer._applyDefaults(),this._renderer},l.default.prototype.resizeCanvas=function(e,t,r){if(l.default._validateParameters("resizeCanvas",arguments),this._renderer){var n={};for(var o in this.drawingContext){var i=this.drawingContext[o];"object"!==s(i)&&"function"!=typeof i&&(n[o]=i)}for(var a in this._renderer.resize(e,t),this.width=e,this.height=t,n)try{this.drawingContext[a]=n[a]}catch(e){}r||this.redraw()}this._addAccsOutput()&&this._updateAccsOutput()},l.default.prototype.noCanvas=function(){this.canvas&&this.canvas.parentNode.removeChild(this.canvas)},l.default.prototype.createGraphics=function(e,t,r){return l.default._validateParameters("createGraphics",arguments),new l.default.Graphics(e,t,r,this)},l.default.prototype.blendMode=function(e){l.default._validateParameters("blendMode",arguments),e===u.NORMAL&&(console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."),e=u.BLEND),this._renderer.blendMode(e)};var o=l.default;r.default=o},{"../webgl/p5.RendererGL":318,"./constants":253,"./main":264,"./p5.Graphics":266,"./p5.Renderer2D":268,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],271:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.slice"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var c=n(e("../main")),s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../constants")),d=n(e("../helpers"));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function n(e){return e&&e.__esModule?e:{default:e}}e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),c.default.prototype._normalizeArcAngles=function(e,t,r,n,o){var i;return e-=s.TWO_PI*Math.floor(e/s.TWO_PI),t-=s.TWO_PI*Math.floor(t/s.TWO_PI),i=Math.min(Math.abs(e-t),s.TWO_PI-Math.abs(e-t)),o&&(e=e<=s.HALF_PI?Math.atan(r/n*Math.tan(e)):e>s.HALF_PI&&e<=3*s.HALF_PI?Math.atan(r/n*Math.tan(e))+s.PI:Math.atan(r/n*Math.tan(e))+s.TWO_PI,t=t<=s.HALF_PI?Math.atan(r/n*Math.tan(t)):t>s.HALF_PI&&t<=3*s.HALF_PI?Math.atan(r/n*Math.tan(t))+s.PI:Math.atan(r/n*Math.tan(t))+s.TWO_PI),t<e&&(t+=s.TWO_PI),{start:e,stop:t,correspondToSamePoint:i<1e-5}},c.default.prototype.arc=function(e,t,r,n,o,i,a,s){if(c.default._validateParameters("arc",arguments),!this._renderer._doStroke&&!this._renderer._doFill)return this;if(o===i)return this;o=this._toRadians(o),i=this._toRadians(i),r=Math.abs(r),n=Math.abs(n);var l=d.default.modeAdjust(e,t,r,n,this._renderer._ellipseMode),u=this._normalizeArcAngles(o,i,l.w,l.h,!0);return u.correspondToSamePoint?this._renderer.ellipse([l.x,l.y,l.w,l.h,s]):(this._renderer.arc(l.x,l.y,l.w,l.h,u.start,u.stop,a,s),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("arc",[l.x,l.y,l.w,l.h,u.start,u.stop,a])),this},c.default.prototype.ellipse=function(e,t,r,n,o){return c.default._validateParameters("ellipse",arguments),this._renderEllipse.apply(this,arguments)},c.default.prototype.circle=function(){c.default._validateParameters("circle",arguments);var e=Array.prototype.slice.call(arguments,0,2);return e.push(arguments[2]),e.push(arguments[2]),this._renderEllipse.apply(this,e)},c.default.prototype._renderEllipse=function(e,t,r,n,o){if(!this._renderer._doStroke&&!this._renderer._doFill)return this;r<0&&(r=Math.abs(r)),void 0===n?n=r:n<0&&(n=Math.abs(n));var i=d.default.modeAdjust(e,t,r,n,this._renderer._ellipseMode);return this._renderer.ellipse([i.x,i.y,i.w,i.h,o]),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("ellipse",[i.x,i.y,i.w,i.h]),this},c.default.prototype.line=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;c.default._validateParameters("line",t),this._renderer._doStroke&&(n=this._renderer).line.apply(n,t);return(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("line",t),this},c.default.prototype.point=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;c.default._validateParameters("point",t),this._renderer._doStroke&&(1===t.length&&t[0]instanceof c.default.Vector?this._renderer.point.call(this._renderer,t[0].x,t[0].y,t[0].z):((n=this._renderer).point.apply(n,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("point",t)));return this},c.default.prototype.quad=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;c.default._validateParameters("quad",t),(this._renderer._doStroke||this._renderer._doFill)&&(this._renderer.isP3D&&t.length<=12?this._renderer.quad.call(this._renderer,t[0],t[1],0,t[2],t[3],0,t[4],t[5],0,t[6],t[7],0,t[8],t[9]):((n=this._renderer).quad.apply(n,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("quadrilateral",t)));return this},c.default.prototype.rect=function(){return c.default._validateParameters("rect",arguments),this._renderRect.apply(this,arguments)},c.default.prototype.square=function(e,t,r,n,o,i,a){return c.default._validateParameters("square",arguments),this._renderRect.call(this,e,t,r,r,n,o,i,a)},c.default.prototype._renderRect=function(){if(this._renderer._doStroke||this._renderer._doFill){3===arguments.length&&(arguments[3]=arguments[2]);for(var e=d.default.modeAdjust(arguments[0],arguments[1],arguments[2],arguments[3],this._renderer._rectMode),t=[e.x,e.y,e.w,e.h],r=4;r<arguments.length;r++)t[r]=arguments[r];this._renderer.rect(t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("rectangle",[e.x,e.y,e.w,e.h])}return this},c.default.prototype.triangle=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return c.default._validateParameters("triangle",t),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.triangle(t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("triangle",t),this};var o=c.default;r.default=o},{"../constants":253,"../friendly_errors/fes_core":255,"../friendly_errors/file_errors":256,"../friendly_errors/validate_params":259,"../helpers":260,"../main":264,"core-js/modules/es.array.slice":162}],272:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.ellipseMode=function(e){return o.default._validateParameters("ellipseMode",arguments),e!==i.CORNER&&e!==i.CORNERS&&e!==i.RADIUS&&e!==i.CENTER||(this._renderer._ellipseMode=e),this},o.default.prototype.noSmooth=function(){return this.setAttributes("antialias",!1),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!1),this},o.default.prototype.rectMode=function(e){return o.default._validateParameters("rectMode",arguments),e!==i.CORNER&&e!==i.CORNERS&&e!==i.RADIUS&&e!==i.CENTER||(this._renderer._rectMode=e),this},o.default.prototype.smooth=function(){return this.setAttributes("antialias",!0),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!0),this},o.default.prototype.strokeCap=function(e){return o.default._validateParameters("strokeCap",arguments),e!==i.ROUND&&e!==i.SQUARE&&e!==i.PROJECT||this._renderer.strokeCap(e),this},o.default.prototype.strokeJoin=function(e){return o.default._validateParameters("strokeJoin",arguments),e!==i.ROUND&&e!==i.BEVEL&&e!==i.MITER||this._renderer.strokeJoin(e),this},o.default.prototype.strokeWeight=function(e){return o.default._validateParameters("strokeWeight",arguments),this._renderer.strokeWeight(e),this};var l=o.default;r.default=l},{"../constants":253,"../main":264}],273:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("../main"))&&n.__esModule?n:{default:n};e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),s.default.prototype.bezier=function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return s.default._validateParameters("bezier",r),(this._renderer._doStroke||this._renderer._doFill)&&(e=this._renderer).bezier.apply(e,r),this},s.default.prototype.bezierDetail=function(e){return s.default._validateParameters("bezierDetail",arguments),this._bezierDetail=e,this},s.default.prototype.bezierPoint=function(e,t,r,n,o){s.default._validateParameters("bezierPoint",arguments);var i=1-o;return Math.pow(i,3)*e+3*Math.pow(i,2)*o*t+3*i*Math.pow(o,2)*r+Math.pow(o,3)*n},s.default.prototype.bezierTangent=function(e,t,r,n,o){s.default._validateParameters("bezierTangent",arguments);var i=1-o;return 3*n*Math.pow(o,2)-3*r*Math.pow(o,2)+6*r*i*o-6*t*i*o+3*t*Math.pow(i,2)-3*e*Math.pow(i,2)},s.default.prototype.curve=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;s.default._validateParameters("curve",t),this._renderer._doStroke&&(n=this._renderer).curve.apply(n,t);return this},s.default.prototype.curveDetail=function(e){return s.default._validateParameters("curveDetail",arguments),this._curveDetail=e<3?3:e,this},s.default.prototype.curveTightness=function(e){return s.default._validateParameters("curveTightness",arguments),this._renderer._curveTightness=e,this},s.default.prototype.curvePoint=function(e,t,r,n,o){s.default._validateParameters("curvePoint",arguments);var i=o*o*o,a=o*o;return e*(-.5*i+a-.5*o)+t*(1.5*i-2.5*a+1)+r*(-1.5*i+2*a+.5*o)+n*(.5*i-.5*a)},s.default.prototype.curveTangent=function(e,t,r,n,o){s.default._validateParameters("curveTangent",arguments);var i=o*o;return e*(-3*i/2+2*o-.5)+t*(9*i/2-5*o)+r*(-9*i/2+4*o+.5)+n*(3*i/2-o)};var o=s.default;r.default=o},{"../friendly_errors/fes_core":255,"../friendly_errors/file_errors":256,"../friendly_errors/validate_params":259,"../main":264}],274:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.slice"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("../main"))&&n.__esModule?n:{default:n},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}var o=null,c=[],d=[],f=!1,i=!1,h=!1,p=!1,y=!0;s.default.prototype.beginContour=function(){return d=[],p=!0,this},s.default.prototype.beginShape=function(e){var t;(s.default._validateParameters("beginShape",arguments),this._renderer.isP3D)?(t=this._renderer).beginShape.apply(t,arguments):(o=e===l.POINTS||e===l.LINES||e===l.TRIANGLES||e===l.TRIANGLE_FAN||e===l.TRIANGLE_STRIP||e===l.QUADS||e===l.QUAD_STRIP?e:null,c=[],d=[]);return this},s.default.prototype.bezierVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;if(s.default._validateParameters("bezierVertex",t),this._renderer.isP3D)(n=this._renderer).bezierVertex.apply(n,t);else if(0===c.length)s.default._friendlyError("vertex() must be used once before calling bezierVertex()","bezierVertex");else{f=!0;for(var o=[],i=0;i<t.length;i++)o[i]=t[i];o.isVert=!1,p?d.push(o):c.push(o)}return this},s.default.prototype.curveVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;(s.default._validateParameters("curveVertex",t),this._renderer.isP3D)?(n=this._renderer).curveVertex.apply(n,t):(i=!0,this.vertex(t[0],t[1]));return this},s.default.prototype.endContour=function(){var e=d[0].slice();e.isVert=d[0].isVert,e.moveTo=!1,d.push(e),y&&(c.push(c[0]),y=!1);for(var t=0;t<d.length;t++)c.push(d[t]);return this},s.default.prototype.endShape=function(e){if(s.default._validateParameters("endShape",arguments),this._renderer.isP3D)this._renderer.endShape(e,i,f,h,p,o);else{if(0===c.length)return this;if(!this._renderer._doStroke&&!this._renderer._doFill)return this;var t=e===l.CLOSE;t&&!p&&c.push(c[0]),this._renderer.endShape(e,c,i,f,h,p,o),y=!(p=h=f=i=!1),t&&c.pop()}return this},s.default.prototype.quadraticVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(s.default._validateParameters("quadraticVertex",t),this._renderer.isP3D){var n;(n=this._renderer).quadraticVertex.apply(n,t)}else{if(this._contourInited){var o={};return o.x=t[0],o.y=t[1],o.x3=t[2],o.y3=t[3],o.type=l.QUADRATIC,this._contourVertices.push(o),this}if(0<c.length){h=!0;for(var i=[],a=0;a<t.length;a++)i[a]=t[a];i.isVert=!1,p?d.push(i):c.push(i)}else s.default._friendlyError("vertex() must be used once before calling quadraticVertex()","quadraticVertex")}return this},s.default.prototype.vertex=function(e,t,r,n,o){if(this._renderer.isP3D){var i;(i=this._renderer).vertex.apply(i,arguments)}else{var a=[];a.isVert=!0,a[0]=e,a[1]=t,a[2]=0,a[3]=0,a[4]=0,a[5]=this._renderer._getFill(),a[6]=this._renderer._getStroke(),r&&(a.moveTo=r),p?(0===d.length&&(a.moveTo=!0),d.push(a)):c.push(a)}return this},s.default.prototype.normal=function(e,t,r){var n;return this._assert3d("normal"),s.default._validateParameters("normal",arguments),(n=this._renderer).normal.apply(n,arguments),this};var m=s.default;r.default=m},{"../constants":253,"../main":264,"core-js/modules/es.array.slice":162}],275:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.assign"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.typed-array.uint8-clamped-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)},"undefined"==typeof Uint8ClampedArray||Uint8ClampedArray.prototype.slice||Object.defineProperty(Uint8ClampedArray.prototype,"slice",{value:Array.prototype.slice,writable:!0,configurable:!0,enumerable:!1}),function(){if(!Object.assign){var s=Object.keys,e=Object.defineProperty,l="function"==typeof Symbol&&"symbol"===n(Symbol()),r=Object.prototype.propertyIsEnumerable,u=function(t){return function(e){return r.call(t,e)}};e(Object,"assign",{value:function(e,t){if(null==e)throw new TypeError("target must be an object");var r,n,o,i,a=Object(e);for(r=1;r<arguments.length;++r)for(n=Object(arguments[r]),i=s(n),l&&Object.getOwnPropertySymbols&&i.push.apply(i,Object.getOwnPropertySymbols(n).filter(u(n))),o=0;o<i.length;++o)a[i[o]]=n[i[o]];return a},configurable:!0,enumerable:!1,writable:!0})}}()},{"core-js/modules/es.array.filter":152,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.assign":173,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint8-clamped-array":227,"core-js/modules/web.dom-collections.iterator":229}],276:[function(e,t,r){"use strict";e("core-js/modules/es.array.for-each"),e("core-js/modules/es.object.assign"),e("core-js/modules/web.dom-collections.for-each"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.prototype.noLoop=function(){this._loop=!1},o.default.prototype.loop=function(){this._loop||(this._loop=!0,this._setupDone&&this._draw())},o.default.prototype.isLooping=function(){return this._loop},o.default.prototype.push=function(){this._styles.push({props:{_colorMode:this._colorMode},renderer:this._renderer.push()})},o.default.prototype.pop=function(){var e=this._styles.pop();e?(this._renderer.pop(e.renderer),Object.assign(this,e.props)):console.warn("pop() was called without matching push()")},o.default.prototype.redraw=function(e){if(!this._inUserDraw&&this._setupDone){var t=parseInt(e);(isNaN(t)||t<1)&&(t=1);var r=this._isGlobal?window:this;if("function"==typeof r.draw){void 0===r.setup&&r.scale(r._pixelDensity,r._pixelDensity);for(var n=function(e){e.call(r)},o=0;o<t;o++){r.resetMatrix(),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._updateAccsOutput(),r._renderer.isP3D&&r._renderer._update(),r._setProperty("frameCount",r.frameCount+1),r._registeredMethods.pre.forEach(n),this._inUserDraw=!0;try{r.draw()}finally{this._inUserDraw=!1}r._registeredMethods.post.forEach(n)}}}};var i=o.default;r.default=i},{"./main":264,"core-js/modules/es.array.for-each":154,"core-js/modules/es.object.assign":173,"core-js/modules/web.dom-collections.for-each":228}],277:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.from"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.get-prototype-of"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n};function o(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}i.default.prototype.applyMatrix=function(){var e,t,r=arguments[0]instanceof Object.getPrototypeOf(Uint8Array);Array.isArray(arguments[0])||r?(e=this._renderer).applyMatrix.apply(e,o(arguments[0])):(t=this._renderer).applyMatrix.apply(t,arguments);return this},i.default.prototype.resetMatrix=function(){return this._renderer.resetMatrix(),this},i.default.prototype.rotate=function(e,t){return i.default._validateParameters("rotate",arguments),this._renderer.rotate(this._toRadians(e),t),this},i.default.prototype.rotateX=function(e){return this._assert3d("rotateX"),i.default._validateParameters("rotateX",arguments),this._renderer.rotateX(this._toRadians(e)),this},i.default.prototype.rotateY=function(e){return this._assert3d("rotateY"),i.default._validateParameters("rotateY",arguments),this._renderer.rotateY(this._toRadians(e)),this},i.default.prototype.rotateZ=function(e){return this._assert3d("rotateZ"),i.default._validateParameters("rotateZ",arguments),this._renderer.rotateZ(this._toRadians(e)),this},i.default.prototype.scale=function(e,t,r){if(i.default._validateParameters("scale",arguments),e instanceof i.default.Vector){var n=e;e=n.x,t=n.y,r=n.z}else if(e instanceof Array){var o=e;e=o[0],t=o[1],r=o[2]||1}return isNaN(t)?t=r=e:isNaN(r)&&(r=1),this._renderer.scale.call(this._renderer,e,t,r),this},i.default.prototype.shearX=function(e){i.default._validateParameters("shearX",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,0,Math.tan(t),1,0,0),this},i.default.prototype.shearY=function(e){i.default._validateParameters("shearY",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,Math.tan(t),0,1,0,0),this},i.default.prototype.translate=function(e,t,r){return i.default._validateParameters("translate",arguments),this._renderer.isP3D?this._renderer.translate(e,t,r):this._renderer.translate(e,t),this};var a=i.default;r.default=a},{"./main":264,"core-js/modules/es.array.from":155,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.get-prototype-of":175,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint8-array":226,"core-js/modules/web.dom-collections.iterator":229}],278:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.from"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.ends-with"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.iterator");var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function i(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o.default.prototype.storeItem=function(e,t){"string"!=typeof e&&console.log("The argument that you passed to storeItem() - ".concat(e," is not a string.")),e.endsWith("p5TypeID")&&console.log("The argument that you passed to storeItem() - ".concat(e," must not end with 'p5TypeID'.")),void 0===t&&console.log("You cannot store undefined variables using storeItem().");var r=a(t);switch(r){case"number":case"boolean":t=t.toString();break;case"object":if(t instanceof o.default.Color)r="p5.Color";else if(t instanceof o.default.Vector){r="p5.Vector",t=[t.x,t.y,t.z]}t=JSON.stringify(t)}localStorage.setItem(e,t);var n="".concat(e,"p5TypeID");localStorage.setItem(n,r)},o.default.prototype.getItem=function(e){var t=localStorage.getItem(e),r=localStorage.getItem("".concat(e,"p5TypeID"));if(void 0===r)console.log("Unable to determine type of item stored under ".concat(e,"in local storage. Did you save the item with something other than setItem()?"));else if(null!==t)switch(r){case"number":t=parseFloat(t);break;case"boolean":t="true"===t;break;case"object":t=JSON.parse(t);break;case"p5.Color":t=JSON.parse(t),t=this.color.apply(this,i(t.levels));break;case"p5.Vector":t=JSON.parse(t),t=this.createVector.apply(this,i(t))}return t},o.default.prototype.clearStorage=function(){localStorage.clear()},o.default.prototype.removeItem=function(e){"string"!=typeof e&&console.log("The argument that you passed to removeItem() - ".concat(e," is not a string.")),localStorage.removeItem(e),localStorage.removeItem("".concat(e,"p5TypeID"))}},{"../core/main":264,"core-js/modules/es.array.from":155,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.ends-with":184,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],279:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.string.sub"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.createStringDict=function(e,t){return o.default._validateParameters("createStringDict",arguments),new o.default.StringDict(e,t)},o.default.prototype.createNumberDict=function(e,t){return o.default._validateParameters("createNumberDict",arguments),new o.default.NumberDict(e,t)},o.default.TypedDict=function(e,t){return e instanceof Object?this.data=e:(this.data={},this.data[e]=t),this},o.default.TypedDict.prototype.size=function(){return Object.keys(this.data).length},o.default.TypedDict.prototype.hasKey=function(e){return this.data.hasOwnProperty(e)},o.default.TypedDict.prototype.get=function(e){if(this.data.hasOwnProperty(e))return this.data[e];console.log("".concat(e," does not exist in this Dictionary"))},o.default.TypedDict.prototype.set=function(e,t){this._validate(t)?this.data[e]=t:console.log("Those values dont work for this dictionary type.")},o.default.TypedDict.prototype._addObj=function(e){for(var t in e)this.set(t,e[t])},o.default.TypedDict.prototype.create=function(e,t){e instanceof Object&&void 0===t?this._addObj(e):void 0!==e?this.set(e,t):console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair")},o.default.TypedDict.prototype.clear=function(){this.data={}},o.default.TypedDict.prototype.remove=function(e){if(!this.data.hasOwnProperty(e))throw new Error("".concat(e," does not exist in this Dictionary"));delete this.data[e]},o.default.TypedDict.prototype.print=function(){for(var e in this.data)console.log("key:".concat(e," value:").concat(this.data[e]))},o.default.TypedDict.prototype.saveTable=function(e){var t="";for(var r in this.data)t+="".concat(r,",").concat(this.data[r],"\n");var n=new Blob([t],{type:"text/csv"});o.default.prototype.downloadFile(n,e||"mycsv","csv")},o.default.TypedDict.prototype.saveJSON=function(e,t){o.default.prototype.saveJSON(this.data,e,t)},o.default.TypedDict.prototype._validate=function(e){return!0},o.default.StringDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default.TypedDict.apply(this,t)},o.default.StringDict.prototype=Object.create(o.default.TypedDict.prototype),o.default.StringDict.prototype._validate=function(e){return"string"==typeof e},o.default.NumberDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default.TypedDict.apply(this,t)},o.default.NumberDict.prototype=Object.create(o.default.TypedDict.prototype),o.default.NumberDict.prototype._validate=function(e){return"number"==typeof e},o.default.NumberDict.prototype.add=function(e,t){this.data.hasOwnProperty(e)?this.data[e]+=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},o.default.NumberDict.prototype.sub=function(e,t){this.add(e,-t)},o.default.NumberDict.prototype.mult=function(e,t){this.data.hasOwnProperty(e)?this.data[e]*=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},o.default.NumberDict.prototype.div=function(e,t){this.data.hasOwnProperty(e)?this.data[e]/=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},o.default.NumberDict.prototype._valueTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");if(1===Object.keys(this.data).length)return this.data[Object.keys(this.data)[0]];var t=this.data[Object.keys(this.data)[0]];for(var r in this.data)this.data[r]*e<t*e&&(t=this.data[r]);return t},o.default.NumberDict.prototype.minValue=function(){return this._valueTest(1)},o.default.NumberDict.prototype.maxValue=function(){return this._valueTest(-1)},o.default.NumberDict.prototype._keyTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to use minValue on an empty NumberDict");if(1===Object.keys(this.data).length)return Object.keys(this.data)[0];for(var t=Object.keys(this.data)[0],r=1;r<Object.keys(this.data).length;r++)Object.keys(this.data)[r]*e<t*e&&(t=Object.keys(this.data)[r]);return t},o.default.NumberDict.prototype.minKey=function(){return this._keyTest(1)},o.default.NumberDict.prototype.maxKey=function(){return this._keyTest(-1)};var i=o.default.TypedDict;r.default=i},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.object.keys":176,"core-js/modules/es.string.sub":192}],280:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.every"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.for-each"),e("core-js/modules/es.array.from"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.array.splice"),e("core-js/modules/es.function.name"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.promise"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.split"),e("core-js/modules/es.string.trim"),e("core-js/modules/web.dom-collections.for-each"),e("core-js/modules/web.dom-collections.iterator"),e("core-js/modules/web.url"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,f=(n=e("../core/main"))&&n.__esModule?n:{default:n};function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t,r){(t._userNode?t._userNode:document.body).appendChild(e);var n=r?new f.default.MediaElement(e,t):new f.default.Element(e,t);return t._elements.push(n),n}function o(e,t,r,n){var o=document.createElement(t);"string"==typeof(r=r||"")&&(r=[r]);var i=!0,a=!1,s=void 0;try{for(var l,u=r[Symbol.iterator]();!(i=(l=u.next()).done);i=!0){var c=l.value,d=document.createElement("source");d.setAttribute("src",c),o.appendChild(d)}}catch(e){a=!0,s=e}finally{try{i||null==u.return||u.return()}finally{if(a)throw s}}if("function"==typeof n){o.addEventListener("canplaythrough",function e(){n(),o.removeEventListener("canplaythrough",e)})}var f=y(o,e,!0);return f.loadedmetadata=!1,o.addEventListener("loadedmetadata",function(){f.width=o.videoWidth,f.height=o.videoHeight,0===f.elt.width&&(f.elt.width=o.videoWidth),0===f.elt.height&&(f.elt.height=o.videoHeight),f.presetPlaybackRate&&(f.elt.playbackRate=f.presetPlaybackRate,delete f.presetPlaybackRate),f.loadedmetadata=!0}),f}f.default.prototype.select=function(e,t){f.default._validateParameters("select",arguments);var r=this._getContainer(t).querySelector(e);return r?this._wrapElement(r):null},f.default.prototype.selectAll=function(e,t){f.default._validateParameters("selectAll",arguments);var r=[],n=this._getContainer(t).querySelectorAll(e);if(n)for(var o=0;o<n.length;o++){var i=this._wrapElement(n[o]);r.push(i)}return r},f.default.prototype._getContainer=function(e){var t=document;return"string"==typeof e?t=document.querySelector(e)||document:e instanceof f.default.Element?t=e.elt:e instanceof HTMLElement&&(t=e),t},f.default.prototype._wrapElement=function(e){var t=Array.prototype.slice.call(e.children);if("INPUT"!==e.tagName||"checkbox"!==e.type)return"VIDEO"===e.tagName||"AUDIO"===e.tagName?new f.default.MediaElement(e,this):"SELECT"===e.tagName?this.createSelect(new f.default.Element(e,this)):0<t.length&&t.every(function(e){return"INPUT"===e.tagName||"LABEL"===e.tagName})?this.createRadio(new f.default.Element(e,this)):new f.default.Element(e,this);var r=new f.default.Element(e,this);return r.checked=function(){return 0===arguments.length?this.elt.checked:(this.elt.checked=!!arguments[0],this)},r},f.default.prototype.removeElements=function(e){f.default._validateParameters("removeElements",arguments);this._elements.filter(function(e){return!(e.elt instanceof HTMLCanvasElement)}).map(function(e){return e.remove()})},f.default.Element.prototype.changed=function(e){return f.default.Element._adjustListener("change",e,this),this},f.default.Element.prototype.input=function(e){return f.default.Element._adjustListener("input",e,this),this},f.default.prototype.createDiv=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("div");return t.innerHTML=e,y(t,this)},f.default.prototype.createP=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("p");return t.innerHTML=e,y(t,this)},f.default.prototype.createSpan=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("span");return t.innerHTML=e,y(t,this)},f.default.prototype.createImg=function(){f.default._validateParameters("createImg",arguments);var t,r=document.createElement("img"),n=arguments;return 1<n.length&&"string"==typeof n[1]&&(r.alt=n[1]),2<n.length&&"string"==typeof n[2]&&(r.crossOrigin=n[2]),r.src=n[0],t=y(r,this),r.addEventListener("load",function(){t.width=r.offsetWidth||r.width,t.height=r.offsetHeight||r.height;var e=n[n.length-1];"function"==typeof e&&e(t)}),t},f.default.prototype.createA=function(e,t,r){f.default._validateParameters("createA",arguments);var n=document.createElement("a");return n.href=e,n.innerHTML=t,r&&(n.target=r),y(n,this)},f.default.prototype.createSlider=function(e,t,r,n){f.default._validateParameters("createSlider",arguments);var o=document.createElement("input");return o.type="range",o.min=e,o.max=t,0===n?o.step=1e-18:n&&(o.step=n),"number"==typeof r&&(o.value=r),y(o,this)},f.default.prototype.createButton=function(e,t){f.default._validateParameters("createButton",arguments);var r=document.createElement("button");return r.innerHTML=e,t&&(r.value=t),y(r,this)},f.default.prototype.createCheckbox=function(){f.default._validateParameters("createCheckbox",arguments);var e=document.createElement("div"),t=document.createElement("input");t.type="checkbox";var r=document.createElement("label");r.appendChild(t),e.appendChild(r);var n=y(e,this);if(n.checked=function(){var e=n.elt.firstElementChild.getElementsByTagName("input")[0];if(e){if(0===arguments.length)return e.checked;e.checked=!!arguments[0]}return n},this.value=function(e){return n.value=e,this},arguments[0]){n.value(arguments[0]);var o=document.createElement("span");o.innerHTML=arguments[0],r.appendChild(o)}return arguments[1]&&(t.checked=!0),n},f.default.prototype.createSelect=function(){var e;f.default._validateParameters("createSelect",arguments);var t=arguments[0];if(t instanceof f.default.Element&&t.elt instanceof HTMLSelectElement)e=t,this.elt=t.elt;else if(t instanceof HTMLSelectElement)e=y(t,this),this.elt=t;else{var r=document.createElement("select");t&&"boolean"==typeof t&&r.setAttribute("multiple","true"),e=y(r,this),this.elt=r}return e.option=function(e,t){var r;if(void 0!==e){for(var n=0;n<this.elt.length;n+=1)if(this.elt[n].innerHTML===e){r=n;break}if(void 0!==r)!1===t?this.elt.remove(r):this.elt[r].value=t;else{var o=document.createElement("option");o.innerHTML=e,o.value=void 0===t?e:t,this.elt.appendChild(o),this._pInst._elements.push(o)}}},e.selected=function(e){if(void 0!==e){for(var t=0;t<this.elt.length;t+=1)this.elt[t].value.toString()===e.toString()&&(this.elt.selectedIndex=t);return this}if(this.elt.getAttribute("multiple")){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=this.elt.selectedOptions[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;r.push(l.value)}}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}return this.elt.value},e.disable=function(e){if("string"==typeof e)for(var t=0;t<this.elt.length;t++)this.elt[t].value.toString()===e&&(this.elt[t].disabled=!0,this.elt[t].selected=!1);else this.elt.disabled=!0;return this},e},f.default.prototype.createRadio=function(){var e,t,r=arguments[0];r instanceof HTMLDivElement||r instanceof HTMLSpanElement?(e=r,"string"==typeof arguments[1]&&(t=arguments[1])):("string"==typeof r&&(t=r),e=document.createElement("div"));var p=y(this.elt=e,this);p._name=t||"radioOption";function n(e){return e instanceof HTMLInputElement&&"radio"===e.type}function d(e){return e instanceof HTMLLabelElement}return p._getOptionsArray=function(){return Array.from(this.elt.children).filter(function(e){return n(e)||d(e)&&n(e.firstElementChild)}).map(function(e){return n(e)?e:e.firstElementChild})},p.option=function(e,t){var r,n,o,i=!0,a=!1,s=void 0;try{for(var l,u=p._getOptionsArray()[Symbol.iterator]();!(i=(l=u.next()).done);i=!0){var c=l.value;if(c.value===e){r=c;break}}}catch(e){a=!0,s=e}finally{try{i||null==u.return||u.return()}finally{if(a)throw s}}return void 0===r&&((r=document.createElement("input")).setAttribute("type","radio"),r.setAttribute("value",e)),r.setAttribute("name",p._name),d(r.parentElement)?n=r.parentElement:(n=document.createElement("label")).insertAdjacentElement("afterbegin",r),n.lastElementChild instanceof HTMLSpanElement?o=n.lastElementChild:(o=document.createElement("span"),r.insertAdjacentElement("afterend",o)),o.innerHTML=void 0===t?e:t,this.elt.appendChild(n),r},p.remove=function(e){var t=!0,r=!1,n=void 0;try{for(var o,i=p._getOptionsArray()[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;if(a.value===e)return void(d(a.parentElement)?a.parentElement.remove():a.remove())}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}},p.value=function(){var e="",t=!0,r=!1,n=void 0;try{for(var o,i=p._getOptionsArray()[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;if(a.checked){e=a.value;break}}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}return e},p.selected=function(e){var t=null;if(void 0===e){var r=!0,n=!1,o=void 0;try{for(var i,a=p._getOptionsArray()[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value;if(s.checked){t=s;break}}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}}else{var l=!0,u=!1,c=void 0;try{for(var d,f=p._getOptionsArray()[Symbol.iterator]();!(l=(d=f.next()).done);l=!0){var h=d.value;h.value===e&&(h.setAttribute("checked",!0),t=h)}}catch(e){u=!0,c=e}finally{try{l||null==f.return||f.return()}finally{if(u)throw c}}}return t},p.disable=function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=!0,r=!1,n=void 0;try{for(var o,i=p._getOptionsArray()[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){o.value.setAttribute("disabled",e)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}},p},f.default.prototype.createColorPicker=function(e){f.default._validateParameters("createColorPicker",arguments);var t,r=document.createElement("input");return r.type="color",e?e instanceof f.default.Color?r.value=e.toString("#rrggbb"):(f.default.prototype._colorMode="rgb",f.default.prototype._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},r.value=f.default.prototype.color(e).toString("#rrggbb")):r.value="#000000",(t=y(r,this)).color=function(){return e&&(e.mode&&(f.default.prototype._colorMode=e.mode),e.maxes&&(f.default.prototype._colorMaxes=e.maxes)),f.default.prototype.color(this.elt.value)},t},f.default.prototype.createInput=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"text";f.default._validateParameters("createInput",arguments);var r=document.createElement("input");return r.setAttribute("value",e),r.setAttribute("type",t),y(r,this)},f.default.prototype.createFileInput=function(s){var e=1<arguments.length&&void 0!==arguments[1]&&arguments[1];f.default._validateParameters("createFileInput",arguments);if(window.File&&window.FileReader&&window.FileList&&window.Blob){var t=document.createElement("input");return t.setAttribute("type","file"),e&&t.setAttribute("multiple",!0),t.addEventListener("change",function(e){var t=!0,r=!1,n=void 0;try{for(var o,i=e.target.files[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;f.default.File._load(a,s)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}},!1),y(t,this)}console.log("The File APIs are not fully supported in this browser. Cannot create element.")},f.default.prototype.createVideo=function(e,t){return f.default._validateParameters("createVideo",arguments),o(this,"video",e,t)},f.default.prototype.createAudio=function(e,t){return f.default._validateParameters("createAudio",arguments),o(this,"audio",e,t)},f.default.prototype.VIDEO="video",f.default.prototype.AUDIO="audio",void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(r){var n=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return n?new Promise(function(e,t){n.call(navigator,r,e,t)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}),f.default.prototype.createCapture=function(){if(f.default._validateParameters("createCapture",arguments),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new DOMException("getUserMedia not supported in this browser");var e,t,r=!0,n=!0,o=!0,i=!1,a=void 0;try{for(var s,l=arguments[Symbol.iterator]();!(o=(s=l.next()).done);o=!0){var u=s.value;u===f.default.prototype.VIDEO?n=!1:u===f.default.prototype.AUDIO?r=!1:"object"===h(u)?e=u:"function"==typeof u&&(t=u)}}catch(e){i=!0,a=e}finally{try{o||null==l.return||l.return()}finally{if(i)throw a}}e=e||{video:r,audio:n};var c=document.createElement("video");c.setAttribute("playsinline",""),navigator.mediaDevices.getUserMedia(e).then(function(t){try{"srcObject"in c?c.srcObject=t:c.src=window.URL.createObjectURL(t)}catch(e){c.src=t}},console.log);var d=y(c,this,!0);return d.loadedmetadata=!1,c.addEventListener("loadedmetadata",function(){c.play(),c.width?(d.width=c.width,d.height=c.height):(d.width=d.elt.width=c.videoWidth,d.height=d.elt.height=c.videoHeight),d.loadedmetadata=!0,t&&t(c.srcObject)}),d},f.default.prototype.createElement=function(e,t){f.default._validateParameters("createElement",arguments);var r=document.createElement(e);return void 0!==t&&(r.innerHTML=t),y(r,this)},f.default.Element.prototype.addClass=function(e){return this.elt.className?this.hasClass(e)||(this.elt.className=this.elt.className+" "+e):this.elt.className=e,this},f.default.Element.prototype.removeClass=function(e){return this.elt.classList.remove(e),this},f.default.Element.prototype.hasClass=function(e){return this.elt.classList.contains(e)},f.default.Element.prototype.toggleClass=function(e){return this.elt.classList.contains(e)?this.elt.classList.remove(e):this.elt.classList.add(e),this},f.default.Element.prototype.child=function(e){return void 0===e?this.elt.childNodes:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof f.default.Element&&(e=e.elt),e instanceof HTMLElement&&this.elt.appendChild(e),this)},f.default.Element.prototype.center=function(e){var t=this.elt.style.display,r="none"===this.elt.style.display,n="none"===this.parent().style.display,o={x:this.elt.offsetLeft,y:this.elt.offsetTop};r&&this.show(),n&&this.parent().show(),this.elt.style.display="block",this.position(0,0);var i=Math.abs(this.parent().offsetWidth-this.elt.offsetWidth),a=Math.abs(this.parent().offsetHeight-this.elt.offsetHeight);return"both"===e||void 0===e?this.position(i/2+this.parent().offsetLeft,a/2+this.parent().offsetTop):"horizontal"===e?this.position(i/2+this.parent().offsetLeft,o.y):"vertical"===e&&this.position(o.x,a/2+this.parent().offsetTop),this.style("display",t),r&&this.hide(),n&&this.parent().hide(),this},f.default.Element.prototype.html=function(){return 0===arguments.length?this.elt.innerHTML:(arguments[1]?this.elt.insertAdjacentHTML("beforeend",arguments[0]):this.elt.innerHTML=arguments[0],this)},f.default.Element.prototype.position=function(){if(0===arguments.length)return{x:this.elt.offsetLeft,y:this.elt.offsetTop};var e="absolute";return"static"!==arguments[2]&&"fixed"!==arguments[2]&&"relative"!==arguments[2]&&"sticky"!==arguments[2]&&"initial"!==arguments[2]&&"inherit"!==arguments[2]||(e=arguments[2]),this.elt.style.position=e,this.elt.style.left=arguments[0]+"px",this.elt.style.top=arguments[1]+"px",this.x=arguments[0],this.y=arguments[1],this},f.default.Element.prototype._translate=function(){this.elt.style.position="absolute";var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/translate3d\(.*\)/g,"")).replace(/translate[X-Z]?\(.*\)/g,"")),2===arguments.length?this.elt.style.transform="translate("+arguments[0]+"px, "+arguments[1]+"px)":2<arguments.length&&(this.elt.style.transform="translate3d("+arguments[0]+"px,"+arguments[1]+"px,"+arguments[2]+"px)",this.elt.parentElement.style.perspective=3===arguments.length?"1000px":arguments[3]+"px"),this.elt.style.transform+=e,this},f.default.Element.prototype._rotate=function(){var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/rotate3d\(.*\)/g,"")).replace(/rotate[X-Z]?\(.*\)/g,"")),1===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg)":2===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg, "+arguments[1]+"deg)":3===arguments.length&&(this.elt.style.transform="rotateX("+arguments[0]+"deg)",this.elt.style.transform+="rotateY("+arguments[1]+"deg)",this.elt.style.transform+="rotateZ("+arguments[2]+"deg)"),this.elt.style.transform+=e,this},f.default.Element.prototype.style=function(e,t){if(t instanceof f.default.Color&&(t="rgba("+t.levels[0]+","+t.levels[1]+","+t.levels[2]+","+t.levels[3]/255+")"),void 0===t){if(-1===e.indexOf(":"))return window.getComputedStyle(this.elt).getPropertyValue(e);for(var r=e.split(";"),n=0;n<r.length;n++){var o=r[n].split(":");o[0]&&o[1]&&(this.elt.style[o[0].trim()]=o[1].trim())}}else if(this.elt.style[e]=t,"width"===e||"height"===e||"left"===e||"top"===e){var i=window.getComputedStyle(this.elt).getPropertyValue(e).replace(/\D+/g,"");this[e]=parseInt(i,10)}return this},f.default.Element.prototype.attribute=function(e,t){if(null==this.elt.firstChild||"checkbox"!==this.elt.firstChild.type&&"radio"!==this.elt.firstChild.type)return void 0===t?this.elt.getAttribute(e):(this.elt.setAttribute(e,t),this);if(void 0===t)return this.elt.firstChild.getAttribute(e);for(var r=0;r<this.elt.childNodes.length;r++)this.elt.childNodes[r].setAttribute(e,t)},f.default.Element.prototype.removeAttribute=function(e){if(null!=this.elt.firstChild&&("checkbox"===this.elt.firstChild.type||"radio"===this.elt.firstChild.type))for(var t=0;t<this.elt.childNodes.length;t++)this.elt.childNodes[t].removeAttribute(e);return this.elt.removeAttribute(e),this},f.default.Element.prototype.value=function(){return 0<arguments.length?(this.elt.value=arguments[0],this):"range"===this.elt.type?parseFloat(this.elt.value):this.elt.value},f.default.Element.prototype.show=function(){return this.elt.style.display="block",this},f.default.Element.prototype.hide=function(){return this.elt.style.display="none",this},f.default.Element.prototype.size=function(e,t){if(0===arguments.length)return{width:this.elt.offsetWidth,height:this.elt.offsetHeight};var r=e,n=t,o=f.default.prototype.AUTO;if(r!==o||n!==o){if(r===o?r=t*this.width/this.height:n===o&&(n=e*this.height/this.width),this.elt instanceof HTMLCanvasElement){var i,a={},s=this.elt.getContext("2d");for(i in s)a[i]=s[i];for(i in this.elt.setAttribute("width",r*this._pInst._pixelDensity),this.elt.setAttribute("height",n*this._pInst._pixelDensity),this.elt.style.width=r+"px",this.elt.style.height=n+"px",this._pInst.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),a)this.elt.getContext("2d")[i]=a[i]}else this.elt.style.width=r+"px",this.elt.style.height=n+"px",this.elt.width=r,this.elt.height=n;this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this._pInst&&this._pInst._curElement&&this._pInst._curElement.elt===this.elt&&(this._pInst._setProperty("width",this.elt.offsetWidth),this._pInst._setProperty("height",this.elt.offsetHeight))}return this},f.default.Element.prototype.remove=function(){if(this instanceof f.default.MediaElement){this.stop();var e=this.elt.srcObject;if(null!==e)e.getTracks().forEach(function(e){e.stop()})}var t=this._pInst._elements.indexOf(this);for(var r in-1!==t&&this._pInst._elements.splice(t,1),this._events)this.elt.removeEventListener(r,this._events[r]);this.elt&&this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt)},f.default.Element.prototype.drop=function(o,i){if(window.File&&window.FileReader&&window.FileList&&window.Blob){if(!this._dragDisabled){this._dragDisabled=!0;var e=function(e){e.preventDefault()};this.elt.addEventListener("dragover",e),this.elt.addEventListener("dragleave",e)}f.default.Element._attachListener("drop",function(e){e.preventDefault(),"function"==typeof i&&i.call(this,e);for(var t=e.dataTransfer.files,r=0;r<t.length;r++){var n=t[r];f.default.File._load(n,o)}},this)}else console.log("The File APIs are not fully supported in this browser.");return this},f.default.MediaElement=function(n,e){f.default.Element.call(this,n,e);var o=this;this.elt.crossOrigin="anonymous",this._prevTime=0,this._cueIDCounter=0,this._cues=[],(this._pixelsState=this)._pixelDensity=1,this._modified=!1,Object.defineProperty(o,"src",{get:function(){var e=o.elt.children[0].src,t=o.elt.src===window.location.href?"":o.elt.src;return e===window.location.href?t:e},set:function(e){for(var t=0;t<o.elt.children.length;t++)o.elt.removeChild(o.elt.children[t]);var r=document.createElement("source");r.src=e,n.appendChild(r),o.elt.src=e,o.modified=!0}}),o._onended=function(){},o.elt.onended=function(){o._onended(o)}},f.default.MediaElement.prototype=Object.create(f.default.Element.prototype),f.default.MediaElement.prototype.play=function(){var e,t=this;return this.elt.currentTime===this.elt.duration&&(this.elt.currentTime=0),(e=(1<this.elt.readyState||this.elt.load(),this.elt.play()))&&e.catch&&e.catch(function(e){"NotAllowedError"===e.name?f.default._friendlyAutoplayError(t.src):console.error("Media play method encountered an unexpected error",e)}),this},f.default.MediaElement.prototype.stop=function(){return this.elt.pause(),this.elt.currentTime=0,this},f.default.MediaElement.prototype.pause=function(){return this.elt.pause(),this},f.default.MediaElement.prototype.loop=function(){return this.elt.setAttribute("loop",!0),this.play(),this},f.default.MediaElement.prototype.noLoop=function(){return this.elt.removeAttribute("loop"),this},f.default.MediaElement.prototype._setupAutoplayFailDetection=function(){var e=this,t=setTimeout(function(){return f.default._friendlyAutoplayError(e.src)},500);this.elt.addEventListener("play",function(){return clearTimeout(t)},{passive:!0,once:!0})},f.default.MediaElement.prototype.autoplay=function(e){var t=this,r=this.elt.getAttribute("autoplay");if(this.elt.setAttribute("autoplay",e),e&&!r){var n=function(){return t._setupAutoplayFailDetection()};4===this.elt.readyState?n():this.elt.addEventListener("canplay",n,{passive:!0,once:!0})}return this},f.default.MediaElement.prototype.volume=function(e){if(void 0===e)return this.elt.volume;this.elt.volume=e},f.default.MediaElement.prototype.speed=function(e){if(void 0===e)return this.presetPlaybackRate||this.elt.playbackRate;this.loadedmetadata?this.elt.playbackRate=e:this.presetPlaybackRate=e},f.default.MediaElement.prototype.time=function(e){return void 0===e?this.elt.currentTime:(this.elt.currentTime=e,this)},f.default.MediaElement.prototype.duration=function(){return this.elt.duration},f.default.MediaElement.prototype.pixels=[],f.default.MediaElement.prototype._ensureCanvas=function(){this.canvas||(this.canvas=document.createElement("canvas"),this.drawingContext=this.canvas.getContext("2d"),this.setModified(!0)),this.loadedmetadata&&(this.canvas.width!==this.elt.width&&(this.canvas.width=this.elt.width,this.canvas.height=this.elt.height,this.width=this.canvas.width,this.height=this.canvas.height),this.drawingContext.drawImage(this.elt,0,0,this.canvas.width,this.canvas.height),this.setModified(!0))},f.default.MediaElement.prototype.loadPixels=function(){return this._ensureCanvas(),f.default.Renderer2D.prototype.loadPixels.apply(this,arguments)},f.default.MediaElement.prototype.updatePixels=function(e,t,r,n){return this.loadedmetadata&&(this._ensureCanvas(),f.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,n)),this.setModified(!0),this},f.default.MediaElement.prototype.get=function(){return this._ensureCanvas(),f.default.Renderer2D.prototype.get.apply(this,arguments)},f.default.MediaElement.prototype._getPixel=function(){return this.loadPixels(),f.default.Renderer2D.prototype._getPixel.apply(this,arguments)},f.default.MediaElement.prototype.set=function(e,t,r){this.loadedmetadata&&(this._ensureCanvas(),f.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0))},f.default.MediaElement.prototype.copy=function(){this._ensureCanvas(),f.default.prototype.copy.apply(this,arguments)},f.default.MediaElement.prototype.mask=function(){this.loadPixels(),this.setModified(!0),f.default.Image.prototype.mask.apply(this,arguments)},f.default.MediaElement.prototype.isModified=function(){return this._modified},f.default.MediaElement.prototype.setModified=function(e){this._modified=e},f.default.MediaElement.prototype.onended=function(e){return this._onended=e,this},f.default.MediaElement.prototype.connect=function(e){var t,r;if("function"==typeof f.default.prototype.getAudioContext)t=f.default.prototype.getAudioContext(),r=f.default.soundOut.input;else try{r=(t=e.context).destination}catch(e){throw"connect() is meant to be used with Web Audio API or p5.sound.js"}this.audioSourceNode||(this.audioSourceNode=t.createMediaElementSource(this.elt),this.audioSourceNode.connect(r)),e?e.input?this.audioSourceNode.connect(e.input):this.audioSourceNode.connect(e):this.audioSourceNode.connect(r)},f.default.MediaElement.prototype.disconnect=function(){if(!this.audioSourceNode)throw"nothing to disconnect";this.audioSourceNode.disconnect()},f.default.MediaElement.prototype.showControls=function(){this.elt.style["text-align"]="inherit",this.elt.controls=!0},f.default.MediaElement.prototype.hideControls=function(){this.elt.controls=!1};function i(e,t,r,n){this.callback=e,this.time=t,this.id=r,this.val=n}f.default.MediaElement.prototype.addCue=function(e,t,r){var n=this._cueIDCounter++,o=new i(t,e,n,r);return this._cues.push(o),this.elt.ontimeupdate||(this.elt.ontimeupdate=this._onTimeUpdate.bind(this)),n},f.default.MediaElement.prototype.removeCue=function(e){for(var t=0;t<this._cues.length;t++)this._cues[t].id===e&&(console.log(e),this._cues.splice(t,1));0===this._cues.length&&(this.elt.ontimeupdate=null)},f.default.MediaElement.prototype.clearCues=function(){this._cues=[],this.elt.ontimeupdate=null},f.default.MediaElement.prototype._onTimeUpdate=function(){for(var e=this.time(),t=0;t<this._cues.length;t++){var r=this._cues[t].time,n=this._cues[t].val;this._prevTime<r&&r<=e&&this._cues[t].callback(n)}this._prevTime=e},f.default.File=function(e,t){this.file=e,this._pInst=t;var r=e.type.split("/");this.type=r[0],this.subtype=r[1],this.name=e.name,this.size=e.size,this.data=void 0},f.default.File._createLoader=function(n,o){var e=new FileReader;return e.onload=function(e){var t=new f.default.File(n);if("application/json"===t.file.type)t.data=JSON.parse(e.target.result);else if("text/xml"===t.file.type){var r=(new DOMParser).parseFromString(e.target.result,"text/xml");t.data=new f.default.XML(r.documentElement)}else t.data=e.target.result;o(t)},e},f.default.File._load=function(e,t){if(/^text\//.test(e.type)||"application/json"===e.type)f.default.File._createLoader(e,t).readAsText(e);else if(/^(video|audio)\//.test(e.type)){var r=new f.default.File(e);r.data=URL.createObjectURL(e),t(r)}else f.default.File._createLoader(e,t).readAsDataURL(e)};var a=f.default;r.default=a},{"../core/main":264,"core-js/modules/es.array.every":150,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.for-each":154,"core-js/modules/es.array.from":155,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.splice":164,"core-js/modules/es.function.name":166,"core-js/modules/es.object.to-string":177,"core-js/modules/es.promise":178,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.split":191,"core-js/modules/es.string.trim":193,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.for-each":228,"core-js/modules/web.dom-collections.iterator":229,"core-js/modules/web.url":231}],281:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.deviceOrientation=1<window.innerWidth/window.innerHeight?"landscape":"portrait",o.default.prototype.accelerationX=0,o.default.prototype.accelerationY=0,o.default.prototype.accelerationZ=0,o.default.prototype.pAccelerationX=0,o.default.prototype.pAccelerationY=0,o.default.prototype.pAccelerationZ=0,o.default.prototype._updatePAccelerations=function(){this._setProperty("pAccelerationX",this.accelerationX),this._setProperty("pAccelerationY",this.accelerationY),this._setProperty("pAccelerationZ",this.accelerationZ)},o.default.prototype.rotationX=0,o.default.prototype.rotationY=0,o.default.prototype.rotationZ=0,o.default.prototype.pRotationX=0,o.default.prototype.pRotationY=0;var u=o.default.prototype.pRotationZ=0,c=0,d=0,f="clockwise",h="clockwise",p="clockwise";o.default.prototype.pRotateDirectionX=void 0,o.default.prototype.pRotateDirectionY=void 0,o.default.prototype.pRotateDirectionZ=void 0,o.default.prototype._updatePRotations=function(){this._setProperty("pRotationX",this.rotationX),this._setProperty("pRotationY",this.rotationY),this._setProperty("pRotationZ",this.rotationZ)},o.default.prototype.turnAxis=void 0;var y=.5,m=30;o.default.prototype.setMoveThreshold=function(e){o.default._validateParameters("setMoveThreshold",arguments),y=e},o.default.prototype.setShakeThreshold=function(e){o.default._validateParameters("setShakeThreshold",arguments),m=e},o.default.prototype._ondeviceorientation=function(e){this._updatePRotations(),this._angleMode===i.radians&&(e.beta=e.beta*(_PI/180),e.gamma=e.gamma*(_PI/180),e.alpha=e.alpha*(_PI/180)),this._setProperty("rotationX",e.beta),this._setProperty("rotationY",e.gamma),this._setProperty("rotationZ",e.alpha),this._handleMotion()},o.default.prototype._ondevicemotion=function(e){this._updatePAccelerations(),this._setProperty("accelerationX",2*e.acceleration.x),this._setProperty("accelerationY",2*e.acceleration.y),this._setProperty("accelerationZ",2*e.acceleration.z),this._handleMotion()},o.default.prototype._handleMotion=function(){90===window.orientation||-90===window.orientation?this._setProperty("deviceOrientation","landscape"):0===window.orientation?this._setProperty("deviceOrientation","portrait"):void 0===window.orientation&&this._setProperty("deviceOrientation","undefined");var e,t,r=this._isGlobal?window:this;if("function"==typeof r.deviceMoved&&(Math.abs(this.accelerationX-this.pAccelerationX)>y||Math.abs(this.accelerationY-this.pAccelerationY)>y||Math.abs(this.accelerationZ-this.pAccelerationZ)>y)&&r.deviceMoved(),"function"==typeof r.deviceTurned){var n=this.rotationX+180,o=this.pRotationX+180,i=u+180;0<n-o&&n-o<270||n-o<-270?f="clockwise":(n-o<0||270<n-o)&&(f="counter-clockwise"),f!==this.pRotateDirectionX&&(i=n),90<Math.abs(n-i)&&Math.abs(n-i)<270&&(i=n,this._setProperty("turnAxis","X"),r.deviceTurned()),this.pRotateDirectionX=f,u=i-180;var a=this.rotationY+180,s=this.pRotationY+180,l=c+180;0<a-s&&a-s<270||a-s<-270?h="clockwise":(a-s<0||270<a-this.pRotationY)&&(h="counter-clockwise"),h!==this.pRotateDirectionY&&(l=a),90<Math.abs(a-l)&&Math.abs(a-l)<270&&(l=a,this._setProperty("turnAxis","Y"),r.deviceTurned()),this.pRotateDirectionY=h,c=l-180,0<this.rotationZ-this.pRotationZ&&this.rotationZ-this.pRotationZ<270||this.rotationZ-this.pRotationZ<-270?p="clockwise":(this.rotationZ-this.pRotationZ<0||270<this.rotationZ-this.pRotationZ)&&(p="counter-clockwise"),p!==this.pRotateDirectionZ&&(d=this.rotationZ),90<Math.abs(this.rotationZ-d)&&Math.abs(this.rotationZ-d)<270&&(d=this.rotationZ,this._setProperty("turnAxis","Z"),r.deviceTurned()),this.pRotateDirectionZ=p,this._setProperty("turnAxis",void 0)}"function"==typeof r.deviceShaken&&(null!==this.pAccelerationX&&(e=Math.abs(this.accelerationX-this.pAccelerationX),t=Math.abs(this.accelerationY-this.pAccelerationY)),m<e+t&&r.deviceShaken())};var l=o.default;r.default=l},{"../core/constants":253,"../core/main":264}],282:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.isKeyPressed=!1,o.default.prototype.keyIsPressed=!1,o.default.prototype.key="",o.default.prototype.keyCode=0,o.default.prototype._onkeydown=function(e){if(!this._downKeys[e.which]){this._setProperty("isKeyPressed",!0),this._setProperty("keyIsPressed",!0),this._setProperty("keyCode",e.which),this._downKeys[e.which]=!0,this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this._isGlobal?window:this;if("function"==typeof t.keyPressed&&!e.charCode)!1===t.keyPressed(e)&&e.preventDefault()}},o.default.prototype._onkeyup=function(e){this._downKeys[e.which]=!1,this._areDownKeys()||(this._setProperty("isKeyPressed",!1),this._setProperty("keyIsPressed",!1)),this._setProperty("_lastKeyCodeTyped",null),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which),this._setProperty("keyCode",e.which);var t=this._isGlobal?window:this;"function"==typeof t.keyReleased&&!1===t.keyReleased(e)&&e.preventDefault()},o.default.prototype._onkeypress=function(e){if(e.which!==this._lastKeyCodeTyped){this._setProperty("_lastKeyCodeTyped",e.which),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this._isGlobal?window:this;if("function"==typeof t.keyTyped)!1===t.keyTyped(e)&&e.preventDefault()}},o.default.prototype._onblur=function(e){this._downKeys={}},o.default.prototype.keyIsDown=function(e){return o.default._validateParameters("keyIsDown",arguments),this._downKeys[e]||!1},o.default.prototype._areDownKeys=function(){for(var e in this._downKeys)if(this._downKeys.hasOwnProperty(e)&&!0===this._downKeys[e])return!0;return!1};var i=o.default;r.default=i},{"../core/main":264}],283:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.includes"),e("core-js/modules/es.string.includes"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.movedX=0,o.default.prototype.movedY=0,o.default.prototype._hasMouseInteracted=!1,o.default.prototype.mouseX=0,o.default.prototype.mouseY=0,o.default.prototype.pmouseX=0,o.default.prototype.pmouseY=0,o.default.prototype.winMouseX=0,o.default.prototype.winMouseY=0,o.default.prototype.pwinMouseX=0,o.default.prototype.pwinMouseY=0,o.default.prototype.mouseButton=0,o.default.prototype.mouseIsPressed=!1,o.default.prototype._updateNextMouseCoords=function(e){if(null!==this._curElement&&(!e.touches||0<e.touches.length)){var t=function(e,t,r,n){n&&!n.clientX&&(n.touches?n=n.touches[0]:n.changedTouches&&(n=n.changedTouches[0]));var o=e.getBoundingClientRect(),i=e.scrollWidth/t||1,a=e.scrollHeight/r||1;return{x:(n.clientX-o.left)/i,y:(n.clientY-o.top)/a,winX:n.clientX,winY:n.clientY,id:n.identifier}}(this._curElement.elt,this.width,this.height,e);this._setProperty("movedX",e.movementX),this._setProperty("movedY",e.movementY),this._setProperty("mouseX",t.x),this._setProperty("mouseY",t.y),this._setProperty("winMouseX",t.winX),this._setProperty("winMouseY",t.winY)}this._hasMouseInteracted||(this._updateMouseCoords(),this._setProperty("_hasMouseInteracted",!0))},o.default.prototype._updateMouseCoords=function(){this._setProperty("pmouseX",this.mouseX),this._setProperty("pmouseY",this.mouseY),this._setProperty("pwinMouseX",this.winMouseX),this._setProperty("pwinMouseY",this.winMouseY),this._setProperty("_pmouseWheelDeltaY",this._mouseWheelDeltaY)},o.default.prototype._setMouseButton=function(e){1===e.button?this._setProperty("mouseButton",i.CENTER):2===e.button?this._setProperty("mouseButton",i.RIGHT):this._setProperty("mouseButton",i.LEFT)},o.default.prototype._onmousemove=function(e){var t=this._isGlobal?window:this;this._updateNextMouseCoords(e),this.mouseIsPressed?"function"==typeof t.mouseDragged?!1===t.mouseDragged(e)&&e.preventDefault():"function"==typeof t.touchMoved&&!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseMoved&&!1===t.mouseMoved(e)&&e.preventDefault()},o.default.prototype._onmousedown=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._setMouseButton(e),this._updateNextMouseCoords(e),"function"==typeof t.mousePressed?!1===t.mousePressed(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.touchStarted&&!1===t.touchStarted(e)&&e.preventDefault()},o.default.prototype._onmouseup=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!1),"function"==typeof t.mouseReleased?!1===t.mouseReleased(e)&&e.preventDefault():"function"==typeof t.touchEnded&&!1===t.touchEnded(e)&&e.preventDefault()},o.default.prototype._ondragend=o.default.prototype._onmouseup,o.default.prototype._ondragover=o.default.prototype._onmousemove,o.default.prototype._onclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.mouseClicked&&!1===t.mouseClicked(e)&&e.preventDefault()},o.default.prototype._ondblclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.doubleClicked&&!1===t.doubleClicked(e)&&e.preventDefault()},o.default.prototype._mouseWheelDeltaY=0,o.default.prototype._pmouseWheelDeltaY=0,o.default.prototype._onwheel=function(e){var t=this._isGlobal?window:this;this._setProperty("_mouseWheelDeltaY",e.deltaY),"function"==typeof t.mouseWheel&&(e.delta=e.deltaY,!1===t.mouseWheel(e)&&e.preventDefault())},o.default.prototype.requestPointerLock=function(){var e=this._curElement.elt;return e.requestPointerLock=e.requestPointerLock||e.mozRequestPointerLock,e.requestPointerLock?(e.requestPointerLock(),!0):(console.log("requestPointerLock is not implemented in this browser"),!1)},o.default.prototype.exitPointerLock=function(){document.exitPointerLock()};var l=o.default;r.default=l},{"../core/constants":253,"../core/main":264,"core-js/modules/es.array.includes":156,"core-js/modules/es.string.includes":185}],284:[function(e,t,r){"use strict";e("core-js/modules/es.array.includes"),e("core-js/modules/es.string.includes"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function i(e,t,r,n,o){var i=4<arguments.length&&void 0!==o?o:0,a=e.getBoundingClientRect(),s=e.scrollWidth/t||1,l=e.scrollHeight/r||1,u=n.touches[i]||n.changedTouches[i];return{x:(u.clientX-a.left)/s,y:(u.clientY-a.top)/l,winX:u.clientX,winY:u.clientY,id:u.identifier}}o.default.prototype.touches=[],o.default.prototype._updateTouchCoords=function(e){if(null!==this._curElement){for(var t=[],r=0;r<e.touches.length;r++)t[r]=i(this._curElement.elt,this.width,this.height,e,r);this._setProperty("touches",t)}},o.default.prototype._ontouchstart=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._updateTouchCoords(e),this._updateNextMouseCoords(e),this._updateMouseCoords(),"function"==typeof t.touchStarted?!1===t.touchStarted(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.mousePressed&&!1===t.mousePressed(e)&&e.preventDefault()},o.default.prototype._ontouchmove=function(e){var t=this._isGlobal?window:this;this._updateTouchCoords(e),this._updateNextMouseCoords(e),"function"==typeof t.touchMoved?!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseDragged&&!1===t.mouseDragged(e)&&e.preventDefault()},o.default.prototype._ontouchend=function(e){this._setProperty("mouseIsPressed",!1),this._updateTouchCoords(e),this._updateNextMouseCoords(e);var t=this._isGlobal?window:this;"function"==typeof t.touchEnded?!1===t.touchEnded(e)&&e.preventDefault():"function"==typeof t.mouseReleased&&!1===t.mouseReleased(e)&&e.preventDefault()};var a=o.default;r.default=a},{"../core/main":264,"core-js/modules/es.array.includes":156,"core-js/modules/es.string.includes":185}],285:[function(e,t,r){"use strict";e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.typed-array.int32-array"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var O,C,L,P,A={};function n(e,t){for(var r,n,o,i,a,s,l,u,c,d,f=A._toPixels(e),h=e.width,p=e.height,y=h*p,m=new Int32Array(y),g=0;g<y;g++)m[g]=A._getARGB(f,g);var v,b,_,x,w=new Int32Array(y),j=new Int32Array(y),S=new Int32Array(y),M=new Int32Array(y),E=0;for(!function(e){var t=3.5*e|0;if(O!==(t=t<1?1:t<248?t:248)){C=1+(O=t)<<1,L=new Int32Array(C),P=new Array(C);for(var r=0;r<C;r++)P[r]=new Int32Array(256);for(var n,o,i,a,s=1,l=t-1;s<t;s++){L[t+s]=L[l]=o=l*l,i=P[t+s],a=P[l--];for(var u=0;u<256;u++)i[u]=a[u]=o*u}n=L[t]=t*t,i=P[t];for(var c=0;c<256;c++)i[c]=n*c}}(t),b=0;b<p;b++){for(v=0;v<h;v++){if(i=o=n=a=r=0,(s=v-O)<0)d=-s,s=0;else{if(h<=s)break;d=0}for(_=d;_<C&&!(h<=s);_++){var T=m[s+E];a+=(x=P[_])[(-16777216&T)>>>24],n+=x[(16711680&T)>>16],o+=x[(65280&T)>>8],i+=x[255&T],r+=L[_],s++}w[l=E+v]=a/r,j[l]=n/r,S[l]=o/r,M[l]=i/r}E+=h}for(c=(u=-O)*h,b=E=0;b<p;b++){for(v=0;v<h;v++){if(i=o=n=a=r=0,u<0)d=l=-u,s=v;else{if(p<=u)break;d=0,l=u,s=v+c}for(_=d;_<C&&!(p<=l);_++)a+=(x=P[_])[w[s]],n+=x[j[s]],o+=x[S[s]],i+=x[M[s]],r+=L[_],l++,s+=h;m[v+E]=a/r<<24|n/r<<16|o/r<<8|i/r}E+=h,c+=h,u++}A._setPixels(f,m)}A._toPixels=function(e){if(e instanceof ImageData)return e.data;if(e.getContext("2d"))return e.getContext("2d").getImageData(0,0,e.width,e.height).data;if(e.getContext("webgl")){var t=e.getContext("webgl"),r=t.drawingBufferWidth*t.drawingBufferHeight*4,n=new Uint8Array(r);return t.readPixels(0,0,e.width,e.height,t.RGBA,t.UNSIGNED_BYTE,n),n}},A._getARGB=function(e,t){var r=4*t;return e[3+r]<<24&4278190080|e[r]<<16&16711680|e[1+r]<<8&65280|255&e[2+r]},A._setPixels=function(e,t){for(var r=0,n=0,o=e.length;n<o;n++)e[(r=4*n)+0]=(16711680&t[n])>>>16,e[r+1]=(65280&t[n])>>>8,e[r+2]=255&t[n],e[r+3]=(4278190080&t[n])>>>24},A._toImageData=function(e){return e instanceof ImageData?e:e.getContext("2d").getImageData(0,0,e.width,e.height)},A._createImageData=function(e,t){return A._tmpCanvas=document.createElement("canvas"),A._tmpCtx=A._tmpCanvas.getContext("2d"),this._tmpCtx.createImageData(e,t)},A.apply=function(e,t,r){var n=e.getContext("2d"),o=n.getImageData(0,0,e.width,e.height),i=t(o,r);i instanceof ImageData?n.putImageData(i,0,0,0,0,e.width,e.height):n.putImageData(o,0,0,0,0,e.width,e.height)},A.threshold=function(e,t){var r=A._toPixels(e);void 0===t&&(t=.5);for(var n=Math.floor(255*t),o=0;o<r.length;o+=4){var i=void 0;i=n<=.2126*r[o]+.7152*r[o+1]+.0722*r[o+2]?255:0,r[o]=r[o+1]=r[o+2]=i}},A.gray=function(e){for(var t=A._toPixels(e),r=0;r<t.length;r+=4){var n=.2126*t[r]+.7152*t[r+1]+.0722*t[r+2];t[r]=t[r+1]=t[r+2]=n}},A.opaque=function(e){for(var t=A._toPixels(e),r=0;r<t.length;r+=4)t[r+3]=255;return t},A.invert=function(e){for(var t=A._toPixels(e),r=0;r<t.length;r+=4)t[r]=255-t[r],t[r+1]=255-t[r+1],t[r+2]=255-t[r+2]},A.posterize=function(e,t){var r=A._toPixels(e);if(t<2||255<t)throw new Error("Level must be greater than 2 and less than 255 for posterize");for(var n=t-1,o=0;o<r.length;o+=4){var i=r[o],a=r[o+1],s=r[o+2];r[o]=255*(i*t>>8)/n,r[o+1]=255*(a*t>>8)/n,r[o+2]=255*(s*t>>8)/n}},A.dilate=function(e){for(var t,r,n,o,i,a,s,l,u,c,d,f,h,p,y,m,g,v=A._toPixels(e),b=0,_=v.length?v.length/4:0,x=new Int32Array(_);b<_;)for(r=(t=b)+e.width;b<r;)n=o=A._getARGB(v,b),(s=b-1)<t&&(s=b),r<=(a=b+1)&&(a=b),(l=b-e.width)<0&&(l=0),_<=(u=b+e.width)&&(u=b),f=A._getARGB(v,l),d=A._getARGB(v,s),h=A._getARGB(v,u),(i=77*(n>>16&255)+151*(n>>8&255)+28*(255&n))<(y=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))&&(o=d,i=y),i<(p=77*((c=A._getARGB(v,a))>>16&255)+151*(c>>8&255)+28*(255&c))&&(o=c,i=p),i<(m=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))&&(o=f,i=m),i<(g=77*(h>>16&255)+151*(h>>8&255)+28*(255&h))&&(o=h,i=g),x[b++]=o;A._setPixels(v,x)},A.erode=function(e){for(var t,r,n,o,i,a,s,l,u,c,d,f,h,p,y,m,g,v=A._toPixels(e),b=0,_=v.length?v.length/4:0,x=new Int32Array(_);b<_;)for(r=(t=b)+e.width;b<r;)n=o=A._getARGB(v,b),(s=b-1)<t&&(s=b),r<=(a=b+1)&&(a=b),(l=b-e.width)<0&&(l=0),_<=(u=b+e.width)&&(u=b),f=A._getARGB(v,l),d=A._getARGB(v,s),h=A._getARGB(v,u),(y=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))<(i=77*(n>>16&255)+151*(n>>8&255)+28*(255&n))&&(o=d,i=y),(p=77*((c=A._getARGB(v,a))>>16&255)+151*(c>>8&255)+28*(255&c))<i&&(o=c,i=p),(m=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))<i&&(o=f,i=m),(g=77*(h>>16&255)+151*(h>>8&255)+28*(255&h))<i&&(o=h,i=g),x[b++]=o;A._setPixels(v,x)},A.blur=function(e,t){n(e,t)};var o=A;r.default=o},{"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.int32-array":209,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint8-array":226}],286:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.from"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.set"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.split"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.uint32-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var A=n(e("../core/main")),k=n(e("omggif"));function n(e){return e&&e.__esModule?e:{default:e}}function R(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}A.default.prototype.createImage=function(e,t){return A.default._validateParameters("createImage",arguments),new A.default.Image(e,t)},A.default.prototype.saveCanvas=function(){A.default._validateParameters("saveCanvas",arguments);var e,t,r,n,o=[].slice.call(arguments);switch(arguments[0]instanceof HTMLCanvasElement?(e=arguments[0],o.shift()):arguments[0]instanceof A.default.Element?(e=arguments[0].elt,o.shift()):e=this._curElement&&this._curElement.elt,1<=o.length&&(t=o[0]),2<=o.length&&(r=o[1]),r=r||A.default.prototype._checkFileExtension(t,r)[1]||"png"){default:n="image/png";break;case"jpeg":case"jpg":n="image/jpeg"}e.toBlob(function(e){A.default.prototype.downloadFile(e,t,r)},n)},A.default.prototype.saveGif=function(p,e){var y=p.gifProperties,t=y.loopLimit;1===t?t=null:null===t&&(t=0);for(var r=new Uint8Array(p.width*p.height*y.numFrames),m=[],n={},o=0;o<y.numFrames;o++){for(var i=new Set,a=y.frames[o].image.data,s=a.length,l=new Uint32Array(p.width*p.height),u=0,c=0;u<s;u+=4,c++){var d=a[u+0]<<16|a[u+1]<<8|a[u+2]<<0;i.add(d),l[c]=d}var f=R(i).sort().toString();void 0===n[f]?n[f]={freq:1,frames:[o]}:(n[f].freq+=1,n[f].frames.push(o)),m.push(l)}var g=[],h=Object.keys(n).sort(function(e,t){return n[t].freq-n[e].freq}),v=h[0].split(",").map(function(e){return parseInt(e)});g=g.concat(n[v].frames);for(var b=new Set(v),_=1;_<h.length;_++){var x=h[_].split(",").map(function(e){return parseInt(e)}).filter(function(e){return!b.has(e)});if(v.length+x.length<=256){for(var w=0;w<x.length;w++)v.push(x[w]),b.add(x[w]);g=g.concat(n[h[_]].frames)}}g=new Set(g);for(var j={},S=0;S<v.length;S++)j[v[S]]||(j[v[S]]=S);for(var M=1;M<v.length;)M<<=1;v.length=M;for(var E={loop:t,palette:new Uint32Array(v)},T=new k.default.GifWriter(r,p.width,p.height,E),O={},C=function(e){for(var t=!g.has(e),r=t?[]:v,n=new Uint8Array(p.width*p.height),o={},i=new Set,a=0;a<m[e].length;a++){var s=m[e][a];t?(void 0===o[s]&&(o[s]=r.length,r.push(s)),n[a]=o[s]):n[a]=j[s],0<e&&m[e-1][a]!==s&&i.add(s)}var l={},u=r.filter(function(e){return!i.has(e)});if(0<u.length){var c=u[0],d=t?o[c]:j[c];if(0<e){for(var f=0;f<m[e].length;f++)m[e-1][f]===m[e][f]&&(n[f]=d);l.transparent=d,O.frameOpts.disposal=1}}if(l.delay=y.frames[e].delay/10,t){for(var h=1;h<r.length;)h<<=1;r.length=h,l.palette=new Uint32Array(r)}0<e&&T.addFrame(0,0,p.width,p.height,O.pixelPaletteIndex,O.frameOpts),O={pixelPaletteIndex:n,frameOpts:l}},L=0;L<y.numFrames;L++)C(L);O.frameOpts.disposal=1,T.addFrame(0,0,p.width,p.height,O.pixelPaletteIndex,O.frameOpts);var P=new Blob([r.slice(0,T.end())],{type:"image/gif"});A.default.prototype.downloadFile(P,e,"gif")},A.default.prototype.saveFrames=function(e,t,r,n,a){A.default._validateParameters("saveFrames",arguments);var o=r||3;o=A.default.prototype.constrain(o,0,15),o*=1e3;var i=n||15;i=A.default.prototype.constrain(i,0,22);var s=0,l=A.default.prototype._makeFrame,u=this._curElement.elt,c=[],d=setInterval(function(){c.push(l(e+s,t,u)),s++},1e3/i);setTimeout(function(){if(clearInterval(d),a)a(c);else{var e=!0,t=!1,r=void 0;try{for(var n,o=c[Symbol.iterator]();!(e=(n=o.next()).done);e=!0){var i=n.value;A.default.prototype.downloadFile(i.imageData,i.filename,i.ext)}}catch(e){t=!0,r=e}finally{try{e||null==o.return||o.return()}finally{if(t)throw r}}}c=[]},o+.01)},A.default.prototype._makeFrame=function(e,t,r){var n,o;if(n=this?this._curElement.elt:r,t)switch(t.toLowerCase()){case"png":o="image/png";break;case"jpeg":case"jpg":o="image/jpeg";break;default:o="image/png"}else t="png",o="image/png";var i=n.toDataURL(o);i=i.replace(o,"image/octet-stream");var a={};return a.imageData=i,a.filename=e,a.ext=t,a};var o=A.default;r.default=o},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.from":155,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.set":183,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.split":191,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint32-array":225,"core-js/modules/es.typed-array.uint8-array":226,"core-js/modules/web.dom-collections.iterator":229,omggif:238}],287:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.promise"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.uint8-clamped-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var x=o(e("../core/main")),d=o(e("./filters")),w=o(e("../core/helpers")),n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants")),m=o(e("omggif"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function o(e){return e&&e.__esModule?e:{default:e}}function j(e,t){return 0<e&&e<t?e:t}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),x.default.prototype.loadImage=function(n,o,i){x.default._validateParameters("loadImage",arguments);var a=new x.default.Image(1,1,this),s=this,e=new Request(n,{method:"GET",mode:"cors"});return fetch(n,e).then(function(e){var t=e.headers.get("content-type");if(null===t&&console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."),t&&t.includes("image/gif"))e.arrayBuffer().then(function(e){e&&function(e,r,t,n,o){var i=new m.default.GifReader(e);r.width=r.canvas.width=i.width,r.height=r.canvas.height=i.height;var a=[],s=i.numFrames(),l=new Uint8ClampedArray(r.width*r.height*4);if(1<s){for(var u=function(e,t){try{t.decodeAndBlitFrameRGBA(e,l)}catch(e){x.default._friendlyFileLoadError(8,r.src),"function"==typeof n?n(e):console.error(e)}},c=0;c<s;c++){var d=i.frameInfo(c),f=r.drawingContext.getImageData(0,0,r.width,r.height);l=f.data.slice(),u(c,i);var h=new ImageData(l,r.width,r.height);r.drawingContext.putImageData(h,0,0);var p=d.delay;0===p&&(p=10),a.push({image:r.drawingContext.getImageData(0,0,r.width,r.height),delay:10*p}),2===d.disposal?r.drawingContext.clearRect(d.x,d.y,d.width,d.height):3===d.disposal&&r.drawingContext.putImageData(f,0,0,d.x,d.y,d.width,d.height)}var y=i.loopCount();null===y?y=1:0===y&&(y=null),r.drawingContext.putImageData(a[0].image,0,0),r.gifProperties={displayIndex:0,loopLimit:y,loopCount:0,frames:a,numFrames:s,playing:!0,timeDisplayed:0,lastChangeTime:0}}"function"==typeof t&&t(r);o()}(new Uint8Array(e),a,o,i,function(e){s._decrementPreload()}.bind(s))},function(e){"function"==typeof i?i(e):console.error(e)});else{var r=new Image;r.onload=function(){a.width=a.canvas.width=r.width,a.height=a.canvas.height=r.height,a.drawingContext.drawImage(r,0,0),a.modified=!0,"function"==typeof o&&o(a),s._decrementPreload()},r.onerror=function(e){x.default._friendlyFileLoadError(0,r.src),"function"==typeof i?i(e):console.error(e)},0!==n.indexOf("data:image/")&&(r.crossOrigin="Anonymous"),r.src=n}a.modified=!0}).catch(function(e){x.default._friendlyFileLoadError(0,n),"function"==typeof i?i(e):console.error(e)}),a},x.default.prototype.image=function(e,t,r,n,o,i,a,s,l){x.default._validateParameters("image",arguments);var u=e.width,c=e.height;e.elt&&e.elt.videoWidth&&!e.canvas&&(u=e.elt.videoWidth,c=e.elt.videoHeight);var d=t,f=r,h=n||u,p=o||c,y=i||0,m=a||0,g=s||u,v=l||c;g=j(g,u),v=j(v,c);var b=1;e.elt&&!e.canvas&&e.elt.style.width&&(b=e.elt.videoWidth&&!n?e.elt.videoWidth:e.elt.width,b/=parseInt(e.elt.style.width,10)),y*=b,m*=b,v*=b,g*=b;var _=w.default.modeAdjust(d,f,h,p,this._renderer._imageMode);this._renderer.image(e,y,m,g,v,_.x,_.y,_.w,_.h)},x.default.prototype.tint=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];x.default._validateParameters("tint",t);var n=this.color.apply(this,t);this._renderer._tint=n.levels},x.default.prototype.noTint=function(){this._renderer._tint=null},x.default.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=d.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var n=r.getContext("2d"),o=n.createImageData(e.canvas.width,e.canvas.height),i=o.data,a=0;a<t.length;a+=4){var s=t[a],l=t[a+1],u=t[a+2],c=t[a+3];i[a]=s*this._renderer._tint[0]/255,i[a+1]=l*this._renderer._tint[1]/255,i[a+2]=u*this._renderer._tint[2]/255,i[a+3]=c*this._renderer._tint[3]/255}return n.putImageData(o,0,0),r},x.default.prototype.imageMode=function(e){x.default._validateParameters("imageMode",arguments),e!==n.CORNER&&e!==n.CORNERS&&e!==n.CENTER||(this._renderer._imageMode=e)};var i=x.default;r.default=i},{"../core/constants":253,"../core/friendly_errors/fes_core":255,"../core/friendly_errors/file_errors":256,"../core/friendly_errors/validate_params":259,"../core/helpers":260,"../core/main":264,"./filters":285,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.to-string":177,"core-js/modules/es.promise":178,"core-js/modules/es.string.includes":185,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint8-array":226,"core-js/modules/es.typed-array.uint8-clamped-array":227,omggif:238}],288:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=i(e("../core/main")),n=i(e("./filters"));function i(e){return e&&e.__esModule?e:{default:e}}o.default.Image=function(e,t){this.width=e,this.height=t,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.drawingContext=this.canvas.getContext("2d"),(this._pixelsState=this)._pixelDensity=1,this.gifProperties=null,this._modified=!1,this.pixels=[]},o.default.Image.prototype._animateGif=function(e){var t=this.gifProperties,r=e._lastFrameTime;if(0===t.lastChangeTime&&(t.lastChangeTime=r),t.playing){t.timeDisplayed=r-t.lastChangeTime;var n=t.frames[t.displayIndex].delay;if(t.timeDisplayed>=n){var o=Math.floor(t.timeDisplayed/n);if(t.timeDisplayed=0,t.lastChangeTime=r,t.displayIndex+=o,t.loopCount=Math.floor(t.displayIndex/t.numFrames),null!==t.loopLimit&&t.loopCount>=t.loopLimit)t.playing=!1;else{var i=t.displayIndex%t.numFrames;this.drawingContext.putImageData(t.frames[i].image,0,0),t.displayIndex=i,this.setModified(!0)}}}},o.default.Image.prototype._setProperty=function(e,t){this[e]=t,this.setModified(!0)},o.default.Image.prototype.loadPixels=function(){o.default.Renderer2D.prototype.loadPixels.call(this),this.setModified(!0)},o.default.Image.prototype.updatePixels=function(e,t,r,n){o.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,n),this.setModified(!0)},o.default.Image.prototype.get=function(e,t,r,n){return o.default._validateParameters("p5.Image.get",arguments),o.default.Renderer2D.prototype.get.apply(this,arguments)},o.default.Image.prototype._getPixel=o.default.Renderer2D.prototype._getPixel,o.default.Image.prototype.set=function(e,t,r){o.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0)},o.default.Image.prototype.resize=function(e,t){0===e&&0===t?(e=this.canvas.width,t=this.canvas.height):0===e?e=this.canvas.width*t/this.canvas.height:0===t&&(t=this.canvas.height*e/this.canvas.width),e=Math.floor(e),t=Math.floor(t);var r=document.createElement("canvas");if(r.width=e,r.height=t,this.gifProperties)for(var n=this.gifProperties,o=function(e,t){for(var r=0,n=0;n<t.height;n++)for(var o=0;o<t.width;o++){var i=Math.floor(o*e.width/t.width),a=4*(Math.floor(n*e.height/t.height)*e.width+i);t.data[r++]=e.data[a++],t.data[r++]=e.data[a++],t.data[r++]=e.data[a++],t.data[r++]=e.data[a++]}},i=0;i<n.numFrames;i++){var a=this.drawingContext.createImageData(e,t);o(n.frames[i].image,a),n.frames[i].image=a}r.getContext("2d").drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,r.width,r.height),this.canvas.width=this.width=e,this.canvas.height=this.height=t,this.drawingContext.drawImage(r,0,0,e,t,0,0,e,t),0<this.pixels.length&&this.loadPixels(),this.setModified(!0)},o.default.Image.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default.prototype.copy.apply(this,t)},o.default.Image.prototype.mask=function(e){void 0===e&&(e=this);var t=this.drawingContext.globalCompositeOperation,r=1;e instanceof o.default.Renderer&&(r=e._pInst._pixelDensity);var n=[e,0,0,r*e.width,r*e.height,0,0,this.width,this.height];this.drawingContext.globalCompositeOperation="destination-in",o.default.Image.prototype.copy.apply(this,n),this.drawingContext.globalCompositeOperation=t,this.setModified(!0)},o.default.Image.prototype.filter=function(e,t){n.default.apply(this.canvas,n.default[e],t),this.setModified(!0)},o.default.Image.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("p5.Image.blend",arguments),o.default.prototype.blend.apply(this,t),this.setModified(!0)},o.default.Image.prototype.setModified=function(e){this._modified=e},o.default.Image.prototype.isModified=function(){return this._modified},o.default.Image.prototype.save=function(e,t){this.gifProperties?o.default.prototype.saveGif(this,e):o.default.prototype.saveCanvas(this.canvas,e,t)},o.default.Image.prototype.reset=function(){if(this.gifProperties){var e=this.gifProperties;e.playing=!0,e.timeSinceStart=0,e.timeDisplayed=0,e.lastChangeTime=0,e.loopCount=0,e.displayIndex=0,this.drawingContext.putImageData(e.frames[0].image,0,0)}},o.default.Image.prototype.getCurrentFrame=function(){if(this.gifProperties){var e=this.gifProperties;return e.displayIndex%e.numFrames}},o.default.Image.prototype.setFrame=function(e){if(this.gifProperties){var t=this.gifProperties;e<t.numFrames&&0<=e?(t.timeDisplayed=0,t.lastChangeTime=0,t.displayIndex=e,this.drawingContext.putImageData(t.frames[e].image,0,0)):console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero.")}},o.default.Image.prototype.numFrames=function(){if(this.gifProperties)return this.gifProperties.numFrames},o.default.Image.prototype.play=function(){this.gifProperties&&(this.gifProperties.playing=!0)},o.default.Image.prototype.pause=function(){this.gifProperties&&(this.gifProperties.playing=!1)},o.default.Image.prototype.delay=function(e,t){if(this.gifProperties){var r=this.gifProperties;if(t<r.numFrames&&0<=t)r.frames[t].delay=e;else{var n=!0,o=!1,i=void 0;try{for(var a,s=r.frames[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){a.value.delay=e}}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}}}};var a=o.default.Image;r.default=a},{"../core/main":264,"./filters":285,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],289:[function(e,t,r){"use strict";e("core-js/modules/es.array.filter"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var h=o(e("../core/main")),n=o(e("./filters"));function o(e){return e&&e.__esModule?e:{default:e}}e("../color/p5.Color"),h.default.prototype.pixels=[],h.default.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;(h.default._validateParameters("blend",t),this._renderer)?(n=this._renderer).blend.apply(n,t):h.default.Renderer2D.prototype.blend.apply(this,t)},h.default.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n,o,i,a,s,l,u,c,d;if(h.default._validateParameters("copy",t),9===t.length)n=t[0],o=t[1],i=t[2],a=t[3],s=t[4],l=t[5],u=t[6],c=t[7],d=t[8];else{if(8!==t.length)throw new Error("Signature not supported");n=this,o=t[0],i=t[1],a=t[2],s=t[3],l=t[4],u=t[5],c=t[6],d=t[7]}h.default.prototype._copyHelper(this,n,o,i,a,s,l,u,c,d)},h.default.prototype._copyHelper=function(e,t,r,n,o,i,a,s,l,u){t.loadPixels();var c=t.canvas.width/t.width,d=0,f=0;t._renderer&&t._renderer.isP3D&&(d=t.width/2,f=t.height/2),e._renderer&&e._renderer.isP3D?h.default.RendererGL.prototype.image.call(e._renderer,t,r+d,n+f,o,i,a,s,l,u):e.drawingContext.drawImage(t.canvas,c*(r+d),c*(n+f),c*o,c*i,a,s,l,u)},h.default.prototype.filter=function(e,t){h.default._validateParameters("filter",arguments),void 0!==this.canvas?n.default.apply(this.canvas,n.default[e],t):n.default.apply(this.elt,n.default[e],t)},h.default.prototype.get=function(e,t,r,n){var o;return h.default._validateParameters("get",arguments),(o=this._renderer).get.apply(o,arguments)},h.default.prototype.loadPixels=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];h.default._validateParameters("loadPixels",t),this._renderer.loadPixels()},h.default.prototype.set=function(e,t,r){this._renderer.set(e,t,r)},h.default.prototype.updatePixels=function(e,t,r,n){h.default._validateParameters("updatePixels",arguments),0!==this.pixels.length&&this._renderer.updatePixels(e,t,r,n)};var i=h.default;r.default=i},{"../color/p5.Color":251,"../core/main":264,"./filters":285,"core-js/modules/es.array.filter":152}],290:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.last-index-of"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.array.splice"),e("core-js/modules/es.function.name"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.promise"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.split"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),e("core-js/modules/web.url"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var g=n(e("../core/main"));e("whatwg-fetch"),e("es6-promise/auto");var m=n(e("fetch-jsonp")),s=n(e("file-saver"));function n(e){return e&&e.__esModule?e:{default:e}}function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){var r={};if(void 0===(t=t||[]))for(var n=0;n<e.length;n++)t[n.toString()]=n;for(var o=0;o<t.length;o++){var i=t[o],a=e[o];r[i]=a}return r}function y(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function l(e,t){t&&!0!==t&&"true"!==t||(t="");var r="";return(e=e||"untitled")&&e.includes(".")&&(r=e.split(".").pop()),t&&r!==t&&(r=t,e="".concat(e,".").concat(r)),[e,r]}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),g.default.prototype.loadJSON=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];g.default._validateParameters("loadJSON",t);for(var n,o,i,a=t[0],s={},l="json",u=1;u<t.length;u++){var c=t[u];"string"==typeof c?"jsonp"!==c&&"json"!==c||(l=c):"function"==typeof c?n?o=c:n=c:"object"===v(c)&&(c.hasOwnProperty("jsonpCallback")||c.hasOwnProperty("jsonpCallbackFunction"))&&(l="jsonp",i=c)}var d=this;return this.httpDo(a,"GET",i,l,function(e){for(var t in e)s[t]=e[t];void 0!==n&&n(e),d._decrementPreload()},function(e){if(g.default._friendlyFileLoadError(5,a),!o)throw e;o(e)}),s},g.default.prototype.loadStrings=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];g.default._validateParameters("loadStrings",t);for(var o,n,i=[],a=1;a<t.length;a++){var s=t[a];"function"==typeof s&&(void 0===o?o=s:void 0===n&&(n=s))}var l=this;return g.default.prototype.httpDo.call(this,t[0],"GET","text",function(e){for(var t=e.replace(/\r\n/g,"\r").replace(/\n/g,"\r").split(/\r/),r=0,n=t.length;r<n;r+=32768)Array.prototype.push.apply(i,t.slice(r,Math.min(r+32768,n)));void 0!==o&&o(i),l._decrementPreload()},function(e){if(g.default._friendlyFileLoadError(3,e),!n)throw e;n(e)}),i},g.default.prototype.loadTable=function(t){var f,r,h,e=[],p=!1,n=t.substring(t.lastIndexOf(".")+1,t.length);"csv"===n?h=",":"ssv"===n?h=";":"tsv"===n&&(h="\t");for(var o=1;o<arguments.length;o++)"function"==typeof arguments[o]?void 0===f?f=arguments[o]:void 0===r&&(r=arguments[o]):"string"==typeof arguments[o]&&(e.push(arguments[o]),"header"===arguments[o]&&(p=!0),"csv"===arguments[o]?h=",":"ssv"===arguments[o]?h=";":"tsv"===arguments[o]&&(h="\t"));var y=new g.default.Table,m=this;return this.httpDo(t,"GET","table",function(e){for(var t,r,n={},o=[],i=0,a=null,s=function(){n.currentState=0,n.token=""},l=function(){a.push(n.token),s()},u=function(){n.currentState=4,o.push(a),a=null};;){if(null==(t=e[i++])){if(n.escaped)throw new Error("Unclosed quote in file.");if(a){l(),u();break}}if(null===a&&(n.escaped=!1,a=[],s()),0===n.currentState){if('"'===t){n.escaped=!0,n.currentState=1;continue}n.currentState=1}if(1===n.currentState&&n.escaped)if('"'===t)'"'===e[i]?(n.token+='"',i++):(n.escaped=!1,n.currentState=2);else{if("\r"===t)continue;n.token+=t}else"\r"===t?("\n"===e[i]&&i++,l(),u()):"\n"===t?(l(),u()):t===h?l():1===n.currentState&&(n.token+=t)}if(p)y.columns=o.shift();else for(var c=0;c<o[0].length;c++)y.columns[c]="null";for(var d=0;d<o.length;d++)(1!==o[d].length||"undefined"!==o[d][0]&&""!==o[d][0])&&((r=new g.default.TableRow).arr=o[d],r.obj=b(o[d],y.columns),y.addRow(r));"function"==typeof f&&f(y),m._decrementPreload()},function(e){g.default._friendlyFileLoadError(2,t),r?r(e):console.error(e)}),y},g.default.prototype.loadXML=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var n,o,i=new g.default.XML,a=1;a<t.length;a++){var s=t[a];"function"==typeof s&&(void 0===n?n=s:void 0===o&&(o=s))}var l=this;return this.httpDo(t[0],"GET","xml",function(e){for(var t in e)i[t]=e[t];void 0!==n&&n(i),l._decrementPreload()},function(e){if(g.default._friendlyFileLoadError(1,e),!o)throw e;o(e)}),i},g.default.prototype.loadBytes=function(t,r,n){var o={},i=this;return this.httpDo(t,"GET","arrayBuffer",function(e){o.bytes=new Uint8Array(e),"function"==typeof r&&r(o),i._decrementPreload()},function(e){if(g.default._friendlyFileLoadError(6,t),!n)throw e;n(e)}),o},g.default.prototype.httpGet=function(){g.default._validateParameters("httpGet",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"GET"),g.default.prototype.httpDo.apply(this,e)},g.default.prototype.httpPost=function(){g.default._validateParameters("httpPost",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"POST"),g.default.prototype.httpDo.apply(this,e)},g.default.prototype.httpDo=function(){for(var n,e,t,r,o,i={},a=0,s="text/plain",l=arguments.length-1;0<l&&"function"==typeof(l<0||arguments.length<=l?void 0:arguments[l]);l--)a++;var u=arguments.length<=0?void 0:arguments[0];if(2==arguments.length-a&&"string"==typeof u&&"object"===v(arguments.length<=1?void 0:arguments[1]))r=new Request(u,arguments.length<=1?void 0:arguments[1]),e=arguments.length<=2?void 0:arguments[2],t=arguments.length<=3?void 0:arguments[3];else{for(var c,d="GET",f=1;f<arguments.length;f++){var h=f<0||arguments.length<=f?void 0:arguments[f];if("string"==typeof h)"GET"===h||"POST"===h||"PUT"===h||"DELETE"===h?d=h:"json"===h||"jsonp"===h||"binary"===h||"arrayBuffer"===h||"xml"===h||"text"===h||"table"===h?n=h:c=h;else if("number"==typeof h)c=h.toString();else if("object"===v(h))if(h.hasOwnProperty("jsonpCallback")||h.hasOwnProperty("jsonpCallbackFunction"))for(var p in h)i[p]=h[p];else s=h instanceof g.default.XML?(c=h.serialize(),"application/xml"):(c=JSON.stringify(h),"application/json");else"function"==typeof h&&(e?t=h:e=h)}var y="GET"===d?new Headers:new Headers({"Content-Type":s});r=new Request(u,{method:d,mode:"cors",body:c,headers:y})}return(o=(o="jsonp"===(n=n||(u.includes("json")?"json":u.includes("xml")?"xml":"text"))?(0,m.default)(u,i):fetch(r)).then(function(e){if(!e.ok){var t=new Error(e.body);throw t.status=e.status,t.ok=!1,t}var r=0;switch("jsonp"!==n&&(r=e.headers.get("content-length")),r&&64e6<r&&g.default._friendlyFileLoadError(7,u),n){case"json":case"jsonp":return e.json();case"binary":return e.blob();case"arrayBuffer":return e.arrayBuffer();case"xml":return e.text().then(function(e){var t=(new DOMParser).parseFromString(e,"text/xml");return new g.default.XML(t.documentElement)});default:return e.text()}})).then(e||function(){}),o.catch(t||console.error),o},window.URL=window.URL||window.webkitURL,g.default.prototype._pWriters=[],g.default.prototype.createWriter=function(e,t){var r;for(var n in g.default.prototype._pWriters)if(g.default.prototype._pWriters[n].name===e)return r=new g.default.PrintWriter(e+this.millis(),t),g.default.prototype._pWriters.push(r),r;return r=new g.default.PrintWriter(e,t),g.default.prototype._pWriters.push(r),r},g.default.PrintWriter=function(r,n){var o=this;this.name=r,this.content="",this.write=function(e){this.content+=e},this.print=function(e){this.content+="".concat(e,"\n")},this.clear=function(){this.content=""},this.close=function(){var e=[];for(var t in e.push(this.content),g.default.prototype.writeFile(e,r,n),g.default.prototype._pWriters)g.default.prototype._pWriters[t].name===this.name&&g.default.prototype._pWriters.splice(t,1);o.clear(),o={}}},g.default.prototype.save=function(e,t,r){var n=arguments,o=this._curElement?this._curElement.elt:this.elt;if(0!==n.length)if(n[0]instanceof g.default.Renderer||n[0]instanceof g.default.Graphics)g.default.prototype.saveCanvas(n[0].elt,n[1],n[2]);else if(1===n.length&&"string"==typeof n[0])g.default.prototype.saveCanvas(o,n[0]);else switch(l(n[1],n[2])[1]){case"json":return void g.default.prototype.saveJSON(n[0],n[1],n[2]);case"txt":return void g.default.prototype.saveStrings(n[0],n[1],n[2]);default:n[0]instanceof Array?g.default.prototype.saveStrings(n[0],n[1],n[2]):n[0]instanceof g.default.Table?g.default.prototype.saveTable(n[0],n[1],n[2]):n[0]instanceof g.default.Image?g.default.prototype.saveCanvas(n[0].canvas,n[1]):n[0]instanceof g.default.SoundFile&&g.default.prototype.saveSound(n[0],n[1],n[2],n[3])}else g.default.prototype.saveCanvas(o)},g.default.prototype.saveJSON=function(e,t,r){var n;g.default._validateParameters("saveJSON",arguments),n=r?JSON.stringify(e):JSON.stringify(e,void 0,2),this.saveStrings(n.split("\n"),t,"json")},g.default.prototype.saveJSONObject=g.default.prototype.saveJSON,g.default.prototype.saveJSONArray=g.default.prototype.saveJSON,g.default.prototype.saveStrings=function(e,t,r,n){g.default._validateParameters("saveStrings",arguments);for(var o=r||"txt",i=this.createWriter(t,o),a=0;a<e.length;a++)n?i.write(e[a]+"\r\n"):i.write(e[a]+"\n");i.close(),i.clear()},g.default.prototype.saveTable=function(e,t,r){var n;g.default._validateParameters("saveTable",arguments),n=void 0===r?t.substring(t.lastIndexOf(".")+1,t.length):r;var o=this.createWriter(t,n),i=e.columns,a=",";if("tsv"===n&&(a="\t"),"html"!==n){if("0"!==i[0]){for(var s=0;s<i.length;s++)s<i.length-1?o.write(i[s]+a):o.write(i[s]);o.write("\n")}for(var l=0;l<e.rows.length;l++){var u=void 0;for(u=0;u<e.rows[l].arr.length;u++)u<e.rows[l].arr.length-1?"csv"===n&&String(e.rows[l].arr[u]).includes(",")?o.write('"'+e.rows[l].arr[u]+'"'+a):o.write(e.rows[l].arr[u]+a):"csv"===n&&String(e.rows[l].arr[u]).includes(",")?o.write('"'+e.rows[l].arr[u]+'"'):o.write(e.rows[l].arr[u]);o.write("\n")}}else{o.print("<html>"),o.print("<head>");if(o.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'),o.print("</head>"),o.print("<body>"),o.print("  <table>"),"0"!==i[0]){o.print("    <tr>");for(var c=0;c<i.length;c++){var d=y(i[c]);o.print("      <td>".concat(d)),o.print("      </td>")}o.print("    </tr>")}for(var f=0;f<e.rows.length;f++){o.print("    <tr>");for(var h=0;h<e.columns.length;h++){var p=y(e.rows[f].getString(h));o.print("      <td>".concat(p)),o.print("      </td>")}o.print("    </tr>")}o.print("  </table>"),o.print("</body>"),o.print("</html>")}o.close(),o.clear()},g.default.prototype.writeFile=function(e,t,r){var n="application/octet-stream";g.default.prototype._isSafari()&&(n="text/plain");var o=new Blob(e,{type:n});g.default.prototype.downloadFile(o,t,r)},g.default.prototype.downloadFile=function(e,t,r){var n=l(t,r),o=n[0];if(e instanceof Blob)s.default.saveAs(e,o);else{var i=document.createElement("a");if(i.href=e,i.download=o,i.onclick=function(e){var t;t=e,document.body.removeChild(t.target),e.stopPropagation()},i.style.display="none",document.body.appendChild(i),g.default.prototype._isSafari()){var a="Hello, Safari user! To download this file...\n";a+="1. Go to File --\x3e Save As.\n",a+='2. Choose "Page Source" as the Format.\n',a+='3. Name it with this extension: ."'.concat(n[1],'"'),alert(a)}i.click()}},g.default.prototype._checkFileExtension=l,g.default.prototype._isSafari=function(){return 0<Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")};var o=g.default;r.default=o},{"../core/friendly_errors/fes_core":255,"../core/friendly_errors/file_errors":256,"../core/friendly_errors/validate_params":259,"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.last-index-of":160,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.splice":164,"core-js/modules/es.function.name":166,"core-js/modules/es.object.to-string":177,"core-js/modules/es.promise":178,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.includes":185,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.split":191,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint8-array":226,"core-js/modules/web.dom-collections.iterator":229,"core-js/modules/web.url":231,"es6-promise/auto":232,"fetch-jsonp":234,"file-saver":235,"whatwg-fetch":242}],291:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.join"),e("core-js/modules/es.array.splice"),e("core-js/modules/es.regexp.constructor"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.match"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.trim"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.Table=function(e){this.columns=[],this.rows=[]},o.default.Table.prototype.addRow=function(e){var t=e||new o.default.TableRow;if(void 0===t.arr||void 0===t.obj)throw new Error("invalid TableRow: ".concat(t));return(t.table=this).rows.push(t),t},o.default.Table.prototype.removeRow=function(e){this.rows[e].table=null;var t=this.rows.splice(e+1,this.rows.length);this.rows.pop(),this.rows=this.rows.concat(t)},o.default.Table.prototype.getRow=function(e){return this.rows[e]},o.default.Table.prototype.getRows=function(){return this.rows},o.default.Table.prototype.findRow=function(e,t){if("string"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].obj[t]===e)return this.rows[r]}else for(var n=0;n<this.rows.length;n++)if(this.rows[n].arr[t]===e)return this.rows[n];return null},o.default.Table.prototype.findRows=function(e,t){var r=[];if("string"==typeof t)for(var n=0;n<this.rows.length;n++)this.rows[n].obj[t]===e&&r.push(this.rows[n]);else for(var o=0;o<this.rows.length;o++)this.rows[o].arr[t]===e&&r.push(this.rows[o]);return r},o.default.Table.prototype.matchRow=function(e,t){if("number"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].arr[t].match(e))return this.rows[r]}else for(var n=0;n<this.rows.length;n++)if(this.rows[n].obj[t].match(e))return this.rows[n];return null},o.default.Table.prototype.matchRows=function(e,t){var r=[];if("number"==typeof t)for(var n=0;n<this.rows.length;n++)this.rows[n].arr[t].match(e)&&r.push(this.rows[n]);else for(var o=0;o<this.rows.length;o++)this.rows[o].obj[t].match(e)&&r.push(this.rows[o]);return r},o.default.Table.prototype.getColumn=function(e){var t=[];if("string"==typeof e)for(var r=0;r<this.rows.length;r++)t.push(this.rows[r].obj[e]);else for(var n=0;n<this.rows.length;n++)t.push(this.rows[n].arr[e]);return t},o.default.Table.prototype.clearRows=function(){delete this.rows,this.rows=[]},o.default.Table.prototype.addColumn=function(e){var t=e||null;this.columns.push(t)},o.default.Table.prototype.getColumnCount=function(){return this.columns.length},o.default.Table.prototype.getRowCount=function(){return this.rows.length},o.default.Table.prototype.removeTokens=function(e,t){for(var r=[],n=0;n<e.length;n++)r.push(e.charAt(n).replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"));var o=new RegExp(r.join("|"),"g");if(void 0===t)for(var i=0;i<this.columns.length;i++)for(var a=0;a<this.rows.length;a++){var s=this.rows[a].arr[i];s=s.replace(o,""),this.rows[a].arr[i]=s,this.rows[a].obj[this.columns[i]]=s}else if("string"==typeof t)for(var l=0;l<this.rows.length;l++){var u=this.rows[l].obj[t];u=u.replace(o,""),this.rows[l].obj[t]=u;var c=this.columns.indexOf(t);this.rows[l].arr[c]=u}else for(var d=0;d<this.rows.length;d++){var f=this.rows[d].arr[t];f=f.replace(o,""),this.rows[d].arr[t]=f,this.rows[d].obj[this.columns[t]]=f}},o.default.Table.prototype.trim=function(e){var t=new RegExp(" ","g");if(void 0===e)for(var r=0;r<this.columns.length;r++)for(var n=0;n<this.rows.length;n++){var o=this.rows[n].arr[r];o=o.replace(t,""),this.rows[n].arr[r]=o,this.rows[n].obj[this.columns[r]]=o}else if("string"==typeof e)for(var i=0;i<this.rows.length;i++){var a=this.rows[i].obj[e];a=a.replace(t,""),this.rows[i].obj[e]=a;var s=this.columns.indexOf(e);this.rows[i].arr[s]=a}else for(var l=0;l<this.rows.length;l++){var u=this.rows[l].arr[e];u=u.replace(t,""),this.rows[l].arr[e]=u,this.rows[l].obj[this.columns[e]]=u}},o.default.Table.prototype.removeColumn=function(e){var t,r;"string"==typeof e?(t=e,r=this.columns.indexOf(e)):(r=e,t=this.columns[e]);var n=this.columns.splice(r+1,this.columns.length);this.columns.pop(),this.columns=this.columns.concat(n);for(var o=0;o<this.rows.length;o++){var i=this.rows[o].arr,a=i.splice(r+1,i.length);i.pop(),this.rows[o].arr=i.concat(a),delete this.rows[o].obj[t]}},o.default.Table.prototype.set=function(e,t,r){this.rows[e].set(t,r)},o.default.Table.prototype.setNum=function(e,t,r){this.rows[e].setNum(t,r)},o.default.Table.prototype.setString=function(e,t,r){this.rows[e].setString(t,r)},o.default.Table.prototype.get=function(e,t){return this.rows[e].get(t)},o.default.Table.prototype.getNum=function(e,t){return this.rows[e].getNum(t)},o.default.Table.prototype.getString=function(e,t){return this.rows[e].getString(t)},o.default.Table.prototype.getObject=function(e){for(var t,r={},n=0;n<this.rows.length;n++)if(t=this.rows[n].obj,"string"==typeof e){if(!(0<=this.columns.indexOf(e)))throw new Error('This table has no column named "'.concat(e,'"'));r[t[e]]=t}else r[n]=this.rows[n].obj;return r},o.default.Table.prototype.getArray=function(){for(var e=[],t=0;t<this.rows.length;t++)e.push(this.rows[t].arr);return e};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.join":159,"core-js/modules/es.array.splice":164,"core-js/modules/es.regexp.constructor":180,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.match":187,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.trim":193}],292:[function(e,t,r){"use strict";e("core-js/modules/es.array.index-of"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.split"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.TableRow=function(e,t){var r=[],n={};e&&(t=t||",",r=e.split(t));for(var o=0;o<r.length;o++){var i=o,a=r[o];n[i]=a}this.arr=r,this.obj=n,this.table=null},o.default.TableRow.prototype.set=function(e,t){if("string"==typeof e){var r=this.table.columns.indexOf(e);if(!(0<=r))throw new Error('This table has no column named "'.concat(e,'"'));this.obj[e]=t,this.arr[r]=t}else{if(!(e<this.table.columns.length))throw new Error("Column #".concat(e," is out of the range of this table"));this.arr[e]=t;var n=this.table.columns[e];this.obj[n]=t}},o.default.TableRow.prototype.setNum=function(e,t){var r=parseFloat(t);this.set(e,r)},o.default.TableRow.prototype.setString=function(e,t){var r=t.toString();this.set(e,r)},o.default.TableRow.prototype.get=function(e){return"string"==typeof e?this.obj[e]:this.arr[e]},o.default.TableRow.prototype.getNum=function(e){var t;if("NaN"===(t="string"==typeof e?parseFloat(this.obj[e]):parseFloat(this.arr[e])).toString())throw"Error: ".concat(this.obj[e]," is NaN (Not a Number)");return t},o.default.TableRow.prototype.getString=function(e){return"string"==typeof e?this.obj[e].toString():this.arr[e].toString()};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.index-of":157,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.split":191}],293:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.number.constructor"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.replace"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e){for(var t=[],r=0;r<e.length;r++)t.push(new s.default.XML(e[r]));return t}s.default.XML=function(e){if(e)this.DOM=e;else{var t=document.implementation.createDocument(null,"doc");this.DOM=t.createElement("root")}},s.default.XML.prototype.getParent=function(){return new s.default.XML(this.DOM.parentElement)},s.default.XML.prototype.getName=function(){return this.DOM.tagName},s.default.XML.prototype.setName=function(e){var t=this.DOM.innerHTML,r=this.DOM.attributes,n=document.implementation.createDocument(null,"default").createElement(e);n.innerHTML=t;for(var o=0;o<r.length;o++)n.setAttribute(r[o].nodeName,r.nodeValue);this.DOM=n},s.default.XML.prototype.hasChildren=function(){return 0<this.DOM.children.length},s.default.XML.prototype.listChildren=function(){for(var e=[],t=0;t<this.DOM.childNodes.length;t++)e.push(this.DOM.childNodes[t].nodeName);return e},s.default.XML.prototype.getChildren=function(e){return o(e?this.DOM.getElementsByTagName(e):this.DOM.children)},s.default.XML.prototype.getChild=function(e){if("string"!=typeof e)return new s.default.XML(this.DOM.children[e]);var t=!0,r=!1,n=void 0;try{for(var o,i=this.DOM.children[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;if(a.tagName===e)return new s.default.XML(a)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}},s.default.XML.prototype.addChild=function(e){e instanceof s.default.XML&&this.DOM.appendChild(e.DOM)},s.default.XML.prototype.removeChild=function(e){var t=-1;if("string"==typeof e){for(var r=0;r<this.DOM.children.length;r++)if(this.DOM.children[r].tagName===e){t=r;break}}else t=e;-1!==t&&this.DOM.removeChild(this.DOM.children[t])},s.default.XML.prototype.getAttributeCount=function(){return this.DOM.attributes.length},s.default.XML.prototype.listAttributes=function(){var e=[],t=!0,r=!1,n=void 0;try{for(var o,i=this.DOM.attributes[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;e.push(a.nodeName)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}return e},s.default.XML.prototype.hasAttribute=function(e){var t={},r=!0,n=!1,o=void 0;try{for(var i,a=this.DOM.attributes[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value;t[s.nodeName]=s.nodeValue}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}return!!t[e]},s.default.XML.prototype.getNum=function(e,t){var r={},n=!0,o=!1,i=void 0;try{for(var a,s=this.DOM.attributes[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;r[l.nodeName]=l.nodeValue}}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return Number(r[e])||t||0},s.default.XML.prototype.getString=function(e,t){var r={},n=!0,o=!1,i=void 0;try{for(var a,s=this.DOM.attributes[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;r[l.nodeName]=l.nodeValue}}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r[e]?String(r[e]):t||null},s.default.XML.prototype.setAttribute=function(e,t){this.DOM.setAttribute(e,t)},s.default.XML.prototype.getContent=function(e){return this.DOM.textContent.replace(/\s\s+/g,",")||e||null},s.default.XML.prototype.setContent=function(e){this.DOM.children.length||(this.DOM.textContent=e)},s.default.XML.prototype.serialize=function(){return(new XMLSerializer).serializeToString(this.DOM)};var i=s.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.iterator":158,"core-js/modules/es.number.constructor":170,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.replace":189,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],294:[function(e,t,r){"use strict";e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.math.hypot"),e("core-js/modules/es.number.constructor"),e("core-js/modules/es.string.includes"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(){if("function"==typeof Math.hypot)return Math.hypot.apply(null,arguments);for(var e=arguments.length,t=[],r=0,n=0;n<e;n++){var o=arguments[n];if((o=+o)===1/0||o===-1/0)return 1/0;r<(o=Math.abs(o))&&(r=o),t[n]=o}0===r&&(r=1);for(var i=0,a=0,s=0;s<e;s++){var l=t[s]/r,u=l*l-a,c=i+u;a=c-i-u,i=c}return Math.sqrt(i)*r}s.default.prototype.abs=Math.abs,s.default.prototype.ceil=Math.ceil,s.default.prototype.constrain=function(e,t,r){return s.default._validateParameters("constrain",arguments),Math.max(Math.min(e,r),t)},s.default.prototype.dist=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return s.default._validateParameters("dist",t),4===t.length?o(t[2]-t[0],t[3]-t[1]):6===t.length?o(t[3]-t[0],t[4]-t[1],t[5]-t[2]):void 0},s.default.prototype.exp=Math.exp,s.default.prototype.floor=Math.floor,s.default.prototype.lerp=function(e,t,r){return s.default._validateParameters("lerp",arguments),r*(t-e)+e},s.default.prototype.log=Math.log,s.default.prototype.mag=function(e,t){return s.default._validateParameters("mag",arguments),o(e,t)},s.default.prototype.map=function(e,t,r,n,o,i){s.default._validateParameters("map",arguments);var a=(e-t)/(r-t)*(o-n)+n;return i?n<o?this.constrain(a,n,o):this.constrain(a,o,n):a},s.default.prototype.max=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t[0]instanceof Array?Math.max.apply(null,t[0]):Math.max.apply(null,t)},s.default.prototype.min=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t[0]instanceof Array?Math.min.apply(null,t[0]):Math.min.apply(null,t)},s.default.prototype.norm=function(e,t,r){return s.default._validateParameters("norm",arguments),this.map(e,t,r,0,1)},s.default.prototype.pow=Math.pow,s.default.prototype.round=function(e,t){if(!t)return Math.round(e);var r=Math.pow(10,t);return Math.round(e*r)/r},s.default.prototype.sq=function(e){return e*e},s.default.prototype.sqrt=Math.sqrt,s.default.prototype.fract=function(e){s.default._validateParameters("fract",arguments);var t=0,r=Number(e);if(isNaN(r)||Math.abs(r)===1/0)return r;if(r<0&&(r=-r,t=1),!String(r).includes(".")||String(r).includes("e"))return r<1?Math.abs(t-r):0;var n=String(r);return n=Number("0"+n.slice(n.indexOf("."))),Math.abs(t-n)};var i=s.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.math.hypot":168,"core-js/modules/es.number.constructor":170,"core-js/modules/es.string.includes":185}],295:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.reflect.construct"),e("core-js/modules/es.regexp.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function i(e,t,r){return(i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&a(o,r.prototype),o}).apply(null,arguments)}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}o.default.prototype.createVector=function(e,t,r){return this instanceof o.default?i(o.default.Vector,[this._fromRadians.bind(this),this._toRadians.bind(this)].concat(Array.prototype.slice.call(arguments))):new o.default.Vector(e,t,r)};var s=o.default;r.default=s},{"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.to-string":177,"core-js/modules/es.reflect.construct":179,"core-js/modules/es.regexp.to-string":182}],296:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function b(e){return.5*(1-Math.cos(e*Math.PI))}var _,x=4095,w=4,j=.5;o.default.prototype.noise=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;if(null==_){_=new Array(4096);for(var n=0;n<4096;n++)_[n]=Math.random()}e<0&&(e=-e),t<0&&(t=-t),r<0&&(r=-r);for(var o,i,a,s,l,u=Math.floor(e),c=Math.floor(t),d=Math.floor(r),f=e-u,h=t-c,p=r-d,y=0,m=.5,g=0;g<w;g++){var v=u+(c<<4)+(d<<8);o=b(f),i=b(h),a=_[v&x],a+=o*(_[v+1&x]-a),s=_[v+16&x],a+=i*((s+=o*(_[v+16+1&x]-s))-a),s=_[(v+=256)&x],s+=o*(_[v+1&x]-s),l=_[v+16&x],s+=i*((l+=o*(_[v+16+1&x]-l))-s),y+=(a+=b(p)*(s-a))*m,m*=j,u<<=1,c<<=1,d<<=1,1<=(f*=2)&&(u++,f--),1<=(h*=2)&&(c++,h--),1<=(p*=2)&&(d++,p--)}return y},o.default.prototype.noiseDetail=function(e,t){0<e&&(w=e),0<t&&(j=t)},o.default.prototype.noiseSeed=function(e){var t,r,n,o=(n=4294967296,{setSeed:function(e){r=t=(null==e?Math.random()*n:e)>>>0},getSeed:function(){return t},rand:function(){return(r=(1664525*r+1013904223)%n)/n}});o.setSeed(e),_=new Array(4096);for(var i=0;i<4096;i++)_[i]=o.rand()};var i=o.default;r.default=i},{"../core/main":264}],297:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.every"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.array.some"),e("core-js/modules/es.math.sign"),e("core-js/modules/es.number.constructor"),e("core-js/modules/es.number.is-finite"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.sub"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,l=(n=e("../core/main"))&&n.__esModule?n:{default:n},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}l.default.Vector=function(e,t,r,n,o){var i,a,s;s="[object Function]"==={}.toString.call(e)?(this.isPInst=!0,this._fromRadians=e,this._toRadians=t,i=r||0,a=n||0,o||0):(i=e||0,a=t||0,r||0),this.x=i,this.y=a,this.z=s},l.default.Vector.prototype.toString=function(){return"p5.Vector Object : [".concat(this.x,", ").concat(this.y,", ").concat(this.z,"]")},l.default.Vector.prototype.set=function(e,t,r){return e instanceof l.default.Vector?(this.x=e.x||0,this.y=e.y||0,this.z=e.z||0):e instanceof Array?(this.x=e[0]||0,this.y=e[1]||0,this.z=e[2]||0):(this.x=e||0,this.y=t||0,this.z=r||0),this},l.default.Vector.prototype.copy=function(){return this.isPInst?new l.default.Vector(this._fromRadians,this._toRadians,this.x,this.y,this.z):new l.default.Vector(this.x,this.y,this.z)},l.default.Vector.prototype.add=function(e,t,r){return e instanceof l.default.Vector?(this.x+=e.x||0,this.y+=e.y||0,this.z+=e.z||0):e instanceof Array?(this.x+=e[0]||0,this.y+=e[1]||0,this.z+=e[2]||0):(this.x+=e||0,this.y+=t||0,this.z+=r||0),this};function u(e,t){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),this}function c(e,t,r){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),0!==r&&(this.z=this.z%r),this}l.default.Vector.prototype.rem=function(e,t,r){if(e instanceof l.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)){var n=parseFloat(e.x),o=parseFloat(e.y),i=parseFloat(e.z);return c.call(this,n,o,i)}}else if(e instanceof Array){if(e.every(function(e){return Number.isFinite(e)})){if(2===e.length)return u.call(this,e[0],e[1]);if(3===e.length)return c.call(this,e[0],e[1],e[2])}}else if(1===arguments.length){if(Number.isFinite(e)&&0!==e)return this.x=this.x%e,this.y=this.y%e,this.z=this.z%e,this}else if(2===arguments.length){var a=Array.prototype.slice.call(arguments);if(a.every(function(e){return Number.isFinite(e)})&&2===a.length)return u.call(this,a[0],a[1])}else if(3===arguments.length){var s=Array.prototype.slice.call(arguments);if(s.every(function(e){return Number.isFinite(e)})&&3===s.length)return c.call(this,s[0],s[1],s[2])}},l.default.Vector.prototype.sub=function(e,t,r){return e instanceof l.default.Vector?(this.x-=e.x||0,this.y-=e.y||0,this.z-=e.z||0):e instanceof Array?(this.x-=e[0]||0,this.y-=e[1]||0,this.z-=e[2]||0):(this.x-=e||0,this.y-=t||0,this.z-=r||0),this},l.default.Vector.prototype.mult=function(e,t,r){if(e instanceof l.default.Vector)return Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z?(this.x*=e.x,this.y*=e.y,this.z*=e.z):console.warn("p5.Vector.prototype.mult:","x contains components that are either undefined or not finite numbers"),this;if(e instanceof Array)return e.every(function(e){return Number.isFinite(e)})&&e.every(function(e){return"number"==typeof e})?1===e.length?(this.x*=e[0],this.y*=e[0],this.z*=e[0]):2===e.length?(this.x*=e[0],this.y*=e[1]):3===e.length&&(this.x*=e[0],this.y*=e[1],this.z*=e[2]):console.warn("p5.Vector.prototype.mult:","x contains elements that are either undefined or not finite numbers"),this;var n=Array.prototype.slice.call(arguments);return n.every(function(e){return Number.isFinite(e)})&&n.every(function(e){return"number"==typeof e})?(1===arguments.length&&(this.x*=e,this.y*=e,this.z*=e),2===arguments.length&&(this.x*=e,this.y*=t),3===arguments.length&&(this.x*=e,this.y*=t,this.z*=r)):console.warn("p5.Vector.prototype.mult:","x, y, or z arguments are either undefined or not a finite number"),this},l.default.Vector.prototype.div=function(e,t,r){if(e instanceof l.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z){if(0===e.x||0===e.y||0===e.z)return console.warn("p5.Vector.prototype.div:","divide by 0"),this;this.x/=e.x,this.y/=e.y,this.z/=e.z}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}if(e instanceof Array){if(e.every(function(e){return Number.isFinite(e)})&&e.every(function(e){return"number"==typeof e})){if(e.some(function(e){return 0===e}))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===e.length?(this.x/=e[0],this.y/=e[0],this.z/=e[0]):2===e.length?(this.x/=e[0],this.y/=e[1]):3===e.length&&(this.x/=e[0],this.y/=e[1],this.z/=e[2])}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}var n=Array.prototype.slice.call(arguments);if(n.every(function(e){return Number.isFinite(e)})&&n.every(function(e){return"number"==typeof e})){if(n.some(function(e){return 0===e}))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===arguments.length&&(this.x/=e,this.y/=e,this.z/=e),2===arguments.length&&(this.x/=e,this.y/=t),3===arguments.length&&(this.x/=e,this.y/=t,this.z/=r)}else console.warn("p5.Vector.prototype.div:","x, y, or z arguments are either undefined or not a finite number");return this},l.default.Vector.prototype.mag=function(){return Math.sqrt(this.magSq())},l.default.Vector.prototype.magSq=function(){var e=this.x,t=this.y,r=this.z;return e*e+t*t+r*r},l.default.Vector.prototype.dot=function(e,t,r){return e instanceof l.default.Vector?this.dot(e.x,e.y,e.z):this.x*(e||0)+this.y*(t||0)+this.z*(r||0)},l.default.Vector.prototype.cross=function(e){var t=this.y*e.z-this.z*e.y,r=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return this.isPInst?new l.default.Vector(this._fromRadians,this._toRadians,t,r,n):new l.default.Vector(t,r,n)},l.default.Vector.prototype.dist=function(e){return e.copy().sub(this).mag()},l.default.Vector.prototype.normalize=function(){var e=this.mag();return 0!==e&&this.mult(1/e),this},l.default.Vector.prototype.limit=function(e){var t=this.magSq();return e*e<t&&this.div(Math.sqrt(t)).mult(e),this},l.default.Vector.prototype.setMag=function(e){return this.normalize().mult(e)},l.default.Vector.prototype.heading=function(){var e=Math.atan2(this.y,this.x);return this.isPInst?this._fromRadians(e):e},l.default.Vector.prototype.setHeading=function(e){var t=this.mag();return this.x=t*Math.cos(e),this.y=t*Math.sin(e),this},l.default.Vector.prototype.rotate=function(e){var t=this.heading()+e;this.isPInst&&(t=this._toRadians(t));var r=this.mag();return this.x=Math.cos(t)*r,this.y=Math.sin(t)*r,this},l.default.Vector.prototype.angleBetween=function(e){var t,r=this.dot(e)/(this.mag()*e.mag());return t=Math.acos(Math.min(1,Math.max(-1,r))),t*=Math.sign(this.cross(e).z||1),this.isPInst&&(t=this._fromRadians(t)),t},l.default.Vector.prototype.lerp=function(e,t,r,n){return e instanceof l.default.Vector?this.lerp(e.x,e.y,e.z,t):(this.x+=(e-this.x)*n||0,this.y+=(t-this.y)*n||0,this.z+=(r-this.z)*n||0,this)},l.default.Vector.prototype.reflect=function(e){return e.normalize(),this.sub(e.mult(2*this.dot(e)))},l.default.Vector.prototype.array=function(){return[this.x||0,this.y||0,this.z||0]},l.default.Vector.prototype.equals=function(e,t,r){var n,o,i;return i=e instanceof l.default.Vector?(n=e.x||0,o=e.y||0,e.z||0):e instanceof Array?(n=e[0]||0,o=e[1]||0,e[2]||0):(n=e||0,o=t||0,r||0),this.x===n&&this.y===o&&this.z===i},l.default.Vector.fromAngle=function(e,t){return void 0===t&&(t=1),new l.default.Vector(t*Math.cos(e),t*Math.sin(e),0)},l.default.Vector.fromAngles=function(e,t,r){void 0===r&&(r=1);var n=Math.cos(t),o=Math.sin(t),i=Math.cos(e),a=Math.sin(e);return new l.default.Vector(r*a*o,-r*i,r*a*n)},l.default.Vector.random2D=function(){return this.fromAngle(Math.random()*i.TWO_PI)},l.default.Vector.random3D=function(){var e=Math.random()*i.TWO_PI,t=2*Math.random()-1,r=Math.sqrt(1-t*t),n=r*Math.cos(e),o=r*Math.sin(e);return new l.default.Vector(n,o,t)},l.default.Vector.add=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.add")),r.add(t),r},l.default.Vector.rem=function(e,t){if(e instanceof l.default.Vector&&t instanceof l.default.Vector){var r=e.copy();return r.rem(t),r}},l.default.Vector.sub=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.sub")),r.sub(t),r},l.default.Vector.mult=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.mult")),r.mult(t),r},l.default.Vector.rotate=function(e,t,r){return 2===arguments.length?r=e.copy():(r instanceof l.default.Vector||l.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.rotate"),r.set(e)),r.rotate(t),r},l.default.Vector.div=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.div")),r.div(t),r},l.default.Vector.dot=function(e,t){return e.dot(t)},l.default.Vector.cross=function(e,t){return e.cross(t)},l.default.Vector.dist=function(e,t){return e.dist(t)},l.default.Vector.lerp=function(e,t,r,n){return n?n.set(e):(n=e.copy(),4===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.lerp")),n.lerp(t,r),n},l.default.Vector.mag=function(e){var t=e.x,r=e.y,n=e.z,o=t*t+r*r+n*n;return Math.sqrt(o)},l.default.Vector.normalize=function(e,t){return arguments.length<2?t=e.copy():(t instanceof l.default.Vector||l.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.normalize"),t.set(e)),t.normalize()};var o=l.default.Vector;r.default=o},{"../core/constants":253,"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.every":150,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.some":163,"core-js/modules/es.math.sign":169,"core-js/modules/es.number.constructor":170,"core-js/modules/es.number.is-finite":171,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.sub":192}],298:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};var i="_lcg_random_state",a=4294967296,s=0;o.default.prototype._lcg=function(e){return this[e]=(1664525*this[e]+1013904223)%a,this[e]/a},o.default.prototype._lcgSetSeed=function(e,t){this[e]=(null==t?Math.random()*a:t)>>>0},o.default.prototype.randomSeed=function(e){this._lcgSetSeed(i,e),this._gaussian_previous=!1},o.default.prototype.random=function(e,t){var r;if(o.default._validateParameters("random",arguments),r=null!=this[i]?this._lcg(i):Math.random(),void 0===e)return r;if(void 0===t)return e instanceof Array?e[Math.floor(r*e.length)]:r*e;if(t<e){var n=e;e=t,t=n}return r*(t-e)+e},o.default.prototype.randomGaussian=function(e){var t,r,n,o,i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;if(this._gaussian_previous)t=s,this._gaussian_previous=!1;else{for(;1<=(o=(r=this.random(2)-1)*r+(n=this.random(2)-1)*n););t=r*(o=Math.sqrt(-2*Math.log(o)/o)),s=n*o,this._gaussian_previous=!0}return t*i+(e||0)};var l=o.default;r.default=l},{"../core/main":264}],299:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype._angleMode=i.RADIANS,o.default.prototype.acos=function(e){return this._fromRadians(Math.acos(e))},o.default.prototype.asin=function(e){return this._fromRadians(Math.asin(e))},o.default.prototype.atan=function(e){return this._fromRadians(Math.atan(e))},o.default.prototype.atan2=function(e,t){return this._fromRadians(Math.atan2(e,t))},o.default.prototype.cos=function(e){return Math.cos(this._toRadians(e))},o.default.prototype.sin=function(e){return Math.sin(this._toRadians(e))},o.default.prototype.tan=function(e){return Math.tan(this._toRadians(e))},o.default.prototype.degrees=function(e){return e*i.RAD_TO_DEG},o.default.prototype.radians=function(e){return e*i.DEG_TO_RAD},o.default.prototype.angleMode=function(e){e!==i.DEGREES&&e!==i.RADIANS||(this._angleMode=e)},o.default.prototype._toRadians=function(e){return this._angleMode===i.DEGREES?e*i.DEG_TO_RAD:e},o.default.prototype._toDegrees=function(e){return this._angleMode===i.RADIANS?e*i.RAD_TO_DEG:e},o.default.prototype._fromRadians=function(e){return this._angleMode===i.DEGREES?e*i.RAD_TO_DEG:e};var l=o.default;r.default=l},{"../core/constants":253,"../core/main":264}],300:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.textAlign=function(e,t){var r;return o.default._validateParameters("textAlign",arguments),(r=this._renderer).textAlign.apply(r,arguments)},o.default.prototype.textLeading=function(e){var t;return o.default._validateParameters("textLeading",arguments),(t=this._renderer).textLeading.apply(t,arguments)},o.default.prototype.textSize=function(e){var t;return o.default._validateParameters("textSize",arguments),(t=this._renderer).textSize.apply(t,arguments)},o.default.prototype.textStyle=function(e){var t;return o.default._validateParameters("textStyle",arguments),(t=this._renderer).textStyle.apply(t,arguments)},o.default.prototype.textWidth=function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return r[0]+="",o.default._validateParameters("textWidth",r),0===r[0].length?0:(e=this._renderer).textWidth.apply(e,r)},o.default.prototype.textAscent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("textAscent",t),this._renderer.textAscent()},o.default.prototype.textDescent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("textDescent",t),this._renderer.textDescent()},o.default.prototype._updateTextMetrics=function(){return this._renderer._updateTextMetrics()},o.default.prototype.textWrap=function(e){if("WORD"!==e&&"CHAR"!==e)throw"Error: textWrap accepts only WORD or CHAR";return this._renderer.textWrap(e)};var i=o.default;r.default=i},{"../core/main":264}],301:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.last-index-of"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.split"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,f=(n=e("../core/main"))&&n.__esModule?n:{default:n},o=l(e("../core/constants")),i=l(e("opentype.js"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),f.default.prototype.loadFont=function(s,l,u){f.default._validateParameters("loadFont",arguments);var c=new f.default.Font(this),d=this;return i.load(s,function(e,t){if(e)return f.default._friendlyFileLoadError(4,s),void 0!==u?u(e):void console.error(e,s);c.font=t,void 0!==l&&l(c),d._decrementPreload();var r,n,o=s.split("\\").pop().split("/").pop(),i=o.lastIndexOf("."),a=i<1?null:o.substr(i+1);["ttf","otf","woff","woff2"].includes(a)&&(r=o.substr(0,i),(n=document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r,";\nsrc: url(").concat(s,");\n}\n"))),document.head.appendChild(n))}),c},f.default.prototype.text=function(e,t,r,n,o){var i;return f.default._validateParameters("text",arguments),this._renderer._doFill||this._renderer._doStroke?(i=this._renderer).text.apply(i,arguments):this},f.default.prototype.textFont=function(e,t){if(f.default._validateParameters("textFont",arguments),arguments.length){if(!e)throw new Error("null font passed to textFont");return this._renderer._setProperty("_textFont",e),t&&(this._renderer._setProperty("_textSize",t),this._renderer._leadingSet||this._renderer._setProperty("_textLeading",t*o._DEFAULT_LEADMULT)),this._renderer._applyTextProperties()}return this._renderer._textFont};var u=f.default;r.default=u},{"../core/constants":253,"../core/friendly_errors/fes_core":255,"../core/friendly_errors/file_errors":256,"../core/friendly_errors/validate_params":259,"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.last-index-of":160,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.split":191,"opentype.js":239}],302:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.fill"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.join"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.array.splice"),e("core-js/modules/es.function.name"),e("core-js/modules/es.number.to-fixed"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.split"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},x=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==h(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var r=function(e,t){if("object"!==h(e))e=t;else for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}(t,{sampleFactor:.1,simplifyThreshold:0}),n=l(e,0,1),o=n/(n*r.sampleFactor),i=[],a=0;a<n;a+=o)i.push(l(e,a));return r.simplifyThreshold&&function(e){for(var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=0,n=e.length-1;3<e.length&&0<=n;--n)f(s(e,n-1),s(e,n),s(e,n+1),t)&&(e.splice(n%e.length,1),r++)}(i,r.simplifyThreshold),i}function y(e){for(var t,r=[],n=0;n<e.length;n++)"M"===e[n].type&&(t&&r.push(t),t=[]),t.push(i(e[n]));return r.push(t),r}function i(e){var t=[e.type];return"M"===e.type||"L"===e.type?t.push(e.x,e.y):"C"===e.type?t.push(e.x1,e.y1,e.x2,e.y2,e.x,e.y):"Q"===e.type&&t.push(e.x1,e.y1,e.x,e.y),t}function s(e,t){var r=e.length;return e[t<0?t%r+r:t%r]}function f(e,t,r,n){if(!n)return 0==(o=e,a=r,((i=t)[0]-o[0])*(a[1]-o[1])-(a[0]-o[0])*(i[1]-o[1]));var o,i,a;void 0===f.tmpPoint1&&(f.tmpPoint1=[],f.tmpPoint2=[]);var s=f.tmpPoint1,l=f.tmpPoint2;s.x=t.x-e.x,s.y=t.y-e.y,l.x=r.x-t.x,l.y=r.y-t.y;var u=s.x*l.x+s.y*l.y,c=Math.sqrt(s.x*s.x+s.y*s.y),d=Math.sqrt(l.x*l.x+l.y*l.y);return Math.acos(u/(c*d))<n}function d(e,t,r,n,o,i,a,s,l){var u=1-l,c=Math.pow(u,3),d=Math.pow(u,2),f=l*l,h=f*l,p=c*e+3*d*l*r+3*u*l*l*o+h*a,y=c*t+3*d*l*n+3*u*l*l*i+h*s,m=e+2*l*(r-e)+f*(o-2*r+e),g=t+2*l*(n-t)+f*(i-2*n+t),v=r+2*l*(o-r)+f*(a-2*o+r),b=n+2*l*(i-n)+f*(s-2*i+n),_=u*e+l*r,x=u*t+l*n,w=u*o+l*a,j=u*i+l*s,S=90-180*Math.atan2(m-v,g-b)/Math.PI;return(v<m||g<b)&&(S+=180),{x:p,y:y,m:{x:m,y:g},n:{x:v,y:b},start:{x:_,y:x},end:{x:w,y:j},alpha:S}}function m(e,t,r,n,o,i,a,s,l){return null==l?g(e,t,r,n,o,i,a,s):d(e,t,r,n,o,i,a,s,function(e,t,r,n,o,i,a,s,l){if(l<0||g(e,t,r,n,o,i,a,s)<l)return;var u,c=.5,d=1-c;u=g(e,t,r,n,o,i,a,s,d);for(;.01<Math.abs(u-l);)u=g(e,t,r,n,o,i,a,s,d+=(u<l?1:-1)*(c/=2));return d}(e,t,r,n,o,i,a,s,l))}function l(e,t,r){for(var n,o,i,a,s,l=0,u=0,c=(e=function(e,t){function r(e,t,r){var n,o;if(!e)return["C",t.x,t.y,t.x,t.y,t.x,t.y];switch(e[0]in{T:1,Q:1}||(t.qx=t.qy=null),e[0]){case"M":t.X=e[1],t.Y=e[2];break;case"A":e=["C"].concat(function e(t,r,n,o,i,a,s,l,u,c){var d=Math.PI;var f=120*d/180;var h;var p;var y;var m;var g=d/180*(+i||0);var v=[];var b;var _=function(e,t,r){var n=e*Math.cos(r)-t*Math.sin(r),o=e*Math.sin(r)+t*Math.cos(r);return{x:n,y:o}};if(c)h=c[0],p=c[1],y=c[2],m=c[3];else{b=_(t,r,-g),t=b.x,r=b.y,b=_(l,u,-g),l=b.x,u=b.y;var x=(t-l)/2,w=(r-u)/2,j=x*x/(n*n)+w*w/(o*o);1<j&&(j=Math.sqrt(j),n*=j,o*=j);var S=n*n,M=o*o,E=(a===s?-1:1)*Math.sqrt(Math.abs((S*M-S*w*w-M*x*x)/(S*w*w+M*x*x)));y=E*n*w/o+(t+l)/2,m=E*-o*x/n+(r+u)/2,h=Math.asin(((r-m)/o).toFixed(9)),p=Math.asin(((u-m)/o).toFixed(9)),(h=t<y?d-h:h)<0&&(h=2*d+h),(p=l<y?d-p:p)<0&&(p=2*d+p),s&&p<h&&(h-=2*d),!s&&h<p&&(p-=2*d)}var T=p-h;if(Math.abs(T)>f){var O=p,C=l,L=u;p=h+f*(s&&h<p?1:-1),l=y+n*Math.cos(p),u=m+o*Math.sin(p),v=e(l,u,n,o,i,0,s,C,L,[p,O,y,m])}T=p-h;var P=Math.cos(h),A=Math.sin(h),k=Math.cos(p),R=Math.sin(p),D=Math.tan(T/4),I=4/3*n*D,U=4/3*o*D,N=[t,r],F=[t+I*A,r-U*P],B=[l+I*R,u-U*k],G=[l,u];F[0]=2*N[0]-F[0];F[1]=2*N[1]-F[1];{if(c)return[F,B,G].concat(v);v=[F,B,G].concat(v).join().split(",");for(var V=[],z=0,H=v.length;z<H;z++)V[z]=z%2?_(v[z-1],v[z],g).y:_(v[z],v[z+1],g).x;return V}}.apply(0,[t.x,t.y].concat(e.slice(1))));break;case"S":o="C"===r||"S"===r?(n=2*t.x-t.bx,2*t.y-t.by):(n=t.x,t.y),e=["C",n,o].concat(e.slice(1));break;case"T":"Q"===r||"T"===r?(t.qx=2*t.x-t.qx,t.qy=2*t.y-t.qy):(t.qx=t.x,t.qy=t.y),e=["C"].concat(j(t.x,t.y,t.qx,t.qy,e[1],e[2]));break;case"Q":t.qx=e[1],t.qy=e[2],e=["C"].concat(j(t.x,t.y,e[1],e[2],e[3],e[4]));break;case"L":e=["C"].concat(w(t.x,t.y,e[1],e[2]));break;case"H":e=["C"].concat(w(t.x,t.y,e[1],t.y));break;case"V":e=["C"].concat(w(t.x,t.y,t.x,e[1]));break;case"Z":e=["C"].concat(w(t.x,t.y,t.X,t.Y))}return e}function n(e,t){if(7<e[t].length){e[t].shift();for(var r=e[t];r.length;)c[t]="A",s&&(d[t]="A"),e.splice(t++,0,["C"].concat(r.splice(0,6)));e.splice(t,1),i=Math.max(a.length,s&&s.length||0)}}function o(e,t,r,n,o){e&&t&&"M"===e[o][0]&&"M"!==t[o][0]&&(t.splice(o,0,["M",n.x,n.y]),r.bx=0,r.by=0,r.x=e[o][1],r.y=e[o][2],i=Math.max(a.length,s&&s.length||0))}var i,a=b(e),s=t&&b(t),l={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},u={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},c=[],d=[],f="",h="";i=Math.max(a.length,s&&s.length||0);for(var p=0;p<i;p++){a[p]&&(f=a[p][0]),"C"!==f&&(c[p]=f,p&&(h=c[p-1])),a[p]=r(a[p],l,h),"A"!==c[p]&&"C"===f&&(c[p]="C"),n(a,p),s&&(s[p]&&(f=s[p][0]),"C"!==f&&(d[p]=f,p&&(h=d[p-1])),s[p]=r(s[p],u,h),"A"!==d[p]&&"C"===f&&(d[p]="C"),n(s,p)),o(a,s,l,u,p),o(s,a,u,l,p);var y=a[p],m=s&&s[p],g=y.length,v=s&&m.length;l.x=y[g-2],l.y=y[g-1],l.bx=parseFloat(y[g-4])||l.x,l.by=parseFloat(y[g-3])||l.y,u.bx=s&&(parseFloat(m[v-4])||u.x),u.by=s&&(parseFloat(m[v-3])||u.y),u.x=s&&m[v-2],u.y=s&&m[v-1]}return s?[a,s]:a}(e)).length;u<c;u++){if("M"===(i=e[u])[0])n=+i[1],o=+i[2];else{if(t<l+(a=m(n,o,i[1],i[2],i[3],i[4],i[5],i[6]))&&!r)return{x:(s=m(n,o,i[1],i[2],i[3],i[4],i[5],i[6],t-l)).x,y:s.y,alpha:s.alpha};l+=a,n=+i[5],o=+i[6]}i.shift()+i}return(s=r?l:d(n,o,i[0],i[1],i[2],i[3],i[4],i[5],1)).alpha&&(s={x:s.x,y:s.y,alpha:s.alpha}),s}function b(e){var t,r=[],n=0,o=0,i=0,a=0,s=0;if(!e)return r;"M"===e[0][0]&&(i=n=+e[0][1],a=o=+e[0][2],s++,r[0]=["M",n,o]);for(var l,u,c=3===e.length&&"M"===e[0][0]&&"R"===e[1][0].toUpperCase()&&"Z"===e[2][0].toUpperCase(),d=s,f=e.length;d<f;d++){if(r.push(l=[]),(u=e[d])[0]!==String.prototype.toUpperCase.call(u[0]))switch(l[0]=String.prototype.toUpperCase.call(u[0]),l[0]){case"A":l[1]=u[1],l[2]=u[2],l[3]=u[3],l[4]=u[4],l[5]=u[5],l[6]=+(u[6]+n),l[7]=+(u[7]+o);break;case"V":l[1]=+u[1]+o;break;case"H":l[1]=+u[1]+n;break;case"R":for(var h=2,p=(t=[n,o].concat(u.slice(1))).length;h<p;h++)t[h]=+t[h]+n,t[++h]=+t[h]+o;r.pop(),r=r.concat(_(t,c));break;case"M":i=+u[1]+n,a=+u[2]+o;break;default:for(var y=1,m=u.length;y<m;y++)l[y]=+u[y]+(y%2?n:o)}else if("R"===u[0])t=[n,o].concat(u.slice(1)),r.pop(),r=r.concat(_(t,c)),l=["R"].concat(u.slice(-2));else for(var g=0,v=u.length;g<v;g++)l[g]=u[g];switch(l[0]){case"Z":n=i,o=a;break;case"H":n=l[1];break;case"V":o=l[1];break;case"M":i=l[l.length-2],a=l[l.length-1];break;default:n=l[l.length-2],o=l[l.length-1]}}return r}function _(e,t){for(var r=[],n=0,o=e.length;n<o-2*!t;n+=2){var i=[{x:+e[n-2],y:+e[n-1]},{x:+e[n],y:+e[n+1]},{x:+e[n+2],y:+e[n+3]},{x:+e[n+4],y:+e[n+5]}];t?n?o-4===n?i[3]={x:+e[0],y:+e[1]}:o-2===n&&(i[2]={x:+e[0],y:+e[1]},i[3]={x:+e[2],y:+e[3]}):i[0]={x:+e[o-2],y:+e[o-1]}:o-4===n?i[3]=i[2]:n||(i[0]={x:+e[n],y:+e[n+1]}),r.push(["C",(-i[0].x+6*i[1].x+i[2].x)/6,(-i[0].y+6*i[1].y+i[2].y)/6,(i[1].x+6*i[2].x-i[3].x)/6,(i[1].y+6*i[2].y-i[3].y)/6,i[2].x,i[2].y])}return r}function w(e,t,r,n){return[e,t,r,n,r,n]}function j(e,t,r,n,o,i){return[1/3*e+2/3*r,1/3*t+2/3*n,1/3*o+2/3*r,1/3*i+2/3*n,o,i]}function g(e,t,r,n,o,i,a,s,l){null==l&&(l=1);for(var u=(l=1<l?1:l<0?0:l)/2,c=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],d=0,f=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],h=0;h<12;h++){var p=u*c[h]+u,y=v(p,e,r,o,a),m=v(p,t,n,i,s),g=y*y+m*m;d+=f[h]*Math.sqrt(g)}return u*d}function v(e,t,r,n,o){return e*(e*(-3*t+9*r-9*n+3*o)+6*t-12*r+6*n)-3*t+3*r}o.default.Font=function(e){this.parent=e,this.cache={},this.font=void 0},o.default.Font.prototype.textBounds=function(e){var t,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,o=3<arguments.length?arguments[3]:void 0,i=4<arguments.length?arguments[4]:void 0,a=i&&i.renderer&&i.renderer._pInst||this.parent,s=a._renderer.drawingContext;s.textAlign||x.LEFT,s.textBaseline||x.BASELINE;if(o=o||a._renderer._textSize,!t){var l,u,c=[],d=[],f=[];f[0]=[];var h=[],p=this._scale(o),y=a._renderer.textLeading(),m=0;this.font.forEachGlyph(e,r,n,o,i,function(e,t,r,n){var o=e.getMetrics();0===e.index||10===e.index?f[m+=1]=[]:(f[m].push(t+o.xMin*p),f[m].push(t+o.xMax*p),h.push(r+m*y+-o.yMin*p),h.push(r+m*y+-o.yMax*p))}),0<f[m].length&&(c[m]=Math.min.apply(null,f[m]),d[m]=Math.max.apply(null,f[m]));for(var g=0,v=0;v<=m;v++){c[v]=Math.min.apply(null,f[v]),d[v]=Math.max.apply(null,f[v]);var b=d[v]-c[v];g<b&&(g=b)}var _=Math.min.apply(null,c);t={x:_,y:l=Math.min.apply(null,h),h:Math.max.apply(null,h)-l,w:g,advance:_-r},u=this._handleAlignment(a._renderer,e,t.x,t.y,t.w+t.advance),t.x=u.x,t.y=u.y}return t},o.default.Font.prototype.textToPoints=function(e,t,r,n,o){var i,a=0,s=[],l=this._getGlyphs(e);n=n||this.parent._renderer._textSize;for(var u=0;u<l.length;u++){if(!(l[i=u].name&&"space"===l[i].name||e.length===l.length&&" "===e[i]))for(var c=y(l[u].getPath(t,r,n).commands),d=0;d<c.length;d++)for(var f=p(c[d],o),h=0;h<f.length;h++)f[h].x+=a,s.push(f[h]);a+=l[u].advanceWidth*this._scale(n)}return s},o.default.Font.prototype._getGlyphs=function(e){return this.font.stringToGlyphs(e)},o.default.Font.prototype._getPath=function(e,t,r,n){var o=(n&&n.renderer&&n.renderer._pInst||this.parent)._renderer,i=this._handleAlignment(o,e,t,r);return this.font.getPath(e,i.x,i.y,o._textSize,n)},o.default.Font.prototype._getPathData=function(e,t,r,n){var o=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,n):"object"===h(t)&&(n=t),n&&"number"==typeof n.decimals&&(o=n.decimals),e.toPathData(o)},o.default.Font.prototype._getSVG=function(e,t,r,n){var o=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,n):"object"===h(t)&&(n=t),n&&("number"==typeof n.decimals&&(o=n.decimals),"number"==typeof n.strokeWidth&&(e.strokeWidth=n.strokeWidth),void 0!==n.fill&&(e.fill=n.fill),void 0!==n.stroke&&(e.stroke=n.stroke)),e.toSVG(o)},o.default.Font.prototype._renderPath=function(e,t,r,n){var o,i=n&&n.renderer||this.parent._renderer,a=i.drawingContext;o="object"===h(e)&&e.commands?e.commands:this._getPath(e,t,r,n).commands,a.beginPath();var s=!0,l=!1,u=void 0;try{for(var c,d=o[Symbol.iterator]();!(s=(c=d.next()).done);s=!0){var f=c.value;"M"===f.type?a.moveTo(f.x,f.y):"L"===f.type?a.lineTo(f.x,f.y):"C"===f.type?a.bezierCurveTo(f.x1,f.y1,f.x2,f.y2,f.x,f.y):"Q"===f.type?a.quadraticCurveTo(f.x1,f.y1,f.x,f.y):"Z"===f.type&&a.closePath()}}catch(e){l=!0,u=e}finally{try{s||null==d.return||d.return()}finally{if(l)throw u}}return i._doStroke&&i._strokeSet&&a.stroke(),i._doFill&&(i._fillSet||i._setFill(x._DEFAULT_TEXT_FILL),a.fill()),this},o.default.Font.prototype._textWidth=function(e,t){return this.font.getAdvanceWidth(e,t)},o.default.Font.prototype._textAscent=function(e){return this.font.ascender*this._scale(e)},o.default.Font.prototype._textDescent=function(e){return-this.font.descender*this._scale(e)},o.default.Font.prototype._scale=function(e){return 1/this.font.unitsPerEm*(e||this.parent._renderer._textSize)},o.default.Font.prototype._handleAlignment=function(e,t,r,n,o){var i=e._textSize;switch(void 0===o&&(o=this._textWidth(t,i)),e._textAlign){case x.CENTER:r-=o/2;break;case x.RIGHT:r-=o}switch(e._textBaseline){case x.TOP:n+=this._textAscent(i);break;case x.CENTER:n+=this._textAscent(i)/2;break;case x.BOTTOM:n-=this._textDescent(i)}return{x:r,y:n}};var u=o.default;r.default=u},{"../core/constants":253,"../core/main":264,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.fill":151,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.join":159,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.splice":164,"core-js/modules/es.function.name":166,"core-js/modules/es.number.to-fixed":172,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.split":191,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],303:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.array.splice"),e("core-js/modules/es.array-buffer.constructor"),e("core-js/modules/es.object.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.append=function(e,t){return e.push(t),e},o.default.prototype.arrayCopy=function(e,t,r,n,o){var i,a;e=void 0!==o?(a=Math.min(o,e.length),i=n,e.slice(t,a+t)):(a=void 0!==r?(a=r,Math.min(a,e.length)):e.length,i=0,r=t,e.slice(0,a)),Array.prototype.splice.apply(r,[i,a].concat(e))},o.default.prototype.concat=function(e,t){return e.concat(t)},o.default.prototype.reverse=function(e){return e.reverse()},o.default.prototype.shorten=function(e){return e.pop(),e},o.default.prototype.shuffle=function(e,t){for(var r,n,o=ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(e),i=(e=t||o?e:e.slice()).length;1<i;)r=this.random(0,1)*i|0,n=e[--i],e[i]=e[r],e[r]=n;return e},o.default.prototype.sort=function(e,t){var r=t?e.slice(0,Math.min(t,e.length)):e,n=t?e.slice(Math.min(t,e.length)):[];return(r="string"==typeof r[0]?r.sort():r.sort(function(e,t){return e-t})).concat(n)},o.default.prototype.splice=function(e,t,r){return Array.prototype.splice.apply(e,[r,0].concat(t)),e},o.default.prototype.subset=function(e,t,r){return void 0!==r?e.slice(t,t+r):e.slice(t,e.length)};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array-buffer.constructor":148,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.splice":164,"core-js/modules/es.object.to-string":177}],304:[function(e,t,r){"use strict";e("core-js/modules/es.array.map"),e("core-js/modules/es.number.constructor"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.repeat"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.float=function(e){return e instanceof Array?e.map(parseFloat):parseFloat(e)},o.default.prototype.int=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:10;return e===1/0||"Infinity"===e?1/0:e===-1/0||"-Infinity"===e?-1/0:"string"==typeof e?parseInt(e,t):"number"==typeof e?0|e:"boolean"==typeof e?e?1:0:e instanceof Array?e.map(function(e){return o.default.prototype.int(e,t)}):void 0},o.default.prototype.str=function(e){return e instanceof Array?e.map(o.default.prototype.str):String(e)},o.default.prototype.boolean=function(e){return"number"==typeof e?0!==e:"string"==typeof e?"true"===e.toLowerCase():"boolean"==typeof e?e:e instanceof Array?e.map(o.default.prototype.boolean):void 0},o.default.prototype.byte=function(e){var t=o.default.prototype.int(e,10);return"number"==typeof t?(t+128)%256-128:t instanceof Array?t.map(o.default.prototype.byte):void 0},o.default.prototype.char=function(e){return"number"!=typeof e||isNaN(e)?e instanceof Array?e.map(o.default.prototype.char):"string"==typeof e?o.default.prototype.char(parseInt(e,10)):void 0:String.fromCharCode(e)},o.default.prototype.unchar=function(e){return"string"==typeof e&&1===e.length?e.charCodeAt(0):e instanceof Array?e.map(o.default.prototype.unchar):void 0},o.default.prototype.hex=function(e,t){if(t=null==t?t=8:t,e instanceof Array)return e.map(function(e){return o.default.prototype.hex(e,t)});if(e===1/0||e===-1/0)return(e===1/0?"F":"0").repeat(t);if("number"==typeof e){e<0&&(e=4294967295+e+1);for(var r=Number(e).toString(16).toUpperCase();r.length<t;)r="0".concat(r);return r.length>=t&&(r=r.substring(r.length-t,r.length)),r}},o.default.prototype.unhex=function(e){return e instanceof Array?e.map(o.default.prototype.unhex):parseInt("0x".concat(e),16)};var i=o.default;r.default=i},{"../core/main":264,"core-js/modules/es.array.map":161,"core-js/modules/es.number.constructor":170,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.repeat":188}],305:[function(e,t,r){"use strict";e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.join"),e("core-js/modules/es.array.map"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.constructor"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.match"),e("core-js/modules/es.string.replace"),e("core-js/modules/es.string.split"),e("core-js/modules/es.string.trim"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,a=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e,t,r){var n=e<0,o=n?e.toString().substring(1):e.toString(),i=o.indexOf("."),a=-1!==i?o.substring(0,i):o,s=-1!==i?o.substring(i+1):"",l=n?"-":"";if(void 0!==r){var u="";(-1!==i||0<r-s.length)&&(u="."),s.length>r&&(s=s.substring(0,r));for(var c=0;c<t-a.length;c++)l+="0";l+=a,l+=u,l+=s;for(var d=0;d<r-s.length;d++)l+="0";return l}for(var f=0;f<Math.max(t-a.length,0);f++)l+="0";return l+=o}function i(e,t){var r=(e=e.toString()).indexOf("."),n=-1!==r?e.substring(r):"",o=-1!==r?e.substring(0,r):e;if(o=o.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),0===t)n="";else if(void 0!==t)if(t>n.length)for(var i=t-(n+=-1===r?".":"").length+1,a=0;a<i;a++)n+="0";else n=n.substring(0,t+1);return o+n}function s(e){return 0<parseFloat(e)?"+".concat(e.toString()):e.toString()}function l(e){return 0<=parseFloat(e)?" ".concat(e.toString()):e.toString()}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),a.default.prototype.join=function(e,t){return a.default._validateParameters("join",arguments),e.join(t)},a.default.prototype.match=function(e,t){return a.default._validateParameters("match",arguments),e.match(t)},a.default.prototype.matchAll=function(e,t){a.default._validateParameters("matchAll",arguments);for(var r=new RegExp(t,"g"),n=r.exec(e),o=[];null!==n;)o.push(n),n=r.exec(e);return o},a.default.prototype.nf=function(e,t,r){return a.default._validateParameters("nf",arguments),e instanceof Array?e.map(function(e){return o(e,t,r)}):"[object Arguments]"===Object.prototype.toString.call(e)?3===e.length?this.nf(e[0],e[1],e[2]):2===e.length?this.nf(e[0],e[1]):this.nf(e[0]):o(e,t,r)},a.default.prototype.nfc=function(e,t){return a.default._validateParameters("nfc",arguments),e instanceof Array?e.map(function(e){return i(e,t)}):i(e,t)},a.default.prototype.nfp=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];a.default._validateParameters("nfp",t);var n=a.default.prototype.nf.apply(this,t);return n instanceof Array?n.map(s):s(n)},a.default.prototype.nfs=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];a.default._validateParameters("nfs",t);var n=a.default.prototype.nf.apply(this,t);return n instanceof Array?n.map(l):l(n)},a.default.prototype.split=function(e,t){return a.default._validateParameters("split",arguments),e.split(t)},a.default.prototype.splitTokens=function(e,t){var r;if(a.default._validateParameters("splitTokens",arguments),void 0!==t){var n=t,o=/\]/g.exec(n),i=/\[/g.exec(n);r=i&&o?(n=n.slice(0,o.index)+n.slice(o.index+1),i=/\[/g.exec(n),n=n.slice(0,i.index)+n.slice(i.index+1),new RegExp("[\\[".concat(n,"\\]]"),"g")):o?(n=n.slice(0,o.index)+n.slice(o.index+1),new RegExp("[".concat(n,"\\]]"),"g")):i?(n=n.slice(0,i.index)+n.slice(i.index+1),new RegExp("[".concat(n,"\\[]"),"g")):new RegExp("[".concat(n,"]"),"g")}else r=/\s/g;return e.split(r).filter(function(e){return e})},a.default.prototype.trim=function(e){return a.default._validateParameters("trim",arguments),e instanceof Array?e.map(this.trim):e.trim()};var u=a.default;r.default=u},{"../core/friendly_errors/fes_core":255,"../core/friendly_errors/file_errors":256,"../core/friendly_errors/validate_params":259,"../core/main":264,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.join":159,"core-js/modules/es.array.map":161,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.constructor":180,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.match":187,"core-js/modules/es.string.replace":189,"core-js/modules/es.string.split":191,"core-js/modules/es.string.trim":193}],306:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.day=function(){return(new Date).getDate()},o.default.prototype.hour=function(){return(new Date).getHours()},o.default.prototype.minute=function(){return(new Date).getMinutes()},o.default.prototype.millis=function(){return-1===this._millisStart?0:window.performance.now()-this._millisStart},o.default.prototype.month=function(){return(new Date).getMonth()+1},o.default.prototype.second=function(){return(new Date).getSeconds()},o.default.prototype.year=function(){return(new Date).getFullYear()};var i=o.default;r.default=i},{"../core/main":264}],307:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.concat"),e("core-js/modules/es.number.to-fixed"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,E=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./p5.Geometry");var h=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}E.default.prototype.plane=function(e,t,r,n){this._assert3d("plane"),E.default._validateParameters("plane",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=1),void 0===n&&(n=1);var o="plane|".concat(r,"|").concat(n);if(!this._renderer.geometryInHash(o)){var i=new E.default.Geometry(r,n,function(){for(var e,t,r,n=0;n<=this.detailY;n++){t=n/this.detailY;for(var o=0;o<=this.detailX;o++)e=o/this.detailX,r=new E.default.Vector(e-.5,t-.5,0),this.vertices.push(r),this.uvs.push(e,t)}});i.computeFaces().computeNormals(),r<=1&&n<=1?i._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"),this._renderer.createBuffers(o,i)}return this._renderer.drawBuffersScaled(o,e,t,1),this},E.default.prototype.box=function(e,t,r,n,o){this._assert3d("box"),E.default._validateParameters("box",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=t);var i=this._renderer.attributes&&this._renderer.attributes.perPixelLighting;void 0===n&&(n=i?1:4),void 0===o&&(o=i?1:4);var a="box|".concat(n,"|").concat(o);if(!this._renderer.geometryInHash(a)){var s=new E.default.Geometry(n,o,function(){var e=[[0,4,2,6],[1,3,5,7],[0,1,4,5],[2,6,3,7],[0,2,1,3],[4,5,6,7]];this.strokeIndices=[[0,1],[1,3],[3,2],[6,7],[8,9],[9,11],[14,15],[16,17],[17,19],[18,19],[20,21],[22,23]];for(var t=0;t<e.length;t++){for(var r=e[t],n=4*t,o=0;o<4;o++){var i=r[o],a=new E.default.Vector((2*(1&i)-1)/2,((2&i)-1)/2,((4&i)/2-1)/2);this.vertices.push(a),this.uvs.push(1&o,(2&o)/2)}this.faces.push([n,1+n,2+n]),this.faces.push([2+n,1+n,3+n])}});s.computeNormals(),n<=4&&o<=4?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"),this._renderer.createBuffers(a,s)}return this._renderer.drawBuffersScaled(a,e,t,r),this},E.default.prototype.sphere=function(e,t,r){return this._assert3d("sphere"),E.default._validateParameters("sphere",arguments),void 0===e&&(e=50),void 0===t&&(t=24),void 0===r&&(r=16),this.ellipsoid(e,e,e,t,r),this};function l(e,t,r,n,o,i,a){e=e<=0?1:e,t=t<0?0:t,r=r<=0?e:r,n=n<3?3:n;var s,l,u,c=(i=void 0===i||i)?-2:0,d=(o=o<1?1:o)+((a=void 0===a?0!==t:a)?2:0),f=Math.atan2(e-t,r),h=Math.sin(f),p=Math.cos(f);for(s=c;s<=d;++s){var y=s/o,m=r*y,g=void 0;for(g=s<0?(y=m=0,e):o<s?(m=r,y=1,t):e+(t-e)*y,-2!==s&&s!==o+2||(g=0),m-=r/2,l=0;l<n;++l){var v=l/(n-1),b=2*Math.PI*v,_=Math.sin(b),x=Math.cos(b);this.vertices.push(new E.default.Vector(_*g,m,x*g));var w=void 0;w=s<0?new E.default.Vector(0,-1,0):o<s&&t?new E.default.Vector(0,1,0):new E.default.Vector(_*p,h,x*p),this.vertexNormals.push(w),this.uvs.push(v,y)}}var j=0;if(i){for(u=0;u<n;++u){var S=(u+1)%n;this.faces.push([j+u,j+n+S,j+n+u])}j+=2*n}for(s=0;s<o;++s){for(l=0;l<n;++l){var M=(l+1)%n;this.faces.push([j+l,j+M,j+n+M]),this.faces.push([j+l,j+n+M,j+n+l])}j+=n}if(a)for(j+=n,l=0;l<n;++l)this.faces.push([j+l,j+(l+1)%n,j+n])}E.default.prototype.cylinder=function(e,t,r,n,o,i){this._assert3d("cylinder"),E.default._validateParameters("cylinder",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===n&&(n=1),void 0===i&&(i=!0),void 0===o&&(o=!0);var a="cylinder|".concat(r,"|").concat(n,"|").concat(o,"|").concat(i);if(!this._renderer.geometryInHash(a)){var s=new E.default.Geometry(r,n);l.call(s,1,1,1,r,n,o,i),r<=24&&n<=16?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(a,s)}return this._renderer.drawBuffersScaled(a,e,t,e),this},E.default.prototype.cone=function(e,t,r,n,o){this._assert3d("cone"),E.default._validateParameters("cone",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===n&&(n=1),void 0===o&&(o=!0);var i="cone|".concat(r,"|").concat(n,"|").concat(o);if(!this._renderer.geometryInHash(i)){var a=new E.default.Geometry(r,n);l.call(a,1,0,1,r,n,o,!1),r<=24&&n<=16?a._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(i,a)}return this._renderer.drawBuffersScaled(i,e,t,e),this},E.default.prototype.ellipsoid=function(e,t,r,n,o){this._assert3d("ellipsoid"),E.default._validateParameters("ellipsoid",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=e),void 0===n&&(n=24),void 0===o&&(o=16);var i="ellipsoid|".concat(n,"|").concat(o);if(!this._renderer.geometryInHash(i)){var a=new E.default.Geometry(n,o,function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=Math.PI*t-Math.PI/2,n=Math.cos(r),o=Math.sin(r),i=0;i<=this.detailX;i++){var a=i/this.detailX,s=2*Math.PI*a,l=Math.cos(s),u=Math.sin(s),c=new E.default.Vector(n*u,o,n*l);this.vertices.push(c),this.vertexNormals.push(c),this.uvs.push(a,t)}});a.computeFaces(),n<=24&&o<=24?a._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"),this._renderer.createBuffers(i,a)}return this._renderer.drawBuffersScaled(i,e,t,r),this},E.default.prototype.torus=function(e,t,r,n){if(this._assert3d("torus"),E.default._validateParameters("torus",arguments),void 0===e)e=50;else if(!e)return;if(void 0===t)t=10;else if(!t)return;void 0===r&&(r=24),void 0===n&&(n=16);var h=(t/e).toPrecision(4),o="torus|".concat(h,"|").concat(r,"|").concat(n);if(!this._renderer.geometryInHash(o)){var i=new E.default.Geometry(r,n,function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=2*Math.PI*t,n=Math.cos(r),o=Math.sin(r),i=1+h*n,a=0;a<=this.detailX;a++){var s=a/this.detailX,l=2*Math.PI*s,u=Math.cos(l),c=Math.sin(l),d=new E.default.Vector(i*u,i*c,h*o),f=new E.default.Vector(n*u,n*c,o);this.vertices.push(d),this.vertexNormals.push(f),this.uvs.push(s,t)}});i.computeFaces(),r<=24&&n<=16?i._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(o,i)}return this._renderer.drawBuffersScaled(o,e,e,e),this},E.default.RendererGL.prototype.point=function(e,t,r){void 0===r&&(r=0);var n=[];return n.push(new E.default.Vector(e,t,r)),this._drawPoints(n,this.immediateMode.buffers.point),this},E.default.RendererGL.prototype.triangle=function(e){var t=e[0],r=e[1],n=e[2],o=e[3],i=e[4],a=e[5];if(!this.geometryInHash("tri")){var s=new E.default.Geometry(1,1,function(){var e=[];e.push(new E.default.Vector(0,0,0)),e.push(new E.default.Vector(0,1,0)),e.push(new E.default.Vector(1,0,0)),this.strokeIndices=[[0,1],[1,2],[2,0]],this.vertices=e,this.faces=[[0,1,2]],this.uvs=[0,0,0,1,1,1]});s._makeTriangleEdges()._edgesToVertices(),s.computeNormals(),this.createBuffers("tri",s)}var l=this.uMVMatrix.copy();try{var u=new E.default.Matrix([n-t,o-r,0,0,i-t,a-r,0,0,0,0,1,0,t,r,0,1]).mult(this.uMVMatrix);this.uMVMatrix=u,this.drawBuffers("tri")}finally{this.uMVMatrix=l}return this},E.default.RendererGL.prototype.ellipse=function(e){this.arc(e[0],e[1],e[2],e[3],0,h.TWO_PI,h.OPEN,e[4])},E.default.RendererGL.prototype.arc=function(e){var t,r,n=e,o=arguments[1],i=arguments[2],a=arguments[3],s=arguments[4],l=arguments[5],u=arguments[6],c=arguments[7]||25;if(r=Math.abs(l-s)>=h.TWO_PI?"".concat(t="ellipse","|").concat(c,"|"):"".concat(t="arc","|").concat(s,"|").concat(l,"|").concat(u,"|").concat(c,"|"),!this.geometryInHash(r)){var d=new E.default.Geometry(c,1,function(){if(this.strokeIndices=[],s.toFixed(10)!==l.toFixed(10)){u!==h.PIE&&void 0!==u||(this.vertices.push(new E.default.Vector(.5,.5,0)),this.uvs.push([.5,.5]));for(var e=0;e<=c;e++){var t=(l-s)*(e/c)+s,r=.5+Math.cos(t)/2,n=.5+Math.sin(t)/2;this.vertices.push(new E.default.Vector(r,n,0)),this.uvs.push([r,n]),e<c-1&&(this.faces.push([0,e+1,e+2]),this.strokeIndices.push([e+1,e+2]))}switch(u){case h.PIE:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case h.CHORD:this.strokeIndices.push([0,1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case h.OPEN:this.strokeIndices.push([0,1]);break;default:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1])}}});d.computeNormals(),c<=50?d._makeTriangleEdges()._edgesToVertices(d):this._doStroke&&console.log("Cannot apply a stroke to an ".concat(t," with more than 50 detail")),this.createBuffers(r,d)}var f=this.uMVMatrix.copy();try{this.uMVMatrix.translate([n,o,0]),this.uMVMatrix.scale(i,a,1),this.drawBuffers(r)}finally{this.uMVMatrix=f}return this},E.default.RendererGL.prototype.rect=function(e){var t=this._pInst._glAttributes.perPixelLighting,r=e[0],n=e[1],o=e[2],i=e[3],a=e[4]||(t?1:24),s=e[5]||(t?1:16),l="rect|".concat(a,"|").concat(s);if(!this.geometryInHash(l)){var u=new E.default.Geometry(a,s,function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=0;r<=this.detailX;r++){var n=r/this.detailX,o=new E.default.Vector(n,t,0);this.vertices.push(o),this.uvs.push(n,t)}0<a&&0<s&&(this.strokeIndices=[[0,a],[a,(a+1)*(s+1)-1],[(a+1)*(s+1)-1,(a+1)*s],[(a+1)*s,0]])});u.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(l,u)}var c=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(o,i,1),this.drawBuffers(l)}finally{this.uMVMatrix=c}return this},E.default.RendererGL.prototype.quad=function(u,c,d,f,h,p,y,m,g,v,b,_,e,t){void 0===e&&(e=2),void 0===t&&(t=2);var r="quad|".concat(u,"|").concat(c,"|").concat(d,"|").concat(f,"|").concat(h,"|").concat(p,"|").concat(y,"|").concat(m,"|").concat(g,"|").concat(v,"|").concat(b,"|").concat(_,"|").concat(e,"|").concat(t);if(!this.geometryInHash(r)){var n=new E.default.Geometry(e,t,function(){for(var e=1/(this.detailX-1),t=1/(this.detailY-1),r=0;r<this.detailY;r++)for(var n=0;n<this.detailX;n++){var o=n*e,i=r*t,a=(1-o)*((1-i)*u+i*v)+o*((1-i)*f+i*y),s=(1-o)*((1-i)*c+i*b)+o*((1-i)*h+i*m),l=(1-o)*((1-i)*d+i*_)+o*((1-i)*p+i*g);this.vertices.push(new E.default.Vector(a,s,l)),this.uvs.push([o,i])}});n.faces=[];for(var o=0;o<t-1;o++)for(var i=0;i<e-1;i++){var a=i+o*e,s=i+1+o*e,l=i+1+(o+1)*e,x=i+(o+1)*e;n.faces.push([a,s,l]),n.faces.push([a,l,x])}n.computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(r,n)}return this.drawBuffers(r),this},E.default.RendererGL.prototype.bezier=function(e,t,r,n,o,i,a,s,l,u,c,d){8===arguments.length&&(c=s,u=a,s=i,a=o,o=n,n=r,r=i=l=d=0);var f=this._pInst._bezierDetail||20;this.beginShape();for(var h=0;h<=f;h++){var p=Math.pow(1-h/f,3),y=h/f*3*Math.pow(1-h/f,2),m=3*Math.pow(h/f,2)*(1-h/f),g=Math.pow(h/f,3);this.vertex(e*p+n*y+a*m+u*g,t*p+o*y+s*m+c*g,r*p+i*y+l*m+d*g)}return this.endShape(),this},E.default.RendererGL.prototype.curve=function(e,t,r,n,o,i,a,s,l,u,c,d){8===arguments.length&&(u=a,c=s,a=o,s=n,o=n=r,r=i=l=d=0);var f=this._pInst._curveDetail;this.beginShape();for(var h=0;h<=f;h++){var p=.5*Math.pow(h/f,3),y=.5*Math.pow(h/f,2),m=h/f*.5,g=p*(3*n-e-3*a+u)+y*(2*e-5*n+4*a-u)+m*(-e+a)+2*n*.5,v=p*(3*o-t-3*s+c)+y*(2*t-5*o+4*s-c)+m*(-t+s)+2*o*.5,b=p*(3*i-r-3*l+d)+y*(2*r-5*i+4*l-d)+m*(-r+l)+2*i*.5;this.vertex(g,v,b)}return this.endShape(),this},E.default.RendererGL.prototype.line=function(){return 6===arguments.length?(this.beginShape(h.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2]),this.vertex(arguments.length<=3?void 0:arguments[3],arguments.length<=4?void 0:arguments[4],arguments.length<=5?void 0:arguments[5]),this.endShape()):4===arguments.length&&(this.beginShape(h.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],0),this.vertex(arguments.length<=2?void 0:arguments[2],arguments.length<=3?void 0:arguments[3],0),this.endShape()),this},E.default.RendererGL.prototype.bezierVertex=function(){if(0===this.immediateMode._bezierVertex.length)throw Error("vertex() must be used once before calling bezierVertex()");var e,t,r,n,o,i=[],a=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var u=1/this._lutBezierDetail,c=0,d=1,f=0;c<1;){if(e=parseFloat(c.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(e),d.toFixed(6)===u.toFixed(6)){e=parseFloat(d.toFixed(6))+parseFloat(c.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(e);break}c+=u,d-=u,++f}}var h=this._lookUpTableBezier.length;if(6===l){for(this.isBezier=!0,i=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2],arguments.length<=4?void 0:arguments[4]],a=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3],arguments.length<=5?void 0:arguments[5]],o=0;o<h;o++)t=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],r=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],this.vertex(t,r);this.immediateMode._bezierVertex[0]=arguments.length<=4?void 0:arguments[4],this.immediateMode._bezierVertex[1]=arguments.length<=5?void 0:arguments[5]}else if(9===l){for(this.isBezier=!0,i=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3],arguments.length<=6?void 0:arguments[6]],a=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4],arguments.length<=7?void 0:arguments[7]],s=[this.immediateMode._bezierVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5],arguments.length<=8?void 0:arguments[8]],o=0;o<h;o++)t=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],r=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],n=s[0]*this._lookUpTableBezier[o][0]+s[1]*this._lookUpTableBezier[o][1]+s[2]*this._lookUpTableBezier[o][2]+s[3]*this._lookUpTableBezier[o][3],this.vertex(t,r,n);this.immediateMode._bezierVertex[0]=arguments.length<=6?void 0:arguments[6],this.immediateMode._bezierVertex[1]=arguments.length<=7?void 0:arguments[7],this.immediateMode._bezierVertex[2]=arguments.length<=8?void 0:arguments[8]}},E.default.RendererGL.prototype.quadraticVertex=function(){if(0===this.immediateMode._quadraticVertex.length)throw Error("vertex() must be used once before calling quadraticVertex()");var e,t,r,n,o,i=[],a=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableQuadratic.length||this._lutQuadraticDetail!==this._pInst._curveDetail){this._lookUpTableQuadratic=[],this._lutQuadraticDetail=this._pInst._curveDetail;for(var u=1/this._lutQuadraticDetail,c=0,d=1,f=0;c<1;){if(e=parseFloat(c.toFixed(6)),this._lookUpTableQuadratic[f]=this._quadraticCoefficients(e),d.toFixed(6)===u.toFixed(6)){e=parseFloat(d.toFixed(6))+parseFloat(c.toFixed(6)),++f,this._lookUpTableQuadratic[f]=this._quadraticCoefficients(e);break}c+=u,d-=u,++f}}var h=this._lookUpTableQuadratic.length;if(4===l){for(this.isQuadratic=!0,i=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2]],a=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3]],o=0;o<h;o++)t=i[0]*this._lookUpTableQuadratic[o][0]+i[1]*this._lookUpTableQuadratic[o][1]+i[2]*this._lookUpTableQuadratic[o][2],r=a[0]*this._lookUpTableQuadratic[o][0]+a[1]*this._lookUpTableQuadratic[o][1]+a[2]*this._lookUpTableQuadratic[o][2],this.vertex(t,r);this.immediateMode._quadraticVertex[0]=arguments.length<=2?void 0:arguments[2],this.immediateMode._quadraticVertex[1]=arguments.length<=3?void 0:arguments[3]}else if(6===l){for(this.isQuadratic=!0,i=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3]],a=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4]],s=[this.immediateMode._quadraticVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5]],o=0;o<h;o++)t=i[0]*this._lookUpTableQuadratic[o][0]+i[1]*this._lookUpTableQuadratic[o][1]+i[2]*this._lookUpTableQuadratic[o][2],r=a[0]*this._lookUpTableQuadratic[o][0]+a[1]*this._lookUpTableQuadratic[o][1]+a[2]*this._lookUpTableQuadratic[o][2],n=s[0]*this._lookUpTableQuadratic[o][0]+s[1]*this._lookUpTableQuadratic[o][1]+s[2]*this._lookUpTableQuadratic[o][2],this.vertex(t,r,n);this.immediateMode._quadraticVertex[0]=arguments.length<=3?void 0:arguments[3],this.immediateMode._quadraticVertex[1]=arguments.length<=4?void 0:arguments[4],this.immediateMode._quadraticVertex[2]=arguments.length<=5?void 0:arguments[5]}},E.default.RendererGL.prototype.curveVertex=function(){var e,t,r,n,o,i=[],a=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var u=1/this._lutBezierDetail,c=0,d=1,f=0;c<1;){if(e=parseFloat(c.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(e),d.toFixed(6)===u.toFixed(6)){e=parseFloat(d.toFixed(6))+parseFloat(c.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(e);break}c+=u,d-=u,++f}}var h=this._lookUpTableBezier.length;if(2===l){if(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),8===this.immediateMode._curveVertex.length){for(this.isCurve=!0,i=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[6]]),a=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[7]]),o=0;o<h;o++)t=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],r=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],this.vertex(t,r);for(o=0;o<l;o++)this.immediateMode._curveVertex.shift()}}else if(3===l&&(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),this.immediateMode._curveVertex.push(arguments.length<=2?void 0:arguments[2]),12===this.immediateMode._curveVertex.length)){for(this.isCurve=!0,i=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[6],this.immediateMode._curveVertex[9]]),a=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[7],this.immediateMode._curveVertex[10]]),s=this._bezierToCatmull([this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[8],this.immediateMode._curveVertex[11]]),o=0;o<h;o++)t=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],r=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],n=s[0]*this._lookUpTableBezier[o][0]+s[1]*this._lookUpTableBezier[o][1]+s[2]*this._lookUpTableBezier[o][2]+s[3]*this._lookUpTableBezier[o][3],this.vertex(t,r,n);for(o=0;o<l;o++)this.immediateMode._curveVertex.shift()}},E.default.RendererGL.prototype.image=function(e,t,r,n,o,i,a,s,l){this._isErasing&&this.blendMode(this._cachedBlendMode),this._pInst.push(),this._pInst.noLights(),this._pInst.texture(e),this._pInst.textureMode(h.NORMAL);var u=0;t<=e.width&&(u=t/e.width);var c=1;t+n<=e.width&&(c=(t+n)/e.width);var d=0;r<=e.height&&(d=r/e.height);var f=1;r+o<=e.height&&(f=(r+o)/e.height),this.beginShape(),this.vertex(i,a,0,u,d),this.vertex(i+s,a,0,c,d),this.vertex(i+s,a+l,0,c,f),this.vertex(i,a+l,0,u,f),this.endShape(h.CLOSE),this._pInst.pop(),this._isErasing&&this.blendMode(h.REMOVE)};var o=E.default;r.default=o},{"../core/constants":253,"../core/main":264,"./p5.Geometry":313,"core-js/modules/es.array.concat":149,"core-js/modules/es.number.to-fixed":172}],308:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.splice"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,f=(n=e("../core/main"))&&n.__esModule?n:{default:n},o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}f.default.prototype.orbitControl=function(e,t,r){if(this._assert3d("orbitControl"),f.default._validateParameters("orbitControl",arguments),this.mouseX<this.width&&0<this.mouseX&&this.mouseY<this.height&&0<this.mouseY){var n=this._renderer._curCamera;void 0===e&&(e=1),void 0===t&&(t=e),void 0===r&&(r=.5),!0!==this.contextMenuDisabled&&(this.canvas.oncontextmenu=function(){return!1},this._setProperty("contextMenuDisabled",!0)),!0!==this.wheelDefaultDisabled&&(this.canvas.onwheel=function(){return!1},this._setProperty("wheelDefaultDisabled",!0));var o=this.height<this.width?this.height:this.width;if(this._mouseWheelDeltaY!==this._pmouseWheelDeltaY&&(0<this._mouseWheelDeltaY?this._renderer._curCamera._orbit(0,0,r*o):this._renderer._curCamera._orbit(0,0,-r*o)),this.mouseIsPressed)if(this.mouseButton===this.LEFT){var i=-e*(this.mouseX-this.pmouseX)/o,a=t*(this.mouseY-this.pmouseY)/o;this._renderer._curCamera._orbit(i,a,0)}else if(this.mouseButton===this.RIGHT){var s=n._getLocalAxes(),l=Math.sqrt(s.x[0]*s.x[0]+s.x[2]*s.x[2]);0!==l&&(s.x[0]/=l,s.x[2]/=l);var u=Math.sqrt(s.y[0]*s.y[0]+s.y[2]*s.y[2]);0!==u&&(s.y[0]/=u,s.y[2]/=u);var c=-1*e*(this.mouseX-this.pmouseX),d=-1*t*(this.mouseY-this.pmouseY);n.setPosition(n.eyeX+c*s.x[0]+d*s.z[0],n.eyeY,n.eyeZ+c*s.x[2]+d*s.z[2])}return this}},f.default.prototype.debugMode=function(){this._assert3d("debugMode");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];f.default._validateParameters("debugMode",t);for(var n=this._registeredMethods.post.length-1;0<=n;n--)this._registeredMethods.post[n].toString()!==this._grid().toString()&&this._registeredMethods.post[n].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(n,1);t[0]===o.GRID?this.registerMethod("post",this._grid.call(this,t[1],t[2],t[3],t[4],t[5])):t[0]===o.AXES?this.registerMethod("post",this._axesIcon.call(this,t[1],t[2],t[3],t[4])):(this.registerMethod("post",this._grid.call(this,t[0],t[1],t[2],t[3],t[4])),this.registerMethod("post",this._axesIcon.call(this,t[5],t[6],t[7],t[8])))},f.default.prototype.noDebugMode=function(){this._assert3d("noDebugMode");for(var e=this._registeredMethods.post.length-1;0<=e;e--)this._registeredMethods.post[e].toString()!==this._grid().toString()&&this._registeredMethods.post[e].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(e,1)},f.default.prototype._grid=function(e,r,n,o,i){void 0===e&&(e=this.width/2),void 0===r&&(r=Math.round(e/30)<4?4:Math.round(e/30)),void 0===n&&(n=0),void 0===o&&(o=0),void 0===i&&(i=0);var a=e/r,s=e/2;return function(){this.push(),this.stroke(255*this._renderer.curStrokeColor[0],255*this._renderer.curStrokeColor[1],255*this._renderer.curStrokeColor[2]),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]);for(var e=0;e<=r;e++)this.beginShape(this.LINES),this.vertex(-s+n,o,e*a-s+i),this.vertex(+s+n,o,e*a-s+i),this.endShape();for(var t=0;t<=r;t++)this.beginShape(this.LINES),this.vertex(t*a-s+n,o,-s+i),this.vertex(t*a-s+n,o,+s+i),this.endShape();this.pop()}},f.default.prototype._axesIcon=function(e,t,r,n){return void 0===e&&(e=40<this.width/20?this.width/20:40),void 0===t&&(t=-this.width/4),void 0===r&&(r=t),void 0===n&&(n=t),function(){this.push(),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]),this.strokeWeight(2),this.stroke(255,0,0),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t+e,r,n),this.endShape(),this.stroke(0,255,0),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t,r+e,n),this.endShape(),this.stroke(0,0,255),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t,r,n+e),this.endShape(),this.pop()}};var i=f.default;r.default=i},{"../core/constants":253,"../core/main":264,"core-js/modules/es.array.splice":164,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182}],309:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,y=(n=e("../core/main"))&&n.__esModule?n:{default:n},o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}y.default.prototype.ambientLight=function(e,t,r,n){this._assert3d("ambientLight"),y.default._validateParameters("ambientLight",arguments);var o=this.color.apply(this,arguments);return this._renderer.ambientLightColors.push(o._array[0],o._array[1],o._array[2]),this._renderer._enableLighting=!0,this},y.default.prototype.specularColor=function(e,t,r){this._assert3d("specularColor"),y.default._validateParameters("specularColor",arguments);var n=this.color.apply(this,arguments);return this._renderer.specularColors=[n._array[0],n._array[1],n._array[2]],this},y.default.prototype.directionalLight=function(e,t,r,n,o,i){var a,s,l,u;this._assert3d("directionalLight"),y.default._validateParameters("directionalLight",arguments),a=e instanceof y.default.Color?e:this.color(e,t,r);var c=arguments[arguments.length-1];u="number"==typeof c?(s=arguments[arguments.length-3],l=arguments[arguments.length-2],arguments[arguments.length-1]):(s=c.x,l=c.y,c.z);var d=Math.sqrt(s*s+l*l+u*u);return this._renderer.directionalLightDirections.push(s/d,l/d,u/d),this._renderer.directionalLightDiffuseColors.push(a._array[0],a._array[1],a._array[2]),Array.prototype.push.apply(this._renderer.directionalLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},y.default.prototype.pointLight=function(e,t,r,n,o,i){var a,s,l,u;this._assert3d("pointLight"),y.default._validateParameters("pointLight",arguments),a=e instanceof y.default.Color?e:this.color(e,t,r);var c=arguments[arguments.length-1];return u="number"==typeof c?(s=arguments[arguments.length-3],l=arguments[arguments.length-2],arguments[arguments.length-1]):(s=c.x,l=c.y,c.z),this._renderer.pointLightPositions.push(s,l,u),this._renderer.pointLightDiffuseColors.push(a._array[0],a._array[1],a._array[2]),Array.prototype.push.apply(this._renderer.pointLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},y.default.prototype.lights=function(){if(this._assert3d("lights"),this._colorMode===o.RGB)this.ambientLight(128,128,128),this.directionalLight(128,128,128,0,0,-1);else{var e=this._colorMaxes[this._colorMode][2];this.ambientLight(0,0,e),this.directionalLight(0,0,e,0,0,-1)}return this},y.default.prototype.lightFalloff=function(e,t,r){return this._assert3d("lightFalloff"),y.default._validateParameters("lightFalloff",arguments),e<0&&(e=0,console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")),t<0&&(t=0,console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")),r<0&&(r=0,console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")),0===e&&0===t&&0===r&&(e=1,console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")),this._renderer.constantAttenuation=e,this._renderer.linearAttenuation=t,this._renderer.quadraticAttenuation=r,this},y.default.prototype.spotLight=function(e,t,r,n,o,i,a,s,l,u,c){var d,f,h;this._assert3d("spotLight"),y.default._validateParameters("spotLight",arguments);var p=arguments.length;switch(p){case 11:case 10:d=this.color(e,t,r),f=new y.default.Vector(n,o,i),h=new y.default.Vector(a,s,l);break;case 9:e instanceof y.default.Color?(d=e,f=new y.default.Vector(t,r,n),h=new y.default.Vector(o,i,a),u=s,c=l):n instanceof y.default.Vector?(d=this.color(e,t,r),f=n,h=new y.default.Vector(o,i,a),u=s,c=l):a instanceof y.default.Vector?(d=this.color(e,t,r),f=new y.default.Vector(n,o,i),h=a,u=s,c=l):(d=this.color(e,t,r),f=new y.default.Vector(n,o,i),h=new y.default.Vector(a,s,l));break;case 8:u=(h=e instanceof y.default.Color?(d=e,f=new y.default.Vector(t,r,n),new y.default.Vector(o,i,a)):n instanceof y.default.Vector?(d=this.color(e,t,r),f=n,new y.default.Vector(o,i,a)):(d=this.color(e,t,r),f=new y.default.Vector(n,o,i),a),s);break;case 7:e instanceof y.default.Color&&t instanceof y.default.Vector?(d=e,f=t,h=new y.default.Vector(r,n,o),u=i,c=a):e instanceof y.default.Color&&o instanceof y.default.Vector?(d=e,f=new y.default.Vector(t,r,n),h=o,u=i,c=a):n instanceof y.default.Vector&&o instanceof y.default.Vector?(d=this.color(e,t,r),f=n,h=o,u=i,c=a):h=e instanceof y.default.Color?(d=e,f=new y.default.Vector(t,r,n),new y.default.Vector(o,i,a)):n instanceof y.default.Vector?(d=this.color(e,t,r),f=n,new y.default.Vector(o,i,a)):(d=this.color(e,t,r),f=new y.default.Vector(n,o,i),a);break;case 6:n instanceof y.default.Vector&&o instanceof y.default.Vector?(d=this.color(e,t,r),f=n,h=o,u=i):e instanceof y.default.Color&&o instanceof y.default.Vector?(d=e,f=new y.default.Vector(t,r,n),h=o,u=i):e instanceof y.default.Color&&t instanceof y.default.Vector&&(d=e,f=t,h=new y.default.Vector(r,n,o),u=i);break;case 5:e instanceof y.default.Color&&t instanceof y.default.Vector&&r instanceof y.default.Vector?(d=e,f=t,h=r,u=n,c=o):n instanceof y.default.Vector&&o instanceof y.default.Vector?(d=this.color(e,t,r),f=n,h=o):e instanceof y.default.Color&&o instanceof y.default.Vector?(d=e,f=new y.default.Vector(t,r,n),h=o):e instanceof y.default.Color&&t instanceof y.default.Vector&&(d=e,f=t,h=new y.default.Vector(r,n,o));break;case 4:d=e,f=t,h=r,u=n;break;case 3:d=e,f=t,h=r;break;default:return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p<3?"few":"many"," arguments were provided")),this}return this._renderer.spotLightDiffuseColors.push(d._array[0],d._array[1],d._array[2]),Array.prototype.push.apply(this._renderer.spotLightSpecularColors,this._renderer.specularColors),this._renderer.spotLightPositions.push(f.x,f.y,f.z),h.normalize(),this._renderer.spotLightDirections.push(h.x,h.y,h.z),void 0===u&&(u=Math.PI/3),void 0!==c&&c<1?(c=1,console.warn("Value of concentration needs to be greater than 1. Setting it to 1")):void 0===c&&(c=100),u=this._renderer._pInst._toRadians(u),this._renderer.spotLightAngle.push(Math.cos(u)),this._renderer.spotLightConc.push(c),this._renderer._enableLighting=!0,this},y.default.prototype.noLights=function(){return this._assert3d("noLights"),y.default._validateParameters("noLights",arguments),this._renderer._enableLighting=!1,this._renderer.ambientLightColors.length=0,this._renderer.specularColors=[1,1,1],this._renderer.directionalLightDirections.length=0,this._renderer.directionalLightDiffuseColors.length=0,this._renderer.directionalLightSpecularColors.length=0,this._renderer.pointLightPositions.length=0,this._renderer.pointLightDiffuseColors.length=0,this._renderer.pointLightSpecularColors.length=0,this._renderer.spotLightPositions.length=0,this._renderer.spotLightDirections.length=0,this._renderer.spotLightDiffuseColors.length=0,this._renderer.spotLightSpecularColors.length=0,this._renderer.spotLightAngle.length=0,this._renderer.spotLightConc.length=0,this._renderer.constantAttenuation=1,this._renderer.linearAttenuation=0,this._renderer.quadraticAttenuation=0,this._renderer._useShininess=1,this};var i=y.default;r.default=i},{"../core/constants":253,"../core/main":264}],310:[function(e,t,r){"use strict";e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.array.splice"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.match"),e("core-js/modules/es.string.split"),e("core-js/modules/es.string.trim"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,j=(n=e("../core/main"))&&n.__esModule?n:{default:n};function s(e,t,r){for(var n=0,o=e.length;n<o;n++)if(e[n]!==t.getUint8(r+n,!1))return!1;return!0}e("./p5.Geometry"),j.default.prototype.loadModel=function(e){var t,r,n;j.default._validateParameters("loadModel",arguments);var o=e.slice(-4);"boolean"==typeof arguments[1]?(t=arguments[1],r=arguments[2],n=arguments[3],void 0!==arguments[4]&&(o=arguments[4])):(t=!1,r=arguments[1],n=arguments[2],void 0!==arguments[3]&&(o=arguments[3]));var i=new j.default.Geometry;i.gid="".concat(e,"|").concat(t);var a=this;return o.match(/\.stl$/i)?this.httpDo(e,"GET","arrayBuffer",function(e){!function(e,t){if(function(e){for(var t=new DataView(e),r=[115,111,108,105,100],n=0;n<5;n++)if(s(r,t,n))return!1;return!0}(t))!function(e,t){for(var r,n,o,i,a,s,l,u=new DataView(t),c=u.getUint32(80,!0),d=!1,f=0;f<70;f++)1129270351===u.getUint32(f,!1)&&82===u.getUint8(f+4)&&61===u.getUint8(f+5)&&(d=!0,i=[],a=u.getUint8(f+6)/255,s=u.getUint8(f+7)/255,l=u.getUint8(f+8)/255);for(var h=0;h<c;h++){var p=84+50*h,y=u.getFloat32(p,!0),m=u.getFloat32(4+p,!0),g=u.getFloat32(8+p,!0);if(d){var v=u.getUint16(48+p,!0);o=0==(32768&v)?(r=(31&v)/31,n=(v>>5&31)/31,(v>>10&31)/31):(r=a,n=s,l)}for(var b=new j.default.Vector(y,m,g),_=1;_<=3;_++){var x=p+12*_,w=new j.default.Vector(u.getFloat32(x,!0),u.getFloat32(4+x,!0),u.getFloat32(8+x,!0));e.vertices.push(w),e.vertexNormals.push(b),d&&i.push(r,n,o)}e.faces.push([3*h,3*h+1,3*h+2]),e.uvs.push([0,0],[0,0],[0,0])}}(e,t);else{var r=new DataView(t);if(!("TextDecoder"in window))return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");var n=new TextDecoder("utf-8").decode(r).split("\n");!function(e,t){for(var r,n,o="",i=[],a=0;a<t.length;++a){for(var s=t[a].trim(),l=s.split(" "),u=0;u<l.length;++u)""===l[u]&&l.splice(u,1);if(0!==l.length)switch(o){case"":if("solid"!==l[0])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "solid"'));o="solid";break;case"solid":if("facet"!==l[0]||"normal"!==l[1])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "facet normal"'));r=new j.default.Vector(parseFloat(l[2]),parseFloat(l[3]),parseFloat(l[4])),e.vertexNormals.push(r,r,r),o="facet normal";break;case"facet normal":if("outer"!==l[0]||"loop"!==l[1])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "outer loop"'));o="vertex";break;case"vertex":if("vertex"===l[0])n=new j.default.Vector(parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3])),e.vertices.push(n),e.uvs.push([0,0]),i.push(e.vertices.indexOf(n));else{if("endloop"!==l[0])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "vertex" or "endloop"'));e.faces.push(i),i=[],o="endloop"}break;case"endloop":if("endfacet"!==l[0])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "endfacet"'));o="endfacet";break;case"endfacet":if("endsolid"!==l[0]){if("facet"!==l[0]||"normal"!==l[1])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "endsolid" or "facet normal"'));r=new j.default.Vector(parseFloat(l[2]),parseFloat(l[3]),parseFloat(l[4])),e.vertexNormals.push(r,r,r),o="facet normal"}break;default:console.error('Invalid state "'.concat(o,'"'))}}}(e,n)}}(i,e),t&&i.normalize(),a._decrementPreload(),"function"==typeof r&&r(i)},n):o.match(/\.obj$/i)?this.loadStrings(e,function(e){!function(e,t){for(var r={v:[],vt:[],vn:[]},n={},o=0;o<t.length;++o){var i=t[o].trim().split(/\b\s+/);if(0<i.length)if("v"===i[0]||"vn"===i[0]){var a=new j.default.Vector(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]));r[i[0]].push(a)}else if("vt"===i[0]){var s=[parseFloat(i[1]),1-parseFloat(i[2])];r[i[0]].push(s)}else if("f"===i[0])for(var l=3;l<i.length;++l){for(var u=[],c=[1,l-1,l],d=0;d<c.length;++d){var f=i[c[d]],h=0;if(void 0!==n[f])h=n[f];else{for(var p=f.split("/"),y=0;y<p.length;y++)p[y]=parseInt(p[y])-1;h=n[f]=e.vertices.length,e.vertices.push(r.v[p[0]].copy()),r.vt[p[1]]?e.uvs.push(r.vt[p[1]].slice()):e.uvs.push([0,0]),r.vn[p[2]]&&e.vertexNormals.push(r.vn[p[2]].copy())}u.push(h)}u[0]!==u[1]&&u[0]!==u[2]&&u[1]!==u[2]&&e.faces.push(u)}}0===e.vertexNormals.length&&e.computeNormals()}(i,e),t&&i.normalize(),a._decrementPreload(),"function"==typeof r&&r(i)},n):(j.default._friendlyFileLoadError(3,e),n?n():console.error("Sorry, the file type is invalid. Only OBJ and STL files are supported.")),i},j.default.prototype.model=function(e){this._assert3d("model"),j.default._validateParameters("model",arguments),0<e.vertices.length&&(this._renderer.geometryInHash(e.gid)||(e._makeTriangleEdges()._edgesToVertices(),this._renderer.createBuffers(e.gid,e)),this._renderer.drawBuffers(e.gid))};var o=j.default;r.default=o},{"../core/main":264,"./p5.Geometry":313,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.slice":162,"core-js/modules/es.array.splice":164,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.match":187,"core-js/modules/es.string.split":191,"core-js/modules/es.string.trim":193}],311:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.join"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,u=(n=e("../core/main"))&&n.__esModule?n:{default:n},o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Texture"),u.default.prototype.loadShader=function(e,t,r,n){u.default._validateParameters("loadShader",arguments),n=n||console.error;function o(){a._decrementPreload(),r&&r(i)}var i=new u.default.Shader,a=this,s=!1,l=!1;return this.loadStrings(e,function(e){i._vertSrc=e.join("\n"),l=!0,s&&o()},n),this.loadStrings(t,function(e){i._fragSrc=e.join("\n"),s=!0,l&&o()},n),i},u.default.prototype.createShader=function(e,t){return this._assert3d("createShader"),u.default._validateParameters("createShader",arguments),new u.default.Shader(this._renderer,e,t)},u.default.prototype.shader=function(e){return this._assert3d("shader"),u.default._validateParameters("shader",arguments),void 0===e._renderer&&(e._renderer=this._renderer),e.init(),e.isStrokeShader()?this._renderer.userStrokeShader=e:(this._renderer.userFillShader=e,this._renderer._useNormalMaterial=!1),this},u.default.prototype.resetShader=function(){return this._renderer.userFillShader=this._renderer.userStrokeShader=null,this},u.default.prototype.texture=function(e){return this._assert3d("texture"),u.default._validateParameters("texture",arguments),e.gifProperties&&e._animateGif(this),this._renderer.drawMode=o.TEXTURE,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._tex=e,this._renderer._setProperty("_doFill",!0),this},u.default.prototype.textureMode=function(e){e!==o.IMAGE&&e!==o.NORMAL?console.warn("You tried to set ".concat(e," textureMode only supports IMAGE & NORMAL ")):this._renderer.textureMode=e},u.default.prototype.textureWrap=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:e;this._renderer.textureWrapX=e,this._renderer.textureWrapY=t;for(var r=this._renderer.textures,n=0;n<r.length;n++)r[n].setWrapMode(e,t)},u.default.prototype.normalMaterial=function(){this._assert3d("normalMaterial");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return u.default._validateParameters("normalMaterial",t),this._renderer.drawMode=o.FILL,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!0,this._renderer.curFillColor=[1,1,1,1],this._renderer._setProperty("_doFill",!0),this.noStroke(),this},u.default.prototype.ambientMaterial=function(e,t,r){this._assert3d("ambientMaterial"),u.default._validateParameters("ambientMaterial",arguments);var n=u.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=n._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this._renderer._setProperty("_doFill",!0),this},u.default.prototype.emissiveMaterial=function(e,t,r,n){this._assert3d("emissiveMaterial"),u.default._validateParameters("emissiveMaterial",arguments);var o=u.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=o._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!0,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},u.default.prototype.specularMaterial=function(e,t,r,n){this._assert3d("specularMaterial"),u.default._validateParameters("specularMaterial",arguments);var o=u.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=o._array,this._renderer._useSpecularMaterial=!0,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},u.default.prototype.shininess=function(e){return this._assert3d("shininess"),u.default._validateParameters("shininess",arguments),e<1&&(e=1),this._renderer._useShininess=e,this},u.default.RendererGL.prototype._applyColorBlend=function(e){var t=this.GL,r=this.drawMode===o.TEXTURE||e[e.length-1]<1||this._isErasing;return r!==this._isBlending&&(r||this.curBlendMode!==o.BLEND&&this.curBlendMode!==o.ADD?t.enable(t.BLEND):t.disable(t.BLEND),t.depthMask(!0),this._isBlending=r),this._applyBlendMode(),e},u.default.RendererGL.prototype._applyBlendMode=function(){if(this._cachedBlendMode!==this.curBlendMode){var e=this.GL;switch(this.curBlendMode){case o.BLEND:case o.ADD:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;case o.REMOVE:e.blendEquation(e.FUNC_REVERSE_SUBTRACT),e.blendFunc(e.SRC_ALPHA,e.DST_ALPHA);break;case o.MULTIPLY:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ONE,e.ONE);break;case o.SCREEN:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE,e.ONE,e.ONE);break;case o.EXCLUSION:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE_MINUS_SRC_COLOR,e.ONE,e.ONE);break;case o.REPLACE:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO);break;case o.SUBTRACT:e.blendEquationSeparate(e.FUNC_REVERSE_SUBTRACT,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE,e.ONE,e.ONE);break;case o.DARKEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MIN_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");break;case o.LIGHTEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MAX_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");break;default:console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.")}this._isErasing||(this._cachedBlendMode=this.curBlendMode)}};var i=u.default;r.default=i},{"../core/constants":253,"../core/main":264,"./p5.Texture":320,"core-js/modules/es.array.join":159}],312:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,y=(n=e("../core/main"))&&n.__esModule?n:{default:n};y.default.prototype.camera=function(){var e;this._assert3d("camera");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return y.default._validateParameters("camera",r),(e=this._renderer._curCamera).camera.apply(e,r),this},y.default.prototype.perspective=function(){var e;this._assert3d("perspective");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return y.default._validateParameters("perspective",r),(e=this._renderer._curCamera).perspective.apply(e,r),this},y.default.prototype.ortho=function(){var e;this._assert3d("ortho");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return y.default._validateParameters("ortho",r),(e=this._renderer._curCamera).ortho.apply(e,r),this},y.default.prototype.frustum=function(){var e;this._assert3d("frustum");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return y.default._validateParameters("frustum",r),(e=this._renderer._curCamera).frustum.apply(e,r),this},y.default.prototype.createCamera=function(){this._assert3d("createCamera");var e=new y.default.Camera(this._renderer);return e._computeCameraDefaultSettings(),e._setDefaultCamera(),this._renderer._curCamera=e},y.default.Camera=function(e){this._renderer=e,this.cameraType="default",this.cameraMatrix=new y.default.Matrix,this.projMatrix=new y.default.Matrix},y.default.Camera.prototype.perspective=function(e,t,r,n){this.cameraType=0<arguments.length?"custom":"default",void 0===e?(e=this.defaultCameraFOV,this.cameraFOV=e):this.cameraFOV=this._renderer._pInst._toRadians(e),void 0===t&&(t=this.defaultAspectRatio),void 0===r&&(r=this.defaultCameraNear),void 0===n&&(n=this.defaultCameraFar),r<=1e-4&&(r=.01,console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")),n<r&&console.log("Perspective far plane value is less than near plane value. Nothing will be shown."),this.aspectRatio=t,this.cameraNear=r,this.cameraFar=n,this.projMatrix=y.default.Matrix.identity();var o=1/Math.tan(this.cameraFOV/2),i=1/(this.cameraNear-this.cameraFar);this.projMatrix.set(o/t,0,0,0,0,-o,0,0,0,0,(n+r)*i,-1,0,0,2*n*r*i,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15])},y.default.Camera.prototype.ortho=function(e,t,r,n,o,i){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=this._renderer.height/2),void 0===o&&(o=0),void 0===i&&(i=Math.max(this._renderer.width,this._renderer.height));var a=t-e,s=n-r,l=i-o,u=2/a,c=2/s,d=-2/l,f=-(t+e)/a,h=-(n+r)/s,p=-(i+o)/l;this.projMatrix=y.default.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,-c,0,0,0,0,d,0,f,h,p,1),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},y.default.Camera.prototype.frustum=function(e,t,r,n,o,i){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=this._renderer.height/2),void 0===o&&(o=0),void 0===i&&(i=Math.max(this._renderer.width,this._renderer.height));var a=t-e,s=n-r,l=i-o,u=2*o/a,c=2*o/s,d=-2*i*o/l,f=(t+e)/a,h=(n+r)/s,p=-(i+o)/l;this.projMatrix=y.default.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,c,0,0,f,h,p,-1,0,0,d,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},y.default.Camera.prototype._rotateView=function(e,t,r,n){var o=this.centerX,i=this.centerY,a=this.centerZ;o-=this.eyeX,i-=this.eyeY,a-=this.eyeZ;var s=y.default.Matrix.identity(this._renderer._pInst);s.rotate(this._renderer._pInst._toRadians(e),t,r,n);var l=[o*s.mat4[0]+i*s.mat4[4]+a*s.mat4[8],o*s.mat4[1]+i*s.mat4[5]+a*s.mat4[9],o*s.mat4[2]+i*s.mat4[6]+a*s.mat4[10]];l[0]+=this.eyeX,l[1]+=this.eyeY,l[2]+=this.eyeZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,l[0],l[1],l[2],this.upX,this.upY,this.upZ)},y.default.Camera.prototype.pan=function(e){var t=this._getLocalAxes();this._rotateView(e,t.y[0],t.y[1],t.y[2])},y.default.Camera.prototype.tilt=function(e){var t=this._getLocalAxes();this._rotateView(e,t.x[0],t.x[1],t.x[2])},y.default.Camera.prototype.lookAt=function(e,t,r){this.camera(this.eyeX,this.eyeY,this.eyeZ,e,t,r,this.upX,this.upY,this.upZ)},y.default.Camera.prototype.camera=function(e,t,r,n,o,i,a,s,l){void 0===e&&(e=this.defaultEyeX,t=this.defaultEyeY,r=this.defaultEyeZ,n=e,o=t,s=1,l=a=i=0),this.eyeX=e,this.eyeY=t,this.eyeZ=r,void 0!==n&&(this.centerX=n,this.centerY=o,this.centerZ=i),void 0!==a&&(this.upX=a,this.upY=s,this.upZ=l);var u=this._getLocalAxes();this.cameraMatrix.set(u.x[0],u.y[0],u.z[0],0,u.x[1],u.y[1],u.z[1],0,u.x[2],u.y[2],u.z[2],0,0,0,0,1);var c=-e,d=-t,f=-r;return this.cameraMatrix.translate([c,d,f]),this._isActive()&&this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0],this.cameraMatrix.mat4[1],this.cameraMatrix.mat4[2],this.cameraMatrix.mat4[3],this.cameraMatrix.mat4[4],this.cameraMatrix.mat4[5],this.cameraMatrix.mat4[6],this.cameraMatrix.mat4[7],this.cameraMatrix.mat4[8],this.cameraMatrix.mat4[9],this.cameraMatrix.mat4[10],this.cameraMatrix.mat4[11],this.cameraMatrix.mat4[12],this.cameraMatrix.mat4[13],this.cameraMatrix.mat4[14],this.cameraMatrix.mat4[15]),this},y.default.Camera.prototype.move=function(e,t,r){var n=this._getLocalAxes(),o=[n.x[0]*e,n.x[1]*e,n.x[2]*e],i=[n.y[0]*t,n.y[1]*t,n.y[2]*t],a=[n.z[0]*r,n.z[1]*r,n.z[2]*r];this.camera(this.eyeX+o[0]+i[0]+a[0],this.eyeY+o[1]+i[1]+a[1],this.eyeZ+o[2]+i[2]+a[2],this.centerX+o[0]+i[0]+a[0],this.centerY+o[1]+i[1]+a[1],this.centerZ+o[2]+i[2]+a[2],0,1,0)},y.default.Camera.prototype.setPosition=function(e,t,r){var n=e-this.eyeX,o=t-this.eyeY,i=r-this.eyeZ;this.camera(e,t,r,this.centerX+n,this.centerY+o,this.centerZ+i,0,1,0)},y.default.Camera.prototype._computeCameraDefaultSettings=function(){this.defaultCameraFOV=60/180*Math.PI,this.defaultAspectRatio=this._renderer.width/this._renderer.height,this.defaultEyeX=0,this.defaultEyeY=0,this.defaultEyeZ=this._renderer.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCenterX=0,this.defaultCenterY=0,this.defaultCenterZ=0,this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ},y.default.Camera.prototype._setDefaultCamera=function(){this.cameraFOV=this.defaultCameraFOV,this.aspectRatio=this.defaultAspectRatio,this.eyeX=this.defaultEyeX,this.eyeY=this.defaultEyeY,this.eyeZ=this.defaultEyeZ,this.centerX=this.defaultCenterX,this.centerY=this.defaultCenterY,this.centerZ=this.defaultCenterZ,this.upX=0,this.upY=1,this.upZ=0,this.cameraNear=this.defaultCameraNear,this.cameraFar=this.defaultCameraFar,this.perspective(),this.camera(),this.cameraType="default"},y.default.Camera.prototype._resize=function(){"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this._renderer.width/this._renderer.height)},y.default.Camera.prototype.copy=function(){var e=new y.default.Camera(this._renderer);return e.cameraFOV=this.cameraFOV,e.aspectRatio=this.aspectRatio,e.eyeX=this.eyeX,e.eyeY=this.eyeY,e.eyeZ=this.eyeZ,e.centerX=this.centerX,e.centerY=this.centerY,e.centerZ=this.centerZ,e.cameraNear=this.cameraNear,e.cameraFar=this.cameraFar,e.cameraType=this.cameraType,e.cameraMatrix=this.cameraMatrix.copy(),e.projMatrix=this.projMatrix.copy(),e},y.default.Camera.prototype._getLocalAxes=function(){var e=this.eyeX-this.centerX,t=this.eyeY-this.centerY,r=this.eyeZ-this.centerZ,n=Math.sqrt(e*e+t*t+r*r);0!==n&&(e/=n,t/=n,r/=n);var o=this.upX,i=this.upY,a=this.upZ,s=i*r-a*t,l=-o*r+a*e,u=o*t-i*e;o=t*u-r*l,i=-e*u+r*s,a=e*l-t*s;var c=Math.sqrt(s*s+l*l+u*u);0!==c&&(s/=c,l/=c,u/=c);var d=Math.sqrt(o*o+i*i+a*a);return 0!==d&&(o/=d,i/=d,a/=d),{x:[s,l,u],y:[o,i,a],z:[e,t,r]}},y.default.Camera.prototype._orbit=function(e,t,r){var n=this.eyeX-this.centerX,o=this.eyeY-this.centerY,i=this.eyeZ-this.centerZ,a=Math.sqrt(n*n+o*o+i*i),s=Math.atan2(n,i),l=Math.acos(Math.max(-1,Math.min(1,o/a)));s+=e,(a+=r)<0&&(a=.1),(l+=t)>Math.PI?l=Math.PI:l<=0&&(l=.001);var u=Math.sin(l)*a*Math.sin(s),c=Math.cos(l)*a,d=Math.sin(l)*a*Math.cos(s);this.camera(u+this.centerX,c+this.centerY,d+this.centerZ,this.centerX,this.centerY,this.centerZ,0,1,0)},y.default.Camera.prototype._isActive=function(){return this===this._renderer._curCamera},y.default.prototype.setCamera=function(e){this._renderer._curCamera=e,this._renderer.uPMatrix.set(e.projMatrix.mat4[0],e.projMatrix.mat4[1],e.projMatrix.mat4[2],e.projMatrix.mat4[3],e.projMatrix.mat4[4],e.projMatrix.mat4[5],e.projMatrix.mat4[6],e.projMatrix.mat4[7],e.projMatrix.mat4[8],e.projMatrix.mat4[9],e.projMatrix.mat4[10],e.projMatrix.mat4[11],e.projMatrix.mat4[12],e.projMatrix.mat4[13],e.projMatrix.mat4[14],e.projMatrix.mat4[15])};var o=y.default.Camera;r.default=o},{"../core/main":264}],313:[function(e,t,r){"use strict";e("core-js/modules/es.string.sub"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,c=(n=e("../core/main"))&&n.__esModule?n:{default:n};c.default.Geometry=function(e,t,r){return this.vertices=[],this.lineVertices=[],this.lineNormals=[],this.vertexNormals=[],this.faces=[],this.uvs=[],this.edges=[],this.vertexColors=[],this.detailX=void 0!==e?e:1,this.detailY=void 0!==t?t:1,this.dirtyFlags={},r instanceof Function&&r.call(this),this},c.default.Geometry.prototype.reset=function(){this.lineVertices.length=0,this.lineNormals.length=0,this.vertices.length=0,this.edges.length=0,this.vertexColors.length=0,this.vertexNormals.length=0,this.uvs.length=0,this.dirtyFlags={}},c.default.Geometry.prototype.computeFaces=function(){this.faces.length=0;for(var e,t,r,n,o=this.detailX+1,i=0;i<this.detailY;i++)for(var a=0;a<this.detailX;a++)t=(e=i*o+a)+1,r=(i+1)*o+a+1,n=(i+1)*o+a,this.faces.push([e,t,n]),this.faces.push([n,t,r]);return this},c.default.Geometry.prototype._getFaceNormal=function(e){var t=this.faces[e],r=this.vertices[t[0]],n=this.vertices[t[1]],o=this.vertices[t[2]],i=c.default.Vector.sub(n,r),a=c.default.Vector.sub(o,r),s=c.default.Vector.cross(i,a),l=c.default.Vector.mag(s),u=l/(c.default.Vector.mag(i)*c.default.Vector.mag(a));return 0===u||isNaN(u)?(console.warn("p5.Geometry.prototype._getFaceNormal:","face has colinear sides or a repeated vertex"),s):(1<u&&(u=1),s.mult(Math.asin(u)/l))},c.default.Geometry.prototype.computeNormals=function(){var e,t=this.vertexNormals,r=this.vertices,n=this.faces;for(e=t.length=0;e<r.length;++e)t.push(new c.default.Vector);for(var o=0;o<n.length;++o)for(var i=n[o],a=this._getFaceNormal(o),s=0;s<3;++s){t[i[s]].add(a)}for(e=0;e<r.length;++e)t[e].normalize();return this},c.default.Geometry.prototype.averageNormals=function(){for(var e=0;e<=this.detailY;e++){var t=this.detailX+1,r=c.default.Vector.add(this.vertexNormals[e*t],this.vertexNormals[e*t+this.detailX]);r=c.default.Vector.div(r,2),this.vertexNormals[e*t]=r,this.vertexNormals[e*t+this.detailX]=r}return this},c.default.Geometry.prototype.averagePoleNormals=function(){for(var e=new c.default.Vector(0,0,0),t=0;t<this.detailX;t++)e.add(this.vertexNormals[t]);e=c.default.Vector.div(e,this.detailX);for(var r=0;r<this.detailX;r++)this.vertexNormals[r]=e;e=new c.default.Vector(0,0,0);for(var n=this.vertices.length-1;n>this.vertices.length-1-this.detailX;n--)e.add(this.vertexNormals[n]);e=c.default.Vector.div(e,this.detailX);for(var o=this.vertices.length-1;o>this.vertices.length-1-this.detailX;o--)this.vertexNormals[o]=e;return this},c.default.Geometry.prototype._makeTriangleEdges=function(){if(this.edges.length=0,Array.isArray(this.strokeIndices))for(var e=0,t=this.strokeIndices.length;e<t;e++)this.edges.push(this.strokeIndices[e]);else for(var r=0;r<this.faces.length;r++)this.edges.push([this.faces[r][0],this.faces[r][1]]),this.edges.push([this.faces[r][1],this.faces[r][2]]),this.edges.push([this.faces[r][2],this.faces[r][0]]);return this},c.default.Geometry.prototype._edgesToVertices=function(){this.lineVertices.length=0;for(var e=this.lineNormals.length=0;e<this.edges.length;e++){var t=this.vertices[this.edges[e][0]],r=this.vertices[this.edges[e][1]],n=r.copy().sub(t).normalize(),o=t.array(),i=t.array(),a=r.array(),s=r.array(),l=n.array(),u=n.array();l.push(1),u.push(-1),this.lineNormals.push(l,u,l,l,u,u),this.lineVertices.push(o,i,a,a,i,s)}return this},c.default.Geometry.prototype.normalize=function(){if(0<this.vertices.length){for(var e=this.vertices[0].copy(),t=this.vertices[0].copy(),r=0;r<this.vertices.length;r++)e.x=Math.max(e.x,this.vertices[r].x),t.x=Math.min(t.x,this.vertices[r].x),e.y=Math.max(e.y,this.vertices[r].y),t.y=Math.min(t.y,this.vertices[r].y),e.z=Math.max(e.z,this.vertices[r].z),t.z=Math.min(t.z,this.vertices[r].z);for(var n=c.default.Vector.lerp(e,t,.5),o=c.default.Vector.sub(e,t),i=200/Math.max(Math.max(o.x,o.y),o.z),a=0;a<this.vertices.length;a++)this.vertices[a].sub(n),this.vertices[a].mult(i)}return this};var o=c.default.Geometry;r.default=o},{"../core/main":264,"core-js/modules/es.string.sub":192}],314:[function(e,t,r){"use strict";e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.typed-array.float32-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,L=(n=e("../core/main"))&&n.__esModule?n:{default:n};var o=Array,P=function(e){return e instanceof Array};"undefined"!=typeof Float32Array&&(o=Float32Array,P=function(e){return e instanceof Array||e instanceof Float32Array}),L.default.Matrix=function(){for(var e=new Array(arguments.length),t=0;t<e.length;++t)e[t]=arguments[t];return e.length&&e[e.length-1]instanceof L.default&&(this.p5=e[e.length-1]),"mat3"===e[0]?this.mat3=Array.isArray(e[1])?e[1]:new o([1,0,0,0,1,0,0,0,1]):this.mat4=Array.isArray(e[0])?e[0]:new o([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this},L.default.Matrix.prototype.set=function(e){return e instanceof L.default.Matrix?this.mat4=e.mat4:P(e)?this.mat4=e:16===arguments.length&&(this.mat4[0]=e,this.mat4[1]=arguments[1],this.mat4[2]=arguments[2],this.mat4[3]=arguments[3],this.mat4[4]=arguments[4],this.mat4[5]=arguments[5],this.mat4[6]=arguments[6],this.mat4[7]=arguments[7],this.mat4[8]=arguments[8],this.mat4[9]=arguments[9],this.mat4[10]=arguments[10],this.mat4[11]=arguments[11],this.mat4[12]=arguments[12],this.mat4[13]=arguments[13],this.mat4[14]=arguments[14],this.mat4[15]=arguments[15]),this},L.default.Matrix.prototype.get=function(){return new L.default.Matrix(this.mat4,this.p5)},L.default.Matrix.prototype.copy=function(){var e=new L.default.Matrix(this.p5);return e.mat4[0]=this.mat4[0],e.mat4[1]=this.mat4[1],e.mat4[2]=this.mat4[2],e.mat4[3]=this.mat4[3],e.mat4[4]=this.mat4[4],e.mat4[5]=this.mat4[5],e.mat4[6]=this.mat4[6],e.mat4[7]=this.mat4[7],e.mat4[8]=this.mat4[8],e.mat4[9]=this.mat4[9],e.mat4[10]=this.mat4[10],e.mat4[11]=this.mat4[11],e.mat4[12]=this.mat4[12],e.mat4[13]=this.mat4[13],e.mat4[14]=this.mat4[14],e.mat4[15]=this.mat4[15],e},L.default.Matrix.identity=function(e){return new L.default.Matrix(e)},L.default.Matrix.prototype.transpose=function(e){var t,r,n,o,i,a;return e instanceof L.default.Matrix?(t=e.mat4[1],r=e.mat4[2],n=e.mat4[3],o=e.mat4[6],i=e.mat4[7],a=e.mat4[11],this.mat4[0]=e.mat4[0],this.mat4[1]=e.mat4[4],this.mat4[2]=e.mat4[8],this.mat4[3]=e.mat4[12],this.mat4[4]=t,this.mat4[5]=e.mat4[5],this.mat4[6]=e.mat4[9],this.mat4[7]=e.mat4[13],this.mat4[8]=r,this.mat4[9]=o,this.mat4[10]=e.mat4[10],this.mat4[11]=e.mat4[14],this.mat4[12]=n,this.mat4[13]=i,this.mat4[14]=a,this.mat4[15]=e.mat4[15]):P(e)&&(t=e[1],r=e[2],n=e[3],o=e[6],i=e[7],a=e[11],this.mat4[0]=e[0],this.mat4[1]=e[4],this.mat4[2]=e[8],this.mat4[3]=e[12],this.mat4[4]=t,this.mat4[5]=e[5],this.mat4[6]=e[9],this.mat4[7]=e[13],this.mat4[8]=r,this.mat4[9]=o,this.mat4[10]=e[10],this.mat4[11]=e[14],this.mat4[12]=n,this.mat4[13]=i,this.mat4[14]=a,this.mat4[15]=e[15]),this},L.default.Matrix.prototype.invert=function(e){var t,r,n,o,i,a,s,l,u,c,d,f,h,p,y,m;e instanceof L.default.Matrix?(t=e.mat4[0],r=e.mat4[1],n=e.mat4[2],o=e.mat4[3],i=e.mat4[4],a=e.mat4[5],s=e.mat4[6],l=e.mat4[7],u=e.mat4[8],c=e.mat4[9],d=e.mat4[10],f=e.mat4[11],h=e.mat4[12],p=e.mat4[13],y=e.mat4[14],m=e.mat4[15]):P(e)&&(t=e[0],r=e[1],n=e[2],o=e[3],i=e[4],a=e[5],s=e[6],l=e[7],u=e[8],c=e[9],d=e[10],f=e[11],h=e[12],p=e[13],y=e[14],m=e[15]);var g=t*a-r*i,v=t*s-n*i,b=t*l-o*i,_=r*s-n*a,x=r*l-o*a,w=n*l-o*s,j=u*p-c*h,S=u*y-d*h,M=u*m-f*h,E=c*y-d*p,T=c*m-f*p,O=d*m-f*y,C=g*O-v*T+b*E+_*M-x*S+w*j;return C?(C=1/C,this.mat4[0]=(a*O-s*T+l*E)*C,this.mat4[1]=(n*T-r*O-o*E)*C,this.mat4[2]=(p*w-y*x+m*_)*C,this.mat4[3]=(d*x-c*w-f*_)*C,this.mat4[4]=(s*M-i*O-l*S)*C,this.mat4[5]=(t*O-n*M+o*S)*C,this.mat4[6]=(y*b-h*w-m*v)*C,this.mat4[7]=(u*w-d*b+f*v)*C,this.mat4[8]=(i*T-a*M+l*j)*C,this.mat4[9]=(r*M-t*T-o*j)*C,this.mat4[10]=(h*x-p*b+m*g)*C,this.mat4[11]=(c*b-u*x-f*g)*C,this.mat4[12]=(a*S-i*E-s*j)*C,this.mat4[13]=(t*E-r*S+n*j)*C,this.mat4[14]=(p*v-h*_-y*g)*C,this.mat4[15]=(u*_-c*v+d*g)*C,this):null},L.default.Matrix.prototype.invert3x3=function(){var e=this.mat3[0],t=this.mat3[1],r=this.mat3[2],n=this.mat3[3],o=this.mat3[4],i=this.mat3[5],a=this.mat3[6],s=this.mat3[7],l=this.mat3[8],u=l*o-i*s,c=-l*n+i*a,d=s*n-o*a,f=e*u+t*c+r*d;return f?(f=1/f,this.mat3[0]=u*f,this.mat3[1]=(-l*t+r*s)*f,this.mat3[2]=(i*t-r*o)*f,this.mat3[3]=c*f,this.mat3[4]=(l*e-r*a)*f,this.mat3[5]=(-i*e+r*n)*f,this.mat3[6]=d*f,this.mat3[7]=(-s*e+t*a)*f,this.mat3[8]=(o*e-t*n)*f,this):null},L.default.Matrix.prototype.transpose3x3=function(e){var t=e[1],r=e[2],n=e[5];return this.mat3[1]=e[3],this.mat3[2]=e[6],this.mat3[3]=t,this.mat3[5]=e[7],this.mat3[6]=r,this.mat3[7]=n,this},L.default.Matrix.prototype.inverseTranspose=function(e){void 0===this.mat3?console.error("sorry, this function only works with mat3"):(this.mat3[0]=e.mat4[0],this.mat3[1]=e.mat4[1],this.mat3[2]=e.mat4[2],this.mat3[3]=e.mat4[4],this.mat3[4]=e.mat4[5],this.mat3[5]=e.mat4[6],this.mat3[6]=e.mat4[8],this.mat3[7]=e.mat4[9],this.mat3[8]=e.mat4[10]);var t=this.invert3x3();if(t)t.transpose3x3(this.mat3);else for(var r=0;r<9;r++)this.mat3[r]=0;return this},L.default.Matrix.prototype.determinant=function(){var e=this.mat4[0]*this.mat4[5]-this.mat4[1]*this.mat4[4],t=this.mat4[0]*this.mat4[6]-this.mat4[2]*this.mat4[4],r=this.mat4[0]*this.mat4[7]-this.mat4[3]*this.mat4[4],n=this.mat4[1]*this.mat4[6]-this.mat4[2]*this.mat4[5],o=this.mat4[1]*this.mat4[7]-this.mat4[3]*this.mat4[5],i=this.mat4[2]*this.mat4[7]-this.mat4[3]*this.mat4[6],a=this.mat4[8]*this.mat4[13]-this.mat4[9]*this.mat4[12],s=this.mat4[8]*this.mat4[14]-this.mat4[10]*this.mat4[12],l=this.mat4[8]*this.mat4[15]-this.mat4[11]*this.mat4[12],u=this.mat4[9]*this.mat4[14]-this.mat4[10]*this.mat4[13],c=this.mat4[9]*this.mat4[15]-this.mat4[11]*this.mat4[13];return e*(this.mat4[10]*this.mat4[15]-this.mat4[11]*this.mat4[14])-t*c+r*u+n*l-o*s+i*a},L.default.Matrix.prototype.mult=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof L.default.Matrix)t=e.mat4;else if(P(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4[0],n=this.mat4[1],o=this.mat4[2],i=this.mat4[3];return this.mat4[0]=r*t[0]+n*t[4]+o*t[8]+i*t[12],this.mat4[1]=r*t[1]+n*t[5]+o*t[9]+i*t[13],this.mat4[2]=r*t[2]+n*t[6]+o*t[10]+i*t[14],this.mat4[3]=r*t[3]+n*t[7]+o*t[11]+i*t[15],r=this.mat4[4],n=this.mat4[5],o=this.mat4[6],i=this.mat4[7],this.mat4[4]=r*t[0]+n*t[4]+o*t[8]+i*t[12],this.mat4[5]=r*t[1]+n*t[5]+o*t[9]+i*t[13],this.mat4[6]=r*t[2]+n*t[6]+o*t[10]+i*t[14],this.mat4[7]=r*t[3]+n*t[7]+o*t[11]+i*t[15],r=this.mat4[8],n=this.mat4[9],o=this.mat4[10],i=this.mat4[11],this.mat4[8]=r*t[0]+n*t[4]+o*t[8]+i*t[12],this.mat4[9]=r*t[1]+n*t[5]+o*t[9]+i*t[13],this.mat4[10]=r*t[2]+n*t[6]+o*t[10]+i*t[14],this.mat4[11]=r*t[3]+n*t[7]+o*t[11]+i*t[15],r=this.mat4[12],n=this.mat4[13],o=this.mat4[14],i=this.mat4[15],this.mat4[12]=r*t[0]+n*t[4]+o*t[8]+i*t[12],this.mat4[13]=r*t[1]+n*t[5]+o*t[9]+i*t[13],this.mat4[14]=r*t[2]+n*t[6]+o*t[10]+i*t[14],this.mat4[15]=r*t[3]+n*t[7]+o*t[11]+i*t[15],this},L.default.Matrix.prototype.apply=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof L.default.Matrix)t=e.mat4;else if(P(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4,n=r[0],o=r[4],i=r[8],a=r[12];r[0]=t[0]*n+t[1]*o+t[2]*i+t[3]*a,r[4]=t[4]*n+t[5]*o+t[6]*i+t[7]*a,r[8]=t[8]*n+t[9]*o+t[10]*i+t[11]*a,r[12]=t[12]*n+t[13]*o+t[14]*i+t[15]*a;var s=r[1],l=r[5],u=r[9],c=r[13];r[1]=t[0]*s+t[1]*l+t[2]*u+t[3]*c,r[5]=t[4]*s+t[5]*l+t[6]*u+t[7]*c,r[9]=t[8]*s+t[9]*l+t[10]*u+t[11]*c,r[13]=t[12]*s+t[13]*l+t[14]*u+t[15]*c;var d=r[2],f=r[6],h=r[10],p=r[14];r[2]=t[0]*d+t[1]*f+t[2]*h+t[3]*p,r[6]=t[4]*d+t[5]*f+t[6]*h+t[7]*p,r[10]=t[8]*d+t[9]*f+t[10]*h+t[11]*p,r[14]=t[12]*d+t[13]*f+t[14]*h+t[15]*p;var y=r[3],m=r[7],g=r[11],v=r[15];return r[3]=t[0]*y+t[1]*m+t[2]*g+t[3]*v,r[7]=t[4]*y+t[5]*m+t[6]*g+t[7]*v,r[11]=t[8]*y+t[9]*m+t[10]*g+t[11]*v,r[15]=t[12]*y+t[13]*m+t[14]*g+t[15]*v,this},L.default.Matrix.prototype.scale=function(e,t,r){return e instanceof L.default.Vector?(t=e.y,r=e.z,e=e.x):e instanceof Array&&(t=e[1],r=e[2],e=e[0]),this.mat4[0]*=e,this.mat4[1]*=e,this.mat4[2]*=e,this.mat4[3]*=e,this.mat4[4]*=t,this.mat4[5]*=t,this.mat4[6]*=t,this.mat4[7]*=t,this.mat4[8]*=r,this.mat4[9]*=r,this.mat4[10]*=r,this.mat4[11]*=r,this},L.default.Matrix.prototype.rotate=function(e,t,r,n){t instanceof L.default.Vector?(r=t.y,n=t.z,t=t.x):t instanceof Array&&(r=t[1],n=t[2],t=t[0]);var o=Math.sqrt(t*t+r*r+n*n);t*=1/o,r*=1/o,n*=1/o;var i=this.mat4[0],a=this.mat4[1],s=this.mat4[2],l=this.mat4[3],u=this.mat4[4],c=this.mat4[5],d=this.mat4[6],f=this.mat4[7],h=this.mat4[8],p=this.mat4[9],y=this.mat4[10],m=this.mat4[11],g=Math.sin(e),v=Math.cos(e),b=1-v,_=t*t*b+v,x=r*t*b+n*g,w=n*t*b-r*g,j=t*r*b-n*g,S=r*r*b+v,M=n*r*b+t*g,E=t*n*b+r*g,T=r*n*b-t*g,O=n*n*b+v;return this.mat4[0]=i*_+u*x+h*w,this.mat4[1]=a*_+c*x+p*w,this.mat4[2]=s*_+d*x+y*w,this.mat4[3]=l*_+f*x+m*w,this.mat4[4]=i*j+u*S+h*M,this.mat4[5]=a*j+c*S+p*M,this.mat4[6]=s*j+d*S+y*M,this.mat4[7]=l*j+f*S+m*M,this.mat4[8]=i*E+u*T+h*O,this.mat4[9]=a*E+c*T+p*O,this.mat4[10]=s*E+d*T+y*O,this.mat4[11]=l*E+f*T+m*O,this},L.default.Matrix.prototype.translate=function(e){var t=e[0],r=e[1],n=e[2]||0;this.mat4[12]+=this.mat4[0]*t+this.mat4[4]*r+this.mat4[8]*n,this.mat4[13]+=this.mat4[1]*t+this.mat4[5]*r+this.mat4[9]*n,this.mat4[14]+=this.mat4[2]*t+this.mat4[6]*r+this.mat4[10]*n,this.mat4[15]+=this.mat4[3]*t+this.mat4[7]*r+this.mat4[11]*n},L.default.Matrix.prototype.rotateX=function(e){this.rotate(e,1,0,0)},L.default.Matrix.prototype.rotateY=function(e){this.rotate(e,0,1,0)},L.default.Matrix.prototype.rotateZ=function(e){this.rotate(e,0,0,1)},L.default.Matrix.prototype.perspective=function(e,t,r,n){var o=1/Math.tan(e/2),i=1/(r-n);return this.mat4[0]=o/t,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=o,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=(n+r)*i,this.mat4[11]=-1,this.mat4[12]=0,this.mat4[13]=0,this.mat4[14]=2*n*r*i,this.mat4[15]=0,this},L.default.Matrix.prototype.ortho=function(e,t,r,n,o,i){var a=1/(e-t),s=1/(r-n),l=1/(o-i);return this.mat4[0]=-2*a,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=-2*s,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=2*l,this.mat4[11]=0,this.mat4[12]=(e+t)*a,this.mat4[13]=(n+r)*s,this.mat4[14]=(i+o)*l,this.mat4[15]=1,this};var i=L.default.Matrix;r.default=i},{"../core/main":264,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.float32-array":203,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223}],315:[function(e,t,r){"use strict";e("core-js/modules/es.array.map"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.RenderBuffer=function(e,t,r,n,o,i){this.size=e,this.src=t,this.dst=r,this.attr=n,this._renderer=o,this.map=i},o.default.RenderBuffer.prototype._prepareBuffer=function(e,t){var r,n=t.attributes,o=this._renderer.GL;r=e.model?e.model:e;var i=n[this.attr];if(i){var a=e[this.dst],s=r[this.src];if(0<s.length){var l=!a;if(l&&(e[this.dst]=a=o.createBuffer()),o.bindBuffer(o.ARRAY_BUFFER,a),l||!1!==r.dirtyFlags[this.src]){var u=this.map,c=u?u(s):s;this._renderer._bindBuffer(a,o.ARRAY_BUFFER,c),r.dirtyFlags[this.src]=!1}t.enableAttrib(i,this.size)}}};var i=o.default.RenderBuffer;r.default=i},{"../core/main":264,"core-js/modules/es.array.map":161}],316:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.fill"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.typed-array.float32-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("../core/main"))&&n.__esModule?n:{default:n},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}e("./p5.RenderBuffer"),s.default.RendererGL.prototype.beginShape=function(e){return this.immediateMode.shapeMode=void 0!==e?e:l.TRIANGLE_FAN,this.immediateMode.geometry.reset(),this},s.default.RendererGL.prototype.vertex=function(e,t){var r,n,o;r=n=o=0,3===arguments.length?r=arguments[2]:4===arguments.length?(n=arguments[2],o=arguments[3]):5===arguments.length&&(r=arguments[2],n=arguments[3],o=arguments[4]);var i=new s.default.Vector(e,t,r);this.immediateMode.geometry.vertices.push(i),this.immediateMode.geometry.vertexNormals.push(this._currentNormal);var a=this.curFillColor||[.5,.5,.5,1];return this.immediateMode.geometry.vertexColors.push(a[0],a[1],a[2],a[3]),this.textureMode===l.IMAGE&&(null!==this._tex?0<this._tex.width&&0<this._tex.height&&(n/=this._tex.width,o/=this._tex.height):null===this._tex&&4<=arguments.length&&console.warn("You must first call texture() before using vertex() with image based u and v coordinates")),this.immediateMode.geometry.uvs.push(n,o),this.immediateMode._bezierVertex[0]=e,this.immediateMode._bezierVertex[1]=t,this.immediateMode._bezierVertex[2]=r,this.immediateMode._quadraticVertex[0]=e,this.immediateMode._quadraticVertex[1]=t,this.immediateMode._quadraticVertex[2]=r,this},s.default.RendererGL.prototype.normal=function(e,t,r){return e instanceof s.default.Vector?this._currentNormal=e:this._currentNormal=new s.default.Vector(e,t,r),this},s.default.RendererGL.prototype.endShape=function(e,t,r,n,o,i){return this.immediateMode.shapeMode===l.POINTS?this._drawPoints(this.immediateMode.geometry.vertices,this.immediateMode.buffers.point):(this._processVertices.apply(this,arguments),this._doFill&&1<this.immediateMode.geometry.vertices.length&&this._drawImmediateFill(),this._doStroke&&1<this.immediateMode.geometry.lineVertices.length&&this._drawImmediateStroke(),this.isBezier=!1,this.isQuadratic=!1,this.isCurve=!1,this.immediateMode._bezierVertex.length=0,this.immediateMode._quadraticVertex.length=0,this.immediateMode._curveVertex.length=0),this},s.default.RendererGL.prototype._processVertices=function(e){if(0!==this.immediateMode.geometry.vertices.length){var t=this._doStroke&&this.drawMode!==l.TEXTURE,r=e===l.CLOSE;t&&(this.immediateMode.geometry.edges=this._calculateEdges(this.immediateMode.shapeMode,this.immediateMode.geometry.vertices,r),this.immediateMode.geometry._edgesToVertices());var n=this.immediateMode.shapeMode===l.TESS;(this.isBezier||this.isQuadratic||this.isCurve||n)&&this.immediateMode.shapeMode!==l.LINES&&this._tesselateShape()}},s.default.RendererGL.prototype._calculateEdges=function(e,t,r){var n=[],o=0;switch(e){case l.TRIANGLE_STRIP:for(o=0;o<t.length-2;o++)n.push([o,o+1]),n.push([o,o+2]);n.push([o,o+1]);break;case l.TRIANGLES:for(o=0;o<t.length-2;o+=3)n.push([o,o+1]),n.push([o+1,o+2]),n.push([o+2,o]);break;case l.LINES:for(o=0;o<t.length-1;o+=2)n.push([o,o+1]);break;default:for(o=0;o<t.length-1;o++)n.push([o,o+1])}return r&&n.push([t.length-1,0]),n},s.default.RendererGL.prototype._tesselateShape=function(){this.immediateMode.shapeMode=l.TRIANGLES;var e=[new Float32Array(this._vToNArray(this.immediateMode.geometry.vertices))],t=this._triangulate(e);this.immediateMode.geometry.vertices=[];for(var r=0,n=t.length;r<n;r+=3)this.vertex(t[r],t[r+1],t[r+2])},s.default.RendererGL.prototype._drawImmediateFill=function(){var e=this.GL,t=this._getImmediateFillShader();this._setFillUniforms(t);var r=!0,n=!1,o=void 0;try{for(var i,a=this.immediateMode.buffers.fill[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){i.value._prepareBuffer(this.immediateMode.geometry,t)}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}this.immediateMode.shapeMode!==l.LINE_STRIP&&this.immediateMode.shapeMode!==l.LINES||(this.immediateMode.shapeMode=l.TRIANGLE_FAN),this._applyColorBlend(this.curFillColor),e.drawArrays(this.immediateMode.shapeMode,0,this.immediateMode.geometry.vertices.length),t.unbindShader()},s.default.RendererGL.prototype._drawImmediateStroke=function(){var e=this.GL,t=this._getImmediateStrokeShader();this._setStrokeUniforms(t);var r=!0,n=!1,o=void 0;try{for(var i,a=this.immediateMode.buffers.stroke[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){i.value._prepareBuffer(this.immediateMode.geometry,t)}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}this._applyColorBlend(this.curStrokeColor),e.drawArrays(e.TRIANGLES,0,this.immediateMode.geometry.lineVertices.length),t.unbindShader()};var o=s.default.RendererGL;r.default=o},{"../core/constants":253,"../core/main":264,"./p5.RenderBuffer":315,"core-js/modules/es.array.fill":151,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.float32-array":203,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/web.dom-collections.iterator":229}],317:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.fill"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.some"),e("core-js/modules/es.object.keys"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.typed-array.float32-array"),e("core-js/modules/es.typed-array.uint16-array"),e("core-js/modules/es.typed-array.uint32-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,l=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./p5.RendererGL"),e("./p5.RenderBuffer");var o=0;l.default.RendererGL.prototype._initBufferDefaults=function(e){if(this._freeBuffers(e),1e3<++o){var t=Object.keys(this.retainedMode.geometry)[0];delete this.retainedMode.geometry[t],o--}return this.retainedMode.geometry[e]={}},l.default.RendererGL.prototype._freeBuffers=function(e){var s=this.retainedMode.geometry[e];if(s){delete this.retainedMode.geometry[e],o--;var l=this.GL;s.indexBuffer&&l.deleteBuffer(s.indexBuffer),t(this.retainedMode.buffers.stroke),t(this.retainedMode.buffers.fill)}function t(e){var t=!0,r=!1,n=void 0;try{for(var o,i=e[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;s[a.dst]&&(l.deleteBuffer(s[a.dst]),s[a.dst]=null)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}}},l.default.RendererGL.prototype.createBuffers=function(e,t){var r=this.GL,n=this._initBufferDefaults(e);n.model=t;var o=n.indexBuffer;if(t.faces.length){o=o||(n.indexBuffer=r.createBuffer());var i=l.default.RendererGL.prototype._flatten(t.faces),a=i.some(function(e){return 65535<e}),s=a?Uint32Array:Uint16Array;this._bindBuffer(o,r.ELEMENT_ARRAY_BUFFER,i,s),n.indexBufferType=a?r.UNSIGNED_INT:r.UNSIGNED_SHORT,n.vertexCount=3*t.faces.length}else o&&(r.deleteBuffer(o),n.indexBuffer=null),n.vertexCount=t.vertices?t.vertices.length:0;return n.lineVertexCount=t.lineVertices?t.lineVertices.length:0,n},l.default.RendererGL.prototype.drawBuffers=function(e){var t=this.GL,r=this.retainedMode.geometry[e];if(this._doStroke&&0<r.lineVertexCount){var n=this._getRetainedStrokeShader();this._setStrokeUniforms(n);var o=!0,i=!1,a=void 0;try{for(var s,l=this.retainedMode.buffers.stroke[Symbol.iterator]();!(o=(s=l.next()).done);o=!0){s.value._prepareBuffer(r,n)}}catch(e){i=!0,a=e}finally{try{o||null==l.return||l.return()}finally{if(i)throw a}}this._applyColorBlend(this.curStrokeColor),this._drawArrays(t.TRIANGLES,e),n.unbindShader()}if(this._doFill){var u=this._getRetainedFillShader();this._setFillUniforms(u);var c=!0,d=!1,f=void 0;try{for(var h,p=this.retainedMode.buffers.fill[Symbol.iterator]();!(c=(h=p.next()).done);c=!0){h.value._prepareBuffer(r,u)}}catch(e){d=!0,f=e}finally{try{c||null==p.return||p.return()}finally{if(d)throw f}}r.indexBuffer&&this._bindBuffer(r.indexBuffer,t.ELEMENT_ARRAY_BUFFER),this._applyColorBlend(this.curFillColor),this._drawElements(t.TRIANGLES,e),u.unbindShader()}return this},l.default.RendererGL.prototype.drawBuffersScaled=function(e,t,r,n){var o=this.uMVMatrix.copy();try{this.uMVMatrix.scale(t,r,n),this.drawBuffers(e)}finally{this.uMVMatrix=o}},l.default.RendererGL.prototype._drawArrays=function(e,t){return this.GL.drawArrays(e,0,this.retainedMode.geometry[t].lineVertexCount),this},l.default.RendererGL.prototype._drawElements=function(e,t){var r=this.retainedMode.geometry[t],n=this.GL;if(r.indexBuffer){if(r.indexBufferType===n.UNSIGNED_INT&&!n.getExtension("OES_element_index_uint"))throw new Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");n.drawElements(n.TRIANGLES,r.vertexCount,r.indexBufferType,0)}else n.drawArrays(e||n.TRIANGLES,0,r.vertexCount)},l.default.RendererGL.prototype._drawPoints=function(e,t){var r=this.GL,n=this._getImmediatePointShader();this._setPointUniforms(n),this._bindBuffer(t,r.ARRAY_BUFFER,this._vToNArray(e),Float32Array,r.STATIC_DRAW),n.enableAttrib(n.attributes.aPosition,3),r.drawArrays(r.Points,0,e.length),n.unbindShader()};var i=l.default.RendererGL;r.default=i},{"../core/main":264,"./p5.RenderBuffer":315,"./p5.RendererGL":318,"core-js/modules/es.array.fill":151,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.some":163,"core-js/modules/es.object.keys":176,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.float32-array":203,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint16-array":224,"core-js/modules/es.typed-array.uint32-array":225,"core-js/modules/web.dom-collections.iterator":229}],318:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.concat"),e("core-js/modules/es.array.fill"),e("core-js/modules/es.array.filter"),e("core-js/modules/es.array.from"),e("core-js/modules/es.array.includes"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.object.assign"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.to-string"),e("core-js/modules/es.string.includes"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.typed-array.float32-array"),e("core-js/modules/es.typed-array.float64-array"),e("core-js/modules/es.typed-array.int16-array"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.uint16-array"),e("core-js/modules/es.typed-array.uint32-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u=o(e("../core/main")),i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants")),n=o(e("libtess"));e("./p5.Shader"),e("./p5.Camera"),e("../core/p5.Renderer"),e("./p5.Matrix");e("path");function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function o(e){return e&&e.__esModule?e:{default:e}}function l(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var c="precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];\t\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n",d={immediateVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",vertexColorVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n",vertexColorFrag:"precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}",normalVert:"attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n",normalFrag:"precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",basicFrag:"precision mediump float;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}",lightVert:c+"// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n}\n",lightTextureFrag:"precision highp float;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;\n  }\n}",phongVert:"precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n}\n",phongFrag:c+"// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * (diffuse + vAmbientColor) + specular;\n  }\n}",fontVert:"precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n",fontFrag:"#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision highp int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}",lineVert:"/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  vec3 scale = vec3(0.9995);\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  vec2 curPerspScale;\n\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n}\n",lineFrag:"precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}",pointVert:"attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}",pointFrag:"precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}"};u.default.RendererGL=function(e,t,r,n){return u.default.Renderer.call(this,e,t,r),this._setAttributeDefaults(t),this._initContext(),this.isP3D=!0,this.GL=this.drawingContext,this._pInst._setProperty("drawingContext",this.drawingContext),this._isErasing=!1,this._enableLighting=!1,this.ambientLightColors=[],this.specularColors=[1,1,1],this.directionalLightDirections=[],this.directionalLightDiffuseColors=[],this.directionalLightSpecularColors=[],this.pointLightPositions=[],this.pointLightDiffuseColors=[],this.pointLightSpecularColors=[],this.spotLightPositions=[],this.spotLightDirections=[],this.spotLightDiffuseColors=[],this.spotLightSpecularColors=[],this.spotLightAngle=[],this.spotLightConc=[],this.drawMode=i.FILL,this.curFillColor=this._cachedFillStyle=[1,1,1,1],this.curStrokeColor=this._cachedStrokeStyle=[0,0,0,1],this.curBlendMode=i.BLEND,this._cachedBlendMode=void 0,this.blendExt=this.GL.getExtension("EXT_blend_minmax"),this._isBlending=!1,this._useSpecularMaterial=!1,this._useEmissiveMaterial=!1,this._useNormalMaterial=!1,this._useShininess=1,this._tint=[255,255,255,255],this.constantAttenuation=1,this.linearAttenuation=0,this.quadraticAttenuation=0,this.uMVMatrix=new u.default.Matrix,this.uPMatrix=new u.default.Matrix,this.uNMatrix=new u.default.Matrix("mat3"),this._currentNormal=new u.default.Vector(0,0,1),this._curCamera=new u.default.Camera(this),this._curCamera._computeCameraDefaultSettings(),this._curCamera._setDefaultCamera(),this._defaultLightShader=void 0,this._defaultImmediateModeShader=void 0,this._defaultNormalShader=void 0,this._defaultColorShader=void 0,this._defaultPointShader=void 0,this.userFillShader=void 0,this.userStrokeShader=void 0,this.userPointShader=void 0,this.retainedMode={geometry:{},buffers:{stroke:[new u.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new u.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],fill:[new u.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new u.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new u.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",this),new u.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new u.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],text:[new u.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new u.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)]}},this.immediateMode={geometry:new u.default.Geometry,shapeMode:i.TRIANGLE_FAN,_bezierVertex:[],_quadraticVertex:[],_curveVertex:[],buffers:{fill:[new u.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new u.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new u.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",this),new u.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new u.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],stroke:[new u.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new u.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],point:this.GL.createBuffer()}},this.pointSize=5,this.curStrokeWeight=1,this.textures=[],this.textureMode=i.IMAGE,this.textureWrapX=i.CLAMP,this.textureWrapY=i.CLAMP,this._tex=null,this._curveTightness=6,this._lookUpTableBezier=[],this._lookUpTableQuadratic=[],this._lutBezierDetail=0,this._lutQuadraticDetail=0,this._tessy=this._initTessy(),this.fontInfos={},this._curShader=void 0,this},u.default.RendererGL.prototype=Object.create(u.default.Renderer.prototype),u.default.RendererGL.prototype._setAttributeDefaults=function(e){var t={alpha:!1,depth:!0,stencil:!0,antialias:navigator.userAgent.toLowerCase().includes("safari"),premultipliedAlpha:!1,preserveDrawingBuffer:!0,perPixelLighting:!0};null===e._glAttributes?e._glAttributes=t:e._glAttributes=Object.assign(t,e._glAttributes)},u.default.RendererGL.prototype._initContext=function(){try{if(this.drawingContext=this.canvas.getContext("webgl",this._pInst._glAttributes)||this.canvas.getContext("experimental-webgl",this._pInst._glAttributes),null===this.drawingContext)throw new Error("Error creating webgl context");var e=this.drawingContext;e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),this._viewport=this.drawingContext.getParameter(this.drawingContext.VIEWPORT)}catch(e){throw e}},u.default.RendererGL.prototype._resetContext=function(e,t){var r=this.width,n=this.height,o=this.canvas.id,i=this._pInst instanceof u.default.Graphics;if(i){var a=this._pInst;a.canvas.parentNode.removeChild(a.canvas),a.canvas=document.createElement("canvas"),(a._pInst._userNode||document.body).appendChild(a.canvas),u.default.Element.call(a,a.canvas,a._pInst),a.width=r,a.height=n}else{var s=this.canvas;s&&s.parentNode.removeChild(s),(s=document.createElement("canvas")).id=o,this._pInst._userNode?this._pInst._userNode.appendChild(s):document.body.appendChild(s),this._pInst.canvas=s}var l=new u.default.RendererGL(this._pInst.canvas,this._pInst,!i);this._pInst._setProperty("_renderer",l),l.resize(r,n),l._applyDefaults(),i||this._pInst._elements.push(l),"function"==typeof t&&setTimeout(function(){t.apply(window._renderer,e)},0)},u.default.prototype.setAttributes=function(e,t){if(void 0!==this._glAttributes){var r=!0;if(void 0!==t?(null===this._glAttributes&&(this._glAttributes={}),this._glAttributes[e]!==t&&(this._glAttributes[e]=t,r=!1)):e instanceof Object&&this._glAttributes!==e&&(this._glAttributes=e,r=!1),this._renderer.isP3D&&!r){if(!this._setupDone)for(var n in this._renderer.retainedMode.geometry)if(this._renderer.retainedMode.geometry.hasOwnProperty(n))return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");this.push(),this._renderer._resetContext(),this.pop(),this._renderer._curCamera&&(this._renderer._curCamera._renderer=this._renderer)}}else console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.")},u.default.RendererGL.prototype._update=function(){this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this.ambientLightColors.length=0,this.specularColors=[1,1,1],this.directionalLightDirections.length=0,this.directionalLightDiffuseColors.length=0,this.directionalLightSpecularColors.length=0,this.pointLightPositions.length=0,this.pointLightDiffuseColors.length=0,this.pointLightSpecularColors.length=0,this.spotLightPositions.length=0,this.spotLightDirections.length=0,this.spotLightDiffuseColors.length=0,this.spotLightSpecularColors.length=0,this.spotLightAngle.length=0,this.spotLightConc.length=0,this._enableLighting=!1,this._tint=[255,255,255,255],this.GL.clear(this.GL.DEPTH_BUFFER_BIT)},u.default.RendererGL.prototype.background=function(){var e,t=(e=this._pInst).color.apply(e,arguments),r=t.levels[0]/255,n=t.levels[1]/255,o=t.levels[2]/255,i=t.levels[3]/255;this.GL.clearColor(r,n,o,i),this.GL.clear(this.GL.COLOR_BUFFER_BIT)},u.default.RendererGL.prototype.fill=function(e,t,r,n){var o=u.default.prototype.color.apply(this._pInst,arguments);this.curFillColor=o._array,this.drawMode=i.FILL,this._useNormalMaterial=!1,this._tex=null},u.default.RendererGL.prototype.stroke=function(e,t,r,n){arguments[3]=255;var o=u.default.prototype.color.apply(this._pInst,arguments);this.curStrokeColor=o._array},u.default.RendererGL.prototype.strokeCap=function(e){console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode")},u.default.RendererGL.prototype.strokeJoin=function(e){console.error("Sorry, strokeJoin() is not yet implemented in WEBGL mode")},u.default.RendererGL.prototype.filter=function(e){console.error("filter() does not work in WEBGL mode")},u.default.RendererGL.prototype.blendMode=function(e){e===i.DARKEST||e===i.LIGHTEST||e===i.ADD||e===i.BLEND||e===i.SUBTRACT||e===i.SCREEN||e===i.EXCLUSION||e===i.REPLACE||e===i.MULTIPLY||e===i.REMOVE?this.curBlendMode=e:e!==i.BURN&&e!==i.OVERLAY&&e!==i.HARD_LIGHT&&e!==i.SOFT_LIGHT&&e!==i.DODGE||console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.")},u.default.RendererGL.prototype.erase=function(e,t){this._isErasing||(this._applyBlendMode(i.REMOVE),this._isErasing=!0,this._cachedFillStyle=this.curFillColor.slice(),this.curFillColor=[1,1,1,e/255],this._cachedStrokeStyle=this.curStrokeColor.slice(),this.curStrokeColor=[1,1,1,t/255])},u.default.RendererGL.prototype.noErase=function(){this._isErasing&&(this._isErasing=!1,this.curFillColor=this._cachedFillStyle.slice(),this.curStrokeColor=this._cachedStrokeStyle.slice(),this.blendMode(this._cachedBlendMode))},u.default.RendererGL.prototype.strokeWeight=function(e){this.curStrokeWeight!==e&&(this.pointSize=e,this.curStrokeWeight=e)},u.default.RendererGL.prototype._getPixel=function(e,t){var r;return r=new Uint8Array(4),this.drawingContext.readPixels(e,t,1,1,this.drawingContext.RGBA,this.drawingContext.UNSIGNED_BYTE,r),[r[0],r[1],r[2],r[3]]},u.default.RendererGL.prototype.loadPixels=function(){var e=this._pixelsState;if(!0===this._pInst._glAttributes.preserveDrawingBuffer){var t=e.pixels,r=this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4;t instanceof Uint8Array&&t.length===r||(t=new Uint8Array(r),this._pixelsState._setProperty("pixels",t));var n=this._pInst._pixelDensity;this.GL.readPixels(0,0,this.width*n,this.height*n,this.GL.RGBA,this.GL.UNSIGNED_BYTE,t)}else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.")},u.default.RendererGL.prototype.geometryInHash=function(e){return void 0!==this.retainedMode.geometry[e]},u.default.RendererGL.prototype.resize=function(e,t){u.default.Renderer.prototype.resize.call(this,e,t),this.GL.viewport(0,0,this.GL.drawingBufferWidth,this.GL.drawingBufferHeight),this._viewport=this.GL.getParameter(this.GL.VIEWPORT),this._curCamera._resize();var r=this._pixelsState;void 0!==r.pixels&&r._setProperty("pixels",new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4))},u.default.RendererGL.prototype.clear=function(){var e=(arguments.length<=0?void 0:arguments[0])||0,t=(arguments.length<=1?void 0:arguments[1])||0,r=(arguments.length<=2?void 0:arguments[2])||0,n=(arguments.length<=3?void 0:arguments[3])||0;this.GL.clearColor(e,t,r,n),this.GL.clearDepth(1),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)},u.default.RendererGL.prototype.applyMatrix=function(e,t,r,n,o,i){16===arguments.length?u.default.Matrix.prototype.apply.apply(this.uMVMatrix,arguments):this.uMVMatrix.apply([e,t,0,0,r,n,0,0,0,0,1,0,o,i,0,1])},u.default.RendererGL.prototype.translate=function(e,t,r){return e instanceof u.default.Vector&&(r=e.z,t=e.y,e=e.x),this.uMVMatrix.translate([e,t,r]),this},u.default.RendererGL.prototype.scale=function(e,t,r){return this.uMVMatrix.scale(e,t,r),this},u.default.RendererGL.prototype.rotate=function(e,t){return void 0===t?this.rotateZ(e):(u.default.Matrix.prototype.rotate.apply(this.uMVMatrix,arguments),this)},u.default.RendererGL.prototype.rotateX=function(e){return this.rotate(e,1,0,0),this},u.default.RendererGL.prototype.rotateY=function(e){return this.rotate(e,0,1,0),this},u.default.RendererGL.prototype.rotateZ=function(e){return this.rotate(e,0,0,1),this},u.default.RendererGL.prototype.push=function(){var e=u.default.Renderer.prototype.push.apply(this),t=e.properties;return t.uMVMatrix=this.uMVMatrix.copy(),t.uPMatrix=this.uPMatrix.copy(),t._curCamera=this._curCamera,this._curCamera=this._curCamera.copy(),t.ambientLightColors=this.ambientLightColors.slice(),t.specularColors=this.specularColors.slice(),t.directionalLightDirections=this.directionalLightDirections.slice(),t.directionalLightDiffuseColors=this.directionalLightDiffuseColors.slice(),t.directionalLightSpecularColors=this.directionalLightSpecularColors.slice(),t.pointLightPositions=this.pointLightPositions.slice(),t.pointLightDiffuseColors=this.pointLightDiffuseColors.slice(),t.pointLightSpecularColors=this.pointLightSpecularColors.slice(),t.spotLightPositions=this.spotLightPositions.slice(),t.spotLightDirections=this.spotLightDirections.slice(),t.spotLightDiffuseColors=this.spotLightDiffuseColors.slice(),t.spotLightSpecularColors=this.spotLightSpecularColors.slice(),t.spotLightAngle=this.spotLightAngle.slice(),t.spotLightConc=this.spotLightConc.slice(),t.userFillShader=this.userFillShader,t.userStrokeShader=this.userStrokeShader,t.userPointShader=this.userPointShader,t.pointSize=this.pointSize,t.curStrokeWeight=this.curStrokeWeight,t.curStrokeColor=this.curStrokeColor,t.curFillColor=this.curFillColor,t._useSpecularMaterial=this._useSpecularMaterial,t._useEmissiveMaterial=this._useEmissiveMaterial,t._useShininess=this._useShininess,t.constantAttenuation=this.constantAttenuation,t.linearAttenuation=this.linearAttenuation,t.quadraticAttenuation=this.quadraticAttenuation,t._enableLighting=this._enableLighting,t._useNormalMaterial=this._useNormalMaterial,t._tex=this._tex,t.drawMode=this.drawMode,t._currentNormal=this._currentNormal,e},u.default.RendererGL.prototype.resetMatrix=function(){return this.uMVMatrix=u.default.Matrix.identity(this._pInst),this},u.default.RendererGL.prototype._getImmediateStrokeShader=function(){var e=this.userStrokeShader;return e&&e.isStrokeShader()?e:this._getLineShader()},u.default.RendererGL.prototype._getRetainedStrokeShader=u.default.RendererGL.prototype._getImmediateStrokeShader,u.default.RendererGL.prototype._getImmediateFillShader=function(){var e=this.userFillShader;if(this._useNormalMaterial&&(!e||!e.isNormalShader()))return this._getNormalShader();if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getImmediateModeShader();return e},u.default.RendererGL.prototype._getRetainedFillShader=function(){if(this._useNormalMaterial)return this._getNormalShader();var e=this.userFillShader;if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getColorShader();return e},u.default.RendererGL.prototype._getImmediatePointShader=function(){var e=this.userPointShader;return e&&e.isPointShader()?e:this._getPointShader()},u.default.RendererGL.prototype._getRetainedLineShader=u.default.RendererGL.prototype._getImmediateLineShader,u.default.RendererGL.prototype._getLightShader=function(){return this._defaultLightShader||(this._pInst._glAttributes.perPixelLighting?this._defaultLightShader=new u.default.Shader(this,d.phongVert,d.phongFrag):this._defaultLightShader=new u.default.Shader(this,d.lightVert,d.lightTextureFrag)),this._defaultLightShader},u.default.RendererGL.prototype._getImmediateModeShader=function(){return this._defaultImmediateModeShader||(this._defaultImmediateModeShader=new u.default.Shader(this,d.immediateVert,d.vertexColorFrag)),this._defaultImmediateModeShader},u.default.RendererGL.prototype._getNormalShader=function(){return this._defaultNormalShader||(this._defaultNormalShader=new u.default.Shader(this,d.normalVert,d.normalFrag)),this._defaultNormalShader},u.default.RendererGL.prototype._getColorShader=function(){return this._defaultColorShader||(this._defaultColorShader=new u.default.Shader(this,d.normalVert,d.basicFrag)),this._defaultColorShader},u.default.RendererGL.prototype._getPointShader=function(){return this._defaultPointShader||(this._defaultPointShader=new u.default.Shader(this,d.pointVert,d.pointFrag)),this._defaultPointShader},u.default.RendererGL.prototype._getLineShader=function(){return this._defaultLineShader||(this._defaultLineShader=new u.default.Shader(this,d.lineVert,d.lineFrag)),this._defaultLineShader},u.default.RendererGL.prototype._getFontShader=function(){return this._defaultFontShader||(this.GL.getExtension("OES_standard_derivatives"),this._defaultFontShader=new u.default.Shader(this,d.fontVert,d.fontFrag)),this._defaultFontShader},u.default.RendererGL.prototype._getEmptyTexture=function(){if(!this._emptyTexture){var e=new u.default.Image(1,1);e.set(0,0,255),this._emptyTexture=new u.default.Texture(this,e)}return this._emptyTexture},u.default.RendererGL.prototype.getTexture=function(e){var t=this.textures,r=!0,n=!1,o=void 0;try{for(var i,a=t[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value;if(s.src===e)return s}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}var l=new u.default.Texture(this,e);return t.push(l),l},u.default.RendererGL.prototype._setStrokeUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uStrokeWeight",this.curStrokeWeight)},u.default.RendererGL.prototype._setFillUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curFillColor),e.setUniform("isTexture",!!this._tex),this._tex&&e.setUniform("uSampler",this._tex),e.setUniform("uTint",this._tint),e.setUniform("uSpecular",this._useSpecularMaterial),e.setUniform("uEmissive",this._useEmissiveMaterial),e.setUniform("uShininess",this._useShininess),e.setUniform("uUseLighting",this._enableLighting);var t=this.pointLightDiffuseColors.length/3;e.setUniform("uPointLightCount",t),e.setUniform("uPointLightLocation",this.pointLightPositions),e.setUniform("uPointLightDiffuseColors",this.pointLightDiffuseColors),e.setUniform("uPointLightSpecularColors",this.pointLightSpecularColors);var r=this.directionalLightDiffuseColors.length/3;e.setUniform("uDirectionalLightCount",r),e.setUniform("uLightingDirection",this.directionalLightDirections),e.setUniform("uDirectionalDiffuseColors",this.directionalLightDiffuseColors),e.setUniform("uDirectionalSpecularColors",this.directionalLightSpecularColors);var n=this.ambientLightColors.length/3;e.setUniform("uAmbientLightCount",n),e.setUniform("uAmbientColor",this.ambientLightColors);var o=this.spotLightDiffuseColors.length/3;e.setUniform("uSpotLightCount",o),e.setUniform("uSpotLightAngle",this.spotLightAngle),e.setUniform("uSpotLightConc",this.spotLightConc),e.setUniform("uSpotLightDiffuseColors",this.spotLightDiffuseColors),e.setUniform("uSpotLightSpecularColors",this.spotLightSpecularColors),e.setUniform("uSpotLightLocation",this.spotLightPositions),e.setUniform("uSpotLightDirection",this.spotLightDirections),e.setUniform("uConstantAttenuation",this.constantAttenuation),e.setUniform("uLinearAttenuation",this.linearAttenuation),e.setUniform("uQuadraticAttenuation",this.quadraticAttenuation),e.bindTextures()},u.default.RendererGL.prototype._setPointUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uPointSize",this.pointSize*this._pInst._pixelDensity)},u.default.RendererGL.prototype._bindBuffer=function(e,t,r,n,o){if(t=t||this.GL.ARRAY_BUFFER,this.GL.bindBuffer(t,e),void 0!==r){var i=new(n||Float32Array)(r);this.GL.bufferData(t,i,o||this.GL.STATIC_DRAW)}},u.default.RendererGL.prototype._arraysEqual=function(e,t){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0},u.default.RendererGL.prototype._isTypedArray=function(e){return Float32Array,Float64Array,Int16Array,Uint16Array,e instanceof Uint32Array},u.default.RendererGL.prototype._flatten=function(e){if(0===e.length)return[];if(2e4<e.length){var t,r=Object.prototype.toString,n=[],o=e.slice();for(t=o.pop();"[object Array]"===r.call(t)?o.push.apply(o,l(t)):n.push(t),o.length&&void 0!==(t=o.pop()););return n.reverse(),n}var i;return(i=[]).concat.apply(i,l(e))},u.default.RendererGL.prototype._vToNArray=function(e){var t=[],r=!0,n=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value;t.push(s.x,s.y,s.z)}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}return t},u.default.prototype._assert3d=function(e){if(!this._renderer.isP3D)throw new Error("".concat(e,"() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."))},u.default.RendererGL.prototype._initTessy=function(){var e=new n.default.GluTesselator;return e.gluTessCallback(n.default.gluEnum.GLU_TESS_VERTEX_DATA,function(e,t){t[t.length]=e[0],t[t.length]=e[1],t[t.length]=e[2]}),e.gluTessCallback(n.default.gluEnum.GLU_TESS_BEGIN,function(e){e!==n.default.primitiveType.GL_TRIANGLES&&console.log("expected TRIANGLES but got type: ".concat(e))}),e.gluTessCallback(n.default.gluEnum.GLU_TESS_ERROR,function(e){console.log("error callback"),console.log("error number: ".concat(e))}),e.gluTessCallback(n.default.gluEnum.GLU_TESS_COMBINE,function(e,t,r){return[e[0],e[1],e[2]]}),e.gluTessCallback(n.default.gluEnum.GLU_TESS_EDGE_FLAG,function(e){}),e},u.default.RendererGL.prototype._triangulate=function(e){this._tessy.gluTessNormal(0,0,1);var t=[];this._tessy.gluTessBeginPolygon(t);for(var r=0;r<e.length;r++){this._tessy.gluTessBeginContour();for(var n=e[r],o=0;o<n.length;o+=3){var i=[n[o],n[o+1],n[o+2]];this._tessy.gluTessVertex(i,i)}this._tessy.gluTessEndContour()}return this._tessy.gluTessEndPolygon(),t},u.default.RendererGL.prototype._bezierCoefficients=function(e){var t=e*e,r=1-e,n=r*r;return[n*r,3*n*e,3*r*t,t*e]},u.default.RendererGL.prototype._quadraticCoefficients=function(e){var t=1-e;return[t*t,2*t*e,e*e]},u.default.RendererGL.prototype._bezierToCatmull=function(e){return[e[1],e[1]+(e[2]-e[0])/this._curveTightness,e[2]-(e[3]-e[1])/this._curveTightness,e[2]]};var f=u.default.RendererGL;r.default=f},{"../core/constants":253,"../core/main":264,"../core/p5.Renderer":267,"./p5.Camera":312,"./p5.Matrix":314,"./p5.Shader":319,"core-js/modules/es.array.concat":149,"core-js/modules/es.array.fill":151,"core-js/modules/es.array.filter":152,"core-js/modules/es.array.from":155,"core-js/modules/es.array.includes":156,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.slice":162,"core-js/modules/es.object.assign":173,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.to-string":182,"core-js/modules/es.string.includes":185,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.float32-array":203,"core-js/modules/es.typed-array.float64-array":204,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.int16-array":208,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint16-array":224,"core-js/modules/es.typed-array.uint32-array":225,"core-js/modules/es.typed-array.uint8-array":226,"core-js/modules/web.dom-collections.iterator":229,libtess:237,path:240}],319:[function(e,t,r){"use strict";e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.index-of"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.array.slice"),e("core-js/modules/es.function.name"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.string.iterator"),e("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.Shader=function(e,t,r){this._renderer=e,this._vertSrc=t,this._fragSrc=r,this._vertShader=-1,this._fragShader=-1,this._glProgram=0,this._loadedAttributes=!1,this.attributes={},this._loadedUniforms=!1,this.uniforms={},this._bound=!1,this.samplers=[]},i.default.Shader.prototype.init=function(){if(0===this._glProgram){var e=this._renderer.GL;if(this._vertShader=e.createShader(e.VERTEX_SHADER),e.shaderSource(this._vertShader,this._vertSrc),e.compileShader(this._vertShader),!e.getShaderParameter(this._vertShader,e.COMPILE_STATUS))return console.error("Yikes! An error occurred compiling the vertex shader:".concat(e.getShaderInfoLog(this._vertShader))),null;if(this._fragShader=e.createShader(e.FRAGMENT_SHADER),e.shaderSource(this._fragShader,this._fragSrc),e.compileShader(this._fragShader),!e.getShaderParameter(this._fragShader,e.COMPILE_STATUS))return console.error("Darn! An error occurred compiling the fragment shader:".concat(e.getShaderInfoLog(this._fragShader))),null;this._glProgram=e.createProgram(),e.attachShader(this._glProgram,this._vertShader),e.attachShader(this._glProgram,this._fragShader),e.linkProgram(this._glProgram),e.getProgramParameter(this._glProgram,e.LINK_STATUS)||console.error("Snap! Error linking shader program: ".concat(e.getProgramInfoLog(this._glProgram))),this._loadAttributes(),this._loadUniforms()}return this},i.default.Shader.prototype._loadAttributes=function(){if(!this._loadedAttributes){this.attributes={};for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_ATTRIBUTES),r=0;r<t;++r){var n=e.getActiveAttrib(this._glProgram,r),o=n.name,i=e.getAttribLocation(this._glProgram,o),a={};a.name=o,a.location=i,a.index=r,a.type=n.type,a.size=n.size,this.attributes[o]=a}this._loadedAttributes=!0}},i.default.Shader.prototype._loadUniforms=function(){if(!this._loadedUniforms){for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_UNIFORMS),r=0,n=0;n<t;++n){var o=e.getActiveUniform(this._glProgram,n),i={};i.location=e.getUniformLocation(this._glProgram,o.name),i.size=o.size;var a=o.name;1<o.size&&(a=a.substring(0,a.indexOf("[0]"))),i.name=a,i.type=o.type,i._cachedData=void 0,i.type===e.SAMPLER_2D&&(i.samplerIndex=r,r++,this.samplers.push(i)),i.isArray=1<o.size||i.type===e.FLOAT_MAT3||i.type===e.FLOAT_MAT4||i.type===e.FLOAT_VEC2||i.type===e.FLOAT_VEC3||i.type===e.FLOAT_VEC4||i.type===e.INT_VEC2||i.type===e.INT_VEC4||i.type===e.INT_VEC3,this.uniforms[a]=i}this._loadedUniforms=!0}},i.default.Shader.prototype.compile=function(){},i.default.Shader.prototype.bindShader=function(){this.init(),this._bound||(this.useProgram(),this._bound=!0,this._setMatrixUniforms(),this.setUniform("uViewport",this._renderer._viewport))},i.default.Shader.prototype.unbindShader=function(){return this._bound&&(this.unbindTextures(),this._bound=!1),this},i.default.Shader.prototype.bindTextures=function(){var e=this._renderer.GL,t=!0,r=!1,n=void 0;try{for(var o,i=this.samplers[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value,s=a.texture;void 0===s&&(s=this._renderer._getEmptyTexture()),e.activeTexture(e.TEXTURE0+a.samplerIndex),s.bindTexture(),s.update(),e.uniform1i(a.location,a.samplerIndex)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}},i.default.Shader.prototype.updateTextures=function(){var e=!0,t=!1,r=void 0;try{for(var n,o=this.samplers[Symbol.iterator]();!(e=(n=o.next()).done);e=!0){var i=n.value.texture;i&&i.update()}}catch(e){t=!0,r=e}finally{try{e||null==o.return||o.return()}finally{if(t)throw r}}},i.default.Shader.prototype.unbindTextures=function(){},i.default.Shader.prototype._setMatrixUniforms=function(){var e=this._renderer._curCamera.cameraMatrix,t=this._renderer.uPMatrix,r=this._renderer.uMVMatrix,n=r.copy();n.mult(t),this.isStrokeShader()&&("default"===this._renderer._curCamera.cameraType?this.setUniform("uPerspective",1):this.setUniform("uPerspective",0)),this.setUniform("uViewMatrix",e.mat4),this.setUniform("uProjectionMatrix",t.mat4),this.setUniform("uModelViewMatrix",r.mat4),this.setUniform("uModelViewProjectionMatrix",n.mat4),this.uniforms.uNormalMatrix&&(this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix),this.setUniform("uNormalMatrix",this._renderer.uNMatrix.mat3))},i.default.Shader.prototype.useProgram=function(){var e=this._renderer.GL;return this._renderer._curShader!==this&&(e.useProgram(this._glProgram),this._renderer._curShader=this),this},i.default.Shader.prototype.setUniform=function(e,t){var r=this.uniforms[e];if(r){var n=this._renderer.GL;if(r.isArray){if(r._cachedData&&this._renderer._arraysEqual(r._cachedData,t))return;r._cachedData=t.slice(0)}else{if(r._cachedData&&r._cachedData===t)return;Array.isArray(t)?r._cachedData=t.slice(0):r._cachedData=t}var o=r.location;switch(this.useProgram(),r.type){case n.BOOL:!0===t?n.uniform1i(o,1):n.uniform1i(o,0);break;case n.INT:1<r.size?t.length&&n.uniform1iv(o,t):n.uniform1i(o,t);break;case n.FLOAT:1<r.size?t.length&&n.uniform1fv(o,t):n.uniform1f(o,t);break;case n.FLOAT_MAT3:n.uniformMatrix3fv(o,!1,t);break;case n.FLOAT_MAT4:n.uniformMatrix4fv(o,!1,t);break;case n.FLOAT_VEC2:1<r.size?t.length&&n.uniform2fv(o,t):n.uniform2f(o,t[0],t[1]);break;case n.FLOAT_VEC3:1<r.size?t.length&&n.uniform3fv(o,t):n.uniform3f(o,t[0],t[1],t[2]);break;case n.FLOAT_VEC4:1<r.size?t.length&&n.uniform4fv(o,t):n.uniform4f(o,t[0],t[1],t[2],t[3]);break;case n.INT_VEC2:1<r.size?t.length&&n.uniform2iv(o,t):n.uniform2i(o,t[0],t[1]);break;case n.INT_VEC3:1<r.size?t.length&&n.uniform3iv(o,t):n.uniform3i(o,t[0],t[1],t[2]);break;case n.INT_VEC4:1<r.size?t.length&&n.uniform4iv(o,t):n.uniform4i(o,t[0],t[1],t[2],t[3]);break;case n.SAMPLER_2D:n.activeTexture(n.TEXTURE0+r.samplerIndex),r.texture=t instanceof i.default.Texture?t:this._renderer.getTexture(t),n.uniform1i(o,r.samplerIndex)}return this}},i.default.Shader.prototype.isLightShader=function(){return void 0!==this.attributes.aNormal||void 0!==this.uniforms.uUseLighting||void 0!==this.uniforms.uAmbientLightCount||void 0!==this.uniforms.uDirectionalLightCount||void 0!==this.uniforms.uPointLightCount||void 0!==this.uniforms.uAmbientColor||void 0!==this.uniforms.uDirectionalDiffuseColors||void 0!==this.uniforms.uDirectionalSpecularColors||void 0!==this.uniforms.uPointLightLocation||void 0!==this.uniforms.uPointLightDiffuseColors||void 0!==this.uniforms.uPointLightSpecularColors||void 0!==this.uniforms.uLightingDirection||void 0!==this.uniforms.uSpecular},i.default.Shader.prototype.isNormalShader=function(){return void 0!==this.attributes.aNormal},i.default.Shader.prototype.isTextureShader=function(){return 0<this.samplers.length},i.default.Shader.prototype.isColorShader=function(){return void 0!==this.attributes.aVertexColor||void 0!==this.uniforms.uMaterialColor},i.default.Shader.prototype.isTexLightShader=function(){return this.isLightShader()&&this.isTextureShader()},i.default.Shader.prototype.isStrokeShader=function(){return void 0!==this.uniforms.uStrokeWeight},i.default.Shader.prototype.enableAttrib=function(e,t,r,n,o,i){if(e){0;var a=e.location;if(-1!==a){var s=this._renderer.GL;e.enabled||(s.enableVertexAttribArray(a),e.enabled=!0),this._renderer.GL.vertexAttribPointer(a,t,r||s.FLOAT,n||!1,o||0,i||0)}}return this};var o=i.default.Shader;r.default=o},{"../core/main":264,"core-js/modules/es.array.index-of":157,"core-js/modules/es.array.iterator":158,"core-js/modules/es.array.slice":162,"core-js/modules/es.function.name":166,"core-js/modules/es.object.to-string":177,"core-js/modules/es.string.iterator":186,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}],320:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.typed-array.uint8-array"),e("core-js/modules/es.typed-array.copy-within"),e("core-js/modules/es.typed-array.every"),e("core-js/modules/es.typed-array.fill"),e("core-js/modules/es.typed-array.filter"),e("core-js/modules/es.typed-array.find"),e("core-js/modules/es.typed-array.find-index"),e("core-js/modules/es.typed-array.for-each"),e("core-js/modules/es.typed-array.includes"),e("core-js/modules/es.typed-array.index-of"),e("core-js/modules/es.typed-array.iterator"),e("core-js/modules/es.typed-array.join"),e("core-js/modules/es.typed-array.last-index-of"),e("core-js/modules/es.typed-array.map"),e("core-js/modules/es.typed-array.reduce"),e("core-js/modules/es.typed-array.reduce-right"),e("core-js/modules/es.typed-array.reverse"),e("core-js/modules/es.typed-array.set"),e("core-js/modules/es.typed-array.slice"),e("core-js/modules/es.typed-array.some"),e("core-js/modules/es.typed-array.sort"),e("core-js/modules/es.typed-array.subarray"),e("core-js/modules/es.typed-array.to-locale-string"),e("core-js/modules/es.typed-array.to-string"),Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n},s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}i.default.Texture=function(e,t,r){this._renderer=e;var n=this._renderer.GL;(r=r||{}).dataType===n.FLOAT&&(n.getExtension("OES_texture_float")||console.log("Oh no, your device doesn't support floating point textures!"),n.getExtension("OES_texture_float_linear")||console.log("Ack! Your device doesn't support linear filtering for floating point textures"));this.src=t,this.glTex=void 0,this.glTarget=n.TEXTURE_2D,this.glFormat=r.format||n.RGBA,this.mipmaps=!1,this.glMinFilter=r.minFilter||n.LINEAR,this.glMagFilter=r.magFilter||n.LINEAR,this.glWrapS=r.wrapS||n.CLAMP_TO_EDGE,this.glWrapT=r.wrapT||n.CLAMP_TO_EDGE,this.glDataType=r.dataType||n.UNSIGNED_BYTE,this.isSrcMediaElement=void 0!==i.default.MediaElement&&t instanceof i.default.MediaElement,this._videoPrevUpdateTime=0,this.isSrcHTMLElement=void 0!==i.default.Element&&t instanceof i.default.Element&&!(t instanceof i.default.Graphics),this.isSrcP5Image=t instanceof i.default.Image,this.isSrcP5Graphics=t instanceof i.default.Graphics,this.isImageData="undefined"!=typeof ImageData&&t instanceof ImageData;var o=this._getTextureDataFromSource();return this.width=o.width,this.height=o.height,this.init(o),this},i.default.Texture.prototype._getTextureDataFromSource=function(){var e;return this.isSrcP5Image?e=this.src.canvas:this.isSrcMediaElement||this.isSrcP5Graphics||this.isSrcHTMLElement?e=this.src.elt:this.isImageData&&(e=this.src),e},i.default.Texture.prototype.init=function(e){var t=this._renderer.GL;if(this.glTex=t.createTexture(),this.glWrapS=this._renderer.textureWrapX,this.glWrapT=this._renderer.textureWrapY,this.setWrapMode(this.glWrapS,this.glWrapT),this.bindTexture(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.glMagFilter),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.glMinFilter),0===this.width||0===this.height||this.isSrcMediaElement&&!this.src.loadedmetadata){var r=new Uint8Array([1,1,1,1]);t.texImage2D(this.glTarget,0,t.RGBA,1,1,0,this.glFormat,this.glDataType,r)}else t.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,this.glDataType,e)},i.default.Texture.prototype.update=function(){var e=this.src;if(0===e.width||0===e.height)return!1;var t=this._getTextureDataFromSource(),r=!1,n=this._renderer.GL;return t.width!==this.width||t.height!==this.height?(r=!0,this.width=t.width,this.height=t.height,this.isSrcP5Image?e.setModified(!1):(this.isSrcMediaElement||this.isSrcHTMLElement)&&e.setModified(!0)):this.isSrcP5Image?e.isModified()&&(r=!0,e.setModified(!1)):this.isSrcMediaElement?e.isModified()?(r=!0,e.setModified(!1)):e.loadedmetadata&&this._videoPrevUpdateTime!==e.time()&&(this._videoPrevUpdateTime=e.time(),r=!0):this.isImageData?e._dirty&&(r=!(e._dirty=!1)):r=!0,r&&(this.bindTexture(),n.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,this.glDataType,t)),r},i.default.Texture.prototype.bindTexture=function(){return this._renderer.GL.bindTexture(this.glTarget,this.glTex),this},i.default.Texture.prototype.unbindTexture=function(){this._renderer.GL.bindTexture(this.glTarget,null)},i.default.Texture.prototype.setInterpolation=function(e,t){var r=this._renderer.GL;e===s.NEAREST?this.glMinFilter=r.NEAREST:this.glMinFilter=r.LINEAR,t===s.NEAREST?this.glMagFilter=r.NEAREST:this.glMagFilter=r.LINEAR,this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this.glMinFilter),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,this.glMagFilter),this.unbindTexture()},i.default.Texture.prototype.setWrapMode=function(e,t){function r(e){return 0==(e&e-1)}var n=this._renderer.GL,o=r(this.width),i=r(this.height);e===s.REPEAT?o&&i?this.glWrapS=n.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=n.CLAMP_TO_EDGE):e===s.MIRROR?o&&i?this.glWrapS=n.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=n.CLAMP_TO_EDGE):this.glWrapS=n.CLAMP_TO_EDGE,t===s.REPEAT?o&&i?this.glWrapT=n.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=n.CLAMP_TO_EDGE):t===s.MIRROR?o&&i?this.glWrapT=n.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=n.CLAMP_TO_EDGE):this.glWrapT=n.CLAMP_TO_EDGE,this.bindTexture(),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,this.glWrapS),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,this.glWrapT),this.unbindTexture()};var o=i.default.Texture;r.default=o},{"../core/constants":253,"../core/main":264,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.typed-array.copy-within":197,"core-js/modules/es.typed-array.every":198,"core-js/modules/es.typed-array.fill":199,"core-js/modules/es.typed-array.filter":200,"core-js/modules/es.typed-array.find":202,"core-js/modules/es.typed-array.find-index":201,"core-js/modules/es.typed-array.for-each":205,"core-js/modules/es.typed-array.includes":206,"core-js/modules/es.typed-array.index-of":207,"core-js/modules/es.typed-array.iterator":210,"core-js/modules/es.typed-array.join":211,"core-js/modules/es.typed-array.last-index-of":212,"core-js/modules/es.typed-array.map":213,"core-js/modules/es.typed-array.reduce":215,"core-js/modules/es.typed-array.reduce-right":214,"core-js/modules/es.typed-array.reverse":216,"core-js/modules/es.typed-array.set":217,"core-js/modules/es.typed-array.slice":218,"core-js/modules/es.typed-array.some":219,"core-js/modules/es.typed-array.sort":220,"core-js/modules/es.typed-array.subarray":221,"core-js/modules/es.typed-array.to-locale-string":222,"core-js/modules/es.typed-array.to-string":223,"core-js/modules/es.typed-array.uint8-array":226}],321:[function(e,t,r){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("core-js/modules/es.symbol"),e("core-js/modules/es.symbol.description"),e("core-js/modules/es.symbol.iterator"),e("core-js/modules/es.array.iterator"),e("core-js/modules/es.object.to-string"),e("core-js/modules/es.regexp.exec"),e("core-js/modules/es.string.iterator"),e("core-js/modules/es.string.split"),e("core-js/modules/es.string.sub"),e("core-js/modules/web.dom-collections.iterator");var n,G=(n=e("../core/main"))&&n.__esModule?n:{default:n},k=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Shader"),e("./p5.RendererGL.Retained"),G.default.RendererGL.prototype._applyTextProperties=function(){},G.default.RendererGL.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):0};function o(e,t){this.width=e,this.height=t,this.infos=[],this.findImage=function(e){var t,r,n=this.width*this.height;if(n<e)throw new Error("font is too complex to render in 3D");for(var o=this.infos.length-1;0<=o;--o){var i=this.infos[o];if(i.index+e<n){r=(t=i).imageData;break}}if(!t){try{r=new ImageData(this.width,this.height)}catch(e){var a=document.getElementsByTagName("canvas")[0],s=!a;a||((a=document.createElement("canvas")).style.display="none",document.body.appendChild(a));var l=a.getContext("2d");l&&(r=l.createImageData(this.width,this.height)),s&&document.body.removeChild(a)}t={index:0,imageData:r},this.infos.push(t)}var u=t.index;return t.index+=e,r._dirty=!0,{imageData:r,index:u}}}function V(e,t,r,n,o){var i=e.imageData.data,a=4*e.index++;i[a++]=t,i[a++]=r,i[a++]=n,i[a++]=o}function R(e){this.font=e,this.strokeImageInfos=new o(64,64),this.colDimImageInfos=new o(64,64),this.rowDimImageInfos=new o(64,64),this.colCellImageInfos=new o(64,64),this.rowCellImageInfos=new o(64,64),this.glyphInfos={},this.getGlyphInfo=function(e){var t=this.glyphInfos[e.index];if(t)return t;var r,n=e.getBoundingBox(),o=n.x1,i=n.y1,a=n.x2-o,s=n.y2-i,l=e.path.commands;if(0==a||0==s||!l.length)return this.glyphInfos[e.index]={};var u,c,d,f,h=[],p=[],y=[];for(r=8;0<=r;--r)y.push([]);for(r=8;0<=r;--r)p.push([]);function m(e,t,r){var n=h.length;function o(e,t,r){for(var n=e.length;0<n--;){var o=e[n];o<t&&(t=o),r<o&&(r=o)}return{min:t,max:r}}h.push(r);for(var i=o(e,1,0),a=Math.max(Math.floor(9*i.min),0),s=Math.min(Math.ceil(9*i.max),9),l=a;l<s;++l)y[l].push(n);for(var u=o(t,1,0),c=Math.max(Math.floor(9*u.min),0),d=Math.min(Math.ceil(9*u.max),9),f=c;f<d;++f)p[f].push(n)}function g(e){return(t=(n=255)*e)<(r=0)?r:n<t?n:t;var t,r,n}function w(e,t,r,n){this.p0=e,this.c0=t,this.c1=r,this.p1=n,this.toQuadratic=function(){return{x:this.p0.x,y:this.p0.y,x1:this.p1.x,y1:this.p1.y,cx:(3*(this.c0.x+this.c1.x)-(this.p0.x+this.p1.x))/4,cy:(3*(this.c0.y+this.c1.y)-(this.p0.y+this.p1.y))/4}},this.quadError=function(){return G.default.Vector.sub(G.default.Vector.sub(this.p1,this.p0),G.default.Vector.mult(G.default.Vector.sub(this.c1,this.c0),3)).mag()/2},this.split=function(e){var t=G.default.Vector.lerp(this.p0,this.c0,e),r=G.default.Vector.lerp(this.c0,this.c1,e),n=G.default.Vector.lerp(t,r,e);this.c1=G.default.Vector.lerp(this.c1,this.p1,e),this.c0=G.default.Vector.lerp(r,this.c1,e);var o=G.default.Vector.lerp(n,this.c0,e),i=new w(this.p0,t,n,o);return this.p0=o,i},this.splitInflections=function(){var e=G.default.Vector.sub(this.c0,this.p0),t=G.default.Vector.sub(G.default.Vector.sub(this.c1,this.c0),e),r=G.default.Vector.sub(G.default.Vector.sub(G.default.Vector.sub(this.p1,this.c1),e),G.default.Vector.mult(t,2)),n=[],o=t.x*r.y-t.y*r.x;if(0!==o){var i=e.x*r.y-e.y*r.x,a=e.x*t.y-e.y*t.x,s=i*i-4*o*a;if(0<=s){o<0&&(o=-o,i=-i,a=-a);var l=Math.sqrt(s),u=(-i-l)/(2*o),c=(-i+l)/(2*o);0<u&&u<1&&(n.push(this.split(u)),c=1-(1-c)/(1-u)),0<c&&c<1&&n.push(this.split(c))}}return n.push(this),n}}function v(e,t,r,n,o,i,a,s){var l=new w(new G.default.Vector(e,t),new G.default.Vector(r,n),new G.default.Vector(o,i),new G.default.Vector(a,s)).splitInflections(),u=[],c=30/z,d=!0,f=!1,h=void 0;try{for(var p,y=l[Symbol.iterator]();!(d=(p=y.next()).done);d=!0){for(var m=p.value,g=[],v=void 0;!(.125<=(v=c/m.quadError()));){var b=Math.pow(v,1/3),_=m.split(b),x=m.split(1-b/(1-b));u.push(_),g.push(m),m=x}v<1&&u.push(m.split(.5)),u.push(m),Array.prototype.push.apply(u,g.reverse())}}catch(e){f=!0,h=e}finally{try{d||null==y.return||y.return()}finally{if(f)throw h}}return u}function b(e,t,r,n){m([e,r],[t,n],{x:e,y:t,cx:(e+r)/2,cy:(t+n)/2})}function _(e,t,r,n){return Math.abs(r-e)<1e-5&&Math.abs(n-t)<1e-5}var x=!0,j=!1,S=void 0;try{for(var M,E=l[Symbol.iterator]();!(x=(M=E.next()).done);x=!0){var T=M.value,O=(T.x-o)/a,C=(T.y-i)/s;if(!_(u,c,O,C)){switch(T.type){case"M":d=O,f=C;break;case"L":b(u,c,O,C);break;case"Q":var L=(T.x1-o)/a,P=(T.y1-i)/s;m([u,O,L],[c,C,P],{x:u,y:c,cx:L,cy:P});break;case"Z":_(u,c,d,f)?h.push({x:u,y:c}):(b(u,c,d,f),h.push({x:d,y:f}));break;case"C":for(var A=v(u,c,(T.x1-o)/a,(T.y1-i)/s,(T.x2-o)/a,(T.y2-i)/s,O,C),k=0;k<A.length;k++){var R=A[k].toQuadratic();m([R.x,R.x1,R.cx],[R.y,R.y1,R.cy],R)}break;default:throw new Error("unknown command type: ".concat(T.type))}u=O,c=C}}}catch(e){j=!0,S=e}finally{try{x||null==E.return||E.return()}finally{if(j)throw S}}for(var D=h.length,I=this.strokeImageInfos.findImage(D),U=I.index,N=0;N<D;++N){var F=h[N];V(I,g(F.x),g(F.y),g(F.cx),g(F.cy))}function B(e,t,r){for(var n=e.length,o=t.findImage(n),i=o.index,a=0,s=0;s<n;++s)a+=e[s].length;for(var l=r.findImage(a),u=0;u<n;++u){var c=e[u],d=c.length,f=l.index;V(o,f>>7,127&f,d>>7,127&d);for(var h=0;h<d;++h){var p=c[h]+U;V(l,p>>7,127&p,0,0)}}return{cellImageInfo:l,dimOffset:i,dimImageInfo:o}}return(t=this.glyphInfos[e.index]={glyph:e,uGlyphRect:[n.x1,-n.y1,n.x2,-n.y2],strokeImageInfo:I,strokes:h,colInfo:B(y,this.colDimImageInfos,this.colCellImageInfos),rowInfo:B(p,this.rowDimImageInfos,this.rowCellImageInfos)}).uGridOffset=[t.colInfo.dimOffset,t.rowInfo.dimOffset],t}}var z=Math.sqrt(3);G.default.RendererGL.prototype._renderText=function(e,t,r,n,o){if(this._textFont&&"string"!=typeof this._textFont){if(!(o<=n)&&this._doFill){if(!this._isOpenType())return console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported"),e;e.push();var i=this._doStroke,a=this.drawMode;this._doStroke=!1,this.drawMode=k.TEXTURE;var s=this._textFont.font,l=this._textFont._fontInfo;l=l||(this._textFont._fontInfo=new R(s));var u=this._textFont._handleAlignment(this,t,r,n),c=this._textSize/s.unitsPerEm;this.translate(u.x,u.y,0),this.scale(c,c,1);var d=this.GL,f=!this._defaultFontShader,h=this._getFontShader();h.init(),h.bindShader(),f&&(h.setUniform("uGridImageSize",[64,64]),h.setUniform("uCellsImageSize",[64,64]),h.setUniform("uStrokeImageSize",[64,64]),h.setUniform("uGridSize",[9,9])),this._applyColorBlend(this.curFillColor);var p=this.retainedMode.geometry.glyph;if(!p){var y=this._textGeom=new G.default.Geometry(1,1,function(){for(var e=0;e<=1;e++)for(var t=0;t<=1;t++)this.vertices.push(new G.default.Vector(t,e,0)),this.uvs.push(t,e)});y.computeFaces().computeNormals(),p=this.createBuffers("glyph",y)}var m=!0,g=!1,v=void 0;try{for(var b,_=this.retainedMode.buffers.text[Symbol.iterator]();!(m=(b=_.next()).done);m=!0){b.value._prepareBuffer(p,h)}}catch(e){g=!0,v=e}finally{try{m||null==_.return||_.return()}finally{if(g)throw v}}this._bindBuffer(p.indexBuffer,d.ELEMENT_ARRAY_BUFFER),h.setUniform("uMaterialColor",this.curFillColor);try{var x=0,w=null,j=s.stringToGlyphs(t),S=!0,M=!1,E=void 0;try{for(var T,O=j[Symbol.iterator]();!(S=(T=O.next()).done);S=!0){var C=T.value;w&&(x+=s.getKerningValue(w,C));var L=l.getGlyphInfo(C);if(L.uGlyphRect){var P=L.rowInfo,A=L.colInfo;h.setUniform("uSamplerStrokes",L.strokeImageInfo.imageData),h.setUniform("uSamplerRowStrokes",P.cellImageInfo.imageData),h.setUniform("uSamplerRows",P.dimImageInfo.imageData),h.setUniform("uSamplerColStrokes",A.cellImageInfo.imageData),h.setUniform("uSamplerCols",A.dimImageInfo.imageData),h.setUniform("uGridOffset",L.uGridOffset),h.setUniform("uGlyphRect",L.uGlyphRect),h.setUniform("uGlyphOffset",x),h.bindTextures(),d.drawElements(d.TRIANGLES,6,this.GL.UNSIGNED_SHORT,0)}x+=C.advanceWidth,w=C}}catch(e){M=!0,E=e}finally{try{S||null==O.return||O.return()}finally{if(M)throw E}}}finally{h.unbindShader(),this._doStroke=i,this.drawMode=a,e.pop()}return e}}else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.")}},{"../core/constants":253,"../core/main":264,"./p5.RendererGL.Retained":317,"./p5.Shader":319,"core-js/modules/es.array.iterator":158,"core-js/modules/es.object.to-string":177,"core-js/modules/es.regexp.exec":181,"core-js/modules/es.string.iterator":186,"core-js/modules/es.string.split":191,"core-js/modules/es.string.sub":192,"core-js/modules/es.symbol":196,"core-js/modules/es.symbol.description":194,"core-js/modules/es.symbol.iterator":195,"core-js/modules/web.dom-collections.iterator":229}]},{},[248])(248)});

/***/ }),

/***/ "./src/ball.ts":
/*!*********************!*\
  !*** ./src/ball.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var p5_lib_addons_p5_sound__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p5/lib/addons/p5.sound */ "./node_modules/p5/lib/addons/p5.sound.js");
/* harmony import */ var p5_lib_addons_p5_sound__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(p5_lib_addons_p5_sound__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./src/math.ts");
/* harmony import */ var _vec2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec2 */ "./src/vec2.ts");
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};



var Ball = /** @class */ (function () {
    function Ball(pos, dir, speed, xBounds, yBounds, ballSpawnSounds, radius, duration, active) {
        if (ballSpawnSounds === void 0) { ballSpawnSounds = []; }
        if (radius === void 0) { radius = 8; }
        if (duration === void 0) { duration = 5; }
        if (active === void 0) { active = true; }
        this.active = true;
        this.spawnedThisFrame = true;
        this.construct(pos, dir, speed, xBounds, yBounds, ballSpawnSounds, radius, duration, active);
    }
    Ball.prototype.construct = function (pos, dir, speed, xBounds, yBounds, ballSpawnSounds, radius, duration, active) {
        if (ballSpawnSounds === void 0) { ballSpawnSounds = []; }
        if (radius === void 0) { radius = 8; }
        if (duration === void 0) { duration = 5; }
        if (active === void 0) { active = true; }
        this.pos = pos;
        this.prevPos = _vec2__WEBPACK_IMPORTED_MODULE_2__["default"].zero;
        this.dir = dir.normalized();
        this.speed = speed;
        this.duration = duration;
        this.vel = this.dir.scale(this.speed);
        this.radius = radius;
        this.contactHistory = [];
        this.initPos = pos;
        this.initVel = this.vel;
        this.xBounds = xBounds;
        this.yBounds = yBounds;
        this.spawnTime = Date.now();
        this.active = active;
        this.spawnedThisFrame = true;
        this.ballSpawnSounds = ballSpawnSounds;
    };
    Ball.prototype.setActive = function (active) {
        this.active = active;
        this.spawnTime = Date.now();
    };
    Ball.prototype.playRandomSpawnSound = function (pan) {
        // const sound = this.ballSpawnSounds[Math.trunc(Math.random() * this.ballSpawnSounds.length)];
        // sound.setVolume(0.1);
        // sound.pan(pan);
        // if (sound.isLoaded) {
        //     sound.play();
        // } else {
        //     console.log("Sound not loaded!");
        // }
    };
    Ball.prototype.update = function (dt) {
        if (!this.active)
            return;
        if ((Date.now() - this.spawnTime) / 1000 > this.duration) {
            this.active = false;
            return;
        }
        var normals = new Array();
        var testPos = this.pos.copy();
        // x = 0
        if (this.pos.x < this.xBounds.x) {
            var upper = this.pos;
            var lower = this.prevPos;
            testPos = upper.add(lower).scale(0.5);
            var epsilon = 0.5;
            while (Math.abs(testPos.x - this.xBounds.x) > epsilon) {
                console.log(Math.abs(testPos.x - this.xBounds.x));
                // TestPos is closer to pos
                if (testPos.x < this.xBounds.x) {
                    upper = testPos;
                }
                else {
                    lower = testPos;
                }
                testPos = upper.add(lower).scale(0.5);
            }
            normals.push(new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](1, 0));
            // x = w
        }
        else if (this.pos.x > this.xBounds.y) {
            var upper = this.pos;
            var lower = this.prevPos;
            testPos = upper.add(lower).scale(0.5);
            var epsilon = 0.5;
            while (Math.abs(testPos.x - this.xBounds.y) > epsilon) {
                // TestPos is closer to pos
                if (testPos.x > this.xBounds.y) {
                    upper = testPos;
                }
                else {
                    lower = testPos;
                }
                testPos = upper.add(lower).scale(0.5);
            }
            normals.push(new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](-1, 0));
        }
        this.pos = testPos.copy();
        // y = 0
        if (this.pos.y < this.yBounds.x) {
            var upper = this.pos;
            var lower = this.prevPos;
            testPos = upper.add(lower).scale(0.5);
            var epsilon = 0.5;
            while (Math.abs(testPos.y - this.yBounds.x) > epsilon) {
                // TestPos is closer to pos
                if (testPos.y < this.yBounds.x) {
                    upper = testPos;
                }
                else {
                    lower = testPos;
                }
                testPos = upper.add(lower).scale(0.5);
            }
            normals.push(new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](0, 1));
            // y = h
        }
        else if (this.pos.y > this.yBounds.y) {
            var upper = this.pos;
            var lower = this.prevPos;
            testPos = upper.add(lower).scale(0.5);
            var epsilon = 0.5;
            while (Math.abs(testPos.y - this.yBounds.y) > epsilon) {
                // TestPos is closer to pos
                if (testPos.y > this.yBounds.y) {
                    upper = testPos;
                }
                else {
                    lower = testPos;
                }
                testPos = upper.add(lower).scale(0.5);
            }
            normals.push(new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](0, -1));
        }
        this.pos = testPos.copy();
        // line(p, this.pos, this.dir, 2, 30);
        if (!this.spawnedThisFrame && normals.length > 0) {
            if (this.contactHistory.length === 0) {
                this.firstContactTime = Date.now();
            }
            this.contactHistory.push(this.pos.copy());
            var angles = normals.map(function (val) { return Math.atan2(val.y, val.x); });
            var angleAverage = angles.reduce(function (prev, cur) { return prev + cur; }, 0) / normals.length;
            var normal = (new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](Math.cos(angleAverage), Math.sin(angleAverage)));
            // line(p, this.pos, normal, 2, 30);
            // Project vel onto normal
            var projectedDir = normal.scale(this.dir.dot(normal));
            var reflectedDir = this.dir.sub(projectedDir.scale(2)).normalized();
            var reflectedVel = reflectedDir.scale(this.speed);
            this.dir = reflectedDir;
            this.vel = reflectedVel;
        }
        if (this.spawnedThisFrame) {
            this.spawnedThisFrame = false;
            this.initPos = this.pos;
            this.initVel = this.vel;
            var pan = ((this.pos.x - this.xBounds.x) / (this.xBounds.y - this.xBounds.x)) * 2 - 1;
            this.playRandomSpawnSound(pan);
        }
        this.prevPos = this.pos;
        this.pos = this.pos.add(this.vel.scale(dt));
    };
    Ball.prototype.draw = function (p, p2) {
        if (!this.active)
            return;
        var age = (Date.now() - this.spawnTime) / 1000;
        var alpha = Math.sqrt((0,_math__WEBPACK_IMPORTED_MODULE_1__.clamp)(1 - age / this.duration, 0, 1)) * 255;
        drawBall(p, this, 2, alpha);
        var offset = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"]((p2.width - p.width) / 2, (p2.height - p.height) / 2);
        drawPath(p2, this, offset, alpha);
    };
    Ball.prototype.pathPoints = function () {
        var idx;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    idx = 0;
                    _a.label = 1;
                case 1:
                    if (!(idx < this.contactHistory.length)) return [3 /*break*/, 4];
                    return [4 /*yield*/, this.contactHistory[idx]];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    idx++;
                    return [3 /*break*/, 1];
                case 4: return [4 /*yield*/, this.pos];
                case 5:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    };
    return Ball;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Ball);
function drawPath(p, b, offset, a) {
    var e_1, _a;
    if (offset === void 0) { offset = _vec2__WEBPACK_IMPORTED_MODULE_2__["default"].zero; }
    p.push();
    p.stroke(0, 0, 30, a);
    p.strokeWeight(3);
    var prevPos = b.initPos.add(offset);
    try {
        for (var _b = __values(b.pathPoints()), _c = _b.next(); !_c.done; _c = _b.next()) {
            var pathPos = _c.value;
            var pos = pathPos.add(offset);
            p.line(prevPos.x, prevPos.y, pos.x, pos.y);
            prevPos = pos;
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    if (b.contactHistory.length > 0) {
        p.stroke(0, 255, 255, a);
        var sinceFirstContact = (Date.now() - b.firstContactTime) / 1000;
        var firstContact = b.contactHistory[0].add(offset);
        var estimatedPos = firstContact.add(b.initVel.scale(sinceFirstContact));
        p.line(firstContact.x, firstContact.y, estimatedPos.x, estimatedPos.y);
        b.firstContactTime;
    }
    p.pop();
}
function drawBall(p, b, s, a) {
    if (a === void 0) { a = 255; }
    p.push();
    p.fill(254, 223, 83, a);
    p.stroke(51, a);
    p.strokeWeight(s);
    // p.drawingContext.shadowOffsetX = 5;
    // p.drawingContext.shadowOffsetY = -5;
    // p.drawingContext.shadowBlur = 10;
    // p.drawingContext.shadowColor = "black";
    p.ellipse(b.pos.x, b.pos.y, b.radius * 2, b.radius * 2);
    p.imageMode(p.CENTER);
    // let side = Math.max(img.width, img.height);
    // let scale = 2 * r / side;
    // p.scale(scale)
    // p.image(img, x/scale, y/scale);
    p.pop();
}


/***/ }),

/***/ "./src/helpers.ts":
/*!************************!*\
  !*** ./src/helpers.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isOverlapping2D": () => (/* binding */ isOverlapping2D),
/* harmony export */   "isOverlapping1D": () => (/* binding */ isOverlapping1D),
/* harmony export */   "calcImageGrid": () => (/* binding */ calcImageGrid)
/* harmony export */ });
/* harmony import */ var _vec2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec2 */ "./src/vec2.ts");

// Do two axis aligned bounding boxes overlap? Given by center position and extents.
function isOverlapping2D(pos1, extents1, pos2, extents2) {
    return isOverlapping1D(pos1.x, extents1.x, pos2.x, extents2.x)
        && isOverlapping1D(pos1.y, extents1.y, pos2.y, extents2.y);
}
function isOverlapping1D(pos1, extent1, pos2, extent2) {
    var min1 = pos1 - extent1;
    var max1 = pos1 + extent1;
    var min2 = pos2 - extent2;
    var max2 = pos2 + extent2;
    return !(min1 > max2 || max1 < min2);
}
function calcImageGrid(canvasSize, pos, size, zoomFactor) {
    var zoomedCanvas = canvasSize.scale(1 / zoomFactor);
    var rowsBefore = Math.ceil((zoomedCanvas.y - size.y) / 2 / size.y);
    var colsBefore = Math.ceil((zoomedCanvas.x - size.x) / 2 / size.x);
    var rowCount = 2 * rowsBefore + 1;
    var colCount = 2 * colsBefore + 1;
    var firstPos = new _vec2__WEBPACK_IMPORTED_MODULE_0__["default"](pos.x - colsBefore * size.x, pos.y - rowsBefore * size.y);
    var firstXFlip = colsBefore % 2 !== 0;
    var firstYFlip = rowsBefore % 2 !== 0;
    return {
        firstPos: firstPos,
        firstXFlip: firstXFlip,
        firstYFlip: firstYFlip,
        rowCount: rowCount,
        colCount: colCount
    };
}


/***/ }),

/***/ "./src/math.ts":
/*!*********************!*\
  !*** ./src/math.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clamp": () => (/* binding */ clamp),
/* harmony export */   "mod": () => (/* binding */ mod)
/* harmony export */ });
function clamp(number, min, max) {
    return Math.max(min, Math.min(number, max));
}
function mod(a, b) {
    var res = a % b;
    if (res < 0) {
        res += b;
    }
    return res;
}


/***/ }),

/***/ "./src/vec2.ts":
/*!*********************!*\
  !*** ./src/vec2.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var Vec2 = /** @class */ (function () {
    function Vec2(x, y) {
        this.x = x;
        this.y = y;
    }
    Vec2.prototype.copy = function () {
        return new Vec2(this.x, this.y);
    };
    Vec2.prototype.add = function (other) {
        return new Vec2(this.x + other.x, this.y + other.y);
    };
    Vec2.prototype.sub = function (other) {
        return new Vec2(this.x - other.x, this.y - other.y);
    };
    Vec2.prototype.scale = function (s) {
        return new Vec2(this.x * s, this.y * s);
    };
    Vec2.prototype.mult = function (other) {
        return new Vec2(this.x * other.x, this.y * other.y);
    };
    Vec2.prototype.normalized = function () {
        return this.scale(1 / Math.sqrt(this.x * this.x + this.y * this.y));
    };
    Vec2.prototype.dot = function (other) {
        return this.x * other.x + this.y * other.y;
    };
    Vec2.prototype.mag = function () {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    };
    Vec2.zero = new Vec2(0, 0);
    return Vec2;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Vec2);


/***/ }),

/***/ "./assets/sounds/button1.ogg":
/*!***********************************!*\
  !*** ./assets/sounds/button1.ogg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "sounds/bc924beea3ef147b06ee.ogg";

/***/ }),

/***/ "./assets/sounds/button2.ogg":
/*!***********************************!*\
  !*** ./assets/sounds/button2.ogg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "sounds/e6fe12f07c2780d7ed09.ogg";

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/brilliant/dist/";
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var p5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p5 */ "./node_modules/p5/lib/p5.min.js");
/* harmony import */ var p5__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(p5__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ball__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ball */ "./src/ball.ts");
/* harmony import */ var _vec2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec2 */ "./src/vec2.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers */ "./src/helpers.ts");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./math */ "./src/math.ts");
/* harmony import */ var _assets_sounds_button1_ogg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../assets/sounds/button1.ogg */ "./assets/sounds/button1.ogg");
/* harmony import */ var _assets_sounds_button2_ogg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../assets/sounds/button2.ogg */ "./assets/sounds/button2.ogg");







var p5Instance = new p5__WEBPACK_IMPORTED_MODULE_0__(function (p) {
    var pg_grid;
    var pg_paths;
    // let font: p5.Font;
    var viewData;
    var canvasSize;
    var viewSize;
    var zoomFactor = 1;
    var zoomSmoothing = 0.92;
    var targetZoomMin = 0.3;
    var targetZoomMax = 1;
    var _targetZoomFactor = 1;
    var balls = new Array();
    var ballIdx = 0;
    var maxBalls = 16;
    function launchBall(pos, vec, w, h) {
        var correctedPos = pos.add(new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](pg_grid.width / 2, pg_grid.height / 2));
        var flipX = Math.floor(correctedPos.x / pg_grid.width) % 2 !== 0;
        var flipY = Math.floor(correctedPos.y / pg_grid.height) % 2 !== 0;
        var scaleX = flipX ? -1 : 1;
        var scaleY = flipY ? -1 : 1;
        var scale = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](scaleX, scaleY);
        correctedPos = pos.mult(scale).add(new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](pg_grid.width / 2, pg_grid.height / 2));
        correctedPos.x = (0,_math__WEBPACK_IMPORTED_MODULE_4__.mod)(correctedPos.x, pg_grid.width);
        correctedPos.y = (0,_math__WEBPACK_IMPORTED_MODULE_4__.mod)(correctedPos.y, pg_grid.height);
        var correctedVel = vec.mult(scale);
        if (balls.length < maxBalls) {
            var ball = new _ball__WEBPACK_IMPORTED_MODULE_1__["default"](correctedPos, correctedVel, correctedVel.mag(), new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](0, w), new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](0, h), ballSpawnSounds);
            balls.push(ball);
        }
        else {
            var ball = balls[ballIdx];
            ball.construct(correctedPos, correctedVel, correctedVel.mag(), new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](0, w), new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](0, h), ballSpawnSounds);
        }
        ballIdx = (ballIdx + 1) % maxBalls;
    }
    function setTargetZoom(targetZoomFactor) {
        _targetZoomFactor = (0,_math__WEBPACK_IMPORTED_MODULE_4__.clamp)(targetZoomFactor, targetZoomMin, targetZoomMax);
    }
    var ballSpawnSounds = new Array();
    p.preload = function () {
        // font = p.loadFont(soleil);
        // photonImg = p.loadImage(photonAsset);
        ballSpawnSounds.push(p.loadSound(_assets_sounds_button1_ogg__WEBPACK_IMPORTED_MODULE_5__));
        ballSpawnSounds.push(p.loadSound(_assets_sounds_button2_ogg__WEBPACK_IMPORTED_MODULE_6__));
    };
    p.setup = function () {
        var canvasWidth = 360;
        var canvasHeight = canvasWidth;
        p.createCanvas(canvasWidth, canvasHeight, p.WEBGL).parent("canvasContainer");
        p.frameRate(60);
        // p.textFont(font);
        p.textSize(20);
        // Setup render texture
        viewSize = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](200, 300);
        // Tiling viewport
        pg_grid = p.createGraphics(viewSize.x, viewSize.y);
        // Paths layer
        pg_paths = p.createGraphics(p.width * 4, p.height * 4);
        var randAngle = p.random() * 2 * Math.PI;
        var speed = 60;
    };
    p.draw = function () {
        p.push();
        pg_grid.push();
        pg_paths.push();
        p.background(255, 0, 255);
        pg_grid.background(200);
        pg_paths.clear(0, 0, 0, 0);
        drawWalls(pg_grid, pg_grid.width, pg_grid.height);
        balls.forEach(function (ball) {
            ball.update(pg_grid.deltaTime / 1000);
            ball.draw(pg_grid, pg_paths);
        });
        canvasSize = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](p.width, p.height);
        viewSize = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](pg_grid.width, pg_grid.height);
        zoomFactor = zoomSmoothing * zoomFactor + (1 - zoomSmoothing) * _targetZoomFactor;
        viewData = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.calcImageGrid)(canvasSize, _vec2__WEBPACK_IMPORTED_MODULE_2__["default"].zero, viewSize, zoomFactor);
        // Copy to image so we can transform it
        var img = p.createImage(pg_grid.width, pg_grid.height);
        img.copy(pg_grid, 0, 0, pg_grid.width, pg_grid.height, 0, 0, pg_grid.width, pg_grid.height);
        var pos;
        var xFlip = viewData.firstXFlip;
        var yFlip = viewData.firstYFlip;
        p.imageMode(p.CENTER);
        p.scale(zoomFactor);
        for (var rowIdx = 0; rowIdx < viewData.rowCount; rowIdx++) {
            for (var colIdx = 0; colIdx < viewData.colCount; colIdx++) {
                pos = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"](viewData.firstPos.x + colIdx * pg_grid.width, viewData.firstPos.y + rowIdx * pg_grid.height);
                var idx = rowIdx * viewData.colCount + colIdx;
                var total = viewData.colCount * viewData.rowCount;
                var percent = idx / total;
                p.push();
                var xScale = xFlip ? -1 : 1;
                var yScale = yFlip ? -1 : 1;
                p.scale(xScale, yScale);
                if (idx !== (total - 1) / 2) {
                    p.tint(255, 200);
                }
                p.image(img, pos.x * xScale, pos.y * yScale);
                // p.fill(0, 255 * colIdx / viewData.colCount, 0);
                // p.text(`${xFlip} ${yFlip}`, pos.x * xScale, pos.y * yScale);
                p.pop();
                xFlip = !xFlip;
            }
            xFlip = viewData.firstXFlip;
            yFlip = !yFlip;
        }
        // Slingshot
        if (isDragging) {
            pg_paths.push();
            pg_paths.stroke(200, 0, 0);
            pg_paths.strokeWeight(2);
            var offset = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"]((pg_paths.width - p.width) / 2, (pg_paths.height - p.height) / 2);
            var currentMouse = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"]((p.mouseX - p.width / 2) / zoomFactor, (p.mouseY - p.height / 2) / zoomFactor);
            pg_paths.line(lastMousePress.x + offset.x + p.width / 2, lastMousePress.y + offset.y + p.height / 2, currentMouse.x + offset.x + p.width / 2, currentMouse.y + offset.y + p.height / 2);
            pg_paths.pop();
        }
        // var img = p.createImage(pg.width, pg.height);
        // img.copy(pg, 0, 0, pg.width, pg.height, 0, 0, pg.width, pg.height);
        p.image(pg_paths, 0, 0);
        // Draw rope
        // pg.line()
        pg_paths.pop();
        pg_grid.pop();
        p.pop();
    };
    p.keyPressed = function (event) {
    };
    var lastMousePress;
    var lastMouseRelease;
    var isDragging = false;
    p.mousePressed = function (event) {
        lastMousePress = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"]((p.mouseX - p.width / 2) / zoomFactor, (p.mouseY - p.height / 2) / zoomFactor);
        console.log("pressed ".concat(lastMousePress.x, " ").concat(lastMousePress.y));
    };
    p.mouseDragged = function (event) {
        isDragging = true;
    };
    p.mouseReleased = function (event) {
        lastMouseRelease = new _vec2__WEBPACK_IMPORTED_MODULE_2__["default"]((p.mouseX - p.width / 2) / zoomFactor, (p.mouseY - p.height / 2) / zoomFactor);
        console.log("released ".concat(lastMouseRelease.x, " ").concat(lastMouseRelease.y));
        if (isDragging) {
            isDragging = false;
            launchBall(lastMouseRelease, lastMousePress.sub(lastMouseRelease), pg_grid.width, pg_grid.height);
        }
    };
    p.mouseWheel = function (event) {
        if (event.deltaY === 0)
            return;
        var s = 1.08;
        // Up
        if (event.deltaY < 0) {
            setTargetZoom(_targetZoomFactor * s);
        }
        else {
            setTargetZoom(_targetZoomFactor / s);
        }
    };
});
function drawLine(p, pos, dPos, w, s) {
    p.push();
    p.strokeWeight(w);
    p.line(pos.x, pos.y, pos.x + dPos.x * s, pos.y + dPos.y * s);
    p.pop();
}
function drawWalls(p, w, h) {
    p.push();
    p.fill(16);
    var d = 16;
    var w2 = w / 2;
    var h2 = h / 2;
    var xCenter = p.width / 2;
    var yCenter = p.height / 2;
    //Right wall
    var leftBound = w2 + xCenter;
    var topBound = -h2 + yCenter;
    p.rect(leftBound, topBound, d, h);
    //Bot wall
    leftBound = -w2 + xCenter;
    topBound = h2 + yCenter;
    p.rect(leftBound, topBound, w, d);
    //Left wall
    leftBound = -w2 - d + xCenter;
    topBound = -h2 + yCenter;
    p.rect(leftBound, topBound, d, h);
    //Top wall
    leftBound = -w2 + xCenter;
    topBound = -h2 - d + yCenter;
    p.rect(leftBound, topBound, w, d);
    p.pop();
}

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MENBQTBDOzs7Ozs7O0FBT3JHOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixhQUFhO0FBQ25DO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7O0FBR0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEIsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsRUFBRTs7QUFFckI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCLGFBQWEsVUFBVTtBQUN2Qjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsdUNBQXVDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNI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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsdUJBQXVCO0FBQ3JDO0FBQ0E7QUFDQSxjQUFjLGtCQUFrQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdC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QTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7OztBQUdBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLEVBQUU7QUFDRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTs7O0FBR0EsRUFBRTtBQUNGLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFNBQVM7QUFDckI7OztBQUdBLEVBQUU7QUFDRjtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRTtBQUNGOztBQUVBLHNCQUFzQixFQUFFLCtCQUErQixFQUFFLDhCQUE4QixFQUFFLDRCQUE0QixFQUFFLDJCQUEyQixFQUFFLDBCQUEwQixFQUFFLDJCQUEyQixFQUFFO0FBQzdNO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLGFBQWEsYUFBYTtBQUMxQjtBQUNBOzs7QUFHQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsU0FBUyxFQUFFO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixhQUFhLGFBQWE7QUFDMUI7QUFDQTs7O0FBR0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLFNBQVMsRUFBRTtBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7OztBQUdBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQSxTQUFTLEVBQUU7QUFDWDs7O0FBR0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IseUJBQXlCO0FBQzNDO0FBQ0E7QUFDQTs7O0FBR0EsRUFBRTtBQUNGO0FBQ0EsRUFBRSxFQUFFO0FBQ0o7O0FBRUEsRUFBRSwrQkFBK0IsRUFBRTtBQUNuQyxlQUFlLEVBQUU7QUFDakI7QUFDQSw2QkFBNkIsMkVBQTJFLHVDQUF1Qyx3QkFBd0IsT0FBTyx1Q0FBdUMsbUlBQW1JOztBQUV4Vix1REFBdUQsMENBQTBDOztBQUVqRyxpREFBaUQsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RDs7QUFFcFEsbUVBQW1FLDJFQUEyRSxtRUFBbUU7O0FBRWpOLHVEQUF1RCwrRUFBK0UsZUFBZTs7QUFFckosNkNBQTZDLHVCQUF1Qix5RkFBeUY7O0FBRTdKLG1DQUFtQyxxR0FBcUcsbURBQW1EOztBQUUzTCxnREFBZ0QsK0RBQStELDZFQUE2RSx5RUFBeUUsZUFBZSx1REFBdUQsR0FBRzs7QUFFOVUsc0NBQXNDLGlGQUFpRixpQkFBaUIsYUFBYTs7OztBQUlySjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0Qjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztB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QUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjs7QUFFQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksVUFBVTtBQUN0QixZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixhQUFhO0FBQzdCOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsT0FBTztBQUN4QjtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsVUFBVTtBQUMzQjtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7O0FBRUE7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsVUFBVTtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCLFVBQVU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEO0FBQ0EsK0RBQStELDBDQUEwQzs7QUFFekcseURBQXlELGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQ7O0FBRTVRLDJFQUEyRSxtRkFBbUYsMkVBQTJFOzs7OztBQUt6TztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7OztBQUdBLDhCQUE4QixFQUFFOztBQUVoQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEI7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLFFBQVEsRUFBRTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdCQUFnQjtBQUNqQyxpQkFBaUIsVUFBVTtBQUMzQixpQkFBaUIsVUFBVTtBQUMzQjtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLGtDQUFrQywyRUFBMkUsNENBQTRDLHdCQUF3QixPQUFPLDRDQUE0QyxtSUFBbUk7O0FBRXZXLDREQUE0RCwwQ0FBMEM7O0FBRXRHLHNEQUFzRCxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVEOztBQUV6USx3RUFBd0UsZ0ZBQWdGLHdFQUF3RTs7QUFFaE8sNERBQTRELG9GQUFvRixlQUFlOztBQUUvSixrREFBa0QsdUJBQXVCLHlGQUF5Rjs7QUFFbEssc0RBQXNELHFEQUFxRCxnQ0FBZ0MsT0FBTyw2REFBNkQsdURBQXVELG1CQUFtQiw0REFBNEQsZ0JBQWdCLGtDQUFrQyx3QkFBd0I7O0FBRS9aLHNEQUFzRCxrRUFBa0UsNENBQTRDLDhCQUE4Qjs7QUFFbE0sd0NBQXdDLDBHQUEwRyxtREFBbUQ7O0FBRXJNLHFEQUFxRCwrREFBK0QsNkVBQTZFLHlFQUF5RSxlQUFlLHVEQUF1RCxHQUFHOztBQUVuViwyQ0FBMkMsc0ZBQXNGLGlCQUFpQixhQUFhOzs7O0FBSS9KO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsZ0JBQWdCO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixFQUFFO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsV0FBVztBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEVBQUU7QUFDNUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEO0FBQ0Esc0RBQXNELDBDQUEwQzs7QUFFaEcsZ0RBQWdELGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQ7O0FBRW5RLGtFQUFrRSwwRUFBMEUsa0VBQWtFOzs7QUFHOU07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixrQ0FBa0M7QUFDbEMsbUNBQW1DO0FBQ25DLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esc0JBQXNCLEVBQUU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLDREQUE0RCwwQ0FBMEM7O0FBRXRHLHNEQUFzRCxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVEOztBQUV6USx3RUFBd0UsZ0ZBQWdGLHdFQUF3RTs7O0FBR2hPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQSxpQ0FBaUMsMkVBQTJFLDJDQUEyQyx3QkFBd0IsT0FBTywyQ0FBMkMsbUlBQW1JOztBQUVwVywyREFBMkQsMENBQTBDOztBQUVyRyxxREFBcUQsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RDs7QUFFeFEsdUVBQXVFLCtFQUErRSx1RUFBdUU7O0FBRTdOLDJEQUEyRCxtRkFBbUYsZUFBZTs7QUFFN0osaURBQWlELHVCQUF1Qix5RkFBeUY7O0FBRWpLLHFEQUFxRCxxREFBcUQsK0JBQStCLE9BQU8sNERBQTRELHNEQUFzRCxtQkFBbUIsNERBQTRELGdCQUFnQixrQ0FBa0Msd0JBQXdCOztBQUUzWixxREFBcUQsa0VBQWtFLDJDQUEyQyw4QkFBOEI7O0FBRWhNLHVDQUF1Qyx5R0FBeUcsbURBQW1EOztBQUVuTSxvREFBb0QsK0RBQStELDZFQUE2RSx5RUFBeUUsZUFBZSx1REFBdUQsR0FBRzs7QUFFbFYsMENBQTBDLHFGQUFxRixpQkFBaUIsYUFBYTs7Ozs7OztBQU83SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7O0FBR0E7OztBQUdBOztBQUVBOztBQUVBOztBQUVBOzs7QUFHQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsUUFBUTtBQUMxQjtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLFFBQVE7QUFDMUI7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsUUFBUTtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlCQUFpQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCLGdCQUFnQixRQUFRO0FBQ3hCLGdCQUFnQixpQkFBaUI7QUFDakM7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQSw2REFBNkQsMENBQTBDOztBQUV2Ryx1REFBdUQsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RDs7QUFFMVEseUVBQXlFLGlGQUFpRix5RUFBeUU7O0FBRW5PO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEO0FBQ0EsMkRBQTJELDBDQUEwQzs7QUFFckcscURBQXFELGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQ7O0FBRXhRLHVFQUF1RSwrRUFBK0UsdUVBQXVFOzs7OztBQUs3TjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpREFBaUQsRUFBRTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxQkFBcUI7QUFDdkM7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEIsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLE9BQU87QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBOztBQUVBOzs7QUFHQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsY0FBYztBQUM5Qjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsT0FBTztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQSx3REFBd0QsMENBQTBDOztBQUVsRztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7Ozs7QUFJQSxFQUFFO0FBQ0YsRUFBRTs7O0FBR0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTs7QUFFRixFQUFFLG9DQUFvQyxFQUFFOzs7O0FBSXhDLEVBQUU7O0FBRUYsRUFBRTtBQUNGLEVBQUU7O0FBRUYsRUFBRSw4Q0FBOEMsRUFBRTs7QUFFbEQsRUFBRTs7QUFFRixFQUFFOztBQUVGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFOzs7QUFHRixFQUFFOztBQUVGLEVBQUU7O0FBRUYsRUFBRTs7QUFFRixFQUFFOztBQUVGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7O0FBRUYsRUFBRTs7QUFFRixFQUFFOztBQUVGLEVBQUU7O0FBRUYsRUFBRTs7QUFFRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFLG9EQUFvRCxFQUFFOztBQUV4RCxFQUFFOztBQUVGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTs7QUFFRixFQUFFOztBQUVGLEVBQUU7O0FBRUYsRUFBRTs7QUFFRixFQUFFOztBQUVGLEVBQUU7O0FBRUYsRUFBRTs7QUFFRixFQUFFOztBQUVGLEVBQUU7O0FBRUYsRUFB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QixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLHFCQUFxQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLG9CQUFvQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHdCQUF3QixFQUFFLHdCQUF3QixFQUFFLDBCQUEwQixFQUFFLHNCQUFzQixFQUFFLHdCQUF3QixFQUFFLG9CQUFvQixFQUFFLG9CQUFv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LElBQUksVUFBVSxFQUFFO1lBQ2QsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2hCLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMzQixRQUFRLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLElBQU0sTUFBTSxHQUFHLElBQUksNkNBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzFGLElBQU0sWUFBWSxHQUFHLElBQUksNkNBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUM7WUFDN0csUUFBUSxDQUFDLElBQUksQ0FDWCxjQUFjLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsY0FBYyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUNyRixZQUFZLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUNsRixDQUFDO1lBQ0YsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ2hCO1FBRUQsZ0RBQWdEO1FBQ2hELHNFQUFzRTtRQUN0RSxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFB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O0lBQzdCLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDbEMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ1YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JyaWxsaWFudC8uL25vZGVfbW9kdWxlcy9wNS9saWIvYWRkb25zL3A1LnNvdW5kLmpzIiwid2VicGFjazovL2JyaWxsaWFudC8uL25vZGVfbW9kdWxlcy9wNS9saWIvcDUubWluLmpzIiwid2VicGFjazovL2JyaWxsaWFudC8uL3NyYy9iYWxsLnRzIiwid2VicGFjazovL2JyaWxsaWFudC8uL3NyYy9oZWxwZXJzLnRzIiwid2VicGFjazovL2JyaWxsaWFudC8uL3NyYy9tYXRoLnRzIiwid2VicGFjazovL2JyaWxsaWFudC8uL3NyYy92ZWMyLnRzIiwid2VicGFjazovL2JyaWxsaWFudC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9icmlsbGlhbnQvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYnJpbGxpYW50L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9icmlsbGlhbnQvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9icmlsbGlhbnQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9icmlsbGlhbnQvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9icmlsbGlhbnQvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vYnJpbGxpYW50Ly4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBbcDUuc291bmRdICBWZXJzaW9uOiAxLjAuMSAtIDIwMjEtMDUtMjUgKi8gXG4gLyoqXG4gKiAgPHA+cDUuc291bmQgZXh0ZW5kcyBwNSB3aXRoIDxhIGhyZWY9XCJodHRwOi8vY2FuaXVzZS5jb20vYXVkaW8tYXBpXCJcbiAqICB0YXJnZXQ9XCJfYmxhbmtcIj5XZWIgQXVkaW88L2E+IGZ1bmN0aW9uYWxpdHkgaW5jbHVkaW5nIGF1ZGlvIGlucHV0LFxuICogIHBsYXliYWNrLCBhbmFseXNpcyBhbmQgc3ludGhlc2lzLlxuICogIDwvcD5cbiAqICA8dWw+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1LlNvdW5kRmlsZVwiPjxiPnA1LlNvdW5kRmlsZTwvYj48L2E+OiBMb2FkIGFuZCBwbGF5IHNvdW5kIGZpbGVzLjwvbGk+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1LkFtcGxpdHVkZVwiPjxiPnA1LkFtcGxpdHVkZTwvYj48L2E+OiBHZXQgdGhlIGN1cnJlbnQgdm9sdW1lIG9mIGEgc291bmQuPC9saT5cbiAqICA8bGk+PGEgaHJlZj1cIiMvcDUuQXVkaW9JblwiPjxiPnA1LkF1ZGlvSW48L2I+PC9hPjogR2V0IHNvdW5kIGZyb20gYW4gaW5wdXQgc291cmNlLCB0eXBpY2FsbHlcbiAqICAgIGEgY29tcHV0ZXIgbWljcm9waG9uZS48L2xpPlxuICogIDxsaT48YSBocmVmPVwiIy9wNS5GRlRcIj48Yj5wNS5GRlQ8L2I+PC9hPjogQW5hbHl6ZSB0aGUgZnJlcXVlbmN5IG9mIHNvdW5kLiBSZXR1cm5zXG4gKiAgICByZXN1bHRzIGZyb20gdGhlIGZyZXF1ZW5jeSBzcGVjdHJ1bSBvciB0aW1lIGRvbWFpbiAod2F2ZWZvcm0pLjwvbGk+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1Lk9zY2lsbGF0b3JcIj48Yj5wNS5Pc2NpbGxhdG9yPC9iPjwvYT46IEdlbmVyYXRlIFNpbmUsXG4gKiAgICBUcmlhbmdsZSwgU3F1YXJlIGFuZCBTYXd0b290aCB3YXZlZm9ybXMuIEJhc2UgY2xhc3Mgb2ZcbiAqICAgIDxsaT48YSBocmVmPVwiIy9wNS5Ob2lzZVwiPnA1Lk5vaXNlPC9hPiBhbmQgPGEgaHJlZj1cIiMvcDUuUHVsc2VcIj5wNS5QdWxzZTwvYT4uXG4gKiAgICA8L2xpPlxuICogIDxsaT5cbiAqICAgIDxhIGhyZWY9XCIjL3A1Lk1vbm9TeW50aFwiPnA1Lk1vbm9TeW50aDwvYT4gYW5kIDxhIGhyZWY9XCIjL3A1LlBvbHlTeW50aFwiPnA1LlBvbHlTeW50aDwvYT46IFBsYXkgbXVzaWNhbCBub3Rlc1xuICogIDwvbGk+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1LkVudmVsb3BlXCI+PGI+cDUuRW52ZWxvcGU8L2I+PC9hPjogQW4gRW52ZWxvcGUgaXMgYSBzZXJpZXNcbiAqICAgIG9mIGZhZGVzIG92ZXIgdGltZS4gT2Z0ZW4gdXNlZCB0byBjb250cm9sIGFuIG9iamVjdCdzXG4gKiAgICBvdXRwdXQgZ2FpbiBsZXZlbCBhcyBhbiBcIkFEU1IgRW52ZWxvcGVcIiAoQXR0YWNrLCBEZWNheSxcbiAqICAgIFN1c3RhaW4sIFJlbGVhc2UpLiBDYW4gYWxzbyBtb2R1bGF0ZSBvdGhlciBwYXJhbWV0ZXJzLjwvbGk+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1LkRlbGF5XCI+PGI+cDUuRGVsYXk8L2I+PC9hPjogQSBkZWxheSBlZmZlY3Qgd2l0aFxuICogICAgcGFyYW1ldGVycyBmb3IgZmVlZGJhY2ssIGRlbGF5VGltZSwgYW5kIGxvd3Bhc3MgZmlsdGVyLjwvbGk+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1LkZpbHRlclwiPjxiPnA1LkZpbHRlcjwvYj48L2E+OiBGaWx0ZXIgdGhlIGZyZXF1ZW5jeSByYW5nZSBvZiBhXG4gKiAgICBzb3VuZC5cbiAqICA8L2xpPlxuICogIDxsaT48YSBocmVmPVwiIy9wNS5SZXZlcmJcIj48Yj5wNS5SZXZlcmI8L2I+PC9hPjogQWRkIHJldmVyYiB0byBhIHNvdW5kIGJ5IHNwZWNpZnlpbmdcbiAqICAgIGR1cmF0aW9uIGFuZCBkZWNheS4gPC9saT5cbiAqICA8Yj48bGk+PGEgaHJlZj1cIiMvcDUuQ29udm9sdmVyXCI+cDUuQ29udm9sdmVyPC9hPjo8L2I+IEV4dGVuZHNcbiAqICA8YSBocmVmPVwiIy9wNS5SZXZlcmJcIj5wNS5SZXZlcmI8L2E+IHRvIHNpbXVsYXRlIHRoZSBzb3VuZCBvZiByZWFsXG4gKiAgICBwaHlzaWNhbCBzcGFjZXMgdGhyb3VnaCBjb252b2x1dGlvbi48L2xpPlxuICogIDxiPjxsaT48YSBocmVmPVwiIy9wNS5Tb3VuZFJlY29yZGVyXCI+cDUuU291bmRSZWNvcmRlcjwvYT48L2I+OiBSZWNvcmQgc291bmQgZm9yIHBsYXliYWNrXG4gKiAgICAvIHNhdmUgdGhlIC53YXYgZmlsZS5cbiAqICA8Yj48bGk+PGEgaHJlZj1cIiMvcDUuU291bmRMb29wXCI+cDUuU291bmRMb29wPC9hPiwgPGEgaHJlZj1cIiMvcDUuUGhyYXNlXCI+cDUuUGhyYXNlPC9hPjwvYj4sIDxiPjxhIGhyZWY9XCIjL3A1LlBhcnRcIj5wNS5QYXJ0PC9hPjwvYj4gYW5kXG4gKiAgPGI+PGEgaHJlZj1cIiMvcDUuU2NvcmVcIj5wNS5TY29yZTwvYT48L2I+OiBDb21wb3NlIG11c2ljYWwgc2VxdWVuY2VzLlxuICogIDwvbGk+XG4gKiAgPGxpPjxhIGhyZWY9XCIjL3A1L3VzZXJTdGFydEF1ZGlvXCI+dXNlclN0YXJ0QXVkaW88L2E+OiBFbmFibGUgYXVkaW8gaW4gYVxuICogIGJyb3dzZXItIGFuZCB1c2VyLWZyaWVuZGx5IHdheS48L2E+XG4gKiAgPHA+cDUuc291bmQgaXMgb24gPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9wcm9jZXNzaW5nL3A1LmpzLXNvdW5kL1wiPkdpdEh1YjwvYT4uXG4gKiAgRG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uXG4gKiAgPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9wcm9jZXNzaW5nL3A1LmpzLXNvdW5kL2Jsb2IvbWFzdGVyL2xpYi9wNS5zb3VuZC5qc1wiPmhlcmU8L2E+LjwvcD5cbiAqXG4gKiAgQG1vZHVsZSBwNS5zb3VuZFxuICogIEBzdWJtb2R1bGUgcDUuc291bmRcbiAqICBAZm9yIHA1LnNvdW5kXG4gKiAgQG1haW5cbiAqL1xuXG4vKipcbiAqICBwNS5zb3VuZCBcbiAqICBodHRwczovL3A1anMub3JnL3JlZmVyZW5jZS8jL2xpYnJhcmllcy9wNS5zb3VuZFxuICpcbiAqICBGcm9tIHRoZSBQcm9jZXNzaW5nIEZvdW5kYXRpb24gYW5kIGNvbnRyaWJ1dG9yc1xuICogIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9jZXNzaW5nL3A1LmpzLXNvdW5kL2dyYXBocy9jb250cmlidXRvcnNcbiAqXG4gKiAgTUlUIExpY2Vuc2UgKE1JVClcbiAqICBodHRwczovL2dpdGh1Yi5jb20vcHJvY2Vzc2luZy9wNS5qcy1zb3VuZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKlxuICogIFNvbWUgb2YgdGhlIG1hbnkgYXVkaW8gbGlicmFyaWVzICYgcmVzb3VyY2VzIHRoYXQgaW5zcGlyZSBwNS5zb3VuZDpcbiAqICAgLSBUT05FLmpzIChjKSBZb3RhbSBNYW5uLiBMaWNlbnNlZCB1bmRlciBUaGUgTUlUIExpY2Vuc2UgKE1JVCkuIGh0dHBzOi8vZ2l0aHViLmNvbS9UT05Fbm9UT05FL1RvbmUuanNcbiAqICAgLSBidXp6LmpzIChjKSBKYXkgU2FsdmF0LiBMaWNlbnNlZCB1bmRlciBUaGUgTUlUIExpY2Vuc2UgKE1JVCkuIGh0dHA6Ly9idXp6LmpheXNhbHZhdC5jb20vXG4gKiAgIC0gQm9yaXMgU211cyBXZWIgQXVkaW8gQVBJIGJvb2ssIDIwMTMuIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqICAgLSB3YXZlc3VyZmVyLmpzIGh0dHBzOi8vZ2l0aHViLmNvbS9rYXRzcGF1Z2gvd2F2ZXN1cmZlci5qc1xuICogICAtIFdlYiBBdWRpbyBDb21wb25lbnRzIGJ5IEpvcmRhbiBTYW50ZWxsIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWItYXVkaW8tY29tcG9uZW50c1xuICogICAtIFdpbG0gVGhvYmVuJ3MgU291bmQgbGlicmFyeSBmb3IgUHJvY2Vzc2luZyBodHRwczovL2dpdGh1Yi5jb20vcHJvY2Vzc2luZy9wcm9jZXNzaW5nL3RyZWUvbWFzdGVyL2phdmEvbGlicmFyaWVzL3NvdW5kXG4gKlxuICogICBXZWIgQXVkaW8gQVBJOiBodHRwOi8vdzMub3JnL1RSL3dlYmF1ZGlvL1xuICovXG5cbiAoZnVuY3Rpb24obW9kdWxlcykgeyBcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuIFx0XHRtb2R1bGUubCA9IHRydWU7XG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDQwKTtcbiB9KVxuIChbXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEodCxlKXt0aGlzLmlzVW5kZWYodCl8fDE9PT10P3RoaXMuaW5wdXQ9dGhpcy5jb250ZXh0LmNyZWF0ZUdhaW4oKToxPHQmJih0aGlzLmlucHV0PW5ldyBBcnJheSh0KSksdGhpcy5pc1VuZGVmKGUpfHwxPT09ZT90aGlzLm91dHB1dD10aGlzLmNvbnRleHQuY3JlYXRlR2FpbigpOjE8ZSYmKHRoaXMub3V0cHV0PW5ldyBBcnJheSh0KSl9dmFyIGU7cmV0dXJuIGEucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUsbil7aWYodGhpcy5pc09iamVjdCh0KSluPWU7ZWxzZSBpZih0aGlzLmlzU3RyaW5nKHQpKXt2YXIgbz17fTtvW3RdPWUsdD1vfXQ6Zm9yKHZhciBpIGluIHQpe2U9dFtpXTt2YXIgcj10aGlzO2lmKC0xIT09aS5pbmRleE9mKFwiLlwiKSl7Zm9yKHZhciBzPWkuc3BsaXQoXCIuXCIpLHU9MDt1PHMubGVuZ3RoLTE7dSsrKWlmKChyPXJbc1t1XV0paW5zdGFuY2VvZiBhKXtzLnNwbGljZSgwLHUrMSk7dmFyIHA9cy5qb2luKFwiLlwiKTtyLnNldChwLGUpO2NvbnRpbnVlIHR9aT1zW3MubGVuZ3RoLTFdfXZhciBjPXJbaV07dGhpcy5pc1VuZGVmKGMpfHwoYS5TaWduYWwmJmMgaW5zdGFuY2VvZiBhLlNpZ25hbHx8YS5QYXJhbSYmYyBpbnN0YW5jZW9mIGEuUGFyYW0/Yy52YWx1ZSE9PWUmJih0aGlzLmlzVW5kZWYobik/Yy52YWx1ZT1lOmMucmFtcFRvKGUsbikpOmMgaW5zdGFuY2VvZiBBdWRpb1BhcmFtP2MudmFsdWUhPT1lJiYoYy52YWx1ZT1lKTpjIGluc3RhbmNlb2YgYT9jLnNldChlKTpjIT09ZSYmKHJbaV09ZSkpfXJldHVybiB0aGlzfSxhLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7dGhpcy5pc1VuZGVmKHQpP3Q9dGhpcy5fY29sbGVjdERlZmF1bHRzKHRoaXMuY29uc3RydWN0b3IpOnRoaXMuaXNTdHJpbmcodCkmJih0PVt0XSk7Zm9yKHZhciBlPXt9LG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXSxpPXRoaXMscj1lO2lmKC0xIT09by5pbmRleE9mKFwiLlwiKSl7Zm9yKHZhciBzPW8uc3BsaXQoXCIuXCIpLHU9MDt1PHMubGVuZ3RoLTE7dSsrKXt2YXIgcD1zW3VdO3JbcF09cltwXXx8e30scj1yW3BdLGk9aVtwXX1vPXNbcy5sZW5ndGgtMV19dmFyIGM9aVtvXTt0aGlzLmlzT2JqZWN0KHRbb10pP3Jbb109Yy5nZXQoKTphLlNpZ25hbCYmYyBpbnN0YW5jZW9mIGEuU2lnbmFsP3Jbb109Yy52YWx1ZTphLlBhcmFtJiZjIGluc3RhbmNlb2YgYS5QYXJhbT9yW29dPWMudmFsdWU6YyBpbnN0YW5jZW9mIEF1ZGlvUGFyYW0/cltvXT1jLnZhbHVlOmMgaW5zdGFuY2VvZiBhP3Jbb109Yy5nZXQoKTp0aGlzLmlzRnVuY3Rpb24oYyl8fHRoaXMuaXNVbmRlZihjKXx8KHJbb109Yyl9cmV0dXJuIGV9LGEucHJvdG90eXBlLl9jb2xsZWN0RGVmYXVsdHM9ZnVuY3Rpb24odCl7dmFyIGU9W107aWYodGhpcy5pc1VuZGVmKHQuZGVmYXVsdHMpfHwoZT1PYmplY3Qua2V5cyh0LmRlZmF1bHRzKSksIXRoaXMuaXNVbmRlZih0Ll9zdXBlcikpZm9yKHZhciBuPXRoaXMuX2NvbGxlY3REZWZhdWx0cyh0Ll9zdXBlciksbz0wO288bi5sZW5ndGg7bysrKS0xPT09ZS5pbmRleE9mKG5bb10pJiZlLnB1c2gobltvXSk7cmV0dXJuIGV9LGEucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7Zm9yKHZhciB0IGluIGEpe3ZhciBlPXRbMF0ubWF0Y2goL15bQS1aXSQvKSxuPWFbdF09PT10aGlzLmNvbnN0cnVjdG9yO2lmKHRoaXMuaXNGdW5jdGlvbihhW3RdKSYmZSYmbilyZXR1cm4gdH1yZXR1cm5cIlRvbmVcIn0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGEucHJvdG90eXBlLFwibnVtYmVyT2ZJbnB1dHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5wdXQ/dGhpcy5pc0FycmF5KHRoaXMuaW5wdXQpP3RoaXMuaW5wdXQubGVuZ3RoOjE6MH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYS5wcm90b3R5cGUsXCJudW1iZXJPZk91dHB1dHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3V0cHV0P3RoaXMuaXNBcnJheSh0aGlzLm91dHB1dCk/dGhpcy5vdXRwdXQubGVuZ3RoOjE6MH19KSxhLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNVbmRlZih0aGlzLmlucHV0KXx8KHRoaXMuaW5wdXQgaW5zdGFuY2VvZiBBdWRpb05vZGUmJnRoaXMuaW5wdXQuZGlzY29ubmVjdCgpLHRoaXMuaW5wdXQ9bnVsbCksdGhpcy5pc1VuZGVmKHRoaXMub3V0cHV0KXx8KHRoaXMub3V0cHV0IGluc3RhbmNlb2YgQXVkaW9Ob2RlJiZ0aGlzLm91dHB1dC5kaXNjb25uZWN0KCksdGhpcy5vdXRwdXQ9bnVsbCksdGhpc30sYS5wcm90b3R5cGUuY29ubmVjdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5vdXRwdXQpPyhlPXRoaXMuZGVmYXVsdEFyZyhlLDApLHRoaXMub3V0cHV0W2VdLmNvbm5lY3QodCwwLG4pKTp0aGlzLm91dHB1dC5jb25uZWN0KHQsZSxuKSx0aGlzfSxhLnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmlzQXJyYXkodGhpcy5vdXRwdXQpP3RoaXMuaXNOdW1iZXIodCk/dGhpcy5vdXRwdXRbdF0uZGlzY29ubmVjdCgpOihlPXRoaXMuZGVmYXVsdEFyZyhlLDApLHRoaXMub3V0cHV0W2VdLmRpc2Nvbm5lY3QodCwwLG4pKTp0aGlzLm91dHB1dC5kaXNjb25uZWN0LmFwcGx5KHRoaXMub3V0cHV0LGFyZ3VtZW50cyl9LGEucHJvdG90eXBlLmNvbm5lY3RTZXJpZXM9ZnVuY3Rpb24oKXtpZigxPGFyZ3VtZW50cy5sZW5ndGgpZm9yKHZhciB0PWFyZ3VtZW50c1swXSxlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG49YXJndW1lbnRzW2VdO3QuY29ubmVjdChuKSx0PW59cmV0dXJuIHRoaXN9LGEucHJvdG90eXBlLmNoYWluPWZ1bmN0aW9uKCl7aWYoMDxhcmd1bWVudHMubGVuZ3RoKWZvcih2YXIgdD10aGlzLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXt2YXIgbj1hcmd1bWVudHNbZV07dC5jb25uZWN0KG4pLHQ9bn1yZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuZmFuPWZ1bmN0aW9uKCl7aWYoMDxhcmd1bWVudHMubGVuZ3RoKWZvcih2YXIgdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0KyspdGhpcy5jb25uZWN0KGFyZ3VtZW50c1t0XSk7cmV0dXJuIHRoaXN9LEF1ZGlvTm9kZS5wcm90b3R5cGUuY2hhaW49YS5wcm90b3R5cGUuY2hhaW4sQXVkaW9Ob2RlLnByb3RvdHlwZS5mYW49YS5wcm90b3R5cGUuZmFuLGEucHJvdG90eXBlLmRlZmF1bHRBcmc9ZnVuY3Rpb24odCxlKXtpZih0aGlzLmlzT2JqZWN0KHQpJiZ0aGlzLmlzT2JqZWN0KGUpKXt2YXIgbj17fTtmb3IodmFyIG8gaW4gdCluW29dPXRoaXMuZGVmYXVsdEFyZyhlW29dLHRbb10pO2Zvcih2YXIgaSBpbiBlKW5baV09dGhpcy5kZWZhdWx0QXJnKHRbaV0sZVtpXSk7cmV0dXJuIG59cmV0dXJuIHRoaXMuaXNVbmRlZih0KT9lOnR9LGEucHJvdG90eXBlLm9wdGlvbnNPYmplY3Q9ZnVuY3Rpb24odCxlLG4pe3ZhciBvPXt9O2lmKDE9PT10Lmxlbmd0aCYmdGhpcy5pc09iamVjdCh0WzBdKSlvPXRbMF07ZWxzZSBmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKylvW2VbaV1dPXRbaV07cmV0dXJuIHRoaXMuaXNVbmRlZihuKT9vOnRoaXMuZGVmYXVsdEFyZyhvLG4pfSxhLnByb3RvdHlwZS5pc1VuZGVmPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10fSxhLnByb3RvdHlwZS5pc0Z1bmN0aW9uPWZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHR9LGEucHJvdG90eXBlLmlzTnVtYmVyPWZ1bmN0aW9uKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0fSxhLnByb3RvdHlwZS5pc09iamVjdD1mdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpJiZ0LmNvbnN0cnVjdG9yPT09T2JqZWN0fSxhLnByb3RvdHlwZS5pc0Jvb2xlYW49ZnVuY3Rpb24odCl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB0fSxhLnByb3RvdHlwZS5pc0FycmF5PWZ1bmN0aW9uKHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpfSxhLnByb3RvdHlwZS5pc1N0cmluZz1mdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH0sYS5ub09wPWZ1bmN0aW9uKCl7fSxhLnByb3RvdHlwZS5fcmVhZE9ubHk9ZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKyl0aGlzLl9yZWFkT25seSh0W2VdKTtlbHNlIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLHQse3dyaXRhYmxlOiExLGVudW1lcmFibGU6ITB9KX0sYS5wcm90b3R5cGUuX3dyaXRhYmxlPWZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpZm9yKHZhciBlPTA7ZTx0Lmxlbmd0aDtlKyspdGhpcy5fd3JpdGFibGUodFtlXSk7ZWxzZSBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyx0LHt3cml0YWJsZTohMH0pfSxhLlN0YXRlPXtTdGFydGVkOlwic3RhcnRlZFwiLFN0b3BwZWQ6XCJzdG9wcGVkXCIsUGF1c2VkOlwicGF1c2VkXCJ9LGEucHJvdG90eXBlLmVxdWFsUG93ZXJTY2FsZT1mdW5jdGlvbih0KXt2YXIgZT0uNSpNYXRoLlBJO3JldHVybiBNYXRoLnNpbih0KmUpfSxhLnByb3RvdHlwZS5kYlRvR2Fpbj1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5wb3coMix0LzYpfSxhLnByb3RvdHlwZS5nYWluVG9EYj1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5sb2codCkvTWF0aC5MTjEwKjIwfSxhLnByb3RvdHlwZS5pbnRlcnZhbFRvRnJlcXVlbmN5UmF0aW89ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucG93KDIsdC8xMil9LGEucHJvdG90eXBlLm5vdz1mdW5jdGlvbigpe3JldHVybiBhLmNvbnRleHQubm93KCl9LGEubm93PWZ1bmN0aW9uKCl7cmV0dXJuIGEuY29udGV4dC5ub3coKX0sYS5leHRlbmQ9ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7fWEucHJvdG90eXBlLmlzVW5kZWYoZSkmJihlPWEpLG4ucHJvdG90eXBlPWUucHJvdG90eXBlLHQucHJvdG90eXBlPW5ldyBuLCh0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10KS5fc3VwZXI9ZX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsXCJjb250ZXh0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiBlfSxzZXQ6ZnVuY3Rpb24odCl7ZT1hLkNvbnRleHQmJnQgaW5zdGFuY2VvZiBhLkNvbnRleHQ/dDpuZXcgYS5Db250ZXh0KHQpLGEuQ29udGV4dCYmYS5Db250ZXh0LmVtaXQoXCJpbml0XCIsZSl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGEucHJvdG90eXBlLFwiY29udGV4dFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5jb250ZXh0fX0pLGEuc2V0Q29udGV4dD1mdW5jdGlvbih0KXthLmNvbnRleHQ9dH0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGEucHJvdG90eXBlLFwiYmxvY2tUaW1lXCIse2dldDpmdW5jdGlvbigpe3JldHVybiAxMjgvdGhpcy5jb250ZXh0LnNhbXBsZVJhdGV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGEucHJvdG90eXBlLFwic2FtcGxlVGltZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMS90aGlzLmNvbnRleHQuc2FtcGxlUmF0ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcInN1cHBvcnRlZFwiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgdD13aW5kb3cuaGFzT3duUHJvcGVydHkoXCJBdWRpb0NvbnRleHRcIil8fHdpbmRvdy5oYXNPd25Qcm9wZXJ0eShcIndlYmtpdEF1ZGlvQ29udGV4dFwiKSxlPXdpbmRvdy5oYXNPd25Qcm9wZXJ0eShcIlByb21pc2VcIiksbj13aW5kb3cuaGFzT3duUHJvcGVydHkoXCJXb3JrZXJcIik7cmV0dXJuIHQmJmUmJm59fSksYS52ZXJzaW9uPVwicjEwXCIsd2luZG93LlRPTkVfU0lMRU5DRV9WRVJTSU9OX0xPR0dJTkd8fGNvbnNvbGUubG9nKFwiJWMgKiBUb25lLmpzIFwiK2EudmVyc2lvbitcIiAqIFwiLFwiYmFja2dyb3VuZDogIzAwMDsgY29sb3I6ICNmZmZcIiksYX0pLmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXywgZXhwb3J0cywgbW9kdWxlKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygyKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGkpe1widXNlIHN0cmljdFwiO3JldHVybiBpLk11bHRpcGx5PWZ1bmN0aW9uKHQpe3RoaXMuY3JlYXRlSW5zT3V0cygyLDApLHRoaXMuX211bHQ9dGhpcy5pbnB1dFswXT10aGlzLm91dHB1dD1uZXcgaS5HYWluLHRoaXMuX3BhcmFtPXRoaXMuaW5wdXRbMV09dGhpcy5vdXRwdXQuZ2Fpbix0aGlzLl9wYXJhbS52YWx1ZT10aGlzLmRlZmF1bHRBcmcodCwwKX0saS5leHRlbmQoaS5NdWx0aXBseSxpLlNpZ25hbCksaS5NdWx0aXBseS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybiBpLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fbXVsdC5kaXNwb3NlKCksdGhpcy5fbXVsdD1udWxsLHRoaXMuX3BhcmFtPW51bGwsdGhpc30saS5NdWx0aXBseX0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzshKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbX193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDYpLF9fd2VicGFja19yZXF1aXJlX18oOSksX193ZWJwYWNrX3JlcXVpcmVfXygxOCksX193ZWJwYWNrX3JlcXVpcmVfXygxMCldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihuKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gbi5TaWduYWw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnNPYmplY3QoYXJndW1lbnRzLFtcInZhbHVlXCIsXCJ1bml0c1wiXSxuLlNpZ25hbC5kZWZhdWx0cyk7dGhpcy5vdXRwdXQ9dGhpcy5fZ2Fpbj10aGlzLmNvbnRleHQuY3JlYXRlR2FpbigpLHQucGFyYW09dGhpcy5fZ2Fpbi5nYWluLG4uUGFyYW0uY2FsbCh0aGlzLHQpLHRoaXMuaW5wdXQ9dGhpcy5fcGFyYW09dGhpcy5fZ2Fpbi5nYWluLHRoaXMuY29udGV4dC5nZXRDb25zdGFudCgxKS5jaGFpbih0aGlzLl9nYWluKX0sbi5leHRlbmQobi5TaWduYWwsbi5QYXJhbSksbi5TaWduYWwuZGVmYXVsdHM9e3ZhbHVlOjAsdW5pdHM6bi5UeXBlLkRlZmF1bHQsY29udmVydDohMH0sbi5TaWduYWwucHJvdG90eXBlLmNvbm5lY3Q9bi5TaWduYWxCYXNlLnByb3RvdHlwZS5jb25uZWN0LG4uU2lnbmFsLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIG4uUGFyYW0ucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9wYXJhbT1udWxsLHRoaXMuX2dhaW4uZGlzY29ubmVjdCgpLHRoaXMuX2dhaW49bnVsbCx0aGlzfSxuLlNpZ25hbH0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuKGZ1bmN0aW9uKGdsb2JhbCkgeyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJiXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZ2V0QXVkaW9Db250ZXh0OyB9KTtcbiBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJjXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gdXNlclN0YXJ0QXVkaW87IH0pO1xuIHZhciBzdGFydGF1ZGlvY29udGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMik7XG4gdmFyIHN0YXJ0YXVkaW9jb250ZXh0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCA9IF9fd2VicGFja19yZXF1aXJlX18ubihzdGFydGF1ZGlvY29udGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTtcbiB2YXIgVG9uZV9jb3JlX1RvbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4gdmFyIFRvbmVfY29yZV9Ub25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCA9IF9fd2VicGFja19yZXF1aXJlX18ubihUb25lX2NvcmVfVG9uZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTtcbiB2YXIgVG9uZV9jb3JlX0NvbnRleHRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpO1xuIHZhciBUb25lX2NvcmVfQ29udGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm4oVG9uZV9jb3JlX0NvbnRleHRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyk7XG5nbG9iYWwuVE9ORV9TSUxFTkNFX1ZFUlNJT05fTE9HR0lORyA9IHRydWU7XG5cblxuXG52YXIgYXVkaW9jb250ZXh0ID0gbmV3IHdpbmRvdy5BdWRpb0NvbnRleHQoKTsgXG5cblRvbmVfY29yZV9Ub25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdC5hLnNldENvbnRleHQoYXVkaW9jb250ZXh0KTtcbi8qKlxuICogPHA+UmV0dXJucyB0aGUgQXVkaW8gQ29udGV4dCBmb3IgdGhpcyBza2V0Y2guIFVzZWZ1bCBmb3IgdXNlcnNcbiAqIHdobyB3b3VsZCBsaWtlIHRvIGRpZyBkZWVwZXIgaW50byB0aGUgPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9XG4gKiAnaHR0cDovL3dlYmF1ZGlvLmdpdGh1Yi5pby93ZWItYXVkaW8tYXBpLyc+V2ViIEF1ZGlvIEFQSVxuICogPC9hPi48L3A+XG4gKlxuICogPHA+U29tZSBicm93c2VycyByZXF1aXJlIHVzZXJzIHRvIHN0YXJ0QXVkaW9Db250ZXh0XG4gKiB3aXRoIGEgdXNlciBnZXN0dXJlLCBzdWNoIGFzIHRvdWNoU3RhcnRlZCBpbiB0aGUgZXhhbXBsZSBiZWxvdy48L3A+XG4gKlxuICogQGZvciBwNVxuICogQG1ldGhvZCBnZXRBdWRpb0NvbnRleHRcbiAqIEByZXR1cm4ge09iamVjdH0gICAgQXVkaW9Db250ZXh0IGZvciB0aGlzIHNrZXRjaFxuICogQGV4YW1wbGVcbiAqIDxkaXY+PGNvZGU+XG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjU1KTtcbiAqICAgIHRleHRBbGlnbihDRU5URVIpO1xuICpcbiAqICAgIGlmIChnZXRBdWRpb0NvbnRleHQoKS5zdGF0ZSAhPT0gJ3J1bm5pbmcnKSB7XG4gKiAgICAgIHRleHQoJ2NsaWNrIHRvIHN0YXJ0IGF1ZGlvJywgd2lkdGgvMiwgaGVpZ2h0LzIpO1xuICogICAgfSBlbHNlIHtcbiAqICAgICAgdGV4dCgnYXVkaW8gaXMgZW5hYmxlZCcsIHdpZHRoLzIsIGhlaWdodC8yKTtcbiAqICAgIH1cbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHRvdWNoU3RhcnRlZCgpIHtcbiAqICAgIGlmIChnZXRBdWRpb0NvbnRleHQoKS5zdGF0ZSAhPT0gJ3J1bm5pbmcnKSB7XG4gKiAgICAgIGdldEF1ZGlvQ29udGV4dCgpLnJlc3VtZSgpO1xuICogICAgfVxuICogICAgdmFyIHN5bnRoID0gbmV3IHA1Lk1vbm9TeW50aCgpO1xuICogICAgc3ludGgucGxheSgnQTQnLCAwLjUsIDAsIDAuMik7XG4gKiAgfVxuICpcbiAqIDwvZGl2PjwvY29kZT5cbiAqL1xuXG5mdW5jdGlvbiBnZXRBdWRpb0NvbnRleHQoKSB7XG4gIHJldHVybiBhdWRpb2NvbnRleHQ7XG59XG4vKipcbiAqICA8cD5JdCBpcyBub3Qgb25seSBhIGdvb2QgcHJhY3RpY2UgdG8gZ2l2ZSB1c2VycyBjb250cm9sIG92ZXIgc3RhcnRpbmdcbiAqICBhdWRpby4gVGhpcyBwb2xpY3kgaXMgZW5mb3JjZWQgYnkgbWFueSB3ZWIgYnJvd3NlcnMsIGluY2x1ZGluZyBpT1MgYW5kXG4gKiAgPGEgaHJlZj1cImh0dHBzOi8vZ29vLmdsLzdLN1dMdVwiIHRpdGxlPVwiR29vZ2xlIENocm9tZSdzIGF1dG9wbGF5XG4gKiAgcG9saWN5XCI+R29vZ2xlIENocm9tZTwvYT4sIHdoaWNoIGNyZWF0ZSB0aGUgV2ViIEF1ZGlvIEFQSSdzXG4gKiAgPGEgaHJlZj1cImh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9BdWRpb0NvbnRleHRcIlxuICogIHRpdGxlPVwiQXVkaW8gQ29udGV4dCBAIE1ETlwiPkF1ZGlvIENvbnRleHQ8L2E+XG4gKiAgaW4gYSBzdXNwZW5kZWQgc3RhdGUuPC9wPlxuICpcbiAqICA8cD5JbiB0aGVzZSBicm93c2VyLXNwZWNpZmljIHBvbGljaWVzLCBzb3VuZCB3aWxsIG5vdCBwbGF5IHVudGlsIGEgdXNlclxuICogIGludGVyYWN0aW9uIGV2ZW50IChpLmUuIDxjb2RlPm1vdXNlUHJlc3NlZCgpPC9jb2RlPikgZXhwbGljaXRseSByZXN1bWVzXG4gKiAgdGhlIEF1ZGlvQ29udGV4dCwgb3Igc3RhcnRzIGFuIGF1ZGlvIG5vZGUuIFRoaXMgY2FuIGJlIGFjY29tcGxpc2hlZCBieVxuICogIGNhbGxpbmcgPGNvZGU+c3RhcnQoKTwvY29kZT4gb24gYSA8Y29kZT5wNS5Pc2NpbGxhdG9yPC9jb2RlPixcbiAqICA8Y29kZT4gcGxheSgpPC9jb2RlPiBvbiBhIDxjb2RlPnA1LlNvdW5kRmlsZTwvY29kZT4sIG9yIHNpbXBseVxuICogIDxjb2RlPnVzZXJTdGFydEF1ZGlvKCk8L2NvZGU+LjwvcD5cbiAqXG4gKiAgPHA+PGNvZGU+dXNlclN0YXJ0QXVkaW8oKTwvY29kZT4gc3RhcnRzIHRoZSBBdWRpb0NvbnRleHQgb24gYSB1c2VyXG4gKiAgZ2VzdHVyZS4gVGhlIGRlZmF1bHQgYmVoYXZpb3Igd2lsbCBlbmFibGUgYXVkaW8gb24gYW55XG4gKiAgbW91c2VVcCBvciB0b3VjaEVuZCBldmVudC4gSXQgY2FuIGFsc28gYmUgcGxhY2VkIGluIGEgc3BlY2lmaWNcbiAqICBpbnRlcmFjdGlvbiBmdW5jdGlvbiwgc3VjaCBhcyA8Y29kZT5tb3VzZVByZXNzZWQoKTwvY29kZT4gYXMgaW4gdGhlXG4gKiAgZXhhbXBsZSBiZWxvdy4gVGhpcyBtZXRob2QgdXRpbGl6ZXNcbiAqICA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3RhbWJpZW4vU3RhcnRBdWRpb0NvbnRleHRcIj5TdGFydEF1ZGlvQ29udGV4dFxuICogIDwvYT4sIGEgbGlicmFyeSBieSBZb3RhbSBNYW5uIChNSVQgTGljZW5jZSwgMjAxNikuPC9wPlxuICogIEBwYXJhbSAge0VsZW1lbnR8QXJyYXl9ICAgW2VsZW1lbnQocyldIFRoaXMgYXJndW1lbnQgY2FuIGJlIGFuIEVsZW1lbnQsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VsZWN0b3IgU3RyaW5nLCBOb2RlTGlzdCwgcDUuRWxlbWVudCxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkgRWxlbWVudCwgb3IgYW4gQXJyYXkgb2YgYW55IG9mIHRob3NlLlxuICogIEBwYXJhbSAge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIENhbGxiYWNrIHRvIGludm9rZSB3aGVuIHRoZSBBdWRpb0NvbnRleHRcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXMgc3RhcnRlZFxuICogIEByZXR1cm4ge1Byb21pc2V9ICAgICAgICAgICAgUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBBdWRpb0NvbnRleHQgc3RhdGUgaXMgJ3J1bm5pbmcnXG4gKiAgQG1ldGhvZCB1c2VyU3RhcnRBdWRpb1xuICogIEBmb3IgcDVcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICAvLyBtaW1pY3MgdGhlIGF1dG9wbGF5IHBvbGljeVxuICogICAgZ2V0QXVkaW9Db250ZXh0KCkuc3VzcGVuZCgpO1xuICpcbiAqICAgIGxldCBteVN5bnRoID0gbmV3IHA1Lk1vbm9TeW50aCgpO1xuICpcbiAqICAgIC8vIFRoaXMgd29uJ3QgcGxheSB1bnRpbCB0aGUgY29udGV4dCBoYXMgcmVzdW1lZFxuICogICAgbXlTeW50aC5wbGF5KCdBNicpO1xuICogIH1cbiAqICBmdW5jdGlvbiBkcmF3KCkge1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dEFsaWduKENFTlRFUiwgQ0VOVEVSKTtcbiAqICAgIHRleHQoZ2V0QXVkaW9Db250ZXh0KCkuc3RhdGUsIHdpZHRoLzIsIGhlaWdodC8yKTtcbiAqICB9XG4gKiAgZnVuY3Rpb24gbW91c2VQcmVzc2VkKCkge1xuICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cbmZ1bmN0aW9uIHVzZXJTdGFydEF1ZGlvKGVsZW1lbnRzLCBjYWxsYmFjaykge1xuICB2YXIgZWx0ID0gZWxlbWVudHM7XG5cbiAgaWYgKGVsZW1lbnRzIGluc3RhbmNlb2YgcDUuRWxlbWVudCkge1xuICAgIGVsdCA9IGVsZW1lbnRzLmVsdDtcbiAgfSBlbHNlIGlmIChlbGVtZW50cyBpbnN0YW5jZW9mIEFycmF5ICYmIGVsZW1lbnRzWzBdIGluc3RhbmNlb2YgcDUuRWxlbWVudCkge1xuICAgIGVsdCA9IGVsZW1lbnRzLm1hcChmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIGUuZWx0O1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHN0YXJ0YXVkaW9jb250ZXh0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCgpKGF1ZGlvY29udGV4dCwgZWx0LCBjYWxsYmFjayk7XG59XG4gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoYXVkaW9jb250ZXh0KTtcbn0uY2FsbCh0aGlzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDI2KSkpXG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzshKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbX193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9fd2VicGFja19yZXF1aXJlX18oMTApXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24oaSl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGkuQWRkPWZ1bmN0aW9uKHQpe3RoaXMuY3JlYXRlSW5zT3V0cygyLDApLHRoaXMuX3N1bT10aGlzLmlucHV0WzBdPXRoaXMuaW5wdXRbMV09dGhpcy5vdXRwdXQ9bmV3IGkuR2Fpbix0aGlzLl9wYXJhbT10aGlzLmlucHV0WzFdPW5ldyBpLlNpZ25hbCh0KSx0aGlzLl9wYXJhbS5jb25uZWN0KHRoaXMuX3N1bSl9LGkuZXh0ZW5kKGkuQWRkLGkuU2lnbmFsKSxpLkFkZC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybiBpLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fc3VtLmRpc3Bvc2UoKSx0aGlzLl9zdW09bnVsbCx0aGlzLl9wYXJhbS5kaXNwb3NlKCksdGhpcy5fcGFyYW09bnVsbCx0aGlzfSxpLkFkZH0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICByZWNvcmRlclByb2Nlc3NvcjogJ3JlY29yZGVyLXByb2Nlc3NvcicsXG4gIHNvdW5kRmlsZVByb2Nlc3NvcjogJ3NvdW5kLWZpbGUtcHJvY2Vzc29yJyxcbiAgYW1wbGl0dWRlUHJvY2Vzc29yOiAnYW1wbGl0dWRlLXByb2Nlc3Nvcidcbn07XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzshKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbX193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO3JldHVybiBlLldhdmVTaGFwZXI9ZnVuY3Rpb24oZSx0KXt0aGlzLl9zaGFwZXI9dGhpcy5pbnB1dD10aGlzLm91dHB1dD10aGlzLmNvbnRleHQuY3JlYXRlV2F2ZVNoYXBlcigpLHRoaXMuX2N1cnZlPW51bGwsQXJyYXkuaXNBcnJheShlKT90aGlzLmN1cnZlPWU6aXNGaW5pdGUoZSl8fHRoaXMuaXNVbmRlZihlKT90aGlzLl9jdXJ2ZT1uZXcgRmxvYXQzMkFycmF5KHRoaXMuZGVmYXVsdEFyZyhlLDEwMjQpKTp0aGlzLmlzRnVuY3Rpb24oZSkmJih0aGlzLl9jdXJ2ZT1uZXcgRmxvYXQzMkFycmF5KHRoaXMuZGVmYXVsdEFyZyh0LDEwMjQpKSx0aGlzLnNldE1hcChlKSl9LGUuZXh0ZW5kKGUuV2F2ZVNoYXBlcixlLlNpZ25hbEJhc2UpLGUuV2F2ZVNoYXBlci5wcm90b3R5cGUuc2V0TWFwPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLHI9dGhpcy5fY3VydmUubGVuZ3RoO3Q8cjt0Kyspe3ZhciBzPXQvKHItMSkqMi0xO3RoaXMuX2N1cnZlW3RdPWUocyx0KX1yZXR1cm4gdGhpcy5fc2hhcGVyLmN1cnZlPXRoaXMuX2N1cnZlLHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLldhdmVTaGFwZXIucHJvdG90eXBlLFwiY3VydmVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NoYXBlci5jdXJ2ZX0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2N1cnZlPW5ldyBGbG9hdDMyQXJyYXkoZSksdGhpcy5fc2hhcGVyLmN1cnZlPXRoaXMuX2N1cnZlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLldhdmVTaGFwZXIucHJvdG90eXBlLFwib3ZlcnNhbXBsZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hhcGVyLm92ZXJzYW1wbGV9LHNldDpmdW5jdGlvbihlKXtpZigtMT09PVtcIm5vbmVcIixcIjJ4XCIsXCI0eFwiXS5pbmRleE9mKGUpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiVG9uZS5XYXZlU2hhcGVyOiBvdmVyc2FtcGxpbmcgbXVzdCBiZSBlaXRoZXIgJ25vbmUnLCAnMngnLCBvciAnNHgnXCIpO3RoaXMuX3NoYXBlci5vdmVyc2FtcGxlPWV9fSksZS5XYXZlU2hhcGVyLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIGUucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9zaGFwZXIuZGlzY29ubmVjdCgpLHRoaXMuX3NoYXBlcj1udWxsLHRoaXMuX2N1cnZlPW51bGwsdGhpc30sZS5XYXZlU2hhcGVyfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oMiksX193ZWJwYWNrX3JlcXVpcmVfXygxOSldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gby5UaW1lbGluZVNpZ25hbD1mdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9uc09iamVjdChhcmd1bWVudHMsW1widmFsdWVcIixcInVuaXRzXCJdLG8uU2lnbmFsLmRlZmF1bHRzKTt0aGlzLl9ldmVudHM9bmV3IG8uVGltZWxpbmUoMTApLG8uU2lnbmFsLmFwcGx5KHRoaXMsZSksZS5wYXJhbT10aGlzLl9wYXJhbSxvLlBhcmFtLmNhbGwodGhpcyxlKSx0aGlzLl9pbml0aWFsPXRoaXMuX2Zyb21Vbml0cyh0aGlzLl9wYXJhbS52YWx1ZSl9LG8uZXh0ZW5kKG8uVGltZWxpbmVTaWduYWwsby5QYXJhbSksby5UaW1lbGluZVNpZ25hbC5UeXBlPXtMaW5lYXI6XCJsaW5lYXJcIixFeHBvbmVudGlhbDpcImV4cG9uZW50aWFsXCIsVGFyZ2V0OlwidGFyZ2V0XCIsQ3VydmU6XCJjdXJ2ZVwiLFNldDpcInNldFwifSxPYmplY3QuZGVmaW5lUHJvcGVydHkoby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUsXCJ2YWx1ZVwiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm5vdygpLHQ9dGhpcy5nZXRWYWx1ZUF0VGltZShlKTtyZXR1cm4gdGhpcy5fdG9Vbml0cyh0KX0sc2V0OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2Zyb21Vbml0cyhlKTt0aGlzLl9pbml0aWFsPXQsdGhpcy5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMoKSx0aGlzLl9wYXJhbS52YWx1ZT10fX0pLG8uVGltZWxpbmVTaWduYWwucHJvdG90eXBlLnNldFZhbHVlQXRUaW1lPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9dGhpcy5fZnJvbVVuaXRzKGUpLHQ9dGhpcy50b1NlY29uZHModCksdGhpcy5fZXZlbnRzLmFkZCh7dHlwZTpvLlRpbWVsaW5lU2lnbmFsLlR5cGUuU2V0LHZhbHVlOmUsdGltZTp0fSksdGhpcy5fcGFyYW0uc2V0VmFsdWVBdFRpbWUoZSx0KSx0aGlzfSxvLlRpbWVsaW5lU2lnbmFsLnByb3RvdHlwZS5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZT1mdW5jdGlvbihlLHQpe3JldHVybiBlPXRoaXMuX2Zyb21Vbml0cyhlKSx0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX2V2ZW50cy5hZGQoe3R5cGU6by5UaW1lbGluZVNpZ25hbC5UeXBlLkxpbmVhcix2YWx1ZTplLHRpbWU6dH0pLHRoaXMuX3BhcmFtLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKGUsdCksdGhpc30sby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZT1mdW5jdGlvbihlLHQpe3Q9dGhpcy50b1NlY29uZHModCk7dmFyIGk9dGhpcy5fc2VhcmNoQmVmb3JlKHQpO2kmJjA9PT1pLnZhbHVlJiZ0aGlzLnNldFZhbHVlQXRUaW1lKHRoaXMuX21pbk91dHB1dCxpLnRpbWUpLGU9dGhpcy5fZnJvbVVuaXRzKGUpO3ZhciBuPU1hdGgubWF4KGUsdGhpcy5fbWluT3V0cHV0KTtyZXR1cm4gdGhpcy5fZXZlbnRzLmFkZCh7dHlwZTpvLlRpbWVsaW5lU2lnbmFsLlR5cGUuRXhwb25lbnRpYWwsdmFsdWU6bix0aW1lOnR9KSxlPHRoaXMuX21pbk91dHB1dD8odGhpcy5fcGFyYW0uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLl9taW5PdXRwdXQsdC10aGlzLnNhbXBsZVRpbWUpLHRoaXMuc2V0VmFsdWVBdFRpbWUoMCx0KSk6dGhpcy5fcGFyYW0uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZShlLHQpLHRoaXN9LG8uVGltZWxpbmVTaWduYWwucHJvdG90eXBlLnNldFRhcmdldEF0VGltZT1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGU9dGhpcy5fZnJvbVVuaXRzKGUpLGU9TWF0aC5tYXgodGhpcy5fbWluT3V0cHV0LGUpLGk9TWF0aC5tYXgodGhpcy5fbWluT3V0cHV0LGkpLHQ9dGhpcy50b1NlY29uZHModCksdGhpcy5fZXZlbnRzLmFkZCh7dHlwZTpvLlRpbWVsaW5lU2lnbmFsLlR5cGUuVGFyZ2V0LHZhbHVlOmUsdGltZTp0LGNvbnN0YW50Oml9KSx0aGlzLl9wYXJhbS5zZXRUYXJnZXRBdFRpbWUoZSx0LGkpLHRoaXN9LG8uVGltZWxpbmVTaWduYWwucHJvdG90eXBlLnNldFZhbHVlQ3VydmVBdFRpbWU9ZnVuY3Rpb24oZSx0LGksbil7bj10aGlzLmRlZmF1bHRBcmcobiwxKTtmb3IodmFyIGE9bmV3IEFycmF5KGUubGVuZ3RoKSxsPTA7bDxhLmxlbmd0aDtsKyspYVtsXT10aGlzLl9mcm9tVW5pdHMoZVtsXSkqbjt0PXRoaXMudG9TZWNvbmRzKHQpLGk9dGhpcy50b1NlY29uZHMoaSksdGhpcy5fZXZlbnRzLmFkZCh7dHlwZTpvLlRpbWVsaW5lU2lnbmFsLlR5cGUuQ3VydmUsdmFsdWU6YSx0aW1lOnQsZHVyYXRpb246aX0pLHRoaXMuX3BhcmFtLnNldFZhbHVlQXRUaW1lKGFbMF0sdCk7Zm9yKHZhciBzPTE7czxhLmxlbmd0aDtzKyspe3ZhciByPXQrcy8oYS5sZW5ndGgtMSkqaTt0aGlzLl9wYXJhbS5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShhW3NdLHIpfXJldHVybiB0aGlzfSxvLlRpbWVsaW5lU2lnbmFsLnByb3RvdHlwZS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9dGhpcy50b1NlY29uZHMoZSksdGhpcy5fZXZlbnRzLmNhbmNlbChlKSx0aGlzLl9wYXJhbS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMoZSksdGhpc30sby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuc2V0UmFtcFBvaW50PWZ1bmN0aW9uKGUpe2U9dGhpcy50b1NlY29uZHMoZSk7dmFyIHQ9dGhpcy5fdG9Vbml0cyh0aGlzLmdldFZhbHVlQXRUaW1lKGUpKSxpPXRoaXMuX3NlYXJjaEJlZm9yZShlKTtpZihpJiZpLnRpbWU9PT1lKXRoaXMuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKGUrdGhpcy5zYW1wbGVUaW1lKTtlbHNlIGlmKGkmJmkudHlwZT09PW8uVGltZWxpbmVTaWduYWwuVHlwZS5DdXJ2ZSYmaS50aW1lK2kuZHVyYXRpb24+ZSl0aGlzLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhlKSx0aGlzLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHQsZSk7ZWxzZXt2YXIgbj10aGlzLl9zZWFyY2hBZnRlcihlKTtuJiYodGhpcy5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMoZSksbi50eXBlPT09by5UaW1lbGluZVNpZ25hbC5UeXBlLkxpbmVhcj90aGlzLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHQsZSk6bi50eXBlPT09by5UaW1lbGluZVNpZ25hbC5UeXBlLkV4cG9uZW50aWFsJiZ0aGlzLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodCxlKSksdGhpcy5zZXRWYWx1ZUF0VGltZSh0LGUpfXJldHVybiB0aGlzfSxvLlRpbWVsaW5lU2lnbmFsLnByb3RvdHlwZS5saW5lYXJSYW1wVG9WYWx1ZUJldHdlZW49ZnVuY3Rpb24oZSx0LGkpe3JldHVybiB0aGlzLnNldFJhbXBQb2ludCh0KSx0aGlzLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKGUsaSksdGhpc30sby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUJldHdlZW49ZnVuY3Rpb24oZSx0LGkpe3JldHVybiB0aGlzLnNldFJhbXBQb2ludCh0KSx0aGlzLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoZSxpKSx0aGlzfSxvLlRpbWVsaW5lU2lnbmFsLnByb3RvdHlwZS5fc2VhcmNoQmVmb3JlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9ldmVudHMuZ2V0KGUpfSxvLlRpbWVsaW5lU2lnbmFsLnByb3RvdHlwZS5fc2VhcmNoQWZ0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2V2ZW50cy5nZXRBZnRlcihlKX0sby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuZ2V0VmFsdWVBdFRpbWU9ZnVuY3Rpb24oZSl7ZT10aGlzLnRvU2Vjb25kcyhlKTt2YXIgdD10aGlzLl9zZWFyY2hBZnRlcihlKSxpPXRoaXMuX3NlYXJjaEJlZm9yZShlKSxuPXRoaXMuX2luaXRpYWw7aWYobnVsbD09PWkpbj10aGlzLl9pbml0aWFsO2Vsc2UgaWYoaS50eXBlPT09by5UaW1lbGluZVNpZ25hbC5UeXBlLlRhcmdldCl7dmFyIGEsbD10aGlzLl9ldmVudHMuZ2V0QmVmb3JlKGkudGltZSk7YT1udWxsPT09bD90aGlzLl9pbml0aWFsOmwudmFsdWUsbj10aGlzLl9leHBvbmVudGlhbEFwcHJvYWNoKGkudGltZSxhLGkudmFsdWUsaS5jb25zdGFudCxlKX1lbHNlIG49aS50eXBlPT09by5UaW1lbGluZVNpZ25hbC5UeXBlLkN1cnZlP3RoaXMuX2N1cnZlSW50ZXJwb2xhdGUoaS50aW1lLGkudmFsdWUsaS5kdXJhdGlvbixlKTpudWxsPT09dD9pLnZhbHVlOnQudHlwZT09PW8uVGltZWxpbmVTaWduYWwuVHlwZS5MaW5lYXI/dGhpcy5fbGluZWFySW50ZXJwb2xhdGUoaS50aW1lLGkudmFsdWUsdC50aW1lLHQudmFsdWUsZSk6dC50eXBlPT09by5UaW1lbGluZVNpZ25hbC5UeXBlLkV4cG9uZW50aWFsP3RoaXMuX2V4cG9uZW50aWFsSW50ZXJwb2xhdGUoaS50aW1lLGkudmFsdWUsdC50aW1lLHQudmFsdWUsZSk6aS52YWx1ZTtyZXR1cm4gbn0sby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuY29ubmVjdD1vLlNpZ25hbEJhc2UucHJvdG90eXBlLmNvbm5lY3Qsby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuX2V4cG9uZW50aWFsQXBwcm9hY2g9ZnVuY3Rpb24oZSx0LGksbixhKXtyZXR1cm4gaSsodC1pKSpNYXRoLmV4cCgtKGEtZSkvbil9LG8uVGltZWxpbmVTaWduYWwucHJvdG90eXBlLl9saW5lYXJJbnRlcnBvbGF0ZT1mdW5jdGlvbihlLHQsaSxuLGEpe3JldHVybiB0KyhhLWUpLyhpLWUpKihuLXQpfSxvLlRpbWVsaW5lU2lnbmFsLnByb3RvdHlwZS5fZXhwb25lbnRpYWxJbnRlcnBvbGF0ZT1mdW5jdGlvbihlLHQsaSxuLGEpe3JldHVybih0PU1hdGgubWF4KHRoaXMuX21pbk91dHB1dCx0KSkqTWF0aC5wb3cobi90LChhLWUpLyhpLWUpKX0sby5UaW1lbGluZVNpZ25hbC5wcm90b3R5cGUuX2N1cnZlSW50ZXJwb2xhdGU9ZnVuY3Rpb24oZSx0LGksbil7dmFyIGE9dC5sZW5ndGg7aWYoZStpPD1uKXJldHVybiB0W2EtMV07aWYobjw9ZSlyZXR1cm4gdFswXTt2YXIgbD0obi1lKS9pLHM9TWF0aC5mbG9vcigoYS0xKSpsKSxyPU1hdGguY2VpbCgoYS0xKSpsKSxvPXRbc10scD10W3JdO3JldHVybiByPT09cz9vOnRoaXMuX2xpbmVhckludGVycG9sYXRlKHMsbyxyLHAsbCooYS0xKSl9LG8uVGltZWxpbmVTaWduYWwucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtvLlNpZ25hbC5wcm90b3R5cGUuZGlzcG9zZS5jYWxsKHRoaXMpLG8uUGFyYW0ucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9ldmVudHMuZGlzcG9zZSgpLHRoaXMuX2V2ZW50cz1udWxsfSxvLlRpbWVsaW5lU2lnbmFsfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oNCksX193ZWJwYWNrX3JlcXVpcmVfXygxKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDIpXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24oaSl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGkuU2NhbGU9ZnVuY3Rpb24odCxlKXt0aGlzLl9vdXRwdXRNaW49dGhpcy5kZWZhdWx0QXJnKHQsMCksdGhpcy5fb3V0cHV0TWF4PXRoaXMuZGVmYXVsdEFyZyhlLDEpLHRoaXMuX3NjYWxlPXRoaXMuaW5wdXQ9bmV3IGkuTXVsdGlwbHkoMSksdGhpcy5fYWRkPXRoaXMub3V0cHV0PW5ldyBpLkFkZCgwKSx0aGlzLl9zY2FsZS5jb25uZWN0KHRoaXMuX2FkZCksdGhpcy5fc2V0UmFuZ2UoKX0saS5leHRlbmQoaS5TY2FsZSxpLlNpZ25hbEJhc2UpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLlNjYWxlLnByb3RvdHlwZSxcIm1pblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0cHV0TWlufSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fb3V0cHV0TWluPXQsdGhpcy5fc2V0UmFuZ2UoKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5TY2FsZS5wcm90b3R5cGUsXCJtYXhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX291dHB1dE1heH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX291dHB1dE1heD10LHRoaXMuX3NldFJhbmdlKCl9fSksaS5TY2FsZS5wcm90b3R5cGUuX3NldFJhbmdlPWZ1bmN0aW9uKCl7dGhpcy5fYWRkLnZhbHVlPXRoaXMuX291dHB1dE1pbix0aGlzLl9zY2FsZS52YWx1ZT10aGlzLl9vdXRwdXRNYXgtdGhpcy5fb3V0cHV0TWlufSxpLlNjYWxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIGkucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9hZGQuZGlzcG9zZSgpLHRoaXMuX2FkZD1udWxsLHRoaXMuX3NjYWxlLmRpc3Bvc2UoKSx0aGlzLl9zY2FsZT1udWxsLHRoaXN9LGkuU2NhbGV9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygxNiksX193ZWJwYWNrX3JlcXVpcmVfXygzMCksX193ZWJwYWNrX3JlcXVpcmVfXygzMSksX193ZWJwYWNrX3JlcXVpcmVfXygxMildLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbih0KXtyZXR1cm4gdC5UeXBlPXtEZWZhdWx0OlwibnVtYmVyXCIsVGltZTpcInRpbWVcIixGcmVxdWVuY3k6XCJmcmVxdWVuY3lcIixUcmFuc3BvcnRUaW1lOlwidHJhbnNwb3J0VGltZVwiLFRpY2tzOlwidGlja3NcIixOb3JtYWxSYW5nZTpcIm5vcm1hbFJhbmdlXCIsQXVkaW9SYW5nZTpcImF1ZGlvUmFuZ2VcIixEZWNpYmVsczpcImRiXCIsSW50ZXJ2YWw6XCJpbnRlcnZhbFwiLEJQTTpcImJwbVwiLFBvc2l0aXZlOlwicG9zaXRpdmVcIixDZW50czpcImNlbnRzXCIsRGVncmVlczpcImRlZ3JlZXNcIixNSURJOlwibWlkaVwiLEJhcnNCZWF0c1NpeHRlZW50aHM6XCJiYXJzQmVhdHNTaXh0ZWVudGhzXCIsU2FtcGxlczpcInNhbXBsZXNcIixIZXJ0ejpcImhlcnR6XCIsTm90ZTpcIm5vdGVcIixNaWxsaXNlY29uZHM6XCJtaWxsaXNlY29uZHNcIixTZWNvbmRzOlwic2Vjb25kc1wiLE5vdGF0aW9uOlwibm90YXRpb25cIn0sdC5wcm90b3R5cGUudG9TZWNvbmRzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmlzTnVtYmVyKGUpP2U6dGhpcy5pc1VuZGVmKGUpP3RoaXMubm93KCk6dGhpcy5pc1N0cmluZyhlKT9uZXcgdC5UaW1lKGUpLnRvU2Vjb25kcygpOmUgaW5zdGFuY2VvZiB0LlRpbWVCYXNlP2UudG9TZWNvbmRzKCk6dm9pZCAwfSx0LnByb3RvdHlwZS50b0ZyZXF1ZW5jeT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pc051bWJlcihlKT9lOnRoaXMuaXNTdHJpbmcoZSl8fHRoaXMuaXNVbmRlZihlKT9uZXcgdC5GcmVxdWVuY3koZSkudmFsdWVPZigpOmUgaW5zdGFuY2VvZiB0LlRpbWVCYXNlP2UudG9GcmVxdWVuY3koKTp2b2lkIDB9LHQucHJvdG90eXBlLnRvVGlja3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuaXNOdW1iZXIoZSl8fHRoaXMuaXNTdHJpbmcoZSk/bmV3IHQuVHJhbnNwb3J0VGltZShlKS50b1RpY2tzKCk6dGhpcy5pc1VuZGVmKGUpP3QuVHJhbnNwb3J0LnRpY2tzOmUgaW5zdGFuY2VvZiB0LlRpbWVCYXNlP2UudG9UaWNrcygpOnZvaWQgMH0sdH0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzshKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbX193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KSxfX3dlYnBhY2tfcmVxdWlyZV9fKDkpXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24oaSl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIHdpbmRvdy5HYWluTm9kZSYmIUF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlR2FpbiYmKEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlR2Fpbj1BdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZUdhaW5Ob2RlKSxpLkdhaW49ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnNPYmplY3QoYXJndW1lbnRzLFtcImdhaW5cIixcInVuaXRzXCJdLGkuR2Fpbi5kZWZhdWx0cyk7dGhpcy5pbnB1dD10aGlzLm91dHB1dD10aGlzLl9nYWluTm9kZT10aGlzLmNvbnRleHQuY3JlYXRlR2FpbigpLHRoaXMuZ2Fpbj1uZXcgaS5QYXJhbSh7cGFyYW06dGhpcy5fZ2Fpbk5vZGUuZ2Fpbix1bml0czp0LnVuaXRzLHZhbHVlOnQuZ2Fpbixjb252ZXJ0OnQuY29udmVydH0pLHRoaXMuX3JlYWRPbmx5KFwiZ2FpblwiKX0saS5leHRlbmQoaS5HYWluKSxpLkdhaW4uZGVmYXVsdHM9e2dhaW46MSxjb252ZXJ0OiEwfSxpLkdhaW4ucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtpLlBhcmFtLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fZ2Fpbk5vZGUuZGlzY29ubmVjdCgpLHRoaXMuX2dhaW5Ob2RlPW51bGwsdGhpcy5fd3JpdGFibGUoXCJnYWluXCIpLHRoaXMuZ2Fpbi5kaXNwb3NlKCksdGhpcy5nYWluPW51bGx9LGkucHJvdG90eXBlLmNyZWF0ZUluc091dHM9ZnVuY3Rpb24odCxuKXsxPT09dD90aGlzLmlucHV0PW5ldyBpLkdhaW46MTx0JiYodGhpcy5pbnB1dD1uZXcgQXJyYXkodCkpLDE9PT1uP3RoaXMub3V0cHV0PW5ldyBpLkdhaW46MTxuJiYodGhpcy5vdXRwdXQ9bmV3IEFycmF5KHQpKX0saS5HYWlufSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oNyksX193ZWJwYWNrX3JlcXVpcmVfXygzOSksX193ZWJwYWNrX3JlcXVpcmVfXygxNCksX193ZWJwYWNrX3JlcXVpcmVfXygxMildLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gby5DbG9jaz1mdW5jdGlvbigpe28uRW1pdHRlci5jYWxsKHRoaXMpO3ZhciB0PXRoaXMub3B0aW9uc09iamVjdChhcmd1bWVudHMsW1wiY2FsbGJhY2tcIixcImZyZXF1ZW5jeVwiXSxvLkNsb2NrLmRlZmF1bHRzKTt0aGlzLmNhbGxiYWNrPXQuY2FsbGJhY2ssdGhpcy5fbmV4dFRpY2s9MCx0aGlzLl9sYXN0U3RhdGU9by5TdGF0ZS5TdG9wcGVkLHRoaXMuZnJlcXVlbmN5PW5ldyBvLlRpbWVsaW5lU2lnbmFsKHQuZnJlcXVlbmN5LG8uVHlwZS5GcmVxdWVuY3kpLHRoaXMuX3JlYWRPbmx5KFwiZnJlcXVlbmN5XCIpLHRoaXMudGlja3M9MCx0aGlzLl9zdGF0ZT1uZXcgby5UaW1lbGluZVN0YXRlKG8uU3RhdGUuU3RvcHBlZCksdGhpcy5fYm91bmRMb29wPXRoaXMuX2xvb3AuYmluZCh0aGlzKSx0aGlzLmNvbnRleHQub24oXCJ0aWNrXCIsdGhpcy5fYm91bmRMb29wKX0sby5leHRlbmQoby5DbG9jayxvLkVtaXR0ZXIpLG8uQ2xvY2suZGVmYXVsdHM9e2NhbGxiYWNrOm8ubm9PcCxmcmVxdWVuY3k6MSxsb29rQWhlYWQ6XCJhdXRvXCJ9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLkNsb2NrLnByb3RvdHlwZSxcInN0YXRlXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGF0ZS5nZXRWYWx1ZUF0VGltZSh0aGlzLm5vdygpKX19KSxvLkNsb2NrLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbih0LGUpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKHQpIT09by5TdGF0ZS5TdGFydGVkJiZ0aGlzLl9zdGF0ZS5hZGQoe3N0YXRlOm8uU3RhdGUuU3RhcnRlZCx0aW1lOnQsb2Zmc2V0OmV9KSx0aGlzfSxvLkNsb2NrLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKHQpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX3N0YXRlLmNhbmNlbCh0KSx0aGlzLl9zdGF0ZS5zZXRTdGF0ZUF0VGltZShvLlN0YXRlLlN0b3BwZWQsdCksdGhpc30sby5DbG9jay5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dGhpcy50b1NlY29uZHModCksdGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUodCk9PT1vLlN0YXRlLlN0YXJ0ZWQmJnRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKG8uU3RhdGUuUGF1c2VkLHQpLHRoaXN9LG8uQ2xvY2sucHJvdG90eXBlLl9sb29wPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMubm93KCkrdGhpcy5jb250ZXh0Lmxvb2tBaGVhZCt0aGlzLmNvbnRleHQudXBkYXRlSW50ZXJ2YWwrMip0aGlzLmNvbnRleHQubGFnO3Q+dGhpcy5fbmV4dFRpY2smJnRoaXMuX3N0YXRlOyl7dmFyIGU9dGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUodGhpcy5fbmV4dFRpY2spO2lmKGUhPT10aGlzLl9sYXN0U3RhdGUpe3RoaXMuX2xhc3RTdGF0ZT1lO3ZhciBpPXRoaXMuX3N0YXRlLmdldCh0aGlzLl9uZXh0VGljayk7ZT09PW8uU3RhdGUuU3RhcnRlZD8odGhpcy5fbmV4dFRpY2s9aS50aW1lLHRoaXMuaXNVbmRlZihpLm9mZnNldCl8fCh0aGlzLnRpY2tzPWkub2Zmc2V0KSx0aGlzLmVtaXQoXCJzdGFydFwiLGkudGltZSx0aGlzLnRpY2tzKSk6ZT09PW8uU3RhdGUuU3RvcHBlZD8odGhpcy50aWNrcz0wLHRoaXMuZW1pdChcInN0b3BcIixpLnRpbWUpKTplPT09by5TdGF0ZS5QYXVzZWQmJnRoaXMuZW1pdChcInBhdXNlXCIsaS50aW1lKX12YXIgcz10aGlzLl9uZXh0VGljazt0aGlzLmZyZXF1ZW5jeSYmKHRoaXMuX25leHRUaWNrKz0xL3RoaXMuZnJlcXVlbmN5LmdldFZhbHVlQXRUaW1lKHRoaXMuX25leHRUaWNrKSxlPT09by5TdGF0ZS5TdGFydGVkJiYodGhpcy5jYWxsYmFjayhzKSx0aGlzLnRpY2tzKyspKX19LG8uQ2xvY2sucHJvdG90eXBlLmdldFN0YXRlQXRUaW1lPWZ1bmN0aW9uKHQpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKHQpfSxvLkNsb2NrLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7by5FbWl0dGVyLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5jb250ZXh0Lm9mZihcInRpY2tcIix0aGlzLl9ib3VuZExvb3ApLHRoaXMuX3dyaXRhYmxlKFwiZnJlcXVlbmN5XCIpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeT1udWxsLHRoaXMuX2JvdW5kTG9vcD1udWxsLHRoaXMuX25leHRUaWNrPTEvMCx0aGlzLmNhbGxiYWNrPW51bGwsdGhpcy5fc3RhdGUuZGlzcG9zZSgpLHRoaXMuX3N0YXRlPW51bGx9LG8uQ2xvY2t9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygxNCldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtmdW5jdGlvbiB0KGUsdCxuKXtpZihlLmlucHV0KUFycmF5LmlzQXJyYXkoZS5pbnB1dCk/KG8ucHJvdG90eXBlLmlzVW5kZWYobikmJihuPTApLHRoaXMuY29ubmVjdChlLmlucHV0W25dKSk6dGhpcy5jb25uZWN0KGUuaW5wdXQsdCxuKTtlbHNlIHRyeXtlIGluc3RhbmNlb2YgQXVkaW9Ob2RlP2kuY2FsbCh0aGlzLGUsdCxuKTppLmNhbGwodGhpcyxlLHQpfWNhdGNoKHQpe3Rocm93IG5ldyBFcnJvcihcImVycm9yIGNvbm5lY3RpbmcgdG8gbm9kZTogXCIrZStcIlxcblwiK3QpfX12YXIgaSxyO3JldHVybiF3aW5kb3cuaGFzT3duUHJvcGVydHkoXCJBdWRpb0NvbnRleHRcIikmJndpbmRvdy5oYXNPd25Qcm9wZXJ0eShcIndlYmtpdEF1ZGlvQ29udGV4dFwiKSYmKHdpbmRvdy5BdWRpb0NvbnRleHQ9d2luZG93LndlYmtpdEF1ZGlvQ29udGV4dCksby5Db250ZXh0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZSBpbiBvLkVtaXR0ZXIuY2FsbCh0aGlzKSx0PXR8fG5ldyB3aW5kb3cuQXVkaW9Db250ZXh0LHRoaXMuX2NvbnRleHQ9dCx0aGlzLl9jb250ZXh0KXRoaXMuX2RlZmluZVByb3BlcnR5KHRoaXMuX2NvbnRleHQsZSk7dGhpcy5fbGF0ZW5jeUhpbnQ9XCJpbnRlcmFjdGl2ZVwiLHRoaXMuX2xvb2tBaGVhZD0uMSx0aGlzLl91cGRhdGVJbnRlcnZhbD10aGlzLl9sb29rQWhlYWQvMyx0aGlzLl9jb21wdXRlZFVwZGF0ZUludGVydmFsPTAsdGhpcy5fd29ya2VyPXRoaXMuX2NyZWF0ZVdvcmtlcigpLHRoaXMuX2NvbnN0YW50cz17fX0sby5leHRlbmQoby5Db250ZXh0LG8uRW1pdHRlciksby5FbWl0dGVyLm1peGluKG8uQ29udGV4dCksby5Db250ZXh0LnByb3RvdHlwZS5fZGVmaW5lUHJvcGVydHk9ZnVuY3Rpb24oZSxuKXt0aGlzLmlzVW5kZWYodGhpc1tuXSkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLG4se2dldDpmdW5jdGlvbigpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGVbbl0/ZVtuXS5iaW5kKGUpOmVbbl19LHNldDpmdW5jdGlvbih0KXtlW25dPXR9fSl9LG8uQ29udGV4dC5wcm90b3R5cGUubm93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3VycmVudFRpbWV9LG8uQ29udGV4dC5wcm90b3R5cGUuX2NyZWF0ZVdvcmtlcj1mdW5jdGlvbigpe3dpbmRvdy5VUkw9d2luZG93LlVSTHx8d2luZG93LndlYmtpdFVSTDt2YXIgdD1uZXcgQmxvYihbXCJ2YXIgdGltZW91dFRpbWUgPSBcIisoMWUzKnRoaXMuX3VwZGF0ZUludGVydmFsKS50b0ZpeGVkKDEpK1wiO3NlbGYub25tZXNzYWdlID0gZnVuY3Rpb24obXNnKXtcXHR0aW1lb3V0VGltZSA9IHBhcnNlSW50KG1zZy5kYXRhKTt9O2Z1bmN0aW9uIHRpY2soKXtcXHRzZXRUaW1lb3V0KHRpY2ssIHRpbWVvdXRUaW1lKTtcXHRzZWxmLnBvc3RNZXNzYWdlKCd0aWNrJyk7fXRpY2soKTtcIl0pLGU9VVJMLmNyZWF0ZU9iamVjdFVSTCh0KSxuPW5ldyBXb3JrZXIoZSk7cmV0dXJuIG4uYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixmdW5jdGlvbigpe3RoaXMuZW1pdChcInRpY2tcIil9LmJpbmQodGhpcykpLG4uYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixmdW5jdGlvbigpe3ZhciB0PXRoaXMubm93KCk7aWYodGhpcy5pc051bWJlcih0aGlzLl9sYXN0VXBkYXRlKSl7dmFyIGU9dC10aGlzLl9sYXN0VXBkYXRlO3RoaXMuX2NvbXB1dGVkVXBkYXRlSW50ZXJ2YWw9TWF0aC5tYXgoZSwuOTcqdGhpcy5fY29tcHV0ZWRVcGRhdGVJbnRlcnZhbCl9dGhpcy5fbGFzdFVwZGF0ZT10fS5iaW5kKHRoaXMpKSxufSxvLkNvbnRleHQucHJvdG90eXBlLmdldENvbnN0YW50PWZ1bmN0aW9uKHQpe2lmKHRoaXMuX2NvbnN0YW50c1t0XSlyZXR1cm4gdGhpcy5fY29uc3RhbnRzW3RdO2Zvcih2YXIgZT10aGlzLl9jb250ZXh0LmNyZWF0ZUJ1ZmZlcigxLDEyOCx0aGlzLl9jb250ZXh0LnNhbXBsZVJhdGUpLG49ZS5nZXRDaGFubmVsRGF0YSgwKSxvPTA7bzxuLmxlbmd0aDtvKyspbltvXT10O3ZhciBpPXRoaXMuX2NvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7cmV0dXJuIGkuY2hhbm5lbENvdW50PTEsaS5jaGFubmVsQ291bnRNb2RlPVwiZXhwbGljaXRcIixpLmJ1ZmZlcj1lLGkubG9vcD0hMCxpLnN0YXJ0KDApLHRoaXMuX2NvbnN0YW50c1t0XT1pfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoby5Db250ZXh0LnByb3RvdHlwZSxcImxhZ1wiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jb21wdXRlZFVwZGF0ZUludGVydmFsLXRoaXMuX3VwZGF0ZUludGVydmFsO3JldHVybiB0PU1hdGgubWF4KHQsMCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KG8uQ29udGV4dC5wcm90b3R5cGUsXCJsb29rQWhlYWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvb2tBaGVhZH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX2xvb2tBaGVhZD10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLkNvbnRleHQucHJvdG90eXBlLFwidXBkYXRlSW50ZXJ2YWxcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VwZGF0ZUludGVydmFsfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fdXBkYXRlSW50ZXJ2YWw9TWF0aC5tYXgodCxvLnByb3RvdHlwZS5ibG9ja1RpbWUpLHRoaXMuX3dvcmtlci5wb3N0TWVzc2FnZShNYXRoLm1heCgxZTMqdCwxKSl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KG8uQ29udGV4dC5wcm90b3R5cGUsXCJsYXRlbmN5SGludFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbGF0ZW5jeUhpbnR9LHNldDpmdW5jdGlvbih0KXt2YXIgZT10O2lmKHRoaXMuX2xhdGVuY3lIaW50PXQsdGhpcy5pc1N0cmluZyh0KSlzd2l0Y2godCl7Y2FzZVwiaW50ZXJhY3RpdmVcIjplPS4xLHRoaXMuX2NvbnRleHQubGF0ZW5jeUhpbnQ9dDticmVhaztjYXNlXCJwbGF5YmFja1wiOmU9LjgsdGhpcy5fY29udGV4dC5sYXRlbmN5SGludD10O2JyZWFrO2Nhc2VcImJhbGFuY2VkXCI6ZT0uMjUsdGhpcy5fY29udGV4dC5sYXRlbmN5SGludD10O2JyZWFrO2Nhc2VcImZhc3Rlc3RcIjplPS4wMX10aGlzLmxvb2tBaGVhZD1lLHRoaXMudXBkYXRlSW50ZXJ2YWw9ZS8zfX0pLG8uc3VwcG9ydGVkPyhpPUF1ZGlvTm9kZS5wcm90b3R5cGUuY29ubmVjdCxyPUF1ZGlvTm9kZS5wcm90b3R5cGUuZGlzY29ubmVjdCxBdWRpb05vZGUucHJvdG90eXBlLmNvbm5lY3QhPT10JiYoQXVkaW9Ob2RlLnByb3RvdHlwZS5jb25uZWN0PXQsQXVkaW9Ob2RlLnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKGUsdCxuKXtpZihlJiZlLmlucHV0JiZBcnJheS5pc0FycmF5KGUuaW5wdXQpKW8ucHJvdG90eXBlLmlzVW5kZWYobikmJihuPTApLHRoaXMuZGlzY29ubmVjdChlLmlucHV0W25dLHQsbik7ZWxzZSBpZihlJiZlLmlucHV0KXRoaXMuZGlzY29ubmVjdChlLmlucHV0LHQsbik7ZWxzZSB0cnl7ci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9Y2F0Y2godCl7dGhyb3cgbmV3IEVycm9yKFwiZXJyb3IgZGlzY29ubmVjdGluZyBub2RlOiBcIitlK1wiXFxuXCIrdCl9fSksby5jb250ZXh0PW5ldyBvLkNvbnRleHQpOmNvbnNvbGUud2FybihcIlRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IFRvbmUuanNcIiksby5Db250ZXh0fSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oNCksX193ZWJwYWNrX3JlcXVpcmVfXygyMCksX193ZWJwYWNrX3JlcXVpcmVfXygyKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKG4pe1widXNlIHN0cmljdFwiO3JldHVybiBuLlN1YnRyYWN0PWZ1bmN0aW9uKHQpe3RoaXMuY3JlYXRlSW5zT3V0cygyLDApLHRoaXMuX3N1bT10aGlzLmlucHV0WzBdPXRoaXMub3V0cHV0PW5ldyBuLkdhaW4sdGhpcy5fbmVnPW5ldyBuLk5lZ2F0ZSx0aGlzLl9wYXJhbT10aGlzLmlucHV0WzFdPW5ldyBuLlNpZ25hbCh0KSx0aGlzLl9wYXJhbS5jaGFpbih0aGlzLl9uZWcsdGhpcy5fc3VtKX0sbi5leHRlbmQobi5TdWJ0cmFjdCxuLlNpZ25hbCksbi5TdWJ0cmFjdC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybiBuLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fbmVnLmRpc3Bvc2UoKSx0aGlzLl9uZWc9bnVsbCx0aGlzLl9zdW0uZGlzY29ubmVjdCgpLHRoaXMuX3N1bT1udWxsLHRoaXMuX3BhcmFtLmRpc3Bvc2UoKSx0aGlzLl9wYXJhbT1udWxsLHRoaXN9LG4uU3VidHJhY3R9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gby5FbWl0dGVyPWZ1bmN0aW9uKCl7dGhpcy5fZXZlbnRzPXt9fSxvLmV4dGVuZChvLkVtaXR0ZXIpLG8uRW1pdHRlci5wcm90b3R5cGUub249ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dC5zcGxpdCgvXFxXKy8pLHI9MDtyPGkubGVuZ3RoO3IrKyl7dmFyIG49aVtyXTt0aGlzLl9ldmVudHMuaGFzT3duUHJvcGVydHkobil8fCh0aGlzLl9ldmVudHNbbl09W10pLHRoaXMuX2V2ZW50c1tuXS5wdXNoKGUpfXJldHVybiB0aGlzfSxvLkVtaXR0ZXIucHJvdG90eXBlLm9mZj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10LnNwbGl0KC9cXFcrLykscj0wO3I8aS5sZW5ndGg7cisrKWlmKHQ9aVtyXSx0aGlzLl9ldmVudHMuaGFzT3duUHJvcGVydHkodCkpaWYoby5wcm90b3R5cGUuaXNVbmRlZihlKSl0aGlzLl9ldmVudHNbdF09W107ZWxzZSBmb3IodmFyIG49dGhpcy5fZXZlbnRzW3RdLHM9MDtzPG4ubGVuZ3RoO3MrKyluW3NdPT09ZSYmbi5zcGxpY2UocywxKTtyZXR1cm4gdGhpc30sby5FbWl0dGVyLnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uKHQpe2lmKHRoaXMuX2V2ZW50cyl7dmFyIGU9QXJyYXkuYXBwbHkobnVsbCxhcmd1bWVudHMpLnNsaWNlKDEpO2lmKHRoaXMuX2V2ZW50cy5oYXNPd25Qcm9wZXJ0eSh0KSlmb3IodmFyIGk9dGhpcy5fZXZlbnRzW3RdLHI9MCxuPWkubGVuZ3RoO3I8bjtyKyspaVtyXS5hcHBseSh0aGlzLGUpfXJldHVybiB0aGlzfSxvLkVtaXR0ZXIubWl4aW49ZnVuY3Rpb24odCl7dmFyIGU9W1wib25cIixcIm9mZlwiLFwiZW1pdFwiXTt0Ll9ldmVudHM9e307Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKyspe3ZhciByPWVbaV0sbj1vLkVtaXR0ZXIucHJvdG90eXBlW3JdO3Rbcl09bn19LG8uRW1pdHRlci5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybiBvLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fZXZlbnRzPW51bGwsdGhpc30sby5FbWl0dGVyfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24oYyl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGMuU2lnbmFsQmFzZT1mdW5jdGlvbigpe30sYy5leHRlbmQoYy5TaWduYWxCYXNlKSxjLlNpZ25hbEJhc2UucHJvdG90eXBlLmNvbm5lY3Q9ZnVuY3Rpb24oZSxuLGEpe3JldHVybiBjLlNpZ25hbCYmYy5TaWduYWw9PT1lLmNvbnN0cnVjdG9yfHxjLlBhcmFtJiZjLlBhcmFtPT09ZS5jb25zdHJ1Y3Rvcnx8Yy5UaW1lbGluZVNpZ25hbCYmYy5UaW1lbGluZVNpZ25hbD09PWUuY29uc3RydWN0b3I/KGUuX3BhcmFtLmNhbmNlbFNjaGVkdWxlZFZhbHVlcygwKSxlLl9wYXJhbS52YWx1ZT0wLGUub3ZlcnJpZGRlbj0hMCk6ZSBpbnN0YW5jZW9mIEF1ZGlvUGFyYW0mJihlLmNhbmNlbFNjaGVkdWxlZFZhbHVlcygwKSxlLnZhbHVlPTApLGMucHJvdG90eXBlLmNvbm5lY3QuY2FsbCh0aGlzLGUsbixhKSx0aGlzfSxjLlNpZ25hbEJhc2V9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygxNyldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtyZXR1cm4gby5UaW1lPWZ1bmN0aW9uKHQsZSl7aWYoISh0aGlzIGluc3RhbmNlb2Ygby5UaW1lKSlyZXR1cm4gbmV3IG8uVGltZSh0LGUpO3RoaXMuX3BsdXNOb3c9ITEsby5UaW1lQmFzZS5jYWxsKHRoaXMsdCxlKX0sby5leHRlbmQoby5UaW1lLG8uVGltZUJhc2UpLG8uVGltZS5wcm90b3R5cGUuX3VuYXJ5RXhwcmVzc2lvbnM9T2JqZWN0LmNyZWF0ZShvLlRpbWVCYXNlLnByb3RvdHlwZS5fdW5hcnlFeHByZXNzaW9ucyksby5UaW1lLnByb3RvdHlwZS5fdW5hcnlFeHByZXNzaW9ucy5xdWFudGl6ZT17cmVnZXhwOi9eQC8sbWV0aG9kOmZ1bmN0aW9uKHQpe3JldHVybiBvLlRyYW5zcG9ydC5uZXh0U3ViZGl2aXNpb24odCgpKX19LG8uVGltZS5wcm90b3R5cGUuX3VuYXJ5RXhwcmVzc2lvbnMubm93PXtyZWdleHA6L15cXCsvLG1ldGhvZDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcGx1c05vdz0hMCx0KCl9fSxvLlRpbWUucHJvdG90eXBlLnF1YW50aXplPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9dGhpcy5kZWZhdWx0QXJnKGUsMSksdGhpcy5fZXhwcj1mdW5jdGlvbih0LGUsbyl7cmV0dXJuIHQ9dCgpLGU9ZS50b1NlY29uZHMoKSx0KyhNYXRoLnJvdW5kKHQvZSkqZS10KSpvfS5iaW5kKHRoaXMsdGhpcy5fZXhwcixuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0KSxlKSx0aGlzfSxvLlRpbWUucHJvdG90eXBlLmFkZE5vdz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wbHVzTm93PSEwLHRoaXN9LG8uVGltZS5wcm90b3R5cGUuX2RlZmF1bHRFeHByPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BsdXNOb3c9ITAsdGhpcy5fbm9PcH0sby5UaW1lLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBvLlRpbWVCYXNlLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLl9wbHVzTm93PXQuX3BsdXNOb3csdGhpc30sby5UaW1lLnByb3RvdHlwZS50b05vdGF0aW9uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy50b1NlY29uZHMoKSxlPXRoaXMuX3RvTm90YXRpb25IZWxwZXIodCxbXCIxbVwiLFwiMm5cIixcIjRuXCIsXCI4blwiLFwiMTZuXCIsXCIzMm5cIixcIjY0blwiLFwiMTI4blwiXSksbz10aGlzLl90b05vdGF0aW9uSGVscGVyKHQsW1wiMW1cIixcIjJuXCIsXCIydFwiLFwiNG5cIixcIjR0XCIsXCI4blwiLFwiOHRcIixcIjE2blwiLFwiMTZ0XCIsXCIzMm5cIixcIjMydFwiLFwiNjRuXCIsXCI2NHRcIixcIjEyOG5cIl0pO3JldHVybiBvLnNwbGl0KFwiK1wiKS5sZW5ndGg8ZS5zcGxpdChcIitcIikubGVuZ3RoP286ZX0sby5UaW1lLnByb3RvdHlwZS5fdG9Ob3RhdGlvbkhlbHBlcj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbz10aGlzLl9ub3RhdGlvblRvVW5pdHMoZVtlLmxlbmd0aC0xXSksbj1cIlwiLGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIHI9dGhpcy5fbm90YXRpb25Ub1VuaXRzKGVbaV0pLHM9dC9yO2lmKDEtcyUxPDFlLTYmJihzKz0xZS02KSwwPChzPU1hdGguZmxvb3IocykpKXtpZihuKz0xPT09cz9lW2ldOnMudG9TdHJpbmcoKStcIipcIitlW2ldLCh0LT1zKnIpPG8pYnJlYWs7bis9XCIgKyBcIn19cmV0dXJuXCJcIj09PW4mJihuPVwiMFwiKSxufSxvLlRpbWUucHJvdG90eXBlLl9ub3RhdGlvblRvVW5pdHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX3ByaW1hcnlFeHByZXNzaW9ucyxvPVtlLm4sZS50LGUubV0sbj0wO248by5sZW5ndGg7bisrKXt2YXIgaT1vW25dLHI9dC5tYXRjaChpLnJlZ2V4cCk7aWYocilyZXR1cm4gaS5tZXRob2QuY2FsbCh0aGlzLHJbMV0pfX0sby5UaW1lLnByb3RvdHlwZS50b0JhcnNCZWF0c1NpeHRlZW50aHM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9iZWF0c1RvVW5pdHMoMSksZT10aGlzLnRvU2Vjb25kcygpL3Qsbz1NYXRoLmZsb29yKGUvdGhpcy5fdGltZVNpZ25hdHVyZSgpKSxuPWUlMSo0O3JldHVybiBlPU1hdGguZmxvb3IoZSkldGhpcy5fdGltZVNpZ25hdHVyZSgpLDM8KG49bi50b1N0cmluZygpKS5sZW5ndGgmJihuPXBhcnNlRmxvYXQobikudG9GaXhlZCgzKSksW28sZSxuXS5qb2luKFwiOlwiKX0sby5UaW1lLnByb3RvdHlwZS50b1RpY2tzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fYmVhdHNUb1VuaXRzKDEpLGU9dGhpcy52YWx1ZU9mKCkvdDtyZXR1cm4gTWF0aC5mbG9vcihlKm8uVHJhbnNwb3J0LlBQUSl9LG8uVGltZS5wcm90b3R5cGUudG9TYW1wbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9TZWNvbmRzKCkqdGhpcy5jb250ZXh0LnNhbXBsZVJhdGV9LG8uVGltZS5wcm90b3R5cGUudG9GcmVxdWVuY3k9ZnVuY3Rpb24oKXtyZXR1cm4gMS90aGlzLnRvU2Vjb25kcygpfSxvLlRpbWUucHJvdG90eXBlLnRvU2Vjb25kcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlT2YoKX0sby5UaW1lLnByb3RvdHlwZS50b01pbGxpc2Vjb25kcz1mdW5jdGlvbigpe3JldHVybiAxZTMqdGhpcy50b1NlY29uZHMoKX0sby5UaW1lLnByb3RvdHlwZS52YWx1ZU9mPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V4cHIoKSsodGhpcy5fcGx1c05vdz90aGlzLm5vdygpOjApfSxvLlRpbWV9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihuKXtyZXR1cm4gbi5UaW1lQmFzZT1mdW5jdGlvbihlLHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIG4uVGltZUJhc2UpKXJldHVybiBuZXcgbi5UaW1lQmFzZShlLHQpO2lmKHRoaXMuX2V4cHI9dGhpcy5fbm9PcCxlIGluc3RhbmNlb2Ygbi5UaW1lQmFzZSl0aGlzLmNvcHkoZSk7ZWxzZSBpZighdGhpcy5pc1VuZGVmKHQpfHx0aGlzLmlzTnVtYmVyKGUpKXt0PXRoaXMuZGVmYXVsdEFyZyh0LHRoaXMuX2RlZmF1bHRVbml0cyk7dmFyIHI9dGhpcy5fcHJpbWFyeUV4cHJlc3Npb25zW3RdLm1ldGhvZDt0aGlzLl9leHByPXIuYmluZCh0aGlzLGUpfWVsc2UgdGhpcy5pc1N0cmluZyhlKT90aGlzLnNldChlKTp0aGlzLmlzVW5kZWYoZSkmJih0aGlzLl9leHByPXRoaXMuX2RlZmF1bHRFeHByKCkpfSxuLmV4dGVuZChuLlRpbWVCYXNlKSxuLlRpbWVCYXNlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2V4cHI9dGhpcy5fcGFyc2VFeHByU3RyaW5nKGUpLHRoaXN9LG4uVGltZUJhc2UucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IHRoaXMuY29uc3RydWN0b3I7cmV0dXJuIGUuY29weSh0aGlzKSxlfSxuLlRpbWVCYXNlLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKGUpe3ZhciB0PWUuX2V4cHIoKTtyZXR1cm4gdGhpcy5zZXQodCl9LG4uVGltZUJhc2UucHJvdG90eXBlLl9wcmltYXJ5RXhwcmVzc2lvbnM9e246e3JlZ2V4cDovXihcXGQrKW4vaSxtZXRob2Q6ZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT0oZT1wYXJzZUludChlKSk/dGhpcy5fYmVhdHNUb1VuaXRzKHRoaXMuX3RpbWVTaWduYXR1cmUoKSk6dGhpcy5fYmVhdHNUb1VuaXRzKDQvZSl9fSx0OntyZWdleHA6L14oXFxkKyl0L2ksbWV0aG9kOmZ1bmN0aW9uKGUpe3JldHVybiBlPXBhcnNlSW50KGUpLHRoaXMuX2JlYXRzVG9Vbml0cyg4LygzKnBhcnNlSW50KGUpKSl9fSxtOntyZWdleHA6L14oXFxkKyltL2ksbWV0aG9kOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9iZWF0c1RvVW5pdHMocGFyc2VJbnQoZSkqdGhpcy5fdGltZVNpZ25hdHVyZSgpKX19LGk6e3JlZ2V4cDovXihcXGQrKWkvaSxtZXRob2Q6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3RpY2tzVG9Vbml0cyhwYXJzZUludChlKSl9fSxoejp7cmVnZXhwOi9eKFxcZCsoPzpcXC5cXGQrKT8paHovaSxtZXRob2Q6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2ZyZXF1ZW5jeVRvVW5pdHMocGFyc2VGbG9hdChlKSl9fSx0cjp7cmVnZXhwOi9eKFxcZCsoPzpcXC5cXGQrKT8pOihcXGQrKD86XFwuXFxkKyk/KTo/KFxcZCsoPzpcXC5cXGQrKT8pPy8sbWV0aG9kOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj0wO3JldHVybiBlJiZcIjBcIiE9PWUmJihuKz10aGlzLl9iZWF0c1RvVW5pdHModGhpcy5fdGltZVNpZ25hdHVyZSgpKnBhcnNlRmxvYXQoZSkpKSx0JiZcIjBcIiE9PXQmJihuKz10aGlzLl9iZWF0c1RvVW5pdHMocGFyc2VGbG9hdCh0KSkpLHImJlwiMFwiIT09ciYmKG4rPXRoaXMuX2JlYXRzVG9Vbml0cyhwYXJzZUZsb2F0KHIpLzQpKSxufX0sczp7cmVnZXhwOi9eKFxcZCsoPzpcXC5cXGQrKT9zKS8sbWV0aG9kOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9zZWNvbmRzVG9Vbml0cyhwYXJzZUZsb2F0KGUpKX19LHNhbXBsZXM6e3JlZ2V4cDovXihcXGQrKXNhbXBsZXMvLG1ldGhvZDpmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZSkvdGhpcy5jb250ZXh0LnNhbXBsZVJhdGV9fSxkZWZhdWx0OntyZWdleHA6L14oXFxkKyg/OlxcLlxcZCspPykvLG1ldGhvZDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fcHJpbWFyeUV4cHJlc3Npb25zW3RoaXMuX2RlZmF1bHRVbml0c10ubWV0aG9kLmNhbGwodGhpcyxlKX19fSxuLlRpbWVCYXNlLnByb3RvdHlwZS5fYmluYXJ5RXhwcmVzc2lvbnM9e1wiK1wiOntyZWdleHA6L15cXCsvLHByZWNlZGVuY2U6MixtZXRob2Q6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSgpK3QoKX19LFwiLVwiOntyZWdleHA6L15cXC0vLHByZWNlZGVuY2U6MixtZXRob2Q6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSgpLXQoKX19LFwiKlwiOntyZWdleHA6L15cXCovLHByZWNlZGVuY2U6MSxtZXRob2Q6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSgpKnQoKX19LFwiL1wiOntyZWdleHA6L15cXC8vLHByZWNlZGVuY2U6MSxtZXRob2Q6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSgpL3QoKX19fSxuLlRpbWVCYXNlLnByb3RvdHlwZS5fdW5hcnlFeHByZXNzaW9ucz17bmVnOntyZWdleHA6L15cXC0vLG1ldGhvZDpmdW5jdGlvbihlKXtyZXR1cm4tZSgpfX19LG4uVGltZUJhc2UucHJvdG90eXBlLl9zeW50YXhHbHVlPXtcIihcIjp7cmVnZXhwOi9eXFwoL30sXCIpXCI6e3JlZ2V4cDovXlxcKS99fSxuLlRpbWVCYXNlLnByb3RvdHlwZS5fdG9rZW5pemU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PS0xLHI9W107MDxlLmxlbmd0aDspe3ZhciBuPWkoZT1lLnRyaW0oKSx0aGlzKTtyLnB1c2gobiksZT1lLnN1YnN0cihuLnZhbHVlLmxlbmd0aCl9ZnVuY3Rpb24gaShlLHQpe2Zvcih2YXIgcj1bXCJfYmluYXJ5RXhwcmVzc2lvbnNcIixcIl91bmFyeUV4cHJlc3Npb25zXCIsXCJfcHJpbWFyeUV4cHJlc3Npb25zXCIsXCJfc3ludGF4R2x1ZVwiXSxuPTA7bjxyLmxlbmd0aDtuKyspe3ZhciBpPXRbcltuXV07Zm9yKHZhciBzIGluIGkpe3ZhciBvPWlbc10scD1vLnJlZ2V4cCxhPWUubWF0Y2gocCk7aWYobnVsbCE9PWEpcmV0dXJue21ldGhvZDpvLm1ldGhvZCxwcmVjZWRlbmNlOm8ucHJlY2VkZW5jZSxyZWdleHA6by5yZWdleHAsdmFsdWU6YVswXX19fXRocm93IG5ldyBTeW50YXhFcnJvcihcIlRvbmUuVGltZUJhc2U6IFVuZXhwZWN0ZWQgdG9rZW4gXCIrZSl9cmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm4gclsrK3RdfSxwZWVrOmZ1bmN0aW9uKCl7cmV0dXJuIHJbdCsxXX19fSxuLlRpbWVCYXNlLnByb3RvdHlwZS5fbWF0Y2hHcm91cD1mdW5jdGlvbihlLHQscil7aWYoIXRoaXMuaXNVbmRlZihlKSlmb3IodmFyIG4gaW4gdCl7dmFyIGk9dFtuXTtpZihpLnJlZ2V4cC50ZXN0KGUudmFsdWUpKXtpZih0aGlzLmlzVW5kZWYocikpcmV0dXJuIGk7aWYoaS5wcmVjZWRlbmNlPT09cilyZXR1cm4gaX19cmV0dXJuITF9LG4uVGltZUJhc2UucHJvdG90eXBlLl9wYXJzZUJpbmFyeT1mdW5jdGlvbihlLHQpe3ZhciByO3RoaXMuaXNVbmRlZih0KSYmKHQ9Mikscj10PDA/dGhpcy5fcGFyc2VVbmFyeShlKTp0aGlzLl9wYXJzZUJpbmFyeShlLHQtMSk7Zm9yKHZhciBuPWUucGVlaygpO24mJnRoaXMuX21hdGNoR3JvdXAobix0aGlzLl9iaW5hcnlFeHByZXNzaW9ucyx0KTspcj0obj1lLm5leHQoKSkubWV0aG9kLmJpbmQodGhpcyxyLHRoaXMuX3BhcnNlQmluYXJ5KGUsdC0xKSksbj1lLnBlZWsoKTtyZXR1cm4gcn0sbi5UaW1lQmFzZS5wcm90b3R5cGUuX3BhcnNlVW5hcnk9ZnVuY3Rpb24oZSl7dmFyIHQscjt0PWUucGVlaygpO3ZhciBuPXRoaXMuX21hdGNoR3JvdXAodCx0aGlzLl91bmFyeUV4cHJlc3Npb25zKTtyZXR1cm4gbj8odD1lLm5leHQoKSxyPXRoaXMuX3BhcnNlVW5hcnkoZSksbi5tZXRob2QuYmluZCh0aGlzLHIpKTp0aGlzLl9wYXJzZVByaW1hcnkoZSl9LG4uVGltZUJhc2UucHJvdG90eXBlLl9wYXJzZVByaW1hcnk9ZnVuY3Rpb24oZSl7dmFyIHQscjtpZih0PWUucGVlaygpLHRoaXMuaXNVbmRlZih0KSl0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUb25lLlRpbWVCYXNlOiBVbmV4cGVjdGVkIGVuZCBvZiBleHByZXNzaW9uXCIpO2lmKHRoaXMuX21hdGNoR3JvdXAodCx0aGlzLl9wcmltYXJ5RXhwcmVzc2lvbnMpKXt2YXIgbj0odD1lLm5leHQoKSkudmFsdWUubWF0Y2godC5yZWdleHApO3JldHVybiB0Lm1ldGhvZC5iaW5kKHRoaXMsblsxXSxuWzJdLG5bM10pfWlmKHQmJlwiKFwiPT09dC52YWx1ZSl7aWYoZS5uZXh0KCkscj10aGlzLl9wYXJzZUJpbmFyeShlKSwhKHQ9ZS5uZXh0KCkpfHxcIilcIiE9PXQudmFsdWUpdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiRXhwZWN0ZWQgKVwiKTtyZXR1cm4gcn10aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUb25lLlRpbWVCYXNlOiBDYW5ub3QgcHJvY2VzcyB0b2tlbiBcIit0LnZhbHVlKX0sbi5UaW1lQmFzZS5wcm90b3R5cGUuX3BhcnNlRXhwclN0cmluZz1mdW5jdGlvbihlKXt0aGlzLmlzU3RyaW5nKGUpfHwoZT1lLnRvU3RyaW5nKCkpO3ZhciB0PXRoaXMuX3Rva2VuaXplKGUpO3JldHVybiB0aGlzLl9wYXJzZUJpbmFyeSh0KX0sbi5UaW1lQmFzZS5wcm90b3R5cGUuX25vT3A9ZnVuY3Rpb24oKXtyZXR1cm4gMH0sbi5UaW1lQmFzZS5wcm90b3R5cGUuX2RlZmF1bHRFeHByPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX25vT3B9LG4uVGltZUJhc2UucHJvdG90eXBlLl9kZWZhdWx0VW5pdHM9XCJzXCIsbi5UaW1lQmFzZS5wcm90b3R5cGUuX2ZyZXF1ZW5jeVRvVW5pdHM9ZnVuY3Rpb24oZSl7cmV0dXJuIDEvZX0sbi5UaW1lQmFzZS5wcm90b3R5cGUuX2JlYXRzVG9Vbml0cz1mdW5jdGlvbihlKXtyZXR1cm4gNjAvbi5UcmFuc3BvcnQuYnBtLnZhbHVlKmV9LG4uVGltZUJhc2UucHJvdG90eXBlLl9zZWNvbmRzVG9Vbml0cz1mdW5jdGlvbihlKXtyZXR1cm4gZX0sbi5UaW1lQmFzZS5wcm90b3R5cGUuX3RpY2tzVG9Vbml0cz1mdW5jdGlvbihlKXtyZXR1cm4gZSoodGhpcy5fYmVhdHNUb1VuaXRzKDEpL24uVHJhbnNwb3J0LlBQUSl9LG4uVGltZUJhc2UucHJvdG90eXBlLl90aW1lU2lnbmF0dXJlPWZ1bmN0aW9uKCl7cmV0dXJuIG4uVHJhbnNwb3J0LnRpbWVTaWduYXR1cmV9LG4uVGltZUJhc2UucHJvdG90eXBlLl9wdXNoRXhwcj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBuLlRpbWVCYXNlfHwoZT1uZXcgdGhpcy5jb25zdHJ1Y3RvcihlLHIpKSx0aGlzLl9leHByPXRoaXMuX2JpbmFyeUV4cHJlc3Npb25zW3RdLm1ldGhvZC5iaW5kKHRoaXMsdGhpcy5fZXhwcixlLl9leHByKSx0aGlzfSxuLlRpbWVCYXNlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fcHVzaEV4cHIoZSxcIitcIix0KX0sbi5UaW1lQmFzZS5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX3B1c2hFeHByKGUsXCItXCIsdCl9LG4uVGltZUJhc2UucHJvdG90eXBlLm11bHQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fcHVzaEV4cHIoZSxcIipcIix0KX0sbi5UaW1lQmFzZS5wcm90b3R5cGUuZGl2PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX3B1c2hFeHByKGUsXCIvXCIsdCl9LG4uVGltZUJhc2UucHJvdG90eXBlLnZhbHVlT2Y9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXhwcigpfSxuLlRpbWVCYXNlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5fZXhwcj1udWxsfSxuLlRpbWVCYXNlfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oOSldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gYS5QYXJhbT1mdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uc09iamVjdChhcmd1bWVudHMsW1wicGFyYW1cIixcInVuaXRzXCIsXCJjb252ZXJ0XCJdLGEuUGFyYW0uZGVmYXVsdHMpO3RoaXMuX3BhcmFtPXRoaXMuaW5wdXQ9dC5wYXJhbSx0aGlzLnVuaXRzPXQudW5pdHMsdGhpcy5jb252ZXJ0PXQuY29udmVydCx0aGlzLm92ZXJyaWRkZW49ITEsdGhpcy5fbGZvPW51bGwsdGhpcy5pc09iamVjdCh0Lmxmbyk/dGhpcy52YWx1ZT10Lmxmbzp0aGlzLmlzVW5kZWYodC52YWx1ZSl8fCh0aGlzLnZhbHVlPXQudmFsdWUpfSxhLmV4dGVuZChhLlBhcmFtKSxhLlBhcmFtLmRlZmF1bHRzPXt1bml0czphLlR5cGUuRGVmYXVsdCxjb252ZXJ0OiEwLHBhcmFtOnZvaWQgMH0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGEuUGFyYW0ucHJvdG90eXBlLFwidmFsdWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RvVW5pdHModGhpcy5fcGFyYW0udmFsdWUpfSxzZXQ6ZnVuY3Rpb24odCl7aWYodGhpcy5pc09iamVjdCh0KSl7aWYodGhpcy5pc1VuZGVmKGEuTEZPKSl0aHJvdyBuZXcgRXJyb3IoXCJJbmNsdWRlICdUb25lLkxGTycgdG8gdXNlIGFuIExGTyBhcyBhIFBhcmFtIHZhbHVlLlwiKTt0aGlzLl9sZm8mJnRoaXMuX2xmby5kaXNwb3NlKCksdGhpcy5fbGZvPW5ldyBhLkxGTyh0KS5zdGFydCgpLHRoaXMuX2xmby5jb25uZWN0KHRoaXMuaW5wdXQpfWVsc2V7dmFyIGU9dGhpcy5fZnJvbVVuaXRzKHQpO3RoaXMuX3BhcmFtLmNhbmNlbFNjaGVkdWxlZFZhbHVlcygwKSx0aGlzLl9wYXJhbS52YWx1ZT1lfX19KSxhLlBhcmFtLnByb3RvdHlwZS5fZnJvbVVuaXRzPWZ1bmN0aW9uKHQpe2lmKCF0aGlzLmNvbnZlcnQmJiF0aGlzLmlzVW5kZWYodGhpcy5jb252ZXJ0KSlyZXR1cm4gdDtzd2l0Y2godGhpcy51bml0cyl7Y2FzZSBhLlR5cGUuVGltZTpyZXR1cm4gdGhpcy50b1NlY29uZHModCk7Y2FzZSBhLlR5cGUuRnJlcXVlbmN5OnJldHVybiB0aGlzLnRvRnJlcXVlbmN5KHQpO2Nhc2UgYS5UeXBlLkRlY2liZWxzOnJldHVybiB0aGlzLmRiVG9HYWluKHQpO2Nhc2UgYS5UeXBlLk5vcm1hbFJhbmdlOnJldHVybiBNYXRoLm1pbihNYXRoLm1heCh0LDApLDEpO2Nhc2UgYS5UeXBlLkF1ZGlvUmFuZ2U6cmV0dXJuIE1hdGgubWluKE1hdGgubWF4KHQsLTEpLDEpO2Nhc2UgYS5UeXBlLlBvc2l0aXZlOnJldHVybiBNYXRoLm1heCh0LDApO2RlZmF1bHQ6cmV0dXJuIHR9fSxhLlBhcmFtLnByb3RvdHlwZS5fdG9Vbml0cz1mdW5jdGlvbih0KXtpZighdGhpcy5jb252ZXJ0JiYhdGhpcy5pc1VuZGVmKHRoaXMuY29udmVydCkpcmV0dXJuIHQ7c3dpdGNoKHRoaXMudW5pdHMpe2Nhc2UgYS5UeXBlLkRlY2liZWxzOnJldHVybiB0aGlzLmdhaW5Ub0RiKHQpO2RlZmF1bHQ6cmV0dXJuIHR9fSxhLlBhcmFtLnByb3RvdHlwZS5fbWluT3V0cHV0PTFlLTUsYS5QYXJhbS5wcm90b3R5cGUuc2V0VmFsdWVBdFRpbWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD10aGlzLl9mcm9tVW5pdHModCksKGU9dGhpcy50b1NlY29uZHMoZSkpPD10aGlzLm5vdygpK3RoaXMuYmxvY2tUaW1lP3RoaXMuX3BhcmFtLnZhbHVlPXQ6dGhpcy5fcGFyYW0uc2V0VmFsdWVBdFRpbWUodCxlKSx0aGlzfSxhLlBhcmFtLnByb3RvdHlwZS5zZXRSYW1wUG9pbnQ9ZnVuY3Rpb24odCl7dD10aGlzLmRlZmF1bHRBcmcodCx0aGlzLm5vdygpKTt2YXIgZT10aGlzLl9wYXJhbS52YWx1ZTtyZXR1cm4gMD09PWUmJihlPXRoaXMuX21pbk91dHB1dCksdGhpcy5fcGFyYW0uc2V0VmFsdWVBdFRpbWUoZSx0KSx0aGlzfSxhLlBhcmFtLnByb3RvdHlwZS5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZT1mdW5jdGlvbih0LGUpe3JldHVybiB0PXRoaXMuX2Zyb21Vbml0cyh0KSx0aGlzLl9wYXJhbS5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0LHRoaXMudG9TZWNvbmRzKGUpKSx0aGlzfSxhLlBhcmFtLnByb3RvdHlwZS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9dGhpcy5fZnJvbVVuaXRzKHQpLHQ9TWF0aC5tYXgodGhpcy5fbWluT3V0cHV0LHQpLHRoaXMuX3BhcmFtLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodCx0aGlzLnRvU2Vjb25kcyhlKSksdGhpc30sYS5QYXJhbS5wcm90b3R5cGUuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZT1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIGk9dGhpcy50b1NlY29uZHMoaSksdGhpcy5zZXRSYW1wUG9pbnQoaSksdGhpcy5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHQsaSt0aGlzLnRvU2Vjb25kcyhlKSksdGhpc30sYS5QYXJhbS5wcm90b3R5cGUubGluZWFyUmFtcFRvVmFsdWU9ZnVuY3Rpb24odCxlLGkpe3JldHVybiBpPXRoaXMudG9TZWNvbmRzKGkpLHRoaXMuc2V0UmFtcFBvaW50KGkpLHRoaXMubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxpK3RoaXMudG9TZWNvbmRzKGUpKSx0aGlzfSxhLlBhcmFtLnByb3RvdHlwZS5zZXRUYXJnZXRBdFRpbWU9ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0PXRoaXMuX2Zyb21Vbml0cyh0KSx0PU1hdGgubWF4KHRoaXMuX21pbk91dHB1dCx0KSxpPU1hdGgubWF4KHRoaXMuX21pbk91dHB1dCxpKSx0aGlzLl9wYXJhbS5zZXRUYXJnZXRBdFRpbWUodCx0aGlzLnRvU2Vjb25kcyhlKSxpKSx0aGlzfSxhLlBhcmFtLnByb3RvdHlwZS5zZXRWYWx1ZUN1cnZlQXRUaW1lPWZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIGE9MDthPHQubGVuZ3RoO2ErKyl0W2FdPXRoaXMuX2Zyb21Vbml0cyh0W2FdKTtyZXR1cm4gdGhpcy5fcGFyYW0uc2V0VmFsdWVDdXJ2ZUF0VGltZSh0LHRoaXMudG9TZWNvbmRzKGUpLHRoaXMudG9TZWNvbmRzKGkpKSx0aGlzfSxhLlBhcmFtLnByb3RvdHlwZS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3BhcmFtLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLnRvU2Vjb25kcyh0KSksdGhpc30sYS5QYXJhbS5wcm90b3R5cGUucmFtcFRvPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gZT10aGlzLmRlZmF1bHRBcmcoZSwwKSx0aGlzLnVuaXRzPT09YS5UeXBlLkZyZXF1ZW5jeXx8dGhpcy51bml0cz09PWEuVHlwZS5CUE18fHRoaXMudW5pdHM9PT1hLlR5cGUuRGVjaWJlbHM/dGhpcy5leHBvbmVudGlhbFJhbXBUb1ZhbHVlKHQsZSxpKTp0aGlzLmxpbmVhclJhbXBUb1ZhbHVlKHQsZSxpKSx0aGlzfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYS5QYXJhbS5wcm90b3R5cGUsXCJsZm9cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xmb319KSxhLlBhcmFtLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIGEucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9wYXJhbT1udWxsLHRoaXMuX2xmbyYmKHRoaXMuX2xmby5kaXNwb3NlKCksdGhpcy5fbGZvPW51bGwpLHRoaXN9LGEuUGFyYW19KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXyg5KV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGkpe1widXNlIHN0cmljdFwiO3JldHVybiBpLlRpbWVsaW5lPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zT2JqZWN0KGFyZ3VtZW50cyxbXCJtZW1vcnlcIl0saS5UaW1lbGluZS5kZWZhdWx0cyk7dGhpcy5fdGltZWxpbmU9W10sdGhpcy5fdG9SZW1vdmU9W10sdGhpcy5faXRlcmF0aW5nPSExLHRoaXMubWVtb3J5PWUubWVtb3J5fSxpLmV4dGVuZChpLlRpbWVsaW5lKSxpLlRpbWVsaW5lLmRlZmF1bHRzPXttZW1vcnk6MS8wfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5UaW1lbGluZS5wcm90b3R5cGUsXCJsZW5ndGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbWVsaW5lLmxlbmd0aH19KSxpLlRpbWVsaW5lLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSl7aWYodGhpcy5pc1VuZGVmKGUudGltZSkpdGhyb3cgbmV3IEVycm9yKFwiVG9uZS5UaW1lbGluZTogZXZlbnRzIG11c3QgaGF2ZSBhIHRpbWUgYXR0cmlidXRlXCIpO2lmKHRoaXMuX3RpbWVsaW5lLmxlbmd0aCl7dmFyIGk9dGhpcy5fc2VhcmNoKGUudGltZSk7dGhpcy5fdGltZWxpbmUuc3BsaWNlKGkrMSwwLGUpfWVsc2UgdGhpcy5fdGltZWxpbmUucHVzaChlKTtpZih0aGlzLmxlbmd0aD50aGlzLm1lbW9yeSl7dmFyIHQ9dGhpcy5sZW5ndGgtdGhpcy5tZW1vcnk7dGhpcy5fdGltZWxpbmUuc3BsaWNlKDAsdCl9cmV0dXJuIHRoaXN9LGkuVGltZWxpbmUucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlKXtpZih0aGlzLl9pdGVyYXRpbmcpdGhpcy5fdG9SZW1vdmUucHVzaChlKTtlbHNle3ZhciBpPXRoaXMuX3RpbWVsaW5lLmluZGV4T2YoZSk7LTEhPT1pJiZ0aGlzLl90aW1lbGluZS5zcGxpY2UoaSwxKX1yZXR1cm4gdGhpc30saS5UaW1lbGluZS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX3NlYXJjaChlKTtyZXR1cm4tMSE9PWk/dGhpcy5fdGltZWxpbmVbaV06bnVsbH0saS5UaW1lbGluZS5wcm90b3R5cGUucGVlaz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl90aW1lbGluZVswXX0saS5UaW1lbGluZS5wcm90b3R5cGUuc2hpZnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGltZWxpbmUuc2hpZnQoKX0saS5UaW1lbGluZS5wcm90b3R5cGUuZ2V0QWZ0ZXI9ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5fc2VhcmNoKGUpO3JldHVybiBpKzE8dGhpcy5fdGltZWxpbmUubGVuZ3RoP3RoaXMuX3RpbWVsaW5lW2krMV06bnVsbH0saS5UaW1lbGluZS5wcm90b3R5cGUuZ2V0QmVmb3JlPWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX3RpbWVsaW5lLmxlbmd0aDtpZigwPGkmJnRoaXMuX3RpbWVsaW5lW2ktMV0udGltZTxlKXJldHVybiB0aGlzLl90aW1lbGluZVtpLTFdO3ZhciB0PXRoaXMuX3NlYXJjaChlKTtyZXR1cm4gMDw9dC0xP3RoaXMuX3RpbWVsaW5lW3QtMV06bnVsbH0saS5UaW1lbGluZS5wcm90b3R5cGUuY2FuY2VsPWZ1bmN0aW9uKGUpe2lmKDE8dGhpcy5fdGltZWxpbmUubGVuZ3RoKXt2YXIgaT10aGlzLl9zZWFyY2goZSk7aWYoMDw9aSlpZih0aGlzLl90aW1lbGluZVtpXS50aW1lPT09ZSl7Zm9yKHZhciB0PWk7MDw9dCYmdGhpcy5fdGltZWxpbmVbdF0udGltZT09PWU7dC0tKWk9dDt0aGlzLl90aW1lbGluZT10aGlzLl90aW1lbGluZS5zbGljZSgwLGkpfWVsc2UgdGhpcy5fdGltZWxpbmU9dGhpcy5fdGltZWxpbmUuc2xpY2UoMCxpKzEpO2Vsc2UgdGhpcy5fdGltZWxpbmU9W119ZWxzZSAxPT09dGhpcy5fdGltZWxpbmUubGVuZ3RoJiZ0aGlzLl90aW1lbGluZVswXS50aW1lPj1lJiYodGhpcy5fdGltZWxpbmU9W10pO3JldHVybiB0aGlzfSxpLlRpbWVsaW5lLnByb3RvdHlwZS5jYW5jZWxCZWZvcmU9ZnVuY3Rpb24oZSl7aWYodGhpcy5fdGltZWxpbmUubGVuZ3RoKXt2YXIgaT10aGlzLl9zZWFyY2goZSk7MDw9aSYmKHRoaXMuX3RpbWVsaW5lPXRoaXMuX3RpbWVsaW5lLnNsaWNlKGkrMSkpfXJldHVybiB0aGlzfSxpLlRpbWVsaW5lLnByb3RvdHlwZS5fc2VhcmNoPWZ1bmN0aW9uKGUpe3ZhciBpPTAsdD10aGlzLl90aW1lbGluZS5sZW5ndGgsbj10O2lmKDA8dCYmdGhpcy5fdGltZWxpbmVbdC0xXS50aW1lPD1lKXJldHVybiB0LTE7Zm9yKDtpPG47KXt2YXIgcj1NYXRoLmZsb29yKGkrKG4taSkvMikscz10aGlzLl90aW1lbGluZVtyXSxoPXRoaXMuX3RpbWVsaW5lW3IrMV07aWYocy50aW1lPT09ZSl7Zm9yKHZhciBsPXI7bDx0aGlzLl90aW1lbGluZS5sZW5ndGg7bCsrKXt0aGlzLl90aW1lbGluZVtsXS50aW1lPT09ZSYmKHI9bCl9cmV0dXJuIHJ9aWYocy50aW1lPGUmJmgudGltZT5lKXJldHVybiByO3MudGltZT5lP249cjpzLnRpbWU8ZSYmKGk9cisxKX1yZXR1cm4tMX0saS5UaW1lbGluZS5wcm90b3R5cGUuX2l0ZXJhdGU9ZnVuY3Rpb24oZSxpLHQpe3RoaXMuX2l0ZXJhdGluZz0hMCxpPXRoaXMuZGVmYXVsdEFyZyhpLDApLHQ9dGhpcy5kZWZhdWx0QXJnKHQsdGhpcy5fdGltZWxpbmUubGVuZ3RoLTEpO2Zvcih2YXIgbj1pO248PXQ7bisrKWUodGhpcy5fdGltZWxpbmVbbl0pO2lmKHRoaXMuX2l0ZXJhdGluZz0hMSwwPHRoaXMuX3RvUmVtb3ZlLmxlbmd0aCl7Zm9yKHZhciByPTA7cjx0aGlzLl90b1JlbW92ZS5sZW5ndGg7cisrKXt2YXIgcz10aGlzLl90aW1lbGluZS5pbmRleE9mKHRoaXMuX3RvUmVtb3ZlW3JdKTstMSE9PXMmJnRoaXMuX3RpbWVsaW5lLnNwbGljZShzLDEpfXRoaXMuX3RvUmVtb3ZlPVtdfX0saS5UaW1lbGluZS5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5faXRlcmF0ZShlKSx0aGlzfSxpLlRpbWVsaW5lLnByb3RvdHlwZS5mb3JFYWNoQmVmb3JlPWZ1bmN0aW9uKGUsaSl7dmFyIHQ9dGhpcy5fc2VhcmNoKGUpO3JldHVybi0xIT09dCYmdGhpcy5faXRlcmF0ZShpLDAsdCksdGhpc30saS5UaW1lbGluZS5wcm90b3R5cGUuZm9yRWFjaEFmdGVyPWZ1bmN0aW9uKGUsaSl7dmFyIHQ9dGhpcy5fc2VhcmNoKGUpO3JldHVybiB0aGlzLl9pdGVyYXRlKGksdCsxKSx0aGlzfSxpLlRpbWVsaW5lLnByb3RvdHlwZS5mb3JFYWNoRnJvbT1mdW5jdGlvbihlLGkpe2Zvcih2YXIgdD10aGlzLl9zZWFyY2goZSk7MDw9dCYmdGhpcy5fdGltZWxpbmVbdF0udGltZT49ZTspdC0tO3JldHVybiB0aGlzLl9pdGVyYXRlKGksdCsxKSx0aGlzfSxpLlRpbWVsaW5lLnByb3RvdHlwZS5mb3JFYWNoQXRUaW1lPWZ1bmN0aW9uKGksdCl7dmFyIGU9dGhpcy5fc2VhcmNoKGkpO3JldHVybi0xIT09ZSYmdGhpcy5faXRlcmF0ZShmdW5jdGlvbihlKXtlLnRpbWU9PT1pJiZ0KGUpfSwwLGUpLHRoaXN9LGkuVGltZWxpbmUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtpLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fdGltZWxpbmU9bnVsbCx0aGlzLl90b1JlbW92ZT1udWxsfSxpLlRpbWVsaW5lfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oMSksX193ZWJwYWNrX3JlcXVpcmVfXygyKV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKHQpe1widXNlIHN0cmljdFwiO3JldHVybiB0Lk5lZ2F0ZT1mdW5jdGlvbigpe3RoaXMuX211bHRpcGx5PXRoaXMuaW5wdXQ9dGhpcy5vdXRwdXQ9bmV3IHQuTXVsdGlwbHkoLTEpfSx0LmV4dGVuZCh0Lk5lZ2F0ZSx0LlNpZ25hbEJhc2UpLHQuTmVnYXRlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIHQucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9tdWx0aXBseS5kaXNwb3NlKCksdGhpcy5fbXVsdGlwbHk9bnVsbCx0aGlzfSx0Lk5lZ2F0ZX0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzshKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbX193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9fd2VicGFja19yZXF1aXJlX18oMSksX193ZWJwYWNrX3JlcXVpcmVfXyg2KV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO3JldHVybiBlLkdyZWF0ZXJUaGFuWmVybz1mdW5jdGlvbigpe3RoaXMuX3RocmVzaD10aGlzLm91dHB1dD1uZXcgZS5XYXZlU2hhcGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlPD0wPzA6MX0sMTI3KSx0aGlzLl9zY2FsZT10aGlzLmlucHV0PW5ldyBlLk11bHRpcGx5KDFlNCksdGhpcy5fc2NhbGUuY29ubmVjdCh0aGlzLl90aHJlc2gpfSxlLmV4dGVuZChlLkdyZWF0ZXJUaGFuWmVybyxlLlNpZ25hbEJhc2UpLGUuR3JlYXRlclRoYW5aZXJvLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIGUucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9zY2FsZS5kaXNwb3NlKCksdGhpcy5fc2NhbGU9bnVsbCx0aGlzLl90aHJlc2guZGlzcG9zZSgpLHRoaXMuX3RocmVzaD1udWxsLHRoaXN9LGUuR3JlYXRlclRoYW5aZXJvfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IWZ1bmN0aW9uKGUsdCl7IHRydWU/IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW10sIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9ICh0KSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAodHlwZW9mIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9PT0gJ2Z1bmN0aW9uJyA/XG5cdFx0XHRcdChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18uYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXykpIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpOnVuZGVmaW5lZH0odGhpcyxmdW5jdGlvbigpe3ZhciByPWZ1bmN0aW9uKGUsdCl7dGhpcy5fZHJhZ2dlZD0hMSx0aGlzLl9lbGVtZW50PWUsdGhpcy5fYmluZGVkTW92ZT10aGlzLl9tb3ZlZC5iaW5kKHRoaXMpLHRoaXMuX2JpbmRlZEVuZD10aGlzLl9lbmRlZC5iaW5kKHRoaXMsdCksZS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLHRoaXMuX2JpbmRlZEVuZCksZS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsdGhpcy5fYmluZGVkTW92ZSksZS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIix0aGlzLl9iaW5kZWRFbmQpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIix0aGlzLl9iaW5kZWRFbmQpfTtmdW5jdGlvbiBvKGUpe3JldHVyblwicnVubmluZ1wiPT09ZS5zdGF0ZX1yZXR1cm4gci5wcm90b3R5cGUuX21vdmVkPWZ1bmN0aW9uKGUpe3RoaXMuX2RyYWdnZWQ9ITB9LHIucHJvdG90eXBlLl9lbmRlZD1mdW5jdGlvbihlKXt0aGlzLl9kcmFnZ2VkfHxmdW5jdGlvbihlKXt2YXIgdD1lLmNyZWF0ZUJ1ZmZlcigxLDEsZS5zYW1wbGVSYXRlKSxuPWUuY3JlYXRlQnVmZmVyU291cmNlKCk7bi5idWZmZXI9dCxuLmNvbm5lY3QoZS5kZXN0aW5hdGlvbiksbi5zdGFydCgwKSxlLnJlc3VtZSYmZS5yZXN1bWUoKX0oZSksdGhpcy5fZHJhZ2dlZD0hMX0sci5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuX2VsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIix0aGlzLl9iaW5kZWRFbmQpLHRoaXMuX2VsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLHRoaXMuX2JpbmRlZE1vdmUpLHRoaXMuX2VsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsdGhpcy5fYmluZGVkRW5kKSx0aGlzLl9lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsdGhpcy5fYmluZGVkRW5kKSx0aGlzLl9iaW5kZWRNb3ZlPW51bGwsdGhpcy5fYmluZGVkRW5kPW51bGwsdGhpcy5fZWxlbWVudD1udWxsfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bmV3IFByb21pc2UoZnVuY3Rpb24oZSl7IWZ1bmN0aW9uKHQsbil7byh0KT9uKCk6ZnVuY3Rpb24gZSgpe28odCk/bigpOihyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZSksdC5yZXN1bWUmJnQucmVzdW1lKCkpfSgpfSh0LGUpfSksZD1bXTtyZXR1cm4gZnVuY3Rpb24gZSh0LG4saSl7aWYoQXJyYXkuaXNBcnJheSh0KXx8Tm9kZUxpc3QmJnQgaW5zdGFuY2VvZiBOb2RlTGlzdClmb3IodmFyIGQ9MDtkPHQubGVuZ3RoO2QrKyllKHRbZF0sbixpKTtlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiB0KWUoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KSxuLGkpO2Vsc2UgaWYodC5qcXVlcnkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG9BcnJheSllKHQudG9BcnJheSgpLG4saSk7ZWxzZSBpZihFbGVtZW50JiZ0IGluc3RhbmNlb2YgRWxlbWVudCl7dmFyIG89bmV3IHIodCxpKTtuLnB1c2gobyl9fShlPWV8fGRvY3VtZW50LmJvZHksZCx0KSxpLnRoZW4oZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPGQubGVuZ3RoO2UrKylkW2VdLmRpc3Bvc2UoKTtkPW51bGwsbiYmbigpfSksaX19KTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oMiksX193ZWJwYWNrX3JlcXVpcmVfXygzMiksX193ZWJwYWNrX3JlcXVpcmVfXygzOCksX193ZWJwYWNrX3JlcXVpcmVfXygxMCldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihpKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gaS5Dcm9zc0ZhZGU9ZnVuY3Rpb24oZSl7dGhpcy5jcmVhdGVJbnNPdXRzKDIsMSksdGhpcy5hPXRoaXMuaW5wdXRbMF09bmV3IGkuR2Fpbix0aGlzLmI9dGhpcy5pbnB1dFsxXT1uZXcgaS5HYWluLHRoaXMuZmFkZT1uZXcgaS5TaWduYWwodGhpcy5kZWZhdWx0QXJnKGUsLjUpLGkuVHlwZS5Ob3JtYWxSYW5nZSksdGhpcy5fZXF1YWxQb3dlckE9bmV3IGkuRXF1YWxQb3dlckdhaW4sdGhpcy5fZXF1YWxQb3dlckI9bmV3IGkuRXF1YWxQb3dlckdhaW4sdGhpcy5faW52ZXJ0PW5ldyBpLkV4cHIoXCIxIC0gJDBcIiksdGhpcy5hLmNvbm5lY3QodGhpcy5vdXRwdXQpLHRoaXMuYi5jb25uZWN0KHRoaXMub3V0cHV0KSx0aGlzLmZhZGUuY2hhaW4odGhpcy5fZXF1YWxQb3dlckIsdGhpcy5iLmdhaW4pLHRoaXMuZmFkZS5jaGFpbih0aGlzLl9pbnZlcnQsdGhpcy5fZXF1YWxQb3dlckEsdGhpcy5hLmdhaW4pLHRoaXMuX3JlYWRPbmx5KFwiZmFkZVwiKX0saS5leHRlbmQoaS5Dcm9zc0ZhZGUpLGkuQ3Jvc3NGYWRlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIGkucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl93cml0YWJsZShcImZhZGVcIiksdGhpcy5fZXF1YWxQb3dlckEuZGlzcG9zZSgpLHRoaXMuX2VxdWFsUG93ZXJBPW51bGwsdGhpcy5fZXF1YWxQb3dlckIuZGlzcG9zZSgpLHRoaXMuX2VxdWFsUG93ZXJCPW51bGwsdGhpcy5mYWRlLmRpc3Bvc2UoKSx0aGlzLmZhZGU9bnVsbCx0aGlzLl9pbnZlcnQuZGlzcG9zZSgpLHRoaXMuX2ludmVydD1udWxsLHRoaXMuYS5kaXNwb3NlKCksdGhpcy5hPW51bGwsdGhpcy5iLmRpc3Bvc2UoKSx0aGlzLmI9bnVsbCx0aGlzfSxpLkNyb3NzRmFkZX0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbiFmdW5jdGlvbigpe3ZhciBsLHM9W107ZnVuY3Rpb24gcChlKXt2YXIgbz10aGlzLG49e30saT0tMTt0aGlzLnBhcmFtZXRlcnMuZm9yRWFjaChmdW5jdGlvbihlLHQpe3ZhciByPXNbKytpXXx8KHNbaV09bmV3IEZsb2F0MzJBcnJheShvLmJ1ZmZlclNpemUpKTtyLmZpbGwoZS52YWx1ZSksblt0XT1yfSksdGhpcy5wcm9jZXNzb3IucmVhbG0uZXhlYyhcInNlbGYuc2FtcGxlUmF0ZT1zYW1wbGVSYXRlPVwiK3RoaXMuY29udGV4dC5zYW1wbGVSYXRlK1wiO3NlbGYuY3VycmVudFRpbWU9Y3VycmVudFRpbWU9XCIrdGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lKTt2YXIgdD1hKGUuaW5wdXRCdWZmZXIpLHI9YShlLm91dHB1dEJ1ZmZlcik7dGhpcy5pbnN0YW5jZS5wcm9jZXNzKFt0XSxbcl0sbil9ZnVuY3Rpb24gYShlKXtmb3IodmFyIHQ9W10scj0wO3I8ZS5udW1iZXJPZkNoYW5uZWxzO3IrKyl0W3JdPWUuZ2V0Q2hhbm5lbERhdGEocik7cmV0dXJuIHR9ZnVuY3Rpb24gZihlKXtyZXR1cm4gZS4kJHByb2Nlc3NvcnN8fChlLiQkcHJvY2Vzc29ycz17fSl9ZnVuY3Rpb24gZShlKXt0aGlzLiQkY29udGV4dD1lfVwiZnVuY3Rpb25cIiE9dHlwZW9mIEF1ZGlvV29ya2xldE5vZGUmJihzZWxmLkF1ZGlvV29ya2xldE5vZGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWYoZSlbdF0sbj1lLmNyZWF0ZVNjcmlwdFByb2Nlc3Nvcih2b2lkIDAsMixyJiZyLm91dHB1dENoYW5uZWxDb3VudD9yLm91dHB1dENoYW5uZWxDb3VudFswXToyKTtpZihuLnBhcmFtZXRlcnM9bmV3IE1hcCxvLnByb3BlcnRpZXMpZm9yKHZhciBpPTA7aTxvLnByb3BlcnRpZXMubGVuZ3RoO2krKyl7dmFyIHM9by5wcm9wZXJ0aWVzW2ldLGE9ZS5jcmVhdGVHYWluKCkuZ2FpbjthLnZhbHVlPXMuZGVmYXVsdFZhbHVlLG4ucGFyYW1ldGVycy5zZXQocy5uYW1lLGEpfXZhciB1PW5ldyBNZXNzYWdlQ2hhbm5lbDtsPXUucG9ydDI7dmFyIGM9bmV3IG8uUHJvY2Vzc29yKHJ8fHt9KTtyZXR1cm4gbD1udWxsLG4ucG9ydD11LnBvcnQxLG4ucHJvY2Vzc29yPW8sbi5pbnN0YW5jZT1jLG4ub25hdWRpb3Byb2Nlc3M9cCxufSxPYmplY3QuZGVmaW5lUHJvcGVydHkoKHNlbGYuQXVkaW9Db250ZXh0fHxzZWxmLndlYmtpdEF1ZGlvQ29udGV4dCkucHJvdG90eXBlLFwiYXVkaW9Xb3JrbGV0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLiQkYXVkaW9Xb3JrbGV0fHwodGhpcy4kJGF1ZGlvV29ya2xldD1uZXcgc2VsZi5BdWRpb1dvcmtsZXQodGhpcykpfX0pLHNlbGYuQXVkaW9Xb3JrbGV0PShlLnByb3RvdHlwZS5hZGRNb2R1bGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3JldHVybiBmZXRjaChlKS50aGVuKGZ1bmN0aW9uKGUpe2lmKCFlLm9rKXRocm93IEVycm9yKGUuc3RhdHVzKTtyZXR1cm4gZS50ZXh0KCl9KS50aGVuKGZ1bmN0aW9uKGUpe3ZhciByPXtzYW1wbGVSYXRlOjAsY3VycmVudFRpbWU6MCxBdWRpb1dvcmtsZXRQcm9jZXNzb3I6ZnVuY3Rpb24oKXt0aGlzLnBvcnQ9bH0scmVnaXN0ZXJQcm9jZXNzb3I6ZnVuY3Rpb24oZSx0KXtmKG4uJCRjb250ZXh0KVtlXT17cmVhbG06byxjb250ZXh0OnIsUHJvY2Vzc29yOnQscHJvcGVydGllczp0LnBhcmFtZXRlckRlc2NyaXB0b3JzfHxbXX19fSxvPW5ldyBmdW5jdGlvbihlLHQpe3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7ci5zdHlsZS5jc3NUZXh0PVwicG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDotOTk5cHg7d2lkdGg6MXB4O2hlaWdodDoxcHg7XCIsdC5hcHBlbmRDaGlsZChyKTt2YXIgbz1yLmNvbnRlbnRXaW5kb3csbj1vLmRvY3VtZW50LGk9XCJ2YXIgd2luZG93LCRob29rXCI7Zm9yKHZhciBzIGluIG8pcyBpbiBlfHxcImV2YWxcIj09PXN8fChpKz1cIixcIixpKz1zKTtmb3IodmFyIGEgaW4gZSlpKz1cIixcIixpKz1hLGkrPVwiPXNlbGYuXCIsaSs9YTt2YXIgdT1uLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7dS5hcHBlbmRDaGlsZChuLmNyZWF0ZVRleHROb2RlKCdmdW5jdGlvbiAkaG9vayhzZWxmLGNvbnNvbGUpIHtcInVzZSBzdHJpY3RcIjtcXG4gICAgICAgICcraStcIjtyZXR1cm4gZnVuY3Rpb24oKSB7cmV0dXJuIGV2YWwoYXJndW1lbnRzWzBdKX19XCIpKSxuLmJvZHkuYXBwZW5kQ2hpbGQodSksdGhpcy5leGVjPW8uJGhvb2soZSxjb25zb2xlKX0oci5zZWxmPXIsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTtyZXR1cm4gby5leGVjKCh0JiZ0LnRyYW5zcGlsZXx8U3RyaW5nKShlKSksbnVsbH0pfSxlKSl9KCk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8qKlxuICogVGhpcyBtb2R1bGUgaGFzIHNoaW1zXG4gKi9cblxuKGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gZml4U2V0VGFyZ2V0KHBhcmFtKSB7XG4gICAgaWYgKCFwYXJhbSkgXG4gICAgICByZXR1cm47XG4gICAgaWYgKCFwYXJhbS5zZXRUYXJnZXRBdFRpbWUpIHBhcmFtLnNldFRhcmdldEF0VGltZSA9IHBhcmFtLnNldFRhcmdldFZhbHVlQXRUaW1lO1xuICB9XG5cbiAgaWYgKHdpbmRvdy5oYXNPd25Qcm9wZXJ0eSgnd2Via2l0QXVkaW9Db250ZXh0JykgJiYgIXdpbmRvdy5oYXNPd25Qcm9wZXJ0eSgnQXVkaW9Db250ZXh0JykpIHtcbiAgICB3aW5kb3cuQXVkaW9Db250ZXh0ID0gd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtcbiAgICBpZiAodHlwZW9mIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlR2FpbiAhPT0gJ2Z1bmN0aW9uJykgQXVkaW9Db250ZXh0LnByb3RvdHlwZS5jcmVhdGVHYWluID0gQXVkaW9Db250ZXh0LnByb3RvdHlwZS5jcmVhdGVHYWluTm9kZTtcbiAgICBpZiAodHlwZW9mIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlRGVsYXkgIT09ICdmdW5jdGlvbicpIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlRGVsYXkgPSBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZURlbGF5Tm9kZTtcbiAgICBpZiAodHlwZW9mIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlU2NyaXB0UHJvY2Vzc29yICE9PSAnZnVuY3Rpb24nKSBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZVNjcmlwdFByb2Nlc3NvciA9IEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlSmF2YVNjcmlwdE5vZGU7XG4gICAgaWYgKHR5cGVvZiBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZVBlcmlvZGljV2F2ZSAhPT0gJ2Z1bmN0aW9uJykgQXVkaW9Db250ZXh0LnByb3RvdHlwZS5jcmVhdGVQZXJpb2RpY1dhdmUgPSBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZVdhdmVUYWJsZTtcbiAgICBBdWRpb0NvbnRleHQucHJvdG90eXBlLmludGVybmFsX2NyZWF0ZUdhaW4gPSBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZUdhaW47XG5cbiAgICBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZUdhaW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbm9kZSA9IHRoaXMuaW50ZXJuYWxfY3JlYXRlR2FpbigpO1xuICAgICAgZml4U2V0VGFyZ2V0KG5vZGUuZ2Fpbik7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuXG4gICAgQXVkaW9Db250ZXh0LnByb3RvdHlwZS5pbnRlcm5hbF9jcmVhdGVEZWxheSA9IEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlRGVsYXk7XG5cbiAgICBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZURlbGF5ID0gZnVuY3Rpb24gKG1heERlbGF5VGltZSkge1xuICAgICAgdmFyIG5vZGUgPSBtYXhEZWxheVRpbWUgPyB0aGlzLmludGVybmFsX2NyZWF0ZURlbGF5KG1heERlbGF5VGltZSkgOiB0aGlzLmludGVybmFsX2NyZWF0ZURlbGF5KCk7XG4gICAgICBmaXhTZXRUYXJnZXQobm9kZS5kZWxheVRpbWUpO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcblxuICAgIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuaW50ZXJuYWxfY3JlYXRlQnVmZmVyU291cmNlID0gQXVkaW9Db250ZXh0LnByb3RvdHlwZS5jcmVhdGVCdWZmZXJTb3VyY2U7XG5cbiAgICBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZUJ1ZmZlclNvdXJjZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBub2RlID0gdGhpcy5pbnRlcm5hbF9jcmVhdGVCdWZmZXJTb3VyY2UoKTtcblxuICAgICAgaWYgKCFub2RlLnN0YXJ0KSB7XG4gICAgICAgIG5vZGUuc3RhcnQgPSBmdW5jdGlvbiAod2hlbiwgb2Zmc2V0LCBkdXJhdGlvbikge1xuICAgICAgICAgIGlmIChvZmZzZXQgfHwgZHVyYXRpb24pIHRoaXMubm90ZUdyYWluT24od2hlbiB8fCAwLCBvZmZzZXQsIGR1cmF0aW9uKTtlbHNlIHRoaXMubm90ZU9uKHdoZW4gfHwgMCk7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLmludGVybmFsX3N0YXJ0ID0gbm9kZS5zdGFydDtcblxuICAgICAgICBub2RlLnN0YXJ0ID0gZnVuY3Rpb24gKHdoZW4sIG9mZnNldCwgZHVyYXRpb24pIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGR1cmF0aW9uICE9PSAndW5kZWZpbmVkJykgbm9kZS5pbnRlcm5hbF9zdGFydCh3aGVuIHx8IDAsIG9mZnNldCwgZHVyYXRpb24pO2Vsc2Ugbm9kZS5pbnRlcm5hbF9zdGFydCh3aGVuIHx8IDAsIG9mZnNldCB8fCAwKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFub2RlLnN0b3ApIHtcbiAgICAgICAgbm9kZS5zdG9wID0gZnVuY3Rpb24gKHdoZW4pIHtcbiAgICAgICAgICB0aGlzLm5vdGVPZmYod2hlbiB8fCAwKTtcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUuaW50ZXJuYWxfc3RvcCA9IG5vZGUuc3RvcDtcblxuICAgICAgICBub2RlLnN0b3AgPSBmdW5jdGlvbiAod2hlbikge1xuICAgICAgICAgIG5vZGUuaW50ZXJuYWxfc3RvcCh3aGVuIHx8IDApO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBmaXhTZXRUYXJnZXQobm9kZS5wbGF5YmFja1JhdGUpO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcblxuICAgIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuaW50ZXJuYWxfY3JlYXRlRHluYW1pY3NDb21wcmVzc29yID0gQXVkaW9Db250ZXh0LnByb3RvdHlwZS5jcmVhdGVEeW5hbWljc0NvbXByZXNzb3I7XG5cbiAgICBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZUR5bmFtaWNzQ29tcHJlc3NvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBub2RlID0gdGhpcy5pbnRlcm5hbF9jcmVhdGVEeW5hbWljc0NvbXByZXNzb3IoKTtcbiAgICAgIGZpeFNldFRhcmdldChub2RlLnRocmVzaG9sZCk7XG4gICAgICBmaXhTZXRUYXJnZXQobm9kZS5rbmVlKTtcbiAgICAgIGZpeFNldFRhcmdldChub2RlLnJhdGlvKTtcbiAgICAgIGZpeFNldFRhcmdldChub2RlLnJlZHVjdGlvbik7XG4gICAgICBmaXhTZXRUYXJnZXQobm9kZS5hdHRhY2spO1xuICAgICAgZml4U2V0VGFyZ2V0KG5vZGUucmVsZWFzZSk7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuXG4gICAgQXVkaW9Db250ZXh0LnByb3RvdHlwZS5pbnRlcm5hbF9jcmVhdGVCaXF1YWRGaWx0ZXIgPSBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZUJpcXVhZEZpbHRlcjtcblxuICAgIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlQmlxdWFkRmlsdGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG5vZGUgPSB0aGlzLmludGVybmFsX2NyZWF0ZUJpcXVhZEZpbHRlcigpO1xuICAgICAgZml4U2V0VGFyZ2V0KG5vZGUuZnJlcXVlbmN5KTtcbiAgICAgIGZpeFNldFRhcmdldChub2RlLmRldHVuZSk7XG4gICAgICBmaXhTZXRUYXJnZXQobm9kZS5RKTtcbiAgICAgIGZpeFNldFRhcmdldChub2RlLmdhaW4pO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcblxuICAgIGlmICh0eXBlb2YgQXVkaW9Db250ZXh0LnByb3RvdHlwZS5jcmVhdGVPc2NpbGxhdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICBBdWRpb0NvbnRleHQucHJvdG90eXBlLmludGVybmFsX2NyZWF0ZU9zY2lsbGF0b3IgPSBBdWRpb0NvbnRleHQucHJvdG90eXBlLmNyZWF0ZU9zY2lsbGF0b3I7XG5cbiAgICAgIEF1ZGlvQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlT3NjaWxsYXRvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLmludGVybmFsX2NyZWF0ZU9zY2lsbGF0b3IoKTtcblxuICAgICAgICBpZiAoIW5vZGUuc3RhcnQpIHtcbiAgICAgICAgICBub2RlLnN0YXJ0ID0gZnVuY3Rpb24gKHdoZW4pIHtcbiAgICAgICAgICAgIHRoaXMubm90ZU9uKHdoZW4gfHwgMCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBub2RlLmludGVybmFsX3N0YXJ0ID0gbm9kZS5zdGFydDtcblxuICAgICAgICAgIG5vZGUuc3RhcnQgPSBmdW5jdGlvbiAod2hlbikge1xuICAgICAgICAgICAgbm9kZS5pbnRlcm5hbF9zdGFydCh3aGVuIHx8IDApO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIW5vZGUuc3RvcCkge1xuICAgICAgICAgIG5vZGUuc3RvcCA9IGZ1bmN0aW9uICh3aGVuKSB7XG4gICAgICAgICAgICB0aGlzLm5vdGVPZmYod2hlbiB8fCAwKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5vZGUuaW50ZXJuYWxfc3RvcCA9IG5vZGUuc3RvcDtcblxuICAgICAgICAgIG5vZGUuc3RvcCA9IGZ1bmN0aW9uICh3aGVuKSB7XG4gICAgICAgICAgICBub2RlLmludGVybmFsX3N0b3Aod2hlbiB8fCAwKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFub2RlLnNldFBlcmlvZGljV2F2ZSkgbm9kZS5zZXRQZXJpb2RpY1dhdmUgPSBub2RlLnNldFdhdmVUYWJsZTtcbiAgICAgICAgZml4U2V0VGFyZ2V0KG5vZGUuZnJlcXVlbmN5KTtcbiAgICAgICAgZml4U2V0VGFyZ2V0KG5vZGUuZGV0dW5lKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGlmICh3aW5kb3cuaGFzT3duUHJvcGVydHkoJ3dlYmtpdE9mZmxpbmVBdWRpb0NvbnRleHQnKSAmJiAhd2luZG93Lmhhc093blByb3BlcnR5KCdPZmZsaW5lQXVkaW9Db250ZXh0JykpIHtcbiAgICB3aW5kb3cuT2ZmbGluZUF1ZGlvQ29udGV4dCA9IHdpbmRvdy53ZWJraXRPZmZsaW5lQXVkaW9Db250ZXh0O1xuICB9XG59KSh3aW5kb3cpOyBcblxuXG5uYXZpZ2F0b3IuZ2V0VXNlck1lZGlhID0gbmF2aWdhdG9yLmdldFVzZXJNZWRpYSB8fCBuYXZpZ2F0b3Iud2Via2l0R2V0VXNlck1lZGlhIHx8IG5hdmlnYXRvci5tb3pHZXRVc2VyTWVkaWEgfHwgbmF2aWdhdG9yLm1zR2V0VXNlck1lZGlhO1xuLyoqXG4gKiBEZXRlcm1pbmUgd2hpY2ggZmlsZXR5cGVzIGFyZSBzdXBwb3J0ZWQgKGluc3BpcmVkIGJ5IGJ1enouanMpXG4gKiBUaGUgYXVkaW8gZWxlbWVudCAoZWwpIHdpbGwgb25seSBiZSB1c2VkIHRvIHRlc3QgYnJvd3NlciBzdXBwb3J0IGZvciB2YXJpb3VzIGF1ZGlvIGZvcm1hdHNcbiAqL1xuXG52YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhdWRpbycpO1xuXG5wNS5wcm90b3R5cGUuaXNTdXBwb3J0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhIWVsLmNhblBsYXlUeXBlO1xufTtcblxudmFyIGlzT0dHU3VwcG9ydGVkID0gZnVuY3Rpb24gaXNPR0dTdXBwb3J0ZWQoKSB7XG4gIHJldHVybiAhIWVsLmNhblBsYXlUeXBlICYmIGVsLmNhblBsYXlUeXBlKCdhdWRpby9vZ2c7IGNvZGVjcz1cInZvcmJpc1wiJyk7XG59O1xuXG52YXIgaXNNUDNTdXBwb3J0ZWQgPSBmdW5jdGlvbiBpc01QM1N1cHBvcnRlZCgpIHtcbiAgcmV0dXJuICEhZWwuY2FuUGxheVR5cGUgJiYgZWwuY2FuUGxheVR5cGUoJ2F1ZGlvL21wZWc7Jyk7XG59O1xuXG52YXIgaXNXQVZTdXBwb3J0ZWQgPSBmdW5jdGlvbiBpc1dBVlN1cHBvcnRlZCgpIHtcbiAgcmV0dXJuICEhZWwuY2FuUGxheVR5cGUgJiYgZWwuY2FuUGxheVR5cGUoJ2F1ZGlvL3dhdjsgY29kZWNzPVwiMVwiJyk7XG59O1xuXG52YXIgaXNBQUNTdXBwb3J0ZWQgPSBmdW5jdGlvbiBpc0FBQ1N1cHBvcnRlZCgpIHtcbiAgcmV0dXJuICEhZWwuY2FuUGxheVR5cGUgJiYgKGVsLmNhblBsYXlUeXBlKCdhdWRpby94LW00YTsnKSB8fCBlbC5jYW5QbGF5VHlwZSgnYXVkaW8vYWFjOycpKTtcbn07XG5cbnZhciBpc0FJRlN1cHBvcnRlZCA9IGZ1bmN0aW9uIGlzQUlGU3VwcG9ydGVkKCkge1xuICByZXR1cm4gISFlbC5jYW5QbGF5VHlwZSAmJiBlbC5jYW5QbGF5VHlwZSgnYXVkaW8veC1haWZmOycpO1xufTtcblxucDUucHJvdG90eXBlLmlzRmlsZVN1cHBvcnRlZCA9IGZ1bmN0aW9uIChleHRlbnNpb24pIHtcbiAgc3dpdGNoIChleHRlbnNpb24udG9Mb3dlckNhc2UoKSkge1xuICAgIGNhc2UgJ21wMyc6XG4gICAgICByZXR1cm4gaXNNUDNTdXBwb3J0ZWQoKTtcblxuICAgIGNhc2UgJ3dhdic6XG4gICAgICByZXR1cm4gaXNXQVZTdXBwb3J0ZWQoKTtcblxuICAgIGNhc2UgJ29nZyc6XG4gICAgICByZXR1cm4gaXNPR0dTdXBwb3J0ZWQoKTtcblxuICAgIGNhc2UgJ2FhYyc6XG4gICAgY2FzZSAnbTRhJzpcbiAgICBjYXNlICdtcDQnOlxuICAgICAgcmV0dXJuIGlzQUFDU3VwcG9ydGVkKCk7XG5cbiAgICBjYXNlICdhaWYnOlxuICAgIGNhc2UgJ2FpZmYnOlxuICAgICAgcmV0dXJuIGlzQUlGU3VwcG9ydGVkKCk7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgZztnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KCk7dHJ5e2c9Z3x8bmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKX1jYXRjaCh0KXtcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiYoZz13aW5kb3cpfW1vZHVsZS5leHBvcnRzPWc7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuIF9fd2VicGFja19leHBvcnRzX19bXCJkZWZhdWx0XCJdID0gKFwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFxcXCJmdW5jdGlvblxcXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXFxcInN5bWJvbFxcXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcXFwiZnVuY3Rpb25cXFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFxcXCJzeW1ib2xcXFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XFxuXFxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXFxcIm9iamVjdFxcXCIgfHwgdHlwZW9mIGNhbGwgPT09IFxcXCJmdW5jdGlvblxcXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XFxuXFxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFxcXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcXFwiKTsgfSByZXR1cm4gc2VsZjsgfVxcblxcbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFxcXCJmdW5jdGlvblxcXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblxcXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cXG5cXG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7IHZhciBfY2FjaGUgPSB0eXBlb2YgTWFwID09PSBcXFwiZnVuY3Rpb25cXFwiID8gbmV3IE1hcCgpIDogdW5kZWZpbmVkOyBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykgeyBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIV9pc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSkgcmV0dXJuIENsYXNzOyBpZiAodHlwZW9mIENsYXNzICE9PSBcXFwiZnVuY3Rpb25cXFwiKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXFxcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXFxcIik7IH0gaWYgKHR5cGVvZiBfY2FjaGUgIT09IFxcXCJ1bmRlZmluZWRcXFwiKSB7IGlmIChfY2FjaGUuaGFzKENsYXNzKSkgcmV0dXJuIF9jYWNoZS5nZXQoQ2xhc3MpOyBfY2FjaGUuc2V0KENsYXNzLCBXcmFwcGVyKTsgfSBmdW5jdGlvbiBXcmFwcGVyKCkgeyByZXR1cm4gX2NvbnN0cnVjdChDbGFzcywgYXJndW1lbnRzLCBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3IpOyB9IFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IFdyYXBwZXIsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IHJldHVybiBfc2V0UHJvdG90eXBlT2YoV3JhcHBlciwgQ2xhc3MpOyB9OyByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7IH1cXG5cXG5mdW5jdGlvbiBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXFxcInVuZGVmaW5lZFxcXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFxcXCJmdW5jdGlvblxcXCIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxcblxcbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykgeyBpZiAoaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHsgX2NvbnN0cnVjdCA9IFJlZmxlY3QuY29uc3RydWN0OyB9IGVsc2UgeyBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7IHZhciBhID0gW251bGxdOyBhLnB1c2guYXBwbHkoYSwgYXJncyk7IHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTsgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7IGlmIChDbGFzcykgX3NldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpOyByZXR1cm4gaW5zdGFuY2U7IH07IH0gcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgfVxcblxcbmZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKSB7IHJldHVybiBGdW5jdGlvbi50b1N0cmluZy5jYWxsKGZuKS5pbmRleE9mKFxcXCJbbmF0aXZlIGNvZGVdXFxcIikgIT09IC0xOyB9XFxuXFxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cXG5cXG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9XFxuXFxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cXFwiKTsgfSB9XFxuXFxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXFxcInZhbHVlXFxcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cXG5cXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxcblxcbi8vIGltcG9ydCBkZXBlbmRlbmNpZXMgdmlhIHByZXZhbC5yZXF1aXJlIHNvIHRoYXQgdGhleSdyZSBhdmFpbGFibGUgYXMgdmFsdWVzIGF0IGNvbXBpbGUgdGltZVxcbnZhciBwcm9jZXNzb3JOYW1lcyA9IHtcXG4gIFxcXCJyZWNvcmRlclByb2Nlc3NvclxcXCI6IFxcXCJyZWNvcmRlci1wcm9jZXNzb3JcXFwiLFxcbiAgXFxcInNvdW5kRmlsZVByb2Nlc3NvclxcXCI6IFxcXCJzb3VuZC1maWxlLXByb2Nlc3NvclxcXCIsXFxuICBcXFwiYW1wbGl0dWRlUHJvY2Vzc29yXFxcIjogXFxcImFtcGxpdHVkZS1wcm9jZXNzb3JcXFwiXFxufTtcXG52YXIgUmluZ0J1ZmZlciA9IHtcXG4gIFxcXCJkZWZhdWx0XFxcIjpcXG4gIC8qI19fUFVSRV9fKi9cXG4gIGZ1bmN0aW9uICgpIHtcXG4gICAgLyoqXFxuICAgICAqIEBjb25zdHJ1Y3RvclxcbiAgICAgKiBAcGFyYW0gIHtudW1iZXJ9IGxlbmd0aCBCdWZmZXIgbGVuZ3RoIGluIGZyYW1lcy5cXG4gICAgICogQHBhcmFtICB7bnVtYmVyfSBjaGFubmVsQ291bnQgQnVmZmVyIGNoYW5uZWwgY291bnQuXFxuICAgICAqL1xcbiAgICBmdW5jdGlvbiBSaW5nQnVmZmVyKGxlbmd0aCwgY2hhbm5lbENvdW50KSB7XFxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJpbmdCdWZmZXIpO1xcblxcbiAgICAgIHRoaXMuX3JlYWRJbmRleCA9IDA7XFxuICAgICAgdGhpcy5fd3JpdGVJbmRleCA9IDA7XFxuICAgICAgdGhpcy5fZnJhbWVzQXZhaWxhYmxlID0gMDtcXG4gICAgICB0aGlzLl9jaGFubmVsQ291bnQgPSBjaGFubmVsQ291bnQ7XFxuICAgICAgdGhpcy5fbGVuZ3RoID0gbGVuZ3RoO1xcbiAgICAgIHRoaXMuX2NoYW5uZWxEYXRhID0gW107XFxuXFxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9jaGFubmVsQ291bnQ7ICsraSkge1xcbiAgICAgICAgdGhpcy5fY2hhbm5lbERhdGFbaV0gPSBuZXcgRmxvYXQzMkFycmF5KGxlbmd0aCk7XFxuICAgICAgfVxcbiAgICB9XFxuICAgIC8qKlxcbiAgICAgKiBHZXR0ZXIgZm9yIEF2YWlsYWJsZSBmcmFtZXMgaW4gYnVmZmVyLlxcbiAgICAgKlxcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IEF2YWlsYWJsZSBmcmFtZXMgaW4gYnVmZmVyLlxcbiAgICAgKi9cXG5cXG5cXG4gICAgX2NyZWF0ZUNsYXNzKFJpbmdCdWZmZXIsIFt7XFxuICAgICAga2V5OiBcXFwicHVzaFxcXCIsXFxuXFxuICAgICAgLyoqXFxuICAgICAgICogUHVzaCBhIHNlcXVlbmNlIG9mIEZsb2F0MzJBcnJheXMgdG8gYnVmZmVyLlxcbiAgICAgICAqXFxuICAgICAgICogQHBhcmFtICB7YXJyYXl9IGFycmF5U2VxdWVuY2UgQSBzZXF1ZW5jZSBvZiBGbG9hdDMyQXJyYXlzLlxcbiAgICAgICAqL1xcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBwdXNoKGFycmF5U2VxdWVuY2UpIHtcXG4gICAgICAgIC8vIFRoZSBjaGFubmVsIGNvdW50IG9mIGFycmF5U2VxdWVuY2UgYW5kIHRoZSBsZW5ndGggb2YgZWFjaCBjaGFubmVsIG11c3RcXG4gICAgICAgIC8vIG1hdGNoIHdpdGggdGhpcyBidWZmZXIgb2JlamN0LlxcbiAgICAgICAgLy8gVHJhbnNmZXIgZGF0YSBmcm9tIHRoZSB8YXJyYXlTZXF1ZW5jZXwgc3RvcmFnZSB0byB0aGUgaW50ZXJuYWwgYnVmZmVyLlxcbiAgICAgICAgdmFyIHNvdXJjZUxlbmd0aCA9IGFycmF5U2VxdWVuY2VbMF0gPyBhcnJheVNlcXVlbmNlWzBdLmxlbmd0aCA6IDA7XFxuXFxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvdXJjZUxlbmd0aDsgKytpKSB7XFxuICAgICAgICAgIHZhciB3cml0ZUluZGV4ID0gKHRoaXMuX3dyaXRlSW5kZXggKyBpKSAlIHRoaXMuX2xlbmd0aDtcXG5cXG4gICAgICAgICAgZm9yICh2YXIgY2hhbm5lbCA9IDA7IGNoYW5uZWwgPCB0aGlzLl9jaGFubmVsQ291bnQ7ICsrY2hhbm5lbCkge1xcbiAgICAgICAgICAgIHRoaXMuX2NoYW5uZWxEYXRhW2NoYW5uZWxdW3dyaXRlSW5kZXhdID0gYXJyYXlTZXF1ZW5jZVtjaGFubmVsXVtpXTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcbiAgICAgICAgdGhpcy5fd3JpdGVJbmRleCArPSBzb3VyY2VMZW5ndGg7XFxuXFxuICAgICAgICBpZiAodGhpcy5fd3JpdGVJbmRleCA+PSB0aGlzLl9sZW5ndGgpIHtcXG4gICAgICAgICAgdGhpcy5fd3JpdGVJbmRleCA9IDA7XFxuICAgICAgICB9IC8vIEZvciBleGNlc3NpdmUgZnJhbWVzLCB0aGUgYnVmZmVyIHdpbGwgYmUgb3ZlcndyaXR0ZW4uXFxuXFxuXFxuICAgICAgICB0aGlzLl9mcmFtZXNBdmFpbGFibGUgKz0gc291cmNlTGVuZ3RoO1xcblxcbiAgICAgICAgaWYgKHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSA+IHRoaXMuX2xlbmd0aCkge1xcbiAgICAgICAgICB0aGlzLl9mcmFtZXNBdmFpbGFibGUgPSB0aGlzLl9sZW5ndGg7XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIC8qKlxcbiAgICAgICAqIFB1bGwgZGF0YSBvdXQgb2YgYnVmZmVyIGFuZCBmaWxsIGEgZ2l2ZW4gc2VxdWVuY2Ugb2YgRmxvYXQzMkFycmF5cy5cXG4gICAgICAgKlxcbiAgICAgICAqIEBwYXJhbSAge2FycmF5fSBhcnJheVNlcXVlbmNlIEFuIGFycmF5IG9mIEZsb2F0MzJBcnJheXMuXFxuICAgICAgICovXFxuXFxuICAgIH0sIHtcXG4gICAgICBrZXk6IFxcXCJwdWxsXFxcIixcXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gcHVsbChhcnJheVNlcXVlbmNlKSB7XFxuICAgICAgICAvLyBUaGUgY2hhbm5lbCBjb3VudCBvZiBhcnJheVNlcXVlbmNlIGFuZCB0aGUgbGVuZ3RoIG9mIGVhY2ggY2hhbm5lbCBtdXN0XFxuICAgICAgICAvLyBtYXRjaCB3aXRoIHRoaXMgYnVmZmVyIG9iZWpjdC5cXG4gICAgICAgIC8vIElmIHRoZSBGSUZPIGlzIGNvbXBsZXRlbHkgZW1wdHksIGRvIG5vdGhpbmcuXFxuICAgICAgICBpZiAodGhpcy5fZnJhbWVzQXZhaWxhYmxlID09PSAwKSB7XFxuICAgICAgICAgIHJldHVybjtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHZhciBkZXN0aW5hdGlvbkxlbmd0aCA9IGFycmF5U2VxdWVuY2VbMF0ubGVuZ3RoOyAvLyBUcmFuc2ZlciBkYXRhIGZyb20gdGhlIGludGVybmFsIGJ1ZmZlciB0byB0aGUgfGFycmF5U2VxdWVuY2V8IHN0b3JhZ2UuXFxuXFxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRlc3RpbmF0aW9uTGVuZ3RoOyArK2kpIHtcXG4gICAgICAgICAgdmFyIHJlYWRJbmRleCA9ICh0aGlzLl9yZWFkSW5kZXggKyBpKSAlIHRoaXMuX2xlbmd0aDtcXG5cXG4gICAgICAgICAgZm9yICh2YXIgY2hhbm5lbCA9IDA7IGNoYW5uZWwgPCB0aGlzLl9jaGFubmVsQ291bnQ7ICsrY2hhbm5lbCkge1xcbiAgICAgICAgICAgIGFycmF5U2VxdWVuY2VbY2hhbm5lbF1baV0gPSB0aGlzLl9jaGFubmVsRGF0YVtjaGFubmVsXVtyZWFkSW5kZXhdO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICB0aGlzLl9yZWFkSW5kZXggKz0gZGVzdGluYXRpb25MZW5ndGg7XFxuXFxuICAgICAgICBpZiAodGhpcy5fcmVhZEluZGV4ID49IHRoaXMuX2xlbmd0aCkge1xcbiAgICAgICAgICB0aGlzLl9yZWFkSW5kZXggPSAwO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgdGhpcy5fZnJhbWVzQXZhaWxhYmxlIC09IGRlc3RpbmF0aW9uTGVuZ3RoO1xcblxcbiAgICAgICAgaWYgKHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSA8IDApIHtcXG4gICAgICAgICAgdGhpcy5fZnJhbWVzQXZhaWxhYmxlID0gMDtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH0sIHtcXG4gICAgICBrZXk6IFxcXCJmcmFtZXNBdmFpbGFibGVcXFwiLFxcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZyYW1lc0F2YWlsYWJsZTtcXG4gICAgICB9XFxuICAgIH1dKTtcXG5cXG4gICAgcmV0dXJuIFJpbmdCdWZmZXI7XFxuICB9KClcXG59W1xcXCJkZWZhdWx0XFxcIl07XFxuXFxudmFyIFJlY29yZGVyUHJvY2Vzc29yID1cXG4vKiNfX1BVUkVfXyovXFxuZnVuY3Rpb24gKF9BdWRpb1dvcmtsZXRQcm9jZXNzbykge1xcbiAgX2luaGVyaXRzKFJlY29yZGVyUHJvY2Vzc29yLCBfQXVkaW9Xb3JrbGV0UHJvY2Vzc28pO1xcblxcbiAgZnVuY3Rpb24gUmVjb3JkZXJQcm9jZXNzb3Iob3B0aW9ucykge1xcbiAgICB2YXIgX3RoaXM7XFxuXFxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWNvcmRlclByb2Nlc3Nvcik7XFxuXFxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFJlY29yZGVyUHJvY2Vzc29yKS5jYWxsKHRoaXMpKTtcXG4gICAgdmFyIHByb2Nlc3Nvck9wdGlvbnMgPSBvcHRpb25zLnByb2Nlc3Nvck9wdGlvbnMgfHwge307XFxuICAgIF90aGlzLm51bU91dHB1dENoYW5uZWxzID0gb3B0aW9ucy5vdXRwdXRDaGFubmVsQ291bnQgfHwgMjtcXG4gICAgX3RoaXMubnVtSW5wdXRDaGFubmVscyA9IHByb2Nlc3Nvck9wdGlvbnMubnVtSW5wdXRDaGFubmVscyB8fCAyO1xcbiAgICBfdGhpcy5idWZmZXJTaXplID0gcHJvY2Vzc29yT3B0aW9ucy5idWZmZXJTaXplIHx8IDEwMjQ7XFxuICAgIF90aGlzLnJlY29yZGluZyA9IGZhbHNlO1xcblxcbiAgICBfdGhpcy5jbGVhcigpO1xcblxcbiAgICBfdGhpcy5wb3J0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xcbiAgICAgIHZhciBkYXRhID0gZXZlbnQuZGF0YTtcXG5cXG4gICAgICBpZiAoZGF0YS5uYW1lID09PSAnc3RhcnQnKSB7XFxuICAgICAgICBfdGhpcy5yZWNvcmQoZGF0YS5kdXJhdGlvbik7XFxuICAgICAgfSBlbHNlIGlmIChkYXRhLm5hbWUgPT09ICdzdG9wJykge1xcbiAgICAgICAgX3RoaXMuc3RvcCgpO1xcbiAgICAgIH1cXG4gICAgfTtcXG5cXG4gICAgcmV0dXJuIF90aGlzO1xcbiAgfVxcblxcbiAgX2NyZWF0ZUNsYXNzKFJlY29yZGVyUHJvY2Vzc29yLCBbe1xcbiAgICBrZXk6IFxcXCJwcm9jZXNzXFxcIixcXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByb2Nlc3MoaW5wdXRzKSB7XFxuICAgICAgaWYgKCF0aGlzLnJlY29yZGluZykge1xcbiAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgfSBlbHNlIGlmICh0aGlzLnNhbXBsZUxpbWl0ICYmIHRoaXMucmVjb3JkZWRTYW1wbGVzID49IHRoaXMuc2FtcGxlTGltaXQpIHtcXG4gICAgICAgIHRoaXMuc3RvcCgpO1xcbiAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgfVxcblxcbiAgICAgIHZhciBpbnB1dCA9IGlucHV0c1swXTtcXG4gICAgICB0aGlzLmlucHV0UmluZ0J1ZmZlci5wdXNoKGlucHV0KTtcXG5cXG4gICAgICBpZiAodGhpcy5pbnB1dFJpbmdCdWZmZXIuZnJhbWVzQXZhaWxhYmxlID49IHRoaXMuYnVmZmVyU2l6ZSkge1xcbiAgICAgICAgdGhpcy5pbnB1dFJpbmdCdWZmZXIucHVsbCh0aGlzLmlucHV0UmluZ0J1ZmZlckFycmF5U2VxdWVuY2UpO1xcblxcbiAgICAgICAgZm9yICh2YXIgY2hhbm5lbCA9IDA7IGNoYW5uZWwgPCB0aGlzLm51bU91dHB1dENoYW5uZWxzOyArK2NoYW5uZWwpIHtcXG4gICAgICAgICAgdmFyIGlucHV0Q2hhbm5lbENvcHkgPSB0aGlzLmlucHV0UmluZ0J1ZmZlckFycmF5U2VxdWVuY2VbY2hhbm5lbF0uc2xpY2UoKTtcXG5cXG4gICAgICAgICAgaWYgKGNoYW5uZWwgPT09IDApIHtcXG4gICAgICAgICAgICB0aGlzLmxlZnRCdWZmZXJzLnB1c2goaW5wdXRDaGFubmVsQ29weSk7XFxuXFxuICAgICAgICAgICAgaWYgKHRoaXMubnVtSW5wdXRDaGFubmVscyA9PT0gMSkge1xcbiAgICAgICAgICAgICAgdGhpcy5yaWdodEJ1ZmZlcnMucHVzaChpbnB1dENoYW5uZWxDb3B5KTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH0gZWxzZSBpZiAoY2hhbm5lbCA9PT0gMSAmJiB0aGlzLm51bUlucHV0Q2hhbm5lbHMgPiAxKSB7XFxuICAgICAgICAgICAgdGhpcy5yaWdodEJ1ZmZlcnMucHVzaChpbnB1dENoYW5uZWxDb3B5KTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcbiAgICAgICAgdGhpcy5yZWNvcmRlZFNhbXBsZXMgKz0gdGhpcy5idWZmZXJTaXplO1xcbiAgICAgIH1cXG5cXG4gICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgfVxcbiAgfSwge1xcbiAgICBrZXk6IFxcXCJyZWNvcmRcXFwiLFxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVjb3JkKGR1cmF0aW9uKSB7XFxuICAgICAgaWYgKGR1cmF0aW9uKSB7XFxuICAgICAgICB0aGlzLnNhbXBsZUxpbWl0ID0gTWF0aC5yb3VuZChkdXJhdGlvbiAqIHNhbXBsZVJhdGUpO1xcbiAgICAgIH1cXG5cXG4gICAgICB0aGlzLnJlY29yZGluZyA9IHRydWU7XFxuICAgIH1cXG4gIH0sIHtcXG4gICAga2V5OiBcXFwic3RvcFxcXCIsXFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge1xcbiAgICAgIHRoaXMucmVjb3JkaW5nID0gZmFsc2U7XFxuICAgICAgdmFyIGJ1ZmZlcnMgPSB0aGlzLmdldEJ1ZmZlcnMoKTtcXG4gICAgICB2YXIgbGVmdEJ1ZmZlciA9IGJ1ZmZlcnNbMF0uYnVmZmVyO1xcbiAgICAgIHZhciByaWdodEJ1ZmZlciA9IGJ1ZmZlcnNbMV0uYnVmZmVyO1xcbiAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZSh7XFxuICAgICAgICBuYW1lOiAnYnVmZmVycycsXFxuICAgICAgICBsZWZ0QnVmZmVyOiBsZWZ0QnVmZmVyLFxcbiAgICAgICAgcmlnaHRCdWZmZXI6IHJpZ2h0QnVmZmVyXFxuICAgICAgfSwgW2xlZnRCdWZmZXIsIHJpZ2h0QnVmZmVyXSk7XFxuICAgICAgdGhpcy5jbGVhcigpO1xcbiAgICB9XFxuICB9LCB7XFxuICAgIGtleTogXFxcImdldEJ1ZmZlcnNcXFwiLFxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QnVmZmVycygpIHtcXG4gICAgICB2YXIgYnVmZmVycyA9IFtdO1xcbiAgICAgIGJ1ZmZlcnMucHVzaCh0aGlzLm1lcmdlQnVmZmVycyh0aGlzLmxlZnRCdWZmZXJzKSk7XFxuICAgICAgYnVmZmVycy5wdXNoKHRoaXMubWVyZ2VCdWZmZXJzKHRoaXMucmlnaHRCdWZmZXJzKSk7XFxuICAgICAgcmV0dXJuIGJ1ZmZlcnM7XFxuICAgIH1cXG4gIH0sIHtcXG4gICAga2V5OiBcXFwibWVyZ2VCdWZmZXJzXFxcIixcXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1lcmdlQnVmZmVycyhjaGFubmVsQnVmZmVyKSB7XFxuICAgICAgdmFyIHJlc3VsdCA9IG5ldyBGbG9hdDMyQXJyYXkodGhpcy5yZWNvcmRlZFNhbXBsZXMpO1xcbiAgICAgIHZhciBvZmZzZXQgPSAwO1xcbiAgICAgIHZhciBsbmcgPSBjaGFubmVsQnVmZmVyLmxlbmd0aDtcXG5cXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxuZzsgaSsrKSB7XFxuICAgICAgICB2YXIgYnVmZmVyID0gY2hhbm5lbEJ1ZmZlcltpXTtcXG4gICAgICAgIHJlc3VsdC5zZXQoYnVmZmVyLCBvZmZzZXQpO1xcbiAgICAgICAgb2Zmc2V0ICs9IGJ1ZmZlci5sZW5ndGg7XFxuICAgICAgfVxcblxcbiAgICAgIHJldHVybiByZXN1bHQ7XFxuICAgIH1cXG4gIH0sIHtcXG4gICAga2V5OiBcXFwiY2xlYXJcXFwiLFxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXIoKSB7XFxuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XFxuXFxuICAgICAgdGhpcy5sZWZ0QnVmZmVycyA9IFtdO1xcbiAgICAgIHRoaXMucmlnaHRCdWZmZXJzID0gW107XFxuICAgICAgdGhpcy5pbnB1dFJpbmdCdWZmZXIgPSBuZXcgUmluZ0J1ZmZlcih0aGlzLmJ1ZmZlclNpemUsIHRoaXMubnVtSW5wdXRDaGFubmVscyk7XFxuICAgICAgdGhpcy5pbnB1dFJpbmdCdWZmZXJBcnJheVNlcXVlbmNlID0gbmV3IEFycmF5KHRoaXMubnVtSW5wdXRDaGFubmVscykuZmlsbChudWxsKS5tYXAoZnVuY3Rpb24gKCkge1xcbiAgICAgICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoX3RoaXMyLmJ1ZmZlclNpemUpO1xcbiAgICAgIH0pO1xcbiAgICAgIHRoaXMucmVjb3JkZWRTYW1wbGVzID0gMDtcXG4gICAgICB0aGlzLnNhbXBsZUxpbWl0ID0gbnVsbDtcXG4gICAgfVxcbiAgfV0pO1xcblxcbiAgcmV0dXJuIFJlY29yZGVyUHJvY2Vzc29yO1xcbn0oX3dyYXBOYXRpdmVTdXBlcihBdWRpb1dvcmtsZXRQcm9jZXNzb3IpKTtcXG5cXG5yZWdpc3RlclByb2Nlc3Nvcihwcm9jZXNzb3JOYW1lcy5yZWNvcmRlclByb2Nlc3NvciwgUmVjb3JkZXJQcm9jZXNzb3IpO1wiKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSAoXCJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXFxcImZ1bmN0aW9uXFxcIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcXFwic3ltYm9sXFxcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFxcXCJmdW5jdGlvblxcXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXFxcInN5bWJvbFxcXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cXG5cXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcXFwib2JqZWN0XFxcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXFxcImZ1bmN0aW9uXFxcIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cXG5cXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXFxcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFxcXCIpOyB9IHJldHVybiBzZWxmOyB9XFxuXFxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXFxcImZ1bmN0aW9uXFxcIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXFxcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXFxcIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxcblxcbmZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHsgdmFyIF9jYWNoZSA9IHR5cGVvZiBNYXAgPT09IFxcXCJmdW5jdGlvblxcXCIgPyBuZXcgTWFwKCkgOiB1bmRlZmluZWQ7IF93cmFwTmF0aXZlU3VwZXIgPSBmdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7IGlmIChDbGFzcyA9PT0gbnVsbCB8fCAhX2lzTmF0aXZlRnVuY3Rpb24oQ2xhc3MpKSByZXR1cm4gQ2xhc3M7IGlmICh0eXBlb2YgQ2xhc3MgIT09IFxcXCJmdW5jdGlvblxcXCIpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cXFwiKTsgfSBpZiAodHlwZW9mIF9jYWNoZSAhPT0gXFxcInVuZGVmaW5lZFxcXCIpIHsgaWYgKF9jYWNoZS5oYXMoQ2xhc3MpKSByZXR1cm4gX2NhY2hlLmdldChDbGFzcyk7IF9jYWNoZS5zZXQoQ2xhc3MsIFdyYXBwZXIpOyB9IGZ1bmN0aW9uIFdyYXBwZXIoKSB7IHJldHVybiBfY29uc3RydWN0KENsYXNzLCBhcmd1bWVudHMsIF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7IH0gV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKENsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogV3JhcHBlciwgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihXcmFwcGVyLCBDbGFzcyk7IH07IHJldHVybiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKTsgfVxcblxcbmZ1bmN0aW9uIGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcXFwidW5kZWZpbmVkXFxcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXFxcImZ1bmN0aW9uXFxcIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XFxuXFxuZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7IGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkgeyBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7IH0gZWxzZSB7IF9jb25zdHJ1Y3QgPSBmdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHsgdmFyIGEgPSBbbnVsbF07IGEucHVzaC5hcHBseShhLCBhcmdzKTsgdmFyIENvbnN0cnVjdG9yID0gRnVuY3Rpb24uYmluZC5hcHBseShQYXJlbnQsIGEpOyB2YXIgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTsgaWYgKENsYXNzKSBfc2V0UHJvdG90eXBlT2YoaW5zdGFuY2UsIENsYXNzLnByb3RvdHlwZSk7IHJldHVybiBpbnN0YW5jZTsgfTsgfSByZXR1cm4gX2NvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpOyB9XFxuXFxuZnVuY3Rpb24gX2lzTmF0aXZlRnVuY3Rpb24oZm4pIHsgcmV0dXJuIEZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwoZm4pLmluZGV4T2YoXFxcIltuYXRpdmUgY29kZV1cXFwiKSAhPT0gLTE7IH1cXG5cXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxcblxcbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cXG5cXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXFxcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblxcXCIpOyB9IH1cXG5cXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcXFwidmFsdWVcXFwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxcblxcbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XFxuXFxuLy8gaW1wb3J0IGRlcGVuZGVuY2llcyB2aWEgcHJldmFsLnJlcXVpcmUgc28gdGhhdCB0aGV5J3JlIGF2YWlsYWJsZSBhcyB2YWx1ZXMgYXQgY29tcGlsZSB0aW1lXFxudmFyIHByb2Nlc3Nvck5hbWVzID0ge1xcbiAgXFxcInJlY29yZGVyUHJvY2Vzc29yXFxcIjogXFxcInJlY29yZGVyLXByb2Nlc3NvclxcXCIsXFxuICBcXFwic291bmRGaWxlUHJvY2Vzc29yXFxcIjogXFxcInNvdW5kLWZpbGUtcHJvY2Vzc29yXFxcIixcXG4gIFxcXCJhbXBsaXR1ZGVQcm9jZXNzb3JcXFwiOiBcXFwiYW1wbGl0dWRlLXByb2Nlc3NvclxcXCJcXG59O1xcbnZhciBSaW5nQnVmZmVyID0ge1xcbiAgXFxcImRlZmF1bHRcXFwiOlxcbiAgLyojX19QVVJFX18qL1xcbiAgZnVuY3Rpb24gKCkge1xcbiAgICAvKipcXG4gICAgICogQGNvbnN0cnVjdG9yXFxuICAgICAqIEBwYXJhbSAge251bWJlcn0gbGVuZ3RoIEJ1ZmZlciBsZW5ndGggaW4gZnJhbWVzLlxcbiAgICAgKiBAcGFyYW0gIHtudW1iZXJ9IGNoYW5uZWxDb3VudCBCdWZmZXIgY2hhbm5lbCBjb3VudC5cXG4gICAgICovXFxuICAgIGZ1bmN0aW9uIFJpbmdCdWZmZXIobGVuZ3RoLCBjaGFubmVsQ291bnQpIHtcXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmluZ0J1ZmZlcik7XFxuXFxuICAgICAgdGhpcy5fcmVhZEluZGV4ID0gMDtcXG4gICAgICB0aGlzLl93cml0ZUluZGV4ID0gMDtcXG4gICAgICB0aGlzLl9mcmFtZXNBdmFpbGFibGUgPSAwO1xcbiAgICAgIHRoaXMuX2NoYW5uZWxDb3VudCA9IGNoYW5uZWxDb3VudDtcXG4gICAgICB0aGlzLl9sZW5ndGggPSBsZW5ndGg7XFxuICAgICAgdGhpcy5fY2hhbm5lbERhdGEgPSBbXTtcXG5cXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2NoYW5uZWxDb3VudDsgKytpKSB7XFxuICAgICAgICB0aGlzLl9jaGFubmVsRGF0YVtpXSA9IG5ldyBGbG9hdDMyQXJyYXkobGVuZ3RoKTtcXG4gICAgICB9XFxuICAgIH1cXG4gICAgLyoqXFxuICAgICAqIEdldHRlciBmb3IgQXZhaWxhYmxlIGZyYW1lcyBpbiBidWZmZXIuXFxuICAgICAqXFxuICAgICAqIEByZXR1cm4ge251bWJlcn0gQXZhaWxhYmxlIGZyYW1lcyBpbiBidWZmZXIuXFxuICAgICAqL1xcblxcblxcbiAgICBfY3JlYXRlQ2xhc3MoUmluZ0J1ZmZlciwgW3tcXG4gICAgICBrZXk6IFxcXCJwdXNoXFxcIixcXG5cXG4gICAgICAvKipcXG4gICAgICAgKiBQdXNoIGEgc2VxdWVuY2Ugb2YgRmxvYXQzMkFycmF5cyB0byBidWZmZXIuXFxuICAgICAgICpcXG4gICAgICAgKiBAcGFyYW0gIHthcnJheX0gYXJyYXlTZXF1ZW5jZSBBIHNlcXVlbmNlIG9mIEZsb2F0MzJBcnJheXMuXFxuICAgICAgICovXFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHB1c2goYXJyYXlTZXF1ZW5jZSkge1xcbiAgICAgICAgLy8gVGhlIGNoYW5uZWwgY291bnQgb2YgYXJyYXlTZXF1ZW5jZSBhbmQgdGhlIGxlbmd0aCBvZiBlYWNoIGNoYW5uZWwgbXVzdFxcbiAgICAgICAgLy8gbWF0Y2ggd2l0aCB0aGlzIGJ1ZmZlciBvYmVqY3QuXFxuICAgICAgICAvLyBUcmFuc2ZlciBkYXRhIGZyb20gdGhlIHxhcnJheVNlcXVlbmNlfCBzdG9yYWdlIHRvIHRoZSBpbnRlcm5hbCBidWZmZXIuXFxuICAgICAgICB2YXIgc291cmNlTGVuZ3RoID0gYXJyYXlTZXF1ZW5jZVswXSA/IGFycmF5U2VxdWVuY2VbMF0ubGVuZ3RoIDogMDtcXG5cXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc291cmNlTGVuZ3RoOyArK2kpIHtcXG4gICAgICAgICAgdmFyIHdyaXRlSW5kZXggPSAodGhpcy5fd3JpdGVJbmRleCArIGkpICUgdGhpcy5fbGVuZ3RoO1xcblxcbiAgICAgICAgICBmb3IgKHZhciBjaGFubmVsID0gMDsgY2hhbm5lbCA8IHRoaXMuX2NoYW5uZWxDb3VudDsgKytjaGFubmVsKSB7XFxuICAgICAgICAgICAgdGhpcy5fY2hhbm5lbERhdGFbY2hhbm5lbF1bd3JpdGVJbmRleF0gPSBhcnJheVNlcXVlbmNlW2NoYW5uZWxdW2ldO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICB0aGlzLl93cml0ZUluZGV4ICs9IHNvdXJjZUxlbmd0aDtcXG5cXG4gICAgICAgIGlmICh0aGlzLl93cml0ZUluZGV4ID49IHRoaXMuX2xlbmd0aCkge1xcbiAgICAgICAgICB0aGlzLl93cml0ZUluZGV4ID0gMDtcXG4gICAgICAgIH0gLy8gRm9yIGV4Y2Vzc2l2ZSBmcmFtZXMsIHRoZSBidWZmZXIgd2lsbCBiZSBvdmVyd3JpdHRlbi5cXG5cXG5cXG4gICAgICAgIHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSArPSBzb3VyY2VMZW5ndGg7XFxuXFxuICAgICAgICBpZiAodGhpcy5fZnJhbWVzQXZhaWxhYmxlID4gdGhpcy5fbGVuZ3RoKSB7XFxuICAgICAgICAgIHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSA9IHRoaXMuX2xlbmd0aDtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgICAgLyoqXFxuICAgICAgICogUHVsbCBkYXRhIG91dCBvZiBidWZmZXIgYW5kIGZpbGwgYSBnaXZlbiBzZXF1ZW5jZSBvZiBGbG9hdDMyQXJyYXlzLlxcbiAgICAgICAqXFxuICAgICAgICogQHBhcmFtICB7YXJyYXl9IGFycmF5U2VxdWVuY2UgQW4gYXJyYXkgb2YgRmxvYXQzMkFycmF5cy5cXG4gICAgICAgKi9cXG5cXG4gICAgfSwge1xcbiAgICAgIGtleTogXFxcInB1bGxcXFwiLFxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBwdWxsKGFycmF5U2VxdWVuY2UpIHtcXG4gICAgICAgIC8vIFRoZSBjaGFubmVsIGNvdW50IG9mIGFycmF5U2VxdWVuY2UgYW5kIHRoZSBsZW5ndGggb2YgZWFjaCBjaGFubmVsIG11c3RcXG4gICAgICAgIC8vIG1hdGNoIHdpdGggdGhpcyBidWZmZXIgb2JlamN0LlxcbiAgICAgICAgLy8gSWYgdGhlIEZJRk8gaXMgY29tcGxldGVseSBlbXB0eSwgZG8gbm90aGluZy5cXG4gICAgICAgIGlmICh0aGlzLl9mcmFtZXNBdmFpbGFibGUgPT09IDApIHtcXG4gICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgdmFyIGRlc3RpbmF0aW9uTGVuZ3RoID0gYXJyYXlTZXF1ZW5jZVswXS5sZW5ndGg7IC8vIFRyYW5zZmVyIGRhdGEgZnJvbSB0aGUgaW50ZXJuYWwgYnVmZmVyIHRvIHRoZSB8YXJyYXlTZXF1ZW5jZXwgc3RvcmFnZS5cXG5cXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGVzdGluYXRpb25MZW5ndGg7ICsraSkge1xcbiAgICAgICAgICB2YXIgcmVhZEluZGV4ID0gKHRoaXMuX3JlYWRJbmRleCArIGkpICUgdGhpcy5fbGVuZ3RoO1xcblxcbiAgICAgICAgICBmb3IgKHZhciBjaGFubmVsID0gMDsgY2hhbm5lbCA8IHRoaXMuX2NoYW5uZWxDb3VudDsgKytjaGFubmVsKSB7XFxuICAgICAgICAgICAgYXJyYXlTZXF1ZW5jZVtjaGFubmVsXVtpXSA9IHRoaXMuX2NoYW5uZWxEYXRhW2NoYW5uZWxdW3JlYWRJbmRleF07XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHRoaXMuX3JlYWRJbmRleCArPSBkZXN0aW5hdGlvbkxlbmd0aDtcXG5cXG4gICAgICAgIGlmICh0aGlzLl9yZWFkSW5kZXggPj0gdGhpcy5fbGVuZ3RoKSB7XFxuICAgICAgICAgIHRoaXMuX3JlYWRJbmRleCA9IDA7XFxuICAgICAgICB9XFxuXFxuICAgICAgICB0aGlzLl9mcmFtZXNBdmFpbGFibGUgLT0gZGVzdGluYXRpb25MZW5ndGg7XFxuXFxuICAgICAgICBpZiAodGhpcy5fZnJhbWVzQXZhaWxhYmxlIDwgMCkge1xcbiAgICAgICAgICB0aGlzLl9mcmFtZXNBdmFpbGFibGUgPSAwO1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfSwge1xcbiAgICAgIGtleTogXFxcImZyYW1lc0F2YWlsYWJsZVxcXCIsXFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XFxuICAgICAgICByZXR1cm4gdGhpcy5fZnJhbWVzQXZhaWxhYmxlO1xcbiAgICAgIH1cXG4gICAgfV0pO1xcblxcbiAgICByZXR1cm4gUmluZ0J1ZmZlcjtcXG4gIH0oKVxcbn1bXFxcImRlZmF1bHRcXFwiXTtcXG5cXG52YXIgU291bmRGaWxlUHJvY2Vzc29yID1cXG4vKiNfX1BVUkVfXyovXFxuZnVuY3Rpb24gKF9BdWRpb1dvcmtsZXRQcm9jZXNzbykge1xcbiAgX2luaGVyaXRzKFNvdW5kRmlsZVByb2Nlc3NvciwgX0F1ZGlvV29ya2xldFByb2Nlc3NvKTtcXG5cXG4gIGZ1bmN0aW9uIFNvdW5kRmlsZVByb2Nlc3NvcihvcHRpb25zKSB7XFxuICAgIHZhciBfdGhpcztcXG5cXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNvdW5kRmlsZVByb2Nlc3Nvcik7XFxuXFxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFNvdW5kRmlsZVByb2Nlc3NvcikuY2FsbCh0aGlzKSk7XFxuICAgIHZhciBwcm9jZXNzb3JPcHRpb25zID0gb3B0aW9ucy5wcm9jZXNzb3JPcHRpb25zIHx8IHt9O1xcbiAgICBfdGhpcy5idWZmZXJTaXplID0gcHJvY2Vzc29yT3B0aW9ucy5idWZmZXJTaXplIHx8IDI1NjtcXG4gICAgX3RoaXMuaW5wdXRSaW5nQnVmZmVyID0gbmV3IFJpbmdCdWZmZXIoX3RoaXMuYnVmZmVyU2l6ZSwgMSk7XFxuICAgIF90aGlzLmlucHV0UmluZ0J1ZmZlckFycmF5U2VxdWVuY2UgPSBbbmV3IEZsb2F0MzJBcnJheShfdGhpcy5idWZmZXJTaXplKV07XFxuICAgIHJldHVybiBfdGhpcztcXG4gIH1cXG5cXG4gIF9jcmVhdGVDbGFzcyhTb3VuZEZpbGVQcm9jZXNzb3IsIFt7XFxuICAgIGtleTogXFxcInByb2Nlc3NcXFwiLFxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2VzcyhpbnB1dHMpIHtcXG4gICAgICB2YXIgaW5wdXQgPSBpbnB1dHNbMF07IC8vIHdlIG9ubHkgY2FyZSBhYm91dCB0aGUgZmlyc3QgaW5wdXQgY2hhbm5lbCwgYmVjYXVzZSB0aGF0IGNvbnRhaW5zIHRoZSBwb3NpdGlvbiBkYXRhXFxuXFxuICAgICAgdGhpcy5pbnB1dFJpbmdCdWZmZXIucHVzaChbaW5wdXRbMF1dKTtcXG5cXG4gICAgICBpZiAodGhpcy5pbnB1dFJpbmdCdWZmZXIuZnJhbWVzQXZhaWxhYmxlID49IHRoaXMuYnVmZmVyU2l6ZSkge1xcbiAgICAgICAgdGhpcy5pbnB1dFJpbmdCdWZmZXIucHVsbCh0aGlzLmlucHV0UmluZ0J1ZmZlckFycmF5U2VxdWVuY2UpO1xcbiAgICAgICAgdmFyIGlucHV0Q2hhbm5lbCA9IHRoaXMuaW5wdXRSaW5nQnVmZmVyQXJyYXlTZXF1ZW5jZVswXTtcXG4gICAgICAgIHZhciBwb3NpdGlvbiA9IGlucHV0Q2hhbm5lbFtpbnB1dENoYW5uZWwubGVuZ3RoIC0gMV0gfHwgMDtcXG4gICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZSh7XFxuICAgICAgICAgIG5hbWU6ICdwb3NpdGlvbicsXFxuICAgICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvblxcbiAgICAgICAgfSk7XFxuICAgICAgfVxcblxcbiAgICAgIHJldHVybiB0cnVlO1xcbiAgICB9XFxuICB9XSk7XFxuXFxuICByZXR1cm4gU291bmRGaWxlUHJvY2Vzc29yO1xcbn0oX3dyYXBOYXRpdmVTdXBlcihBdWRpb1dvcmtsZXRQcm9jZXNzb3IpKTtcXG5cXG5yZWdpc3RlclByb2Nlc3Nvcihwcm9jZXNzb3JOYW1lcy5zb3VuZEZpbGVQcm9jZXNzb3IsIFNvdW5kRmlsZVByb2Nlc3Nvcik7XCIpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbiBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChcImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcXFwiZnVuY3Rpb25cXFwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFxcXCJzeW1ib2xcXFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXFxcImZ1bmN0aW9uXFxcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcXFwic3ltYm9sXFxcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxcblxcbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFxcXCJvYmplY3RcXFwiIHx8IHR5cGVvZiBjYWxsID09PSBcXFwiZnVuY3Rpb25cXFwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxcblxcbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcXFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXFxcIik7IH0gcmV0dXJuIHNlbGY7IH1cXG5cXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcXFwiZnVuY3Rpb25cXFwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cXFwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XFxuXFxuZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykgeyB2YXIgX2NhY2hlID0gdHlwZW9mIE1hcCA9PT0gXFxcImZ1bmN0aW9uXFxcIiA/IG5ldyBNYXAoKSA6IHVuZGVmaW5lZDsgX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHsgaWYgKENsYXNzID09PSBudWxsIHx8ICFfaXNOYXRpdmVGdW5jdGlvbihDbGFzcykpIHJldHVybiBDbGFzczsgaWYgKHR5cGVvZiBDbGFzcyAhPT0gXFxcImZ1bmN0aW9uXFxcIikgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblxcXCIpOyB9IGlmICh0eXBlb2YgX2NhY2hlICE9PSBcXFwidW5kZWZpbmVkXFxcIikgeyBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTsgX2NhY2hlLnNldChDbGFzcywgV3JhcHBlcik7IH0gZnVuY3Rpb24gV3JhcHBlcigpIHsgcmV0dXJuIF9jb25zdHJ1Y3QoQ2xhc3MsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTsgfSBXcmFwcGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBXcmFwcGVyLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyByZXR1cm4gX3NldFByb3RvdHlwZU9mKFdyYXBwZXIsIENsYXNzKTsgfTsgcmV0dXJuIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpOyB9XFxuXFxuZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFxcXCJ1bmRlZmluZWRcXFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcXFwiZnVuY3Rpb25cXFwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cXG5cXG5mdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHsgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7IF9jb25zdHJ1Y3QgPSBSZWZsZWN0LmNvbnN0cnVjdDsgfSBlbHNlIHsgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykgeyB2YXIgYSA9IFtudWxsXTsgYS5wdXNoLmFwcGx5KGEsIGFyZ3MpOyB2YXIgQ29uc3RydWN0b3IgPSBGdW5jdGlvbi5iaW5kLmFwcGx5KFBhcmVudCwgYSk7IHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpOyBpZiAoQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihpbnN0YW5jZSwgQ2xhc3MucHJvdG90eXBlKTsgcmV0dXJuIGluc3RhbmNlOyB9OyB9IHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IH1cXG5cXG5mdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbihmbikgeyByZXR1cm4gRnVuY3Rpb24udG9TdHJpbmcuY2FsbChmbikuaW5kZXhPZihcXFwiW25hdGl2ZSBjb2RlXVxcXCIpICE9PSAtMTsgfVxcblxcbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XFxuXFxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxcblxcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXFxcIik7IH0gfVxcblxcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFxcXCJ2YWx1ZVxcXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XFxuXFxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cXG5cXG4vLyBpbXBvcnQgZGVwZW5kZW5jaWVzIHZpYSBwcmV2YWwucmVxdWlyZSBzbyB0aGF0IHRoZXkncmUgYXZhaWxhYmxlIGFzIHZhbHVlcyBhdCBjb21waWxlIHRpbWVcXG52YXIgcHJvY2Vzc29yTmFtZXMgPSB7XFxuICBcXFwicmVjb3JkZXJQcm9jZXNzb3JcXFwiOiBcXFwicmVjb3JkZXItcHJvY2Vzc29yXFxcIixcXG4gIFxcXCJzb3VuZEZpbGVQcm9jZXNzb3JcXFwiOiBcXFwic291bmQtZmlsZS1wcm9jZXNzb3JcXFwiLFxcbiAgXFxcImFtcGxpdHVkZVByb2Nlc3NvclxcXCI6IFxcXCJhbXBsaXR1ZGUtcHJvY2Vzc29yXFxcIlxcbn07XFxudmFyIFJpbmdCdWZmZXIgPSB7XFxuICBcXFwiZGVmYXVsdFxcXCI6XFxuICAvKiNfX1BVUkVfXyovXFxuICBmdW5jdGlvbiAoKSB7XFxuICAgIC8qKlxcbiAgICAgKiBAY29uc3RydWN0b3JcXG4gICAgICogQHBhcmFtICB7bnVtYmVyfSBsZW5ndGggQnVmZmVyIGxlbmd0aCBpbiBmcmFtZXMuXFxuICAgICAqIEBwYXJhbSAge251bWJlcn0gY2hhbm5lbENvdW50IEJ1ZmZlciBjaGFubmVsIGNvdW50LlxcbiAgICAgKi9cXG4gICAgZnVuY3Rpb24gUmluZ0J1ZmZlcihsZW5ndGgsIGNoYW5uZWxDb3VudCkge1xcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSaW5nQnVmZmVyKTtcXG5cXG4gICAgICB0aGlzLl9yZWFkSW5kZXggPSAwO1xcbiAgICAgIHRoaXMuX3dyaXRlSW5kZXggPSAwO1xcbiAgICAgIHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSA9IDA7XFxuICAgICAgdGhpcy5fY2hhbm5lbENvdW50ID0gY2hhbm5lbENvdW50O1xcbiAgICAgIHRoaXMuX2xlbmd0aCA9IGxlbmd0aDtcXG4gICAgICB0aGlzLl9jaGFubmVsRGF0YSA9IFtdO1xcblxcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fY2hhbm5lbENvdW50OyArK2kpIHtcXG4gICAgICAgIHRoaXMuX2NoYW5uZWxEYXRhW2ldID0gbmV3IEZsb2F0MzJBcnJheShsZW5ndGgpO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgICAvKipcXG4gICAgICogR2V0dGVyIGZvciBBdmFpbGFibGUgZnJhbWVzIGluIGJ1ZmZlci5cXG4gICAgICpcXG4gICAgICogQHJldHVybiB7bnVtYmVyfSBBdmFpbGFibGUgZnJhbWVzIGluIGJ1ZmZlci5cXG4gICAgICovXFxuXFxuXFxuICAgIF9jcmVhdGVDbGFzcyhSaW5nQnVmZmVyLCBbe1xcbiAgICAgIGtleTogXFxcInB1c2hcXFwiLFxcblxcbiAgICAgIC8qKlxcbiAgICAgICAqIFB1c2ggYSBzZXF1ZW5jZSBvZiBGbG9hdDMyQXJyYXlzIHRvIGJ1ZmZlci5cXG4gICAgICAgKlxcbiAgICAgICAqIEBwYXJhbSAge2FycmF5fSBhcnJheVNlcXVlbmNlIEEgc2VxdWVuY2Ugb2YgRmxvYXQzMkFycmF5cy5cXG4gICAgICAgKi9cXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gcHVzaChhcnJheVNlcXVlbmNlKSB7XFxuICAgICAgICAvLyBUaGUgY2hhbm5lbCBjb3VudCBvZiBhcnJheVNlcXVlbmNlIGFuZCB0aGUgbGVuZ3RoIG9mIGVhY2ggY2hhbm5lbCBtdXN0XFxuICAgICAgICAvLyBtYXRjaCB3aXRoIHRoaXMgYnVmZmVyIG9iZWpjdC5cXG4gICAgICAgIC8vIFRyYW5zZmVyIGRhdGEgZnJvbSB0aGUgfGFycmF5U2VxdWVuY2V8IHN0b3JhZ2UgdG8gdGhlIGludGVybmFsIGJ1ZmZlci5cXG4gICAgICAgIHZhciBzb3VyY2VMZW5ndGggPSBhcnJheVNlcXVlbmNlWzBdID8gYXJyYXlTZXF1ZW5jZVswXS5sZW5ndGggOiAwO1xcblxcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2VMZW5ndGg7ICsraSkge1xcbiAgICAgICAgICB2YXIgd3JpdGVJbmRleCA9ICh0aGlzLl93cml0ZUluZGV4ICsgaSkgJSB0aGlzLl9sZW5ndGg7XFxuXFxuICAgICAgICAgIGZvciAodmFyIGNoYW5uZWwgPSAwOyBjaGFubmVsIDwgdGhpcy5fY2hhbm5lbENvdW50OyArK2NoYW5uZWwpIHtcXG4gICAgICAgICAgICB0aGlzLl9jaGFubmVsRGF0YVtjaGFubmVsXVt3cml0ZUluZGV4XSA9IGFycmF5U2VxdWVuY2VbY2hhbm5lbF1baV07XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHRoaXMuX3dyaXRlSW5kZXggKz0gc291cmNlTGVuZ3RoO1xcblxcbiAgICAgICAgaWYgKHRoaXMuX3dyaXRlSW5kZXggPj0gdGhpcy5fbGVuZ3RoKSB7XFxuICAgICAgICAgIHRoaXMuX3dyaXRlSW5kZXggPSAwO1xcbiAgICAgICAgfSAvLyBGb3IgZXhjZXNzaXZlIGZyYW1lcywgdGhlIGJ1ZmZlciB3aWxsIGJlIG92ZXJ3cml0dGVuLlxcblxcblxcbiAgICAgICAgdGhpcy5fZnJhbWVzQXZhaWxhYmxlICs9IHNvdXJjZUxlbmd0aDtcXG5cXG4gICAgICAgIGlmICh0aGlzLl9mcmFtZXNBdmFpbGFibGUgPiB0aGlzLl9sZW5ndGgpIHtcXG4gICAgICAgICAgdGhpcy5fZnJhbWVzQXZhaWxhYmxlID0gdGhpcy5fbGVuZ3RoO1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgICAvKipcXG4gICAgICAgKiBQdWxsIGRhdGEgb3V0IG9mIGJ1ZmZlciBhbmQgZmlsbCBhIGdpdmVuIHNlcXVlbmNlIG9mIEZsb2F0MzJBcnJheXMuXFxuICAgICAgICpcXG4gICAgICAgKiBAcGFyYW0gIHthcnJheX0gYXJyYXlTZXF1ZW5jZSBBbiBhcnJheSBvZiBGbG9hdDMyQXJyYXlzLlxcbiAgICAgICAqL1xcblxcbiAgICB9LCB7XFxuICAgICAga2V5OiBcXFwicHVsbFxcXCIsXFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHB1bGwoYXJyYXlTZXF1ZW5jZSkge1xcbiAgICAgICAgLy8gVGhlIGNoYW5uZWwgY291bnQgb2YgYXJyYXlTZXF1ZW5jZSBhbmQgdGhlIGxlbmd0aCBvZiBlYWNoIGNoYW5uZWwgbXVzdFxcbiAgICAgICAgLy8gbWF0Y2ggd2l0aCB0aGlzIGJ1ZmZlciBvYmVqY3QuXFxuICAgICAgICAvLyBJZiB0aGUgRklGTyBpcyBjb21wbGV0ZWx5IGVtcHR5LCBkbyBub3RoaW5nLlxcbiAgICAgICAgaWYgKHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSA9PT0gMCkge1xcbiAgICAgICAgICByZXR1cm47XFxuICAgICAgICB9XFxuXFxuICAgICAgICB2YXIgZGVzdGluYXRpb25MZW5ndGggPSBhcnJheVNlcXVlbmNlWzBdLmxlbmd0aDsgLy8gVHJhbnNmZXIgZGF0YSBmcm9tIHRoZSBpbnRlcm5hbCBidWZmZXIgdG8gdGhlIHxhcnJheVNlcXVlbmNlfCBzdG9yYWdlLlxcblxcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkZXN0aW5hdGlvbkxlbmd0aDsgKytpKSB7XFxuICAgICAgICAgIHZhciByZWFkSW5kZXggPSAodGhpcy5fcmVhZEluZGV4ICsgaSkgJSB0aGlzLl9sZW5ndGg7XFxuXFxuICAgICAgICAgIGZvciAodmFyIGNoYW5uZWwgPSAwOyBjaGFubmVsIDwgdGhpcy5fY2hhbm5lbENvdW50OyArK2NoYW5uZWwpIHtcXG4gICAgICAgICAgICBhcnJheVNlcXVlbmNlW2NoYW5uZWxdW2ldID0gdGhpcy5fY2hhbm5lbERhdGFbY2hhbm5lbF1bcmVhZEluZGV4XTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcbiAgICAgICAgdGhpcy5fcmVhZEluZGV4ICs9IGRlc3RpbmF0aW9uTGVuZ3RoO1xcblxcbiAgICAgICAgaWYgKHRoaXMuX3JlYWRJbmRleCA+PSB0aGlzLl9sZW5ndGgpIHtcXG4gICAgICAgICAgdGhpcy5fcmVhZEluZGV4ID0gMDtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSAtPSBkZXN0aW5hdGlvbkxlbmd0aDtcXG5cXG4gICAgICAgIGlmICh0aGlzLl9mcmFtZXNBdmFpbGFibGUgPCAwKSB7XFxuICAgICAgICAgIHRoaXMuX2ZyYW1lc0F2YWlsYWJsZSA9IDA7XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9LCB7XFxuICAgICAga2V5OiBcXFwiZnJhbWVzQXZhaWxhYmxlXFxcIixcXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcXG4gICAgICAgIHJldHVybiB0aGlzLl9mcmFtZXNBdmFpbGFibGU7XFxuICAgICAgfVxcbiAgICB9XSk7XFxuXFxuICAgIHJldHVybiBSaW5nQnVmZmVyO1xcbiAgfSgpXFxufVtcXFwiZGVmYXVsdFxcXCJdO1xcblxcbnZhciBBbXBsaXR1ZGVQcm9jZXNzb3IgPVxcbi8qI19fUFVSRV9fKi9cXG5mdW5jdGlvbiAoX0F1ZGlvV29ya2xldFByb2Nlc3NvKSB7XFxuICBfaW5oZXJpdHMoQW1wbGl0dWRlUHJvY2Vzc29yLCBfQXVkaW9Xb3JrbGV0UHJvY2Vzc28pO1xcblxcbiAgZnVuY3Rpb24gQW1wbGl0dWRlUHJvY2Vzc29yKG9wdGlvbnMpIHtcXG4gICAgdmFyIF90aGlzO1xcblxcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQW1wbGl0dWRlUHJvY2Vzc29yKTtcXG5cXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQW1wbGl0dWRlUHJvY2Vzc29yKS5jYWxsKHRoaXMpKTtcXG4gICAgdmFyIHByb2Nlc3Nvck9wdGlvbnMgPSBvcHRpb25zLnByb2Nlc3Nvck9wdGlvbnMgfHwge307XFxuICAgIF90aGlzLm51bU91dHB1dENoYW5uZWxzID0gb3B0aW9ucy5vdXRwdXRDaGFubmVsQ291bnQgfHwgMTtcXG4gICAgX3RoaXMubnVtSW5wdXRDaGFubmVscyA9IHByb2Nlc3Nvck9wdGlvbnMubnVtSW5wdXRDaGFubmVscyB8fCAyO1xcbiAgICBfdGhpcy5ub3JtYWxpemUgPSBwcm9jZXNzb3JPcHRpb25zLm5vcm1hbGl6ZSB8fCBmYWxzZTtcXG4gICAgX3RoaXMuc21vb3RoaW5nID0gcHJvY2Vzc29yT3B0aW9ucy5zbW9vdGhpbmcgfHwgMDtcXG4gICAgX3RoaXMuYnVmZmVyU2l6ZSA9IHByb2Nlc3Nvck9wdGlvbnMuYnVmZmVyU2l6ZSB8fCAyMDQ4O1xcbiAgICBfdGhpcy5pbnB1dFJpbmdCdWZmZXIgPSBuZXcgUmluZ0J1ZmZlcihfdGhpcy5idWZmZXJTaXplLCBfdGhpcy5udW1JbnB1dENoYW5uZWxzKTtcXG4gICAgX3RoaXMub3V0cHV0UmluZ0J1ZmZlciA9IG5ldyBSaW5nQnVmZmVyKF90aGlzLmJ1ZmZlclNpemUsIF90aGlzLm51bU91dHB1dENoYW5uZWxzKTtcXG4gICAgX3RoaXMuaW5wdXRSaW5nQnVmZmVyQXJyYXlTZXF1ZW5jZSA9IG5ldyBBcnJheShfdGhpcy5udW1JbnB1dENoYW5uZWxzKS5maWxsKG51bGwpLm1hcChmdW5jdGlvbiAoKSB7XFxuICAgICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoX3RoaXMuYnVmZmVyU2l6ZSk7XFxuICAgIH0pO1xcbiAgICBfdGhpcy5zdGVyZW9Wb2wgPSBbMCwgMF07XFxuICAgIF90aGlzLnN0ZXJlb1ZvbE5vcm0gPSBbMCwgMF07XFxuICAgIF90aGlzLnZvbE1heCA9IDAuMDAxO1xcblxcbiAgICBfdGhpcy5wb3J0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xcbiAgICAgIHZhciBkYXRhID0gZXZlbnQuZGF0YTtcXG5cXG4gICAgICBpZiAoZGF0YS5uYW1lID09PSAndG9nZ2xlTm9ybWFsaXplJykge1xcbiAgICAgICAgX3RoaXMubm9ybWFsaXplID0gZGF0YS5ub3JtYWxpemU7XFxuICAgICAgfSBlbHNlIGlmIChkYXRhLm5hbWUgPT09ICdzbW9vdGhpbmcnKSB7XFxuICAgICAgICBfdGhpcy5zbW9vdGhpbmcgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBkYXRhLnNtb290aGluZykpO1xcbiAgICAgIH1cXG4gICAgfTtcXG5cXG4gICAgcmV0dXJuIF90aGlzO1xcbiAgfSAvLyBUTyBETyBtYWtlIHRoaXMgc3RlcmVvIC8gZGVwZW5kZW50IG9uICMgb2YgYXVkaW8gY2hhbm5lbHNcXG5cXG5cXG4gIF9jcmVhdGVDbGFzcyhBbXBsaXR1ZGVQcm9jZXNzb3IsIFt7XFxuICAgIGtleTogXFxcInByb2Nlc3NcXFwiLFxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2VzcyhpbnB1dHMsIG91dHB1dHMpIHtcXG4gICAgICB2YXIgaW5wdXQgPSBpbnB1dHNbMF07XFxuICAgICAgdmFyIG91dHB1dCA9IG91dHB1dHNbMF07XFxuICAgICAgdmFyIHNtb290aGluZyA9IHRoaXMuc21vb3RoaW5nO1xcbiAgICAgIHRoaXMuaW5wdXRSaW5nQnVmZmVyLnB1c2goaW5wdXQpO1xcblxcbiAgICAgIGlmICh0aGlzLmlucHV0UmluZ0J1ZmZlci5mcmFtZXNBdmFpbGFibGUgPj0gdGhpcy5idWZmZXJTaXplKSB7XFxuICAgICAgICB0aGlzLmlucHV0UmluZ0J1ZmZlci5wdWxsKHRoaXMuaW5wdXRSaW5nQnVmZmVyQXJyYXlTZXF1ZW5jZSk7XFxuXFxuICAgICAgICBmb3IgKHZhciBjaGFubmVsID0gMDsgY2hhbm5lbCA8IHRoaXMubnVtSW5wdXRDaGFubmVsczsgKytjaGFubmVsKSB7XFxuICAgICAgICAgIHZhciBpbnB1dEJ1ZmZlciA9IHRoaXMuaW5wdXRSaW5nQnVmZmVyQXJyYXlTZXF1ZW5jZVtjaGFubmVsXTtcXG4gICAgICAgICAgdmFyIGJ1Zkxlbmd0aCA9IGlucHV0QnVmZmVyLmxlbmd0aDtcXG4gICAgICAgICAgdmFyIHN1bSA9IDA7XFxuXFxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmTGVuZ3RoOyBpKyspIHtcXG4gICAgICAgICAgICB2YXIgeCA9IGlucHV0QnVmZmVyW2ldO1xcblxcbiAgICAgICAgICAgIGlmICh0aGlzLm5vcm1hbGl6ZSkge1xcbiAgICAgICAgICAgICAgc3VtICs9IE1hdGgubWF4KE1hdGgubWluKHggLyB0aGlzLnZvbE1heCwgMSksIC0xKSAqIE1hdGgubWF4KE1hdGgubWluKHggLyB0aGlzLnZvbE1heCwgMSksIC0xKTtcXG4gICAgICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgICAgc3VtICs9IHggKiB4O1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgfSAvLyAuLi4gdGhlbiB0YWtlIHRoZSBzcXVhcmUgcm9vdCBvZiB0aGUgc3VtLlxcblxcblxcbiAgICAgICAgICB2YXIgcm1zID0gTWF0aC5zcXJ0KHN1bSAvIGJ1Zkxlbmd0aCk7XFxuICAgICAgICAgIHRoaXMuc3RlcmVvVm9sW2NoYW5uZWxdID0gTWF0aC5tYXgocm1zLCB0aGlzLnN0ZXJlb1ZvbFtjaGFubmVsXSAqIHNtb290aGluZyk7XFxuICAgICAgICAgIHRoaXMudm9sTWF4ID0gTWF0aC5tYXgodGhpcy5zdGVyZW9Wb2xbY2hhbm5lbF0sIHRoaXMudm9sTWF4KTtcXG4gICAgICAgIH0gLy8gY2FsY3VsYXRlIHN0ZXJvIG5vcm1hbGl6ZWQgdm9sdW1lIGFuZCBhZGQgdm9sdW1lIGZyb20gYWxsIGNoYW5uZWxzIHRvZ2V0aGVyXFxuXFxuXFxuICAgICAgICB2YXIgdm9sU3VtID0gMDtcXG5cXG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLnN0ZXJlb1ZvbC5sZW5ndGg7IGluZGV4KyspIHtcXG4gICAgICAgICAgdGhpcy5zdGVyZW9Wb2xOb3JtW2luZGV4XSA9IE1hdGgubWF4KE1hdGgubWluKHRoaXMuc3RlcmVvVm9sW2luZGV4XSAvIHRoaXMudm9sTWF4LCAxKSwgMCk7XFxuICAgICAgICAgIHZvbFN1bSArPSB0aGlzLnN0ZXJlb1ZvbFtpbmRleF07XFxuICAgICAgICB9IC8vIHZvbHVtZSBpcyBhdmVyYWdlIG9mIGNoYW5uZWxzXFxuXFxuXFxuICAgICAgICB2YXIgdm9sdW1lID0gdm9sU3VtIC8gdGhpcy5zdGVyZW9Wb2wubGVuZ3RoOyAvLyBub3JtYWxpemVkIHZhbHVlXFxuXFxuICAgICAgICB2YXIgdm9sTm9ybSA9IE1hdGgubWF4KE1hdGgubWluKHZvbHVtZSAvIHRoaXMudm9sTWF4LCAxKSwgMCk7XFxuICAgICAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2Uoe1xcbiAgICAgICAgICBuYW1lOiAnYW1wbGl0dWRlJyxcXG4gICAgICAgICAgdm9sdW1lOiB2b2x1bWUsXFxuICAgICAgICAgIHZvbE5vcm06IHZvbE5vcm0sXFxuICAgICAgICAgIHN0ZXJlb1ZvbDogdGhpcy5zdGVyZW9Wb2wsXFxuICAgICAgICAgIHN0ZXJlb1ZvbE5vcm06IHRoaXMuc3RlcmVvVm9sTm9ybVxcbiAgICAgICAgfSk7IC8vIHBhc3MgaW5wdXQgdGhyb3VnaCB0byBvdXRwdXRcXG5cXG4gICAgICAgIHRoaXMub3V0cHV0UmluZ0J1ZmZlci5wdXNoKHRoaXMuaW5wdXRSaW5nQnVmZmVyQXJyYXlTZXF1ZW5jZSk7XFxuICAgICAgfSAvLyBwdWxsIDEyOCBmcmFtZXMgb3V0IG9mIHRoZSByaW5nIGJ1ZmZlclxcbiAgICAgIC8vIGlmIHRoZSByaW5nIGJ1ZmZlciBkb2VzIG5vdCBoYXZlIGVub3VnaCBmcmFtZXMsIHRoZSBvdXRwdXQgd2lsbCBiZSBzaWxlbnRcXG5cXG5cXG4gICAgICB0aGlzLm91dHB1dFJpbmdCdWZmZXIucHVsbChvdXRwdXQpO1xcbiAgICAgIHJldHVybiB0cnVlO1xcbiAgICB9XFxuICB9XSk7XFxuXFxuICByZXR1cm4gQW1wbGl0dWRlUHJvY2Vzc29yO1xcbn0oX3dyYXBOYXRpdmVTdXBlcihBdWRpb1dvcmtsZXRQcm9jZXNzb3IpKTtcXG5cXG5yZWdpc3RlclByb2Nlc3Nvcihwcm9jZXNzb3JOYW1lcy5hbXBsaXR1ZGVQcm9jZXNzb3IsIEFtcGxpdHVkZVByb2Nlc3Nvcik7XCIpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygxNyldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtvLkZyZXF1ZW5jeT1mdW5jdGlvbihlLHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIG8uRnJlcXVlbmN5KSlyZXR1cm4gbmV3IG8uRnJlcXVlbmN5KGUsdCk7by5UaW1lQmFzZS5jYWxsKHRoaXMsZSx0KX0sby5leHRlbmQoby5GcmVxdWVuY3ksby5UaW1lQmFzZSksby5GcmVxdWVuY3kucHJvdG90eXBlLl9wcmltYXJ5RXhwcmVzc2lvbnM9T2JqZWN0LmNyZWF0ZShvLlRpbWVCYXNlLnByb3RvdHlwZS5fcHJpbWFyeUV4cHJlc3Npb25zKSxvLkZyZXF1ZW5jeS5wcm90b3R5cGUuX3ByaW1hcnlFeHByZXNzaW9ucy5taWRpPXtyZWdleHA6L14oXFxkKyg/OlxcLlxcZCspP21pZGkpLyxtZXRob2Q6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubWlkaVRvRnJlcXVlbmN5KGUpfX0sby5GcmVxdWVuY3kucHJvdG90eXBlLl9wcmltYXJ5RXhwcmVzc2lvbnMubm90ZT17cmVnZXhwOi9eKFthLWddezF9KD86YnwjfHh8YmIpPykoLT9bMC05XSspL2ksbWV0aG9kOmZ1bmN0aW9uKGUsdCl7dmFyIHI9bltlLnRvTG93ZXJDYXNlKCldKzEyKihwYXJzZUludCh0KSsxKTtyZXR1cm4gdGhpcy5taWRpVG9GcmVxdWVuY3kocil9fSxvLkZyZXF1ZW5jeS5wcm90b3R5cGUuX3ByaW1hcnlFeHByZXNzaW9ucy50cj17cmVnZXhwOi9eKFxcZCsoPzpcXC5cXGQrKT8pOihcXGQrKD86XFwuXFxkKyk/KTo/KFxcZCsoPzpcXC5cXGQrKT8pPy8sbWV0aG9kOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj0xO3JldHVybiBlJiZcIjBcIiE9PWUmJihuKj10aGlzLl9iZWF0c1RvVW5pdHModGhpcy5fdGltZVNpZ25hdHVyZSgpKnBhcnNlRmxvYXQoZSkpKSx0JiZcIjBcIiE9PXQmJihuKj10aGlzLl9iZWF0c1RvVW5pdHMocGFyc2VGbG9hdCh0KSkpLHImJlwiMFwiIT09ciYmKG4qPXRoaXMuX2JlYXRzVG9Vbml0cyhwYXJzZUZsb2F0KHIpLzQpKSxufX0sby5GcmVxdWVuY3kucHJvdG90eXBlLnRyYW5zcG9zZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fZXhwcj1mdW5jdGlvbihlLHQpe3JldHVybiBlKCkqdGhpcy5pbnRlcnZhbFRvRnJlcXVlbmN5UmF0aW8odCl9LmJpbmQodGhpcyx0aGlzLl9leHByLGUpLHRoaXN9LG8uRnJlcXVlbmN5LnByb3RvdHlwZS5oYXJtb25pemU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2V4cHI9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9ZSgpLG49W10sbz0wO288dC5sZW5ndGg7bysrKW5bb109cip0aGlzLmludGVydmFsVG9GcmVxdWVuY3lSYXRpbyh0W29dKTtyZXR1cm4gbn0uYmluZCh0aGlzLHRoaXMuX2V4cHIsZSksdGhpc30sby5GcmVxdWVuY3kucHJvdG90eXBlLnRvTWlkaT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZyZXF1ZW5jeVRvTWlkaSh0aGlzLnZhbHVlT2YoKSl9LG8uRnJlcXVlbmN5LnByb3RvdHlwZS50b05vdGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZhbHVlT2YoKSx0PU1hdGgubG9nKGUvby5GcmVxdWVuY3kuQTQpL01hdGguTE4yLHI9TWF0aC5yb3VuZCgxMip0KSs1NyxuPU1hdGguZmxvb3Ioci8xMik7cmV0dXJuIG48MCYmKHIrPS0xMipuKSxpW3IlMTJdK24udG9TdHJpbmcoKX0sby5GcmVxdWVuY3kucHJvdG90eXBlLnRvU2Vjb25kcz1mdW5jdGlvbigpe3JldHVybiAxL3RoaXMudmFsdWVPZigpfSxvLkZyZXF1ZW5jeS5wcm90b3R5cGUudG9GcmVxdWVuY3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZU9mKCl9LG8uRnJlcXVlbmN5LnByb3RvdHlwZS50b1RpY2tzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fYmVhdHNUb1VuaXRzKDEpLHQ9dGhpcy52YWx1ZU9mKCkvZTtyZXR1cm4gTWF0aC5mbG9vcih0Km8uVHJhbnNwb3J0LlBQUSl9LG8uRnJlcXVlbmN5LnByb3RvdHlwZS5fZnJlcXVlbmN5VG9Vbml0cz1mdW5jdGlvbihlKXtyZXR1cm4gZX0sby5GcmVxdWVuY3kucHJvdG90eXBlLl90aWNrc1RvVW5pdHM9ZnVuY3Rpb24oZSl7cmV0dXJuIDEvKDYwKmUvKG8uVHJhbnNwb3J0LmJwbS52YWx1ZSpvLlRyYW5zcG9ydC5QUFEpKX0sby5GcmVxdWVuY3kucHJvdG90eXBlLl9iZWF0c1RvVW5pdHM9ZnVuY3Rpb24oZSl7cmV0dXJuIDEvby5UaW1lQmFzZS5wcm90b3R5cGUuX2JlYXRzVG9Vbml0cy5jYWxsKHRoaXMsZSl9LG8uRnJlcXVlbmN5LnByb3RvdHlwZS5fc2Vjb25kc1RvVW5pdHM9ZnVuY3Rpb24oZSl7cmV0dXJuIDEvZX0sby5GcmVxdWVuY3kucHJvdG90eXBlLl9kZWZhdWx0VW5pdHM9XCJoelwiO3ZhciBuPXtjYmI6LTIsY2I6LTEsYzowLFwiYyNcIjoxLGN4OjIsZGJiOjAsZGI6MSxkOjIsXCJkI1wiOjMsZHg6NCxlYmI6MixlYjozLGU6NCxcImUjXCI6NSxleDo2LGZiYjozLGZiOjQsZjo1LFwiZiNcIjo2LGZ4OjcsZ2JiOjUsZ2I6NixnOjcsXCJnI1wiOjgsZ3g6OSxhYmI6NyxhYjo4LGE6OSxcImEjXCI6MTAsYXg6MTEsYmJiOjksYmI6MTAsYjoxMSxcImIjXCI6MTIsYng6MTN9LGk9W1wiQ1wiLFwiQyNcIixcIkRcIixcIkQjXCIsXCJFXCIsXCJGXCIsXCJGI1wiLFwiR1wiLFwiRyNcIixcIkFcIixcIkEjXCIsXCJCXCJdO3JldHVybiBvLkZyZXF1ZW5jeS5BND00NDAsby5GcmVxdWVuY3kucHJvdG90eXBlLm1pZGlUb0ZyZXF1ZW5jeT1mdW5jdGlvbihlKXtyZXR1cm4gby5GcmVxdWVuY3kuQTQqTWF0aC5wb3coMiwoZS02OSkvMTIpfSxvLkZyZXF1ZW5jeS5wcm90b3R5cGUuZnJlcXVlbmN5VG9NaWRpPWZ1bmN0aW9uKGUpe3JldHVybiA2OSsxMipNYXRoLmxvZyhlL28uRnJlcXVlbmN5LkE0KS9NYXRoLkxOMn0sby5GcmVxdWVuY3l9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygxNildLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihvKXtyZXR1cm4gby5UcmFuc3BvcnRUaW1lPWZ1bmN0aW9uKHQscil7aWYoISh0aGlzIGluc3RhbmNlb2Ygby5UcmFuc3BvcnRUaW1lKSlyZXR1cm4gbmV3IG8uVHJhbnNwb3J0VGltZSh0LHIpO28uVGltZS5jYWxsKHRoaXMsdCxyKX0sby5leHRlbmQoby5UcmFuc3BvcnRUaW1lLG8uVGltZSksby5UcmFuc3BvcnRUaW1lLnByb3RvdHlwZS5fdW5hcnlFeHByZXNzaW9ucz1PYmplY3QuY3JlYXRlKG8uVGltZS5wcm90b3R5cGUuX3VuYXJ5RXhwcmVzc2lvbnMpLG8uVHJhbnNwb3J0VGltZS5wcm90b3R5cGUuX3VuYXJ5RXhwcmVzc2lvbnMucXVhbnRpemU9e3JlZ2V4cDovXkAvLG1ldGhvZDpmdW5jdGlvbih0KXt2YXIgcj10aGlzLl9zZWNvbmRzVG9UaWNrcyh0KCkpLGU9TWF0aC5jZWlsKG8uVHJhbnNwb3J0LnRpY2tzL3IpO3JldHVybiB0aGlzLl90aWNrc1RvVW5pdHMoZSpyKX19LG8uVHJhbnNwb3J0VGltZS5wcm90b3R5cGUuX3NlY29uZHNUb1RpY2tzPWZ1bmN0aW9uKHQpe3ZhciByPXQvdGhpcy5fYmVhdHNUb1VuaXRzKDEpO3JldHVybiBNYXRoLnJvdW5kKHIqby5UcmFuc3BvcnQuUFBRKX0sby5UcmFuc3BvcnRUaW1lLnByb3RvdHlwZS52YWx1ZU9mPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NlY29uZHNUb1RpY2tzKHRoaXMuX2V4cHIoKSkrKHRoaXMuX3BsdXNOb3c/by5UcmFuc3BvcnQudGlja3M6MCl9LG8uVHJhbnNwb3J0VGltZS5wcm90b3R5cGUudG9UaWNrcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlT2YoKX0sby5UcmFuc3BvcnRUaW1lLnByb3RvdHlwZS50b1NlY29uZHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXhwcigpKyh0aGlzLl9wbHVzTm93P28uVHJhbnNwb3J0LnNlY29uZHM6MCl9LG8uVHJhbnNwb3J0VGltZS5wcm90b3R5cGUudG9GcmVxdWVuY3k9ZnVuY3Rpb24oKXtyZXR1cm4gMS90aGlzLnRvU2Vjb25kcygpfSxvLlRyYW5zcG9ydFRpbWV9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXyg0KSxfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDEpLF9fd2VicGFja19yZXF1aXJlX18oMzMpLF9fd2VicGFja19yZXF1aXJlX18oMjEpLF9fd2VicGFja19yZXF1aXJlX18oMzQpLF9fd2VicGFja19yZXF1aXJlX18oMjApLF9fd2VicGFja19yZXF1aXJlX18oMzUpLF9fd2VicGFja19yZXF1aXJlX18oMzYpLF9fd2VicGFja19yZXF1aXJlX18oMzcpXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24ocCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlLG4scil7dmFyIHQ9bmV3IGU7cmV0dXJuIHIuX2V2YWwoblswXSkuY29ubmVjdCh0LDAsMCksci5fZXZhbChuWzFdKS5jb25uZWN0KHQsMCwxKSx0fWZ1bmN0aW9uIHQoZSxuLHIpe3ZhciB0PW5ldyBlO3JldHVybiByLl9ldmFsKG5bMF0pLmNvbm5lY3QodCwwLDApLHR9ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZT9wYXJzZUZsb2F0KGUpOnZvaWQgMH1mdW5jdGlvbiBpKGUpe3JldHVybiBlJiZlLmFyZ3M/cGFyc2VGbG9hdChlLmFyZ3MpOnZvaWQgMH1yZXR1cm4gcC5FeHByPWZ1bmN0aW9uKCl7dmFyIG49dGhpcy5fcmVwbGFjZW1lbnRzKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpLGU9dGhpcy5fcGFyc2VJbnB1dHMobik7dGhpcy5fbm9kZXM9W10sdGhpcy5pbnB1dD1uZXcgQXJyYXkoZSk7Zm9yKHZhciByPTA7cjxlO3IrKyl0aGlzLmlucHV0W3JdPXRoaXMuY29udGV4dC5jcmVhdGVHYWluKCk7dmFyIHQsbz10aGlzLl9wYXJzZVRyZWUobik7dHJ5e3Q9dGhpcy5fZXZhbChvKX1jYXRjaChlKXt0aHJvdyB0aGlzLl9kaXNwb3NlTm9kZXMoKSxuZXcgRXJyb3IoXCJUb25lLkV4cHI6IENvdWxkIGV2YWx1YXRlIGV4cHJlc3Npb246IFwiK24pfXRoaXMub3V0cHV0PXR9LHAuZXh0ZW5kKHAuRXhwcixwLlNpZ25hbEJhc2UpLHAuRXhwci5fRXhwcmVzc2lvbnM9e3ZhbHVlOntzaWduYWw6e3JlZ2V4cDovXlxcZCtcXC5cXGQrfF5cXGQrLyxtZXRob2Q6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBwLlNpZ25hbChvKGUpKX19LGlucHV0OntyZWdleHA6L15cXCRcXGQvLG1ldGhvZDpmdW5jdGlvbihlLG4pe3JldHVybiBuLmlucHV0W28oZS5zdWJzdHIoMSkpXX19fSxnbHVlOntcIihcIjp7cmVnZXhwOi9eXFwoL30sXCIpXCI6e3JlZ2V4cDovXlxcKS99LFwiLFwiOntyZWdleHA6L14sL319LGZ1bmM6e2Ficzp7cmVnZXhwOi9eYWJzLyxtZXRob2Q6dC5iaW5kKHRoaXMscC5BYnMpfSxtb2Q6e3JlZ2V4cDovXm1vZC8sbWV0aG9kOmZ1bmN0aW9uKGUsbil7dmFyIHI9aShlWzFdKSx0PW5ldyBwLk1vZHVsbyhyKTtyZXR1cm4gbi5fZXZhbChlWzBdKS5jb25uZWN0KHQpLHR9fSxwb3c6e3JlZ2V4cDovXnBvdy8sbWV0aG9kOmZ1bmN0aW9uKGUsbil7dmFyIHI9aShlWzFdKSx0PW5ldyBwLlBvdyhyKTtyZXR1cm4gbi5fZXZhbChlWzBdKS5jb25uZWN0KHQpLHR9fSxhMmc6e3JlZ2V4cDovXmEyZy8sbWV0aG9kOmZ1bmN0aW9uKGUsbil7dmFyIHI9bmV3IHAuQXVkaW9Ub0dhaW47cmV0dXJuIG4uX2V2YWwoZVswXSkuY29ubmVjdChyKSxyfX19LGJpbmFyeTp7XCIrXCI6e3JlZ2V4cDovXlxcKy8scHJlY2VkZW5jZToxLG1ldGhvZDpyLmJpbmQodGhpcyxwLkFkZCl9LFwiLVwiOntyZWdleHA6L15cXC0vLHByZWNlZGVuY2U6MSxtZXRob2Q6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gMT09PWUubGVuZ3RoP3QocC5OZWdhdGUsZSxuKTpyKHAuU3VidHJhY3QsZSxuKX19LFwiKlwiOntyZWdleHA6L15cXCovLHByZWNlZGVuY2U6MCxtZXRob2Q6ci5iaW5kKHRoaXMscC5NdWx0aXBseSl9fSx1bmFyeTp7XCItXCI6e3JlZ2V4cDovXlxcLS8sbWV0aG9kOnQuYmluZCh0aGlzLHAuTmVnYXRlKX0sXCIhXCI6e3JlZ2V4cDovXlxcIS8sbWV0aG9kOnQuYmluZCh0aGlzLHAuTk9UKX19fSxwLkV4cHIucHJvdG90eXBlLl9wYXJzZUlucHV0cz1mdW5jdGlvbihlKXt2YXIgbj1lLm1hdGNoKC9cXCRcXGQvZykscj0wO2lmKG51bGwhPT1uKWZvcih2YXIgdD0wO3Q8bi5sZW5ndGg7dCsrKXt2YXIgbz1wYXJzZUludChuW3RdLnN1YnN0cigxKSkrMTtyPU1hdGgubWF4KHIsbyl9cmV0dXJuIHJ9LHAuRXhwci5wcm90b3R5cGUuX3JlcGxhY2VtZW50cz1mdW5jdGlvbihlKXtmb3IodmFyIG49ZS5zaGlmdCgpLHI9MDtyPGUubGVuZ3RoO3IrKyluPW4ucmVwbGFjZSgvXFwlL2ksZVtyXSk7cmV0dXJuIG59LHAuRXhwci5wcm90b3R5cGUuX3Rva2VuaXplPWZ1bmN0aW9uKGUpe2Zvcih2YXIgbj0tMSxyPVtdOzA8ZS5sZW5ndGg7KXt2YXIgdD1vKGU9ZS50cmltKCkpO3IucHVzaCh0KSxlPWUuc3Vic3RyKHQudmFsdWUubGVuZ3RoKX1mdW5jdGlvbiBvKGUpe2Zvcih2YXIgbiBpbiBwLkV4cHIuX0V4cHJlc3Npb25zKXt2YXIgcj1wLkV4cHIuX0V4cHJlc3Npb25zW25dO2Zvcih2YXIgdCBpbiByKXt2YXIgbz1yW3RdLGk9by5yZWdleHAsYT1lLm1hdGNoKGkpO2lmKG51bGwhPT1hKXJldHVybnt0eXBlOm4sdmFsdWU6YVswXSxtZXRob2Q6by5tZXRob2R9fX10aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUb25lLkV4cHI6IFVuZXhwZWN0ZWQgdG9rZW4gXCIrZSl9cmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm4gclsrK25dfSxwZWVrOmZ1bmN0aW9uKCl7cmV0dXJuIHJbbisxXX19fSxwLkV4cHIucHJvdG90eXBlLl9wYXJzZVRyZWU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fdG9rZW5pemUoZSksYT10aGlzLmlzVW5kZWYuYmluZCh0aGlzKTtmdW5jdGlvbiByKGUsbil7cmV0dXJuIWEoZSkmJlwiZ2x1ZVwiPT09ZS50eXBlJiZlLnZhbHVlPT09bn1mdW5jdGlvbiBvKGUsbixyKXt2YXIgdD1wLkV4cHIuX0V4cHJlc3Npb25zW25dO2lmKCFhKGUpKWZvcih2YXIgbyBpbiB0KXt2YXIgaT10W29dO2lmKGkucmVnZXhwLnRlc3QoZS52YWx1ZSkpe2lmKGEocikpcmV0dXJuITA7aWYoaS5wcmVjZWRlbmNlPT09cilyZXR1cm4hMH19cmV0dXJuITF9ZnVuY3Rpb24gaShlKXt2YXIgbjthKGUpJiYoZT01KSxuPWU8MD9mdW5jdGlvbiBlKCl7dmFyIG4scjtuPXQucGVlaygpO2lmKG8obixcInVuYXJ5XCIpKXJldHVybiBuPXQubmV4dCgpLHI9ZSgpLHtvcGVyYXRvcjpuLnZhbHVlLG1ldGhvZDpuLm1ldGhvZCxhcmdzOltyXX07cmV0dXJuIHMoKX0oKTppKGUtMSk7Zm9yKHZhciByPXQucGVlaygpO28ocixcImJpbmFyeVwiLGUpOyluPXtvcGVyYXRvcjoocj10Lm5leHQoKSkudmFsdWUsbWV0aG9kOnIubWV0aG9kLGFyZ3M6W24saShlLTEpXX0scj10LnBlZWsoKTtyZXR1cm4gbn1mdW5jdGlvbiBzKCl7dmFyIGUsbjtpZihlPXQucGVlaygpLGEoZSkpdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiVG9uZS5FeHByOiBVbmV4cGVjdGVkIHRlcm1pbmF0aW9uIG9mIGV4cHJlc3Npb25cIik7aWYoXCJmdW5jXCI9PT1lLnR5cGUpcmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBuPVtdO2lmKCFyKHQubmV4dCgpLFwiKFwiKSl0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ1RvbmUuRXhwcjogRXhwZWN0ZWQgKCBpbiBhIGZ1bmN0aW9uIGNhbGwgXCInK2UudmFsdWUrJ1wiJyk7cih0LnBlZWsoKSxcIilcIil8fChuPWZ1bmN0aW9uKCl7dmFyIGUsbj1bXTtmb3IoO2U9aSgpLCFhKGUpJiYobi5wdXNoKGUpLHIodC5wZWVrKCksXCIsXCIpKTspdC5uZXh0KCk7cmV0dXJuIG59KCkpO2lmKHIodC5uZXh0KCksXCIpXCIpKXJldHVybnttZXRob2Q6ZS5tZXRob2QsYXJnczpuLG5hbWU6bmFtZX07dGhyb3cgbmV3IFN5bnRheEVycm9yKCdUb25lLkV4cHI6IEV4cGVjdGVkICkgaW4gYSBmdW5jdGlvbiBjYWxsIFwiJytlLnZhbHVlKydcIicpfShlPXQubmV4dCgpKTtpZihcInZhbHVlXCI9PT1lLnR5cGUpcmV0dXJue21ldGhvZDooZT10Lm5leHQoKSkubWV0aG9kLGFyZ3M6ZS52YWx1ZX07aWYocihlLFwiKFwiKSl7aWYodC5uZXh0KCksbj1pKCksIXIoZT10Lm5leHQoKSxcIilcIikpdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiRXhwZWN0ZWQgKVwiKTtyZXR1cm4gbn10aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUb25lLkV4cHI6IFBhcnNlIGVycm9yLCBjYW5ub3QgcHJvY2VzcyB0b2tlbiBcIitlLnZhbHVlKX1yZXR1cm4gaSgpfSxwLkV4cHIucHJvdG90eXBlLl9ldmFsPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmlzVW5kZWYoZSkpe3ZhciBuPWUubWV0aG9kKGUuYXJncyx0aGlzKTtyZXR1cm4gdGhpcy5fbm9kZXMucHVzaChuKSxufX0scC5FeHByLnByb3RvdHlwZS5fZGlzcG9zZU5vZGVzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTx0aGlzLl9ub2Rlcy5sZW5ndGg7ZSsrKXt2YXIgbj10aGlzLl9ub2Rlc1tlXTt0aGlzLmlzRnVuY3Rpb24obi5kaXNwb3NlKT9uLmRpc3Bvc2UoKTp0aGlzLmlzRnVuY3Rpb24obi5kaXNjb25uZWN0KSYmbi5kaXNjb25uZWN0KCksbj1udWxsLHRoaXMuX25vZGVzW2VdPW51bGx9dGhpcy5fbm9kZXM9bnVsbH0scC5FeHByLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cC5wcm90b3R5cGUuZGlzcG9zZS5jYWxsKHRoaXMpLHRoaXMuX2Rpc3Bvc2VOb2RlcygpfSxwLkV4cHJ9KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXygyMSksX193ZWJwYWNrX3JlcXVpcmVfXygxMyksX193ZWJwYWNrX3JlcXVpcmVfXygyKV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO3JldHVybiBlLkdyZWF0ZXJUaGFuPWZ1bmN0aW9uKHQpe3RoaXMuY3JlYXRlSW5zT3V0cygyLDApLHRoaXMuX3BhcmFtPXRoaXMuaW5wdXRbMF09bmV3IGUuU3VidHJhY3QodCksdGhpcy5pbnB1dFsxXT10aGlzLl9wYXJhbS5pbnB1dFsxXSx0aGlzLl9ndHo9dGhpcy5vdXRwdXQ9bmV3IGUuR3JlYXRlclRoYW5aZXJvLHRoaXMuX3BhcmFtLmNvbm5lY3QodGhpcy5fZ3R6KX0sZS5leHRlbmQoZS5HcmVhdGVyVGhhbixlLlNpZ25hbCksZS5HcmVhdGVyVGhhbi5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybiBlLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fcGFyYW0uZGlzcG9zZSgpLHRoaXMuX3BhcmFtPW51bGwsdGhpcy5fZ3R6LmRpc3Bvc2UoKSx0aGlzLl9ndHo9bnVsbCx0aGlzfSxlLkdyZWF0ZXJUaGFufSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oNiksX193ZWJwYWNrX3JlcXVpcmVfXygxNSldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbihzKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gcy5BYnM9ZnVuY3Rpb24oKXt0aGlzLl9hYnM9dGhpcy5pbnB1dD10aGlzLm91dHB1dD1uZXcgcy5XYXZlU2hhcGVyKGZ1bmN0aW9uKHMpe3JldHVybiAwPT09cz8wOk1hdGguYWJzKHMpfSwxMjcpfSxzLmV4dGVuZChzLkFicyxzLlNpZ25hbEJhc2UpLHMuQWJzLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIHMucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9hYnMuZGlzcG9zZSgpLHRoaXMuX2Ficz1udWxsLHRoaXN9LHMuQWJzfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oNiksX193ZWJwYWNrX3JlcXVpcmVfXygxKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGkpe1widXNlIHN0cmljdFwiO3JldHVybiBpLk1vZHVsbz1mdW5jdGlvbih0KXt0aGlzLmNyZWF0ZUluc091dHMoMSwwKSx0aGlzLl9zaGFwZXI9bmV3IGkuV2F2ZVNoYXBlcihNYXRoLnBvdygyLDE2KSksdGhpcy5fbXVsdGlwbHk9bmV3IGkuTXVsdGlwbHksdGhpcy5fc3VidHJhY3Q9dGhpcy5vdXRwdXQ9bmV3IGkuU3VidHJhY3QsdGhpcy5fbW9kU2lnbmFsPW5ldyBpLlNpZ25hbCh0KSx0aGlzLmlucHV0LmZhbih0aGlzLl9zaGFwZXIsdGhpcy5fc3VidHJhY3QpLHRoaXMuX21vZFNpZ25hbC5jb25uZWN0KHRoaXMuX211bHRpcGx5LDAsMCksdGhpcy5fc2hhcGVyLmNvbm5lY3QodGhpcy5fbXVsdGlwbHksMCwxKSx0aGlzLl9tdWx0aXBseS5jb25uZWN0KHRoaXMuX3N1YnRyYWN0LDAsMSksdGhpcy5fc2V0V2F2ZVNoYXBlcih0KX0saS5leHRlbmQoaS5Nb2R1bG8saS5TaWduYWxCYXNlKSxpLk1vZHVsby5wcm90b3R5cGUuX3NldFdhdmVTaGFwZXI9ZnVuY3Rpb24oaSl7dGhpcy5fc2hhcGVyLnNldE1hcChmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5mbG9vcigodCsxZS00KS9pKX0pfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5Nb2R1bG8ucHJvdG90eXBlLFwidmFsdWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21vZFNpZ25hbC52YWx1ZX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX21vZFNpZ25hbC52YWx1ZT10LHRoaXMuX3NldFdhdmVTaGFwZXIodCl9fSksaS5Nb2R1bG8ucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtyZXR1cm4gaS5wcm90b3R5cGUuZGlzcG9zZS5jYWxsKHRoaXMpLHRoaXMuX3NoYXBlci5kaXNwb3NlKCksdGhpcy5fc2hhcGVyPW51bGwsdGhpcy5fbXVsdGlwbHkuZGlzcG9zZSgpLHRoaXMuX211bHRpcGx5PW51bGwsdGhpcy5fc3VidHJhY3QuZGlzcG9zZSgpLHRoaXMuX3N1YnRyYWN0PW51bGwsdGhpcy5fbW9kU2lnbmFsLmRpc3Bvc2UoKSx0aGlzLl9tb2RTaWduYWw9bnVsbCx0aGlzfSxpLk1vZHVsb30pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLFxuXHRcdFx0XHRfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyAhPT0gdW5kZWZpbmVkICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSk7XG5cbiB9KSxcbiAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzshKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbX193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDYpXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24odCl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIHQuUG93PWZ1bmN0aW9uKGUpe3RoaXMuX2V4cD10aGlzLmRlZmF1bHRBcmcoZSwxKSx0aGlzLl9leHBTY2FsZXI9dGhpcy5pbnB1dD10aGlzLm91dHB1dD1uZXcgdC5XYXZlU2hhcGVyKHRoaXMuX2V4cEZ1bmModGhpcy5fZXhwKSw4MTkyKX0sdC5leHRlbmQodC5Qb3csdC5TaWduYWxCYXNlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5Qb3cucHJvdG90eXBlLFwidmFsdWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V4cH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2V4cD1lLHRoaXMuX2V4cFNjYWxlci5zZXRNYXAodGhpcy5fZXhwRnVuYyh0aGlzLl9leHApKX19KSx0LlBvdy5wcm90b3R5cGUuX2V4cEZ1bmM9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLnBvdyhNYXRoLmFicyhlKSx0KX19LHQuUG93LnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIHQucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLl9leHBTY2FsZXIuZGlzcG9zZSgpLHRoaXMuX2V4cFNjYWxlcj1udWxsLHRoaXN9LHQuUG93fSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oNiksX193ZWJwYWNrX3JlcXVpcmVfXygyKV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKG4pe1widXNlIHN0cmljdFwiO3JldHVybiBuLkF1ZGlvVG9HYWluPWZ1bmN0aW9uKCl7dGhpcy5fbm9ybT10aGlzLmlucHV0PXRoaXMub3V0cHV0PW5ldyBuLldhdmVTaGFwZXIoZnVuY3Rpb24obil7cmV0dXJuKG4rMSkvMn0pfSxuLmV4dGVuZChuLkF1ZGlvVG9HYWluLG4uU2lnbmFsQmFzZSksbi5BdWRpb1RvR2Fpbi5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybiBuLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5fbm9ybS5kaXNwb3NlKCksdGhpcy5fbm9ybT1udWxsLHRoaXN9LG4uQXVkaW9Ub0dhaW59KS5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSxcblx0XHRcdFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXG4gfSksXG4gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187IShfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gW19fd2VicGFja19yZXF1aXJlX18oMCksX193ZWJwYWNrX3JlcXVpcmVfXyg2KV0sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO3JldHVybiBlLkVxdWFsUG93ZXJHYWluPWZ1bmN0aW9uKCl7dGhpcy5fZXFQb3dlcj10aGlzLmlucHV0PXRoaXMub3V0cHV0PW5ldyBlLldhdmVTaGFwZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguYWJzKGUpPC4wMDE/MDp0aGlzLmVxdWFsUG93ZXJTY2FsZShlKX0uYmluZCh0aGlzKSw0MDk2KX0sZS5leHRlbmQoZS5FcXVhbFBvd2VyR2FpbixlLlNpZ25hbEJhc2UpLGUuRXF1YWxQb3dlckdhaW4ucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtyZXR1cm4gZS5wcm90b3R5cGUuZGlzcG9zZS5jYWxsKHRoaXMpLHRoaXMuX2VxUG93ZXIuZGlzcG9zZSgpLHRoaXMuX2VxUG93ZXI9bnVsbCx0aGlzfSxlLkVxdWFsUG93ZXJHYWlufSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyEoX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFtfX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fd2VicGFja19yZXF1aXJlX18oMTkpLF9fd2VicGFja19yZXF1aXJlX18oOSldLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IChmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gdC5UaW1lbGluZVN0YXRlPWZ1bmN0aW9uKGUpe3QuVGltZWxpbmUuY2FsbCh0aGlzKSx0aGlzLl9pbml0aWFsPWV9LHQuZXh0ZW5kKHQuVGltZWxpbmVTdGF0ZSx0LlRpbWVsaW5lKSx0LlRpbWVsaW5lU3RhdGUucHJvdG90eXBlLmdldFZhbHVlQXRUaW1lPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZ2V0KGUpO3JldHVybiBudWxsIT09dD90LnN0YXRlOnRoaXMuX2luaXRpYWx9LHQuVGltZWxpbmVTdGF0ZS5wcm90b3R5cGUuc2V0U3RhdGVBdFRpbWU9ZnVuY3Rpb24oZSx0KXt0aGlzLmFkZCh7c3RhdGU6ZSx0aW1lOnR9KX0sdC5UaW1lbGluZVN0YXRlfSkuYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksXG5cdFx0XHRcdF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTtcblxuIH0pLFxuIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG5cbnZhciBhdWRpb3dvcmtsZXRfcG9seWZpbGwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI0KTtcblxudmFyIHNoaW1zID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNSk7XG5cbnZhciBhdWRpb2NvbnRleHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5cbnZhciBtYWluX01haW4gPSBmdW5jdGlvbiBNYWluKCkge1xuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWFpbik7XG5cbiAgdGhpcy5pbnB1dCA9IGF1ZGlvY29udGV4dFtcImFcIiBdLmNyZWF0ZUdhaW4oKTtcbiAgdGhpcy5vdXRwdXQgPSBhdWRpb2NvbnRleHRbXCJhXCIgXS5jcmVhdGVHYWluKCk7IFxuXG4gIHRoaXMubGltaXRlciA9IGF1ZGlvY29udGV4dFtcImFcIiBdLmNyZWF0ZUR5bmFtaWNzQ29tcHJlc3NvcigpO1xuICB0aGlzLmxpbWl0ZXIudGhyZXNob2xkLnZhbHVlID0gLTM7XG4gIHRoaXMubGltaXRlci5yYXRpby52YWx1ZSA9IDIwO1xuICB0aGlzLmxpbWl0ZXIua25lZS52YWx1ZSA9IDE7XG4gIHRoaXMuYXVkaW9jb250ZXh0ID0gYXVkaW9jb250ZXh0W1wiYVwiIF07XG4gIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTsgXG5cbiAgdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMubGltaXRlcik7IFxuXG4gIHRoaXMubGltaXRlci5jb25uZWN0KHRoaXMub3V0cHV0KTsgXG5cbiAgdGhpcy5tZXRlciA9IGF1ZGlvY29udGV4dFtcImFcIiBdLmNyZWF0ZUdhaW4oKTtcbiAgdGhpcy5mZnRNZXRlciA9IGF1ZGlvY29udGV4dFtcImFcIiBdLmNyZWF0ZUdhaW4oKTtcbiAgdGhpcy5vdXRwdXQuY29ubmVjdCh0aGlzLm1ldGVyKTtcbiAgdGhpcy5vdXRwdXQuY29ubmVjdCh0aGlzLmZmdE1ldGVyKTsgXG5cbiAgdGhpcy5vdXRwdXQuY29ubmVjdCh0aGlzLmF1ZGlvY29udGV4dC5kZXN0aW5hdGlvbik7IFxuXG4gIHRoaXMuc291bmRBcnJheSA9IFtdOyBcblxuICB0aGlzLnBhcnRzID0gW107IFxuXG4gIHRoaXMuZXh0ZW5zaW9ucyA9IFtdO1xufTsgXG5cblxudmFyIHA1c291bmQgPSBuZXcgbWFpbl9NYWluKCk7XG4vKipcbiAqIFJldHVybnMgYSBudW1iZXIgcmVwcmVzZW50aW5nIHRoZSBvdXRwdXQgdm9sdW1lIGZvciBzb3VuZFxuICogaW4gdGhpcyBza2V0Y2guXG4gKlxuICogQG1ldGhvZCBnZXRPdXRwdXRWb2x1bWVcbiAqIEByZXR1cm4ge051bWJlcn0gT3V0cHV0IHZvbHVtZSBmb3Igc291bmQgaW4gdGhpcyBza2V0Y2guXG4gKiAgICAgICAgICAgICAgICAgIFNob3VsZCBiZSBiZXR3ZWVuIDAuMCAoc2lsZW5jZSkgYW5kIDEuMC5cbiAqL1xuXG5wNS5wcm90b3R5cGUuZ2V0T3V0cHV0Vm9sdW1lID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gcDVzb3VuZC5vdXRwdXQuZ2Fpbi52YWx1ZTtcbn07XG4vKipcbiAqICA8cD5TY2FsZSB0aGUgb3V0cHV0IG9mIGFsbCBzb3VuZCBpbiB0aGlzIHNrZXRjaDwvcD5cbiAqICBTY2FsZWQgYmV0d2VlbiAwLjAgKHNpbGVuY2UpIGFuZCAxLjAgKGZ1bGwgdm9sdW1lKS5cbiAqICAxLjAgaXMgdGhlIG1heGltdW0gYW1wbGl0dWRlIG9mIGEgZGlnaXRhbCBzb3VuZCwgc28gbXVsdGlwbHlpbmdcbiAqICBieSBncmVhdGVyIHRoYW4gMS4wIG1heSBjYXVzZSBkaWdpdGFsIGRpc3RvcnRpb24uIFRvXG4gKiAgZmFkZSwgcHJvdmlkZSBhIDxjb2RlPnJhbXBUaW1lPC9jb2RlPiBwYXJhbWV0ZXIuIEZvciBtb3JlXG4gKiAgY29tcGxleCBmYWRlcywgc2VlIHRoZSBFbnZlbG9wZSBjbGFzcy5cbiAqXG4gKiAgQWx0ZXJuYXRlbHksIHlvdSBjYW4gcGFzcyBpbiBhIHNpZ25hbCBzb3VyY2Ugc3VjaCBhcyBhblxuICogIG9zY2lsbGF0b3IgdG8gbW9kdWxhdGUgdGhlIGFtcGxpdHVkZSB3aXRoIGFuIGF1ZGlvIHNpZ25hbC5cbiAqXG4gKiAgPHA+PGI+SG93IFRoaXMgV29ya3M8L2I+OiBXaGVuIHlvdSBsb2FkIHRoZSBwNS5zb3VuZCBtb2R1bGUsIGl0XG4gKiAgY3JlYXRlcyBhIHNpbmdsZSBpbnN0YW5jZSBvZiBwNXNvdW5kLiBBbGwgc291bmQgb2JqZWN0cyBpbiB0aGlzXG4gKiAgbW9kdWxlIG91dHB1dCB0byBwNXNvdW5kIGJlZm9yZSByZWFjaGluZyB5b3VyIGNvbXB1dGVyJ3Mgb3V0cHV0LlxuICogIFNvIGlmIHlvdSBjaGFuZ2UgdGhlIGFtcGxpdHVkZSBvZiBwNXNvdW5kLCBpdCBpbXBhY3RzIGFsbCBvZiB0aGVcbiAqICBzb3VuZCBpbiB0aGlzIG1vZHVsZS48L3A+XG4gKlxuICogIDxwPklmIG5vIHZhbHVlIGlzIHByb3ZpZGVkLCByZXR1cm5zIGEgV2ViIEF1ZGlvIEFQSSBHYWluIE5vZGU8L3A+XG4gKlxuICogIEBtZXRob2QgIG91dHB1dFZvbHVtZVxuICogIEBwYXJhbSB7TnVtYmVyfE9iamVjdH0gdm9sdW1lICBWb2x1bWUgKGFtcGxpdHVkZSkgYmV0d2VlbiAwLjBcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCAxLjAgb3IgbW9kdWxhdGluZyBzaWduYWwvb3NjaWxsYXRvclxuICogIEBwYXJhbSB7TnVtYmVyfSBbcmFtcFRpbWVdICBGYWRlIGZvciB0IHNlY29uZHNcbiAqICBAcGFyYW0ge051bWJlcn0gW3RpbWVGcm9tTm93XSAgU2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW4gYXRcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdCBzZWNvbmRzIGluIHRoZSBmdXR1cmVcbiAqL1xuXG5cbnA1LnByb3RvdHlwZS5vdXRwdXRWb2x1bWUgPSBmdW5jdGlvbiAodm9sKSB7XG4gIHZhciByYW1wVGltZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgdmFyIHRGcm9tTm93ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAwO1xuXG4gIGlmICh0eXBlb2Ygdm9sID09PSAnbnVtYmVyJykge1xuICAgIHZhciBub3cgPSBwNXNvdW5kLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICB2YXIgY3VycmVudFZvbCA9IHA1c291bmQub3V0cHV0LmdhaW4udmFsdWU7XG4gICAgcDVzb3VuZC5vdXRwdXQuZ2Fpbi5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMobm93ICsgdEZyb21Ob3cpO1xuICAgIHA1c291bmQub3V0cHV0LmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoY3VycmVudFZvbCwgbm93ICsgdEZyb21Ob3cpO1xuICAgIHA1c291bmQub3V0cHV0LmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodm9sLCBub3cgKyB0RnJvbU5vdyArIHJhbXBUaW1lKTtcbiAgfSBlbHNlIGlmICh2b2wpIHtcbiAgICB2b2wuY29ubmVjdChwNXNvdW5kLm91dHB1dC5nYWluKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcDVzb3VuZC5vdXRwdXQuZ2FpbjtcbiAgfVxufTtcbi8qKlxuICogIGBwNS5zb3VuZE91dGAgaXMgdGhlIHA1LnNvdW5kIGZpbmFsIG91dHB1dCBidXMuIEl0IHNlbmRzIG91dHB1dCB0b1xuICogIHRoZSBkZXN0aW5hdGlvbiBvZiB0aGlzIHdpbmRvdydzIHdlYiBhdWRpbyBjb250ZXh0LiBJdCBjb250YWluc1xuICogIFdlYiBBdWRpbyBBUEkgbm9kZXMgaW5jbHVkaW5nIGEgZHlhbm1pY3NDb21wcmVzc29yICg8Y29kZT4ubGltaXRlcjwvY29kZT4pLFxuICogIGFuZCBHYWluIE5vZGVzIGZvciA8Y29kZT4uaW5wdXQ8L2NvZGU+IGFuZCA8Y29kZT4ub3V0cHV0PC9jb2RlPi5cbiAqXG4gKiAgQHByb3BlcnR5IHtPYmplY3R9IHNvdW5kT3V0XG4gKi9cblxuXG5wNS5wcm90b3R5cGUuc291bmRPdXQgPSBwNS5zb3VuZE91dCA9IHA1c291bmQ7IFxuXG5wNS5zb3VuZE91dC5fc2lsZW50Tm9kZSA9IHA1c291bmQuYXVkaW9jb250ZXh0LmNyZWF0ZUdhaW4oKTtcbnA1LnNvdW5kT3V0Ll9zaWxlbnROb2RlLmdhaW4udmFsdWUgPSAwO1xuXG5wNS5zb3VuZE91dC5fc2lsZW50Tm9kZS5jb25uZWN0KHA1c291bmQuYXVkaW9jb250ZXh0LmRlc3RpbmF0aW9uKTtcblxuIHZhciBtYWluID0gKHA1c291bmQpO1xudmFyIHByb2Nlc3Nvck5hbWVzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcbnZhciBwcm9jZXNzb3JOYW1lc19kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKHByb2Nlc3Nvck5hbWVzKTtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuXG5cbi8qKlxuICogQGZvciBwNVxuICovXG5cbi8qKlxuICogUmV0dXJucyBhIG51bWJlciByZXByZXNlbnRpbmcgdGhlIHNhbXBsZSByYXRlLCBpbiBzYW1wbGVzIHBlciBzZWNvbmQsXG4gKiBvZiBhbGwgc291bmQgb2JqZWN0cyBpbiB0aGlzIGF1ZGlvIGNvbnRleHQuIEl0IGlzIGRldGVybWluZWQgYnkgdGhlXG4gKiBzYW1wbGluZyByYXRlIG9mIHlvdXIgb3BlcmF0aW5nIHN5c3RlbSdzIHNvdW5kIGNhcmQsIGFuZCBpdCBpcyBub3RcbiAqIGN1cnJlbnRseSBwb3NzaWxlIHRvIGNoYW5nZS5cbiAqIEl0IGlzIG9mdGVuIDQ0MTAwLCBvciB0d2ljZSB0aGUgcmFuZ2Ugb2YgaHVtYW4gaGVhcmluZy5cbiAqXG4gKiBAbWV0aG9kIHNhbXBsZVJhdGVcbiAqIEByZXR1cm4ge051bWJlcn0gc2FtcGxlcmF0ZSBzYW1wbGVzIHBlciBzZWNvbmRcbiAqL1xuXG5mdW5jdGlvbiBzYW1wbGVSYXRlKCkge1xuICByZXR1cm4gbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZTtcbn1cbi8qKlxuICogIFJldHVybnMgdGhlIGNsb3Nlc3QgTUlESSBub3RlIHZhbHVlIGZvclxuICogIGEgZ2l2ZW4gZnJlcXVlbmN5LlxuICpcbiAqICBAbWV0aG9kIGZyZXFUb01pZGlcbiAqICBAcGFyYW0gIHtOdW1iZXJ9IGZyZXF1ZW5jeSBBIGZyZXFldW5jeSwgZm9yIGV4YW1wbGUsIHRoZSBcIkFcIlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFib3ZlIE1pZGRsZSBDIGlzIDQ0MEh6XG4gKiAgQHJldHVybiB7TnVtYmVyfSAgIE1JREkgbm90ZSB2YWx1ZVxuICovXG5cblxuZnVuY3Rpb24gZnJlcVRvTWlkaShmKSB7XG4gIHZhciBtYXRobG9nMiA9IE1hdGgubG9nKGYgLyA0NDApIC8gTWF0aC5sb2coMik7XG4gIHZhciBtID0gTWF0aC5yb3VuZCgxMiAqIG1hdGhsb2cyKSArIDY5O1xuICByZXR1cm4gbTtcbn1cbi8qKlxuICogIFJldHVybnMgdGhlIGZyZXF1ZW5jeSB2YWx1ZSBvZiBhIE1JREkgbm90ZSB2YWx1ZS5cbiAqICBHZW5lcmFsIE1JREkgdHJlYXRzIG5vdGVzIGFzIGludGVnZXJzIHdoZXJlIG1pZGRsZSBDXG4gKiAgaXMgNjAsIEMjIGlzIDYxLCBEIGlzIDYyIGV0Yy4gVXNlZnVsIGZvciBnZW5lcmF0aW5nXG4gKiAgbXVzaWNhbCBmcmVxdWVuY2llcyB3aXRoIG9zY2lsbGF0b3JzLlxuICpcbiAqICBAbWV0aG9kICBtaWRpVG9GcmVxXG4gKiAgQHBhcmFtICB7TnVtYmVyfSBtaWRpTm90ZSBUaGUgbnVtYmVyIG9mIGEgTUlESSBub3RlXG4gKiAgQHJldHVybiB7TnVtYmVyfSBGcmVxdWVuY3kgdmFsdWUgb2YgdGhlIGdpdmVuIE1JREkgbm90ZVxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgbWlkaU5vdGVzID0gWzYwLCA2NCwgNjcsIDcyXTtcbiAqICBsZXQgbm90ZUluZGV4ID0gMDtcbiAqICBsZXQgbWlkaVZhbCwgZnJlcTtcbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQoc3RhcnRTb3VuZCk7XG4gKiAgICBvc2MgPSBuZXcgcDUuVHJpT3NjKCk7XG4gKiAgICBlbnYgPSBuZXcgcDUuRW52ZWxvcGUoKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIGRyYXcoKSB7XG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDEwLCAyMCk7XG4gKiAgICBpZiAobWlkaVZhbCkge1xuICogICAgICB0ZXh0KCdNSURJOiAnICsgbWlkaVZhbCwgMTAsIDQwKTtcbiAqICAgICAgdGV4dCgnRnJlcTogJyArIGZyZXEsIDEwLCA2MCk7XG4gKiAgICB9XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBzdGFydFNvdW5kKCkge1xuICogICAgLy8gc2VlIGFsc286IHVzZXJTdGFydEF1ZGlvKCk7XG4gKiAgICBvc2Muc3RhcnQoKTtcbiAqXG4gKiAgICBtaWRpVmFsID0gbWlkaU5vdGVzW25vdGVJbmRleCAlIG1pZGlOb3Rlcy5sZW5ndGhdO1xuICogICAgZnJlcSA9IG1pZGlUb0ZyZXEobWlkaVZhbCk7XG4gKiAgICBvc2MuZnJlcShmcmVxKTtcbiAqICAgIGVudi5yYW1wKG9zYywgMCwgMS4wLCAwKTtcbiAqXG4gKiAgICBub3RlSW5kZXgrKztcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cblxuZnVuY3Rpb24gbWlkaVRvRnJlcShtKSB7XG4gIHJldHVybiA0NDAgKiBNYXRoLnBvdygyLCAobSAtIDY5KSAvIDEyLjApO1xufSBcblxuXG5mdW5jdGlvbiBub3RlVG9GcmVxKG5vdGUpIHtcbiAgaWYgKHR5cGVvZiBub3RlICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBub3RlO1xuICB9XG5cbiAgdmFyIHdob2xlTm90ZXMgPSB7XG4gICAgQTogMjEsXG4gICAgQjogMjMsXG4gICAgQzogMjQsXG4gICAgRDogMjYsXG4gICAgRTogMjgsXG4gICAgRjogMjksXG4gICAgRzogMzFcbiAgfTtcbiAgdmFyIHZhbHVlID0gd2hvbGVOb3Rlc1tub3RlWzBdLnRvVXBwZXJDYXNlKCldO1xuICB2YXIgb2N0YXZlID0gfn5ub3RlLnNsaWNlKC0xKTtcbiAgdmFsdWUgKz0gMTIgKiAob2N0YXZlIC0gMSk7XG5cbiAgc3dpdGNoIChub3RlWzFdKSB7XG4gICAgY2FzZSAnIyc6XG4gICAgICB2YWx1ZSArPSAxO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdiJzpcbiAgICAgIHZhbHVlIC09IDE7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuXG4gIHJldHVybiBtaWRpVG9GcmVxKHZhbHVlKTtcbn1cbi8qKlxuICogIExpc3QgdGhlIFNvdW5kRmlsZSBmb3JtYXRzIHRoYXQgeW91IHdpbGwgaW5jbHVkZS4gTG9hZFNvdW5kXG4gKiAgd2lsbCBzZWFyY2ggeW91ciBkaXJlY3RvcnkgZm9yIHRoZXNlIGV4dGVuc2lvbnMsIGFuZCB3aWxsIHBpY2tcbiAqICBhIGZvcm1hdCB0aGF0IGlzIGNvbXBhdGFibGUgd2l0aCB0aGUgY2xpZW50J3Mgd2ViIGJyb3dzZXIuXG4gKiAgPGEgaHJlZj1cImh0dHA6Ly9tZWRpYS5pby9cIj5IZXJlPC9hPiBpcyBhIGZyZWUgb25saW5lIGZpbGVcbiAqICBjb252ZXJ0ZXIuXG4gKlxuICogIEBtZXRob2Qgc291bmRGb3JtYXRzXG4gKiAgQHBhcmFtIHtTdHJpbmd9IFsuLi5mb3JtYXRzXSBpLmUuICdtcDMnLCAnd2F2JywgJ29nZydcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAqICAgIC8vIHNldCB0aGUgZ2xvYmFsIHNvdW5kIGZvcm1hdHNcbiAqICAgIHNvdW5kRm9ybWF0cygnbXAzJywgJ29nZycpO1xuICpcbiAqICAgIC8vIGxvYWQgZWl0aGVyIGJlYXRib3gubXAzLCBvciAub2dnLCBkZXBlbmRpbmcgb24gYnJvd3NlclxuICogICAgbXlTb3VuZCA9IGxvYWRTb3VuZCgnYXNzZXRzL2JlYXRib3gubXAzJyk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgICAgdGV4dCgnc291bmQgbG9hZGVkISB0YXAgdG8gcGxheScsIDEwLCAyMCwgd2lkdGggLSAyMCk7XG4gKiAgICAgICBjbnYubW91c2VQcmVzc2VkKGZ1bmN0aW9uKCkge1xuICogICAgICAgICBteVNvdW5kLnBsYXkoKTtcbiAqICAgICAgIH0pO1xuICogICAgIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG5mdW5jdGlvbiBzb3VuZEZvcm1hdHMoKSB7XG4gIG1haW4uZXh0ZW5zaW9ucyA9IFtdOyBcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIGFyZ3VtZW50c1tpXSA9IGFyZ3VtZW50c1tpXS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgaWYgKFsnbXAzJywgJ3dhdicsICdvZ2cnLCAnbTRhJywgJ2FhYyddLmluZGV4T2YoYXJndW1lbnRzW2ldKSA+IC0xKSB7XG4gICAgICBtYWluLmV4dGVuc2lvbnMucHVzaChhcmd1bWVudHNbaV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBhcmd1bWVudHNbaV0gKyAnIGlzIG5vdCBhIHZhbGlkIHNvdW5kIGZvcm1hdCEnO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkaXNwb3NlU291bmQoKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbWFpbi5zb3VuZEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgbWFpbi5zb3VuZEFycmF5W2ldLmRpc3Bvc2UoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfY2hlY2tGaWxlRm9ybWF0cyhwYXRocykge1xuICB2YXIgcGF0aDsgXG5cbiAgaWYgKHR5cGVvZiBwYXRocyA9PT0gJ3N0cmluZycpIHtcbiAgICBwYXRoID0gcGF0aHM7IFxuXG4gICAgdmFyIGV4dFRlc3QgPSBwYXRoLnNwbGl0KCcuJykucG9wKCk7IFxuXG4gICAgaWYgKFsnbXAzJywgJ3dhdicsICdvZ2cnLCAnbTRhJywgJ2FhYyddLmluZGV4T2YoZXh0VGVzdCkgPiAtMSkge1xuICAgICAgaWYgKCFwNS5wcm90b3R5cGUuaXNGaWxlU3VwcG9ydGVkKGV4dFRlc3QpKSB7XG4gICAgICAgIHZhciBwYXRoU3BsaXQgPSBwYXRoLnNwbGl0KCcuJyk7XG4gICAgICAgIHZhciBwYXRoQ29yZSA9IHBhdGhTcGxpdFtwYXRoU3BsaXQubGVuZ3RoIC0gMV07XG5cbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1haW4uZXh0ZW5zaW9ucy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICB2YXIgX2V4dGVuc2lvbiA9IG1haW4uZXh0ZW5zaW9uc1tfaV07XG5cbiAgICAgICAgICB2YXIgX3N1cHBvcnRlZCA9IHA1LnByb3RvdHlwZS5pc0ZpbGVTdXBwb3J0ZWQoX2V4dGVuc2lvbik7XG5cbiAgICAgICAgICBpZiAoX3N1cHBvcnRlZCkge1xuICAgICAgICAgICAgcGF0aENvcmUgPSAnJztcblxuICAgICAgICAgICAgaWYgKHBhdGhTcGxpdC5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgICAgcGF0aENvcmUgKz0gcGF0aFNwbGl0WzBdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IgKHZhciBfaTIgPSAxOyBfaTIgPD0gcGF0aFNwbGl0Lmxlbmd0aCAtIDI7IF9pMisrKSB7XG4gICAgICAgICAgICAgIHZhciBwID0gcGF0aFNwbGl0W19pMl07XG4gICAgICAgICAgICAgIHBhdGhDb3JlICs9ICcuJyArIHA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhdGggPSBwYXRoQ29yZSArPSAnLic7XG4gICAgICAgICAgICBwYXRoID0gcGF0aCArPSBfZXh0ZW5zaW9uO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBcbiAgICBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgX2kzID0gMDsgX2kzIDwgbWFpbi5leHRlbnNpb25zLmxlbmd0aDsgX2kzKyspIHtcbiAgICAgICAgICB2YXIgX2V4dGVuc2lvbjIgPSBtYWluLmV4dGVuc2lvbnNbX2kzXTtcblxuICAgICAgICAgIHZhciBfc3VwcG9ydGVkMiA9IHA1LnByb3RvdHlwZS5pc0ZpbGVTdXBwb3J0ZWQoX2V4dGVuc2lvbjIpO1xuXG4gICAgICAgICAgaWYgKF9zdXBwb3J0ZWQyKSB7XG4gICAgICAgICAgICBwYXRoID0gcGF0aCArICcuJyArIF9leHRlbnNpb24yO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gIH0gXG4gIGVsc2UgaWYgKF90eXBlb2YocGF0aHMpID09PSAnb2JqZWN0Jykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRocy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uID0gcGF0aHNbaV0uc3BsaXQoJy4nKS5wb3AoKTtcbiAgICAgICAgdmFyIHN1cHBvcnRlZCA9IHA1LnByb3RvdHlwZS5pc0ZpbGVTdXBwb3J0ZWQoZXh0ZW5zaW9uKTtcblxuICAgICAgICBpZiAoc3VwcG9ydGVkKSB7XG4gICAgICAgICAgcGF0aCA9IHBhdGhzW2ldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gIHJldHVybiBwYXRoO1xufVxuLyoqXG4gKiAgVXNlZCBieSBPc2MgYW5kIEVudmVsb3BlIHRvIGNoYWluIHNpZ25hbCBtYXRoXG4gKi9cblxuXG5mdW5jdGlvbiBfbWF0aENoYWluKG8sIG1hdGgsIHRoaXNDaGFpbiwgbmV4dENoYWluLCB0eXBlKSB7XG4gIGZvciAodmFyIGkgaW4gby5tYXRoT3BzKSB7XG4gICAgaWYgKG8ubWF0aE9wc1tpXSBpbnN0YW5jZW9mIHR5cGUpIHtcbiAgICAgIG8ubWF0aE9wc1tpXS5kaXNwb3NlKCk7XG4gICAgICB0aGlzQ2hhaW4gPSBpO1xuXG4gICAgICBpZiAodGhpc0NoYWluIDwgby5tYXRoT3BzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgbmV4dENoYWluID0gby5tYXRoT3BzW2kgKyAxXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBvLm1hdGhPcHNbdGhpc0NoYWluIC0gMV0uZGlzY29ubmVjdCgpO1xuICBvLm1hdGhPcHNbdGhpc0NoYWluIC0gMV0uY29ubmVjdChtYXRoKTtcbiAgbWF0aC5jb25uZWN0KG5leHRDaGFpbik7XG4gIG8ubWF0aE9wc1t0aGlzQ2hhaW5dID0gbWF0aDtcbiAgcmV0dXJuIG87XG59IFxuXG5cbmZ1bmN0aW9uIGNvbnZlcnRUb1dhdihhdWRpb0J1ZmZlcikge1xuICB2YXIgbGVmdENoYW5uZWwsIHJpZ2h0Q2hhbm5lbDtcbiAgbGVmdENoYW5uZWwgPSBhdWRpb0J1ZmZlci5nZXRDaGFubmVsRGF0YSgwKTsgXG5cbiAgaWYgKGF1ZGlvQnVmZmVyLm51bWJlck9mQ2hhbm5lbHMgPiAxKSB7XG4gICAgcmlnaHRDaGFubmVsID0gYXVkaW9CdWZmZXIuZ2V0Q2hhbm5lbERhdGEoMSk7XG4gIH0gZWxzZSB7XG4gICAgcmlnaHRDaGFubmVsID0gbGVmdENoYW5uZWw7XG4gIH1cblxuICB2YXIgaW50ZXJsZWF2ZWQgPSBpbnRlcmxlYXZlKGxlZnRDaGFubmVsLCByaWdodENoYW5uZWwpOyBcblxuICB2YXIgYnVmZmVyID0gbmV3IHdpbmRvdy5BcnJheUJ1ZmZlcig0NCArIGludGVybGVhdmVkLmxlbmd0aCAqIDIpO1xuICB2YXIgdmlldyA9IG5ldyB3aW5kb3cuRGF0YVZpZXcoYnVmZmVyKTsgXG5cbiAgd3JpdGVVVEZCeXRlcyh2aWV3LCAwLCAnUklGRicpO1xuICB2aWV3LnNldFVpbnQzMig0LCAzNiArIGludGVybGVhdmVkLmxlbmd0aCAqIDIsIHRydWUpO1xuICB3cml0ZVVURkJ5dGVzKHZpZXcsIDgsICdXQVZFJyk7IFxuXG4gIHdyaXRlVVRGQnl0ZXModmlldywgMTIsICdmbXQgJyk7XG4gIHZpZXcuc2V0VWludDMyKDE2LCAxNiwgdHJ1ZSk7XG4gIHZpZXcuc2V0VWludDE2KDIwLCAxLCB0cnVlKTsgXG5cbiAgdmlldy5zZXRVaW50MTYoMjIsIDIsIHRydWUpO1xuICB2aWV3LnNldFVpbnQzMigyNCwgbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZSwgdHJ1ZSk7XG4gIHZpZXcuc2V0VWludDMyKDI4LCBtYWluLmF1ZGlvY29udGV4dC5zYW1wbGVSYXRlICogNCwgdHJ1ZSk7XG4gIHZpZXcuc2V0VWludDE2KDMyLCA0LCB0cnVlKTtcbiAgdmlldy5zZXRVaW50MTYoMzQsIDE2LCB0cnVlKTsgXG5cbiAgd3JpdGVVVEZCeXRlcyh2aWV3LCAzNiwgJ2RhdGEnKTtcbiAgdmlldy5zZXRVaW50MzIoNDAsIGludGVybGVhdmVkLmxlbmd0aCAqIDIsIHRydWUpOyBcblxuICB2YXIgbG5nID0gaW50ZXJsZWF2ZWQubGVuZ3RoO1xuICB2YXIgaW5kZXggPSA0NDtcbiAgdmFyIHZvbHVtZSA9IDE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsbmc7IGkrKykge1xuICAgIHZpZXcuc2V0SW50MTYoaW5kZXgsIGludGVybGVhdmVkW2ldICogKDB4N2ZmZiAqIHZvbHVtZSksIHRydWUpO1xuICAgIGluZGV4ICs9IDI7XG4gIH1cblxuICByZXR1cm4gdmlldztcbn0gXG5cblxuZnVuY3Rpb24gaW50ZXJsZWF2ZShsZWZ0Q2hhbm5lbCwgcmlnaHRDaGFubmVsKSB7XG4gIHZhciBsZW5ndGggPSBsZWZ0Q2hhbm5lbC5sZW5ndGggKyByaWdodENoYW5uZWwubGVuZ3RoO1xuICB2YXIgcmVzdWx0ID0gbmV3IEZsb2F0MzJBcnJheShsZW5ndGgpO1xuICB2YXIgaW5wdXRJbmRleCA9IDA7XG5cbiAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDspIHtcbiAgICByZXN1bHRbaW5kZXgrK10gPSBsZWZ0Q2hhbm5lbFtpbnB1dEluZGV4XTtcbiAgICByZXN1bHRbaW5kZXgrK10gPSByaWdodENoYW5uZWxbaW5wdXRJbmRleF07XG4gICAgaW5wdXRJbmRleCsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gd3JpdGVVVEZCeXRlcyh2aWV3LCBvZmZzZXQsIHN0cmluZykge1xuICB2YXIgbG5nID0gc3RyaW5nLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxuZzsgaSsrKSB7XG4gICAgdmlldy5zZXRVaW50OChvZmZzZXQgKyBpLCBzdHJpbmcuY2hhckNvZGVBdChpKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2FmZUJ1ZmZlclNpemUoaWRlYWxCdWZmZXJTaXplKSB7XG4gIHZhciBidWZmZXJTaXplID0gaWRlYWxCdWZmZXJTaXplOyBcblxuICB2YXIgdGVtcEF1ZGlvV29ya2xldE5vZGUgPSBuZXcgQXVkaW9Xb3JrbGV0Tm9kZShtYWluLmF1ZGlvY29udGV4dCwgcHJvY2Vzc29yTmFtZXNfZGVmYXVsdC5hLnNvdW5kRmlsZVByb2Nlc3Nvcik7XG5cbiAgaWYgKHRlbXBBdWRpb1dvcmtsZXROb2RlIGluc3RhbmNlb2YgU2NyaXB0UHJvY2Vzc29yTm9kZSkge1xuICAgIGJ1ZmZlclNpemUgPSB0ZW1wQXVkaW9Xb3JrbGV0Tm9kZS5idWZmZXJTaXplO1xuICB9XG5cbiAgdGVtcEF1ZGlvV29ya2xldE5vZGUuZGlzY29ubmVjdCgpO1xuICB0ZW1wQXVkaW9Xb3JrbGV0Tm9kZSA9IG51bGw7XG4gIHJldHVybiBidWZmZXJTaXplO1xufVxuLyoqXG4gKiBTYXZlIGEgcDUuU291bmRGaWxlIGFzIGEgLndhdiBmaWxlLiBUaGUgYnJvd3NlciB3aWxsIHByb21wdCB0aGUgdXNlclxuICogdG8gZG93bmxvYWQgdGhlIGZpbGUgdG8gdGhlaXIgZGV2aWNlLlxuICogRm9yIHVwbG9hZGluZyBhdWRpbyB0byBhIHNlcnZlciwgdXNlXG4gKiA8YSBocmVmPVwiL2RvY3MvcmVmZXJlbmNlLyMvcDUuU291bmRGaWxlL3NhdmVCbG9iXCI+YHA1LlNvdW5kRmlsZS5zYXZlQmxvYmA8L2E+LlxuICpcbiAqICBAZm9yIHA1XG4gKiAgQG1ldGhvZCBzYXZlU291bmRcbiAqICBAcGFyYW0gIHtwNS5Tb3VuZEZpbGV9IHNvdW5kRmlsZSBwNS5Tb3VuZEZpbGUgdGhhdCB5b3Ugd2lzaCB0byBzYXZlXG4gKiAgQHBhcmFtICB7U3RyaW5nfSBmaWxlTmFtZSAgICAgIG5hbWUgb2YgdGhlIHJlc3VsdGluZyAud2F2IGZpbGUuXG4gKi9cblxuXG5mdW5jdGlvbiBzYXZlU291bmQoc291bmRGaWxlLCBmaWxlTmFtZSkge1xuICB2YXIgZGF0YVZpZXcgPSBjb252ZXJ0VG9XYXYoc291bmRGaWxlLmJ1ZmZlcik7XG4gIHA1LnByb3RvdHlwZS53cml0ZUZpbGUoW2RhdGFWaWV3XSwgZmlsZU5hbWUsICd3YXYnKTtcbn1cblxuXG52YXIgQ3VzdG9tRXJyb3IgPSBmdW5jdGlvbiBDdXN0b21FcnJvcihuYW1lLCBlcnJvclRyYWNlLCBmYWlsZWRQYXRoKSB7XG4gIHZhciBlcnIgPSBuZXcgRXJyb3IoKTtcbiAgdmFyIHRlbXBTdGFjaywgc3BsaXRTdGFjaztcbiAgZXJyLm5hbWUgPSBuYW1lO1xuICBlcnIub3JpZ2luYWxTdGFjayA9IGVyci5zdGFjayArIGVycm9yVHJhY2U7XG4gIHRlbXBTdGFjayA9IGVyci5zdGFjayArIGVycm9yVHJhY2U7XG4gIGVyci5mYWlsZWRQYXRoID0gZmFpbGVkUGF0aDsgXG5cbiAgc3BsaXRTdGFjayA9IHRlbXBTdGFjay5zcGxpdCgnXFxuJykuZmlsdGVyKGZ1bmN0aW9uIChsbikge1xuICAgIHJldHVybiAhbG4ubWF0Y2goLyhwNS58bmF0aXZlIGNvZGV8Z2xvYmFsSW5pdCkvZyk7XG4gIH0pO1xuICBlcnIuc3RhY2sgPSBzcGxpdFN0YWNrLmpvaW4oJ1xcbicpO1xuICByZXR1cm4gZXJyOyBcbn07XG5cbiB2YXIgZXJyb3JIYW5kbGVyID0gKEN1c3RvbUVycm9yKTtcblxudmFyIG1vZHVsZVNvdXJjZXMgPSBbX193ZWJwYWNrX3JlcXVpcmVfXygyNylbXCJkZWZhdWx0XCJdLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDI4KVtcImRlZmF1bHRcIl0sIF9fd2VicGFja19yZXF1aXJlX18oMjkpW1wiZGVmYXVsdFwiXV07XG52YXIgYXVkaW9Xb3JrbGV0X2FjID0gbWFpbi5hdWRpb2NvbnRleHQ7XG52YXIgaW5pdGlhbGl6ZWRBdWRpb1dvcmtsZXRzID0gZmFsc2U7XG5cbmZ1bmN0aW9uIGxvYWRBdWRpb1dvcmtsZXRNb2R1bGVzKCkge1xuICByZXR1cm4gUHJvbWlzZS5hbGwobW9kdWxlU291cmNlcy5tYXAoZnVuY3Rpb24gKG1vZHVsZVNyYykge1xuICAgIHZhciBibG9iID0gbmV3IEJsb2IoW21vZHVsZVNyY10sIHtcbiAgICAgIHR5cGU6ICdhcHBsaWNhdGlvbi9qYXZhc2NyaXB0J1xuICAgIH0pO1xuICAgIHZhciBvYmplY3RVUkwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgIHJldHVybiBhdWRpb1dvcmtsZXRfYWMuYXVkaW9Xb3JrbGV0LmFkZE1vZHVsZShvYmplY3RVUkwpO1xuICB9KSk7XG59XG5cbnA1LnByb3RvdHlwZS5yZWdpc3Rlck1ldGhvZCgnaW5pdCcsIGZ1bmN0aW9uICgpIHtcbiAgaWYgKGluaXRpYWxpemVkQXVkaW9Xb3JrbGV0cykgcmV0dXJuOyBcblxuICBpZiAoIXRoaXMucHJlbG9hZCAmJiAhd2luZG93LnByZWxvYWQpIHtcbiAgICB0aGlzLnByZWxvYWQgPSBmdW5jdGlvbiAoKSB7fTtcbiAgfSBcblxuXG4gIHRoaXMuX2luY3JlbWVudFByZWxvYWQoKTtcblxuICB2YXIgb25Xb3JrbGV0TW9kdWxlc0xvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgaW5pdGlhbGl6ZWRBdWRpb1dvcmtsZXRzID0gdHJ1ZTtcblxuICAgIHRoaXMuX2RlY3JlbWVudFByZWxvYWQoKTtcbiAgfS5iaW5kKHRoaXMpO1xuXG4gIGxvYWRBdWRpb1dvcmtsZXRNb2R1bGVzKCkudGhlbihvbldvcmtsZXRNb2R1bGVzTG9hZCk7XG59KTtcbmZ1bmN0aW9uIHBhbm5lcl9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuXG52YXIgcGFubmVyX2FjID0gbWFpbi5hdWRpb2NvbnRleHQ7XG52YXIgcGFubmVyOyBcblxuaWYgKHR5cGVvZiBwYW5uZXJfYWMuY3JlYXRlU3RlcmVvUGFubmVyICE9PSAndW5kZWZpbmVkJykge1xuICB2YXIgUGFubmVyID1cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBhbm5lcihpbnB1dCwgb3V0cHV0KSB7XG4gICAgICBwYW5uZXJfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGFubmVyKTtcblxuICAgICAgdGhpcy5zdGVyZW9QYW5uZXIgPSB0aGlzLmlucHV0ID0gcGFubmVyX2FjLmNyZWF0ZVN0ZXJlb1Bhbm5lcigpO1xuICAgICAgaW5wdXQuY29ubmVjdCh0aGlzLnN0ZXJlb1Bhbm5lcik7XG4gICAgICB0aGlzLnN0ZXJlb1Bhbm5lci5jb25uZWN0KG91dHB1dCk7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFBhbm5lciwgW3tcbiAgICAgIGtleTogXCJwYW5cIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBwYW4odmFsLCB0RnJvbU5vdykge1xuICAgICAgICB2YXIgdGltZSA9IHRGcm9tTm93IHx8IDA7XG4gICAgICAgIHZhciB0ID0gcGFubmVyX2FjLmN1cnJlbnRUaW1lICsgdGltZTtcbiAgICAgICAgdGhpcy5zdGVyZW9QYW5uZXIucGFuLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHZhbCwgdCk7XG4gICAgICB9IFxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImlucHV0Q2hhbm5lbHNcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBpbnB1dENoYW5uZWxzKCkge31cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3Qob2JqKSB7XG4gICAgICAgIHRoaXMuc3RlcmVvUGFubmVyLmNvbm5lY3Qob2JqKTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0ZXJlb1Bhbm5lcikge1xuICAgICAgICAgIHRoaXMuc3RlcmVvUGFubmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBQYW5uZXI7XG4gIH0oKTtcblxuICBwYW5uZXIgPSBQYW5uZXI7XG59IGVsc2Uge1xuICB2YXIgX1Bhbm5lciA9XG4gIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBfUGFubmVyKGlucHV0LCBvdXRwdXQsIG51bUlucHV0Q2hhbm5lbHMpIHtcbiAgICAgIHBhbm5lcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBfUGFubmVyKTtcblxuICAgICAgdGhpcy5pbnB1dCA9IHBhbm5lcl9hYy5jcmVhdGVHYWluKCk7XG4gICAgICBpbnB1dC5jb25uZWN0KHRoaXMuaW5wdXQpO1xuICAgICAgdGhpcy5sZWZ0ID0gcGFubmVyX2FjLmNyZWF0ZUdhaW4oKTtcbiAgICAgIHRoaXMucmlnaHQgPSBwYW5uZXJfYWMuY3JlYXRlR2FpbigpO1xuICAgICAgdGhpcy5sZWZ0LmNoYW5uZWxJbnRlcnByZXRhdGlvbiA9ICdkaXNjcmV0ZSc7XG4gICAgICB0aGlzLnJpZ2h0LmNoYW5uZWxJbnRlcnByZXRhdGlvbiA9ICdkaXNjcmV0ZSc7IFxuXG4gICAgICBpZiAobnVtSW5wdXRDaGFubmVscyA+IDEpIHtcbiAgICAgICAgdGhpcy5zcGxpdHRlciA9IHBhbm5lcl9hYy5jcmVhdGVDaGFubmVsU3BsaXR0ZXIoMik7XG4gICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLnNwbGl0dGVyKTtcbiAgICAgICAgdGhpcy5zcGxpdHRlci5jb25uZWN0KHRoaXMubGVmdCwgMSk7XG4gICAgICAgIHRoaXMuc3BsaXR0ZXIuY29ubmVjdCh0aGlzLnJpZ2h0LCAwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLmxlZnQpO1xuICAgICAgICB0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5yaWdodCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMub3V0cHV0ID0gcGFubmVyX2FjLmNyZWF0ZUNoYW5uZWxNZXJnZXIoMik7XG4gICAgICB0aGlzLmxlZnQuY29ubmVjdCh0aGlzLm91dHB1dCwgMCwgMSk7XG4gICAgICB0aGlzLnJpZ2h0LmNvbm5lY3QodGhpcy5vdXRwdXQsIDAsIDApO1xuICAgICAgdGhpcy5vdXRwdXQuY29ubmVjdChvdXRwdXQpO1xuICAgIH0gXG5cblxuICAgIF9jcmVhdGVDbGFzcyhfUGFubmVyLCBbe1xuICAgICAga2V5OiBcInBhblwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHBhbih2YWwsIHRGcm9tTm93KSB7XG4gICAgICAgIHZhciB0aW1lID0gdEZyb21Ob3cgfHwgMDtcbiAgICAgICAgdmFyIHQgPSBwYW5uZXJfYWMuY3VycmVudFRpbWUgKyB0aW1lO1xuICAgICAgICB2YXIgdiA9ICh2YWwgKyAxKSAvIDI7XG4gICAgICAgIHZhciByaWdodFZhbCA9IE1hdGguY29zKHYgKiBNYXRoLlBJIC8gMik7XG4gICAgICAgIHZhciBsZWZ0VmFsID0gTWF0aC5zaW4odiAqIE1hdGguUEkgLyAyKTtcbiAgICAgICAgdGhpcy5sZWZ0LmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUobGVmdFZhbCwgdCk7XG4gICAgICAgIHRoaXMucmlnaHQuZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShyaWdodFZhbCwgdCk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcImlucHV0Q2hhbm5lbHNcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBpbnB1dENoYW5uZWxzKG51bUNoYW5uZWxzKSB7XG4gICAgICAgIGlmIChudW1DaGFubmVscyA9PT0gMSkge1xuICAgICAgICAgIHRoaXMuaW5wdXQuZGlzY29ubmVjdCgpO1xuICAgICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLmxlZnQpO1xuICAgICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLnJpZ2h0KTtcbiAgICAgICAgfSBlbHNlIGlmIChudW1DaGFubmVscyA9PT0gMikge1xuICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5zcGxpdHRlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMuc3BsaXR0ZXIgPSBwYW5uZXJfYWMuY3JlYXRlQ2hhbm5lbFNwbGl0dGVyKDIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuaW5wdXQuZGlzY29ubmVjdCgpO1xuICAgICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLnNwbGl0dGVyKTtcbiAgICAgICAgICB0aGlzLnNwbGl0dGVyLmNvbm5lY3QodGhpcy5sZWZ0LCAxKTtcbiAgICAgICAgICB0aGlzLnNwbGl0dGVyLmNvbm5lY3QodGhpcy5yaWdodCwgMCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3Qob2JqKSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3Qob2JqKTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIGlmICh0aGlzLm91dHB1dCkge1xuICAgICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBfUGFubmVyO1xuICB9KCk7XG5cbiAgcGFubmVyID0gX1Bhbm5lcjtcbn1cblxuIHZhciBwYW5uZXJfMCA9IChwYW5uZXIpO1xuZnVuY3Rpb24gc291bmRmaWxlX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IHNvdW5kZmlsZV90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgc291bmRmaWxlX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBzb3VuZGZpbGVfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gc291bmRmaWxlX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBzb3VuZGZpbGVfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBzb3VuZGZpbGVfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIHNvdW5kZmlsZV9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBzb3VuZGZpbGVfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5cblxuXG5cblxudmFyIHNvdW5kZmlsZV9hYyA9IG1haW4uYXVkaW9jb250ZXh0O1xuXG52YXIgX2NyZWF0ZUNvdW50ZXJCdWZmZXIgPSBmdW5jdGlvbiBfY3JlYXRlQ291bnRlckJ1ZmZlcihidWZmZXIpIHtcbiAgdmFyIGxlbiA9IGJ1ZmZlci5sZW5ndGg7XG4gIHZhciBhdWRpb0J1ZiA9IHNvdW5kZmlsZV9hYy5jcmVhdGVCdWZmZXIoMSwgYnVmZmVyLmxlbmd0aCwgc291bmRmaWxlX2FjLnNhbXBsZVJhdGUpO1xuICB2YXIgYXJyYXlCdWZmZXIgPSBhdWRpb0J1Zi5nZXRDaGFubmVsRGF0YSgwKTtcblxuICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuOyBpbmRleCsrKSB7XG4gICAgYXJyYXlCdWZmZXJbaW5kZXhdID0gaW5kZXg7XG4gIH1cblxuICByZXR1cm4gYXVkaW9CdWY7XG59O1xuXG5cbnZhciBDdWUgPSBmdW5jdGlvbiBDdWUoY2FsbGJhY2ssIHRpbWUsIGlkLCB2YWwpIHtcbiAgc291bmRmaWxlX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEN1ZSk7XG5cbiAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICB0aGlzLnRpbWUgPSB0aW1lO1xuICB0aGlzLmlkID0gaWQ7XG4gIHRoaXMudmFsID0gdmFsO1xufTsgXG5cblxuZnVuY3Rpb24gX2NsZWFyT25FbmQoZSkge1xuICB2YXIgdGhpc0J1ZmZlclNvdXJjZU5vZGUgPSBlLnRhcmdldDtcbiAgdmFyIHNvdW5kRmlsZSA9IHRoaXM7IFxuXG4gIHRoaXNCdWZmZXJTb3VyY2VOb2RlLl9wbGF5aW5nID0gZmFsc2U7XG4gIHRoaXNCdWZmZXJTb3VyY2VOb2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2VuZGVkJywgc291bmRGaWxlLl9jbGVhck9uRW5kKTsgXG5cbiAgc291bmRGaWxlLl9vbmVuZGVkKHNvdW5kRmlsZSk7IFxuXG5cbiAgc291bmRGaWxlLmJ1ZmZlclNvdXJjZU5vZGVzLm1hcChmdW5jdGlvbiAoXywgaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5yZXZlcnNlKCkuZm9yRWFjaChmdW5jdGlvbiAoaSkge1xuICAgIHZhciBuID0gc291bmRGaWxlLmJ1ZmZlclNvdXJjZU5vZGVzW2ldO1xuXG4gICAgaWYgKG4uX3BsYXlpbmcgPT09IGZhbHNlKSB7XG4gICAgICBzb3VuZEZpbGUuYnVmZmVyU291cmNlTm9kZXMuc3BsaWNlKGksIDEpO1xuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHNvdW5kRmlsZS5idWZmZXJTb3VyY2VOb2Rlcy5sZW5ndGggPT09IDApIHtcbiAgICBzb3VuZEZpbGUuX3BsYXlpbmcgPSBmYWxzZTtcbiAgfVxufVxuLyoqXG4gKiAgPHA+U291bmRGaWxlIG9iamVjdCB3aXRoIGEgcGF0aCB0byBhIGZpbGUuPC9wPlxuICpcbiAqICA8cD5UaGUgcDUuU291bmRGaWxlIG1heSBub3QgYmUgYXZhaWxhYmxlIGltbWVkaWF0ZWx5IGJlY2F1c2VcbiAqICBpdCBsb2FkcyB0aGUgZmlsZSBpbmZvcm1hdGlvbiBhc3luY2hyb25vdXNseS48L3A+XG4gKlxuICogIDxwPlRvIGRvIHNvbWV0aGluZyB3aXRoIHRoZSBzb3VuZCBhcyBzb29uIGFzIGl0IGxvYWRzXG4gKiAgcGFzcyB0aGUgbmFtZSBvZiBhIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyLjwvcD5cbiAqXG4gKiAgPHA+T25seSBvbmUgZmlsZSBwYXRoIGlzIHJlcXVpcmVkLiBIb3dldmVyLCBhdWRpbyBmaWxlIGZvcm1hdHNcbiAqICAoaS5lLiBtcDMsIG9nZywgd2F2IGFuZCBtNGEvYWFjKSBhcmUgbm90IHN1cHBvcnRlZCBieSBhbGxcbiAqICB3ZWIgYnJvd3NlcnMuIElmIHlvdSB3YW50IHRvIGVuc3VyZSBjb21wYXRhYmlsaXR5LCBpbnN0ZWFkIG9mIGEgc2luZ2xlXG4gKiAgZmlsZSBwYXRoLCB5b3UgbWF5IGluY2x1ZGUgYW4gQXJyYXkgb2YgZmlsZXBhdGhzLCBhbmQgdGhlIGJyb3dzZXIgd2lsbFxuICogIGNob29zZSBhIGZvcm1hdCB0aGF0IHdvcmtzLjwvcD5cbiAqXG4gKiAgQGNsYXNzIHA1LlNvdW5kRmlsZVxuICogIEBjb25zdHJ1Y3RvclxuICogIEBwYXJhbSB7U3RyaW5nfEFycmF5fSBwYXRoICAgcGF0aCB0byBhIHNvdW5kIGZpbGUgKFN0cmluZykuIE9wdGlvbmFsbHksXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5b3UgbWF5IGluY2x1ZGUgbXVsdGlwbGUgZmlsZSBmb3JtYXRzIGluXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBhcnJheS4gQWx0ZXJuYXRlbHksIGFjY2VwdHMgYW4gb2JqZWN0XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tIHRoZSBIVE1MNSBGaWxlIEFQSSwgb3IgYSBwNS5GaWxlLlxuICogIEBwYXJhbSB7RnVuY3Rpb259IFtzdWNjZXNzQ2FsbGJhY2tdICAgTmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgb25jZSBmaWxlIGxvYWRzXG4gKiAgQHBhcmFtIHtGdW5jdGlvbn0gW2Vycm9yQ2FsbGJhY2tdICAgTmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgaWYgZmlsZSBmYWlscyB0b1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQuIFRoaXMgZnVuY3Rpb24gd2lsbCByZWNlaXZlIGFuIGVycm9yIG9yXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBYTUxIdHRwUmVxdWVzdCBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJvdXQgd2hhdCB3ZW50IHdyb25nLlxuICogIEBwYXJhbSB7RnVuY3Rpb259IFt3aGlsZUxvYWRpbmdDYWxsYmFja10gICBOYW1lIG9mIGEgZnVuY3Rpb24gdG8gY2FsbCB3aGlsZSBmaWxlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGxvYWRpbmcuIFRoYXQgZnVuY3Rpb24gd2lsbFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNlaXZlIHByb2dyZXNzIG9mIHRoZSByZXF1ZXN0IHRvXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQgdGhlIHNvdW5kIGZpbGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGJldHdlZW4gMCBhbmQgMSkgYXMgaXRzIGZpcnN0XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtZXRlci4gVGhpcyBwcm9ncmVzc1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2VzIG5vdCBhY2NvdW50IGZvciB0aGUgYWRkaXRpb25hbFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lIG5lZWRlZCB0byBkZWNvZGUgdGhlIGF1ZGlvIGRhdGEuXG4gKlxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgbXlTb3VuZDtcbiAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICogICAgc291bmRGb3JtYXRzKCdtcDMnLCAnb2dnJyk7XG4gKiAgICBteVNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvZG9vcmJlbGwnKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKGNhbnZhc1ByZXNzZWQpO1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dCgndGFwIGhlcmUgdG8gcGxheScsIDEwLCAyMCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBjYW52YXNQcmVzc2VkKCkge1xuICogICAgLy8gcGxheWluZyBhIHNvdW5kIGZpbGUgb24gYSB1c2VyIGdlc3R1cmVcbiAqICAgIC8vIGlzIGVxdWl2YWxlbnQgdG8gYHVzZXJTdGFydEF1ZGlvKClgXG4gKiAgICBteVNvdW5kLnBsYXkoKTtcbiAqICB9XG4gKiA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG52YXIgc291bmRmaWxlX1NvdW5kRmlsZSA9XG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNvdW5kRmlsZShwYXRocywgb25sb2FkLCBvbmVycm9yLCB3aGlsZUxvYWRpbmcpIHtcbiAgICBzb3VuZGZpbGVfY2xhc3NDYWxsQ2hlY2sodGhpcywgU291bmRGaWxlKTtcblxuICAgIGlmICh0eXBlb2YgcGF0aHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBpZiAodHlwZW9mIHBhdGhzID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgcGF0aHNbMF0gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhciBwYXRoID0gcDUucHJvdG90eXBlLl9jaGVja0ZpbGVGb3JtYXRzKHBhdGhzKTtcblxuICAgICAgICB0aGlzLnVybCA9IHBhdGg7XG4gICAgICB9IGVsc2UgaWYgKHNvdW5kZmlsZV90eXBlb2YocGF0aHMpID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAoISh3aW5kb3cuRmlsZSAmJiB3aW5kb3cuRmlsZVJlYWRlciAmJiB3aW5kb3cuRmlsZUxpc3QgJiYgd2luZG93LkJsb2IpKSB7XG4gICAgICAgICAgdGhyb3cgJ1VuYWJsZSB0byBsb2FkIGZpbGUgYmVjYXVzZSB0aGUgRmlsZSBBUEkgaXMgbm90IHN1cHBvcnRlZCc7XG4gICAgICAgIH1cbiAgICAgIH0gXG5cblxuICAgICAgaWYgKHBhdGhzLmZpbGUpIHtcbiAgICAgICAgcGF0aHMgPSBwYXRocy5maWxlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmZpbGUgPSBwYXRocztcbiAgICB9IFxuXG5cbiAgICB0aGlzLl9vbmVuZGVkID0gZnVuY3Rpb24gKCkge307XG5cbiAgICB0aGlzLl9sb29waW5nID0gZmFsc2U7XG4gICAgdGhpcy5fcGxheWluZyA9IGZhbHNlO1xuICAgIHRoaXMuX3BhdXNlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3BhdXNlVGltZSA9IDA7IFxuXG4gICAgdGhpcy5fY3VlcyA9IFtdO1xuICAgIHRoaXMuX2N1ZUlEQ291bnRlciA9IDA7IFxuXG4gICAgdGhpcy5fbGFzdFBvcyA9IDA7XG4gICAgdGhpcy5fY291bnRlck5vZGUgPSBudWxsO1xuICAgIHRoaXMuX3dvcmtsZXROb2RlID0gbnVsbDsgXG5cbiAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGVzID0gW107IFxuXG4gICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlID0gbnVsbDtcbiAgICB0aGlzLmJ1ZmZlciA9IG51bGw7XG4gICAgdGhpcy5wbGF5YmFja1JhdGUgPSAxO1xuICAgIHRoaXMuaW5wdXQgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgdGhpcy5vdXRwdXQgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgdGhpcy5yZXZlcnNlZCA9IGZhbHNlOyBcblxuICAgIHRoaXMuc3RhcnRUaW1lID0gMDtcbiAgICB0aGlzLmVuZFRpbWUgPSBudWxsO1xuICAgIHRoaXMucGF1c2VUaW1lID0gMDsgXG5cbiAgICB0aGlzLm1vZGUgPSAnc3VzdGFpbic7IFxuXG4gICAgdGhpcy5zdGFydE1pbGxpcyA9IG51bGw7IFxuXG4gICAgdGhpcy5wYW5Qb3NpdGlvbiA9IDAuMDtcbiAgICB0aGlzLnBhbm5lciA9IG5ldyBwYW5uZXJfMCh0aGlzLm91dHB1dCwgbWFpbi5pbnB1dCwgMik7IFxuXG4gICAgaWYgKHRoaXMudXJsIHx8IHRoaXMuZmlsZSkge1xuICAgICAgdGhpcy5sb2FkKG9ubG9hZCwgb25lcnJvcik7XG4gICAgfSBcblxuXG4gICAgbWFpbi5zb3VuZEFycmF5LnB1c2godGhpcyk7XG5cbiAgICBpZiAodHlwZW9mIHdoaWxlTG9hZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhpcy5fd2hpbGVMb2FkaW5nID0gd2hpbGVMb2FkaW5nO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl93aGlsZUxvYWRpbmcgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICB9XG5cbiAgICB0aGlzLl9jbGVhck9uRW5kID0gX2NsZWFyT25FbmQuYmluZCh0aGlzKTsgXG5cbiAgICB0aGlzLmFtcCA9IHRoaXMuc2V0Vm9sdW1lOyBcblxuICAgIHRoaXMuZmFkZSA9IHRoaXMuc2V0Vm9sdW1lO1xuICB9XG4gIC8qKlxuICAgKiBUaGlzIGlzIGEgaGVscGVyIGZ1bmN0aW9uIHRoYXQgdGhlIHA1LlNvdW5kRmlsZSBjYWxscyB0byBsb2FkXG4gICAqIGl0c2VsZi4gQWNjZXB0cyBhIGNhbGxiYWNrICh0aGUgbmFtZSBvZiBhbm90aGVyIGZ1bmN0aW9uKVxuICAgKiBhcyBhbiBvcHRpb25hbCBwYXJhbWV0ZXIuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBmb3IgcDUuU291bmRGaWxlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtzdWNjZXNzQ2FsbGJhY2tdICAgTmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgb25jZSBmaWxlIGxvYWRzXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtlcnJvckNhbGxiYWNrXSAgIE5hbWUgb2YgYSBmdW5jdGlvbiB0byBjYWxsIGlmIHRoZXJlIGlzIGFuIGVycm9yXG4gICAqL1xuXG5cbiAgc291bmRmaWxlX2NyZWF0ZUNsYXNzKFNvdW5kRmlsZSwgW3tcbiAgICBrZXk6IFwibG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkKGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICB2YXIgZXJyb3JUcmFjZSA9IG5ldyBFcnJvcigpLnN0YWNrO1xuXG4gICAgICBpZiAodGhpcy51cmwgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnVybCAhPT0gJycpIHtcbiAgICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICBzZWxmLl91cGRhdGVQcm9ncmVzcyhldnQpO1xuICAgICAgICB9LCBmYWxzZSk7XG4gICAgICAgIHJlcXVlc3Qub3BlbignR0VUJywgdGhpcy51cmwsIHRydWUpO1xuICAgICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9ICdhcnJheWJ1ZmZlcic7XG5cbiAgICAgICAgcmVxdWVzdC5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgIGlmICghc2VsZi5wYW5uZXIpIHJldHVybjtcbiAgICAgICAgICAgIHNvdW5kZmlsZV9hYy5kZWNvZGVBdWRpb0RhdGEocmVxdWVzdC5yZXNwb25zZSwgXG4gICAgICAgICAgICBmdW5jdGlvbiAoYnVmZikge1xuICAgICAgICAgICAgICBpZiAoIXNlbGYucGFubmVyKSByZXR1cm47XG4gICAgICAgICAgICAgIHNlbGYuYnVmZmVyID0gYnVmZjtcbiAgICAgICAgICAgICAgc2VsZi5wYW5uZXIuaW5wdXRDaGFubmVscyhidWZmLm51bWJlck9mQ2hhbm5lbHMpO1xuXG4gICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHNlbGYpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgaWYgKCFzZWxmLnBhbm5lcikgcmV0dXJuO1xuICAgICAgICAgICAgICB2YXIgZXJyID0gbmV3IGVycm9ySGFuZGxlcignZGVjb2RlQXVkaW9EYXRhJywgZXJyb3JUcmFjZSwgc2VsZi51cmwpO1xuICAgICAgICAgICAgICB2YXIgbXNnID0gJ0F1ZGlvQ29udGV4dCBlcnJvciBhdCBkZWNvZGVBdWRpb0RhdGEgZm9yICcgKyBzZWxmLnVybDtcblxuICAgICAgICAgICAgICBpZiAoZXJyb3JDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGVyci5tc2cgPSBtc2c7XG4gICAgICAgICAgICAgICAgZXJyb3JDYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IobXNnICsgJ1xcbiBUaGUgZXJyb3Igc3RhY2sgdHJhY2UgaW5jbHVkZXM6IFxcbicgKyBlcnIuc3RhY2spO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IFxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBpZiAoIXNlbGYucGFubmVyKSByZXR1cm47XG4gICAgICAgICAgICAgIHZhciBlcnIgPSBuZXcgZXJyb3JIYW5kbGVyKCdsb2FkU291bmQnLCBlcnJvclRyYWNlLCBzZWxmLnVybCk7XG4gICAgICAgICAgICAgIHZhciBtc2cgPSAnVW5hYmxlIHRvIGxvYWQgJyArIHNlbGYudXJsICsgJy4gVGhlIHJlcXVlc3Qgc3RhdHVzIHdhczogJyArIHJlcXVlc3Quc3RhdHVzICsgJyAoJyArIHJlcXVlc3Quc3RhdHVzVGV4dCArICcpJztcblxuICAgICAgICAgICAgICBpZiAoZXJyb3JDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGVyci5tZXNzYWdlID0gbXNnO1xuICAgICAgICAgICAgICAgIGVycm9yQ2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKG1zZyArICdcXG4gVGhlIGVycm9yIHN0YWNrIHRyYWNlIGluY2x1ZGVzOiBcXG4nICsgZXJyLnN0YWNrKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9OyBcblxuXG4gICAgICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgZXJyID0gbmV3IGVycm9ySGFuZGxlcignbG9hZFNvdW5kJywgZXJyb3JUcmFjZSwgc2VsZi51cmwpO1xuICAgICAgICAgIHZhciBtc2cgPSAnVGhlcmUgd2FzIG5vIHJlc3BvbnNlIGZyb20gdGhlIHNlcnZlciBhdCAnICsgc2VsZi51cmwgKyAnLiBDaGVjayB0aGUgdXJsIGFuZCBpbnRlcm5ldCBjb25uZWN0aXZpdHkuJztcblxuICAgICAgICAgIGlmIChlcnJvckNhbGxiYWNrKSB7XG4gICAgICAgICAgICBlcnIubWVzc2FnZSA9IG1zZztcbiAgICAgICAgICAgIGVycm9yQ2FsbGJhY2soZXJyKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihtc2cgKyAnXFxuIFRoZSBlcnJvciBzdGFjayB0cmFjZSBpbmNsdWRlczogXFxuJyArIGVyci5zdGFjayk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHJlcXVlc3Quc2VuZCgpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmZpbGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblxuICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmICghc2VsZi5wYW5uZXIpIHJldHVybjtcbiAgICAgICAgICBzb3VuZGZpbGVfYWMuZGVjb2RlQXVkaW9EYXRhKHJlYWRlci5yZXN1bHQsIGZ1bmN0aW9uIChidWZmKSB7XG4gICAgICAgICAgICBpZiAoIXNlbGYucGFubmVyKSByZXR1cm47XG4gICAgICAgICAgICBzZWxmLmJ1ZmZlciA9IGJ1ZmY7XG4gICAgICAgICAgICBzZWxmLnBhbm5lci5pbnB1dENoYW5uZWxzKGJ1ZmYubnVtYmVyT2ZDaGFubmVscyk7XG5cbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICBjYWxsYmFjayhzZWxmKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICByZWFkZXIub25lcnJvciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgaWYgKCFzZWxmLnBhbm5lcikgcmV0dXJuO1xuXG4gICAgICAgICAgaWYgKG9uZXJyb3IpIHtcbiAgICAgICAgICAgIG9uZXJyb3IoZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcih0aGlzLmZpbGUpO1xuICAgICAgfVxuICAgIH0gXG5cbiAgfSwge1xuICAgIGtleTogXCJfdXBkYXRlUHJvZ3Jlc3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3VwZGF0ZVByb2dyZXNzKGV2dCkge1xuICAgICAgaWYgKGV2dC5sZW5ndGhDb21wdXRhYmxlKSB7XG4gICAgICAgIHZhciBwZXJjZW50Q29tcGxldGUgPSBldnQubG9hZGVkIC8gZXZ0LnRvdGFsICogMC45OTtcblxuICAgICAgICB0aGlzLl93aGlsZUxvYWRpbmcocGVyY2VudENvbXBsZXRlLCBldnQpOyBcblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fd2hpbGVMb2FkaW5nKCdzaXplIHVua25vd24nKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJldHVybnMgdHJ1ZSBpZiB0aGUgc291bmQgZmlsZSBmaW5pc2hlZCBsb2FkaW5nIHN1Y2Nlc3NmdWxseS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBpc0xvYWRlZFxuICAgICAqICBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqICBAcmV0dXJuIHtCb29sZWFufVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiaXNMb2FkZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNMb2FkZWQoKSB7XG4gICAgICBpZiAodGhpcy5idWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBsYXkgdGhlIHA1LlNvdW5kRmlsZVxuICAgICAqXG4gICAgICogQG1ldGhvZCBwbGF5XG4gICAgICogQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3N0YXJ0VGltZV0gICAgICAgICAgICAob3B0aW9uYWwpIHNjaGVkdWxlIHBsYXliYWNrIHRvIHN0YXJ0IChpbiBzZWNvbmRzIGZyb20gbm93KS5cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3JhdGVdICAgICAgICAgICAgIChvcHRpb25hbCkgcGxheWJhY2sgcmF0ZVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbYW1wXSAgICAgICAgICAgICAgKG9wdGlvbmFsKSBhbXBsaXR1ZGUgKHZvbHVtZSlcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBwbGF5YmFja1xuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbY3VlU3RhcnRdICAgICAgICAob3B0aW9uYWwpIGN1ZSBzdGFydCB0aW1lIGluIHNlY29uZHNcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW2R1cmF0aW9uXSAgICAgICAgICAob3B0aW9uYWwpIGR1cmF0aW9uIG9mIHBsYXliYWNrIGluIHNlY29uZHNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInBsYXlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcGxheShzdGFydFRpbWUsIHJhdGUsIGFtcCwgX2N1ZVN0YXJ0LCBkdXJhdGlvbikge1xuICAgICAgaWYgKCF0aGlzLm91dHB1dCkge1xuICAgICAgICBjb25zb2xlLndhcm4oJ1NvdW5kRmlsZS5wbGF5KCkgY2FsbGVkIGFmdGVyIGRpc3Bvc2UnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICB2YXIgY3VlU3RhcnQsIGN1ZUVuZDtcbiAgICAgIHZhciB0aW1lID0gc3RhcnRUaW1lIHx8IDA7XG5cbiAgICAgIGlmICh0aW1lIDwgMCkge1xuICAgICAgICB0aW1lID0gMDtcbiAgICAgIH1cblxuICAgICAgdGltZSA9IHRpbWUgKyBub3c7XG5cbiAgICAgIGlmICh0eXBlb2YgcmF0ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhpcy5yYXRlKHJhdGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGFtcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhpcy5zZXRWb2x1bWUoYW1wKTtcbiAgICAgIH0gXG5cblxuICAgICAgaWYgKHRoaXMuYnVmZmVyKSB7XG4gICAgICAgIHRoaXMuX3BhdXNlVGltZSA9IDA7IFxuXG4gICAgICAgIGlmICh0aGlzLm1vZGUgPT09ICdyZXN0YXJ0JyAmJiB0aGlzLmJ1ZmZlciAmJiB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUpIHtcbiAgICAgICAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUuc3RvcCh0aW1lKTtcblxuICAgICAgICAgIHRoaXMuX2NvdW50ZXJOb2RlLnN0b3AodGltZSk7XG4gICAgICAgIH0gXG5cblxuICAgICAgICBpZiAodGhpcy5tb2RlID09PSAndW50aWxkb25lJyAmJiB0aGlzLmlzUGxheWluZygpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IFxuXG5cbiAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlID0gdGhpcy5faW5pdFNvdXJjZU5vZGUoKTsgXG5cbiAgICAgICAgZGVsZXRlIHRoaXMuX2NvdW50ZXJOb2RlO1xuICAgICAgICB0aGlzLl9jb3VudGVyTm9kZSA9IHRoaXMuX2luaXRDb3VudGVyTm9kZSgpO1xuXG4gICAgICAgIGlmIChfY3VlU3RhcnQpIHtcbiAgICAgICAgICBpZiAoX2N1ZVN0YXJ0ID49IDAgJiYgX2N1ZVN0YXJ0IDwgdGhpcy5idWZmZXIuZHVyYXRpb24pIHtcbiAgICAgICAgICAgIGN1ZVN0YXJ0ID0gX2N1ZVN0YXJ0O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyAnc3RhcnQgdGltZSBvdXQgb2YgcmFuZ2UnO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjdWVTdGFydCA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZHVyYXRpb24pIHtcbiAgICAgICAgICBkdXJhdGlvbiA9IGR1cmF0aW9uIDw9IHRoaXMuYnVmZmVyLmR1cmF0aW9uIC0gY3VlU3RhcnQgPyBkdXJhdGlvbiA6IHRoaXMuYnVmZmVyLmR1cmF0aW9uO1xuICAgICAgICB9IFxuXG5cbiAgICAgICAgaWYgKHRoaXMuX3BhdXNlZCkge1xuICAgICAgICAgIHRoaXMuYnVmZmVyU291cmNlTm9kZS5zdGFydCh0aW1lLCB0aGlzLnBhdXNlVGltZSwgZHVyYXRpb24pO1xuXG4gICAgICAgICAgdGhpcy5fY291bnRlck5vZGUuc3RhcnQodGltZSwgdGhpcy5wYXVzZVRpbWUsIGR1cmF0aW9uKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUuc3RhcnQodGltZSwgY3VlU3RhcnQsIGR1cmF0aW9uKTtcblxuICAgICAgICAgIHRoaXMuX2NvdW50ZXJOb2RlLnN0YXJ0KHRpbWUsIGN1ZVN0YXJ0LCBkdXJhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9wbGF5aW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fcGF1c2VkID0gZmFsc2U7IFxuXG4gICAgICAgIHRoaXMuYnVmZmVyU291cmNlTm9kZXMucHVzaCh0aGlzLmJ1ZmZlclNvdXJjZU5vZGUpO1xuICAgICAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUuX2FycmF5SW5kZXggPSB0aGlzLmJ1ZmZlclNvdXJjZU5vZGVzLmxlbmd0aCAtIDE7XG4gICAgICAgIHRoaXMuYnVmZmVyU291cmNlTm9kZS5hZGRFdmVudExpc3RlbmVyKCdlbmRlZCcsIHRoaXMuX2NsZWFyT25FbmQpO1xuICAgICAgfSBcbiAgICAgIGVsc2Uge1xuICAgICAgICAgIHRocm93ICdub3QgcmVhZHkgdG8gcGxheSBmaWxlLCBidWZmZXIgaGFzIHlldCB0byBsb2FkLiBUcnkgcHJlbG9hZCgpJztcbiAgICAgICAgfSBcblxuXG4gICAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUubG9vcCA9IHRoaXMuX2xvb3Bpbmc7XG4gICAgICB0aGlzLl9jb3VudGVyTm9kZS5sb29wID0gdGhpcy5fbG9vcGluZztcblxuICAgICAgaWYgKHRoaXMuX2xvb3BpbmcgPT09IHRydWUpIHtcbiAgICAgICAgY3VlRW5kID0gZHVyYXRpb24gPyBkdXJhdGlvbiA6IGN1ZVN0YXJ0IC0gMC4wMDAwMDAwMDAwMDAwMDE7XG4gICAgICAgIHRoaXMuYnVmZmVyU291cmNlTm9kZS5sb29wU3RhcnQgPSBjdWVTdGFydDtcbiAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlLmxvb3BFbmQgPSBjdWVFbmQ7XG4gICAgICAgIHRoaXMuX2NvdW50ZXJOb2RlLmxvb3BTdGFydCA9IGN1ZVN0YXJ0O1xuICAgICAgICB0aGlzLl9jb3VudGVyTm9kZS5sb29wRW5kID0gY3VlRW5kO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgcDUuU291bmRGaWxlIGhhcyB0d28gcGxheSBtb2RlczogPGNvZGU+cmVzdGFydDwvY29kZT4gYW5kXG4gICAgICogIDxjb2RlPnN1c3RhaW48L2NvZGU+LiBQbGF5IE1vZGUgZGV0ZXJtaW5lcyB3aGF0IGhhcHBlbnMgdG8gYVxuICAgICAqICBwNS5Tb3VuZEZpbGUgaWYgaXQgaXMgdHJpZ2dlcmVkIHdoaWxlIGluIHRoZSBtaWRkbGUgb2YgcGxheWJhY2suXG4gICAgICogIEluIHN1c3RhaW4gbW9kZSwgcGxheWJhY2sgd2lsbCBjb250aW51ZSBzaW11bHRhbmVvdXMgdG8gdGhlXG4gICAgICogIG5ldyBwbGF5YmFjay4gSW4gcmVzdGFydCBtb2RlLCBwbGF5KCkgd2lsbCBzdG9wIHBsYXliYWNrXG4gICAgICogIGFuZCBzdGFydCBvdmVyLiBXaXRoIHVudGlsRG9uZSwgYSBzb3VuZCB3aWxsIHBsYXkgb25seSBpZiBpdCdzXG4gICAgICogIG5vdCBhbHJlYWR5IHBsYXlpbmcuIFN1c3RhaW4gaXMgdGhlIGRlZmF1bHQgbW9kZS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBwbGF5TW9kZVxuICAgICAqICBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqICBAcGFyYW0gIHtTdHJpbmd9IHN0ciAncmVzdGFydCcgb3IgJ3N1c3RhaW4nIG9yICd1bnRpbERvbmUnXG4gICAgICogIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogIGxldCBteVNvdW5kO1xuICAgICAqICBmdW5jdGlvbiBwcmVsb2FkKCl7XG4gICAgICogICAgbXlTb3VuZCA9IGxvYWRTb3VuZCgnYXNzZXRzL0RhbXNjcmF5X0RhbmNpbmdUaWdlci5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICAgKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAgICAgKiAgICBjbnYubW91c2VQcmVzc2VkKGNhbnZhc1ByZXNzZWQpO1xuICAgICAqICAgIG5vRmlsbCgpO1xuICAgICAqICAgIHJlY3QoMCwgaGVpZ2h0LzIsIHdpZHRoIC0gMSwgaGVpZ2h0LzIgLSAxKTtcbiAgICAgKiAgICByZWN0KDAsIDAsIHdpZHRoIC0gMSwgaGVpZ2h0LzIpO1xuICAgICAqICAgIHRleHRBbGlnbihDRU5URVIsIENFTlRFUik7XG4gICAgICogICAgZmlsbCgyMCk7XG4gICAgICogICAgdGV4dCgncmVzdGFydCcsIHdpZHRoLzIsIDEgKiBoZWlnaHQvNCk7XG4gICAgICogICAgdGV4dCgnc3VzdGFpbicsIHdpZHRoLzIsIDMgKiBoZWlnaHQvNCk7XG4gICAgICogIH1cbiAgICAgKiAgZnVuY3Rpb24gY2FudmFzUHJlc3NlZCgpIHtcbiAgICAgKiAgICBpZiAobW91c2VYIDwgaGVpZ2h0LzIpIHtcbiAgICAgKiAgICAgIG15U291bmQucGxheU1vZGUoJ3Jlc3RhcnQnKTtcbiAgICAgKiAgICB9IGVsc2Uge1xuICAgICAqICAgICAgbXlTb3VuZC5wbGF5TW9kZSgnc3VzdGFpbicpO1xuICAgICAqICAgIH1cbiAgICAgKiAgICBteVNvdW5kLnBsYXkoKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicGxheU1vZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcGxheU1vZGUoc3RyKSB7XG4gICAgICB2YXIgcyA9IHN0ci50b0xvd2VyQ2FzZSgpOyBcblxuICAgICAgaWYgKHMgPT09ICdyZXN0YXJ0JyAmJiB0aGlzLmJ1ZmZlciAmJiB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmJ1ZmZlclNvdXJjZU5vZGVzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGVzW2ldLnN0b3Aobm93KTtcbiAgICAgICAgfVxuICAgICAgfSBcblxuXG4gICAgICBpZiAocyA9PT0gJ3Jlc3RhcnQnIHx8IHMgPT09ICdzdXN0YWluJyB8fCBzID09PSAndW50aWxkb25lJykge1xuICAgICAgICB0aGlzLm1vZGUgPSBzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgJ0ludmFsaWQgcGxheSBtb2RlLiBNdXN0IGJlIGVpdGhlciBcInJlc3RhcnRcIiBvciBcInN1c3RhaW5cIic7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBQYXVzZXMgYSBmaWxlIHRoYXQgaXMgY3VycmVudGx5IHBsYXlpbmcuIElmIHRoZSBmaWxlIGlzIG5vdFxuICAgICAqICBwbGF5aW5nLCB0aGVuIG5vdGhpbmcgd2lsbCBoYXBwZW4uXG4gICAgICpcbiAgICAgKiAgQWZ0ZXIgcGF1c2luZywgLnBsYXkoKSB3aWxsIHJlc3VtZSBmcm9tIHRoZSBwYXVzZWRcbiAgICAgKiAgcG9zaXRpb24uXG4gICAgICogIElmIHA1LlNvdW5kRmlsZSBoYWQgYmVlbiBzZXQgdG8gbG9vcCBiZWZvcmUgaXQgd2FzIHBhdXNlZCxcbiAgICAgKiAgaXQgd2lsbCBjb250aW51ZSB0byBsb29wIGFmdGVyIGl0IGlzIHVucGF1c2VkIHdpdGggLnBsYXkoKS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kIHBhdXNlXG4gICAgICogIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbc3RhcnRUaW1lXSAob3B0aW9uYWwpIHNjaGVkdWxlIGV2ZW50IHRvIG9jY3VyXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqICBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgc291bmRGaWxlO1xuICAgICAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgICAqICAgIHNvdW5kRm9ybWF0cygnb2dnJywgJ21wMycpO1xuICAgICAqICAgIHNvdW5kRmlsZSA9IGxvYWRTb3VuZCgnYXNzZXRzL0RhbXNjcmF5Xy1fRGFuY2luZ19UaWdlcl8wMi5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICAgKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAgICAgKiAgICBjbnYubW91c2VQcmVzc2VkKGNhbnZhc1ByZXNzZWQpO1xuICAgICAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAgICAgKiAgICB0ZXh0KCd0YXAgdG8gcGxheSwgcmVsZWFzZSB0byBwYXVzZScsIDEwLCAyMCwgd2lkdGggLSAyMCk7XG4gICAgICogIH1cbiAgICAgKiAgZnVuY3Rpb24gY2FudmFzUHJlc3NlZCgpIHtcbiAgICAgKiAgICBzb3VuZEZpbGUubG9vcCgpO1xuICAgICAqICAgIGJhY2tncm91bmQoMCwgMjAwLCA1MCk7XG4gICAgICogIH1cbiAgICAgKiAgZnVuY3Rpb24gbW91c2VSZWxlYXNlZCgpIHtcbiAgICAgKiAgICBzb3VuZEZpbGUucGF1c2UoKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPlxuICAgICAqICA8L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInBhdXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBhdXNlKHN0YXJ0VGltZSkge1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgdmFyIHRpbWUgPSBzdGFydFRpbWUgfHwgMDtcbiAgICAgIHZhciBwVGltZSA9IHRpbWUgKyBub3c7XG5cbiAgICAgIGlmICh0aGlzLmlzUGxheWluZygpICYmIHRoaXMuYnVmZmVyICYmIHRoaXMuYnVmZmVyU291cmNlTm9kZSkge1xuICAgICAgICB0aGlzLl9wYXVzZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl9wbGF5aW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMucGF1c2VUaW1lID0gdGhpcy5jdXJyZW50VGltZSgpO1xuICAgICAgICB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUuc3RvcChwVGltZSk7XG5cbiAgICAgICAgdGhpcy5fY291bnRlck5vZGUuc3RvcChwVGltZSk7XG5cbiAgICAgICAgdGhpcy5fcGF1c2VUaW1lID0gdGhpcy5jdXJyZW50VGltZSgpOyBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3BhdXNlVGltZSA9IDA7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExvb3AgdGhlIHA1LlNvdW5kRmlsZS4gQWNjZXB0cyBvcHRpb25hbCBwYXJhbWV0ZXJzIHRvIHNldCB0aGVcbiAgICAgKiBwbGF5YmFjayByYXRlLCBwbGF5YmFjayB2b2x1bWUsIGxvb3BTdGFydCwgbG9vcEVuZC5cbiAgICAgKlxuICAgICAqIEBtZXRob2QgbG9vcFxuICAgICAqIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFtzdGFydFRpbWVdIChvcHRpb25hbCkgc2NoZWR1bGUgZXZlbnQgdG8gb2NjdXJcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcmF0ZV0gICAgICAgIChvcHRpb25hbCkgcGxheWJhY2sgcmF0ZVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbYW1wXSAgICAgICAgIChvcHRpb25hbCkgcGxheWJhY2sgdm9sdW1lXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFtjdWVMb29wU3RhcnRdIChvcHRpb25hbCkgc3RhcnRUaW1lIGluIHNlY29uZHNcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW2R1cmF0aW9uXSAgKG9wdGlvbmFsKSBsb29wIGR1cmF0aW9uIGluIHNlY29uZHNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgc291bmRGaWxlO1xuICAgICAqICBsZXQgbG9vcFN0YXJ0ID0gMC41O1xuICAgICAqICBsZXQgbG9vcER1cmF0aW9uID0gMC4yO1xuICAgICAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgICAqICAgIHNvdW5kRm9ybWF0cygnb2dnJywgJ21wMycpO1xuICAgICAqICAgIHNvdW5kRmlsZSA9IGxvYWRTb3VuZCgnYXNzZXRzL0RhbXNjcmF5Xy1fRGFuY2luZ19UaWdlcl8wMi5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICAgKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAgICAgKiAgICBjbnYubW91c2VQcmVzc2VkKGNhbnZhc1ByZXNzZWQpO1xuICAgICAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAgICAgKiAgICB0ZXh0KCd0YXAgdG8gcGxheSwgcmVsZWFzZSB0byBwYXVzZScsIDEwLCAyMCwgd2lkdGggLSAyMCk7XG4gICAgICogIH1cbiAgICAgKiAgZnVuY3Rpb24gY2FudmFzUHJlc3NlZCgpIHtcbiAgICAgKiAgICBzb3VuZEZpbGUubG9vcCgpO1xuICAgICAqICAgIGJhY2tncm91bmQoMCwgMjAwLCA1MCk7XG4gICAgICogIH1cbiAgICAgKiAgZnVuY3Rpb24gbW91c2VSZWxlYXNlZCgpIHtcbiAgICAgKiAgICBzb3VuZEZpbGUucGF1c2UoKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPlxuICAgICAqICA8L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImxvb3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9vcChzdGFydFRpbWUsIHJhdGUsIGFtcCwgbG9vcFN0YXJ0LCBkdXJhdGlvbikge1xuICAgICAgdGhpcy5fbG9vcGluZyA9IHRydWU7XG4gICAgICB0aGlzLnBsYXkoc3RhcnRUaW1lLCByYXRlLCBhbXAsIGxvb3BTdGFydCwgZHVyYXRpb24pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgYSBwNS5Tb3VuZEZpbGUncyBsb29waW5nIGZsYWcgdG8gdHJ1ZSBvciBmYWxzZS4gSWYgdGhlIHNvdW5kXG4gICAgICogaXMgY3VycmVudGx5IHBsYXlpbmcsIHRoaXMgY2hhbmdlIHdpbGwgdGFrZSBlZmZlY3Qgd2hlbiBpdFxuICAgICAqIHJlYWNoZXMgdGhlIGVuZCBvZiB0aGUgY3VycmVudCBwbGF5YmFjay5cbiAgICAgKlxuICAgICAqIEBtZXRob2Qgc2V0TG9vcFxuICAgICAqIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogQHBhcmFtIHtCb29sZWFufSBCb29sZWFuICAgc2V0IGxvb3BpbmcgdG8gdHJ1ZSBvciBmYWxzZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0TG9vcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRMb29wKGJvb2wpIHtcbiAgICAgIGlmIChib29sID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuX2xvb3BpbmcgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChib29sID09PSBmYWxzZSkge1xuICAgICAgICB0aGlzLl9sb29waW5nID0gZmFsc2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyAnRXJyb3I6IHNldExvb3AgYWNjZXB0cyBlaXRoZXIgdHJ1ZSBvciBmYWxzZSc7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmJ1ZmZlclNvdXJjZU5vZGUpIHtcbiAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlLmxvb3AgPSB0aGlzLl9sb29waW5nO1xuICAgICAgICB0aGlzLl9jb3VudGVyTm9kZS5sb29wID0gdGhpcy5fbG9vcGluZztcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyAndHJ1ZScgaWYgYSBwNS5Tb3VuZEZpbGUgaXMgY3VycmVudGx5IGxvb3BpbmcgYW5kIHBsYXlpbmcsICdmYWxzZScgaWYgbm90LlxuICAgICAqXG4gICAgICogQG1ldGhvZCBpc0xvb3BpbmdcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJpc0xvb3BpbmdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNMb29waW5nKCkge1xuICAgICAgaWYgKCF0aGlzLmJ1ZmZlclNvdXJjZU5vZGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fbG9vcGluZyA9PT0gdHJ1ZSAmJiB0aGlzLmlzUGxheWluZygpID09PSB0cnVlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXR1cm5zIHRydWUgaWYgYSBwNS5Tb3VuZEZpbGUgaXMgcGxheWluZywgZmFsc2UgaWYgbm90IChpLmUuXG4gICAgICogIHBhdXNlZCBvciBzdG9wcGVkKS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kIGlzUGxheWluZ1xuICAgICAqICBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqICBAcmV0dXJuIHtCb29sZWFufVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiaXNQbGF5aW5nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzUGxheWluZygpIHtcbiAgICAgIHJldHVybiB0aGlzLl9wbGF5aW5nO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmV0dXJucyB0cnVlIGlmIGEgcDUuU291bmRGaWxlIGlzIHBhdXNlZCwgZmFsc2UgaWYgbm90IChpLmUuXG4gICAgICogIHBsYXlpbmcgb3Igc3RvcHBlZCkuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgaXNQYXVzZWRcbiAgICAgKiAgQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiAgQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImlzUGF1c2VkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzUGF1c2VkKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3BhdXNlZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RvcCBzb3VuZGZpbGUgcGxheWJhY2suXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIHN0b3BcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbc3RhcnRUaW1lXSAob3B0aW9uYWwpIHNjaGVkdWxlIGV2ZW50IHRvIG9jY3VyXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluIHNlY29uZHMgZnJvbSBub3dcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInN0b3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCh0aW1lRnJvbU5vdykge1xuICAgICAgdmFyIHRpbWUgPSB0aW1lRnJvbU5vdyB8fCAwO1xuXG4gICAgICBpZiAodGhpcy5tb2RlID09PSAnc3VzdGFpbicgfHwgdGhpcy5tb2RlID09PSAndW50aWxkb25lJykge1xuICAgICAgICB0aGlzLnN0b3BBbGwodGltZSk7XG4gICAgICAgIHRoaXMuX3BsYXlpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wYXVzZVRpbWUgPSAwO1xuICAgICAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5idWZmZXIgJiYgdGhpcy5idWZmZXJTb3VyY2VOb2RlKSB7XG4gICAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG4gICAgICAgIHRoaXMucGF1c2VUaW1lID0gMDtcbiAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlLnN0b3Aobm93ICsgdCk7XG5cbiAgICAgICAgdGhpcy5fY291bnRlck5vZGUuc3RvcChub3cgKyB0KTtcblxuICAgICAgICB0aGlzLl9wbGF5aW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3BhdXNlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU3RvcCBwbGF5YmFjayBvbiBhbGwgb2YgdGhpcyBzb3VuZGZpbGUncyBzb3VyY2VzLlxuICAgICAqICBAcHJpdmF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcEFsbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wQWxsKF90aW1lKSB7XG4gICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICB2YXIgdGltZSA9IF90aW1lIHx8IDA7XG5cbiAgICAgIGlmICh0aGlzLmJ1ZmZlciAmJiB0aGlzLmJ1ZmZlclNvdXJjZU5vZGUpIHtcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLmJ1ZmZlclNvdXJjZU5vZGVzKSB7XG4gICAgICAgICAgdmFyIGJ1ZmZlclNvdXJjZU5vZGUgPSB0aGlzLmJ1ZmZlclNvdXJjZU5vZGVzW2ldO1xuXG4gICAgICAgICAgaWYgKGJ1ZmZlclNvdXJjZU5vZGUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGJ1ZmZlclNvdXJjZU5vZGUuc3RvcChub3cgKyB0aW1lKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9jb3VudGVyTm9kZS5zdG9wKG5vdyArIHRpbWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRWb2x1bWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Vm9sdW1lKCkge1xuICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LmdhaW4udmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgc3RlcmVvIHBhbm5pbmcgb2YgYSBwNS5zb3VuZCBvYmplY3QgdG9cbiAgICAgKiBhIGZsb2F0aW5nIHBvaW50IG51bWJlciBiZXR3ZWVuIC0xLjAgKGxlZnQpIGFuZCAxLjAgKHJpZ2h0KS5cbiAgICAgKiBEZWZhdWx0IGlzIDAuMCAoY2VudGVyKS5cbiAgICAgKlxuICAgICAqIEBtZXRob2QgcGFuXG4gICAgICogQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3BhblZhbHVlXSAgICAgU2V0IHRoZSBzdGVyZW8gcGFubmVyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gIHNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzIGZyb20gbm93XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgYmFsbFggPSAwO1xuICAgICAqICBsZXQgc291bmRGaWxlO1xuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gICAgICogICAgc291bmRGb3JtYXRzKCdvZ2cnLCAnbXAzJyk7XG4gICAgICogICAgc291bmRGaWxlID0gbG9hZFNvdW5kKCdhc3NldHMvYmVhdGJveC5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIGRyYXcoKSB7XG4gICAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZChjYW52YXNQcmVzc2VkKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgYmFsbFggPSBjb25zdHJhaW4obW91c2VYLCAwLCB3aWR0aCk7XG4gICAgICogICAgZWxsaXBzZShiYWxsWCwgaGVpZ2h0LzIsIDIwLCAyMCk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBjYW52YXNQcmVzc2VkKCl7XG4gICAgICogICAgLy8gbWFwIHRoZSBiYWxsJ3MgeCBsb2NhdGlvbiB0byBhIHBhbm5pbmcgZGVncmVlXG4gICAgICogICAgLy8gYmV0d2VlbiAtMS4wIChsZWZ0KSBhbmQgMS4wIChyaWdodClcbiAgICAgKiAgICBsZXQgcGFubmluZyA9IG1hcChiYWxsWCwgMC4sIHdpZHRoLC0xLjAsIDEuMCk7XG4gICAgICogICAgc291bmRGaWxlLnBhbihwYW5uaW5nKTtcbiAgICAgKiAgICBzb3VuZEZpbGUucGxheSgpO1xuICAgICAqICB9XG4gICAgICogIDwvZGl2PjwvY29kZT5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInBhblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwYW4ocHZhbCwgdEZyb21Ob3cpIHtcbiAgICAgIHRoaXMucGFuUG9zaXRpb24gPSBwdmFsO1xuICAgICAgdGhpcy5wYW5uZXIucGFuKHB2YWwsIHRGcm9tTm93KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY3VycmVudCBzdGVyZW8gcGFuIHBvc2l0aW9uICgtMS4wIHRvIDEuMClcbiAgICAgKlxuICAgICAqIEBtZXRob2QgZ2V0UGFuXG4gICAgICogQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IFJldHVybnMgdGhlIHN0ZXJlbyBwYW4gc2V0dGluZyBvZiB0aGUgT3NjaWxsYXRvclxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICBhcyBhIG51bWJlciBiZXR3ZWVuIC0xLjAgKGxlZnQpIGFuZCAxLjAgKHJpZ2h0KS5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgMC4wIGlzIGNlbnRlciBhbmQgZGVmYXVsdC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldFBhblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQYW4oKSB7XG4gICAgICByZXR1cm4gdGhpcy5wYW5Qb3NpdGlvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNldCB0aGUgcGxheWJhY2sgcmF0ZSBvZiBhIHNvdW5kIGZpbGUuIFdpbGwgY2hhbmdlIHRoZSBzcGVlZCBhbmQgdGhlIHBpdGNoLlxuICAgICAqICBWYWx1ZXMgbGVzcyB0aGFuIHplcm8gd2lsbCByZXZlcnNlIHRoZSBhdWRpbyBidWZmZXIuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCByYXRlXG4gICAgICogIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbcGxheWJhY2tSYXRlXSAgICAgU2V0IHRoZSBwbGF5YmFjayByYXRlLiAxLjAgaXMgbm9ybWFsLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC41IGlzIGhhbGYtc3BlZWQsIDIuMCBpcyB0d2ljZSBhcyBmYXN0LlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZhbHVlcyBsZXNzIHRoYW4gemVybyBwbGF5IGJhY2t3YXJkcy5cbiAgICAgKiAgQGV4YW1wbGVcbiAgICAgKiAgPGRpdj48Y29kZT5cbiAgICAgKiAgbGV0IG15U291bmQ7XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAgICAgKiAgICBteVNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvRGFtc2NyYXlfRGFuY2luZ1RpZ2VyLm1wMycpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gICAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZChjYW52YXNQcmVzc2VkKTtcbiAgICAgKiAgfVxuICAgICAqICBmdW5jdGlvbiBjYW52YXNQcmVzc2VkKCkge1xuICAgICAqICAgIG15U291bmQubG9vcCgpO1xuICAgICAqICB9XG4gICAgICogIGZ1bmN0aW9uIG1vdXNlUmVsZWFzZWQoKSB7XG4gICAgICogICAgbXlTb3VuZC5wYXVzZSgpO1xuICAgICAqICB9XG4gICAgICogIGZ1bmN0aW9uIGRyYXcoKSB7XG4gICAgICogICAgYmFja2dyb3VuZCgyMjApO1xuICAgICAqXG4gICAgICogICAgLy8gU2V0IHRoZSByYXRlIHRvIGEgcmFuZ2UgYmV0d2VlbiAwLjEgYW5kIDRcbiAgICAgKiAgICAvLyBDaGFuZ2luZyB0aGUgcmF0ZSBhbHNvIGFsdGVycyB0aGUgcGl0Y2hcbiAgICAgKiAgICBsZXQgcGxheWJhY2tSYXRlID0gbWFwKG1vdXNlWSwgMC4xLCBoZWlnaHQsIDIsIDApO1xuICAgICAqICAgIHBsYXliYWNrUmF0ZSA9IGNvbnN0cmFpbihwbGF5YmFja1JhdGUsIDAuMDEsIDQpO1xuICAgICAqICAgIG15U291bmQucmF0ZShwbGF5YmFja1JhdGUpO1xuICAgICAqXG4gICAgICogICAgbGluZSgwLCBtb3VzZVksIHdpZHRoLCBtb3VzZVkpO1xuICAgICAqICAgIHRleHQoJ3JhdGU6ICcgKyByb3VuZChwbGF5YmFja1JhdGUgKiAxMDApICsgJyUnLCAxMCwgMjApO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiA8L2NvZGU+XG4gICAgICogPC9kaXY+XG4gICAgICpcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmF0ZShwbGF5YmFja1JhdGUpIHtcbiAgICAgIHZhciByZXZlcnNlID0gZmFsc2U7XG5cbiAgICAgIGlmICh0eXBlb2YgcGxheWJhY2tSYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gdGhpcy5wbGF5YmFja1JhdGU7XG4gICAgICB9XG5cbiAgICAgIHRoaXMucGxheWJhY2tSYXRlID0gcGxheWJhY2tSYXRlO1xuXG4gICAgICBpZiAocGxheWJhY2tSYXRlID09PSAwKSB7XG4gICAgICAgIHBsYXliYWNrUmF0ZSA9IDAuMDAwMDAwMDAwMDAwMTtcbiAgICAgIH0gZWxzZSBpZiAocGxheWJhY2tSYXRlIDwgMCAmJiAhdGhpcy5yZXZlcnNlZCkge1xuICAgICAgICBwbGF5YmFja1JhdGUgPSBNYXRoLmFicyhwbGF5YmFja1JhdGUpO1xuICAgICAgICByZXZlcnNlID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAocGxheWJhY2tSYXRlID4gMCAmJiB0aGlzLnJldmVyc2VkKSB7XG4gICAgICAgIHJldmVyc2UgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5idWZmZXJTb3VyY2VOb2RlKSB7XG4gICAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlLnBsYXliYWNrUmF0ZS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMobm93KTtcbiAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2RlLnBsYXliYWNrUmF0ZS5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShNYXRoLmFicyhwbGF5YmFja1JhdGUpLCBub3cpO1xuXG4gICAgICAgIHRoaXMuX2NvdW50ZXJOb2RlLnBsYXliYWNrUmF0ZS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMobm93KTtcblxuICAgICAgICB0aGlzLl9jb3VudGVyTm9kZS5wbGF5YmFja1JhdGUubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoTWF0aC5hYnMocGxheWJhY2tSYXRlKSwgbm93KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJldmVyc2UpIHtcbiAgICAgICAgdGhpcy5yZXZlcnNlQnVmZmVyKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnBsYXliYWNrUmF0ZTtcbiAgICB9IFxuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0UGl0Y2hcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UGl0Y2gobnVtKSB7XG4gICAgICB2YXIgbmV3UGxheWJhY2tSYXRlID0gbWlkaVRvRnJlcShudW0pIC8gbWlkaVRvRnJlcSg2MCk7XG4gICAgICB0aGlzLnJhdGUobmV3UGxheWJhY2tSYXRlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UGxheWJhY2tSYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBsYXliYWNrUmF0ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnBsYXliYWNrUmF0ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIE11bHRpcGx5IHRoZSBvdXRwdXQgdm9sdW1lIChhbXBsaXR1ZGUpIG9mIGEgc291bmQgZmlsZVxuICAgICAqICBiZXR3ZWVuIDAuMCAoc2lsZW5jZSkgYW5kIDEuMCAoZnVsbCB2b2x1bWUpLlxuICAgICAqICAxLjAgaXMgdGhlIG1heGltdW0gYW1wbGl0dWRlIG9mIGEgZGlnaXRhbCBzb3VuZCwgc28gbXVsdGlwbHlpbmdcbiAgICAgKiAgYnkgZ3JlYXRlciB0aGFuIDEuMCBtYXkgY2F1c2UgZGlnaXRhbCBkaXN0b3J0aW9uLiBUb1xuICAgICAqICBmYWRlLCBwcm92aWRlIGEgPGNvZGU+cmFtcFRpbWU8L2NvZGU+IHBhcmFtZXRlci4gRm9yIG1vcmVcbiAgICAgKiAgY29tcGxleCBmYWRlcywgc2VlIHRoZSBFbnZlbG9wZSBjbGFzcy5cbiAgICAgKlxuICAgICAqICBBbHRlcm5hdGVseSwgeW91IGNhbiBwYXNzIGluIGEgc2lnbmFsIHNvdXJjZSBzdWNoIGFzIGFuXG4gICAgICogIG9zY2lsbGF0b3IgdG8gbW9kdWxhdGUgdGhlIGFtcGxpdHVkZSB3aXRoIGFuIGF1ZGlvIHNpZ25hbC5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzZXRWb2x1bWVcbiAgICAgKiAgQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ8T2JqZWN0fSB2b2x1bWUgIFZvbHVtZSAoYW1wbGl0dWRlKSBiZXR3ZWVuIDAuMFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCAxLjAgb3IgbW9kdWxhdGluZyBzaWduYWwvb3NjaWxsYXRvclxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3JhbXBUaW1lXSAgRmFkZSBmb3IgdCBzZWNvbmRzXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbdGltZUZyb21Ob3ddICBTY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlbiBhdFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdCBzZWNvbmRzIGluIHRoZSBmdXR1cmVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInNldFZvbHVtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRWb2x1bWUodm9sLCBfcmFtcFRpbWUsIF90RnJvbU5vdykge1xuICAgICAgaWYgKHR5cGVvZiB2b2wgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHZhciByYW1wVGltZSA9IF9yYW1wVGltZSB8fCAwO1xuICAgICAgICB2YXIgdEZyb21Ob3cgPSBfdEZyb21Ob3cgfHwgMDtcbiAgICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICB2YXIgY3VycmVudFZvbCA9IHRoaXMub3V0cHV0LmdhaW4udmFsdWU7XG4gICAgICAgIHRoaXMub3V0cHV0LmdhaW4uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKG5vdyArIHRGcm9tTm93KTtcbiAgICAgICAgdGhpcy5vdXRwdXQuZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShjdXJyZW50Vm9sLCBub3cgKyB0RnJvbU5vdyk7XG4gICAgICAgIHRoaXMub3V0cHV0LmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodm9sLCBub3cgKyB0RnJvbU5vdyArIHJhbXBUaW1lKTtcbiAgICAgIH0gZWxzZSBpZiAodm9sKSB7XG4gICAgICAgIHZvbC5jb25uZWN0KHRoaXMub3V0cHV0LmdhaW4pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LmdhaW47XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGR1cmF0aW9uIG9mIGEgc291bmQgZmlsZSBpbiBzZWNvbmRzLlxuICAgICAqXG4gICAgICogQG1ldGhvZCBkdXJhdGlvblxuICAgICAqIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogQHJldHVybiB7TnVtYmVyfSBUaGUgZHVyYXRpb24gb2YgdGhlIHNvdW5kRmlsZSBpbiBzZWNvbmRzLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZHVyYXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZHVyYXRpb24oKSB7XG4gICAgICBpZiAodGhpcy5idWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLmR1cmF0aW9uO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgY3VycmVudCBwb3NpdGlvbiBvZiB0aGUgcDUuU291bmRGaWxlIHBsYXloZWFkLCBpbiBzZWNvbmRzLlxuICAgICAqIFRpbWUgaXMgcmVsYXRpdmUgdG8gdGhlIG5vcm1hbCBidWZmZXIgZGlyZWN0aW9uLCBzbyBpZiBgcmV2ZXJzZUJ1ZmZlcmBcbiAgICAgKiBoYXMgYmVlbiBjYWxsZWQsIGN1cnJlbnRUaW1lIHdpbGwgY291bnQgYmFja3dhcmRzLlxuICAgICAqXG4gICAgICogQG1ldGhvZCBjdXJyZW50VGltZVxuICAgICAqIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogQHJldHVybiB7TnVtYmVyfSAgIGN1cnJlbnRUaW1lIG9mIHRoZSBzb3VuZEZpbGUgaW4gc2Vjb25kcy5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImN1cnJlbnRUaW1lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGN1cnJlbnRUaW1lKCkge1xuICAgICAgcmV0dXJuIHRoaXMucmV2ZXJzZWQgPyBNYXRoLmFicyh0aGlzLl9sYXN0UG9zIC0gdGhpcy5idWZmZXIubGVuZ3RoKSAvIHNvdW5kZmlsZV9hYy5zYW1wbGVSYXRlIDogdGhpcy5fbGFzdFBvcyAvIHNvdW5kZmlsZV9hYy5zYW1wbGVSYXRlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb3ZlIHRoZSBwbGF5aGVhZCBvZiBhIHNvdW5kZmlsZSB0aGF0IGlzIGN1cnJlbnRseSBwbGF5aW5nIHRvIGFcbiAgICAgKiBuZXcgcG9zaXRpb24gYW5kIGEgbmV3IGR1cmF0aW9uLCBpbiBzZWNvbmRzLlxuICAgICAqIElmIG5vbmUgYXJlIGdpdmVuLCB3aWxsIHJlc2V0IHRoZSBmaWxlIHRvIHBsYXkgZW50aXJlIGR1cmF0aW9uXG4gICAgICogZnJvbSBzdGFydCB0byBmaW5pc2guIFRvIHNldCB0aGUgcG9zaXRpb24gb2YgYSBzb3VuZGZpbGUgdGhhdCBpc1xuICAgICAqIG5vdCBjdXJyZW50bHkgcGxheWluZywgdXNlIHRoZSBgcGxheWAgb3IgYGxvb3BgIG1ldGhvZHMuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGp1bXBcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBjdWVUaW1lICAgIGN1ZVRpbWUgb2YgdGhlIHNvdW5kRmlsZSBpbiBzZWNvbmRzLlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBkdXJhdGlvbiAgICBkdXJhdGlvbiBpbiBzZWNvbmRzLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwianVtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBqdW1wKGN1ZVRpbWUsIGR1cmF0aW9uKSB7XG4gICAgICBpZiAoY3VlVGltZSA8IDAgfHwgY3VlVGltZSA+IHRoaXMuYnVmZmVyLmR1cmF0aW9uKSB7XG4gICAgICAgIHRocm93ICdqdW1wIHRpbWUgb3V0IG9mIHJhbmdlJztcbiAgICAgIH1cblxuICAgICAgaWYgKGR1cmF0aW9uID4gdGhpcy5idWZmZXIuZHVyYXRpb24gLSBjdWVUaW1lKSB7XG4gICAgICAgIHRocm93ICdlbmQgdGltZSBvdXQgb2YgcmFuZ2UnO1xuICAgICAgfVxuXG4gICAgICB2YXIgY1RpbWUgPSBjdWVUaW1lIHx8IDA7XG4gICAgICB2YXIgZHVyID0gZHVyYXRpb24gfHwgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAodGhpcy5pc1BsYXlpbmcoKSkge1xuICAgICAgICB0aGlzLnN0b3AoMCk7XG4gICAgICAgIHRoaXMucGxheSgwLCB0aGlzLnBsYXliYWNrUmF0ZSwgdGhpcy5vdXRwdXQuZ2Fpbi52YWx1ZSwgY1RpbWUsIGR1cik7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgbnVtYmVyIG9mIGNoYW5uZWxzIGluIGEgc291bmQgZmlsZS5cbiAgICAgKiBGb3IgZXhhbXBsZSwgTW9ubyA9IDEsIFN0ZXJlbyA9IDIuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGNoYW5uZWxzXG4gICAgICogQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IFtjaGFubmVsc11cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImNoYW5uZWxzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNoYW5uZWxzKCkge1xuICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLm51bWJlck9mQ2hhbm5lbHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgc2FtcGxlIHJhdGUgb2YgdGhlIHNvdW5kIGZpbGUuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIHNhbXBsZVJhdGVcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqIEByZXR1cm4ge051bWJlcn0gW3NhbXBsZVJhdGVdXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzYW1wbGVSYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNhbXBsZVJhdGUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5idWZmZXIuc2FtcGxlUmF0ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBudW1iZXIgb2Ygc2FtcGxlcyBpbiBhIHNvdW5kIGZpbGUuXG4gICAgICogRXF1YWwgdG8gc2FtcGxlUmF0ZSAqIGR1cmF0aW9uLlxuICAgICAqXG4gICAgICogQG1ldGhvZCBmcmFtZXNcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqIEByZXR1cm4ge051bWJlcn0gW3NhbXBsZUNvdW50XVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZnJhbWVzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZyYW1lcygpIHtcbiAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5sZW5ndGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gYXJyYXkgb2YgYW1wbGl0dWRlIHBlYWtzIGluIGEgcDUuU291bmRGaWxlIHRoYXQgY2FuIGJlXG4gICAgICogdXNlZCB0byBkcmF3IGEgc3RhdGljIHdhdmVmb3JtLiBTY2FucyB0aHJvdWdoIHRoZSBwNS5Tb3VuZEZpbGUnc1xuICAgICAqIGF1ZGlvIGJ1ZmZlciB0byBmaW5kIHRoZSBncmVhdGVzdCBhbXBsaXR1ZGVzLiBBY2NlcHRzIG9uZVxuICAgICAqIHBhcmFtZXRlciwgJ2xlbmd0aCcsIHdoaWNoIGRldGVybWluZXMgc2l6ZSBvZiB0aGUgYXJyYXkuXG4gICAgICogTGFyZ2VyIGFycmF5cyByZXN1bHQgaW4gbW9yZSBwcmVjaXNlIHdhdmVmb3JtIHZpc3VhbGl6YXRpb25zLlxuICAgICAqXG4gICAgICogSW5zcGlyZWQgYnkgV2F2ZXN1cmZlci5qcy5cbiAgICAgKlxuICAgICAqIEBtZXRob2QgIGdldFBlYWtzXG4gICAgICogQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiBAcGFyYW1zIHtOdW1iZXJ9IFtsZW5ndGhdIGxlbmd0aCBpcyB0aGUgc2l6ZSBvZiB0aGUgcmV0dXJuZWQgYXJyYXkuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIExhcmdlciBsZW5ndGggcmVzdWx0cyBpbiBtb3JlIHByZWNpc2lvbi5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gNSp3aWR0aCBvZiB0aGUgYnJvd3NlciB3aW5kb3cuXG4gICAgICogQHJldHVybnMge0Zsb2F0MzJBcnJheX0gQXJyYXkgb2YgcGVha3MuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRQZWFrc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQZWFrcyhsZW5ndGgpIHtcbiAgICAgIGlmICh0aGlzLmJ1ZmZlcikge1xuICAgICAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgICAgIGxlbmd0aCA9IHdpbmRvdy53aWR0aCAqIDU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5idWZmZXIpIHtcbiAgICAgICAgICB2YXIgYnVmZmVyID0gdGhpcy5idWZmZXI7XG4gICAgICAgICAgdmFyIHNhbXBsZVNpemUgPSBidWZmZXIubGVuZ3RoIC8gbGVuZ3RoO1xuICAgICAgICAgIHZhciBzYW1wbGVTdGVwID0gfn4oc2FtcGxlU2l6ZSAvIDEwKSB8fCAxO1xuICAgICAgICAgIHZhciBjaGFubmVscyA9IGJ1ZmZlci5udW1iZXJPZkNoYW5uZWxzO1xuICAgICAgICAgIHZhciBwZWFrcyA9IG5ldyBGbG9hdDMyQXJyYXkoTWF0aC5yb3VuZChsZW5ndGgpKTtcblxuICAgICAgICAgIGZvciAodmFyIGMgPSAwOyBjIDwgY2hhbm5lbHM7IGMrKykge1xuICAgICAgICAgICAgdmFyIGNoYW4gPSBidWZmZXIuZ2V0Q2hhbm5lbERhdGEoYyk7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gfn4oaSAqIHNhbXBsZVNpemUpO1xuICAgICAgICAgICAgICB2YXIgZW5kID0gfn4oc3RhcnQgKyBzYW1wbGVTaXplKTtcbiAgICAgICAgICAgICAgdmFyIG1heCA9IDA7XG5cbiAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IHN0YXJ0OyBqIDwgZW5kOyBqICs9IHNhbXBsZVN0ZXApIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBjaGFuW2pdO1xuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID4gbWF4KSB7XG4gICAgICAgICAgICAgICAgICBtYXggPSB2YWx1ZTsgXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICgtdmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgICAgICAgIG1heCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChjID09PSAwIHx8IE1hdGguYWJzKG1heCkgPiBwZWFrc1tpXSkge1xuICAgICAgICAgICAgICAgIHBlYWtzW2ldID0gbWF4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHBlYWtzO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyAnQ2Fubm90IGxvYWQgcGVha3MgeWV0LCBidWZmZXIgaXMgbm90IGxvYWRlZCc7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXZlcnNlcyB0aGUgcDUuU291bmRGaWxlJ3MgYnVmZmVyIHNvdXJjZS5cbiAgICAgKiAgUGxheWJhY2sgbXVzdCBiZSBoYW5kbGVkIHNlcGFyYXRlbHkgKHNlZSBleGFtcGxlKS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICByZXZlcnNlQnVmZmVyXG4gICAgICogIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogIGxldCBkcnVtO1xuICAgICAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgICAqICAgIGRydW0gPSBsb2FkU291bmQoJ2Fzc2V0cy9kcnVtLm1wMycpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gICAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZChjYW52YXNQcmVzc2VkKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgdGV4dCgndGFwIHRvIHBsYXknLCAyMCwgMjApO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gY2FudmFzUHJlc3NlZCgpIHtcbiAgICAgKiAgICBkcnVtLnN0b3AoKTtcbiAgICAgKiAgICBkcnVtLnJldmVyc2VCdWZmZXIoKTtcbiAgICAgKiAgICBkcnVtLnBsYXkoKTtcbiAgICAgKiAgfVxuICAgICAqIDwvY29kZT5cbiAgICAgKiA8L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJldmVyc2VCdWZmZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmV2ZXJzZUJ1ZmZlcigpIHtcbiAgICAgIGlmICh0aGlzLmJ1ZmZlcikge1xuICAgICAgICB2YXIgY3VycmVudFBvcyA9IHRoaXMuX2xhc3RQb3MgLyBzb3VuZGZpbGVfYWMuc2FtcGxlUmF0ZTtcbiAgICAgICAgdmFyIGN1clZvbCA9IHRoaXMuZ2V0Vm9sdW1lKCk7XG4gICAgICAgIHRoaXMuc2V0Vm9sdW1lKDAsIDAuMDAxKTtcbiAgICAgICAgdmFyIG51bUNoYW5uZWxzID0gdGhpcy5idWZmZXIubnVtYmVyT2ZDaGFubmVscztcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bUNoYW5uZWxzOyBpKyspIHtcbiAgICAgICAgICB0aGlzLmJ1ZmZlci5nZXRDaGFubmVsRGF0YShpKS5yZXZlcnNlKCk7XG4gICAgICAgIH0gXG5cblxuICAgICAgICB0aGlzLnJldmVyc2VkID0gIXRoaXMucmV2ZXJzZWQ7XG5cbiAgICAgICAgaWYgKHRoaXMuaXNQbGF5aW5nKCkgJiYgY3VycmVudFBvcykge1xuICAgICAgICAgIHRoaXMuanVtcCh0aGlzLmR1cmF0aW9uKCkgLSBjdXJyZW50UG9zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0Vm9sdW1lKGN1clZvbCwgMC4wMDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgJ1NvdW5kRmlsZSBpcyBub3QgZG9uZSBsb2FkaW5nJztcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNjaGVkdWxlIGFuIGV2ZW50IHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBzb3VuZGZpbGVcbiAgICAgKiAgcmVhY2hlcyB0aGUgZW5kIG9mIGEgYnVmZmVyLiBJZiB0aGUgc291bmRmaWxlIGlzXG4gICAgICogIHBsYXlpbmcgdGhyb3VnaCBvbmNlLCB0aGlzIHdpbGwgYmUgY2FsbGVkIHdoZW4gaXRcbiAgICAgKiAgZW5kcy4gSWYgaXQgaXMgbG9vcGluZywgaXQgd2lsbCBiZSBjYWxsZWQgd2hlblxuICAgICAqICBzdG9wIGlzIGNhbGxlZC5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBvbmVuZGVkXG4gICAgICogIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjayBmdW5jdGlvbiB0byBjYWxsIHdoZW4gdGhlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VuZGZpbGUgaGFzIGVuZGVkLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwib25lbmRlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbmVuZGVkKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLl9vbmVuZGVkID0gY2FsbGJhY2s7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZCgpIHtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lOyBcblxuICAgICAgdmFyIGluZGV4ID0gbWFpbi5zb3VuZEFycmF5LmluZGV4T2YodGhpcyk7XG4gICAgICBtYWluLnNvdW5kQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMuc3RvcChub3cpO1xuXG4gICAgICBpZiAodGhpcy5idWZmZXIgJiYgdGhpcy5idWZmZXJTb3VyY2VOb2RlKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5idWZmZXJTb3VyY2VOb2Rlcy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICBpZiAodGhpcy5idWZmZXJTb3VyY2VOb2Rlc1tpXSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5idWZmZXJTb3VyY2VOb2Rlc1tpXS5kaXNjb25uZWN0KCk7XG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHRoaXMuYnVmZmVyU291cmNlTm9kZXNbaV0uc3RvcChub3cpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ25vIGJ1ZmZlciBzb3VyY2Ugbm9kZSB0byBkaXNwb3NlJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuYnVmZmVyU291cmNlTm9kZXNbaV0gPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmlzUGxheWluZygpKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMuX2NvdW50ZXJOb2RlLnN0b3Aobm93KTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLl9jb3VudGVyTm9kZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgdGhpcy5vdXRwdXQgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wYW5uZXIpIHtcbiAgICAgICAgdGhpcy5wYW5uZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICB0aGlzLnBhbm5lciA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbm5lY3RzIHRoZSBvdXRwdXQgb2YgYSBwNXNvdW5kIG9iamVjdCB0byBpbnB1dCBvZiBhbm90aGVyXG4gICAgICogcDUuc291bmQgb2JqZWN0LiBGb3IgZXhhbXBsZSwgeW91IG1heSBjb25uZWN0IGEgcDUuU291bmRGaWxlIHRvIGFuXG4gICAgICogRkZUIG9yIGFuIEVmZmVjdC4gSWYgbm8gcGFyYW1ldGVyIGlzIGdpdmVuLCBpdCB3aWxsIGNvbm5lY3QgdG9cbiAgICAgKiB0aGUgbWFpbiBvdXRwdXQuIE1vc3QgcDVzb3VuZCBvYmplY3RzIGNvbm5lY3QgdG8gdGhlIG1hc3RlclxuICAgICAqIG91dHB1dCB3aGVuIHRoZXkgYXJlIGNyZWF0ZWQuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGNvbm5lY3RcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBBdWRpbyBvYmplY3QgdGhhdCBhY2NlcHRzIGFuIGlucHV0XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3QodW5pdCkge1xuICAgICAgaWYgKCF1bml0KSB7XG4gICAgICAgIHRoaXMucGFubmVyLmNvbm5lY3QobWFpbi5pbnB1dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodW5pdC5oYXNPd25Qcm9wZXJ0eSgnaW5wdXQnKSkge1xuICAgICAgICAgIHRoaXMucGFubmVyLmNvbm5lY3QodW5pdC5pbnB1dCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5wYW5uZXIuY29ubmVjdCh1bml0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEaXNjb25uZWN0cyB0aGUgb3V0cHV0IG9mIHRoaXMgcDVzb3VuZCBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGRpc2Nvbm5lY3RcbiAgICAgKiBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNjb25uZWN0KCkge1xuICAgICAgaWYgKHRoaXMucGFubmVyKSB7XG4gICAgICAgIHRoaXMucGFubmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMZXZlbCgpIHtcbiAgICAgIGNvbnNvbGUud2FybigncDUuU291bmRGaWxlLmdldExldmVsIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgbGlicmFyeS4gVXNlIHA1LkFtcGxpdHVkZSBpbnN0ZWFkJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXNldCB0aGUgc291cmNlIGZvciB0aGlzIFNvdW5kRmlsZSB0byBhXG4gICAgICogIG5ldyBwYXRoIChVUkwpLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHNldFBhdGhcbiAgICAgKiAgQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiAgQHBhcmFtIHtTdHJpbmd9ICAgcGF0aCAgICAgcGF0aCB0byBhdWRpbyBmaWxlXG4gICAgICogIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRQYXRoXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFBhdGgocCwgY2FsbGJhY2spIHtcbiAgICAgIHZhciBwYXRoID0gcDUucHJvdG90eXBlLl9jaGVja0ZpbGVGb3JtYXRzKHApO1xuXG4gICAgICB0aGlzLnVybCA9IHBhdGg7XG4gICAgICB0aGlzLmxvYWQoY2FsbGJhY2spO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmVwbGFjZSB0aGUgY3VycmVudCBBdWRpbyBCdWZmZXIgd2l0aCBhIG5ldyBCdWZmZXIuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCBzZXRCdWZmZXJcbiAgICAgKiAgQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiAgQHBhcmFtIHtBcnJheX0gYnVmIEFycmF5IG9mIEZsb2F0MzIgQXJyYXkocykuIDIgRmxvYXQzMiBBcnJheXNcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgIHdpbGwgY3JlYXRlIGEgc3RlcmVvIHNvdXJjZS4gMSB3aWxsIGNyZWF0ZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgYSBtb25vIHNvdXJjZS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInNldEJ1ZmZlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRCdWZmZXIoYnVmKSB7XG4gICAgICB2YXIgbnVtQ2hhbm5lbHMgPSBidWYubGVuZ3RoO1xuICAgICAgdmFyIHNpemUgPSBidWZbMF0ubGVuZ3RoO1xuICAgICAgdmFyIG5ld0J1ZmZlciA9IHNvdW5kZmlsZV9hYy5jcmVhdGVCdWZmZXIobnVtQ2hhbm5lbHMsIHNpemUsIHNvdW5kZmlsZV9hYy5zYW1wbGVSYXRlKTtcblxuICAgICAgaWYgKCEoYnVmWzBdIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5KSkge1xuICAgICAgICBidWZbMF0gPSBuZXcgRmxvYXQzMkFycmF5KGJ1ZlswXSk7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGNoYW5uZWxOdW0gPSAwOyBjaGFubmVsTnVtIDwgbnVtQ2hhbm5lbHM7IGNoYW5uZWxOdW0rKykge1xuICAgICAgICB2YXIgY2hhbm5lbCA9IG5ld0J1ZmZlci5nZXRDaGFubmVsRGF0YShjaGFubmVsTnVtKTtcbiAgICAgICAgY2hhbm5lbC5zZXQoYnVmW2NoYW5uZWxOdW1dKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5idWZmZXIgPSBuZXdCdWZmZXI7IFxuXG4gICAgICB0aGlzLnBhbm5lci5pbnB1dENoYW5uZWxzKG51bUNoYW5uZWxzKTtcbiAgICB9IFxuXG4gIH0sIHtcbiAgICBrZXk6IFwiX2luaXRDb3VudGVyTm9kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfaW5pdENvdW50ZXJOb2RlKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgdmFyIG5vdyA9IHNvdW5kZmlsZV9hYy5jdXJyZW50VGltZTtcbiAgICAgIHZhciBjTm9kZSA9IHNvdW5kZmlsZV9hYy5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcbiAgICAgIHZhciB3b3JrbGV0QnVmZmVyU2l6ZSA9IHNhZmVCdWZmZXJTaXplKDI1Nik7IFxuXG4gICAgICBpZiAoc2VsZi5fd29ya2xldE5vZGUpIHtcbiAgICAgICAgc2VsZi5fd29ya2xldE5vZGUuZGlzY29ubmVjdCgpO1xuXG4gICAgICAgIGRlbGV0ZSBzZWxmLl93b3JrbGV0Tm9kZTtcbiAgICAgIH1cblxuICAgICAgc2VsZi5fd29ya2xldE5vZGUgPSBuZXcgQXVkaW9Xb3JrbGV0Tm9kZShzb3VuZGZpbGVfYWMsIHByb2Nlc3Nvck5hbWVzX2RlZmF1bHQuYS5zb3VuZEZpbGVQcm9jZXNzb3IsIHtcbiAgICAgICAgcHJvY2Vzc29yT3B0aW9uczoge1xuICAgICAgICAgIGJ1ZmZlclNpemU6IHdvcmtsZXRCdWZmZXJTaXplXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBzZWxmLl93b3JrbGV0Tm9kZS5wb3J0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQuZGF0YS5uYW1lID09PSAncG9zaXRpb24nKSB7XG4gICAgICAgICAgaWYgKGV2ZW50LmRhdGEucG9zaXRpb24gPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpcy5fbGFzdFBvcyA9IGV2ZW50LmRhdGEucG9zaXRpb247IFxuXG4gICAgICAgICAgX3RoaXMuX29uVGltZVVwZGF0ZShzZWxmLl9sYXN0UG9zKTtcbiAgICAgICAgfVxuICAgICAgfTsgXG5cblxuICAgICAgY05vZGUuYnVmZmVyID0gX2NyZWF0ZUNvdW50ZXJCdWZmZXIoc2VsZi5idWZmZXIpO1xuICAgICAgY05vZGUucGxheWJhY2tSYXRlLnNldFZhbHVlQXRUaW1lKHNlbGYucGxheWJhY2tSYXRlLCBub3cpO1xuICAgICAgY05vZGUuY29ubmVjdChzZWxmLl93b3JrbGV0Tm9kZSk7XG5cbiAgICAgIHNlbGYuX3dvcmtsZXROb2RlLmNvbm5lY3QocDUuc291bmRPdXQuX3NpbGVudE5vZGUpO1xuXG4gICAgICByZXR1cm4gY05vZGU7XG4gICAgfSBcblxuICB9LCB7XG4gICAga2V5OiBcIl9pbml0U291cmNlTm9kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfaW5pdFNvdXJjZU5vZGUoKSB7XG4gICAgICB2YXIgYnVmZmVyU291cmNlTm9kZSA9IHNvdW5kZmlsZV9hYy5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcbiAgICAgIGJ1ZmZlclNvdXJjZU5vZGUuYnVmZmVyID0gdGhpcy5idWZmZXI7XG4gICAgICBidWZmZXJTb3VyY2VOb2RlLnBsYXliYWNrUmF0ZS52YWx1ZSA9IHRoaXMucGxheWJhY2tSYXRlO1xuICAgICAgYnVmZmVyU291cmNlTm9kZS5jb25uZWN0KHRoaXMub3V0cHV0KTtcbiAgICAgIHJldHVybiBidWZmZXJTb3VyY2VOb2RlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwcm9jZXNzUGVha3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2Vzc1BlYWtzKGNhbGxiYWNrLCBfaW5pdFRocmVzaG9sZCwgX21pblRocmVzaG9sZCwgX21pblBlYWtzKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ3Byb2Nlc3NQZWFrcyBpcyBkZXByZWNhdGVkJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTY2hlZHVsZSBldmVudHMgdG8gdHJpZ2dlciBldmVyeSB0aW1lIGEgTWVkaWFFbGVtZW50XG4gICAgICogIChhdWRpby92aWRlbykgcmVhY2hlcyBhIHBsYXliYWNrIGN1ZSBwb2ludC5cbiAgICAgKlxuICAgICAqICBBY2NlcHRzIGEgY2FsbGJhY2sgZnVuY3Rpb24sIGEgdGltZSAoaW4gc2Vjb25kcykgYXQgd2hpY2ggdG8gdHJpZ2dlclxuICAgICAqICB0aGUgY2FsbGJhY2ssIGFuZCBhbiBvcHRpb25hbCBwYXJhbWV0ZXIgZm9yIHRoZSBjYWxsYmFjay5cbiAgICAgKlxuICAgICAqICBUaW1lIHdpbGwgYmUgcGFzc2VkIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIgdG8gdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLFxuICAgICAqICBhbmQgcGFyYW0gd2lsbCBiZSB0aGUgc2Vjb25kIHBhcmFtZXRlci5cbiAgICAgKlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGFkZEN1ZVxuICAgICAqICBAZm9yIHA1LlNvdW5kRmlsZVxuICAgICAqICBAcGFyYW0ge051bWJlcn0gICB0aW1lICAgICBUaW1lIGluIHNlY29uZHMsIHJlbGF0aXZlIHRvIHRoaXMgbWVkaWFcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCdzIHBsYXliYWNrLiBGb3IgZXhhbXBsZSwgdG8gdHJpZ2dlclxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBldmVudCBldmVyeSB0aW1lIHBsYXliYWNrIHJlYWNoZXMgdHdvXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMsIHBhc3MgaW4gdGhlIG51bWJlciAyLiBUaGlzIHdpbGwgYmVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzc2VkIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIgdG9cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICAgICAqICBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBOYW1lIG9mIGEgZnVuY3Rpb24gdGhhdCB3aWxsIGJlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxlZCBhdCB0aGUgZ2l2ZW4gdGltZS4gVGhlIGNhbGxiYWNrIHdpbGxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjZWl2ZSB0aW1lIGFuZCAob3B0aW9uYWxseSkgcGFyYW0gYXMgaXRzXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR3byBwYXJhbWV0ZXJzLlxuICAgICAqICBAcGFyYW0ge09iamVjdH0gW3ZhbHVlXSAgICBBbiBvYmplY3QgdG8gYmUgcGFzc2VkIGFzIHRoZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmQgcGFyYW1ldGVyIHRvIHRoZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayBmdW5jdGlvbi5cbiAgICAgKiAgQHJldHVybiB7TnVtYmVyfSBpZCBJRCBvZiB0aGlzIGN1ZSxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICB1c2VmdWwgZm9yIHJlbW92ZUN1ZShpZClcbiAgICAgKiAgQGV4YW1wbGVcbiAgICAgKiAgPGRpdj48Y29kZT5cbiAgICAgKiAgbGV0IG15U291bmQ7XG4gICAgICogIGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gICAgICogICAgbXlTb3VuZCA9IGxvYWRTb3VuZCgnYXNzZXRzL0RhbXNjcmF5X0RhbmNpbmdUaWdlci5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgICAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICAgICAqICAgIGNudi5tb3VzZVByZXNzZWQoY2FudmFzUHJlc3NlZCk7XG4gICAgICogICAgYmFja2dyb3VuZCgyMjApO1xuICAgICAqICAgIHRleHQoJ3RhcCB0byBwbGF5JywgMTAsIDIwKTtcbiAgICAgKlxuICAgICAqICAgIC8vIHNjaGVkdWxlIGNhbGxzIHRvIGNoYW5nZVRleHRcbiAgICAgKiAgICBteVNvdW5kLmFkZEN1ZSgwLCBjaGFuZ2VUZXh0LCBcImhlbGxvXCIgKTtcbiAgICAgKiAgICBteVNvdW5kLmFkZEN1ZSgwLjUsIGNoYW5nZVRleHQsIFwiaGVsbG8sXCIgKTtcbiAgICAgKiAgICBteVNvdW5kLmFkZEN1ZSgxLCBjaGFuZ2VUZXh0LCBcImhlbGxvLCBwNSFcIik7XG4gICAgICogICAgbXlTb3VuZC5hZGRDdWUoMS41LCBjaGFuZ2VUZXh0LCBcImhlbGxvLCBwNSEhXCIpO1xuICAgICAqICAgIG15U291bmQuYWRkQ3VlKDIsIGNoYW5nZVRleHQsIFwiaGVsbG8sIHA1ISEhISFcIik7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBjaGFuZ2VUZXh0KHZhbCkge1xuICAgICAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAgICAgKiAgICB0ZXh0KHZhbCwgMTAsIDIwKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIGNhbnZhc1ByZXNzZWQoKSB7XG4gICAgICogICAgbXlTb3VuZC5wbGF5KCk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkQ3VlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZEN1ZSh0aW1lLCBjYWxsYmFjaywgdmFsKSB7XG4gICAgICB2YXIgaWQgPSB0aGlzLl9jdWVJRENvdW50ZXIrKztcbiAgICAgIHZhciBjdWUgPSBuZXcgQ3VlKGNhbGxiYWNrLCB0aW1lLCBpZCwgdmFsKTtcblxuICAgICAgdGhpcy5fY3Vlcy5wdXNoKGN1ZSk7IFxuXG5cbiAgICAgIHJldHVybiBpZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJlbW92ZSBhIGNhbGxiYWNrIGJhc2VkIG9uIGl0cyBJRC4gVGhlIElEIGlzIHJldHVybmVkIGJ5IHRoZVxuICAgICAqICBhZGRDdWUgbWV0aG9kLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgcmVtb3ZlQ3VlXG4gICAgICogIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gaWQgSUQgb2YgdGhlIGN1ZSwgYXMgcmV0dXJuZWQgYnkgYWRkQ3VlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJyZW1vdmVDdWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlQ3VlKGlkKSB7XG4gICAgICB2YXIgY3VlTGVuZ3RoID0gdGhpcy5fY3Vlcy5sZW5ndGg7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3VlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGN1ZSA9IHRoaXMuX2N1ZXNbaV07XG5cbiAgICAgICAgaWYgKGN1ZS5pZCA9PT0gaWQpIHtcbiAgICAgICAgICB0aGlzLl9jdWVzLnNwbGljZShpLCAxKTtcblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9jdWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmVtb3ZlIGFsbCBvZiB0aGUgY2FsbGJhY2tzIHRoYXQgaGFkIG9yaWdpbmFsbHkgYmVlbiBzY2hlZHVsZWRcbiAgICAgKiAgdmlhIHRoZSBhZGRDdWUgbWV0aG9kLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGNsZWFyQ3Vlc1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiY2xlYXJDdWVzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyQ3VlcygpIHtcbiAgICAgIHRoaXMuX2N1ZXMgPSBbXTsgXG4gICAgfSBcblxuICB9LCB7XG4gICAga2V5OiBcIl9vblRpbWVVcGRhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX29uVGltZVVwZGF0ZShwb3NpdGlvbikge1xuICAgICAgdmFyIHBsYXliYWNrVGltZSA9IHBvc2l0aW9uIC8gdGhpcy5idWZmZXIuc2FtcGxlUmF0ZTtcbiAgICAgIHZhciBjdWVMZW5ndGggPSB0aGlzLl9jdWVzLmxlbmd0aDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjdWVMZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgY3VlID0gdGhpcy5fY3Vlc1tpXTtcbiAgICAgICAgdmFyIGNhbGxiYWNrVGltZSA9IGN1ZS50aW1lO1xuICAgICAgICB2YXIgdmFsID0gY3VlLnZhbDtcbiAgICAgICAgdmFyIGxlZnRMaW1pdCA9IHRoaXMuX3ByZXZVcGRhdGVUaW1lIHx8IDA7XG4gICAgICAgIHZhciByaWdodExpbWl0ID0gcGxheWJhY2tUaW1lO1xuXG4gICAgICAgIGlmIChsZWZ0TGltaXQgPD0gY2FsbGJhY2tUaW1lICYmIGNhbGxiYWNrVGltZSA8PSByaWdodExpbWl0KSB7XG4gICAgICAgICAgY3VlLmNhbGxiYWNrKHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5fcHJldlVwZGF0ZVRpbWUgPSBwbGF5YmFja1RpbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNhdmUgYSBwNS5Tb3VuZEZpbGUgYXMgYSAud2F2IGZpbGUuIFRoZSBicm93c2VyIHdpbGwgcHJvbXB0IHRoZSB1c2VyXG4gICAgICogdG8gZG93bmxvYWQgdGhlIGZpbGUgdG8gdGhlaXIgZGV2aWNlLiBUbyB1cGxvYWQgYSBmaWxlIHRvIGEgc2VydmVyLCBzZWVcbiAgICAgKiA8YSBocmVmPVwiL3JlZmVyZW5jZS8jL3A1LlNvdW5kRmlsZS9nZXRCbG9iXCI+Z2V0QmxvYjwvYT5cbiAgICAgKlxuICAgICAqIEBtZXRob2Qgc2F2ZVxuICAgICAqIEBmb3IgcDUuU291bmRGaWxlXG4gICAgICogQHBhcmFtICB7U3RyaW5nfSBbZmlsZU5hbWVdICAgICAgbmFtZSBvZiB0aGUgcmVzdWx0aW5nIC53YXYgZmlsZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgbXlTb3VuZDtcbiAgICAgKiAgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAgICAgKiAgICBteVNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvZG9vcmJlbGwubXAzJyk7XG4gICAgICogIH1cbiAgICAgKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gICAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZChjYW52YXNQcmVzc2VkKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgdGV4dCgndGFwIHRvIGRvd25sb2FkJywgMTAsIDIwKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIGNhbnZhc1ByZXNzZWQoKSB7XG4gICAgICogICAgbXlTb3VuZC5zYXZlKCdteSBjb29sIGZpbGVuYW1lJyk7XG4gICAgICogIH1cbiAgICAgKiA8L2NvZGU+PC9kaXY+XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzYXZlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNhdmUoZmlsZU5hbWUpIHtcbiAgICAgIHA1LnByb3RvdHlwZS5zYXZlU291bmQodGhpcywgZmlsZU5hbWUsICd3YXYnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgdXNlZnVsIGZvciBzZW5kaW5nIGEgU291bmRGaWxlIHRvIGEgc2VydmVyLiBJdCByZXR1cm5zIHRoZVxuICAgICAqIC53YXYtZW5jb2RlZCBhdWRpbyBkYXRhIGFzIGEgXCI8YSB0YXJnZXQ9XCJfYmxhbmtcIiB0aXRsZT1cIkJsb2IgcmVmZXJlbmNlIGF0XG4gICAgICogTUROXCIgaHJlZj1cImh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9CbG9iXCI+QmxvYjwvYT5cIi5cbiAgICAgKiBBIEJsb2IgaXMgYSBmaWxlLWxpa2UgZGF0YSBvYmplY3QgdGhhdCBjYW4gYmUgdXBsb2FkZWQgdG8gYSBzZXJ2ZXJcbiAgICAgKiB3aXRoIGFuIDxhIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUvaHR0cERvXCI+aHR0cDwvYT4gcmVxdWVzdC4gV2UnbGxcbiAgICAgKiB1c2UgdGhlIGBodHRwRG9gIG9wdGlvbnMgb2JqZWN0IHRvIHNlbmQgYSBQT1NUIHJlcXVlc3Qgd2l0aCBzb21lXG4gICAgICogc3BlY2lmaWMgb3B0aW9uczogd2UgZW5jb2RlIHRoZSByZXF1ZXN0IGFzIGBtdWx0aXBhcnQvZm9ybS1kYXRhYCxcbiAgICAgKiBhbmQgYXR0YWNoIHRoZSBibG9iIGFzIG9uZSBvZiB0aGUgZm9ybSB2YWx1ZXMgdXNpbmcgYEZvcm1EYXRhYC5cbiAgICAgKlxuICAgICAqXG4gICAgICogQG1ldGhvZCBnZXRCbG9iXG4gICAgICogQGZvciBwNS5Tb3VuZEZpbGVcbiAgICAgKiBAcmV0dXJucyB7QmxvYn0gQSBmaWxlLWxpa2UgZGF0YSBvYmplY3RcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgICAqICAgIG15U291bmQgPSBsb2FkU291bmQoJ2Fzc2V0cy9kb29yYmVsbC5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgICAqICAgIG5vQ2FudmFzKCk7XG4gICAgICogICAgbGV0IHNvdW5kQmxvYiA9IG15U291bmQuZ2V0QmxvYigpO1xuICAgICAqXG4gICAgICogICAgLy8gTm93IHdlIGNhbiBzZW5kIHRoZSBibG9iIHRvIGEgc2VydmVyLi4uXG4gICAgICogICAgbGV0IHNlcnZlclVybCA9ICdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMnO1xuICAgICAqICAgIGxldCBodHRwUmVxdWVzdE9wdGlvbnMgPSB7XG4gICAgICogICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgKiAgICAgIGJvZHk6IG5ldyBGb3JtRGF0YSgpLmFwcGVuZCgnc291bmRCbG9iJywgc291bmRCbG9iKSxcbiAgICAgKiAgICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKHtcbiAgICAgKiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJ1xuICAgICAqICAgICAgfSlcbiAgICAgKiAgICB9O1xuICAgICAqICAgIGh0dHBEbyhzZXJ2ZXJVcmwsIGh0dHBSZXF1ZXN0T3B0aW9ucyk7XG4gICAgICpcbiAgICAgKiAgICAvLyBXZSBjYW4gYWxzbyBjcmVhdGUgYW4gYE9iamVjdFVSTGAgcG9pbnRpbmcgdG8gdGhlIEJsb2JcbiAgICAgKiAgICBsZXQgYmxvYlVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoc291bmRCbG9iKTtcbiAgICAgKlxuICAgICAqICAgIC8vIFRoZSBgPEF1ZGlvPmAgRWxlbWVudCBhY2NlcHRzIE9iamVjdCBVUkwnc1xuICAgICAqICAgIGNyZWF0ZUF1ZGlvKGJsb2JVcmwpLnNob3dDb250cm9scygpO1xuICAgICAqXG4gICAgICogICAgY3JlYXRlRGl2KCk7XG4gICAgICpcbiAgICAgKiAgICAvLyBUaGUgT2JqZWN0VVJMIGV4aXN0cyBhcyBsb25nIGFzIHRoaXMgdGFiIGlzIG9wZW5cbiAgICAgKiAgICBsZXQgaW5wdXQgPSBjcmVhdGVJbnB1dChibG9iVXJsKTtcbiAgICAgKiAgICBpbnB1dC5hdHRyaWJ1dGUoJ3JlYWRvbmx5JywgdHJ1ZSk7XG4gICAgICogICAgaW5wdXQubW91c2VDbGlja2VkKGZ1bmN0aW9uKCkgeyBpbnB1dC5lbHQuc2VsZWN0KCkgfSk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqIDwvY29kZT48L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldEJsb2JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QmxvYigpIHtcbiAgICAgIHZhciBkYXRhVmlldyA9IGNvbnZlcnRUb1dhdih0aGlzLmJ1ZmZlcik7XG4gICAgICByZXR1cm4gbmV3IEJsb2IoW2RhdGFWaWV3XSwge1xuICAgICAgICB0eXBlOiAnYXVkaW8vd2F2J1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNvdW5kRmlsZTtcbn0oKTtcbi8qKlxuICogIGxvYWRTb3VuZCgpIHJldHVybnMgYSBuZXcgcDUuU291bmRGaWxlIGZyb20gYSBzcGVjaWZpZWRcbiAqICBwYXRoLiBJZiBjYWxsZWQgZHVyaW5nIHByZWxvYWQoKSwgdGhlIHA1LlNvdW5kRmlsZSB3aWxsIGJlIHJlYWR5XG4gKiAgdG8gcGxheSBpbiB0aW1lIGZvciBzZXR1cCgpIGFuZCBkcmF3KCkuIElmIGNhbGxlZCBvdXRzaWRlIG9mXG4gKiAgcHJlbG9hZCwgdGhlIHA1LlNvdW5kRmlsZSB3aWxsIG5vdCBiZSByZWFkeSBpbW1lZGlhdGVseSwgc29cbiAqICBsb2FkU291bmQgYWNjZXB0cyBhIGNhbGxiYWNrIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyLiBVc2luZyBhXG4gKiAgPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9wcm9jZXNzaW5nL3A1LmpzL3dpa2kvTG9jYWwtc2VydmVyXCI+XG4gKiAgbG9jYWwgc2VydmVyPC9hPiBpcyByZWNvbW1lbmRlZCB3aGVuIGxvYWRpbmcgZXh0ZXJuYWwgZmlsZXMuXG4gKlxuICogIEBtZXRob2QgbG9hZFNvdW5kXG4gKiAgQGZvciBwNVxuICogIEBwYXJhbSAge1N0cmluZ3xBcnJheX0gICBwYXRoICAgICBQYXRoIHRvIHRoZSBzb3VuZCBmaWxlLCBvciBhbiBhcnJheSB3aXRoXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhzIHRvIHNvdW5kZmlsZXMgaW4gbXVsdGlwbGUgZm9ybWF0c1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpLmUuIFsnc291bmQub2dnJywgJ3NvdW5kLm1wMyddLlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbHRlcm5hdGVseSwgYWNjZXB0cyBhbiBvYmplY3Q6IGVpdGhlclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tIHRoZSBIVE1MNSBGaWxlIEFQSSwgb3IgYSBwNS5GaWxlLlxuICogIEBwYXJhbSB7RnVuY3Rpb259IFtzdWNjZXNzQ2FsbGJhY2tdICAgTmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgb25jZSBmaWxlIGxvYWRzXG4gKiAgQHBhcmFtIHtGdW5jdGlvbn0gW2Vycm9yQ2FsbGJhY2tdICAgTmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgaWYgdGhlcmUgaXNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBlcnJvciBsb2FkaW5nIHRoZSBmaWxlLlxuICogIEBwYXJhbSB7RnVuY3Rpb259IFt3aGlsZUxvYWRpbmddIE5hbWUgb2YgYSBmdW5jdGlvbiB0byBjYWxsIHdoaWxlIGZpbGUgaXMgbG9hZGluZy5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyBmdW5jdGlvbiB3aWxsIHJlY2VpdmUgdGhlIHBlcmNlbnRhZ2UgbG9hZGVkXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvIGZhciwgZnJvbSAwLjAgdG8gMS4wLlxuICogIEByZXR1cm4ge1NvdW5kRmlsZX0gICAgICAgICAgICBSZXR1cm5zIGEgcDUuU291bmRGaWxlXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBteVNvdW5kO1xuICogIGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gKiAgICBzb3VuZEZvcm1hdHMoJ21wMycsICdvZ2cnKTtcbiAqICAgIG15U291bmQgPSBsb2FkU291bmQoJ2Fzc2V0cy9kb29yYmVsbCcpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQoY2FudmFzUHJlc3NlZCk7XG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0KCd0YXAgaGVyZSB0byBwbGF5JywgMTAsIDIwKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIGNhbnZhc1ByZXNzZWQoKSB7XG4gKiAgICAvLyBwbGF5aW5nIGEgc291bmQgZmlsZSBvbiBhIHVzZXIgZ2VzdHVyZVxuICogICAgLy8gaXMgZXF1aXZhbGVudCB0byBgdXNlclN0YXJ0QXVkaW8oKWBcbiAqICAgIG15U291bmQucGxheSgpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG5mdW5jdGlvbiBsb2FkU291bmQocGF0aCwgY2FsbGJhY2ssIG9uZXJyb3IsIHdoaWxlTG9hZGluZykge1xuICBpZiAod2luZG93LmxvY2F0aW9uLm9yaWdpbi5pbmRleE9mKCdmaWxlOi8vJykgPiAtMSAmJiB3aW5kb3cuY29yZG92YSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aW5kb3cuYWxlcnQoJ1RoaXMgc2tldGNoIG1heSByZXF1aXJlIGEgc2VydmVyIHRvIGxvYWQgZXh0ZXJuYWwgZmlsZXMuIFBsZWFzZSBzZWUgaHR0cDovL2JpdC5seS8xcWNJbndTJyk7XG4gIH1cblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBzID0gbmV3IHNvdW5kZmlsZV9Tb3VuZEZpbGUocGF0aCwgZnVuY3Rpb24gKCkge1xuICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNhbGxiYWNrLmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBzZWxmLl9kZWNyZW1lbnRQcmVsb2FkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzZWxmLl9kZWNyZW1lbnRQcmVsb2FkKCk7XG4gICAgfVxuICB9LCBvbmVycm9yLCB3aGlsZUxvYWRpbmcpO1xuICByZXR1cm4gcztcbn1cblxuIHZhciBzb3VuZGZpbGUgPSAoc291bmRmaWxlX1NvdW5kRmlsZSk7XG5cbmZ1bmN0aW9uIGFtcGxpdHVkZV9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGFtcGxpdHVkZV9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gYW1wbGl0dWRlX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgYW1wbGl0dWRlX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBhbXBsaXR1ZGVfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuXG5cblxuLyoqXG4gKiAgQW1wbGl0dWRlIG1lYXN1cmVzIHZvbHVtZSBiZXR3ZWVuIDAuMCBhbmQgMS4wLlxuICogIExpc3RlbnMgdG8gYWxsIHA1c291bmQgYnkgZGVmYXVsdCwgb3IgdXNlIHNldElucHV0KClcbiAqICB0byBsaXN0ZW4gdG8gYSBzcGVjaWZpYyBzb3VuZCBzb3VyY2UuIEFjY2VwdHMgYW4gb3B0aW9uYWxcbiAqICBzbW9vdGhpbmcgdmFsdWUsIHdoaWNoIGRlZmF1bHRzIHRvIDAuXG4gKlxuICogIEBjbGFzcyBwNS5BbXBsaXR1ZGVcbiAqICBAY29uc3RydWN0b3JcbiAqICBAcGFyYW0ge051bWJlcn0gW3Ntb290aGluZ10gYmV0d2VlbiAwLjAgYW5kIC45OTkgdG8gc21vb3RoXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW1wbGl0dWRlIHJlYWRpbmdzIChkZWZhdWx0cyB0byAwKVxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgc291bmQsIGFtcGxpdHVkZTtcbiAqXG4gKiAgZnVuY3Rpb24gcHJlbG9hZCgpe1xuICogICAgc291bmQgPSBsb2FkU291bmQoJ2Fzc2V0cy9iZWF0Lm1wMycpO1xuICogIH1cbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLDEwMCk7XG4gKiAgICBjbnYubW91c2VDbGlja2VkKHRvZ2dsZVBsYXkpO1xuICogICAgYW1wbGl0dWRlID0gbmV3IHA1LkFtcGxpdHVkZSgpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHQoJ3RhcCB0byBwbGF5JywgMjAsIDIwKTtcbiAqXG4gKiAgICBsZXQgbGV2ZWwgPSBhbXBsaXR1ZGUuZ2V0TGV2ZWwoKTtcbiAqICAgIGxldCBzaXplID0gbWFwKGxldmVsLCAwLCAxLCAwLCAyMDApO1xuICogICAgZWxsaXBzZSh3aWR0aC8yLCBoZWlnaHQvMiwgc2l6ZSwgc2l6ZSk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiB0b2dnbGVQbGF5KCkge1xuICogICAgaWYgKHNvdW5kLmlzUGxheWluZygpICl7XG4gKiAgICAgIHNvdW5kLnBhdXNlKCk7XG4gKiAgICB9IGVsc2Uge1xuICogICAgICBzb3VuZC5sb29wKCk7XG4gKlx0XHRhbXBsaXR1ZGUgPSBuZXcgcDUuQW1wbGl0dWRlKCk7XG4gKlx0XHRhbXBsaXR1ZGUuc2V0SW5wdXQoc291bmQpO1xuICogICAgfVxuICogIH1cbiAqXG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cbnZhciBhbXBsaXR1ZGVfQW1wbGl0dWRlID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQW1wbGl0dWRlKHNtb290aGluZykge1xuICAgIGFtcGxpdHVkZV9jbGFzc0NhbGxDaGVjayh0aGlzLCBBbXBsaXR1ZGUpO1xuXG4gICAgdGhpcy5idWZmZXJTaXplID0gc2FmZUJ1ZmZlclNpemUoMjA0OCk7IFxuXG4gICAgdGhpcy5hdWRpb2NvbnRleHQgPSBtYWluLmF1ZGlvY29udGV4dDtcbiAgICB0aGlzLl93b3JrbGV0Tm9kZSA9IG5ldyBBdWRpb1dvcmtsZXROb2RlKHRoaXMuYXVkaW9jb250ZXh0LCBwcm9jZXNzb3JOYW1lc19kZWZhdWx0LmEuYW1wbGl0dWRlUHJvY2Vzc29yLCB7XG4gICAgICBvdXRwdXRDaGFubmVsQ291bnQ6IFsxXSxcbiAgICAgIHBhcmFtZXRlckRhdGE6IHtcbiAgICAgICAgc21vb3RoaW5nOiBzbW9vdGhpbmcgfHwgMFxuICAgICAgfSxcbiAgICAgIHByb2Nlc3Nvck9wdGlvbnM6IHtcbiAgICAgICAgbm9ybWFsaXplOiBmYWxzZSxcbiAgICAgICAgc21vb3RoaW5nOiBzbW9vdGhpbmcgfHwgMCxcbiAgICAgICAgbnVtSW5wdXRDaGFubmVsczogMixcbiAgICAgICAgYnVmZmVyU2l6ZTogdGhpcy5idWZmZXJTaXplXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLl93b3JrbGV0Tm9kZS5wb3J0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKGV2ZW50LmRhdGEubmFtZSA9PT0gJ2FtcGxpdHVkZScpIHtcbiAgICAgICAgdGhpcy52b2x1bWUgPSBldmVudC5kYXRhLnZvbHVtZTtcbiAgICAgICAgdGhpcy52b2xOb3JtID0gZXZlbnQuZGF0YS52b2xOb3JtO1xuICAgICAgICB0aGlzLnN0ZXJlb1ZvbCA9IGV2ZW50LmRhdGEuc3RlcmVvVm9sO1xuICAgICAgICB0aGlzLnN0ZXJlb1ZvbE5vcm0gPSBldmVudC5kYXRhLnN0ZXJlb1ZvbE5vcm07XG4gICAgICB9XG4gICAgfS5iaW5kKHRoaXMpOyBcblxuXG4gICAgdGhpcy5pbnB1dCA9IHRoaXMuX3dvcmtsZXROb2RlO1xuICAgIHRoaXMub3V0cHV0ID0gdGhpcy5hdWRpb2NvbnRleHQuY3JlYXRlR2FpbigpOyBcblxuICAgIHRoaXMudm9sdW1lID0gMDtcbiAgICB0aGlzLnZvbE5vcm0gPSAwO1xuICAgIHRoaXMuc3RlcmVvVm9sID0gWzAsIDBdO1xuICAgIHRoaXMuc3RlcmVvVm9sTm9ybSA9IFswLCAwXTtcbiAgICB0aGlzLm5vcm1hbGl6ZSA9IGZhbHNlO1xuXG4gICAgdGhpcy5fd29ya2xldE5vZGUuY29ubmVjdCh0aGlzLm91dHB1dCk7XG5cbiAgICB0aGlzLm91dHB1dC5nYWluLnZhbHVlID0gMDsgXG5cbiAgICB0aGlzLm91dHB1dC5jb25uZWN0KHRoaXMuYXVkaW9jb250ZXh0LmRlc3RpbmF0aW9uKTsgXG5cbiAgICBtYWluLm1ldGVyLmNvbm5lY3QodGhpcy5fd29ya2xldE5vZGUpOyBcblxuICAgIG1haW4uc291bmRBcnJheS5wdXNoKHRoaXMpO1xuICB9XG4gIC8qKlxuICAgKiAgQ29ubmVjdHMgdG8gdGhlIHA1c291bmQgaW5zdGFuY2UgKG1haW4gb3V0cHV0KSBieSBkZWZhdWx0LlxuICAgKiAgT3B0aW9uYWxseSwgeW91IGNhbiBwYXNzIGluIGEgc3BlY2lmaWMgc291cmNlIChpLmUuIGEgc291bmRmaWxlKS5cbiAgICpcbiAgICogIEBtZXRob2Qgc2V0SW5wdXRcbiAgICogIEBmb3IgcDUuQW1wbGl0dWRlXG4gICAqICBAcGFyYW0ge3NvdW5kT2JqZWN0fHVuZGVmaW5lZH0gW3NuZF0gc2V0IHRoZSBzb3VuZCBzb3VyY2VcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAob3B0aW9uYWwsIGRlZmF1bHRzIHRvXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFpbiBvdXRwdXQpXG4gICAqICBAcGFyYW0ge051bWJlcnx1bmRlZmluZWR9IFtzbW9vdGhpbmddIGEgcmFuZ2UgYmV0d2VlbiAwLjAgYW5kIDEuMFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBzbW9vdGggYW1wbGl0dWRlIHJlYWRpbmdzXG4gICAqICBAZXhhbXBsZVxuICAgKiAgPGRpdj48Y29kZT5cbiAgICogIGZ1bmN0aW9uIHByZWxvYWQoKXtcbiAgICogICAgc291bmQxID0gbG9hZFNvdW5kKCdhc3NldHMvYmVhdC5tcDMnKTtcbiAgICogICAgc291bmQyID0gbG9hZFNvdW5kKCdhc3NldHMvZHJ1bS5tcDMnKTtcbiAgICogIH1cbiAgICogIGZ1bmN0aW9uIHNldHVwKCl7XG4gICAqICAgIGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAqICAgIGNudi5tb3VzZUNsaWNrZWQodG9nZ2xlU291bmQpO1xuICAgKlxuICAgKiAgICBhbXBsaXR1ZGUgPSBuZXcgcDUuQW1wbGl0dWRlKCk7XG4gICAqICAgIGFtcGxpdHVkZS5zZXRJbnB1dChzb3VuZDIpO1xuICAgKiAgfVxuICAgKlxuICAgKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAgICogICAgYmFja2dyb3VuZCgyMjApO1xuICAgKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDIwLCAyMCk7XG4gICAqXG4gICAqICAgIGxldCBsZXZlbCA9IGFtcGxpdHVkZS5nZXRMZXZlbCgpO1xuICAgKiAgICBsZXQgc2l6ZSA9IG1hcChsZXZlbCwgMCwgMSwgMCwgMjAwKTtcbiAgICogICAgZWxsaXBzZSh3aWR0aC8yLCBoZWlnaHQvMiwgc2l6ZSwgc2l6ZSk7XG4gICAqICB9XG4gICAqXG4gICAqICBmdW5jdGlvbiB0b2dnbGVTb3VuZCgpe1xuICAgKiAgICBpZiAoc291bmQxLmlzUGxheWluZygpICYmIHNvdW5kMi5pc1BsYXlpbmcoKSkge1xuICAgKiAgICAgIHNvdW5kMS5zdG9wKCk7XG4gICAqICAgICAgc291bmQyLnN0b3AoKTtcbiAgICogICAgfSBlbHNlIHtcbiAgICogICAgICBzb3VuZDEucGxheSgpO1xuICAgKiAgICAgIHNvdW5kMi5wbGF5KCk7XG4gICAqICAgIH1cbiAgICogIH1cbiAgICogIDwvY29kZT48L2Rpdj5cbiAgICovXG5cblxuICBhbXBsaXR1ZGVfY3JlYXRlQ2xhc3MoQW1wbGl0dWRlLCBbe1xuICAgIGtleTogXCJzZXRJbnB1dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRJbnB1dChzb3VyY2UsIHNtb290aGluZykge1xuICAgICAgbWFpbi5tZXRlci5kaXNjb25uZWN0KCk7XG5cbiAgICAgIGlmIChzbW9vdGhpbmcpIHtcbiAgICAgICAgdGhpcy5fd29ya2xldE5vZGUucGFyYW1ldGVycy5nZXQoJ3Ntb290aGluZycpLnZhbHVlID0gc21vb3RoaW5nO1xuICAgICAgfSBcblxuXG4gICAgICBpZiAoc291cmNlID09IG51bGwpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0FtcGxpdHVkZSBpbnB1dCBzb3VyY2UgaXMgbm90IHJlYWR5ISBDb25uZWN0aW5nIHRvIG1haW4gb3V0cHV0IGluc3RlYWQnKTtcbiAgICAgICAgbWFpbi5tZXRlci5jb25uZWN0KHRoaXMuX3dvcmtsZXROb2RlKTtcbiAgICAgIH0gXG4gICAgICBlbHNlIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICBzb3VyY2UuY29ubmVjdCh0aGlzLl93b3JrbGV0Tm9kZSk7XG5cbiAgICAgICAgICB0aGlzLl93b3JrbGV0Tm9kZS5kaXNjb25uZWN0KCk7XG5cbiAgICAgICAgICB0aGlzLl93b3JrbGV0Tm9kZS5jb25uZWN0KHRoaXMub3V0cHV0KTtcbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtYWluLm1ldGVyLmNvbm5lY3QodGhpcy5fd29ya2xldE5vZGUpO1xuICAgICAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb25uZWN0KHVuaXQpIHtcbiAgICAgIGlmICh1bml0KSB7XG4gICAgICAgIGlmICh1bml0Lmhhc093blByb3BlcnR5KCdpbnB1dCcpKSB7XG4gICAgICAgICAgdGhpcy5vdXRwdXQuY29ubmVjdCh1bml0LmlucHV0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHVuaXQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHRoaXMucGFubmVyLmNvbm5lY3QobWFpbi5pbnB1dCkpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXNjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgICBpZiAodGhpcy5vdXRwdXQpIHtcbiAgICAgICAgdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmV0dXJucyBhIHNpbmdsZSBBbXBsaXR1ZGUgcmVhZGluZyBhdCB0aGUgbW9tZW50IGl0IGlzIGNhbGxlZC5cbiAgICAgKiAgRm9yIGNvbnRpbnVvdXMgcmVhZGluZ3MsIHJ1biBpbiB0aGUgZHJhdyBsb29wLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgZ2V0TGV2ZWxcbiAgICAgKiAgQGZvciBwNS5BbXBsaXR1ZGVcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtjaGFubmVsXSBPcHRpb25hbGx5IHJldHVybiBvbmx5IGNoYW5uZWwgMCAobGVmdCkgb3IgMSAocmlnaHQpXG4gICAgICogIEByZXR1cm4ge051bWJlcn0gICAgICAgQW1wbGl0dWRlIGFzIGEgbnVtYmVyIGJldHdlZW4gMC4wIGFuZCAxLjBcbiAgICAgKiAgQGV4YW1wbGVcbiAgICAgKiAgPGRpdj48Y29kZT5cbiAgICAgKiAgZnVuY3Rpb24gcHJlbG9hZCgpe1xuICAgICAqICAgIHNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvYmVhdC5tcDMnKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgICAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICAgICAqICAgIGNudi5tb3VzZUNsaWNrZWQodG9nZ2xlU291bmQpO1xuICAgICAqICAgIGFtcGxpdHVkZSA9IG5ldyBwNS5BbXBsaXR1ZGUoKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIGRyYXcoKSB7XG4gICAgICogICAgYmFja2dyb3VuZCgyMjAsIDE1MCk7XG4gICAgICogICAgdGV4dEFsaWduKENFTlRFUik7XG4gICAgICogICAgdGV4dCgndGFwIHRvIHBsYXknLCB3aWR0aC8yLCAyMCk7XG4gICAgICpcbiAgICAgKiAgICBsZXQgbGV2ZWwgPSBhbXBsaXR1ZGUuZ2V0TGV2ZWwoKTtcbiAgICAgKiAgICBsZXQgc2l6ZSA9IG1hcChsZXZlbCwgMCwgMSwgMCwgMjAwKTtcbiAgICAgKiAgICBlbGxpcHNlKHdpZHRoLzIsIGhlaWdodC8yLCBzaXplLCBzaXplKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHRvZ2dsZVNvdW5kKCl7XG4gICAgICogICAgaWYgKHNvdW5kLmlzUGxheWluZygpKSB7XG4gICAgICogICAgICBzb3VuZC5zdG9wKCk7XG4gICAgICogICAgfSBlbHNlIHtcbiAgICAgKiAgICAgIHNvdW5kLnBsYXkoKTtcbiAgICAgKiAgICB9XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0TGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TGV2ZWwoY2hhbm5lbCkge1xuICAgICAgaWYgKHR5cGVvZiBjaGFubmVsICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodGhpcy5ub3JtYWxpemUpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5zdGVyZW9Wb2xOb3JtW2NoYW5uZWxdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLnN0ZXJlb1ZvbFtjaGFubmVsXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLm5vcm1hbGl6ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy52b2xOb3JtO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudm9sdW1lO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHJlc3VsdHMgb2YgQW1wbGl0dWRlLnByb2Nlc3MoKSB3aWxsIGJlXG4gICAgICogTm9ybWFsaXplZC4gVG8gbm9ybWFsaXplLCBBbXBsaXR1ZGUgZmluZHMgdGhlIGRpZmZlcmVuY2UgdGhlXG4gICAgICogbG91ZGVzdCByZWFkaW5nIGl0IGhhcyBwcm9jZXNzZWQgYW5kIHRoZSBtYXhpbXVtIGFtcGxpdHVkZSBvZlxuICAgICAqIDEuMC4gQW1wbGl0dWRlIGFkZHMgdGhpcyBkaWZmZXJlbmNlIHRvIGFsbCB2YWx1ZXMgdG8gcHJvZHVjZVxuICAgICAqIHJlc3VsdHMgdGhhdCB3aWxsIHJlbGlhYmx5IG1hcCBiZXR3ZWVuIDAuMCBhbmQgMS4wLiBIb3dldmVyLFxuICAgICAqIGlmIGEgbG91ZGVyIG1vbWVudCBvY2N1cnMsIHRoZSBhbW91bnQgdGhhdCBOb3JtYWxpemUgYWRkcyB0b1xuICAgICAqIGFsbCB0aGUgdmFsdWVzIHdpbGwgY2hhbmdlLiBBY2NlcHRzIGFuIG9wdGlvbmFsIGJvb2xlYW4gcGFyYW1ldGVyXG4gICAgICogKHRydWUgb3IgZmFsc2UpLiBOb3JtYWxpemluZyBpcyBvZmYgYnkgZGVmYXVsdC5cbiAgICAgKlxuICAgICAqIEBtZXRob2QgdG9nZ2xlTm9ybWFsaXplXG4gICAgICogQGZvciBwNS5BbXBsaXR1ZGVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtib29sZWFuXSBzZXQgbm9ybWFsaXplIHRvIHRydWUgKDEpIG9yIGZhbHNlICgwKVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwidG9nZ2xlTm9ybWFsaXplXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvZ2dsZU5vcm1hbGl6ZShib29sKSB7XG4gICAgICBpZiAodHlwZW9mIGJvb2wgPT09ICdib29sZWFuJykge1xuICAgICAgICB0aGlzLm5vcm1hbGl6ZSA9IGJvb2w7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm5vcm1hbGl6ZSA9ICF0aGlzLm5vcm1hbGl6ZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fd29ya2xldE5vZGUucG9ydC5wb3N0TWVzc2FnZSh7XG4gICAgICAgIG5hbWU6ICd0b2dnbGVOb3JtYWxpemUnLFxuICAgICAgICBub3JtYWxpemU6IHRoaXMubm9ybWFsaXplXG4gICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNtb290aCBBbXBsaXR1ZGUgYW5hbHlzaXMgYnkgYXZlcmFnaW5nIHdpdGggdGhlIGxhc3QgYW5hbHlzaXNcbiAgICAgKiAgZnJhbWUuIE9mZiBieSBkZWZhdWx0LlxuICAgICAqXG4gICAgICogIEBtZXRob2Qgc21vb3RoXG4gICAgICogIEBmb3IgcDUuQW1wbGl0dWRlXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBzZXQgc21vb3RoaW5nIGZyb20gMC4wIDw9IDFcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInNtb290aFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzbW9vdGgocykge1xuICAgICAgaWYgKHMgPj0gMCAmJiBzIDwgMSkge1xuICAgICAgICB0aGlzLl93b3JrbGV0Tm9kZS5wb3J0LnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICBuYW1lOiAnc21vb3RoaW5nJyxcbiAgICAgICAgICBzbW9vdGhpbmc6IHNcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZygnRXJyb3I6IHNtb290aGluZyBtdXN0IGJlIGJldHdlZW4gMCBhbmQgMScpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXNwb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICB2YXIgaW5kZXggPSBtYWluLnNvdW5kQXJyYXkuaW5kZXhPZih0aGlzKTtcbiAgICAgIG1haW4uc291bmRBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICBpZiAodGhpcy5pbnB1dCkge1xuICAgICAgICB0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuaW5wdXQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm91dHB1dCkge1xuICAgICAgICB0aGlzLm91dHB1dC5kaXNjb25uZWN0KCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm91dHB1dDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fd29ya2xldE5vZGUuZGlzY29ubmVjdCgpO1xuXG4gICAgICBkZWxldGUgdGhpcy5fd29ya2xldE5vZGU7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEFtcGxpdHVkZTtcbn0oKTtcblxuIHZhciBhbXBsaXR1ZGUgPSAoYW1wbGl0dWRlX0FtcGxpdHVkZSk7XG5mdW5jdGlvbiBmZnRfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBmZnRfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIGZmdF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGZmdF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZmZ0X2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cblxuLyoqXG4gKiAgPHA+RkZUIChGYXN0IEZvdXJpZXIgVHJhbnNmb3JtKSBpcyBhbiBhbmFseXNpcyBhbGdvcml0aG0gdGhhdFxuICogIGlzb2xhdGVzIGluZGl2aWR1YWxcbiAqICA8YSBocmVmPVwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQXVkaW9fZnJlcXVlbmN5XCI+XG4gKiAgYXVkaW8gZnJlcXVlbmNpZXM8L2E+IHdpdGhpbiBhIHdhdmVmb3JtLjwvcD5cbiAqXG4gKiAgPHA+T25jZSBpbnN0YW50aWF0ZWQsIGEgcDUuRkZUIG9iamVjdCBjYW4gcmV0dXJuIGFuIGFycmF5IGJhc2VkIG9uXG4gKiAgdHdvIHR5cGVzIG9mIGFuYWx5c2VzOiA8YnI+IOKAoiA8Y29kZT5GRlQud2F2ZWZvcm0oKTwvY29kZT4gY29tcHV0ZXNcbiAqICBhbXBsaXR1ZGUgdmFsdWVzIGFsb25nIHRoZSB0aW1lIGRvbWFpbi4gVGhlIGFycmF5IGluZGljZXMgY29ycmVzcG9uZFxuICogIHRvIHNhbXBsZXMgYWNyb3NzIGEgYnJpZWYgbW9tZW50IGluIHRpbWUuIEVhY2ggdmFsdWUgcmVwcmVzZW50c1xuICogIGFtcGxpdHVkZSBvZiB0aGUgd2F2ZWZvcm0gYXQgdGhhdCBzYW1wbGUgb2YgdGltZS48YnI+XG4gKiAg4oCiIDxjb2RlPkZGVC5hbmFseXplKCkgPC9jb2RlPiBjb21wdXRlcyBhbXBsaXR1ZGUgdmFsdWVzIGFsb25nIHRoZVxuICogIGZyZXF1ZW5jeSBkb21haW4uIFRoZSBhcnJheSBpbmRpY2VzIGNvcnJlc3BvbmQgdG8gZnJlcXVlbmNpZXMgKGkuZS5cbiAqICBwaXRjaGVzKSwgZnJvbSB0aGUgbG93ZXN0IHRvIHRoZSBoaWdoZXN0IHRoYXQgaHVtYW5zIGNhbiBoZWFyLiBFYWNoXG4gKiAgdmFsdWUgcmVwcmVzZW50cyBhbXBsaXR1ZGUgYXQgdGhhdCBzbGljZSBvZiB0aGUgZnJlcXVlbmN5IHNwZWN0cnVtLlxuICogIFVzZSB3aXRoIDxjb2RlPmdldEVuZXJneSgpPC9jb2RlPiB0byBtZWFzdXJlIGFtcGxpdHVkZSBhdCBzcGVjaWZpY1xuICogIGZyZXF1ZW5jaWVzLCBvciB3aXRoaW4gYSByYW5nZSBvZiBmcmVxdWVuY2llcy4gPC9wPlxuICpcbiAqICA8cD5GRlQgYW5hbHl6ZXMgYSB2ZXJ5IHNob3J0IHNuYXBzaG90IG9mIHNvdW5kIGNhbGxlZCBhIHNhbXBsZVxuICogIGJ1ZmZlci4gSXQgcmV0dXJucyBhbiBhcnJheSBvZiBhbXBsaXR1ZGUgbWVhc3VyZW1lbnRzLCByZWZlcnJlZFxuICogIHRvIGFzIDxjb2RlPmJpbnM8L2NvZGU+LiBUaGUgYXJyYXkgaXMgMTAyNCBiaW5zIGxvbmcgYnkgZGVmYXVsdC5cbiAqICBZb3UgY2FuIGNoYW5nZSB0aGUgYmluIGFycmF5IGxlbmd0aCwgYnV0IGl0IG11c3QgYmUgYSBwb3dlciBvZiAyXG4gKiAgYmV0d2VlbiAxNiBhbmQgMTAyNCBpbiBvcmRlciBmb3IgdGhlIEZGVCBhbGdvcml0aG0gdG8gZnVuY3Rpb25cbiAqICBjb3JyZWN0bHkuIFRoZSBhY3R1YWwgc2l6ZSBvZiB0aGUgRkZUIGJ1ZmZlciBpcyB0d2ljZSB0aGVcbiAqICBudW1iZXIgb2YgYmlucywgc28gZ2l2ZW4gYSBzdGFuZGFyZCBzYW1wbGUgcmF0ZSwgdGhlIGJ1ZmZlciBpc1xuICogIDIwNDgvNDQxMDAgc2Vjb25kcyBsb25nLjwvcD5cbiAqXG4gKlxuICogIEBjbGFzcyBwNS5GRlRcbiAqICBAY29uc3RydWN0b3JcbiAqICBAcGFyYW0ge051bWJlcn0gW3Ntb290aGluZ10gICBTbW9vdGggcmVzdWx0cyBvZiBGcmVxIFNwZWN0cnVtLlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuMCA8IHNtb290aGluZyA8IDEuMC5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0cyB0byAwLjguXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFtiaW5zXSAgICBMZW5ndGggb2YgcmVzdWx0aW5nIGFycmF5LlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgTXVzdCBiZSBhIHBvd2VyIG9mIHR3byBiZXR3ZWVuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNiBhbmQgMTAyNC4gRGVmYXVsdHMgdG8gMTAyNC5cbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgZnVuY3Rpb24gcHJlbG9hZCgpe1xuICogICAgc291bmQgPSBsb2FkU291bmQoJ2Fzc2V0cy9EYW1zY3JheV9EYW5jaW5nVGlnZXIubXAzJyk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpe1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsMTAwKTtcbiAqICAgIGNudi5tb3VzZUNsaWNrZWQodG9nZ2xlUGxheSk7XG4gKiAgICBmZnQgPSBuZXcgcDUuRkZUKCk7XG4gKiAgICBzb3VuZC5hbXAoMC4yKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIGRyYXcoKXtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqXG4gKiAgICBsZXQgc3BlY3RydW0gPSBmZnQuYW5hbHl6ZSgpO1xuICogICAgbm9TdHJva2UoKTtcbiAqICAgIGZpbGwoMjU1LCAwLCAyNTUpO1xuICogICAgZm9yIChsZXQgaSA9IDA7IGk8IHNwZWN0cnVtLmxlbmd0aDsgaSsrKXtcbiAqICAgICAgbGV0IHggPSBtYXAoaSwgMCwgc3BlY3RydW0ubGVuZ3RoLCAwLCB3aWR0aCk7XG4gKiAgICAgIGxldCBoID0gLWhlaWdodCArIG1hcChzcGVjdHJ1bVtpXSwgMCwgMjU1LCBoZWlnaHQsIDApO1xuICogICAgICByZWN0KHgsIGhlaWdodCwgd2lkdGggLyBzcGVjdHJ1bS5sZW5ndGgsIGggKVxuICogICAgfVxuICpcbiAqICAgIGxldCB3YXZlZm9ybSA9IGZmdC53YXZlZm9ybSgpO1xuICogICAgbm9GaWxsKCk7XG4gKiAgICBiZWdpblNoYXBlKCk7XG4gKiAgICBzdHJva2UoMjApO1xuICogICAgZm9yIChsZXQgaSA9IDA7IGkgPCB3YXZlZm9ybS5sZW5ndGg7IGkrKyl7XG4gKiAgICAgIGxldCB4ID0gbWFwKGksIDAsIHdhdmVmb3JtLmxlbmd0aCwgMCwgd2lkdGgpO1xuICogICAgICBsZXQgeSA9IG1hcCggd2F2ZWZvcm1baV0sIC0xLCAxLCAwLCBoZWlnaHQpO1xuICogICAgICB2ZXJ0ZXgoeCx5KTtcbiAqICAgIH1cbiAqICAgIGVuZFNoYXBlKCk7XG4gKlxuICogICAgdGV4dCgndGFwIHRvIHBsYXknLCAyMCwgMjApO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gdG9nZ2xlUGxheSgpIHtcbiAqICAgIGlmIChzb3VuZC5pc1BsYXlpbmcoKSkge1xuICogICAgICBzb3VuZC5wYXVzZSgpO1xuICogICAgfSBlbHNlIHtcbiAqICAgICAgc291bmQubG9vcCgpO1xuICogICAgfVxuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxudmFyIGZmdF9GRlQgPVxuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGRlQoc21vb3RoaW5nLCBiaW5zKSB7XG4gICAgZmZ0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIEZGVCk7XG5cbiAgICB0aGlzLmlucHV0ID0gdGhpcy5hbmFseXNlciA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZUFuYWx5c2VyKCk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgYmluczoge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5hbmFseXNlci5mZnRTaXplIC8gMjtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiBzZXQoYikge1xuICAgICAgICAgIHRoaXMuYW5hbHlzZXIuZmZ0U2l6ZSA9IGIgKiAyO1xuICAgICAgICB9LFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBzbW9vdGhpbmc6IHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuYW5hbHlzZXIuc21vb3RoaW5nVGltZUNvbnN0YW50O1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIHNldChzKSB7XG4gICAgICAgICAgdGhpcy5hbmFseXNlci5zbW9vdGhpbmdUaW1lQ29uc3RhbnQgPSBzO1xuICAgICAgICB9LFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTsgXG5cbiAgICB0aGlzLnNtb290aChzbW9vdGhpbmcpO1xuICAgIHRoaXMuYmlucyA9IGJpbnMgfHwgMTAyNDsgXG5cbiAgICBtYWluLmZmdE1ldGVyLmNvbm5lY3QodGhpcy5hbmFseXNlcik7XG4gICAgdGhpcy5mcmVxRG9tYWluID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5hbmFseXNlci5mcmVxdWVuY3lCaW5Db3VudCk7XG4gICAgdGhpcy50aW1lRG9tYWluID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5hbmFseXNlci5mcmVxdWVuY3lCaW5Db3VudCk7IFxuXG4gICAgdGhpcy5iYXNzID0gWzIwLCAxNDBdO1xuICAgIHRoaXMubG93TWlkID0gWzE0MCwgNDAwXTtcbiAgICB0aGlzLm1pZCA9IFs0MDAsIDI2MDBdO1xuICAgIHRoaXMuaGlnaE1pZCA9IFsyNjAwLCA1MjAwXTtcbiAgICB0aGlzLnRyZWJsZSA9IFs1MjAwLCAxNDAwMF07IFxuXG4gICAgbWFpbi5zb3VuZEFycmF5LnB1c2godGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqICBTZXQgdGhlIGlucHV0IHNvdXJjZSBmb3IgdGhlIEZGVCBhbmFseXNpcy4gSWYgbm8gc291cmNlIGlzXG4gICAqICBwcm92aWRlZCwgRkZUIHdpbGwgYW5hbHl6ZSBhbGwgc291bmQgaW4gdGhlIHNrZXRjaC5cbiAgICpcbiAgICogIEBtZXRob2QgIHNldElucHV0XG4gICAqICBAZm9yIHA1LkZGVFxuICAgKiAgQHBhcmFtIHtPYmplY3R9IFtzb3VyY2VdIHA1LnNvdW5kIG9iamVjdCAob3Igd2ViIGF1ZGlvIEFQSSBzb3VyY2Ugbm9kZSlcbiAgICovXG5cblxuICBmZnRfY3JlYXRlQ2xhc3MoRkZULCBbe1xuICAgIGtleTogXCJzZXRJbnB1dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRJbnB1dChzb3VyY2UpIHtcbiAgICAgIGlmICghc291cmNlKSB7XG4gICAgICAgIG1haW4uZmZ0TWV0ZXIuY29ubmVjdCh0aGlzLmFuYWx5c2VyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChzb3VyY2Uub3V0cHV0KSB7XG4gICAgICAgICAgc291cmNlLm91dHB1dC5jb25uZWN0KHRoaXMuYW5hbHlzZXIpO1xuICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5jb25uZWN0KSB7XG4gICAgICAgICAgc291cmNlLmNvbm5lY3QodGhpcy5hbmFseXNlcik7XG4gICAgICAgIH1cblxuICAgICAgICBtYWluLmZmdE1ldGVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJldHVybnMgYW4gYXJyYXkgb2YgYW1wbGl0dWRlIHZhbHVlcyAoYmV0d2VlbiAtMS4wIGFuZCArMS4wKSB0aGF0IHJlcHJlc2VudFxuICAgICAqICBhIHNuYXBzaG90IG9mIGFtcGxpdHVkZSByZWFkaW5ncyBpbiBhIHNpbmdsZSBidWZmZXIuIExlbmd0aCB3aWxsIGJlXG4gICAgICogIGVxdWFsIHRvIGJpbnMgKGRlZmF1bHRzIHRvIDEwMjQpLiBDYW4gYmUgdXNlZCB0byBkcmF3IHRoZSB3YXZlZm9ybVxuICAgICAqICBvZiBhIHNvdW5kLlxuICAgICAqXG4gICAgICogIEBtZXRob2Qgd2F2ZWZvcm1cbiAgICAgKiAgQGZvciBwNS5GRlRcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtiaW5zXSAgICBNdXN0IGJlIGEgcG93ZXIgb2YgdHdvIGJldHdlZW5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNiBhbmQgMTAyNC4gRGVmYXVsdHMgdG8gMTAyNC5cbiAgICAgKiAgQHBhcmFtIHtTdHJpbmd9IFtwcmVjaXNpb25dIElmIGFueSB2YWx1ZSBpcyBwcm92aWRlZCwgd2lsbCByZXR1cm4gcmVzdWx0c1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYSBGbG9hdDMyIEFycmF5IHdoaWNoIGlzIG1vcmUgcHJlY2lzZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhbiBhIHJlZ3VsYXIgYXJyYXkuXG4gICAgICogIEByZXR1cm4ge0FycmF5fSAgQXJyYXkgICAgQXJyYXkgb2YgYW1wbGl0dWRlIHZhbHVlcyAoLTEgdG8gMSlcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyIHRpbWUuIEFycmF5IGxlbmd0aCA9IGJpbnMuXG4gICAgICpcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIndhdmVmb3JtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHdhdmVmb3JtKCkge1xuICAgICAgdmFyIGJpbnMsIG1vZGU7XG4gICAgICB2YXIgbm9ybWFsQXJyYXkgPSBuZXcgQXJyYXkoKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbaV0gPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgYmlucyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICB0aGlzLmFuYWx5c2VyLmZmdFNpemUgPSBiaW5zICogMjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgYXJndW1lbnRzW2ldID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIG1vZGUgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICAgIH0gXG5cblxuICAgICAgaWYgKG1vZGUgJiYgIXA1LnByb3RvdHlwZS5faXNTYWZhcmkoKSkge1xuICAgICAgICB0aW1lVG9GbG9hdCh0aGlzLCB0aGlzLnRpbWVEb21haW4pO1xuICAgICAgICB0aGlzLmFuYWx5c2VyLmdldEZsb2F0VGltZURvbWFpbkRhdGEodGhpcy50aW1lRG9tYWluKTtcbiAgICAgICAgcmV0dXJuIHRoaXMudGltZURvbWFpbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRpbWVUb0ludCh0aGlzLCB0aGlzLnRpbWVEb21haW4pO1xuICAgICAgICB0aGlzLmFuYWx5c2VyLmdldEJ5dGVUaW1lRG9tYWluRGF0YSh0aGlzLnRpbWVEb21haW4pO1xuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy50aW1lRG9tYWluLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgdmFyIHNjYWxlZCA9IHA1LnByb3RvdHlwZS5tYXAodGhpcy50aW1lRG9tYWluW2pdLCAwLCAyNTUsIC0xLCAxKTtcbiAgICAgICAgICBub3JtYWxBcnJheS5wdXNoKHNjYWxlZCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbm9ybWFsQXJyYXk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXR1cm5zIGFuIGFycmF5IG9mIGFtcGxpdHVkZSB2YWx1ZXMgKGJldHdlZW4gMCBhbmQgMjU1KVxuICAgICAqICBhY3Jvc3MgdGhlIGZyZXF1ZW5jeSBzcGVjdHJ1bS4gTGVuZ3RoIGlzIGVxdWFsIHRvIEZGVCBiaW5zXG4gICAgICogICgxMDI0IGJ5IGRlZmF1bHQpLiBUaGUgYXJyYXkgaW5kaWNlcyBjb3JyZXNwb25kIHRvIGZyZXF1ZW5jaWVzXG4gICAgICogIChpLmUuIHBpdGNoZXMpLCBmcm9tIHRoZSBsb3dlc3QgdG8gdGhlIGhpZ2hlc3QgdGhhdCBodW1hbnMgY2FuXG4gICAgICogIGhlYXIuIEVhY2ggdmFsdWUgcmVwcmVzZW50cyBhbXBsaXR1ZGUgYXQgdGhhdCBzbGljZSBvZiB0aGVcbiAgICAgKiAgZnJlcXVlbmN5IHNwZWN0cnVtLiBNdXN0IGJlIGNhbGxlZCBwcmlvciB0byB1c2luZ1xuICAgICAqICA8Y29kZT5nZXRFbmVyZ3koKTwvY29kZT4uXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCBhbmFseXplXG4gICAgICogIEBmb3IgcDUuRkZUXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbYmluc10gICAgTXVzdCBiZSBhIHBvd2VyIG9mIHR3byBiZXR3ZWVuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE2IGFuZCAxMDI0LiBEZWZhdWx0cyB0byAxMDI0LlxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3NjYWxlXSAgICBJZiBcImRCLFwiIHJldHVybnMgZGVjaWJlbFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG9hdCBtZWFzdXJlbWVudHMgYmV0d2VlblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtMTQwIGFuZCAwIChtYXgpLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPdGhlcndpc2UgcmV0dXJucyBpbnRlZ2VycyBmcm9tIDAtMjU1LlxuICAgICAqICBAcmV0dXJuIHtBcnJheX0gc3BlY3RydW0gICAgQXJyYXkgb2YgZW5lcmd5IChhbXBsaXR1ZGUvdm9sdW1lKVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzIGFjcm9zcyB0aGUgZnJlcXVlbmN5IHNwZWN0cnVtLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG93ZXN0IGVuZXJneSAoc2lsZW5jZSkgPSAwLCBoaWdoZXN0XG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NzaWJsZSBpcyAyNTUuXG4gICAgICogIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogIGxldCBvc2MsIGZmdDtcbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpe1xuICAgICAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZChzdGFydFNvdW5kKTtcbiAgICAgKiAgICBvc2MgPSBuZXcgcDUuT3NjaWxsYXRvcigpO1xuICAgICAqICAgIG9zYy5hbXAoMCk7XG4gICAgICogICAgZmZ0ID0gbmV3IHA1LkZGVCgpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gZHJhdygpe1xuICAgICAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAgICAgKlxuICAgICAqICAgIGxldCBmcmVxID0gbWFwKG1vdXNlWCwgMCwgd2luZG93V2lkdGgsIDIwLCAxMDAwMCk7XG4gICAgICogICAgZnJlcSA9IGNvbnN0cmFpbihmcmVxLCAxLCAyMDAwMCk7XG4gICAgICogICAgb3NjLmZyZXEoZnJlcSk7XG4gICAgICpcbiAgICAgKiAgICBsZXQgc3BlY3RydW0gPSBmZnQuYW5hbHl6ZSgpO1xuICAgICAqICAgIG5vU3Ryb2tlKCk7XG4gICAgICogICAgZmlsbCgyNTUsIDAsIDI1NSk7XG4gICAgICogICAgZm9yIChsZXQgaSA9IDA7IGk8IHNwZWN0cnVtLmxlbmd0aDsgaSsrKXtcbiAgICAgKiAgICAgIGxldCB4ID0gbWFwKGksIDAsIHNwZWN0cnVtLmxlbmd0aCwgMCwgd2lkdGgpO1xuICAgICAqICAgICAgbGV0IGggPSAtaGVpZ2h0ICsgbWFwKHNwZWN0cnVtW2ldLCAwLCAyNTUsIGhlaWdodCwgMCk7XG4gICAgICogICAgICByZWN0KHgsIGhlaWdodCwgd2lkdGggLyBzcGVjdHJ1bS5sZW5ndGgsIGggKTtcbiAgICAgKiAgICB9XG4gICAgICpcbiAgICAgKiAgICBzdHJva2UoMjU1KTtcbiAgICAgKiAgICBpZiAoIW9zYy5zdGFydGVkKSB7XG4gICAgICogICAgICB0ZXh0KCd0YXAgaGVyZSBhbmQgZHJhZyB0byBjaGFuZ2UgZnJlcXVlbmN5JywgMTAsIDIwLCB3aWR0aCAtIDIwKTtcbiAgICAgKiAgICB9IGVsc2Uge1xuICAgICAqICAgICAgdGV4dChyb3VuZChmcmVxKSsnSHonLCAxMCwgMjApO1xuICAgICAqICAgIH1cbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHN0YXJ0U291bmQoKSB7XG4gICAgICogICAgb3NjLnN0YXJ0KCk7XG4gICAgICogICAgb3NjLmFtcCgwLjUsIDAuMik7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICAgICAqICAgIG9zYy5hbXAoMCwgMC4yKTtcbiAgICAgKiAgfVxuICAgICAqICA8L2NvZGU+PC9kaXY+XG4gICAgICpcbiAgICAgKlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiYW5hbHl6ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhbmFseXplKCkge1xuICAgICAgdmFyIG1vZGU7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYXJndW1lbnRzW2ldID09PSAnbnVtYmVyJykge1xuICAgICAgICAgIHRoaXMuYmlucyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICB0aGlzLmFuYWx5c2VyLmZmdFNpemUgPSB0aGlzLmJpbnMgKiAyO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbaV0gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgbW9kZSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobW9kZSAmJiBtb2RlLnRvTG93ZXJDYXNlKCkgPT09ICdkYicpIHtcbiAgICAgICAgZnJlcVRvRmxvYXQodGhpcyk7XG4gICAgICAgIHRoaXMuYW5hbHlzZXIuZ2V0RmxvYXRGcmVxdWVuY3lEYXRhKHRoaXMuZnJlcURvbWFpbik7XG4gICAgICAgIHJldHVybiB0aGlzLmZyZXFEb21haW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmcmVxVG9JbnQodGhpcywgdGhpcy5mcmVxRG9tYWluKTtcbiAgICAgICAgdGhpcy5hbmFseXNlci5nZXRCeXRlRnJlcXVlbmN5RGF0YSh0aGlzLmZyZXFEb21haW4pO1xuICAgICAgICB2YXIgbm9ybWFsQXJyYXkgPSBBcnJheS5hcHBseShbXSwgdGhpcy5mcmVxRG9tYWluKTtcbiAgICAgICAgcmV0dXJuIG5vcm1hbEFycmF5O1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmV0dXJucyB0aGUgYW1vdW50IG9mIGVuZXJneSAodm9sdW1lKSBhdCBhIHNwZWNpZmljXG4gICAgICogIDxhIGhyZWY9XCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9BdWRpb19mcmVxdWVuY3lcIiB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgKiAgZnJlcXVlbmN5PC9hPiwgb3IgdGhlIGF2ZXJhZ2UgYW1vdW50IG9mIGVuZXJneSBiZXR3ZWVuIHR3b1xuICAgICAqICBmcmVxdWVuY2llcy4gQWNjZXB0cyBOdW1iZXIocykgY29ycmVzcG9uZGluZ1xuICAgICAqICB0byBmcmVxdWVuY3kgKGluIEh6KSwgb3IgYSBcInN0cmluZ1wiIGNvcnJlc3BvbmRpbmcgdG8gcHJlZGVmaW5lZFxuICAgICAqICBmcmVxdWVuY3kgcmFuZ2VzIChcImJhc3NcIiwgXCJsb3dNaWRcIiwgXCJtaWRcIiwgXCJoaWdoTWlkXCIsIFwidHJlYmxlXCIpLlxuICAgICAqICBSZXR1cm5zIGEgcmFuZ2UgYmV0d2VlbiAwIChubyBlbmVyZ3kvdm9sdW1lIGF0IHRoYXQgZnJlcXVlbmN5KSBhbmRcbiAgICAgKiAgMjU1IChtYXhpbXVtIGVuZXJneSkuXG4gICAgICogIDxlbT5OT1RFOiBhbmFseXplKCkgbXVzdCBiZSBjYWxsZWQgcHJpb3IgdG8gZ2V0RW5lcmd5KCkuIGFuYWx5emUoKVxuICAgICAqICB0ZWxscyB0aGUgRkZUIHRvIGFuYWx5emUgZnJlcXVlbmN5IGRhdGEsIGFuZCBnZXRFbmVyZ3koKSB1c2VzXG4gICAgICogIHRoZSByZXN1bHRzIHRvIGRldGVybWluZSB0aGUgdmFsdWUgYXQgYSBzcGVjaWZpYyBmcmVxdWVuY3kgb3JcbiAgICAgKiAgcmFuZ2Ugb2YgZnJlcXVlbmNpZXMuPC9lbT48L3A+XG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZ2V0RW5lcmd5XG4gICAgICogIEBmb3IgcDUuRkZUXG4gICAgICogIEBwYXJhbSAge051bWJlcnxTdHJpbmd9IGZyZXF1ZW5jeTEgICBXaWxsIHJldHVybiBhIHZhbHVlIHJlcHJlc2VudGluZ1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmVyZ3kgYXQgdGhpcyBmcmVxdWVuY3kuIEFsdGVybmF0ZWx5LFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgc3RyaW5ncyBcImJhc3NcIiwgXCJsb3dNaWRcIiBcIm1pZFwiLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImhpZ2hNaWRcIiwgYW5kIFwidHJlYmxlXCIgd2lsbCByZXR1cm5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlZGVmaW5lZCBmcmVxdWVuY3kgcmFuZ2VzLlxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtmcmVxdWVuY3kyXSBJZiBhIHNlY29uZCBmcmVxdWVuY3kgaXMgZ2l2ZW4sXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgcmV0dXJuIGF2ZXJhZ2UgYW1vdW50IG9mXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZXJneSB0aGF0IGV4aXN0cyBiZXR3ZWVuIHRoZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d28gZnJlcXVlbmNpZXMuXG4gICAgICogIEByZXR1cm4ge051bWJlcn0gICBFbmVyZ3kgICBFbmVyZ3kgKHZvbHVtZS9hbXBsaXR1ZGUpIGZyb21cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAgYW5kIDI1NS5cbiAgICAgKlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0RW5lcmd5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEVuZXJneShmcmVxdWVuY3kxLCBmcmVxdWVuY3kyKSB7XG4gICAgICB2YXIgbnlxdWlzdCA9IG1haW4uYXVkaW9jb250ZXh0LnNhbXBsZVJhdGUgLyAyO1xuXG4gICAgICBpZiAoZnJlcXVlbmN5MSA9PT0gJ2Jhc3MnKSB7XG4gICAgICAgIGZyZXF1ZW5jeTEgPSB0aGlzLmJhc3NbMF07XG4gICAgICAgIGZyZXF1ZW5jeTIgPSB0aGlzLmJhc3NbMV07XG4gICAgICB9IGVsc2UgaWYgKGZyZXF1ZW5jeTEgPT09ICdsb3dNaWQnKSB7XG4gICAgICAgIGZyZXF1ZW5jeTEgPSB0aGlzLmxvd01pZFswXTtcbiAgICAgICAgZnJlcXVlbmN5MiA9IHRoaXMubG93TWlkWzFdO1xuICAgICAgfSBlbHNlIGlmIChmcmVxdWVuY3kxID09PSAnbWlkJykge1xuICAgICAgICBmcmVxdWVuY3kxID0gdGhpcy5taWRbMF07XG4gICAgICAgIGZyZXF1ZW5jeTIgPSB0aGlzLm1pZFsxXTtcbiAgICAgIH0gZWxzZSBpZiAoZnJlcXVlbmN5MSA9PT0gJ2hpZ2hNaWQnKSB7XG4gICAgICAgIGZyZXF1ZW5jeTEgPSB0aGlzLmhpZ2hNaWRbMF07XG4gICAgICAgIGZyZXF1ZW5jeTIgPSB0aGlzLmhpZ2hNaWRbMV07XG4gICAgICB9IGVsc2UgaWYgKGZyZXF1ZW5jeTEgPT09ICd0cmVibGUnKSB7XG4gICAgICAgIGZyZXF1ZW5jeTEgPSB0aGlzLnRyZWJsZVswXTtcbiAgICAgICAgZnJlcXVlbmN5MiA9IHRoaXMudHJlYmxlWzFdO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGZyZXF1ZW5jeTEgIT09ICdudW1iZXInKSB7XG4gICAgICAgIHRocm93ICdpbnZhbGlkIGlucHV0IGZvciBnZXRFbmVyZ3koKSc7XG4gICAgICB9IGVsc2UgaWYgKCFmcmVxdWVuY3kyKSB7XG4gICAgICAgIHZhciBpbmRleCA9IE1hdGgucm91bmQoZnJlcXVlbmN5MSAvIG55cXVpc3QgKiB0aGlzLmZyZXFEb21haW4ubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnJlcURvbWFpbltpbmRleF07XG4gICAgICB9IGVsc2UgaWYgKGZyZXF1ZW5jeTEgJiYgZnJlcXVlbmN5Mikge1xuICAgICAgICBpZiAoZnJlcXVlbmN5MSA+IGZyZXF1ZW5jeTIpIHtcbiAgICAgICAgICB2YXIgc3dhcCA9IGZyZXF1ZW5jeTI7XG4gICAgICAgICAgZnJlcXVlbmN5MiA9IGZyZXF1ZW5jeTE7XG4gICAgICAgICAgZnJlcXVlbmN5MSA9IHN3YXA7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbG93SW5kZXggPSBNYXRoLnJvdW5kKGZyZXF1ZW5jeTEgLyBueXF1aXN0ICogdGhpcy5mcmVxRG9tYWluLmxlbmd0aCk7XG4gICAgICAgIHZhciBoaWdoSW5kZXggPSBNYXRoLnJvdW5kKGZyZXF1ZW5jeTIgLyBueXF1aXN0ICogdGhpcy5mcmVxRG9tYWluLmxlbmd0aCk7XG4gICAgICAgIHZhciB0b3RhbCA9IDA7XG4gICAgICAgIHZhciBudW1GcmVxdWVuY2llcyA9IDA7IFxuXG4gICAgICAgIGZvciAodmFyIGkgPSBsb3dJbmRleDsgaSA8PSBoaWdoSW5kZXg7IGkrKykge1xuICAgICAgICAgIHRvdGFsICs9IHRoaXMuZnJlcURvbWFpbltpXTtcbiAgICAgICAgICBudW1GcmVxdWVuY2llcyArPSAxO1xuICAgICAgICB9IFxuXG5cbiAgICAgICAgdmFyIHRvUmV0dXJuID0gdG90YWwgLyBudW1GcmVxdWVuY2llcztcbiAgICAgICAgcmV0dXJuIHRvUmV0dXJuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5wdXQgZm9yIGdldEVuZXJneSgpJztcbiAgICAgIH1cbiAgICB9IFxuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0RnJlcVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGcmVxKGZyZXExLCBmcmVxMikge1xuICAgICAgY29uc29sZS5sb2coJ2dldEZyZXEoKSBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIGdldEVuZXJneSgpIGluc3RlYWQuJyk7XG4gICAgICB2YXIgeCA9IHRoaXMuZ2V0RW5lcmd5KGZyZXExLCBmcmVxMik7XG4gICAgICByZXR1cm4geDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJldHVybnMgdGhlXG4gICAgICogIDxhIGhyZWY9XCJodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NwZWN0cmFsX2NlbnRyb2lkXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICogIHNwZWN0cmFsIGNlbnRyb2lkPC9hPiBvZiB0aGUgaW5wdXQgc2lnbmFsLlxuICAgICAqICA8ZW0+Tk9URTogYW5hbHl6ZSgpIG11c3QgYmUgY2FsbGVkIHByaW9yIHRvIGdldENlbnRyb2lkKCkuIEFuYWx5emUoKVxuICAgICAqICB0ZWxscyB0aGUgRkZUIHRvIGFuYWx5emUgZnJlcXVlbmN5IGRhdGEsIGFuZCBnZXRDZW50cm9pZCgpIHVzZXNcbiAgICAgKiAgdGhlIHJlc3VsdHMgZGV0ZXJtaW5lIHRoZSBzcGVjdHJhbCBjZW50cm9pZC48L2VtPjwvcD5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBnZXRDZW50cm9pZFxuICAgICAqICBAZm9yIHA1LkZGVFxuICAgICAqICBAcmV0dXJuIHtOdW1iZXJ9ICAgU3BlY3RyYWwgQ2VudHJvaWQgRnJlcXVlbmN5ICBvZiB0aGUgc3BlY3RyYWwgY2VudHJvaWQgaW4gSHouXG4gICAgICpcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogZnVuY3Rpb24gc2V0dXAoKXtcbiAgICAgKiAgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwxMDApO1xuICAgICAqICBjbnYubW91c2VQcmVzc2VkKHVzZXJTdGFydEF1ZGlvKTtcbiAgICAgKiAgc291bmQgPSBuZXcgcDUuQXVkaW9JbigpO1xuICAgICAqICBzb3VuZC5zdGFydCgpO1xuICAgICAqICBmZnQgPSBuZXcgcDUuRkZUKCk7XG4gICAgICogIHNvdW5kLmNvbm5lY3QoZmZ0KTtcbiAgICAgKn1cbiAgICAgKlxuICAgICAqZnVuY3Rpb24gZHJhdygpIHtcbiAgICAgKiAgaWYgKGdldEF1ZGlvQ29udGV4dCgpLnN0YXRlICE9PSAncnVubmluZycpIHtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgdGV4dCgndGFwIGhlcmUgYW5kIGVuYWJsZSBtaWMgdG8gYmVnaW4nLCAxMCwgMjAsIHdpZHRoIC0gMjApO1xuICAgICAqICAgIHJldHVybjtcbiAgICAgKiAgfVxuICAgICAqICBsZXQgY2VudHJvaWRwbG90ID0gMC4wO1xuICAgICAqICBsZXQgc3BlY3RyYWxDZW50cm9pZCA9IDA7XG4gICAgICpcbiAgICAgKiAgYmFja2dyb3VuZCgwKTtcbiAgICAgKiAgc3Ryb2tlKDAsMjU1LDApO1xuICAgICAqICBsZXQgc3BlY3RydW0gPSBmZnQuYW5hbHl6ZSgpO1xuICAgICAqICBmaWxsKDAsMjU1LDApOyAvLyBzcGVjdHJ1bSBpcyBncmVlblxuICAgICAqXG4gICAgICogIC8vZHJhdyB0aGUgc3BlY3RydW1cbiAgICAgKiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzcGVjdHJ1bS5sZW5ndGg7IGkrKyl7XG4gICAgICogICAgbGV0IHggPSBtYXAobG9nKGkpLCAwLCBsb2coc3BlY3RydW0ubGVuZ3RoKSwgMCwgd2lkdGgpO1xuICAgICAqICAgIGxldCBoID0gbWFwKHNwZWN0cnVtW2ldLCAwLCAyNTUsIDAsIGhlaWdodCk7XG4gICAgICogICAgbGV0IHJlY3RhbmdsZV93aWR0aCA9IChsb2coaSsxKS1sb2coaSkpKih3aWR0aC9sb2coc3BlY3RydW0ubGVuZ3RoKSk7XG4gICAgICogICAgcmVjdCh4LCBoZWlnaHQsIHJlY3RhbmdsZV93aWR0aCwgLWggKVxuICAgICAqICB9XG4gICAgICogIGxldCBueXF1aXN0ID0gMjIwNTA7XG4gICAgICpcbiAgICAgKiAgLy8gZ2V0IHRoZSBjZW50cm9pZFxuICAgICAqICBzcGVjdHJhbENlbnRyb2lkID0gZmZ0LmdldENlbnRyb2lkKCk7XG4gICAgICpcbiAgICAgKiAgLy8gdGhlIG1lYW5fZnJlcV9pbmRleCBjYWxjdWxhdGlvbiBpcyBmb3IgdGhlIGRpc3BsYXkuXG4gICAgICogIGxldCBtZWFuX2ZyZXFfaW5kZXggPSBzcGVjdHJhbENlbnRyb2lkLyhueXF1aXN0L3NwZWN0cnVtLmxlbmd0aCk7XG4gICAgICpcbiAgICAgKiAgY2VudHJvaWRwbG90ID0gbWFwKGxvZyhtZWFuX2ZyZXFfaW5kZXgpLCAwLCBsb2coc3BlY3RydW0ubGVuZ3RoKSwgMCwgd2lkdGgpO1xuICAgICAqXG4gICAgICogIHN0cm9rZSgyNTUsMCwwKTsgLy8gdGhlIGxpbmUgc2hvd2luZyB3aGVyZSB0aGUgY2VudHJvaWQgaXMgd2lsbCBiZSByZWRcbiAgICAgKlxuICAgICAqICByZWN0KGNlbnRyb2lkcGxvdCwgMCwgd2lkdGggLyBzcGVjdHJ1bS5sZW5ndGgsIGhlaWdodClcbiAgICAgKiAgbm9TdHJva2UoKTtcbiAgICAgKiAgZmlsbCgyNTUsMjU1LDI1NSk7ICAvLyB0ZXh0IGlzIHdoaXRlXG4gICAgICogIHRleHQoJ2NlbnRyb2lkOiAnLCAxMCwgMjApO1xuICAgICAqICB0ZXh0KHJvdW5kKHNwZWN0cmFsQ2VudHJvaWQpKycgSHonLCAxMCwgNDApO1xuICAgICAqfVxuICAgICAqIDwvY29kZT48L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldENlbnRyb2lkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldENlbnRyb2lkKCkge1xuICAgICAgdmFyIG55cXVpc3QgPSBtYWluLmF1ZGlvY29udGV4dC5zYW1wbGVSYXRlIC8gMjtcbiAgICAgIHZhciBjdW11bGF0aXZlX3N1bSA9IDA7XG4gICAgICB2YXIgY2VudHJvaWRfbm9ybWFsaXphdGlvbiA9IDA7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5mcmVxRG9tYWluLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGN1bXVsYXRpdmVfc3VtICs9IGkgKiB0aGlzLmZyZXFEb21haW5baV07XG4gICAgICAgIGNlbnRyb2lkX25vcm1hbGl6YXRpb24gKz0gdGhpcy5mcmVxRG9tYWluW2ldO1xuICAgICAgfVxuXG4gICAgICB2YXIgbWVhbl9mcmVxX2luZGV4ID0gMDtcblxuICAgICAgaWYgKGNlbnRyb2lkX25vcm1hbGl6YXRpb24gIT09IDApIHtcbiAgICAgICAgbWVhbl9mcmVxX2luZGV4ID0gY3VtdWxhdGl2ZV9zdW0gLyBjZW50cm9pZF9ub3JtYWxpemF0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3BlY19jZW50cm9pZF9mcmVxID0gbWVhbl9mcmVxX2luZGV4ICogKG55cXVpc3QgLyB0aGlzLmZyZXFEb21haW4ubGVuZ3RoKTtcbiAgICAgIHJldHVybiBzcGVjX2NlbnRyb2lkX2ZyZXE7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTbW9vdGggRkZUIGFuYWx5c2lzIGJ5IGF2ZXJhZ2luZyB3aXRoIHRoZSBsYXN0IGFuYWx5c2lzIGZyYW1lLlxuICAgICAqXG4gICAgICogIEBtZXRob2Qgc21vb3RoXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBzbW9vdGhpbmcgICAgMC4wIDwgc21vb3RoaW5nIDwgMS4wLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDAuOC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInNtb290aFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzbW9vdGgocykge1xuICAgICAgaWYgKHR5cGVvZiBzICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aGlzLnNtb290aGluZyA9IHM7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnNtb290aGluZztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgdmFyIGluZGV4ID0gbWFpbi5zb3VuZEFycmF5LmluZGV4T2YodGhpcyk7XG4gICAgICBtYWluLnNvdW5kQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgaWYgKHRoaXMuYW5hbHlzZXIpIHtcbiAgICAgICAgdGhpcy5hbmFseXNlci5kaXNjb25uZWN0KCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmFuYWx5c2VyO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmV0dXJucyBhbiBhcnJheSBvZiBhdmVyYWdlIGFtcGxpdHVkZSB2YWx1ZXMgZm9yIGEgZ2l2ZW4gbnVtYmVyXG4gICAgICogIG9mIGZyZXF1ZW5jeSBiYW5kcyBzcGxpdCBlcXVhbGx5LiBOIGRlZmF1bHRzIHRvIDE2LlxuICAgICAqICA8ZW0+Tk9URTogYW5hbHl6ZSgpIG11c3QgYmUgY2FsbGVkIHByaW9yIHRvIGxpbkF2ZXJhZ2VzKCkuIEFuYWx5emUoKVxuICAgICAqICB0ZWxscyB0aGUgRkZUIHRvIGFuYWx5emUgZnJlcXVlbmN5IGRhdGEsIGFuZCBsaW5BdmVyYWdlcygpIHVzZXNcbiAgICAgKiAgdGhlIHJlc3VsdHMgdG8gZ3JvdXAgdGhlbSBpbnRvIGEgc21hbGxlciBzZXQgb2YgYXZlcmFnZXMuPC9lbT48L3A+XG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgbGluQXZlcmFnZXNcbiAgICAgKiAgQGZvciBwNS5GRlRcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSAgTiAgICAgICAgICAgICAgICBOdW1iZXIgb2YgcmV0dXJuZWQgZnJlcXVlbmN5IGdyb3Vwc1xuICAgICAqICBAcmV0dXJuIHtBcnJheX0gICBsaW5lYXJBdmVyYWdlcyAgIEFycmF5IG9mIGF2ZXJhZ2UgYW1wbGl0dWRlIHZhbHVlcyBmb3IgZWFjaCBncm91cFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwibGluQXZlcmFnZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGluQXZlcmFnZXMoX04pIHtcbiAgICAgIHZhciBOID0gX04gfHwgMTY7IFxuXG4gICAgICB2YXIgc3BlY3RydW0gPSB0aGlzLmZyZXFEb21haW47XG4gICAgICB2YXIgc3BlY3RydW1MZW5ndGggPSBzcGVjdHJ1bS5sZW5ndGg7XG4gICAgICB2YXIgc3BlY3RydW1TdGVwID0gTWF0aC5mbG9vcihzcGVjdHJ1bUxlbmd0aCAvIE4pO1xuICAgICAgdmFyIGxpbmVhckF2ZXJhZ2VzID0gbmV3IEFycmF5KE4pOyBcblxuICAgICAgdmFyIGdyb3VwSW5kZXggPSAwO1xuXG4gICAgICBmb3IgKHZhciBzcGVjSW5kZXggPSAwOyBzcGVjSW5kZXggPCBzcGVjdHJ1bUxlbmd0aDsgc3BlY0luZGV4KyspIHtcbiAgICAgICAgbGluZWFyQXZlcmFnZXNbZ3JvdXBJbmRleF0gPSBsaW5lYXJBdmVyYWdlc1tncm91cEluZGV4XSAhPT0gdW5kZWZpbmVkID8gKGxpbmVhckF2ZXJhZ2VzW2dyb3VwSW5kZXhdICsgc3BlY3RydW1bc3BlY0luZGV4XSkgLyAyIDogc3BlY3RydW1bc3BlY0luZGV4XTsgXG5cbiAgICAgICAgaWYgKHNwZWNJbmRleCAlIHNwZWN0cnVtU3RlcCA9PT0gc3BlY3RydW1TdGVwIC0gMSkge1xuICAgICAgICAgIGdyb3VwSW5kZXgrKztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbGluZWFyQXZlcmFnZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXR1cm5zIGFuIGFycmF5IG9mIGF2ZXJhZ2UgYW1wbGl0dWRlIHZhbHVlcyBvZiB0aGUgc3BlY3RydW0sIGZvciBhIGdpdmVuXG4gICAgICogIHNldCBvZiA8YSBocmVmPVwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2N0YXZlX2JhbmRcIiB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgKiAgT2N0YXZlIEJhbmRzPC9hPlxuICAgICAqICA8ZW0+Tk9URTogYW5hbHl6ZSgpIG11c3QgYmUgY2FsbGVkIHByaW9yIHRvIGxvZ0F2ZXJhZ2VzKCkuIEFuYWx5emUoKVxuICAgICAqICB0ZWxscyB0aGUgRkZUIHRvIGFuYWx5emUgZnJlcXVlbmN5IGRhdGEsIGFuZCBsb2dBdmVyYWdlcygpIHVzZXNcbiAgICAgKiAgdGhlIHJlc3VsdHMgdG8gZ3JvdXAgdGhlbSBpbnRvIGEgc21hbGxlciBzZXQgb2YgYXZlcmFnZXMuPC9lbT48L3A+XG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgbG9nQXZlcmFnZXNcbiAgICAgKiAgQGZvciBwNS5GRlRcbiAgICAgKiAgQHBhcmFtICB7QXJyYXl9ICAgb2N0YXZlQmFuZHMgICAgQXJyYXkgb2YgT2N0YXZlIEJhbmRzIG9iamVjdHMgZm9yIGdyb3VwaW5nXG4gICAgICogIEByZXR1cm4ge0FycmF5fSAgIGxvZ0F2ZXJhZ2VzICAgIEFycmF5IG9mIGF2ZXJhZ2UgYW1wbGl0dWRlIHZhbHVlcyBmb3IgZWFjaCBncm91cFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwibG9nQXZlcmFnZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9nQXZlcmFnZXMob2N0YXZlQmFuZHMpIHtcbiAgICAgIHZhciBueXF1aXN0ID0gbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZSAvIDI7XG4gICAgICB2YXIgc3BlY3RydW0gPSB0aGlzLmZyZXFEb21haW47XG4gICAgICB2YXIgc3BlY3RydW1MZW5ndGggPSBzcGVjdHJ1bS5sZW5ndGg7XG4gICAgICB2YXIgbG9nQXZlcmFnZXMgPSBuZXcgQXJyYXkob2N0YXZlQmFuZHMubGVuZ3RoKTsgXG5cbiAgICAgIHZhciBvY3RhdmVJbmRleCA9IDA7XG5cbiAgICAgIGZvciAodmFyIHNwZWNJbmRleCA9IDA7IHNwZWNJbmRleCA8IHNwZWN0cnVtTGVuZ3RoOyBzcGVjSW5kZXgrKykge1xuICAgICAgICB2YXIgc3BlY0luZGV4RnJlcXVlbmN5ID0gTWF0aC5yb3VuZChzcGVjSW5kZXggKiBueXF1aXN0IC8gdGhpcy5mcmVxRG9tYWluLmxlbmd0aCk7IFxuXG4gICAgICAgIGlmIChzcGVjSW5kZXhGcmVxdWVuY3kgPiBvY3RhdmVCYW5kc1tvY3RhdmVJbmRleF0uaGkpIHtcbiAgICAgICAgICBvY3RhdmVJbmRleCsrO1xuICAgICAgICB9XG5cbiAgICAgICAgbG9nQXZlcmFnZXNbb2N0YXZlSW5kZXhdID0gbG9nQXZlcmFnZXNbb2N0YXZlSW5kZXhdICE9PSB1bmRlZmluZWQgPyAobG9nQXZlcmFnZXNbb2N0YXZlSW5kZXhdICsgc3BlY3RydW1bc3BlY0luZGV4XSkgLyAyIDogc3BlY3RydW1bc3BlY0luZGV4XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxvZ0F2ZXJhZ2VzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgQ2FsY3VsYXRlcyBhbmQgUmV0dXJucyB0aGUgMS9OXG4gICAgICogIDxhIGhyZWY9XCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9PY3RhdmVfYmFuZFwiIHRhcmdldD1cIl9ibGFua1wiPk9jdGF2ZSBCYW5kczwvYT5cbiAgICAgKiAgTiBkZWZhdWx0cyB0byAzIGFuZCBtaW5pbXVtIGNlbnRyYWwgZnJlcXVlbmN5IHRvIDE1LjYyNUh6LlxuICAgICAqICAoMS8zIE9jdGF2ZSBCYW5kcyB+PSAzMSBGcmVxdWVuY3kgQmFuZHMpXG4gICAgICogIFNldHRpbmcgZkN0cjAgdG8gYSBjZW50cmFsIHZhbHVlIG9mIGEgaGlnaGVyIG9jdGF2ZSB3aWxsIGlnbm9yZSB0aGUgbG93ZXIgYmFuZHNcbiAgICAgKiAgYW5kIHByb2R1Y2UgbGVzcyBmcmVxdWVuY3kgZ3JvdXBzLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgICBnZXRPY3RhdmVCYW5kc1xuICAgICAqICBAZm9yIHA1LkZGVFxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9ICBOICAgICAgICAgICAgIFNwZWNpZmllcyB0aGUgMS9OIHR5cGUgb2YgZ2VuZXJhdGVkIG9jdGF2ZSBiYW5kc1xuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9ICBmQ3RyMCAgICAgICAgIE1pbmltdW0gY2VudHJhbCBmcmVxdWVuY3kgZm9yIHRoZSBsb3dlc3QgYmFuZFxuICAgICAqICBAcmV0dXJuIHtBcnJheX0gICBvY3RhdmVCYW5kcyAgIEFycmF5IG9mIG9jdGF2ZSBiYW5kIG9iamVjdHMgd2l0aCB0aGVpciBib3VuZHNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldE9jdGF2ZUJhbmRzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldE9jdGF2ZUJhbmRzKF9OLCBfZkN0cjApIHtcbiAgICAgIHZhciBOID0gX04gfHwgMzsgXG5cbiAgICAgIHZhciBmQ3RyMCA9IF9mQ3RyMCB8fCAxNS42MjU7IFxuXG4gICAgICB2YXIgb2N0YXZlQmFuZHMgPSBbXTtcbiAgICAgIHZhciBsYXN0RnJlcXVlbmN5QmFuZCA9IHtcbiAgICAgICAgbG86IGZDdHIwIC8gTWF0aC5wb3coMiwgMSAvICgyICogTikpLFxuICAgICAgICBjdHI6IGZDdHIwLFxuICAgICAgICBoaTogZkN0cjAgKiBNYXRoLnBvdygyLCAxIC8gKDIgKiBOKSlcbiAgICAgIH07XG4gICAgICBvY3RhdmVCYW5kcy5wdXNoKGxhc3RGcmVxdWVuY3lCYW5kKTtcbiAgICAgIHZhciBueXF1aXN0ID0gbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZSAvIDI7XG5cbiAgICAgIHdoaWxlIChsYXN0RnJlcXVlbmN5QmFuZC5oaSA8IG55cXVpc3QpIHtcbiAgICAgICAgdmFyIG5ld0ZyZXF1ZW5jeUJhbmQgPSB7fTtcbiAgICAgICAgbmV3RnJlcXVlbmN5QmFuZC5sbyA9IGxhc3RGcmVxdWVuY3lCYW5kLmhpO1xuICAgICAgICBuZXdGcmVxdWVuY3lCYW5kLmN0ciA9IGxhc3RGcmVxdWVuY3lCYW5kLmN0ciAqIE1hdGgucG93KDIsIDEgLyBOKTtcbiAgICAgICAgbmV3RnJlcXVlbmN5QmFuZC5oaSA9IG5ld0ZyZXF1ZW5jeUJhbmQuY3RyICogTWF0aC5wb3coMiwgMSAvICgyICogTikpO1xuICAgICAgICBvY3RhdmVCYW5kcy5wdXNoKG5ld0ZyZXF1ZW5jeUJhbmQpO1xuICAgICAgICBsYXN0RnJlcXVlbmN5QmFuZCA9IG5ld0ZyZXF1ZW5jeUJhbmQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvY3RhdmVCYW5kcztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRkZUO1xufSgpOyBcblxuXG5mdW5jdGlvbiBmcmVxVG9GbG9hdChmZnQpIHtcbiAgaWYgKGZmdC5mcmVxRG9tYWluIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5ID09PSBmYWxzZSkge1xuICAgIGZmdC5mcmVxRG9tYWluID0gbmV3IEZsb2F0MzJBcnJheShmZnQuYW5hbHlzZXIuZnJlcXVlbmN5QmluQ291bnQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGZyZXFUb0ludChmZnQpIHtcbiAgaWYgKGZmdC5mcmVxRG9tYWluIGluc3RhbmNlb2YgVWludDhBcnJheSA9PT0gZmFsc2UpIHtcbiAgICBmZnQuZnJlcURvbWFpbiA9IG5ldyBVaW50OEFycmF5KGZmdC5hbmFseXNlci5mcmVxdWVuY3lCaW5Db3VudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdGltZVRvRmxvYXQoZmZ0KSB7XG4gIGlmIChmZnQudGltZURvbWFpbiBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSA9PT0gZmFsc2UpIHtcbiAgICBmZnQudGltZURvbWFpbiA9IG5ldyBGbG9hdDMyQXJyYXkoZmZ0LmFuYWx5c2VyLmZyZXF1ZW5jeUJpbkNvdW50KTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0aW1lVG9JbnQoZmZ0KSB7XG4gIGlmIChmZnQudGltZURvbWFpbiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPT09IGZhbHNlKSB7XG4gICAgZmZ0LnRpbWVEb21haW4gPSBuZXcgVWludDhBcnJheShmZnQuYW5hbHlzZXIuZnJlcXVlbmN5QmluQ291bnQpO1xuICB9XG59XG5cbiB2YXIgZmZ0ID0gKGZmdF9GRlQpO1xudmFyIEFkZCA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG52YXIgQWRkX2RlZmF1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm4oQWRkKTtcblxudmFyIE11bHRpcGx5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbnZhciBNdWx0aXBseV9kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKE11bHRpcGx5KTtcblxudmFyIFNjYWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcbnZhciBTY2FsZV9kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKFNjYWxlKTtcblxuZnVuY3Rpb24gb3NjaWxsYXRvcl90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBvc2NpbGxhdG9yX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBvc2NpbGxhdG9yX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBvc2NpbGxhdG9yX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKG9zY2lsbGF0b3JfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIG9zY2lsbGF0b3JfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBvc2NpbGxhdG9yX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBvc2NpbGxhdG9yX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgb3NjaWxsYXRvcl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgb3NjaWxsYXRvcl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5cblxuXG5cblxuZnVuY3Rpb24gc2lnQ2hhaW4obywgbWF0aE9iaiwgdGhpc0NoYWluLCBuZXh0Q2hhaW4sIHR5cGUpIHtcbiAgdmFyIGNoYWluU291cmNlID0gby5vc2NpbGxhdG9yOyBcblxuICBmb3IgKHZhciBpIGluIG8ubWF0aE9wcykge1xuICAgIGlmIChvLm1hdGhPcHNbaV0gaW5zdGFuY2VvZiB0eXBlKSB7XG4gICAgICBjaGFpblNvdXJjZS5kaXNjb25uZWN0KCk7XG4gICAgICBvLm1hdGhPcHNbaV0uZGlzcG9zZSgpO1xuICAgICAgdGhpc0NoYWluID0gaTsgXG5cbiAgICAgIGlmICh0aGlzQ2hhaW4gPCBvLm1hdGhPcHMubGVuZ3RoIC0gMikge1xuICAgICAgICBuZXh0Q2hhaW4gPSBvLm1hdGhPcHNbaSArIDFdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmICh0aGlzQ2hhaW4gPT09IG8ubWF0aE9wcy5sZW5ndGggLSAxKSB7XG4gICAgby5tYXRoT3BzLnB1c2gobmV4dENoYWluKTtcbiAgfSBcblxuXG4gIGlmIChpID4gMCkge1xuICAgIGNoYWluU291cmNlID0gby5tYXRoT3BzW2kgLSAxXTtcbiAgfVxuXG4gIGNoYWluU291cmNlLmRpc2Nvbm5lY3QoKTtcbiAgY2hhaW5Tb3VyY2UuY29ubmVjdChtYXRoT2JqKTtcbiAgbWF0aE9iai5jb25uZWN0KG5leHRDaGFpbik7XG4gIG8ubWF0aE9wc1t0aGlzQ2hhaW5dID0gbWF0aE9iajtcbiAgcmV0dXJuIG87XG59XG4vKipcbiAqICA8cD5DcmVhdGVzIGEgc2lnbmFsIHRoYXQgb3NjaWxsYXRlcyBiZXR3ZWVuIC0xLjAgYW5kIDEuMC5cbiAqICBCeSBkZWZhdWx0LCB0aGUgb3NjaWxsYXRpb24gdGFrZXMgdGhlIGZvcm0gb2YgYSBzaW51c29pZGFsXG4gKiAgc2hhcGUgKCdzaW5lJykuIEFkZGl0aW9uYWwgdHlwZXMgaW5jbHVkZSAndHJpYW5nbGUnLFxuICogICdzYXd0b290aCcgYW5kICdzcXVhcmUnLiBUaGUgZnJlcXVlbmN5IGRlZmF1bHRzIHRvXG4gKiAgNDQwIG9zY2lsbGF0aW9ucyBwZXIgc2Vjb25kICg0NDBIeiwgZXF1YWwgdG8gdGhlIHBpdGNoIG9mIGFuXG4gKiAgJ0EnIG5vdGUpLjwvcD5cbiAqXG4gKiAgPHA+U2V0IHRoZSB0eXBlIG9mIG9zY2lsbGF0aW9uIHdpdGggc2V0VHlwZSgpLCBvciBieSBpbnN0YW50aWF0aW5nIGFcbiAqICBzcGVjaWZpYyBvc2NpbGxhdG9yOiA8YSBocmVmPVwiL3JlZmVyZW5jZS8jL3A1LlNpbk9zY1wiPnA1LlNpbk9zYzwvYT4sIDxhXG4gKiAgaHJlZj1cIi9yZWZlcmVuY2UvIy9wNS5UcmlPc2NcIj5wNS5UcmlPc2M8L2E+LCA8YVxuICogIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUuU3FyT3NjXCI+cDUuU3FyT3NjPC9hPiwgb3IgPGFcbiAqICBocmVmPVwiL3JlZmVyZW5jZS8jL3A1LlNhd09zY1wiPnA1LlNhd09zYzwvYT4uXG4gKiAgPC9wPlxuICpcbiAqICBAY2xhc3MgcDUuT3NjaWxsYXRvclxuICogIEBjb25zdHJ1Y3RvclxuICogIEBwYXJhbSB7TnVtYmVyfSBbZnJlcV0gZnJlcXVlbmN5IGRlZmF1bHRzIHRvIDQ0MEh6XG4gKiAgQHBhcmFtIHtTdHJpbmd9IFt0eXBlXSB0eXBlIG9mIG9zY2lsbGF0b3IuIE9wdGlvbnM6XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAnc2luZScgKGRlZmF1bHQpLCAndHJpYW5nbGUnLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgJ3Nhd3Rvb3RoJywgJ3NxdWFyZSdcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IG9zYywgcGxheWluZywgZnJlcSwgYW1wO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgY252Lm1vdXNlUHJlc3NlZChwbGF5T3NjaWxsYXRvcik7XG4gKiAgICBvc2MgPSBuZXcgcDUuT3NjaWxsYXRvcignc2luZScpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKVxuICogICAgZnJlcSA9IGNvbnN0cmFpbihtYXAobW91c2VYLCAwLCB3aWR0aCwgMTAwLCA1MDApLCAxMDAsIDUwMCk7XG4gKiAgICBhbXAgPSBjb25zdHJhaW4obWFwKG1vdXNlWSwgaGVpZ2h0LCAwLCAwLCAxKSwgMCwgMSk7XG4gKlxuICogICAgdGV4dCgndGFwIHRvIHBsYXknLCAyMCwgMjApO1xuICogICAgdGV4dCgnZnJlcTogJyArIGZyZXEsIDIwLCA0MCk7XG4gKiAgICB0ZXh0KCdhbXA6ICcgKyBhbXAsIDIwLCA2MCk7XG4gKlxuICogICAgaWYgKHBsYXlpbmcpIHtcbiAqICAgICAgLy8gc21vb3RoIHRoZSB0cmFuc2l0aW9ucyBieSAwLjEgc2Vjb25kc1xuICogICAgICBvc2MuZnJlcShmcmVxLCAwLjEpO1xuICogICAgICBvc2MuYW1wKGFtcCwgMC4xKTtcbiAqICAgIH1cbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHBsYXlPc2NpbGxhdG9yKCkge1xuICogICAgLy8gc3RhcnRpbmcgYW4gb3NjaWxsYXRvciBvbiBhIHVzZXIgZ2VzdHVyZSB3aWxsIGVuYWJsZSBhdWRpb1xuICogICAgLy8gaW4gYnJvd3NlcnMgdGhhdCBoYXZlIGEgc3RyaWN0IGF1dG9wbGF5IHBvbGljeS5cbiAqICAgIC8vIFNlZSBhbHNvOiB1c2VyU3RhcnRBdWRpbygpO1xuICogICAgb3NjLnN0YXJ0KCk7XG4gKiAgICBwbGF5aW5nID0gdHJ1ZTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIG1vdXNlUmVsZWFzZWQoKSB7XG4gKiAgICAvLyByYW1wIGFtcGxpdHVkZSB0byAwIG92ZXIgMC41IHNlY29uZHNcbiAqICAgIG9zYy5hbXAoMCwgMC41KTtcbiAqICAgIHBsYXlpbmcgPSBmYWxzZTtcbiAqICB9XG4gKiAgPC9jb2RlPiA8L2Rpdj5cbiAqL1xuXG5cbnZhciBvc2NpbGxhdG9yX09zY2lsbGF0b3IgPVxuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBPc2NpbGxhdG9yKGZyZXEsIHR5cGUpIHtcbiAgICBvc2NpbGxhdG9yX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9zY2lsbGF0b3IpO1xuXG4gICAgaWYgKHR5cGVvZiBmcmVxID09PSAnc3RyaW5nJykge1xuICAgICAgdmFyIGYgPSB0eXBlO1xuICAgICAgdHlwZSA9IGZyZXE7XG4gICAgICBmcmVxID0gZjtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdudW1iZXInKSB7XG4gICAgICB2YXIgX2YgPSB0eXBlO1xuICAgICAgdHlwZSA9IGZyZXE7XG4gICAgICBmcmVxID0gX2Y7XG4gICAgfVxuXG4gICAgdGhpcy5zdGFydGVkID0gZmFsc2U7IFxuXG4gICAgdGhpcy5waGFzZUFtb3VudCA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLm9zY2lsbGF0b3IgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgdGhpcy5mID0gZnJlcSB8fCA0NDAuMDsgXG5cbiAgICB0aGlzLm9zY2lsbGF0b3IudHlwZSA9IHR5cGUgfHwgJ3NpbmUnO1xuICAgIHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kuc2V0VmFsdWVBdFRpbWUodGhpcy5mLCBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZSk7IFxuXG4gICAgdGhpcy5vdXRwdXQgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgdGhpcy5fZnJlcU1vZHMgPSBbXTsgXG5cbiAgICB0aGlzLm91dHB1dC5nYWluLnZhbHVlID0gMC41O1xuICAgIHRoaXMub3V0cHV0LmdhaW4uc2V0VmFsdWVBdFRpbWUoMC41LCBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZSk7XG4gICAgdGhpcy5vc2NpbGxhdG9yLmNvbm5lY3QodGhpcy5vdXRwdXQpOyBcblxuICAgIHRoaXMucGFuUG9zaXRpb24gPSAwLjA7XG4gICAgdGhpcy5jb25uZWN0aW9uID0gbWFpbi5pbnB1dDsgXG5cbiAgICB0aGlzLnBhbm5lciA9IG5ldyBwYW5uZXJfMCh0aGlzLm91dHB1dCwgdGhpcy5jb25uZWN0aW9uLCAxKTsgXG5cbiAgICB0aGlzLm1hdGhPcHMgPSBbdGhpcy5vdXRwdXRdOyBcblxuICAgIG1haW4uc291bmRBcnJheS5wdXNoKHRoaXMpOyBcblxuICAgIHRoaXMuZmFkZSA9IHRoaXMuYW1wO1xuICB9XG4gIC8qKlxuICAgKiAgU3RhcnQgYW4gb3NjaWxsYXRvci5cbiAgICpcbiAgICogIFN0YXJ0aW5nIGFuIG9zY2lsbGF0b3Igb24gYSB1c2VyIGdlc3R1cmUgd2lsbCBlbmFibGUgYXVkaW8gaW4gYnJvd3NlcnNcbiAgICogIHRoYXQgaGF2ZSBhIHN0cmljdCBhdXRvcGxheSBwb2xpY3ksIGluY2x1ZGluZyBDaHJvbWUgYW5kIG1vc3QgbW9iaWxlXG4gICAqICBkZXZpY2VzLiBTZWUgYWxzbzogYHVzZXJTdGFydEF1ZGlvKClgLlxuICAgKlxuICAgKiAgQG1ldGhvZCAgc3RhcnRcbiAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbdGltZV0gc3RhcnRUaW1lIGluIHNlY29uZHMgZnJvbSBub3cuXG4gICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtmcmVxdWVuY3ldIGZyZXF1ZW5jeSBpbiBIei5cbiAgICovXG5cblxuICBvc2NpbGxhdG9yX2NyZWF0ZUNsYXNzKE9zY2lsbGF0b3IsIFt7XG4gICAga2V5OiBcInN0YXJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0KHRpbWUsIGYpIHtcbiAgICAgIGlmICh0aGlzLnN0YXJ0ZWQpIHtcbiAgICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICB0aGlzLnN0b3Aobm93KTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLnN0YXJ0ZWQpIHtcbiAgICAgICAgdmFyIGZyZXEgPSBmIHx8IHRoaXMuZjtcbiAgICAgICAgdmFyIHR5cGUgPSB0aGlzLm9zY2lsbGF0b3IudHlwZTsgXG5cbiAgICAgICAgaWYgKHRoaXMub3NjaWxsYXRvcikge1xuICAgICAgICAgIHRoaXMub3NjaWxsYXRvci5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgZGVsZXRlIHRoaXMub3NjaWxsYXRvcjtcbiAgICAgICAgfSBcblxuXG4gICAgICAgIHRoaXMub3NjaWxsYXRvciA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS52YWx1ZSA9IE1hdGguYWJzKGZyZXEpO1xuICAgICAgICB0aGlzLm9zY2lsbGF0b3IudHlwZSA9IHR5cGU7IFxuXG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5jb25uZWN0KHRoaXMub3V0cHV0KTtcbiAgICAgICAgdGltZSA9IHRpbWUgfHwgMDtcbiAgICAgICAgdGhpcy5vc2NpbGxhdG9yLnN0YXJ0KHRpbWUgKyBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZSk7XG4gICAgICAgIHRoaXMuZnJlcU5vZGUgPSB0aGlzLm9zY2lsbGF0b3IuZnJlcXVlbmN5OyBcblxuICAgICAgICBmb3IgKHZhciBpIGluIHRoaXMuX2ZyZXFNb2RzKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLl9mcmVxTW9kc1tpXS5jb25uZWN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhpcy5fZnJlcU1vZHNbaV0uY29ubmVjdCh0aGlzLm9zY2lsbGF0b3IuZnJlcXVlbmN5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU3RvcCBhbiBvc2NpbGxhdG9yLiBBY2NlcHRzIGFuIG9wdGlvbmFsIHBhcmFtZXRlclxuICAgICAqICB0byBkZXRlcm1pbmUgaG93IGxvbmcgKGluIHNlY29uZHMgZnJvbSBub3cpIHVudGlsIHRoZVxuICAgICAqICBvc2NpbGxhdG9yIHN0b3BzLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHN0b3BcbiAgICAgKiAgQGZvciBwNS5Pc2NpbGxhdG9yXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gc2Vjb25kc0Zyb21Ob3cgVGltZSwgaW4gc2Vjb25kcyBmcm9tIG5vdy5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInN0b3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCh0aW1lKSB7XG4gICAgICBpZiAodGhpcy5zdGFydGVkKSB7XG4gICAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuICAgICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5zdG9wKHQgKyBub3cpO1xuICAgICAgICB0aGlzLnN0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNldCB0aGUgYW1wbGl0dWRlIGJldHdlZW4gMCBhbmQgMS4wLiBPciwgcGFzcyBpbiBhbiBvYmplY3RcbiAgICAgKiAgc3VjaCBhcyBhbiBvc2NpbGxhdG9yIHRvIG1vZHVsYXRlIGFtcGxpdHVkZSB3aXRoIGFuIGF1ZGlvIHNpZ25hbC5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBhbXBcbiAgICAgKiAgQGZvciBwNS5Pc2NpbGxhdG9yXG4gICAgICogIEBwYXJhbSAge051bWJlcnxPYmplY3R9IHZvbCBiZXR3ZWVuIDAgYW5kIDEuMFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYSBtb2R1bGF0aW5nIHNpZ25hbC9vc2NpbGxhdG9yXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbcmFtcFRpbWVdIGNyZWF0ZSBhIGZhZGUgdGhhdCBsYXN0cyByYW1wVGltZVxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3RpbWVGcm9tTm93XSBzY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzIGZyb20gbm93XG4gICAgICogIEByZXR1cm4gIHtBdWRpb1BhcmFtfSBnYWluICBJZiBubyB2YWx1ZSBpcyBwcm92aWRlZCxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybnMgdGhlIFdlYiBBdWRpbyBBUElcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF1ZGlvUGFyYW0gdGhhdCBjb250cm9sc1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyBvc2NpbGxhdG9yJ3NcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhaW4vYW1wbGl0dWRlL3ZvbHVtZSlcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImFtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhbXAodm9sKSB7XG4gICAgICB2YXIgcmFtcFRpbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7XG4gICAgICB2YXIgdEZyb21Ob3cgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDA7XG5cbiAgICAgIGlmICh0eXBlb2Ygdm9sID09PSAnbnVtYmVyJykge1xuICAgICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgIHRoaXMub3V0cHV0LmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodm9sLCBub3cgKyB0RnJvbU5vdyArIHJhbXBUaW1lKTtcbiAgICAgIH0gZWxzZSBpZiAodm9sKSB7XG4gICAgICAgIHZvbC5jb25uZWN0KHRoaXMub3V0cHV0LmdhaW4pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LmdhaW47XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHZhbHVlIG9mIG91dHB1dCBnYWluXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZ2V0QW1wXG4gICAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgICAqXG4gICAgICogQHJldHVybnMge251bWJlcn0gQW1wbGl0dWRlIHZhbHVlIGJldHdlZW4gMC4wIGFuZCAxLjBcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldEFtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRBbXAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5vdXRwdXQuZ2Fpbi52YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNldCBmcmVxdWVuY3kgb2YgYW4gb3NjaWxsYXRvciB0byBhIHZhbHVlLiBPciwgcGFzcyBpbiBhbiBvYmplY3RcbiAgICAgKiAgc3VjaCBhcyBhbiBvc2NpbGxhdG9yIHRvIG1vZHVsYXRlIHRoZSBmcmVxdWVuY3kgd2l0aCBhbiBhdWRpbyBzaWduYWwuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZnJlcVxuICAgICAqICBAZm9yIHA1Lk9zY2lsbGF0b3JcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfE9iamVjdH0gRnJlcXVlbmN5IEZyZXF1ZW5jeSBpbiBIelxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIG1vZHVsYXRpbmcgc2lnbmFsL29zY2lsbGF0b3JcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbcmFtcFRpbWVdIFJhbXAgdGltZSAoaW4gc2Vjb25kcylcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbdGltZUZyb21Ob3ddIFNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0IHggc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqICBAcmV0dXJuICB7QXVkaW9QYXJhbX0gRnJlcXVlbmN5IElmIG5vIHZhbHVlIGlzIHByb3ZpZGVkLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybnMgdGhlIFdlYiBBdWRpbyBBUElcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdWRpb1BhcmFtIHRoYXQgY29udHJvbHNcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzIG9zY2lsbGF0b3IncyBmcmVxdWVuY3lcbiAgICAgKiAgQGV4YW1wbGVcbiAgICAgKiAgPGRpdj48Y29kZT5cbiAgICAgKiAgbGV0IG9zYztcbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICAgKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAgICAgKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlPc2NpbGxhdG9yKTtcbiAgICAgKiAgICBvc2MgPSBuZXcgcDUuT3NjaWxsYXRvcigzMDApO1xuICAgICAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAgICAgKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDIwLCAyMCk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBwbGF5T3NjaWxsYXRvcigpIHtcbiAgICAgKiAgICBvc2Muc3RhcnQoKTtcbiAgICAgKiAgICBvc2MuYW1wKDAuNSk7XG4gICAgICogICAgLy8gc3RhcnQgYXQgNzAwSHpcbiAgICAgKiAgICBvc2MuZnJlcSg3MDApO1xuICAgICAqICAgIC8vIHJhbXAgdG8gNjBIeiBvdmVyIDAuNyBzZWNvbmRzXG4gICAgICogICAgb3NjLmZyZXEoNjAsIDAuNyk7XG4gICAgICogICAgb3NjLmFtcCgwLCAwLjEsIDAuNyk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZnJlcVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmcmVxKHZhbCkge1xuICAgICAgdmFyIHJhbXBUaW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICAgICAgdmFyIHRGcm9tTm93ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAwO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicgJiYgIWlzTmFOKHZhbCkpIHtcbiAgICAgICAgdGhpcy5mID0gdmFsO1xuICAgICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG5cbiAgICAgICAgaWYgKHJhbXBUaW1lID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZSh2YWwsIHRGcm9tTm93ICsgbm93KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodmFsID4gMCkge1xuICAgICAgICAgICAgdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHZhbCwgdEZyb21Ob3cgKyByYW1wVGltZSArIG5vdyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodmFsLCB0RnJvbU5vdyArIHJhbXBUaW1lICsgbm93KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gXG5cblxuICAgICAgICBpZiAodGhpcy5waGFzZUFtb3VudCkge1xuICAgICAgICAgIHRoaXMucGhhc2UodGhpcy5waGFzZUFtb3VudCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodmFsKSB7XG4gICAgICAgIGlmICh2YWwub3V0cHV0KSB7XG4gICAgICAgICAgdmFsID0gdmFsLm91dHB1dDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhbC5jb25uZWN0KHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kpOyBcblxuICAgICAgICB0aGlzLl9mcmVxTW9kcy5wdXNoKHZhbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgdmFsdWUgb2YgZnJlcXVlbmN5IG9mIG9zY2lsbGF0b3JcbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBnZXRGcmVxXG4gICAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgICAqICBAcmV0dXJucyB7bnVtYmVyfSBGcmVxdWVuY3kgb2Ygb3NjaWxsYXRvciBpbiBIZXJ0elxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0RnJlcVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGcmVxKCkge1xuICAgICAgcmV0dXJuIHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kudmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTZXQgdHlwZSB0byAnc2luZScsICd0cmlhbmdsZScsICdzYXd0b290aCcgb3IgJ3NxdWFyZScuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgc2V0VHlwZVxuICAgICAqICBAZm9yIHA1Lk9zY2lsbGF0b3JcbiAgICAgKiAgQHBhcmFtIHtTdHJpbmd9IHR5cGUgJ3NpbmUnLCAndHJpYW5nbGUnLCAnc2F3dG9vdGgnIG9yICdzcXVhcmUnLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0VHlwZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUeXBlKHR5cGUpIHtcbiAgICAgIHRoaXMub3NjaWxsYXRvci50eXBlID0gdHlwZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJldHVybnMgIGN1cnJlbnQgdHlwZSBvZiBvc2NpbGxhdG9yIGVnLiAnc2luZScsICd0cmlhbmdsZScsICdzYXd0b290aCcgb3IgJ3NxdWFyZScuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZ2V0VHlwZVxuICAgICAqICBAZm9yIHA1Lk9zY2lsbGF0b3JcbiAgICAgKiAgQHJldHVybnMge1N0cmluZ30gdHlwZSBvZiBvc2NpbGxhdG9yICBlZyAuICdzaW5lJywgJ3RyaWFuZ2xlJywgJ3Nhd3Rvb3RoJyBvciAnc3F1YXJlJy5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldFR5cGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VHlwZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLm9zY2lsbGF0b3IudHlwZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIENvbm5lY3QgdG8gYSBwNS5zb3VuZCAvIFdlYiBBdWRpbyBvYmplY3QuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgY29ubmVjdFxuICAgICAqICBAZm9yIHA1Lk9zY2lsbGF0b3JcbiAgICAgKiAgQHBhcmFtICB7T2JqZWN0fSB1bml0IEEgcDUuc291bmQgb3IgV2ViIEF1ZGlvIG9iamVjdFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb25uZWN0KHVuaXQpIHtcbiAgICAgIGlmICghdW5pdCkge1xuICAgICAgICB0aGlzLnBhbm5lci5jb25uZWN0KG1haW4uaW5wdXQpO1xuICAgICAgfSBlbHNlIGlmICh1bml0Lmhhc093blByb3BlcnR5KCdpbnB1dCcpKSB7XG4gICAgICAgIHRoaXMucGFubmVyLmNvbm5lY3QodW5pdC5pbnB1dCk7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IHVuaXQuaW5wdXQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBhbm5lci5jb25uZWN0KHVuaXQpO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb24gPSB1bml0O1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgRGlzY29ubmVjdCBhbGwgb3V0cHV0c1xuICAgICAqXG4gICAgICogIEBtZXRob2QgIGRpc2Nvbm5lY3RcbiAgICAgKiAgQGZvciBwNS5Pc2NpbGxhdG9yXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkaXNjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgICBpZiAodGhpcy5vdXRwdXQpIHtcbiAgICAgICAgdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wYW5uZXIpIHtcbiAgICAgICAgdGhpcy5wYW5uZXIuZGlzY29ubmVjdCgpO1xuXG4gICAgICAgIGlmICh0aGlzLm91dHB1dCkge1xuICAgICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodGhpcy5wYW5uZXIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMub3NjTW9kcyA9IFtdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUGFuIGJldHdlZW4gTGVmdCAoLTEpIGFuZCBSaWdodCAoMSlcbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBwYW5cbiAgICAgKiAgQGZvciBwNS5Pc2NpbGxhdG9yXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gcGFubmluZyBOdW1iZXIgYmV0d2VlbiAtMSBhbmQgMVxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IHRpbWVGcm9tTm93IHNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMgZnJvbSBub3dcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInBhblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwYW4ocHZhbCwgdEZyb21Ob3cpIHtcbiAgICAgIHRoaXMucGFuUG9zaXRpb24gPSBwdmFsO1xuICAgICAgdGhpcy5wYW5uZXIucGFuKHB2YWwsIHRGcm9tTm93KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJldHVybnMgdGhlIGN1cnJlbnQgdmFsdWUgb2YgcGFuUG9zaXRpb24gLCBiZXR3ZWVuIExlZnQgKC0xKSBhbmQgUmlnaHQgKDEpXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZ2V0UGFuXG4gICAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgICAqXG4gICAgICogIEByZXR1cm5zIHtudW1iZXJ9IHBhblBvc2l0aW9uIG9mIG9zY2lsbGF0b3IgLCBiZXR3ZWVuIExlZnQgKC0xKSBhbmQgUmlnaHQgKDEpXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRQYW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UGFuKCkge1xuICAgICAgcmV0dXJuIHRoaXMucGFuUG9zaXRpb247XG4gICAgfSBcblxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIHZhciBpbmRleCA9IG1haW4uc291bmRBcnJheS5pbmRleE9mKHRoaXMpO1xuICAgICAgbWFpbi5zb3VuZEFycmF5LnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgIGlmICh0aGlzLm9zY2lsbGF0b3IpIHtcbiAgICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICB0aGlzLnN0b3Aobm93KTtcbiAgICAgICAgdGhpcy5kaXNjb25uZWN0KCk7XG4gICAgICAgIHRoaXMucGFubmVyID0gbnVsbDtcbiAgICAgICAgdGhpcy5vc2NpbGxhdG9yID0gbnVsbDtcbiAgICAgIH0gXG5cblxuICAgICAgaWYgKHRoaXMub3NjMikge1xuICAgICAgICB0aGlzLm9zYzIuZGlzcG9zZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IHRoZSBwaGFzZSBvZiBhbiBvc2NpbGxhdG9yIGJldHdlZW4gMC4wIGFuZCAxLjAuXG4gICAgICogIEluIHRoaXMgaW1wbGVtZW50YXRpb24sIHBoYXNlIGlzIGEgZGVsYXkgdGltZVxuICAgICAqICBiYXNlZCBvbiB0aGUgb3NjaWxsYXRvcidzIGN1cnJlbnQgZnJlcXVlbmN5LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHBoYXNlXG4gICAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IHBoYXNlIGZsb2F0IGJldHdlZW4gMC4wIGFuZCAxLjBcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInBoYXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBoYXNlKHApIHtcbiAgICAgIHZhciBkZWxheUFtdCA9IHA1LnByb3RvdHlwZS5tYXAocCwgMCwgMS4wLCAwLCAxIC8gdGhpcy5mKTtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgIHRoaXMucGhhc2VBbW91bnQgPSBwO1xuXG4gICAgICBpZiAoIXRoaXMuZE5vZGUpIHtcbiAgICAgICAgdGhpcy5kTm9kZSA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZURlbGF5KCk7IFxuXG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5kaXNjb25uZWN0KCk7XG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5jb25uZWN0KHRoaXMuZE5vZGUpO1xuICAgICAgICB0aGlzLmROb2RlLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xuICAgICAgfSBcblxuXG4gICAgICB0aGlzLmROb2RlLmRlbGF5VGltZS5zZXRWYWx1ZUF0VGltZShkZWxheUFtdCwgbm93KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIEFkZCBhIHZhbHVlIHRvIHRoZSBwNS5Pc2NpbGxhdG9yJ3Mgb3V0cHV0IGFtcGxpdHVkZSxcbiAgICAgKiAgYW5kIHJldHVybiB0aGUgb3NjaWxsYXRvci4gQ2FsbGluZyB0aGlzIG1ldGhvZCBhZ2FpblxuICAgICAqICB3aWxsIG92ZXJyaWRlIHRoZSBpbml0aWFsIGFkZCgpIHdpdGggYSBuZXcgdmFsdWUuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgYWRkXG4gICAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgICAqICBAcGFyYW0ge051bWJlcn0gbnVtYmVyIENvbnN0YW50IG51bWJlciB0byBhZGRcbiAgICAgKiAgQHJldHVybiB7cDUuT3NjaWxsYXRvcn0gT3NjaWxsYXRvciBSZXR1cm5zIHRoaXMgb3NjaWxsYXRvclxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpdGggc2NhbGVkIG91dHB1dFxuICAgICAqXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJhZGRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkKG51bSkge1xuICAgICAgdmFyIGFkZCA9IG5ldyBBZGRfZGVmYXVsdC5hKG51bSk7XG4gICAgICB2YXIgdGhpc0NoYWluID0gdGhpcy5tYXRoT3BzLmxlbmd0aCAtIDE7XG4gICAgICB2YXIgbmV4dENoYWluID0gdGhpcy5vdXRwdXQ7XG4gICAgICByZXR1cm4gc2lnQ2hhaW4odGhpcywgYWRkLCB0aGlzQ2hhaW4sIG5leHRDaGFpbiwgQWRkX2RlZmF1bHQuYSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBNdWx0aXBseSB0aGUgcDUuT3NjaWxsYXRvcidzIG91dHB1dCBhbXBsaXR1ZGVcbiAgICAgKiAgYnkgYSBmaXhlZCB2YWx1ZSAoaS5lLiB0dXJuIGl0IHVwISkuIENhbGxpbmcgdGhpcyBtZXRob2RcbiAgICAgKiAgYWdhaW4gd2lsbCBvdmVycmlkZSB0aGUgaW5pdGlhbCBtdWx0KCkgd2l0aCBhIG5ldyB2YWx1ZS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBtdWx0XG4gICAgICogIEBmb3IgcDUuT3NjaWxsYXRvclxuICAgICAqICBAcGFyYW0ge051bWJlcn0gbnVtYmVyIENvbnN0YW50IG51bWJlciB0byBtdWx0aXBseVxuICAgICAqICBAcmV0dXJuIHtwNS5Pc2NpbGxhdG9yfSBPc2NpbGxhdG9yIFJldHVybnMgdGhpcyBvc2NpbGxhdG9yXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBtdWx0aXBsaWVkIG91dHB1dFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwibXVsdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBtdWx0KG51bSkge1xuICAgICAgdmFyIG11bHQgPSBuZXcgTXVsdGlwbHlfZGVmYXVsdC5hKG51bSk7XG4gICAgICB2YXIgdGhpc0NoYWluID0gdGhpcy5tYXRoT3BzLmxlbmd0aCAtIDE7XG4gICAgICB2YXIgbmV4dENoYWluID0gdGhpcy5vdXRwdXQ7XG4gICAgICByZXR1cm4gc2lnQ2hhaW4odGhpcywgbXVsdCwgdGhpc0NoYWluLCBuZXh0Q2hhaW4sIE11bHRpcGx5X2RlZmF1bHQuYSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTY2FsZSB0aGlzIG9zY2lsbGF0b3IncyBhbXBsaXR1ZGUgdmFsdWVzIHRvIGEgZ2l2ZW5cbiAgICAgKiAgcmFuZ2UsIGFuZCByZXR1cm4gdGhlIG9zY2lsbGF0b3IuIENhbGxpbmcgdGhpcyBtZXRob2RcbiAgICAgKiAgYWdhaW4gd2lsbCBvdmVycmlkZSB0aGUgaW5pdGlhbCBzY2FsZSgpIHdpdGggbmV3IHZhbHVlcy5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzY2FsZVxuICAgICAqICBAZm9yIHA1Lk9zY2lsbGF0b3JcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBpbk1pbiAgaW5wdXQgcmFuZ2UgbWludW11bVxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IGluTWF4ICBpbnB1dCByYW5nZSBtYXhpbXVtXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gb3V0TWluIGlucHV0IHJhbmdlIG1pbnVtdW1cbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBvdXRNYXggaW5wdXQgcmFuZ2UgbWF4aW11bVxuICAgICAqICBAcmV0dXJuIHtwNS5Pc2NpbGxhdG9yfSBPc2NpbGxhdG9yIFJldHVybnMgdGhpcyBvc2NpbGxhdG9yXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBzY2FsZWQgb3V0cHV0XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzY2FsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzY2FsZShpbk1pbiwgaW5NYXgsIG91dE1pbiwgb3V0TWF4KSB7XG4gICAgICB2YXIgbWFwT3V0TWluLCBtYXBPdXRNYXg7XG5cbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSA0KSB7XG4gICAgICAgIG1hcE91dE1pbiA9IHA1LnByb3RvdHlwZS5tYXAob3V0TWluLCBpbk1pbiwgaW5NYXgsIDAsIDEpIC0gMC41OyBcblxuICAgICAgICBtYXBPdXRNYXggPSBwNS5wcm90b3R5cGUubWFwKG91dE1heCwgaW5NaW4sIGluTWF4LCAwLCAxKSAtIDAuNTsgXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtYXBPdXRNaW4gPSBhcmd1bWVudHNbMF07XG4gICAgICAgIG1hcE91dE1heCA9IGFyZ3VtZW50c1sxXTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNjYWxlID0gbmV3IFNjYWxlX2RlZmF1bHQuYShtYXBPdXRNaW4sIG1hcE91dE1heCk7XG4gICAgICB2YXIgdGhpc0NoYWluID0gdGhpcy5tYXRoT3BzLmxlbmd0aCAtIDE7XG4gICAgICB2YXIgbmV4dENoYWluID0gdGhpcy5vdXRwdXQ7XG4gICAgICByZXR1cm4gc2lnQ2hhaW4odGhpcywgc2NhbGUsIHRoaXNDaGFpbiwgbmV4dENoYWluLCBTY2FsZV9kZWZhdWx0LmEpOyBcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gT3NjaWxsYXRvcjtcbn0oKTsgXG5cbi8qKlxuICogIENvbnN0cnVjdG9yOiA8Y29kZT5uZXcgcDUuU2luT3NjKCk8L2NvZGU+LlxuICogIFRoaXMgY3JlYXRlcyBhIFNpbmUgV2F2ZSBPc2NpbGxhdG9yIGFuZCBpc1xuICogIGVxdWl2YWxlbnQgdG8gPGNvZGU+IG5ldyBwNS5Pc2NpbGxhdG9yKCdzaW5lJylcbiAqICA8L2NvZGU+IG9yIGNyZWF0aW5nIGEgcDUuT3NjaWxsYXRvciBhbmQgdGhlbiBjYWxsaW5nXG4gKiAgaXRzIG1ldGhvZCA8Y29kZT5zZXRUeXBlKCdzaW5lJyk8L2NvZGU+LlxuICogIFNlZSBwNS5Pc2NpbGxhdG9yIGZvciBtZXRob2RzLlxuICpcbiAqICBAY2xhc3MgIHA1LlNpbk9zY1xuICogIEBjb25zdHJ1Y3RvclxuICogIEBleHRlbmRzIHA1Lk9zY2lsbGF0b3JcbiAqICBAcGFyYW0ge051bWJlcn0gW2ZyZXFdIFNldCB0aGUgZnJlcXVlbmN5XG4gKi9cblxuXG52YXIgU2luT3NjID1cbmZ1bmN0aW9uIChfT3NjaWxsYXRvcikge1xuICBfaW5oZXJpdHMoU2luT3NjLCBfT3NjaWxsYXRvcik7XG5cbiAgZnVuY3Rpb24gU2luT3NjKGZyZXEpIHtcbiAgICBvc2NpbGxhdG9yX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNpbk9zYyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFNpbk9zYykuY2FsbCh0aGlzLCBmcmVxLCAnc2luZScpKTtcbiAgfVxuXG4gIHJldHVybiBTaW5Pc2M7XG59KG9zY2lsbGF0b3JfT3NjaWxsYXRvcik7XG4vKipcbiAqICBDb25zdHJ1Y3RvcjogPGNvZGU+bmV3IHA1LlRyaU9zYygpPC9jb2RlPi5cbiAqICBUaGlzIGNyZWF0ZXMgYSBUcmlhbmdsZSBXYXZlIE9zY2lsbGF0b3IgYW5kIGlzXG4gKiAgZXF1aXZhbGVudCB0byA8Y29kZT5uZXcgcDUuT3NjaWxsYXRvcigndHJpYW5nbGUnKVxuICogIDwvY29kZT4gb3IgY3JlYXRpbmcgYSBwNS5Pc2NpbGxhdG9yIGFuZCB0aGVuIGNhbGxpbmdcbiAqICBpdHMgbWV0aG9kIDxjb2RlPnNldFR5cGUoJ3RyaWFuZ2xlJyk8L2NvZGU+LlxuICogIFNlZSBwNS5Pc2NpbGxhdG9yIGZvciBtZXRob2RzLlxuICpcbiAqICBAY2xhc3MgIHA1LlRyaU9zY1xuICogIEBjb25zdHJ1Y3RvclxuICogIEBleHRlbmRzIHA1Lk9zY2lsbGF0b3JcbiAqICBAcGFyYW0ge051bWJlcn0gW2ZyZXFdIFNldCB0aGUgZnJlcXVlbmN5XG4gKi9cblxuXG52YXIgVHJpT3NjID1cbmZ1bmN0aW9uIChfT3NjaWxsYXRvcjIpIHtcbiAgX2luaGVyaXRzKFRyaU9zYywgX09zY2lsbGF0b3IyKTtcblxuICBmdW5jdGlvbiBUcmlPc2MoZnJlcSkge1xuICAgIG9zY2lsbGF0b3JfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJpT3NjKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoVHJpT3NjKS5jYWxsKHRoaXMsIGZyZXEsICd0cmlhbmdsZScpKTtcbiAgfVxuXG4gIHJldHVybiBUcmlPc2M7XG59KG9zY2lsbGF0b3JfT3NjaWxsYXRvcik7XG4vKipcbiAqICBDb25zdHJ1Y3RvcjogPGNvZGU+bmV3IHA1LlNhd09zYygpPC9jb2RlPi5cbiAqICBUaGlzIGNyZWF0ZXMgYSBTYXdUb290aCBXYXZlIE9zY2lsbGF0b3IgYW5kIGlzXG4gKiAgZXF1aXZhbGVudCB0byA8Y29kZT4gbmV3IHA1Lk9zY2lsbGF0b3IoJ3Nhd3Rvb3RoJylcbiAqICA8L2NvZGU+IG9yIGNyZWF0aW5nIGEgcDUuT3NjaWxsYXRvciBhbmQgdGhlbiBjYWxsaW5nXG4gKiAgaXRzIG1ldGhvZCA8Y29kZT5zZXRUeXBlKCdzYXd0b290aCcpPC9jb2RlPi5cbiAqICBTZWUgcDUuT3NjaWxsYXRvciBmb3IgbWV0aG9kcy5cbiAqXG4gKiAgQGNsYXNzICBwNS5TYXdPc2NcbiAqICBAY29uc3RydWN0b3JcbiAqICBAZXh0ZW5kcyBwNS5Pc2NpbGxhdG9yXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFtmcmVxXSBTZXQgdGhlIGZyZXF1ZW5jeVxuICovXG5cblxudmFyIFNhd09zYyA9XG5mdW5jdGlvbiAoX09zY2lsbGF0b3IzKSB7XG4gIF9pbmhlcml0cyhTYXdPc2MsIF9Pc2NpbGxhdG9yMyk7XG5cbiAgZnVuY3Rpb24gU2F3T3NjKGZyZXEpIHtcbiAgICBvc2NpbGxhdG9yX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNhd09zYyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFNhd09zYykuY2FsbCh0aGlzLCBmcmVxLCAnc2F3dG9vdGgnKSk7XG4gIH1cblxuICByZXR1cm4gU2F3T3NjO1xufShvc2NpbGxhdG9yX09zY2lsbGF0b3IpO1xuLyoqXG4gKiAgQ29uc3RydWN0b3I6IDxjb2RlPm5ldyBwNS5TcXJPc2MoKTwvY29kZT4uXG4gKiAgVGhpcyBjcmVhdGVzIGEgU3F1YXJlIFdhdmUgT3NjaWxsYXRvciBhbmQgaXNcbiAqICBlcXVpdmFsZW50IHRvIDxjb2RlPiBuZXcgcDUuT3NjaWxsYXRvcignc3F1YXJlJylcbiAqICA8L2NvZGU+IG9yIGNyZWF0aW5nIGEgcDUuT3NjaWxsYXRvciBhbmQgdGhlbiBjYWxsaW5nXG4gKiAgaXRzIG1ldGhvZCA8Y29kZT5zZXRUeXBlKCdzcXVhcmUnKTwvY29kZT4uXG4gKiAgU2VlIHA1Lk9zY2lsbGF0b3IgZm9yIG1ldGhvZHMuXG4gKlxuICogIEBjbGFzcyAgcDUuU3FyT3NjXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4dGVuZHMgcDUuT3NjaWxsYXRvclxuICogIEBwYXJhbSB7TnVtYmVyfSBbZnJlcV0gU2V0IHRoZSBmcmVxdWVuY3lcbiAqL1xuXG5cbnZhciBTcXJPc2MgPVxuZnVuY3Rpb24gKF9Pc2NpbGxhdG9yNCkge1xuICBfaW5oZXJpdHMoU3FyT3NjLCBfT3NjaWxsYXRvcjQpO1xuXG4gIGZ1bmN0aW9uIFNxck9zYyhmcmVxKSB7XG4gICAgb3NjaWxsYXRvcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBTcXJPc2MpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihTcXJPc2MpLmNhbGwodGhpcywgZnJlcSwgJ3NxdWFyZScpKTtcbiAgfVxuXG4gIHJldHVybiBTcXJPc2M7XG59KG9zY2lsbGF0b3JfT3NjaWxsYXRvcik7XG5cbiB2YXIgb3NjaWxsYXRvciA9IChvc2NpbGxhdG9yX09zY2lsbGF0b3IpO1xuXG52YXIgVGltZWxpbmVTaWduYWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpO1xudmFyIFRpbWVsaW5lU2lnbmFsX2RlZmF1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm4oVGltZWxpbmVTaWduYWwpO1xuXG5cblxuXG5cblxuLyoqXG4gKiAgPHA+RW52ZWxvcGVzIGFyZSBwcmUtZGVmaW5lZCBhbXBsaXR1ZGUgZGlzdHJpYnV0aW9uIG92ZXIgdGltZS5cbiAqICBUeXBpY2FsbHksIGVudmVsb3BlcyBhcmUgdXNlZCB0byBjb250cm9sIHRoZSBvdXRwdXQgdm9sdW1lXG4gKiAgb2YgYW4gb2JqZWN0LCBhIHNlcmllcyBvZiBmYWRlcyByZWZlcnJlZCB0byBhcyBBdHRhY2ssIERlY2F5LFxuICogIFN1c3RhaW4gYW5kIFJlbGVhc2UgKFxuICogIDxhIGhyZWY9XCJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2UvZWEvQURTUl9wYXJhbWV0ZXIuc3ZnXCI+QURTUjwvYT5cbiAqICApLiBFbnZlbG9wZXMgY2FuIGFsc28gY29udHJvbCBvdGhlciBXZWIgQXVkaW8gUGFyYW1ldGVyc+KAlGZvciBleGFtcGxlLCBhIHA1LkVudmVsb3BlIGNhblxuICogIGNvbnRyb2wgYW4gT3NjaWxsYXRvcidzIGZyZXF1ZW5jeSBsaWtlIHRoaXM6IDxjb2RlPm9zYy5mcmVxKGVudik8L2NvZGU+LjwvcD5cbiAqICA8cD5Vc2UgPGNvZGU+PGEgaHJlZj1cIiMvcDUuRW52ZWxvcGUvc2V0UmFuZ2VcIj5zZXRSYW5nZTwvYT48L2NvZGU+IHRvIGNoYW5nZSB0aGUgYXR0YWNrL3JlbGVhc2UgbGV2ZWwuXG4gKiAgVXNlIDxjb2RlPjxhIGhyZWY9XCIjL3A1LkVudmVsb3BlL3NldEFEU1JcIj5zZXRBRFNSPC9hPjwvY29kZT4gdG8gY2hhbmdlIGF0dGFja1RpbWUsIGRlY2F5VGltZSwgc3VzdGFpblBlcmNlbnQgYW5kIHJlbGVhc2VUaW1lLjwvcD5cbiAqICA8cD5Vc2UgdGhlIDxjb2RlPjxhIGhyZWY9XCIjL3A1LkVudmVsb3BlL3BsYXlcIj5wbGF5PC9hPjwvY29kZT4gbWV0aG9kIHRvIHBsYXkgdGhlIGVudGlyZSBlbnZlbG9wZSxcbiAqICB0aGUgPGNvZGU+PGEgaHJlZj1cIiMvcDUuRW52ZWxvcGUvcmFtcFwiPnJhbXA8L2E+PC9jb2RlPiBtZXRob2QgZm9yIGEgcGluZ2FibGUgdHJpZ2dlcixcbiAqICBvciA8Y29kZT48YSBocmVmPVwiIy9wNS5FbnZlbG9wZS90cmlnZ2VyQXR0YWNrXCI+dHJpZ2dlckF0dGFjazwvYT48L2NvZGU+L1xuICogIDxjb2RlPjxhIGhyZWY9XCIjL3A1LkVudmVsb3BlL3RyaWdnZXJSZWxlYXNlXCI+dHJpZ2dlclJlbGVhc2U8L2E+PC9jb2RlPiB0byB0cmlnZ2VyIG5vdGVPbi9ub3RlT2ZmLjwvcD5cbiAqXG4gKiAgQGNsYXNzIHA1LkVudmVsb3BlXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCB0MSA9IDAuMTsgLy8gYXR0YWNrIHRpbWUgaW4gc2Vjb25kc1xuICogIGxldCBsMSA9IDAuNzsgLy8gYXR0YWNrIGxldmVsIDAuMCB0byAxLjBcbiAqICBsZXQgdDIgPSAwLjM7IC8vIGRlY2F5IHRpbWUgaW4gc2Vjb25kc1xuICogIGxldCBsMiA9IDAuMTsgLy8gZGVjYXkgbGV2ZWwgIDAuMCB0byAxLjBcbiAqXG4gKiAgbGV0IGVudjtcbiAqICBsZXQgdHJpT3NjO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dCgndGFwIHRvIHBsYXknLCAyMCwgMjApO1xuICogICAgY252Lm1vdXNlUHJlc3NlZChwbGF5U291bmQpO1xuICpcbiAqICAgIGVudiA9IG5ldyBwNS5FbnZlbG9wZSh0MSwgbDEsIHQyLCBsMik7XG4gKiAgICB0cmlPc2MgPSBuZXcgcDUuT3NjaWxsYXRvcigndHJpYW5nbGUnKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHBsYXlTb3VuZCgpIHtcbiAqICAgIC8vIHN0YXJ0aW5nIHRoZSBvc2NpbGxhdG9yIGVuc3VyZXMgdGhhdCBhdWRpbyBpcyBlbmFibGVkLlxuICogICAgdHJpT3NjLnN0YXJ0KCk7XG4gKiAgICBlbnYucGxheSh0cmlPc2MpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxucDUuRW52ZWxvcGUgPSBmdW5jdGlvbiAodDEsIGwxLCB0MiwgbDIsIHQzLCBsMykge1xuICAvKipcbiAgICogVGltZSB1bnRpbCBlbnZlbG9wZSByZWFjaGVzIGF0dGFja0xldmVsXG4gICAqIEBwcm9wZXJ0eSBhdHRhY2tUaW1lXG4gICAqL1xuICB0aGlzLmFUaW1lID0gdDEgfHwgMC4xO1xuICAvKipcbiAgICogTGV2ZWwgb25jZSBhdHRhY2sgaXMgY29tcGxldGUuXG4gICAqIEBwcm9wZXJ0eSBhdHRhY2tMZXZlbFxuICAgKi9cblxuICB0aGlzLmFMZXZlbCA9IGwxIHx8IDE7XG4gIC8qKlxuICAgKiBUaW1lIHVudGlsIGVudmVsb3BlIHJlYWNoZXMgZGVjYXlMZXZlbC5cbiAgICogQHByb3BlcnR5IGRlY2F5VGltZVxuICAgKi9cblxuICB0aGlzLmRUaW1lID0gdDIgfHwgMC41O1xuICAvKipcbiAgICogTGV2ZWwgYWZ0ZXIgZGVjYXkuIFRoZSBlbnZlbG9wZSB3aWxsIHN1c3RhaW4gaGVyZSB1bnRpbCBpdCBpcyByZWxlYXNlZC5cbiAgICogQHByb3BlcnR5IGRlY2F5TGV2ZWxcbiAgICovXG5cbiAgdGhpcy5kTGV2ZWwgPSBsMiB8fCAwO1xuICAvKipcbiAgICogRHVyYXRpb24gb2YgdGhlIHJlbGVhc2UgcG9ydGlvbiBvZiB0aGUgZW52ZWxvcGUuXG4gICAqIEBwcm9wZXJ0eSByZWxlYXNlVGltZVxuICAgKi9cblxuICB0aGlzLnJUaW1lID0gdDMgfHwgMDtcbiAgLyoqXG4gICAqIExldmVsIGF0IHRoZSBlbmQgb2YgdGhlIHJlbGVhc2UuXG4gICAqIEBwcm9wZXJ0eSByZWxlYXNlTGV2ZWxcbiAgICovXG5cbiAgdGhpcy5yTGV2ZWwgPSBsMyB8fCAwO1xuICB0aGlzLl9yYW1wSGlnaFBlcmNlbnRhZ2UgPSAwLjk4O1xuICB0aGlzLl9yYW1wTG93UGVyY2VudGFnZSA9IDAuMDI7XG4gIHRoaXMub3V0cHV0ID0gbWFpbi5hdWRpb2NvbnRleHQuY3JlYXRlR2FpbigpO1xuICB0aGlzLmNvbnRyb2wgPSBuZXcgVGltZWxpbmVTaWduYWxfZGVmYXVsdC5hKCk7XG5cbiAgdGhpcy5faW5pdCgpOyBcblxuXG4gIHRoaXMuY29udHJvbC5jb25uZWN0KHRoaXMub3V0cHV0KTsgXG5cbiAgdGhpcy5jb25uZWN0aW9uID0gbnVsbDsgXG5cbiAgdGhpcy5tYXRoT3BzID0gW3RoaXMuY29udHJvbF07IFxuXG4gIHRoaXMuaXNFeHBvbmVudGlhbCA9IGZhbHNlOyBcblxuICB0aGlzLnNvdXJjZVRvQ2xlYXIgPSBudWxsOyBcblxuICB0aGlzLndhc1RyaWdnZXJlZCA9IGZhbHNlOyBcblxuICBtYWluLnNvdW5kQXJyYXkucHVzaCh0aGlzKTtcbn07IFxuXG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICB2YXIgdCA9IG5vdztcbiAgdGhpcy5jb250cm9sLnNldFRhcmdldEF0VGltZSgwLjAwMDAxLCB0LCAwLjAwMSk7IFxuXG4gIHRoaXMuX3NldFJhbXBBRCh0aGlzLmFUaW1lLCB0aGlzLmRUaW1lKTtcbn07XG4vKipcbiAqICBSZXNldCB0aGUgZW52ZWxvcGUgd2l0aCBhIHNlcmllcyBvZiB0aW1lL3ZhbHVlIHBhaXJzLlxuICpcbiAqICBAbWV0aG9kICBzZXRcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IGF0dGFja1RpbWUgICAgIFRpbWUgKGluIHNlY29uZHMpIGJlZm9yZSBsZXZlbFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFjaGVzIGF0dGFja0xldmVsXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IGF0dGFja0xldmVsICAgIFR5cGljYWxseSBhbiBhbXBsaXR1ZGUgYmV0d2VlblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLjAgYW5kIDEuMFxuICogIEBwYXJhbSB7TnVtYmVyfSBkZWNheVRpbWUgICAgICBUaW1lXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IGRlY2F5TGV2ZWwgICBBbXBsaXR1ZGUgKEluIGEgc3RhbmRhcmQgQURTUiBlbnZlbG9wZSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjYXlMZXZlbCA9IHN1c3RhaW5MZXZlbClcbiAqICBAcGFyYW0ge051bWJlcn0gcmVsZWFzZVRpbWUgICBSZWxlYXNlIFRpbWUgKGluIHNlY29uZHMpXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IHJlbGVhc2VMZXZlbCAgQW1wbGl0dWRlXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBhdHRhY2tUaW1lO1xuICogIGxldCBsMSA9IDAuNzsgLy8gYXR0YWNrIGxldmVsIDAuMCB0byAxLjBcbiAqICBsZXQgdDIgPSAwLjM7IC8vIGRlY2F5IHRpbWUgaW4gc2Vjb25kc1xuICogIGxldCBsMiA9IDAuMTsgLy8gZGVjYXkgbGV2ZWwgIDAuMCB0byAxLjBcbiAqICBsZXQgbDMgPSAwLjI7IC8vIHJlbGVhc2UgdGltZSBpbiBzZWNvbmRzXG4gKlxuICogIGxldCBlbnYsIHRyaU9zYztcbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheVNvdW5kKTtcbiAqXG4gKiAgICBlbnYgPSBuZXcgcDUuRW52ZWxvcGUoKTtcbiAqICAgIHRyaU9zYyA9IG5ldyBwNS5Pc2NpbGxhdG9yKCd0cmlhbmdsZScpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHQoJ3RhcCBoZXJlIHRvIHBsYXknLCA1LCAyMCk7XG4gKlxuICogICAgYXR0YWNrVGltZSA9IG1hcChtb3VzZVgsIDAsIHdpZHRoLCAwLjAsIDEuMCk7XG4gKiAgICB0ZXh0KCdhdHRhY2sgdGltZTogJyArIGF0dGFja1RpbWUsIDUsIGhlaWdodCAtIDIwKTtcbiAqICB9XG4gKlxuICogIC8vIG1vdXNlQ2xpY2sgdHJpZ2dlcnMgZW52ZWxvcGUgaWYgb3ZlciBjYW52YXNcbiAqICBmdW5jdGlvbiBwbGF5U291bmQoKSB7XG4gKiAgICBlbnYuc2V0KGF0dGFja1RpbWUsIGwxLCB0MiwgbDIsIGwzKTtcbiAqXG4gKiAgICB0cmlPc2Muc3RhcnQoKTtcbiAqICAgIGVudi5wbGF5KHRyaU9zYyk7XG4gKiAgfVxuICogIDwvY29kZT48L2Rpdj5cbiAqXG4gKi9cblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKHQxLCBsMSwgdDIsIGwyLCB0MywgbDMpIHtcbiAgdGhpcy5hVGltZSA9IHQxO1xuICB0aGlzLmFMZXZlbCA9IGwxO1xuICB0aGlzLmRUaW1lID0gdDIgfHwgMDtcbiAgdGhpcy5kTGV2ZWwgPSBsMiB8fCAwO1xuICB0aGlzLnJUaW1lID0gdDMgfHwgMDtcbiAgdGhpcy5yTGV2ZWwgPSBsMyB8fCAwOyBcblxuICB0aGlzLl9zZXRSYW1wQUQodDEsIHQyKTtcbn07XG4vKipcbiAqICBTZXQgdmFsdWVzIGxpa2UgYSB0cmFkaXRpb25hbFxuICogIDxhIGhyZWY9XCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9TeW50aGVzaXplciMvbWVkaWEvRmlsZTpBRFNSX3BhcmFtZXRlci5zdmdcIj5cbiAqICBBRFNSIGVudmVsb3BlXG4gKiAgPC9hPi5cbiAqXG4gKiAgQG1ldGhvZCAgc2V0QURTUlxuICogIEBmb3IgcDUuRW52ZWxvcGVcbiAqICBAcGFyYW0ge051bWJlcn0gYXR0YWNrVGltZSAgICBUaW1lIChpbiBzZWNvbmRzIGJlZm9yZSBlbnZlbG9wZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgQXR0YWNrIExldmVsXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFtkZWNheVRpbWVdICAgIFRpbWUgKGluIHNlY29uZHMpIGJlZm9yZSBlbnZlbG9wZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgRGVjYXkvU3VzdGFpbiBMZXZlbFxuICogIEBwYXJhbSB7TnVtYmVyfSBbc3VzUmF0aW9dICAgIFJhdGlvIGJldHdlZW4gYXR0YWNrTGV2ZWwgYW5kIHJlbGVhc2VMZXZlbCwgb24gYSBzY2FsZSBmcm9tIDAgdG8gMSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZSAxLjAgPSBhdHRhY2tMZXZlbCwgMC4wID0gcmVsZWFzZUxldmVsLlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBzdXNSYXRpbyBkZXRlcm1pbmVzIHRoZSBkZWNheUxldmVsIGFuZCB0aGUgbGV2ZWwgYXQgd2hpY2ggdGhlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VzdGFpbiBwb3J0aW9uIG9mIHRoZSBlbnZlbG9wZSB3aWxsIHN1c3RhaW4uXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yIGV4YW1wbGUsIGlmIGF0dGFja0xldmVsIGlzIDAuNCwgcmVsZWFzZUxldmVsIGlzIDAsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIHN1c0FtdCBpcyAwLjUsIHRoZSBkZWNheUxldmVsIHdvdWxkIGJlIDAuMi4gSWYgYXR0YWNrTGV2ZWwgaXNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmNyZWFzZWQgdG8gMS4wICh1c2luZyA8Y29kZT5zZXRSYW5nZTwvY29kZT4pLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gZGVjYXlMZXZlbCB3b3VsZCBpbmNyZWFzZSBwcm9wb3J0aW9uYWxseSwgdG8gYmVjb21lIDAuNS5cbiAqICBAcGFyYW0ge051bWJlcn0gW3JlbGVhc2VUaW1lXSAgIFRpbWUgaW4gc2Vjb25kcyBmcm9tIG5vdyAoZGVmYXVsdHMgdG8gMClcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IGF0dGFja0xldmVsID0gMS4wO1xuICogIGxldCByZWxlYXNlTGV2ZWwgPSAwO1xuICpcbiAqICBsZXQgYXR0YWNrVGltZSA9IDAuMDAxO1xuICogIGxldCBkZWNheVRpbWUgPSAwLjI7XG4gKiAgbGV0IHN1c1BlcmNlbnQgPSAwLjI7XG4gKiAgbGV0IHJlbGVhc2VUaW1lID0gMC41O1xuICpcbiAqICBsZXQgZW52LCB0cmlPc2M7XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlFbnYpO1xuICpcbiAqICAgIGVudiA9IG5ldyBwNS5FbnZlbG9wZSgpO1xuICogICAgdHJpT3NjID0gbmV3IHA1Lk9zY2lsbGF0b3IoJ3RyaWFuZ2xlJyk7XG4gKiAgICB0cmlPc2MuYW1wKGVudik7XG4gKiAgICB0cmlPc2MuZnJlcSgyMjApO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHQoJ3RhcCBoZXJlIHRvIHBsYXknLCA1LCAyMCk7XG4gKiAgICBhdHRhY2tUaW1lID0gbWFwKG1vdXNlWCwgMCwgd2lkdGgsIDAsIDEuMCk7XG4gKiAgICB0ZXh0KCdhdHRhY2sgdGltZTogJyArIGF0dGFja1RpbWUsIDUsIGhlaWdodCAtIDQwKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHBsYXlFbnYoKSB7XG4gKiAgICB0cmlPc2Muc3RhcnQoKTtcbiAqICAgIGVudi5zZXRBRFNSKGF0dGFja1RpbWUsIGRlY2F5VGltZSwgc3VzUGVyY2VudCwgcmVsZWFzZVRpbWUpO1xuICogICAgZW52LnBsYXkoKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cblxucDUuRW52ZWxvcGUucHJvdG90eXBlLnNldEFEU1IgPSBmdW5jdGlvbiAoYVRpbWUsIGRUaW1lLCBzUGVyY2VudCwgclRpbWUpIHtcbiAgdGhpcy5hVGltZSA9IGFUaW1lO1xuICB0aGlzLmRUaW1lID0gZFRpbWUgfHwgMDsgXG5cbiAgdGhpcy5zUGVyY2VudCA9IHNQZXJjZW50IHx8IDA7XG4gIHRoaXMuZExldmVsID0gdHlwZW9mIHNQZXJjZW50ICE9PSAndW5kZWZpbmVkJyA/IHNQZXJjZW50ICogKHRoaXMuYUxldmVsIC0gdGhpcy5yTGV2ZWwpICsgdGhpcy5yTGV2ZWwgOiAwO1xuICB0aGlzLnJUaW1lID0gclRpbWUgfHwgMDsgXG5cbiAgdGhpcy5fc2V0UmFtcEFEKGFUaW1lLCBkVGltZSk7XG59O1xuLyoqXG4gKiAgU2V0IG1heCAoYXR0YWNrTGV2ZWwpIGFuZCBtaW4gKHJlbGVhc2VMZXZlbCkgb2YgZW52ZWxvcGUuXG4gKlxuICogIEBtZXRob2QgIHNldFJhbmdlXG4gKiAgQGZvciBwNS5FbnZlbG9wZVxuICogIEBwYXJhbSB7TnVtYmVyfSBhTGV2ZWwgYXR0YWNrIGxldmVsIChkZWZhdWx0cyB0byAxKVxuICogIEBwYXJhbSB7TnVtYmVyfSByTGV2ZWwgcmVsZWFzZSBsZXZlbCAoZGVmYXVsdHMgdG8gMClcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IGF0dGFja0xldmVsID0gMS4wO1xuICogIGxldCByZWxlYXNlTGV2ZWwgPSAwO1xuICpcbiAqICBsZXQgYXR0YWNrVGltZSA9IDAuMDAxO1xuICogIGxldCBkZWNheVRpbWUgPSAwLjI7XG4gKiAgbGV0IHN1c1BlcmNlbnQgPSAwLjI7XG4gKiAgbGV0IHJlbGVhc2VUaW1lID0gMC41O1xuICpcbiAqICBsZXQgZW52LCB0cmlPc2M7XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlFbnYpO1xuICpcbiAqICAgIGVudiA9IG5ldyBwNS5FbnZlbG9wZSgpO1xuICogICAgdHJpT3NjID0gbmV3IHA1Lk9zY2lsbGF0b3IoJ3RyaWFuZ2xlJyk7XG4gKiAgICB0cmlPc2MuYW1wKGVudik7XG4gKiAgICB0cmlPc2MuZnJlcSgyMjApO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHQoJ3RhcCBoZXJlIHRvIHBsYXknLCA1LCAyMCk7XG4gKiAgICBhdHRhY2tMZXZlbCA9IG1hcChtb3VzZVksIGhlaWdodCwgMCwgMCwgMS4wKTtcbiAqICAgIHRleHQoJ2F0dGFjayBsZXZlbDogJyArIGF0dGFja0xldmVsLCA1LCBoZWlnaHQgLSAyMCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBwbGF5RW52KCkge1xuICogICAgdHJpT3NjLnN0YXJ0KCk7XG4gKiAgICBlbnYuc2V0UmFuZ2UoYXR0YWNrTGV2ZWwsIHJlbGVhc2VMZXZlbCk7XG4gKiAgICBlbnYucGxheSgpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUuc2V0UmFuZ2UgPSBmdW5jdGlvbiAoYUxldmVsLCByTGV2ZWwpIHtcbiAgdGhpcy5hTGV2ZWwgPSBhTGV2ZWwgfHwgMTtcbiAgdGhpcy5yTGV2ZWwgPSByTGV2ZWwgfHwgMDsgXG59OyBcblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUuX3NldFJhbXBBRCA9IGZ1bmN0aW9uICh0MSwgdDIpIHtcbiAgdGhpcy5fcmFtcEF0dGFja1RpbWUgPSB0aGlzLmNoZWNrRXhwSW5wdXQodDEpO1xuICB0aGlzLl9yYW1wRGVjYXlUaW1lID0gdGhpcy5jaGVja0V4cElucHV0KHQyKTtcbiAgdmFyIFRDRGVub21pbmF0b3IgPSAxLjA7IFxuXG4gIFRDRGVub21pbmF0b3IgPSBNYXRoLmxvZygxLjAgLyB0aGlzLmNoZWNrRXhwSW5wdXQoMS4wIC0gdGhpcy5fcmFtcEhpZ2hQZXJjZW50YWdlKSk7XG4gIHRoaXMuX3JhbXBBdHRhY2tUQyA9IHQxIC8gdGhpcy5jaGVja0V4cElucHV0KFRDRGVub21pbmF0b3IpO1xuICBUQ0Rlbm9taW5hdG9yID0gTWF0aC5sb2coMS4wIC8gdGhpcy5fcmFtcExvd1BlcmNlbnRhZ2UpO1xuICB0aGlzLl9yYW1wRGVjYXlUQyA9IHQyIC8gdGhpcy5jaGVja0V4cElucHV0KFRDRGVub21pbmF0b3IpO1xufTsgXG5cblxucDUuRW52ZWxvcGUucHJvdG90eXBlLnNldFJhbXBQZXJjZW50YWdlcyA9IGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgdGhpcy5fcmFtcEhpZ2hQZXJjZW50YWdlID0gdGhpcy5jaGVja0V4cElucHV0KHAxKTtcbiAgdGhpcy5fcmFtcExvd1BlcmNlbnRhZ2UgPSB0aGlzLmNoZWNrRXhwSW5wdXQocDIpO1xuICB2YXIgVENEZW5vbWluYXRvciA9IDEuMDsgXG5cbiAgVENEZW5vbWluYXRvciA9IE1hdGgubG9nKDEuMCAvIHRoaXMuY2hlY2tFeHBJbnB1dCgxLjAgLSB0aGlzLl9yYW1wSGlnaFBlcmNlbnRhZ2UpKTtcbiAgdGhpcy5fcmFtcEF0dGFja1RDID0gdGhpcy5fcmFtcEF0dGFja1RpbWUgLyB0aGlzLmNoZWNrRXhwSW5wdXQoVENEZW5vbWluYXRvcik7XG4gIFRDRGVub21pbmF0b3IgPSBNYXRoLmxvZygxLjAgLyB0aGlzLl9yYW1wTG93UGVyY2VudGFnZSk7XG4gIHRoaXMuX3JhbXBEZWNheVRDID0gdGhpcy5fcmFtcERlY2F5VGltZSAvIHRoaXMuY2hlY2tFeHBJbnB1dChUQ0Rlbm9taW5hdG9yKTtcbn07XG4vKipcbiAqICBBc3NpZ24gYSBwYXJhbWV0ZXIgdG8gYmUgY29udHJvbGxlZCBieSB0aGlzIGVudmVsb3BlLlxuICogIElmIGEgcDUuU291bmQgb2JqZWN0IGlzIGdpdmVuLCB0aGVuIHRoZSBwNS5FbnZlbG9wZSB3aWxsIGNvbnRyb2wgaXRzXG4gKiAgb3V0cHV0IGdhaW4uIElmIG11bHRpcGxlIGlucHV0cyBhcmUgcHJvdmlkZWQsIHRoZSBlbnYgd2lsbFxuICogIGNvbnRyb2wgYWxsIG9mIHRoZW0uXG4gKlxuICogIEBtZXRob2QgIHNldElucHV0XG4gKiAgQGZvciBwNS5FbnZlbG9wZVxuICogIEBwYXJhbSAge09iamVjdH0gWy4uLmlucHV0c10gICAgICAgICBBIHA1LnNvdW5kIG9iamVjdCBvclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdlYiBBdWRpbyBQYXJhbS5cbiAqL1xuXG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS5zZXRJbnB1dCA9IGZ1bmN0aW9uICgpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB0aGlzLmNvbm5lY3QoYXJndW1lbnRzW2ldKTtcbiAgfVxufTtcbi8qKlxuICogIFNldCB3aGV0aGVyIHRoZSBlbnZlbG9wZSByYW1wIGlzIGxpbmVhciAoZGVmYXVsdCkgb3IgZXhwb25lbnRpYWwuXG4gKiAgRXhwb25lbnRpYWwgcmFtcHMgY2FuIGJlIHVzZWZ1bCBiZWNhdXNlIHdlIHBlcmNlaXZlIGFtcGxpdHVkZVxuICogIGFuZCBmcmVxdWVuY3kgbG9nYXJpdGhtaWNhbGx5LlxuICpcbiAqICBAbWV0aG9kICBzZXRFeHBcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtIHtCb29sZWFufSBpc0V4cCB0cnVlIGlzIGV4cG9uZW50aWFsLCBmYWxzZSBpcyBsaW5lYXJcbiAqL1xuXG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS5zZXRFeHAgPSBmdW5jdGlvbiAoaXNFeHApIHtcbiAgdGhpcy5pc0V4cG9uZW50aWFsID0gaXNFeHA7XG59OyBcblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUuY2hlY2tFeHBJbnB1dCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICBpZiAodmFsdWUgPD0gMCkge1xuICAgIHZhbHVlID0gMC4wMDAwMDAwMTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn07XG4vKipcbiAqICA8cD5QbGF5IHRlbGxzIHRoZSBlbnZlbG9wZSB0byBzdGFydCBhY3Rpbmcgb24gYSBnaXZlbiBpbnB1dC5cbiAqICBJZiB0aGUgaW5wdXQgaXMgYSBwNS5zb3VuZCBvYmplY3QgKGkuZS4gQXVkaW9JbiwgT3NjaWxsYXRvcixcbiAqICBTb3VuZEZpbGUpLCB0aGVuIEVudmVsb3BlIHdpbGwgY29udHJvbCBpdHMgb3V0cHV0IHZvbHVtZS5cbiAqICBFbnZlbG9wZXMgY2FuIGFsc28gYmUgdXNlZCB0byBjb250cm9sIGFueSA8YSBocmVmPVwiXG4gKiAgaHR0cDovL2RvY3Mud2VicGxhdGZvcm0ub3JnL3dpa2kvYXBpcy93ZWJhdWRpby9BdWRpb1BhcmFtXCI+XG4gKiAgV2ViIEF1ZGlvIEF1ZGlvIFBhcmFtLjwvYT48L3A+XG4gKlxuICogIEBtZXRob2QgIHBsYXlcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtICB7T2JqZWN0fSB1bml0ICAgICAgICAgQSBwNS5zb3VuZCBvYmplY3Qgb3JcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXZWIgQXVkaW8gUGFyYW0uXG4gKiAgQHBhcmFtICB7TnVtYmVyfSBbc3RhcnRUaW1lXSAgdGltZSBmcm9tIG5vdyAoaW4gc2Vjb25kcykgYXQgd2hpY2ggdG8gcGxheVxuICogIEBwYXJhbSAge051bWJlcn0gW3N1c3RhaW5UaW1lXSB0aW1lIHRvIHN1c3RhaW4gYmVmb3JlIHJlbGVhc2luZyB0aGUgZW52ZWxvcGVcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IGF0dGFja0xldmVsID0gMS4wO1xuICogIGxldCByZWxlYXNlTGV2ZWwgPSAwO1xuICpcbiAqICBsZXQgYXR0YWNrVGltZSA9IDAuMDAxO1xuICogIGxldCBkZWNheVRpbWUgPSAwLjI7XG4gKiAgbGV0IHN1c1BlcmNlbnQgPSAwLjI7XG4gKiAgbGV0IHJlbGVhc2VUaW1lID0gMC41O1xuICpcbiAqICBsZXQgZW52LCB0cmlPc2M7XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlFbnYpO1xuICpcbiAqICAgIGVudiA9IG5ldyBwNS5FbnZlbG9wZSgpO1xuICogICAgdHJpT3NjID0gbmV3IHA1Lk9zY2lsbGF0b3IoJ3RyaWFuZ2xlJyk7XG4gKiAgICB0cmlPc2MuYW1wKGVudik7XG4gKiAgICB0cmlPc2MuZnJlcSgyMjApO1xuICogICAgdHJpT3NjLnN0YXJ0KCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBkcmF3KCkge1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dCgndGFwIGhlcmUgdG8gcGxheScsIDUsIDIwKTtcbiAqICAgIGF0dGFja1RpbWUgPSBtYXAobW91c2VYLCAwLCB3aWR0aCwgMCwgMS4wKTtcbiAqICAgIGF0dGFja0xldmVsID0gbWFwKG1vdXNlWSwgaGVpZ2h0LCAwLCAwLCAxLjApO1xuICogICAgdGV4dCgnYXR0YWNrIHRpbWU6ICcgKyBhdHRhY2tUaW1lLCA1LCBoZWlnaHQgLSA0MCk7XG4gKiAgICB0ZXh0KCdhdHRhY2sgbGV2ZWw6ICcgKyBhdHRhY2tMZXZlbCwgNSwgaGVpZ2h0IC0gMjApO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gcGxheUVudigpIHtcbiAqICAgIC8vIGVuc3VyZSB0aGF0IGF1ZGlvIGlzIGVuYWJsZWRcbiAqICAgIHVzZXJTdGFydEF1ZGlvKCk7XG4gKlxuICogICAgZW52LnNldEFEU1IoYXR0YWNrVGltZSwgZGVjYXlUaW1lLCBzdXNQZXJjZW50LCByZWxlYXNlVGltZSk7XG4gKiAgICBlbnYuc2V0UmFuZ2UoYXR0YWNrTGV2ZWwsIHJlbGVhc2VMZXZlbCk7XG4gKiAgICBlbnYucGxheSgpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uICh1bml0LCBzZWNvbmRzRnJvbU5vdywgc3VzVGltZSkge1xuICB2YXIgdEZyb21Ob3cgPSBzZWNvbmRzRnJvbU5vdyB8fCAwO1xuXG4gIGlmICh1bml0KSB7XG4gICAgaWYgKHRoaXMuY29ubmVjdGlvbiAhPT0gdW5pdCkge1xuICAgICAgdGhpcy5jb25uZWN0KHVuaXQpO1xuICAgIH1cbiAgfVxuXG4gIHRoaXMudHJpZ2dlckF0dGFjayh1bml0LCB0RnJvbU5vdyk7XG4gIHRoaXMudHJpZ2dlclJlbGVhc2UodW5pdCwgdEZyb21Ob3cgKyB0aGlzLmFUaW1lICsgdGhpcy5kVGltZSArIH5+c3VzVGltZSk7XG59O1xuLyoqXG4gKiAgVHJpZ2dlciB0aGUgQXR0YWNrLCBhbmQgRGVjYXkgcG9ydGlvbiBvZiB0aGUgRW52ZWxvcGUuXG4gKiAgU2ltaWxhciB0byBob2xkaW5nIGRvd24gYSBrZXkgb24gYSBwaWFubywgYnV0IGl0IHdpbGxcbiAqICBob2xkIHRoZSBzdXN0YWluIGxldmVsIHVudGlsIHlvdSBsZXQgZ28uIElucHV0IGNhbiBiZVxuICogIGFueSBwNS5zb3VuZCBvYmplY3QsIG9yIGEgPGEgaHJlZj1cIlxuICogIGh0dHA6Ly9kb2NzLndlYnBsYXRmb3JtLm9yZy93aWtpL2FwaXMvd2ViYXVkaW8vQXVkaW9QYXJhbVwiPlxuICogIFdlYiBBdWRpbyBQYXJhbTwvYT4uXG4gKlxuICogIEBtZXRob2QgIHRyaWdnZXJBdHRhY2tcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtICB7T2JqZWN0fSB1bml0IHA1LnNvdW5kIE9iamVjdCBvciBXZWIgQXVkaW8gUGFyYW1cbiAqICBAcGFyYW0gIHtOdW1iZXJ9IHNlY29uZHNGcm9tTm93IHRpbWUgZnJvbSBub3cgKGluIHNlY29uZHMpXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBhdHRhY2tUaW1lID0gMC4wMDE7XG4gKiAgbGV0IGRlY2F5VGltZSA9IDAuMjtcbiAqICBsZXQgc3VzUGVyY2VudCA9IDAuMztcbiAqICBsZXQgcmVsZWFzZVRpbWUgPSAwLjQ7XG4gKiAgbGV0IGVudiwgdHJpT3NjO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dEFsaWduKENFTlRFUik7XG4gKiAgICB0ZXh0U2l6ZSgxMCk7XG4gKiAgICB0ZXh0KCd0YXAgdG8gdHJpZ2dlckF0dGFjaycsIHdpZHRoLzIsIGhlaWdodC8yKTtcbiAqXG4gKiAgICBlbnYgPSBuZXcgcDUuRW52ZWxvcGUoKTtcbiAqICAgIGVudi5zZXRBRFNSKGF0dGFja1RpbWUsIGRlY2F5VGltZSwgc3VzUGVyY2VudCwgcmVsZWFzZVRpbWUpO1xuICogICAgZW52LnNldFJhbmdlKDEuMCwgMC4wKTtcbiAqICAgIHRyaU9zYyA9IG5ldyBwNS5Pc2NpbGxhdG9yKCd0cmlhbmdsZScpO1xuICogICAgdHJpT3NjLmZyZXEoMjIwKTtcbiAqXG4gKiAgICBjbnYubW91c2VQcmVzc2VkKGVudkF0dGFjayk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBlbnZBdHRhY2soKSAge1xuICogICAgYmFja2dyb3VuZCgwLCAyNTUsIDI1NSk7XG4gKiAgICB0ZXh0KCdyZWxlYXNlIHRvIHJlbGVhc2UnLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKlxuICogICAgLy8gZW5zdXJlcyBhdWRpbyBpcyBlbmFibGVkLiBTZWUgYWxzbzogYHVzZXJTdGFydEF1ZGlvYFxuICogICAgdHJpT3NjLnN0YXJ0KCk7XG4gKlxuICogICAgZW52LnRyaWdnZXJBdHRhY2sodHJpT3NjKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIG1vdXNlUmVsZWFzZWQoKSB7XG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0KCd0YXAgdG8gdHJpZ2dlckF0dGFjaycsIHdpZHRoLzIsIGhlaWdodC8yKTtcbiAqXG4gKiAgICBlbnYudHJpZ2dlclJlbGVhc2UodHJpT3NjKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cblxucDUuRW52ZWxvcGUucHJvdG90eXBlLnRyaWdnZXJBdHRhY2sgPSBmdW5jdGlvbiAodW5pdCwgc2Vjb25kc0Zyb21Ob3cpIHtcbiAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICB2YXIgdEZyb21Ob3cgPSBzZWNvbmRzRnJvbU5vdyB8fCAwO1xuICB2YXIgdCA9IG5vdyArIHRGcm9tTm93O1xuICB0aGlzLmxhc3RBdHRhY2sgPSB0O1xuICB0aGlzLndhc1RyaWdnZXJlZCA9IHRydWU7XG5cbiAgaWYgKHVuaXQpIHtcbiAgICBpZiAodGhpcy5jb25uZWN0aW9uICE9PSB1bml0KSB7XG4gICAgICB0aGlzLmNvbm5lY3QodW5pdCk7XG4gICAgfVxuICB9IFxuXG5cbiAgdmFyIHZhbFRvU2V0ID0gdGhpcy5jb250cm9sLmdldFZhbHVlQXRUaW1lKHQpO1xuXG4gIGlmICh0aGlzLmlzRXhwb25lbnRpYWwgPT09IHRydWUpIHtcbiAgICB0aGlzLmNvbnRyb2wuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLmNoZWNrRXhwSW5wdXQodmFsVG9TZXQpLCB0KTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmNvbnRyb2wubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodmFsVG9TZXQsIHQpO1xuICB9IFxuXG5cbiAgdCArPSB0aGlzLmFUaW1lO1xuXG4gIGlmICh0aGlzLmlzRXhwb25lbnRpYWwgPT09IHRydWUpIHtcbiAgICB0aGlzLmNvbnRyb2wuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLmNoZWNrRXhwSW5wdXQodGhpcy5hTGV2ZWwpLCB0KTtcbiAgICB2YWxUb1NldCA9IHRoaXMuY2hlY2tFeHBJbnB1dCh0aGlzLmNvbnRyb2wuZ2V0VmFsdWVBdFRpbWUodCkpO1xuICAgIHRoaXMuY29udHJvbC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModCk7XG4gICAgdGhpcy5jb250cm9sLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodmFsVG9TZXQsIHQpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuY29udHJvbC5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLmFMZXZlbCwgdCk7XG4gICAgdmFsVG9TZXQgPSB0aGlzLmNvbnRyb2wuZ2V0VmFsdWVBdFRpbWUodCk7XG4gICAgdGhpcy5jb250cm9sLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0KTtcbiAgICB0aGlzLmNvbnRyb2wubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodmFsVG9TZXQsIHQpO1xuICB9IFxuXG5cbiAgdCArPSB0aGlzLmRUaW1lO1xuXG4gIGlmICh0aGlzLmlzRXhwb25lbnRpYWwgPT09IHRydWUpIHtcbiAgICB0aGlzLmNvbnRyb2wuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLmNoZWNrRXhwSW5wdXQodGhpcy5kTGV2ZWwpLCB0KTtcbiAgICB2YWxUb1NldCA9IHRoaXMuY2hlY2tFeHBJbnB1dCh0aGlzLmNvbnRyb2wuZ2V0VmFsdWVBdFRpbWUodCkpO1xuICAgIHRoaXMuY29udHJvbC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModCk7XG4gICAgdGhpcy5jb250cm9sLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodmFsVG9TZXQsIHQpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuY29udHJvbC5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLmRMZXZlbCwgdCk7XG4gICAgdmFsVG9TZXQgPSB0aGlzLmNvbnRyb2wuZ2V0VmFsdWVBdFRpbWUodCk7XG4gICAgdGhpcy5jb250cm9sLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0KTtcbiAgICB0aGlzLmNvbnRyb2wubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodmFsVG9TZXQsIHQpO1xuICB9XG59O1xuLyoqXG4gKiAgVHJpZ2dlciB0aGUgUmVsZWFzZSBvZiB0aGUgRW52ZWxvcGUuIFRoaXMgaXMgc2ltaWxhciB0byByZWxlYXNpbmdcbiAqICB0aGUga2V5IG9uIGEgcGlhbm8gYW5kIGxldHRpbmcgdGhlIHNvdW5kIGZhZGUgYWNjb3JkaW5nIHRvIHRoZVxuICogIHJlbGVhc2UgbGV2ZWwgYW5kIHJlbGVhc2UgdGltZS5cbiAqXG4gKiAgQG1ldGhvZCAgdHJpZ2dlclJlbGVhc2VcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtICB7T2JqZWN0fSB1bml0IHA1LnNvdW5kIE9iamVjdCBvciBXZWIgQXVkaW8gUGFyYW1cbiAqICBAcGFyYW0gIHtOdW1iZXJ9IHNlY29uZHNGcm9tTm93IHRpbWUgdG8gdHJpZ2dlciB0aGUgcmVsZWFzZVxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgYXR0YWNrVGltZSA9IDAuMDAxO1xuICogIGxldCBkZWNheVRpbWUgPSAwLjI7XG4gKiAgbGV0IHN1c1BlcmNlbnQgPSAwLjM7XG4gKiAgbGV0IHJlbGVhc2VUaW1lID0gMC40O1xuICogIGxldCBlbnYsIHRyaU9zYztcbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHRBbGlnbihDRU5URVIpO1xuICogICAgdGV4dFNpemUoMTApO1xuICogICAgdGV4dCgndGFwIHRvIHRyaWdnZXJBdHRhY2snLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKlxuICogICAgZW52ID0gbmV3IHA1LkVudmVsb3BlKCk7XG4gKiAgICBlbnYuc2V0QURTUihhdHRhY2tUaW1lLCBkZWNheVRpbWUsIHN1c1BlcmNlbnQsIHJlbGVhc2VUaW1lKTtcbiAqICAgIGVudi5zZXRSYW5nZSgxLjAsIDAuMCk7XG4gKiAgICB0cmlPc2MgPSBuZXcgcDUuT3NjaWxsYXRvcigndHJpYW5nbGUnKTtcbiAqICAgIHRyaU9zYy5mcmVxKDIyMCk7XG4gKlxuICogICAgY252Lm1vdXNlUHJlc3NlZChlbnZBdHRhY2spO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZW52QXR0YWNrKCkgIHtcbiAqICAgIGJhY2tncm91bmQoMCwgMjU1LCAyNTUpO1xuICogICAgdGV4dCgncmVsZWFzZSB0byByZWxlYXNlJywgd2lkdGgvMiwgaGVpZ2h0LzIpO1xuICpcbiAqICAgIC8vIGVuc3VyZXMgYXVkaW8gaXMgZW5hYmxlZC4gU2VlIGFsc286IGB1c2VyU3RhcnRBdWRpb2BcbiAqICAgIHRyaU9zYy5zdGFydCgpO1xuICpcbiAqICAgIGVudi50cmlnZ2VyQXR0YWNrKHRyaU9zYyk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dCgndGFwIHRvIHRyaWdnZXJBdHRhY2snLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKlxuICogICAgZW52LnRyaWdnZXJSZWxlYXNlKHRyaU9zYyk7XG4gKiAgfVxuICogIDwvY29kZT48L2Rpdj5cbiAqL1xuXG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS50cmlnZ2VyUmVsZWFzZSA9IGZ1bmN0aW9uICh1bml0LCBzZWNvbmRzRnJvbU5vdykge1xuICBpZiAoIXRoaXMud2FzVHJpZ2dlcmVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICB2YXIgdEZyb21Ob3cgPSBzZWNvbmRzRnJvbU5vdyB8fCAwO1xuICB2YXIgdCA9IG5vdyArIHRGcm9tTm93O1xuXG4gIGlmICh1bml0KSB7XG4gICAgaWYgKHRoaXMuY29ubmVjdGlvbiAhPT0gdW5pdCkge1xuICAgICAgdGhpcy5jb25uZWN0KHVuaXQpO1xuICAgIH1cbiAgfSBcblxuXG4gIHZhciB2YWxUb1NldCA9IHRoaXMuY29udHJvbC5nZXRWYWx1ZUF0VGltZSh0KTtcblxuICBpZiAodGhpcy5pc0V4cG9uZW50aWFsID09PSB0cnVlKSB7XG4gICAgdGhpcy5jb250cm9sLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodGhpcy5jaGVja0V4cElucHV0KHZhbFRvU2V0KSwgdCk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5jb250cm9sLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHZhbFRvU2V0LCB0KTtcbiAgfSBcblxuXG4gIHQgKz0gdGhpcy5yVGltZTtcblxuICBpZiAodGhpcy5pc0V4cG9uZW50aWFsID09PSB0cnVlKSB7XG4gICAgdGhpcy5jb250cm9sLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodGhpcy5jaGVja0V4cElucHV0KHRoaXMuckxldmVsKSwgdCk7XG4gICAgdmFsVG9TZXQgPSB0aGlzLmNoZWNrRXhwSW5wdXQodGhpcy5jb250cm9sLmdldFZhbHVlQXRUaW1lKHQpKTtcbiAgICB0aGlzLmNvbnRyb2wuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHQpO1xuICAgIHRoaXMuY29udHJvbC5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHZhbFRvU2V0LCB0KTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmNvbnRyb2wubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy5yTGV2ZWwsIHQpO1xuICAgIHZhbFRvU2V0ID0gdGhpcy5jb250cm9sLmdldFZhbHVlQXRUaW1lKHQpO1xuICAgIHRoaXMuY29udHJvbC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModCk7XG4gICAgdGhpcy5jb250cm9sLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHZhbFRvU2V0LCB0KTtcbiAgfVxuXG4gIHRoaXMud2FzVHJpZ2dlcmVkID0gZmFsc2U7XG59O1xuLyoqXG4gKiAgRXhwb25lbnRpYWxseSByYW1wIHRvIGEgdmFsdWUgdXNpbmcgdGhlIGZpcnN0IHR3b1xuICogIHZhbHVlcyBmcm9tIDxjb2RlPjxhIGhyZWY9XCIjL3A1LkVudmVsb3BlL3NldEFEU1JcIj5zZXRBRFNSKGF0dGFja1RpbWUsIGRlY2F5VGltZSk8L2E+PC9jb2RlPlxuICogIGFzIDxhIGhyZWY9XCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SQ190aW1lX2NvbnN0YW50XCI+XG4gKiAgdGltZSBjb25zdGFudHM8L2E+IGZvciBzaW1wbGUgZXhwb25lbnRpYWwgcmFtcHMuXG4gKiAgSWYgdGhlIHZhbHVlIGlzIGhpZ2hlciB0aGFuIGN1cnJlbnQgdmFsdWUsIGl0IHVzZXMgYXR0YWNrVGltZSxcbiAqICB3aGlsZSBhIGRlY3JlYXNlIHVzZXMgZGVjYXlUaW1lLlxuICpcbiAqICBAbWV0aG9kICByYW1wXG4gKiAgQGZvciBwNS5FbnZlbG9wZVxuICogIEBwYXJhbSAge09iamVjdH0gdW5pdCAgICAgICAgICAgcDUuc291bmQgT2JqZWN0IG9yIFdlYiBBdWRpbyBQYXJhbVxuICogIEBwYXJhbSAge051bWJlcn0gc2Vjb25kc0Zyb21Ob3cgV2hlbiB0byB0cmlnZ2VyIHRoZSByYW1wXG4gKiAgQHBhcmFtICB7TnVtYmVyfSB2ICAgICAgICAgICAgICBUYXJnZXQgdmFsdWVcbiAqICBAcGFyYW0gIHtOdW1iZXJ9IFt2Ml0gICAgICAgICAgIFNlY29uZCB0YXJnZXQgdmFsdWVcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IGVudiwgb3NjLCBhbXA7XG4gKlxuICogIGxldCBhdHRhY2tUaW1lID0gMC4wMDE7XG4gKiAgbGV0IGRlY2F5VGltZSA9IDAuMjtcbiAqICBsZXQgYXR0YWNrTGV2ZWwgPSAxO1xuICogIGxldCBkZWNheUxldmVsID0gMDtcbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGZpbGwoMCwyNTUsMCk7XG4gKiAgICBub1N0cm9rZSgpO1xuICpcbiAqICAgIGVudiA9IG5ldyBwNS5FbnZlbG9wZSgpO1xuICogICAgZW52LnNldEFEU1IoYXR0YWNrVGltZSwgZGVjYXlUaW1lKTtcbiAqICAgIG9zYyA9IG5ldyBwNS5Pc2NpbGxhdG9yKCk7XG4gKiAgICBvc2MuYW1wKGVudik7XG4gKiAgICBhbXAgPSBuZXcgcDUuQW1wbGl0dWRlKCk7XG4gKlxuICogICAgY252Lm1vdXNlUHJlc3NlZCh0cmlnZ2VyUmFtcCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiB0cmlnZ2VyUmFtcCgpIHtcbiAqICAgIC8vIGVuc3VyZXMgYXVkaW8gaXMgZW5hYmxlZC4gU2VlIGFsc286IGB1c2VyU3RhcnRBdWRpb2BcbiAqICAgIG9zYy5zdGFydCgpO1xuICpcbiAqICAgIGVudi5yYW1wKG9zYywgMCwgYXR0YWNrTGV2ZWwsIGRlY2F5TGV2ZWwpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjApO1xuICogICAgdGV4dCgndGFwIHRvIHBsYXknLCAxMCwgMjApO1xuICogICAgbGV0IGggPSBtYXAoYW1wLmdldExldmVsKCksIDAsIDAuNCwgMCwgaGVpZ2h0KTs7XG4gKiAgICByZWN0KDAsIGhlaWdodCwgd2lkdGgsIC1oKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cblxucDUuRW52ZWxvcGUucHJvdG90eXBlLnJhbXAgPSBmdW5jdGlvbiAodW5pdCwgc2Vjb25kc0Zyb21Ob3csIHYxLCB2Mikge1xuICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gIHZhciB0RnJvbU5vdyA9IHNlY29uZHNGcm9tTm93IHx8IDA7XG4gIHZhciB0ID0gbm93ICsgdEZyb21Ob3c7XG4gIHZhciBkZXN0aW5hdGlvbjEgPSB0aGlzLmNoZWNrRXhwSW5wdXQodjEpO1xuICB2YXIgZGVzdGluYXRpb24yID0gdHlwZW9mIHYyICE9PSAndW5kZWZpbmVkJyA/IHRoaXMuY2hlY2tFeHBJbnB1dCh2MikgOiB1bmRlZmluZWQ7IFxuXG4gIGlmICh1bml0KSB7XG4gICAgaWYgKHRoaXMuY29ubmVjdGlvbiAhPT0gdW5pdCkge1xuICAgICAgdGhpcy5jb25uZWN0KHVuaXQpO1xuICAgIH1cbiAgfSBcblxuXG4gIHZhciBjdXJyZW50VmFsID0gdGhpcy5jaGVja0V4cElucHV0KHRoaXMuY29udHJvbC5nZXRWYWx1ZUF0VGltZSh0KSk7IFxuXG4gIGlmIChkZXN0aW5hdGlvbjEgPiBjdXJyZW50VmFsKSB7XG4gICAgdGhpcy5jb250cm9sLnNldFRhcmdldEF0VGltZShkZXN0aW5hdGlvbjEsIHQsIHRoaXMuX3JhbXBBdHRhY2tUQyk7XG4gICAgdCArPSB0aGlzLl9yYW1wQXR0YWNrVGltZTtcbiAgfSBcbiAgZWxzZSBpZiAoZGVzdGluYXRpb24xIDwgY3VycmVudFZhbCkge1xuICAgICAgdGhpcy5jb250cm9sLnNldFRhcmdldEF0VGltZShkZXN0aW5hdGlvbjEsIHQsIHRoaXMuX3JhbXBEZWNheVRDKTtcbiAgICAgIHQgKz0gdGhpcy5fcmFtcERlY2F5VGltZTtcbiAgICB9IFxuXG5cbiAgaWYgKGRlc3RpbmF0aW9uMiA9PT0gdW5kZWZpbmVkKSByZXR1cm47IFxuXG4gIGlmIChkZXN0aW5hdGlvbjIgPiBkZXN0aW5hdGlvbjEpIHtcbiAgICB0aGlzLmNvbnRyb2wuc2V0VGFyZ2V0QXRUaW1lKGRlc3RpbmF0aW9uMiwgdCwgdGhpcy5fcmFtcEF0dGFja1RDKTtcbiAgfSBcbiAgZWxzZSBpZiAoZGVzdGluYXRpb24yIDwgZGVzdGluYXRpb24xKSB7XG4gICAgICB0aGlzLmNvbnRyb2wuc2V0VGFyZ2V0QXRUaW1lKGRlc3RpbmF0aW9uMiwgdCwgdGhpcy5fcmFtcERlY2F5VEMpO1xuICAgIH1cbn07XG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS5jb25uZWN0ID0gZnVuY3Rpb24gKHVuaXQpIHtcbiAgdGhpcy5jb25uZWN0aW9uID0gdW5pdDsgXG5cbiAgaWYgKHVuaXQgaW5zdGFuY2VvZiBwNS5Pc2NpbGxhdG9yIHx8IHVuaXQgaW5zdGFuY2VvZiBwNS5Tb3VuZEZpbGUgfHwgdW5pdCBpbnN0YW5jZW9mIHA1LkF1ZGlvSW4gfHwgdW5pdCBpbnN0YW5jZW9mIHA1LlJldmVyYiB8fCB1bml0IGluc3RhbmNlb2YgcDUuTm9pc2UgfHwgdW5pdCBpbnN0YW5jZW9mIHA1LkZpbHRlciB8fCB1bml0IGluc3RhbmNlb2YgcDUuRGVsYXkpIHtcbiAgICB1bml0ID0gdW5pdC5vdXRwdXQuZ2FpbjtcbiAgfVxuXG4gIGlmICh1bml0IGluc3RhbmNlb2YgQXVkaW9QYXJhbSkge1xuICAgIHVuaXQuc2V0VmFsdWVBdFRpbWUoMCwgbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWUpO1xuICB9XG5cbiAgdGhpcy5vdXRwdXQuY29ubmVjdCh1bml0KTtcbn07XG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS5kaXNjb25uZWN0ID0gZnVuY3Rpb24gKCkge1xuICBpZiAodGhpcy5vdXRwdXQpIHtcbiAgICB0aGlzLm91dHB1dC5kaXNjb25uZWN0KCk7XG4gIH1cbn07IFxuXG4vKipcbiAqICBBZGQgYSB2YWx1ZSB0byB0aGUgcDUuT3NjaWxsYXRvcidzIG91dHB1dCBhbXBsaXR1ZGUsXG4gKiAgYW5kIHJldHVybiB0aGUgb3NjaWxsYXRvci4gQ2FsbGluZyB0aGlzIG1ldGhvZFxuICogIGFnYWluIHdpbGwgb3ZlcnJpZGUgdGhlIGluaXRpYWwgYWRkKCkgd2l0aCBuZXcgdmFsdWVzLlxuICpcbiAqICBAbWV0aG9kICBhZGRcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IG51bWJlciBDb25zdGFudCBudW1iZXIgdG8gYWRkXG4gKiAgQHJldHVybiB7cDUuRW52ZWxvcGV9IEVudmVsb3BlIFJldHVybnMgdGhpcyBlbnZlbG9wZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBzY2FsZWQgb3V0cHV0XG4gKi9cblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKG51bSkge1xuICB2YXIgYWRkID0gbmV3IEFkZF9kZWZhdWx0LmEobnVtKTtcbiAgdmFyIHRoaXNDaGFpbiA9IHRoaXMubWF0aE9wcy5sZW5ndGg7XG4gIHZhciBuZXh0Q2hhaW4gPSB0aGlzLm91dHB1dDtcbiAgcmV0dXJuIHA1LnByb3RvdHlwZS5fbWF0aENoYWluKHRoaXMsIGFkZCwgdGhpc0NoYWluLCBuZXh0Q2hhaW4sIEFkZF9kZWZhdWx0LmEpO1xufTtcbi8qKlxuICogIE11bHRpcGx5IHRoZSBwNS5FbnZlbG9wZSdzIG91dHB1dCBhbXBsaXR1ZGVcbiAqICBieSBhIGZpeGVkIHZhbHVlLiBDYWxsaW5nIHRoaXMgbWV0aG9kXG4gKiAgYWdhaW4gd2lsbCBvdmVycmlkZSB0aGUgaW5pdGlhbCBtdWx0KCkgd2l0aCBuZXcgdmFsdWVzLlxuICpcbiAqICBAbWV0aG9kICBtdWx0XG4gKiAgQGZvciBwNS5FbnZlbG9wZVxuICogIEBwYXJhbSB7TnVtYmVyfSBudW1iZXIgQ29uc3RhbnQgbnVtYmVyIHRvIG11bHRpcGx5XG4gKiAgQHJldHVybiB7cDUuRW52ZWxvcGV9IEVudmVsb3BlIFJldHVybnMgdGhpcyBlbnZlbG9wZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBzY2FsZWQgb3V0cHV0XG4gKi9cblxuXG5wNS5FbnZlbG9wZS5wcm90b3R5cGUubXVsdCA9IGZ1bmN0aW9uIChudW0pIHtcbiAgdmFyIG11bHQgPSBuZXcgTXVsdGlwbHlfZGVmYXVsdC5hKG51bSk7XG4gIHZhciB0aGlzQ2hhaW4gPSB0aGlzLm1hdGhPcHMubGVuZ3RoO1xuICB2YXIgbmV4dENoYWluID0gdGhpcy5vdXRwdXQ7XG4gIHJldHVybiBwNS5wcm90b3R5cGUuX21hdGhDaGFpbih0aGlzLCBtdWx0LCB0aGlzQ2hhaW4sIG5leHRDaGFpbiwgTXVsdGlwbHlfZGVmYXVsdC5hKTtcbn07XG4vKipcbiAqICBTY2FsZSB0aGlzIGVudmVsb3BlJ3MgYW1wbGl0dWRlIHZhbHVlcyB0byBhIGdpdmVuXG4gKiAgcmFuZ2UsIGFuZCByZXR1cm4gdGhlIGVudmVsb3BlLiBDYWxsaW5nIHRoaXMgbWV0aG9kXG4gKiAgYWdhaW4gd2lsbCBvdmVycmlkZSB0aGUgaW5pdGlhbCBzY2FsZSgpIHdpdGggbmV3IHZhbHVlcy5cbiAqXG4gKiAgQG1ldGhvZCAgc2NhbGVcbiAqICBAZm9yIHA1LkVudmVsb3BlXG4gKiAgQHBhcmFtICB7TnVtYmVyfSBpbk1pbiAgaW5wdXQgcmFuZ2UgbWludW11bVxuICogIEBwYXJhbSAge051bWJlcn0gaW5NYXggIGlucHV0IHJhbmdlIG1heGltdW1cbiAqICBAcGFyYW0gIHtOdW1iZXJ9IG91dE1pbiBpbnB1dCByYW5nZSBtaW51bXVtXG4gKiAgQHBhcmFtICB7TnVtYmVyfSBvdXRNYXggaW5wdXQgcmFuZ2UgbWF4aW11bVxuICogIEByZXR1cm4ge3A1LkVudmVsb3BlfSBFbnZlbG9wZSBSZXR1cm5zIHRoaXMgZW52ZWxvcGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpdGggc2NhbGVkIG91dHB1dFxuICovXG5cblxucDUuRW52ZWxvcGUucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24gKGluTWluLCBpbk1heCwgb3V0TWluLCBvdXRNYXgpIHtcbiAgdmFyIHNjYWxlID0gbmV3IFNjYWxlX2RlZmF1bHQuYShpbk1pbiwgaW5NYXgsIG91dE1pbiwgb3V0TWF4KTtcbiAgdmFyIHRoaXNDaGFpbiA9IHRoaXMubWF0aE9wcy5sZW5ndGg7XG4gIHZhciBuZXh0Q2hhaW4gPSB0aGlzLm91dHB1dDtcbiAgcmV0dXJuIHA1LnByb3RvdHlwZS5fbWF0aENoYWluKHRoaXMsIHNjYWxlLCB0aGlzQ2hhaW4sIG5leHRDaGFpbiwgU2NhbGVfZGVmYXVsdC5hKTtcbn07IFxuXG5cbnA1LkVudmVsb3BlLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaW5kZXggPSBtYWluLnNvdW5kQXJyYXkuaW5kZXhPZih0aGlzKTtcbiAgbWFpbi5zb3VuZEFycmF5LnNwbGljZShpbmRleCwgMSk7XG4gIHRoaXMuZGlzY29ubmVjdCgpO1xuXG4gIGlmICh0aGlzLmNvbnRyb2wpIHtcbiAgICB0aGlzLmNvbnRyb2wuZGlzcG9zZSgpO1xuICAgIHRoaXMuY29udHJvbCA9IG51bGw7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMTsgaSA8IHRoaXMubWF0aE9wcy5sZW5ndGg7IGkrKykge1xuICAgIHRoaXMubWF0aE9wc1tpXS5kaXNwb3NlKCk7XG4gIH1cbn07IFxuXG5cbnA1LkVudiA9IGZ1bmN0aW9uICh0MSwgbDEsIHQyLCBsMiwgdDMsIGwzKSB7XG4gIGNvbnNvbGUud2FybignV0FSTklORzogcDUuRW52IGlzIG5vdyBkZXByZWNhdGVkIGFuZCBtYXkgYmUgcmVtb3ZlZCBpbiBmdXR1cmUgdmVyc2lvbnMuICcgKyAnUGxlYXNlIHVzZSB0aGUgbmV3IHA1LkVudmVsb3BlIGluc3RlYWQuJyk7XG4gIHA1LkVudmVsb3BlLmNhbGwodGhpcywgdDEsIGwxLCB0MiwgbDIsIHQzLCBsMyk7XG59O1xuXG5wNS5FbnYucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwNS5FbnZlbG9wZS5wcm90b3R5cGUpO1xudmFyIEVudmVsb3BlID0gcDUuRW52ZWxvcGU7XG4gdmFyIGVudmVsb3BlID0gKEVudmVsb3BlKTtcbmZ1bmN0aW9uIG5vaXNlX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IG5vaXNlX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBub2lzZV90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gbm9pc2VfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gbm9pc2VfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBub2lzZV9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gbm9pc2VfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBub2lzZV9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgbm9pc2VfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gbm9pc2VfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChub2lzZV90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIG5vaXNlX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBub2lzZV9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBub2lzZV9nZXRQcm90b3R5cGVPZihvKSB7IG5vaXNlX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIG5vaXNlX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbmZ1bmN0aW9uIG5vaXNlX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIG5vaXNlX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBub2lzZV9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG5vaXNlX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBub2lzZV9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5cblxudmFyIF93aGl0ZU5vaXNlQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICB2YXIgYnVmZmVyU2l6ZSA9IDIgKiBtYWluLmF1ZGlvY29udGV4dC5zYW1wbGVSYXRlO1xuICB2YXIgd2hpdGVCdWZmZXIgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVCdWZmZXIoMSwgYnVmZmVyU2l6ZSwgbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZSk7XG4gIHZhciBub2lzZURhdGEgPSB3aGl0ZUJ1ZmZlci5nZXRDaGFubmVsRGF0YSgwKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1ZmZlclNpemU7IGkrKykge1xuICAgIG5vaXNlRGF0YVtpXSA9IE1hdGgucmFuZG9tKCkgKiAyIC0gMTtcbiAgfVxuXG4gIHdoaXRlQnVmZmVyLnR5cGUgPSAnd2hpdGUnO1xuICByZXR1cm4gd2hpdGVCdWZmZXI7XG59KCk7XG5cbnZhciBfcGlua05vaXNlQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICB2YXIgYnVmZmVyU2l6ZSA9IDIgKiBtYWluLmF1ZGlvY29udGV4dC5zYW1wbGVSYXRlO1xuICB2YXIgcGlua0J1ZmZlciA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZUJ1ZmZlcigxLCBidWZmZXJTaXplLCBtYWluLmF1ZGlvY29udGV4dC5zYW1wbGVSYXRlKTtcbiAgdmFyIG5vaXNlRGF0YSA9IHBpbmtCdWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCk7XG4gIHZhciBiMCwgYjEsIGIyLCBiMywgYjQsIGI1LCBiNjtcbiAgYjAgPSBiMSA9IGIyID0gYjMgPSBiNCA9IGI1ID0gYjYgPSAwLjA7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXJTaXplOyBpKyspIHtcbiAgICB2YXIgd2hpdGUgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgYjAgPSAwLjk5ODg2ICogYjAgKyB3aGl0ZSAqIDAuMDU1NTE3OTtcbiAgICBiMSA9IDAuOTkzMzIgKiBiMSArIHdoaXRlICogMC4wNzUwNzU5O1xuICAgIGIyID0gMC45NjkgKiBiMiArIHdoaXRlICogMC4xNTM4NTI7XG4gICAgYjMgPSAwLjg2NjUgKiBiMyArIHdoaXRlICogMC4zMTA0ODU2O1xuICAgIGI0ID0gMC41NSAqIGI0ICsgd2hpdGUgKiAwLjUzMjk1MjI7XG4gICAgYjUgPSAtMC43NjE2ICogYjUgLSB3aGl0ZSAqIDAuMDE2ODk4O1xuICAgIG5vaXNlRGF0YVtpXSA9IGIwICsgYjEgKyBiMiArIGIzICsgYjQgKyBiNSArIGI2ICsgd2hpdGUgKiAwLjUzNjI7XG4gICAgbm9pc2VEYXRhW2ldICo9IDAuMTE7IFxuXG4gICAgYjYgPSB3aGl0ZSAqIDAuMTE1OTI2O1xuICB9XG5cbiAgcGlua0J1ZmZlci50eXBlID0gJ3BpbmsnO1xuICByZXR1cm4gcGlua0J1ZmZlcjtcbn0oKTtcblxudmFyIF9icm93bk5vaXNlQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICB2YXIgYnVmZmVyU2l6ZSA9IDIgKiBtYWluLmF1ZGlvY29udGV4dC5zYW1wbGVSYXRlO1xuICB2YXIgYnJvd25CdWZmZXIgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVCdWZmZXIoMSwgYnVmZmVyU2l6ZSwgbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZSk7XG4gIHZhciBub2lzZURhdGEgPSBicm93bkJ1ZmZlci5nZXRDaGFubmVsRGF0YSgwKTtcbiAgdmFyIGxhc3RPdXQgPSAwLjA7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXJTaXplOyBpKyspIHtcbiAgICB2YXIgd2hpdGUgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgbm9pc2VEYXRhW2ldID0gKGxhc3RPdXQgKyAwLjAyICogd2hpdGUpIC8gMS4wMjtcbiAgICBsYXN0T3V0ID0gbm9pc2VEYXRhW2ldO1xuICAgIG5vaXNlRGF0YVtpXSAqPSAzLjU7XG4gIH1cblxuICBicm93bkJ1ZmZlci50eXBlID0gJ2Jyb3duJztcbiAgcmV0dXJuIGJyb3duQnVmZmVyO1xufSgpO1xuLyoqXG4gKiAgTm9pc2UgaXMgYSB0eXBlIG9mIG9zY2lsbGF0b3IgdGhhdCBnZW5lcmF0ZXMgYSBidWZmZXIgd2l0aCByYW5kb20gdmFsdWVzLlxuICpcbiAqICBAY2xhc3MgcDUuTm9pc2VcbiAqICBAZXh0ZW5kcyBwNS5Pc2NpbGxhdG9yXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtIHtTdHJpbmd9IHR5cGUgVHlwZSBvZiBub2lzZSBjYW4gYmUgJ3doaXRlJyAoZGVmYXVsdCksXG4gKiAgICAgICAgICAgICAgICAgICAgICAgJ2Jyb3duJyBvciAncGluaycuXG4gKi9cblxuXG52YXIgbm9pc2VfTm9pc2UgPVxuZnVuY3Rpb24gKF9Pc2NpbGxhdG9yKSB7XG4gIG5vaXNlX2luaGVyaXRzKE5vaXNlLCBfT3NjaWxsYXRvcik7XG5cbiAgZnVuY3Rpb24gTm9pc2UodHlwZSkge1xuICAgIHZhciBfdGhpcztcblxuICAgIG5vaXNlX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vaXNlKTtcblxuICAgIF90aGlzID0gbm9pc2VfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBub2lzZV9nZXRQcm90b3R5cGVPZihOb2lzZSkuY2FsbCh0aGlzKSk7XG4gICAgdmFyIGFzc2lnblR5cGU7XG4gICAgZGVsZXRlIF90aGlzLmY7XG4gICAgZGVsZXRlIF90aGlzLmZyZXE7XG4gICAgZGVsZXRlIF90aGlzLm9zY2lsbGF0b3I7XG5cbiAgICBpZiAodHlwZSA9PT0gJ2Jyb3duJykge1xuICAgICAgYXNzaWduVHlwZSA9IF9icm93bk5vaXNlQnVmZmVyO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3BpbmsnKSB7XG4gICAgICBhc3NpZ25UeXBlID0gX3BpbmtOb2lzZUJ1ZmZlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgYXNzaWduVHlwZSA9IF93aGl0ZU5vaXNlQnVmZmVyO1xuICAgIH1cblxuICAgIF90aGlzLmJ1ZmZlciA9IGFzc2lnblR5cGU7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIC8qKlxuICAgKiAgU2V0IHR5cGUgb2Ygbm9pc2UgdG8gJ3doaXRlJywgJ3BpbmsnIG9yICdicm93bicuXG4gICAqICBXaGl0ZSBpcyB0aGUgZGVmYXVsdC5cbiAgICpcbiAgICogIEBtZXRob2Qgc2V0VHlwZVxuICAgKiAgQHBhcmFtIHtTdHJpbmd9IFt0eXBlXSAnd2hpdGUnLCAncGluaycgb3IgJ2Jyb3duJ1xuICAgKi9cblxuXG4gIG5vaXNlX2NyZWF0ZUNsYXNzKE5vaXNlLCBbe1xuICAgIGtleTogXCJzZXRUeXBlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFR5cGUodHlwZSkge1xuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgJ3doaXRlJzpcbiAgICAgICAgICB0aGlzLmJ1ZmZlciA9IF93aGl0ZU5vaXNlQnVmZmVyO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ3BpbmsnOlxuICAgICAgICAgIHRoaXMuYnVmZmVyID0gX3BpbmtOb2lzZUJ1ZmZlcjtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdicm93bic6XG4gICAgICAgICAgdGhpcy5idWZmZXIgPSBfYnJvd25Ob2lzZUJ1ZmZlcjtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRoaXMuYnVmZmVyID0gX3doaXRlTm9pc2VCdWZmZXI7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnN0YXJ0ZWQpIHtcbiAgICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICB0aGlzLnN0b3Aobm93KTtcbiAgICAgICAgdGhpcy5zdGFydChub3cgKyAwLjAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0VHlwZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUeXBlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLnR5cGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0YXJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0KCkge1xuICAgICAgaWYgKHRoaXMuc3RhcnRlZCkge1xuICAgICAgICB0aGlzLnN0b3AoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5ub2lzZSA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xuICAgICAgdGhpcy5ub2lzZS5idWZmZXIgPSB0aGlzLmJ1ZmZlcjtcbiAgICAgIHRoaXMubm9pc2UubG9vcCA9IHRydWU7XG4gICAgICB0aGlzLm5vaXNlLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgdGhpcy5ub2lzZS5zdGFydChub3cpO1xuICAgICAgdGhpcy5zdGFydGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuXG4gICAgICBpZiAodGhpcy5ub2lzZSkge1xuICAgICAgICB0aGlzLm5vaXNlLnN0b3Aobm93KTtcbiAgICAgICAgdGhpcy5zdGFydGVkID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTsgXG5cbiAgICAgIHZhciBpbmRleCA9IG1haW4uc291bmRBcnJheS5pbmRleE9mKHRoaXMpO1xuICAgICAgbWFpbi5zb3VuZEFycmF5LnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgIGlmICh0aGlzLm5vaXNlKSB7XG4gICAgICAgIHRoaXMubm9pc2UuZGlzY29ubmVjdCgpO1xuICAgICAgICB0aGlzLnN0b3Aobm93KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucGFubmVyKSB7XG4gICAgICAgIHRoaXMucGFubmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5vdXRwdXQgPSBudWxsO1xuICAgICAgdGhpcy5wYW5uZXIgPSBudWxsO1xuICAgICAgdGhpcy5idWZmZXIgPSBudWxsO1xuICAgICAgdGhpcy5ub2lzZSA9IG51bGw7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE5vaXNlO1xufShvc2NpbGxhdG9yKTtcblxuIHZhciBub2lzZSA9IChub2lzZV9Ob2lzZSk7XG52YXIgU2lnbmFsID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbnZhciBTaWduYWxfZGVmYXVsdCA9IF9fd2VicGFja19yZXF1aXJlX18ubihTaWduYWwpO1xuXG5mdW5jdGlvbiBwdWxzZV90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBwdWxzZV90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgcHVsc2VfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIHB1bHNlX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIHB1bHNlX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gcHVsc2VfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIHB1bHNlX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgcHVsc2VfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIHB1bHNlX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIHB1bHNlX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAocHVsc2VfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBwdWxzZV9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gcHVsc2VfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gcHVsc2VfZ2V0UHJvdG90eXBlT2YobykgeyBwdWxzZV9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBwdWxzZV9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG5mdW5jdGlvbiBwdWxzZV9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBwdWxzZV9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gcHVsc2Vfc2V0UHJvdG90eXBlT2YobywgcCkgeyBwdWxzZV9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gcHVsc2Vfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxuXG5cblxuXG4vKipcbiAqICBDcmVhdGVzIGEgUHVsc2Ugb2JqZWN0LCBhbiBvc2NpbGxhdG9yIHRoYXQgaW1wbGVtZW50c1xuICogIFB1bHNlIFdpZHRoIE1vZHVsYXRpb24uXG4gKiAgVGhlIHB1bHNlIGlzIGNyZWF0ZWQgd2l0aCB0d28gb3NjaWxsYXRvcnMuXG4gKiAgQWNjZXB0cyBhIHBhcmFtZXRlciBmb3IgZnJlcXVlbmN5LCBhbmQgdG8gc2V0IHRoZVxuICogIHdpZHRoIGJldHdlZW4gdGhlIHB1bHNlcy4gU2VlIDxhIGhyZWY9XCJcbiAqICBodHRwOi8vcDVqcy5vcmcvcmVmZXJlbmNlLyMvcDUuT3NjaWxsYXRvclwiPlxuICogIDxjb2RlPnA1Lk9zY2lsbGF0b3I8L2NvZGU+IGZvciBhIGZ1bGwgbGlzdCBvZiBtZXRob2RzLlxuICpcbiAqICBAY2xhc3MgcDUuUHVsc2VcbiAqICBAZXh0ZW5kcyBwNS5Pc2NpbGxhdG9yXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFtmcmVxXSBGcmVxdWVuY3kgaW4gb3NjaWxsYXRpb25zIHBlciBzZWNvbmQgKEh6KVxuICogIEBwYXJhbSB7TnVtYmVyfSBbd10gICAgV2lkdGggYmV0d2VlbiB0aGUgcHVsc2VzICgwIHRvIDEuMCxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzIHRvIDApXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBwdWxzZTtcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgY252Lm1vdXNlUHJlc3NlZChzdGFydFB1bHNlKTtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqXG4gKiAgICBwdWxzZSA9IG5ldyBwNS5QdWxzZSgpO1xuICogICAgcHVsc2UuYW1wKDAuNSk7XG4gKiAgICBwdWxzZS5mcmVxKDIyMCk7XG4gKiAgfVxuICogIGZ1bmN0aW9uIHN0YXJ0UHVsc2UoKSB7XG4gKiAgICBwdWxzZS5zdGFydCgpO1xuICogICAgcHVsc2UuYW1wKDAuNSwgMC4wMik7XG4gKiAgfVxuICogIGZ1bmN0aW9uIG1vdXNlUmVsZWFzZWQoKSB7XG4gKiAgICBwdWxzZS5hbXAoMCwgMC4yKTtcbiAqICB9XG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHQoJ3RhcCB0byBwbGF5JywgNSwgMjAsIHdpZHRoIC0gMjApO1xuICogICAgbGV0IHcgPSBtYXAobW91c2VYLCAwLCB3aWR0aCwgMCwgMSk7XG4gKiAgICB3ID0gY29uc3RyYWluKHcsIDAsIDEpO1xuICogICAgcHVsc2Uud2lkdGgodyk7XG4gKiAgICB0ZXh0KCdwdWxzZSB3aWR0aDogJyArIHcsIDUsIGhlaWdodCAtIDIwKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cbnZhciBwdWxzZV9QdWxzZSA9XG5mdW5jdGlvbiAoX09zY2lsbGF0b3IpIHtcbiAgcHVsc2VfaW5oZXJpdHMoUHVsc2UsIF9Pc2NpbGxhdG9yKTtcblxuICBmdW5jdGlvbiBQdWxzZShmcmVxLCB3KSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgcHVsc2VfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHVsc2UpO1xuXG4gICAgX3RoaXMgPSBwdWxzZV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHB1bHNlX2dldFByb3RvdHlwZU9mKFB1bHNlKS5jYWxsKHRoaXMsIGZyZXEsICdzYXd0b290aCcpKTsgXG5cbiAgICBfdGhpcy53ID0gdyB8fCAwOyBcblxuICAgIF90aGlzLm9zYzIgPSBuZXcgU2F3T3NjKGZyZXEpOyBcblxuICAgIF90aGlzLmROb2RlID0gbWFpbi5hdWRpb2NvbnRleHQuY3JlYXRlRGVsYXkoKTsgXG5cbiAgICBfdGhpcy5kY09mZnNldCA9IGNyZWF0ZURDT2Zmc2V0KCk7XG4gICAgX3RoaXMuZGNHYWluID0gbWFpbi5hdWRpb2NvbnRleHQuY3JlYXRlR2FpbigpO1xuXG4gICAgX3RoaXMuZGNPZmZzZXQuY29ubmVjdChfdGhpcy5kY0dhaW4pO1xuXG4gICAgX3RoaXMuZGNHYWluLmNvbm5lY3QoX3RoaXMub3V0cHV0KTsgXG5cblxuICAgIF90aGlzLmYgPSBmcmVxIHx8IDQ0MDtcbiAgICB2YXIgbVcgPSBfdGhpcy53IC8gX3RoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kudmFsdWU7XG4gICAgX3RoaXMuZE5vZGUuZGVsYXlUaW1lLnZhbHVlID0gbVc7XG4gICAgX3RoaXMuZGNHYWluLmdhaW4udmFsdWUgPSAxLjcgKiAoMC41IC0gX3RoaXMudyk7IFxuXG4gICAgX3RoaXMub3NjMi5kaXNjb25uZWN0KCk7XG5cbiAgICBfdGhpcy5vc2MyLnBhbm5lci5kaXNjb25uZWN0KCk7XG5cbiAgICBfdGhpcy5vc2MyLmFtcCgtMSk7IFxuXG5cbiAgICBfdGhpcy5vc2MyLm91dHB1dC5jb25uZWN0KF90aGlzLmROb2RlKTtcblxuICAgIF90aGlzLmROb2RlLmNvbm5lY3QoX3RoaXMub3V0cHV0KTtcblxuICAgIF90aGlzLm91dHB1dC5nYWluLnZhbHVlID0gMTtcblxuICAgIF90aGlzLm91dHB1dC5jb25uZWN0KF90aGlzLnBhbm5lcik7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgLyoqXG4gICAqICBTZXQgdGhlIHdpZHRoIG9mIGEgUHVsc2Ugb2JqZWN0IChhbiBvc2NpbGxhdG9yIHRoYXQgaW1wbGVtZW50c1xuICAgKiAgUHVsc2UgV2lkdGggTW9kdWxhdGlvbikuXG4gICAqXG4gICAqICBAbWV0aG9kICB3aWR0aFxuICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFt3aWR0aF0gICAgV2lkdGggYmV0d2VlbiB0aGUgcHVsc2VzICgwIHRvIDEuMCxcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMgdG8gMClcbiAgICovXG5cblxuICBwdWxzZV9jcmVhdGVDbGFzcyhQdWxzZSwgW3tcbiAgICBrZXk6IFwid2lkdGhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gd2lkdGgodykge1xuICAgICAgaWYgKHR5cGVvZiB3ID09PSAnbnVtYmVyJykge1xuICAgICAgICBpZiAodyA8PSAxLjAgJiYgdyA+PSAwLjApIHtcbiAgICAgICAgICB0aGlzLncgPSB3OyBcblxuICAgICAgICAgIHZhciBtVyA9IHRoaXMudyAvIHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kudmFsdWU7XG4gICAgICAgICAgdGhpcy5kTm9kZS5kZWxheVRpbWUudmFsdWUgPSBtVztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZGNHYWluLmdhaW4udmFsdWUgPSAxLjcgKiAoMC41IC0gdGhpcy53KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHcuY29ubmVjdCh0aGlzLmROb2RlLmRlbGF5VGltZSk7XG4gICAgICAgIHZhciBzaWcgPSBuZXcgU2lnbmFsX2RlZmF1bHQuYSgtMC41KTsgXG5cbiAgICAgICAgdy5jb25uZWN0KHNpZyk7XG4gICAgICAgIHZhciBtdWx0MSA9IG5ldyBNdWx0aXBseV9kZWZhdWx0LmEoLTEpO1xuICAgICAgICB2YXIgbXVsdDIgPSBuZXcgTXVsdGlwbHlfZGVmYXVsdC5hKDEuNyk7XG4gICAgICAgIHNpZyA9IHNpZy5jb25uZWN0KG11bHQxKS5jb25uZWN0KG11bHQyKTtcbiAgICAgICAgc2lnLmNvbm5lY3QodGhpcy5kY0dhaW4uZ2Fpbik7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0YXJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0KGYsIHRpbWUpIHtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAoIXRoaXMuc3RhcnRlZCkge1xuICAgICAgICB2YXIgZnJlcSA9IGYgfHwgdGhpcy5mO1xuICAgICAgICB2YXIgdHlwZSA9IHRoaXMub3NjaWxsYXRvci50eXBlO1xuICAgICAgICB0aGlzLm9zY2lsbGF0b3IgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kuc2V0VmFsdWVBdFRpbWUoZnJlcSwgbm93KTtcbiAgICAgICAgdGhpcy5vc2NpbGxhdG9yLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLm9zY2lsbGF0b3IuY29ubmVjdCh0aGlzLm91dHB1dCk7XG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5zdGFydCh0ICsgbm93KTsgXG5cbiAgICAgICAgdGhpcy5vc2MyLm9zY2lsbGF0b3IgPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgIHRoaXMub3NjMi5vc2NpbGxhdG9yLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZShmcmVxLCB0ICsgbm93KTtcbiAgICAgICAgdGhpcy5vc2MyLm9zY2lsbGF0b3IudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMub3NjMi5vc2NpbGxhdG9yLmNvbm5lY3QodGhpcy5vc2MyLm91dHB1dCk7XG4gICAgICAgIHRoaXMub3NjMi5zdGFydCh0ICsgbm93KTtcbiAgICAgICAgdGhpcy5mcmVxTm9kZSA9IFt0aGlzLm9zY2lsbGF0b3IuZnJlcXVlbmN5LCB0aGlzLm9zYzIub3NjaWxsYXRvci5mcmVxdWVuY3ldOyBcblxuICAgICAgICB0aGlzLmRjT2Zmc2V0ID0gY3JlYXRlRENPZmZzZXQoKTtcbiAgICAgICAgdGhpcy5kY09mZnNldC5jb25uZWN0KHRoaXMuZGNHYWluKTtcbiAgICAgICAgdGhpcy5kY09mZnNldC5zdGFydCh0ICsgbm93KTsgXG5cbiAgICAgICAgaWYgKHRoaXMubW9kcyAhPT0gdW5kZWZpbmVkICYmIHRoaXMubW9kcy5mcmVxdWVuY3kgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHRoaXMubW9kcy5mcmVxdWVuY3kuY29ubmVjdCh0aGlzLmZyZXFOb2RlWzBdKTtcbiAgICAgICAgICB0aGlzLm1vZHMuZnJlcXVlbmN5LmNvbm5lY3QodGhpcy5mcmVxTm9kZVsxXSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLm9zYzIuc3RhcnRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0b3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCh0aW1lKSB7XG4gICAgICBpZiAodGhpcy5zdGFydGVkKSB7XG4gICAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuICAgICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5zdG9wKHQgKyBub3cpO1xuXG4gICAgICAgIGlmICh0aGlzLm9zYzIub3NjaWxsYXRvcikge1xuICAgICAgICAgIHRoaXMub3NjMi5vc2NpbGxhdG9yLnN0b3AodCArIG5vdyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmRjT2Zmc2V0LnN0b3AodCArIG5vdyk7XG4gICAgICAgIHRoaXMuc3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9zYzIuc3RhcnRlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmcmVxXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZyZXEodmFsKSB7XG4gICAgICB2YXIgcmFtcFRpbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7XG4gICAgICB2YXIgdEZyb21Ob3cgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLmYgPSB2YWw7XG4gICAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgdmFyIGN1cnJlbnRGcmVxID0gdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS52YWx1ZTtcbiAgICAgICAgdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMobm93KTtcbiAgICAgICAgdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZShjdXJyZW50RnJlcSwgbm93ICsgdEZyb21Ob3cpO1xuICAgICAgICB0aGlzLm9zY2lsbGF0b3IuZnJlcXVlbmN5LmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodmFsLCB0RnJvbU5vdyArIHJhbXBUaW1lICsgbm93KTtcbiAgICAgICAgdGhpcy5vc2MyLm9zY2lsbGF0b3IuZnJlcXVlbmN5LmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhub3cpO1xuICAgICAgICB0aGlzLm9zYzIub3NjaWxsYXRvci5mcmVxdWVuY3kuc2V0VmFsdWVBdFRpbWUoY3VycmVudEZyZXEsIG5vdyArIHRGcm9tTm93KTtcbiAgICAgICAgdGhpcy5vc2MyLm9zY2lsbGF0b3IuZnJlcXVlbmN5LmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodmFsLCB0RnJvbU5vdyArIHJhbXBUaW1lICsgbm93KTtcblxuICAgICAgICBpZiAodGhpcy5mcmVxTW9kKSB7XG4gICAgICAgICAgdGhpcy5mcmVxTW9kLm91dHB1dC5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgdGhpcy5mcmVxTW9kID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh2YWwub3V0cHV0KSB7XG4gICAgICAgIHZhbC5vdXRwdXQuZGlzY29ubmVjdCgpO1xuICAgICAgICB2YWwub3V0cHV0LmNvbm5lY3QodGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeSk7XG4gICAgICAgIHZhbC5vdXRwdXQuY29ubmVjdCh0aGlzLm9zYzIub3NjaWxsYXRvci5mcmVxdWVuY3kpO1xuICAgICAgICB0aGlzLmZyZXFNb2QgPSB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFB1bHNlO1xufShvc2NpbGxhdG9yKTsgXG5cblxuZnVuY3Rpb24gY3JlYXRlRENPZmZzZXQoKSB7XG4gIHZhciBhYyA9IG1haW4uYXVkaW9jb250ZXh0O1xuICB2YXIgYnVmZmVyID0gYWMuY3JlYXRlQnVmZmVyKDEsIDIwNDgsIGFjLnNhbXBsZVJhdGUpO1xuICB2YXIgZGF0YSA9IGJ1ZmZlci5nZXRDaGFubmVsRGF0YSgwKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IDIwNDg7IGkrKykge1xuICAgIGRhdGFbaV0gPSAxLjA7XG4gIH1cblxuICB2YXIgYnVmZmVyU291cmNlID0gYWMuY3JlYXRlQnVmZmVyU291cmNlKCk7XG4gIGJ1ZmZlclNvdXJjZS5idWZmZXIgPSBidWZmZXI7XG4gIGJ1ZmZlclNvdXJjZS5sb29wID0gdHJ1ZTtcbiAgcmV0dXJuIGJ1ZmZlclNvdXJjZTtcbn1cblxuIHZhciBwdWxzZSA9IChwdWxzZV9QdWxzZSk7XG5mdW5jdGlvbiBhdWRpb2luX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gYXVkaW9pbl9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gYXVkaW9pbl9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGF1ZGlvaW5fZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGF1ZGlvaW5fZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuXG5cbm1haW4uaW5wdXRTb3VyY2VzID0gW107XG4vKipcbiAqICA8cD5HZXQgYXVkaW8gZnJvbSBhbiBpbnB1dCwgaS5lLiB5b3VyIGNvbXB1dGVyJ3MgbWljcm9waG9uZS48L3A+XG4gKlxuICogIDxwPlR1cm4gdGhlIG1pYyBvbi9vZmYgd2l0aCB0aGUgc3RhcnQoKSBhbmQgc3RvcCgpIG1ldGhvZHMuIFdoZW4gdGhlIG1pY1xuICogIGlzIG9uLCBpdHMgdm9sdW1lIGNhbiBiZSBtZWFzdXJlZCB3aXRoIGdldExldmVsIG9yIGJ5IGNvbm5lY3RpbmcgYW5cbiAqICBGRlQgb2JqZWN0LjwvcD5cbiAqXG4gKiAgPHA+SWYgeW91IHdhbnQgdG8gaGVhciB0aGUgQXVkaW9JbiwgdXNlIHRoZSAuY29ubmVjdCgpIG1ldGhvZC5cbiAqICBBdWRpb0luIGRvZXMgbm90IGNvbm5lY3QgdG8gcDUuc291bmQgb3V0cHV0IGJ5IGRlZmF1bHQgdG8gcHJldmVudFxuICogIGZlZWRiYWNrLjwvcD5cbiAqXG4gKiAgPHA+PGVtPk5vdGU6IFRoaXMgdXNlcyB0aGUgPGEgaHJlZj1cImh0dHA6Ly9jYW5pdXNlLmNvbS9zdHJlYW1cIj5nZXRVc2VyTWVkaWEvXG4gKiAgU3RyZWFtPC9hPiBBUEksIHdoaWNoIGlzIG5vdCBzdXBwb3J0ZWQgYnkgY2VydGFpbiBicm93c2Vycy4gQWNjZXNzIGluIENocm9tZSBicm93c2VyXG4gKiAgaXMgbGltaXRlZCB0byBsb2NhbGhvc3QgYW5kIGh0dHBzLCBidXQgYWNjZXNzIG92ZXIgaHR0cCBtYXkgYmUgbGltaXRlZC48L2VtPjwvcD5cbiAqXG4gKiAgQGNsYXNzIHA1LkF1ZGlvSW5cbiAqICBAY29uc3RydWN0b3JcbiAqICBAcGFyYW0ge0Z1bmN0aW9ufSBbZXJyb3JDYWxsYmFja10gQSBmdW5jdGlvbiB0byBjYWxsIGlmIHRoZXJlIGlzIGFuIGVycm9yXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc2luZyB0aGUgQXVkaW9Jbi4gRm9yIGV4YW1wbGUsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNhZmFyaSBhbmQgaU9TIGRldmljZXMgZG8gbm90XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseSBhbGxvdyBtaWNyb3Bob25lIGFjY2Vzcy5cbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IG1pYztcbiAqXG4gKiAgIGZ1bmN0aW9uIHNldHVwKCl7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQodXNlclN0YXJ0QXVkaW8pO1xuICogICAgdGV4dEFsaWduKENFTlRFUik7XG4gKiAgICBtaWMgPSBuZXcgcDUuQXVkaW9JbigpO1xuICogICAgbWljLnN0YXJ0KCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBkcmF3KCl7XG4gKiAgICBiYWNrZ3JvdW5kKDApO1xuICogICAgZmlsbCgyNTUpO1xuICogICAgdGV4dCgndGFwIHRvIHN0YXJ0Jywgd2lkdGgvMiwgMjApO1xuICpcbiAqICAgIG1pY0xldmVsID0gbWljLmdldExldmVsKCk7XG4gKiAgICBsZXQgeSA9IGhlaWdodCAtIG1pY0xldmVsICogaGVpZ2h0O1xuICogICAgZWxsaXBzZSh3aWR0aC8yLCB5LCAxMCwgMTApO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxudmFyIGF1ZGlvaW5fQXVkaW9JbiA9XG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEF1ZGlvSW4oZXJyb3JDYWxsYmFjaykge1xuICAgIGF1ZGlvaW5fY2xhc3NDYWxsQ2hlY2sodGhpcywgQXVkaW9Jbik7XG5cblxuICAgIC8qKlxuICAgICAqIEBwcm9wZXJ0eSB7R2Fpbk5vZGV9IGlucHV0XG4gICAgICovXG4gICAgdGhpcy5pbnB1dCA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAvKipcbiAgICAgKiBAcHJvcGVydHkge0dhaW5Ob2RlfSBvdXRwdXRcbiAgICAgKi9cblxuICAgIHRoaXMub3V0cHV0ID0gbWFpbi5hdWRpb2NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgIC8qKlxuICAgICAqIEBwcm9wZXJ0eSB7TWVkaWFTdHJlYW18bnVsbH0gc3RyZWFtXG4gICAgICovXG5cbiAgICB0aGlzLnN0cmVhbSA9IG51bGw7XG4gICAgLyoqXG4gICAgICogQHByb3BlcnR5IHtNZWRpYVN0cmVhbUF1ZGlvU291cmNlTm9kZXxudWxsfSBtZWRpYVN0cmVhbVxuICAgICAqL1xuXG4gICAgdGhpcy5tZWRpYVN0cmVhbSA9IG51bGw7XG4gICAgLyoqXG4gICAgICogQHByb3BlcnR5IHtOdW1iZXJ8bnVsbH0gY3VycmVudFNvdXJjZVxuICAgICAqL1xuXG4gICAgdGhpcy5jdXJyZW50U291cmNlID0gbnVsbDtcbiAgICAvKipcbiAgICAgKiAgQ2xpZW50IG11c3QgYWxsb3cgYnJvd3NlciB0byBhY2Nlc3MgdGhlaXIgbWljcm9waG9uZSAvIGF1ZGlvaW4gc291cmNlLlxuICAgICAqICBEZWZhdWx0OiBmYWxzZS4gV2lsbCBiZWNvbWUgdHJ1ZSB3aGVuIHRoZSBjbGllbnQgZW5hYmxlcyBhY2Nlc3MuXG4gICAgICpcbiAgICAgKiAgQHByb3BlcnR5IHtCb29sZWFufSBlbmFibGVkXG4gICAgICovXG5cbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICAvKipcbiAgICAgKiBJbnB1dCBhbXBsaXR1ZGUsIGNvbm5lY3QgdG8gaXQgYnkgZGVmYXVsdCBidXQgbm90IHRvIG1hc3RlciBvdXRcbiAgICAgKlxuICAgICAqICBAcHJvcGVydHkge3A1LkFtcGxpdHVkZX0gYW1wbGl0dWRlXG4gICAgICovXG5cbiAgICB0aGlzLmFtcGxpdHVkZSA9IG5ldyBhbXBsaXR1ZGUoKTtcbiAgICB0aGlzLm91dHB1dC5jb25uZWN0KHRoaXMuYW1wbGl0dWRlLmlucHV0KTtcblxuICAgIGlmICghd2luZG93Lk1lZGlhU3RyZWFtVHJhY2sgfHwgIXdpbmRvdy5uYXZpZ2F0b3IubWVkaWFEZXZpY2VzIHx8ICF3aW5kb3cubmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHtcbiAgICAgIGVycm9yQ2FsbGJhY2sgPyBlcnJvckNhbGxiYWNrKCkgOiB3aW5kb3cuYWxlcnQoJ1RoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IE1lZGlhU3RyZWFtVHJhY2sgYW5kIG1lZGlhRGV2aWNlcycpO1xuICAgIH0gXG5cblxuICAgIG1haW4uc291bmRBcnJheS5wdXNoKHRoaXMpO1xuICB9XG4gIC8qKlxuICAgKiAgU3RhcnQgcHJvY2Vzc2luZyBhdWRpbyBpbnB1dC4gVGhpcyBlbmFibGVzIHRoZSB1c2Ugb2Ygb3RoZXJcbiAgICogIEF1ZGlvSW4gbWV0aG9kcyBsaWtlIGdldExldmVsKCkuIE5vdGUgdGhhdCBieSBkZWZhdWx0LCBBdWRpb0luXG4gICAqICBpcyBub3QgY29ubmVjdGVkIHRvIHA1LnNvdW5kJ3Mgb3V0cHV0LiBTbyB5b3Ugd29uJ3QgaGVhclxuICAgKiAgYW55dGhpbmcgdW5sZXNzIHlvdSB1c2UgdGhlIGNvbm5lY3QoKSBtZXRob2QuPGJyLz5cbiAgICpcbiAgICogIENlcnRhaW4gYnJvd3NlcnMgbGltaXQgYWNjZXNzIHRvIHRoZSB1c2VyJ3MgbWljcm9waG9uZS4gRm9yIGV4YW1wbGUsXG4gICAqICBDaHJvbWUgb25seSBhbGxvd3MgYWNjZXNzIGZyb20gbG9jYWxob3N0IGFuZCBvdmVyIGh0dHBzLiBGb3IgdGhpcyByZWFzb24sXG4gICAqICB5b3UgbWF5IHdhbnQgdG8gaW5jbHVkZSBhbiBlcnJvckNhbGxiYWNr4oCUYSBmdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCBpbiBjYXNlXG4gICAqICB0aGUgYnJvd3NlciB3b24ndCBwcm92aWRlIG1pYyBhY2Nlc3MuXG4gICAqXG4gICAqICBAbWV0aG9kIHN0YXJ0XG4gICAqICBAZm9yIHA1LkF1ZGlvSW5cbiAgICogIEBwYXJhbSB7RnVuY3Rpb259IFtzdWNjZXNzQ2FsbGJhY2tdIE5hbWUgb2YgYSBmdW5jdGlvbiB0byBjYWxsIG9uXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzcy5cbiAgICogIEBwYXJhbSB7RnVuY3Rpb259IFtlcnJvckNhbGxiYWNrXSBOYW1lIG9mIGEgZnVuY3Rpb24gdG8gY2FsbCBpZlxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZXJlIHdhcyBhbiBlcnJvci4gRm9yIGV4YW1wbGUsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc29tZSBicm93c2VycyBkbyBub3Qgc3VwcG9ydFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldFVzZXJNZWRpYS5cbiAgICovXG5cblxuICBhdWRpb2luX2NyZWF0ZUNsYXNzKEF1ZGlvSW4sIFt7XG4gICAga2V5OiBcInN0YXJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0KHN1Y2Nlc3NDYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5zdHJlYW0pIHtcbiAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICB9IFxuXG5cbiAgICAgIHZhciBhdWRpb1NvdXJjZSA9IG1haW4uaW5wdXRTb3VyY2VzW3NlbGYuY3VycmVudFNvdXJjZV07XG4gICAgICB2YXIgY29uc3RyYWludHMgPSB7XG4gICAgICAgIGF1ZGlvOiB7XG4gICAgICAgICAgc2FtcGxlUmF0ZTogbWFpbi5hdWRpb2NvbnRleHQuc2FtcGxlUmF0ZSxcbiAgICAgICAgICBlY2hvQ2FuY2VsbGF0aW9uOiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9OyBcblxuICAgICAgaWYgKG1haW4uaW5wdXRTb3VyY2VzW3RoaXMuY3VycmVudFNvdXJjZV0pIHtcbiAgICAgICAgY29uc3RyYWludHMuYXVkaW8uZGV2aWNlSWQgPSBhdWRpb1NvdXJjZS5kZXZpY2VJZDtcbiAgICAgIH1cblxuICAgICAgd2luZG93Lm5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKS50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgICAgc2VsZi5zdHJlYW0gPSBzdHJlYW07XG4gICAgICAgIHNlbGYuZW5hYmxlZCA9IHRydWU7IFxuXG4gICAgICAgIHNlbGYubWVkaWFTdHJlYW0gPSBtYWluLmF1ZGlvY29udGV4dC5jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZShzdHJlYW0pO1xuICAgICAgICBzZWxmLm1lZGlhU3RyZWFtLmNvbm5lY3Qoc2VsZi5vdXRwdXQpOyBcblxuICAgICAgICBzZWxmLmFtcGxpdHVkZS5zZXRJbnB1dChzZWxmLm91dHB1dCk7XG4gICAgICAgIGlmIChzdWNjZXNzQ2FsbGJhY2spIHN1Y2Nlc3NDYWxsYmFjaygpO1xuICAgICAgfSlbXCJjYXRjaFwiXShmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGlmIChlcnJvckNhbGxiYWNrKSBlcnJvckNhbGxiYWNrKGVycik7ZWxzZSBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFR1cm4gdGhlIEF1ZGlvSW4gb2ZmLiBJZiB0aGUgQXVkaW9JbiBpcyBzdG9wcGVkLCBpdCBjYW5ub3QgZ2V0TGV2ZWwoKS5cbiAgICAgKiAgSWYgcmUtc3RhcnRpbmcsIHRoZSB1c2VyIG1heSBiZSBwcm9tcHRlZCBmb3IgcGVybWlzc2lvbiBhY2Nlc3MuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCBzdG9wXG4gICAgICogIEBmb3IgcDUuQXVkaW9JblxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgaWYgKHRoaXMuc3RyZWFtKSB7XG4gICAgICAgIHRoaXMuc3RyZWFtLmdldFRyYWNrcygpLmZvckVhY2goZnVuY3Rpb24gKHRyYWNrKSB7XG4gICAgICAgICAgdHJhY2suc3RvcCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tZWRpYVN0cmVhbS5kaXNjb25uZWN0KCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm1lZGlhU3RyZWFtO1xuICAgICAgICBkZWxldGUgdGhpcy5zdHJlYW07XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBDb25uZWN0IHRvIGFuIGF1ZGlvIHVuaXQuIElmIG5vIHBhcmFtZXRlciBpcyBwcm92aWRlZCwgd2lsbFxuICAgICAqICBjb25uZWN0IHRvIHRoZSBtYWluIG91dHB1dCAoaS5lLiB5b3VyIHNwZWFrZXJzKS48YnIvPlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGNvbm5lY3RcbiAgICAgKiAgQGZvciBwNS5BdWRpb0luXG4gICAgICogIEBwYXJhbSAge09iamVjdH0gW3VuaXRdIEFuIG9iamVjdCB0aGF0IGFjY2VwdHMgYXVkaW8gaW5wdXQsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2ggYXMgYW4gRkZUXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3QodW5pdCkge1xuICAgICAgaWYgKHVuaXQpIHtcbiAgICAgICAgaWYgKHVuaXQuaGFzT3duUHJvcGVydHkoJ2lucHV0JykpIHtcbiAgICAgICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHVuaXQuaW5wdXQpO1xuICAgICAgICB9IGVsc2UgaWYgKHVuaXQuaGFzT3duUHJvcGVydHkoJ2FuYWx5c2VyJykpIHtcbiAgICAgICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHVuaXQuYW5hbHlzZXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodW5pdCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QobWFpbi5pbnB1dCk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBEaXNjb25uZWN0IHRoZSBBdWRpb0luIGZyb20gYWxsIGF1ZGlvIHVuaXRzLiBGb3IgZXhhbXBsZSwgaWZcbiAgICAgKiAgY29ubmVjdCgpIGhhZCBiZWVuIGNhbGxlZCwgZGlzY29ubmVjdCgpIHdpbGwgc3RvcCBzZW5kaW5nXG4gICAgICogIHNpZ25hbCB0byB5b3VyIHNwZWFrZXJzLjxici8+XG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZGlzY29ubmVjdFxuICAgICAqICBAZm9yIHA1LkF1ZGlvSW5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRpc2Nvbm5lY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzY29ubmVjdCgpIHtcbiAgICAgIGlmICh0aGlzLm91dHB1dCkge1xuICAgICAgICB0aGlzLm91dHB1dC5kaXNjb25uZWN0KCk7IFxuXG4gICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodGhpcy5hbXBsaXR1ZGUuaW5wdXQpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmVhZCB0aGUgQW1wbGl0dWRlICh2b2x1bWUgbGV2ZWwpIG9mIGFuIEF1ZGlvSW4uIFRoZSBBdWRpb0luXG4gICAgICogIGNsYXNzIGNvbnRhaW5zIGl0cyBvd24gaW5zdGFuY2Ugb2YgdGhlIEFtcGxpdHVkZSBjbGFzcyB0byBoZWxwXG4gICAgICogIG1ha2UgaXQgZWFzeSB0byBnZXQgYSBtaWNyb3Bob25lJ3Mgdm9sdW1lIGxldmVsLiBBY2NlcHRzIGFuXG4gICAgICogIG9wdGlvbmFsIHNtb290aGluZyB2YWx1ZSAoMC4wIDwgMS4wKS4gPGVtPk5PVEU6IEF1ZGlvSW4gbXVzdFxuICAgICAqICAuc3RhcnQoKSBiZWZvcmUgdXNpbmcgLmdldExldmVsKCkuPC9lbT48YnIvPlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGdldExldmVsXG4gICAgICogIEBmb3IgcDUuQXVkaW9JblxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtzbW9vdGhpbmddIFNtb290aGluZyBpcyAwLjAgYnkgZGVmYXVsdC5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTbW9vdGhzIHZhbHVlcyBiYXNlZCBvbiBwcmV2aW91cyB2YWx1ZXMuXG4gICAgICogIEByZXR1cm4ge051bWJlcn0gICAgICAgICAgIFZvbHVtZSBsZXZlbCAoYmV0d2VlbiAwLjAgYW5kIDEuMClcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldExldmVsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldExldmVsKHNtb290aGluZykge1xuICAgICAgaWYgKHNtb290aGluZykge1xuICAgICAgICB0aGlzLmFtcGxpdHVkZS5zbW9vdGhpbmcgPSBzbW9vdGhpbmc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmFtcGxpdHVkZS5nZXRMZXZlbCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IGFtcGxpdHVkZSAodm9sdW1lKSBvZiBhIG1pYyBpbnB1dCBiZXR3ZWVuIDAgYW5kIDEuMC4gPGJyLz5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBhbXBcbiAgICAgKiAgQGZvciBwNS5BdWRpb0luXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gdm9sIGJldHdlZW4gMCBhbmQgMS4wXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbdGltZV0gcmFtcCB0aW1lIChvcHRpb25hbClcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImFtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhbXAodm9sLCB0KSB7XG4gICAgICBpZiAodCkge1xuICAgICAgICB2YXIgcmFtcFRpbWUgPSB0IHx8IDA7XG4gICAgICAgIHZhciBjdXJyZW50Vm9sID0gdGhpcy5vdXRwdXQuZ2Fpbi52YWx1ZTtcbiAgICAgICAgdGhpcy5vdXRwdXQuZ2Fpbi5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMobWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWUpO1xuICAgICAgICB0aGlzLm91dHB1dC5nYWluLnNldFZhbHVlQXRUaW1lKGN1cnJlbnRWb2wsIG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lKTtcbiAgICAgICAgdGhpcy5vdXRwdXQuZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh2b2wsIHJhbXBUaW1lICsgbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vdXRwdXQuZ2Fpbi5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMobWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWUpO1xuICAgICAgICB0aGlzLm91dHB1dC5nYWluLnNldFZhbHVlQXRUaW1lKHZvbCwgbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWUpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBhdmFpbGFibGUgaW5wdXQgc291cmNlcy4gVGhpcyBpcyBhIHdyYXBwZXJcbiAgICAgKiBmb3IgPGEgaHJlZj1cImh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL1xuICAgICAqIGVuLVVTL2RvY3MvV2ViL0FQSS9NZWRpYURldmljZXMvZW51bWVyYXRlRGV2aWNlc1wiIHRhcmdldD1cIl9ibGFua1wiPlxuICAgICAqIE1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKCkgLSBXZWIgQVBJcyB8IE1ETjwvYT5cbiAgICAgKiBhbmQgaXQgcmV0dXJucyBhIFByb21pc2UuXG4gICAgICogQG1ldGhvZCAgZ2V0U291cmNlc1xuICAgICAqIEBmb3IgcDUuQXVkaW9JblxuICAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBbc3VjY2Vzc0NhbGxiYWNrXSBUaGlzIGNhbGxiYWNrIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIHNvdXJjZXMgd2hlbiB0aGV5XG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhdmUgYmVlbiBlbnVtZXJhdGVkLiBUaGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjZWl2ZXMgdGhlIGRldmljZUxpc3QgYXJyYXkgYXMgaXRzIG9ubHkgYXJndW1lbnRcbiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gW2Vycm9yQ2FsbGJhY2tdIFRoaXMgb3B0aW9uYWwgY2FsbGJhY2sgcmVjZWl2ZXMgdGhlIGVycm9yXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlIGFzIGl0cyBhcmd1bWVudC5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gUmV0dXJucyBhIFByb21pc2UgdGhhdCBjYW4gYmUgdXNlZCBpbiBwbGFjZSBvZiB0aGUgY2FsbGJhY2tzLCBzaW1pbGFyXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIGVudW1lcmF0ZURldmljZXMoKSBtZXRob2RcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgYXVkaW9JbjtcbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpe1xuICAgICAqICAgIHRleHQoJ2dldHRpbmcgc291cmNlcy4uLicsIDAsIDIwKTtcbiAgICAgKiAgICBhdWRpb0luID0gbmV3IHA1LkF1ZGlvSW4oKTtcbiAgICAgKiAgICBhdWRpb0luLmdldFNvdXJjZXMoZ290U291cmNlcyk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBnb3RTb3VyY2VzKGRldmljZUxpc3QpIHtcbiAgICAgKiAgICBpZiAoZGV2aWNlTGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICogICAgICAvL3NldCB0aGUgc291cmNlIHRvIHRoZSBmaXJzdCBpdGVtIGluIHRoZSBkZXZpY2VMaXN0IGFycmF5XG4gICAgICogICAgICBhdWRpb0luLnNldFNvdXJjZSgwKTtcbiAgICAgKiAgICAgIGxldCBjdXJyZW50U291cmNlID0gZGV2aWNlTGlzdFthdWRpb0luLmN1cnJlbnRTb3VyY2VdO1xuICAgICAqICAgICAgdGV4dCgnc2V0IHNvdXJjZSB0bzogJyArIGN1cnJlbnRTb3VyY2UuZGV2aWNlSWQsIDUsIDIwLCB3aWR0aCk7XG4gICAgICogICAgfVxuICAgICAqICB9XG4gICAgICogIDwvY29kZT48L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldFNvdXJjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U291cmNlcyhvblN1Y2Nlc3MsIG9uRXJyb3IpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKS50aGVuKGZ1bmN0aW9uIChkZXZpY2VzKSB7XG4gICAgICAgICAgbWFpbi5pbnB1dFNvdXJjZXMgPSBkZXZpY2VzLmZpbHRlcihmdW5jdGlvbiAoZGV2aWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gZGV2aWNlLmtpbmQgPT09ICdhdWRpb2lucHV0JztcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXNvbHZlKG1haW4uaW5wdXRTb3VyY2VzKTtcblxuICAgICAgICAgIGlmIChvblN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIG9uU3VjY2VzcyhtYWluLmlucHV0U291cmNlcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVtcImNhdGNoXCJdKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG5cbiAgICAgICAgICBpZiAob25FcnJvcikge1xuICAgICAgICAgICAgb25FcnJvcihlcnJvcik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IE1lZGlhU3RyZWFtVHJhY2suZ2V0U291cmNlcygpJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IHRoZSBpbnB1dCBzb3VyY2UuIEFjY2VwdHMgYSBudW1iZXIgcmVwcmVzZW50aW5nIGFcbiAgICAgKiAgcG9zaXRpb24gaW4gdGhlIGFycmF5IHJldHVybmVkIGJ5IGdldFNvdXJjZXMoKS5cbiAgICAgKiAgVGhpcyBpcyBvbmx5IGF2YWlsYWJsZSBpbiBicm93c2VycyB0aGF0IHN1cHBvcnRcbiAgICAgKiA8YSBocmVmPVwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvXG4gICAgICogZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhRGV2aWNlcy9lbnVtZXJhdGVEZXZpY2VzXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICogbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKCk8L2E+XG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCBzZXRTb3VyY2VcbiAgICAgKiAgQGZvciBwNS5BdWRpb0luXG4gICAgICogIEBwYXJhbSB7bnVtYmVyfSBudW0gcG9zaXRpb24gb2YgaW5wdXQgc291cmNlIGluIHRoZSBhcnJheVxuICAgICAqICBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgYXVkaW9JbjtcbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpe1xuICAgICAqICAgIHRleHQoJ2dldHRpbmcgc291cmNlcy4uLicsIDAsIDIwKTtcbiAgICAgKiAgICBhdWRpb0luID0gbmV3IHA1LkF1ZGlvSW4oKTtcbiAgICAgKiAgICBhdWRpb0luLmdldFNvdXJjZXMoZ290U291cmNlcyk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBnb3RTb3VyY2VzKGRldmljZUxpc3QpIHtcbiAgICAgKiAgICBpZiAoZGV2aWNlTGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICogICAgICAvL3NldCB0aGUgc291cmNlIHRvIHRoZSBmaXJzdCBpdGVtIGluIHRoZSBkZXZpY2VMaXN0IGFycmF5XG4gICAgICogICAgICBhdWRpb0luLnNldFNvdXJjZSgwKTtcbiAgICAgKiAgICAgIGxldCBjdXJyZW50U291cmNlID0gZGV2aWNlTGlzdFthdWRpb0luLmN1cnJlbnRTb3VyY2VdO1xuICAgICAqICAgICAgdGV4dCgnc2V0IHNvdXJjZSB0bzogJyArIGN1cnJlbnRTb3VyY2UuZGV2aWNlSWQsIDUsIDIwLCB3aWR0aCk7XG4gICAgICogICAgfVxuICAgICAqICB9XG4gICAgICogIDwvY29kZT48L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInNldFNvdXJjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTb3VyY2UobnVtKSB7XG4gICAgICBpZiAobWFpbi5pbnB1dFNvdXJjZXMubGVuZ3RoID4gMCAmJiBudW0gPCBtYWluLmlucHV0U291cmNlcy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5jdXJyZW50U291cmNlID0gbnVtO1xuICAgICAgICBjb25zb2xlLmxvZygnc2V0IHNvdXJjZSB0byAnLCBtYWluLmlucHV0U291cmNlc1t0aGlzLmN1cnJlbnRTb3VyY2VdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd1bmFibGUgdG8gc2V0IGlucHV0IHNvdXJjZScpO1xuICAgICAgfSBcblxuXG4gICAgICBpZiAodGhpcy5zdHJlYW0gJiYgdGhpcy5zdHJlYW0uYWN0aXZlKSB7XG4gICAgICAgIHRoaXMuc3RhcnQoKTtcbiAgICAgIH1cbiAgICB9IFxuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgdmFyIGluZGV4ID0gbWFpbi5zb3VuZEFycmF5LmluZGV4T2YodGhpcyk7XG4gICAgICBtYWluLnNvdW5kQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMuc3RvcCgpO1xuXG4gICAgICBpZiAodGhpcy5vdXRwdXQpIHtcbiAgICAgICAgdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5hbXBsaXR1ZGUpIHtcbiAgICAgICAgdGhpcy5hbXBsaXR1ZGUuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgdGhpcy5hbXBsaXR1ZGU7XG4gICAgICBkZWxldGUgdGhpcy5vdXRwdXQ7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEF1ZGlvSW47XG59KCk7XG5cbiB2YXIgYXVkaW9pbiA9IChhdWRpb2luX0F1ZGlvSW4pO1xudmFyIENyb3NzRmFkZSA9IF9fd2VicGFja19yZXF1aXJlX18oMjMpO1xudmFyIENyb3NzRmFkZV9kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKENyb3NzRmFkZSk7XG5cbmZ1bmN0aW9uIGVmZmVjdF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGVmZmVjdF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gZWZmZWN0X2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZWZmZWN0X2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBlZmZlY3RfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuXG5cbi8qKlxuICogRWZmZWN0IGlzIGEgYmFzZSBjbGFzcyBmb3IgYXVkaW8gZWZmZWN0cyBpbiBwNS4gPGJyPlxuICogVGhpcyBtb2R1bGUgaGFuZGxlcyB0aGUgbm9kZXMgYW5kIG1ldGhvZHMgdGhhdCBhcmVcbiAqIGNvbW1vbiBhbmQgdXNlZnVsIGZvciBjdXJyZW50IGFuZCBmdXR1cmUgZWZmZWN0cy5cbiAqXG4gKlxuICogVGhpcyBjbGFzcyBpcyBleHRlbmRlZCBieSA8YSBocmVmPVwiL3JlZmVyZW5jZS8jL3A1LkRpc3RvcnRpb25cIj5wNS5EaXN0b3J0aW9uPC9hPixcbiAqIDxhIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUuQ29tcHJlc3NvclwiPnA1LkNvbXByZXNzb3I8L2E+LFxuICogPGEgaHJlZj1cIi9yZWZlcmVuY2UvIy9wNS5EZWxheVwiPnA1LkRlbGF5PC9hPixcbiAqIDxhIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUuRmlsdGVyXCI+cDUuRmlsdGVyPC9hPixcbiAqIDxhIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUuUmV2ZXJiXCI+cDUuUmV2ZXJiPC9hPi5cbiAqXG4gKiBAY2xhc3MgIHA1LkVmZmVjdFxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFthY10gICBSZWZlcmVuY2UgdG8gdGhlIGF1ZGlvIGNvbnRleHQgb2YgdGhlIHA1IG9iamVjdFxuICogQHBhcmFtIHtBdWRpb05vZGV9IFtpbnB1dF0gIEdhaW4gTm9kZSBlZmZlY3Qgd3JhcHBlclxuICogQHBhcmFtIHtBdWRpb05vZGV9IFtvdXRwdXRdIEdhaW4gTm9kZSBlZmZlY3Qgd3JhcHBlclxuICogQHBhcmFtIHtPYmplY3R9IFtfZHJ5d2V0XSAgIFRvbmUuSlMgQ3Jvc3NGYWRlIG5vZGUgKGRlZmF1bHRzIHRvIHZhbHVlOiAxKVxuICogQHBhcmFtIHtBdWRpb05vZGV9IFt3ZXRdICBFZmZlY3RzIHRoYXQgZXh0ZW5kIHRoaXMgY2xhc3Mgc2hvdWxkIGNvbm5lY3RcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHdldCBzaWduYWwgdG8gdGhpcyBnYWluIG5vZGUsIHNvIHRoYXQgZHJ5IGFuZCB3ZXRcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFscyBhcmUgbWl4ZWQgcHJvcGVybHkuXG4gKi9cblxudmFyIGVmZmVjdF9FZmZlY3QgPVxuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBFZmZlY3QoKSB7XG4gICAgZWZmZWN0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVmZmVjdCk7XG5cbiAgICB0aGlzLmFjID0gbWFpbi5hdWRpb2NvbnRleHQ7XG4gICAgdGhpcy5pbnB1dCA9IHRoaXMuYWMuY3JlYXRlR2FpbigpO1xuICAgIHRoaXMub3V0cHV0ID0gdGhpcy5hYy5jcmVhdGVHYWluKCk7XG4gICAgLyoqXG4gICAgICpcdFRoZSBwNS5FZmZlY3QgY2xhc3MgaXMgYnVpbHRcbiAgICAgKiBcdHVzaW5nIFRvbmUuanMgQ3Jvc3NGYWRlXG4gICAgICogXHRAcHJpdmF0ZVxuICAgICAqL1xuXG4gICAgdGhpcy5fZHJ5d2V0ID0gbmV3IENyb3NzRmFkZV9kZWZhdWx0LmEoMSk7XG4gICAgLyoqXG4gICAgICpcdEluIGNsYXNzZXMgdGhhdCBleHRlbmRcbiAgICAgKlx0cDUuRWZmZWN0LCBjb25uZWN0IGVmZmVjdCBub2Rlc1xuICAgICAqXHR0byB0aGUgd2V0IHBhcmFtZXRlclxuICAgICAqL1xuXG4gICAgdGhpcy53ZXQgPSB0aGlzLmFjLmNyZWF0ZUdhaW4oKTtcbiAgICB0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5fZHJ5d2V0LmEpO1xuICAgIHRoaXMud2V0LmNvbm5lY3QodGhpcy5fZHJ5d2V0LmIpO1xuXG4gICAgdGhpcy5fZHJ5d2V0LmNvbm5lY3QodGhpcy5vdXRwdXQpO1xuXG4gICAgdGhpcy5jb25uZWN0KCk7IFxuXG4gICAgbWFpbi5zb3VuZEFycmF5LnB1c2godGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqICBTZXQgdGhlIG91dHB1dCB2b2x1bWUgb2YgdGhlIGZpbHRlci5cbiAgICpcbiAgICogIEBtZXRob2QgIGFtcFxuICAgKiAgQGZvciBwNS5FZmZlY3RcbiAgICogIEBwYXJhbSB7TnVtYmVyfSBbdm9sXSBhbXBsaXR1ZGUgYmV0d2VlbiAwIGFuZCAxLjBcbiAgICogIEBwYXJhbSB7TnVtYmVyfSBbcmFtcFRpbWVdIGNyZWF0ZSBhIGZhZGUgdGhhdCBsYXN0cyB1bnRpbCByYW1wVGltZVxuICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFt0RnJvbU5vd10gc2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW4gaW4gdEZyb21Ob3cgc2Vjb25kc1xuICAgKi9cblxuXG4gIGVmZmVjdF9jcmVhdGVDbGFzcyhFZmZlY3QsIFt7XG4gICAga2V5OiBcImFtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhbXAodm9sKSB7XG4gICAgICB2YXIgcmFtcFRpbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7XG4gICAgICB2YXIgdEZyb21Ob3cgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDA7XG4gICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICB2YXIgc3RhcnRUaW1lID0gbm93ICsgdEZyb21Ob3c7XG4gICAgICB2YXIgZW5kVGltZSA9IHN0YXJ0VGltZSArIHJhbXBUaW1lICsgMC4wMDE7XG4gICAgICB2YXIgY3VycmVudFZvbCA9IHRoaXMub3V0cHV0LmdhaW4udmFsdWU7XG4gICAgICB0aGlzLm91dHB1dC5nYWluLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhub3cpO1xuICAgICAgdGhpcy5vdXRwdXQuZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShjdXJyZW50Vm9sLCBzdGFydFRpbWUgKyAwLjAwMSk7XG4gICAgICB0aGlzLm91dHB1dC5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHZvbCwgZW5kVGltZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBMaW5rIGVmZmVjdHMgdG9nZXRoZXIgaW4gYSBjaGFpblxuICAgICAqICBFeGFtcGxlIHVzYWdlOiBmaWx0ZXIuY2hhaW4ocmV2ZXJiLCBkZWxheSwgcGFubmVyKTtcbiAgICAgKiAgTWF5IGJlIHVzZWQgd2l0aCBhbiBvcGVuLWVuZGVkIG51bWJlciBvZiBhcmd1bWVudHNcbiAgICAgKlxuICAgICAqICBAbWV0aG9kIGNoYWluXG4gICAgICogIEBmb3IgcDUuRWZmZWN0XG4gICAgICogIEBwYXJhbSB7T2JqZWN0fSBbYXJndW1lbnRzXSAgQ2hhaW4gdG9nZXRoZXIgbXVsdGlwbGUgc291bmQgb2JqZWN0c1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiY2hhaW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2hhaW4oKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdGhpcy5jb25uZWN0KGFyZ3VtZW50c1swXSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICBhcmd1bWVudHNbaSAtIDFdLmNvbm5lY3QoYXJndW1lbnRzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogIEFkanVzdCB0aGUgZHJ5L3dldCB2YWx1ZS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kIGRyeXdldFxuICAgICAqICBAZm9yIHA1LkVmZmVjdFxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW2ZhZGVdIFRoZSBkZXNpcmVkIGRyeXdldCB2YWx1ZSAoMCAtIDEuMClcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRyeXdldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkcnl3ZXQoZmFkZSkge1xuICAgICAgaWYgKHR5cGVvZiBmYWRlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aGlzLl9kcnl3ZXQuZmFkZS52YWx1ZSA9IGZhZGU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLl9kcnl3ZXQuZmFkZS52YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNlbmQgb3V0cHV0IHRvIGEgcDUuanMtc291bmQsIFdlYiBBdWRpbyBOb2RlLCBvciB1c2Ugc2lnbmFsIHRvXG4gICAgICogIGNvbnRyb2wgYW4gQXVkaW9QYXJhbVxuICAgICAqXG4gICAgICogIEBtZXRob2QgY29ubmVjdFxuICAgICAqICBAZm9yIHA1LkVmZmVjdFxuICAgICAqICBAcGFyYW0ge09iamVjdH0gdW5pdFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb25uZWN0KHVuaXQpIHtcbiAgICAgIHZhciB1ID0gdW5pdCB8fCBwNS5zb3VuZE91dC5pbnB1dDtcbiAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodS5pbnB1dCA/IHUuaW5wdXQgOiB1KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGlzY29ubmVjdCBhbGwgb3V0cHV0LlxuICAgICAqIEBtZXRob2QgZGlzY29ubmVjdFxuICAgICAqIEBmb3IgcDUuRWZmZWN0XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkaXNjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgICBpZiAodGhpcy5vdXRwdXQpIHtcbiAgICAgICAgdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXNwb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICB2YXIgaW5kZXggPSBtYWluLnNvdW5kQXJyYXkuaW5kZXhPZih0aGlzKTtcbiAgICAgIG1haW4uc291bmRBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICBpZiAodGhpcy5pbnB1dCkge1xuICAgICAgICB0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuaW5wdXQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm91dHB1dCkge1xuICAgICAgICB0aGlzLm91dHB1dC5kaXNjb25uZWN0KCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm91dHB1dDtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX2RyeXdldCkge1xuICAgICAgICB0aGlzLl9kcnl3ZXQuZGlzY29ubmVjdCgpO1xuXG4gICAgICAgIGRlbGV0ZSB0aGlzLl9kcnl3ZXQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLndldCkge1xuICAgICAgICB0aGlzLndldC5kaXNjb25uZWN0KCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLndldDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hYyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRWZmZWN0O1xufSgpO1xuXG4gdmFyIGVmZmVjdCA9IChlZmZlY3RfRWZmZWN0KTtcbmZ1bmN0aW9uIGZpbHRlcl90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBmaWx0ZXJfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IGZpbHRlcl90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gZmlsdGVyX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIGZpbHRlcl9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGZpbHRlcl9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gZmlsdGVyX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZmlsdGVyX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBmaWx0ZXJfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gZmlsdGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoZmlsdGVyX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gZmlsdGVyX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBmaWx0ZXJfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAodHlwZW9mIFJlZmxlY3QgIT09IFwidW5kZWZpbmVkXCIgJiYgUmVmbGVjdC5nZXQpIHsgX2dldCA9IFJlZmxlY3QuZ2V0OyB9IGVsc2UgeyBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyB2YXIgYmFzZSA9IF9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpOyBpZiAoIWJhc2UpIHJldHVybjsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTsgaWYgKGRlc2MuZ2V0KSB7IHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTsgfSByZXR1cm4gZGVzYy52YWx1ZTsgfTsgfSByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpOyB9XG5cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHsgd2hpbGUgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHsgb2JqZWN0ID0gZmlsdGVyX2dldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrOyB9IHJldHVybiBvYmplY3Q7IH1cblxuZnVuY3Rpb24gZmlsdGVyX2dldFByb3RvdHlwZU9mKG8pIHsgZmlsdGVyX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIGZpbHRlcl9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG5mdW5jdGlvbiBmaWx0ZXJfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgZmlsdGVyX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBmaWx0ZXJfc2V0UHJvdG90eXBlT2YobywgcCkgeyBmaWx0ZXJfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIGZpbHRlcl9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5cbi8qKlxuICogIDxwPkEgcDUuRmlsdGVyIHVzZXMgYSBXZWIgQXVkaW8gQmlxdWFkIEZpbHRlciB0byBmaWx0ZXJcbiAqICB0aGUgZnJlcXVlbmN5IHJlc3BvbnNlIG9mIGFuIGlucHV0IHNvdXJjZS4gU3ViY2xhc3Nlc1xuICogIGluY2x1ZGU6PC9wPlxuICogIDxhIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUuTG93UGFzc1wiPjxjb2RlPnA1Lkxvd1Bhc3M8L2NvZGU+PC9hPjpcbiAqICBBbGxvd3MgZnJlcXVlbmNpZXMgYmVsb3cgdGhlIGN1dG9mZiBmcmVxdWVuY3kgdG8gcGFzcyB0aHJvdWdoLFxuICogIGFuZCBhdHRlbnVhdGVzIGZyZXF1ZW5jaWVzIGFib3ZlIHRoZSBjdXRvZmYuPGJyLz5cbiAqICA8YSBocmVmPVwiL3JlZmVyZW5jZS8jL3A1LkhpZ2hQYXNzXCI+PGNvZGU+cDUuSGlnaFBhc3M8L2NvZGU+PC9hPjpcbiAqICBUaGUgb3Bwb3NpdGUgb2YgYSBsb3dwYXNzIGZpbHRlci4gPGJyLz5cbiAqICA8YSBocmVmPVwiL3JlZmVyZW5jZS8jL3A1LkJhbmRQYXNzXCI+PGNvZGU+cDUuQmFuZFBhc3M8L2NvZGU+PC9hPjpcbiAqICBBbGxvd3MgYSByYW5nZSBvZiBmcmVxdWVuY2llcyB0byBwYXNzIHRocm91Z2ggYW5kIGF0dGVudWF0ZXNcbiAqICB0aGUgZnJlcXVlbmNpZXMgYmVsb3cgYW5kIGFib3ZlIHRoaXMgZnJlcXVlbmN5IHJhbmdlLjxici8+XG4gKlxuICogIFRoZSA8Y29kZT4ucmVzKCk8L2NvZGU+IG1ldGhvZCBjb250cm9scyBlaXRoZXIgd2lkdGggb2YgdGhlXG4gKiAgYmFuZHBhc3MsIG9yIHJlc29uYW5jZSBvZiB0aGUgbG93L2hpZ2hwYXNzIGN1dG9mZiBmcmVxdWVuY3kuXG4gKlxuICogIFRoaXMgY2xhc3MgZXh0ZW5kcyA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0XCI+cDUuRWZmZWN0PC9hPi5cbiAqICBNZXRob2RzIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvYW1wXCI+YW1wKCk8L2E+LCA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2NoYWluXCI+Y2hhaW4oKTwvYT4sXG4gKiAgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kcnl3ZXRcIj5kcnl3ZXQoKTwvYT4sIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvY29ubmVjdFwiPmNvbm5lY3QoKTwvYT4sIGFuZFxuICogIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvZGlzY29ubmVjdFwiPmRpc2Nvbm5lY3QoKTwvYT4gYXJlIGF2YWlsYWJsZS5cbiAqXG4gKiAgQGNsYXNzIHA1LkZpbHRlclxuICogIEBleHRlbmRzIHA1LkVmZmVjdFxuICogIEBjb25zdHJ1Y3RvclxuICogIEBwYXJhbSB7U3RyaW5nfSBbdHlwZV0gJ2xvd3Bhc3MnIChkZWZhdWx0KSwgJ2hpZ2hwYXNzJywgJ2JhbmRwYXNzJ1xuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgZmZ0LCBub2lzZSwgZmlsdGVyO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKG1ha2VOb2lzZSk7XG4gKiAgICBmaWxsKDI1NSwgMCwgMjU1KTtcbiAqXG4gKiAgICBmaWx0ZXIgPSBuZXcgcDUuQmFuZFBhc3MoKTtcbiAqICAgIG5vaXNlID0gbmV3IHA1Lk5vaXNlKCk7XG4gKiAgICBub2lzZS5kaXNjb25uZWN0KCk7XG4gKiAgICBub2lzZS5jb25uZWN0KGZpbHRlcik7XG4gKlxuICogICAgZmZ0ID0gbmV3IHA1LkZGVCgpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqXG4gKiAgICAvLyBzZXQgdGhlIEJhbmRQYXNzIGZyZXF1ZW5jeSBiYXNlZCBvbiBtb3VzZVhcbiAqICAgIGxldCBmcmVxID0gbWFwKG1vdXNlWCwgMCwgd2lkdGgsIDIwLCAxMDAwMCk7XG4gKiAgICBmcmVxID0gY29uc3RyYWluKGZyZXEsIDAsIDIyMDUwKTtcbiAqICAgIGZpbHRlci5mcmVxKGZyZXEpO1xuICogICAgLy8gZ2l2ZSB0aGUgZmlsdGVyIGEgbmFycm93IGJhbmQgKGxvd2VyIHJlcyA9IHdpZGVyIGJhbmRwYXNzKVxuICogICAgZmlsdGVyLnJlcyg1MCk7XG4gKlxuICogICAgLy8gZHJhdyBmaWx0ZXJlZCBzcGVjdHJ1bVxuICogICAgbGV0IHNwZWN0cnVtID0gZmZ0LmFuYWx5emUoKTtcbiAqICAgIG5vU3Ryb2tlKCk7XG4gKiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNwZWN0cnVtLmxlbmd0aDsgaSsrKSB7XG4gKiAgICAgIGxldCB4ID0gbWFwKGksIDAsIHNwZWN0cnVtLmxlbmd0aCwgMCwgd2lkdGgpO1xuICogICAgICBsZXQgaCA9IC1oZWlnaHQgKyBtYXAoc3BlY3RydW1baV0sIDAsIDI1NSwgaGVpZ2h0LCAwKTtcbiAqICAgICAgcmVjdCh4LCBoZWlnaHQsIHdpZHRoL3NwZWN0cnVtLmxlbmd0aCwgaCk7XG4gKiAgICB9XG4gKiAgICBpZiAoIW5vaXNlLnN0YXJ0ZWQpIHtcbiAqICAgICAgdGV4dCgndGFwIGhlcmUgYW5kIGRyYWcgdG8gY2hhbmdlIGZyZXF1ZW5jeScsIDEwLCAyMCwgd2lkdGggLSAyMCk7XG4gKiAgICB9IGVsc2Uge1xuICogICAgICB0ZXh0KCdGcmVxdWVuY3k6ICcgKyByb3VuZChmcmVxKSsnSHonLCAyMCwgMjAsIHdpZHRoIC0gMjApO1xuICogICAgfVxuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gbWFrZU5vaXNlKCkge1xuICogICAgLy8gc2VlIGFsc286IGB1c2VyU3RhcnRBdWRpbygpYFxuICogICAgbm9pc2Uuc3RhcnQoKTtcbiAqICAgIG5vaXNlLmFtcCgwLjUsIDAuMik7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICogICAgbm9pc2UuYW1wKDAsIDAuMik7XG4gKiAgfVxuICpcbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxudmFyIEZpbHRlciA9XG5mdW5jdGlvbiAoX0VmZmVjdCkge1xuICBmaWx0ZXJfaW5oZXJpdHMoRmlsdGVyLCBfRWZmZWN0KTtcblxuICBmdW5jdGlvbiBGaWx0ZXIodHlwZSkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZpbHRlcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBGaWx0ZXIpO1xuXG4gICAgX3RoaXMgPSBmaWx0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBmaWx0ZXJfZ2V0UHJvdG90eXBlT2YoRmlsdGVyKS5jYWxsKHRoaXMpKTsgXG5cbiAgICAvKipcbiAgICAgKiAgVGhlIHA1LkZpbHRlciBpcyBidWlsdCB3aXRoIGFcbiAgICAgKiAgPGEgaHJlZj1cImh0dHA6Ly93d3cudzMub3JnL1RSL3dlYmF1ZGlvLyNCaXF1YWRGaWx0ZXJOb2RlXCI+XG4gICAgICogIFdlYiBBdWRpbyBCaXF1YWRGaWx0ZXIgTm9kZTwvYT4uXG4gICAgICpcbiAgICAgKiAgQHByb3BlcnR5IHtEZWxheU5vZGV9IGJpcXVhZEZpbHRlclxuICAgICAqL1xuXG4gICAgX3RoaXMuYmlxdWFkID0gX3RoaXMuYWMuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG5cbiAgICBfdGhpcy5pbnB1dC5jb25uZWN0KF90aGlzLmJpcXVhZCk7XG5cbiAgICBfdGhpcy5iaXF1YWQuY29ubmVjdChfdGhpcy53ZXQpO1xuXG4gICAgaWYgKHR5cGUpIHtcbiAgICAgIF90aGlzLnNldFR5cGUodHlwZSk7XG4gICAgfSBcblxuXG4gICAgX3RoaXMuX29uID0gdHJ1ZTtcbiAgICBfdGhpcy5fdW50b2dnbGVkVHlwZSA9IF90aGlzLmJpcXVhZC50eXBlO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICAvKipcbiAgICogIEZpbHRlciBhbiBhdWRpbyBzaWduYWwgYWNjb3JkaW5nIHRvIGEgc2V0XG4gICAqICBvZiBmaWx0ZXIgcGFyYW1ldGVycy5cbiAgICpcbiAgICogIEBtZXRob2QgIHByb2Nlc3NcbiAgICogIEBwYXJhbSAge09iamVjdH0gU2lnbmFsICBBbiBvYmplY3QgdGhhdCBvdXRwdXRzIGF1ZGlvXG4gICAqICBAcGFyYW0ge051bWJlcn0gW2ZyZXFdIEZyZXF1ZW5jeSBpbiBIeiwgZnJvbSAxMCB0byAyMjA1MFxuICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtyZXNdIFJlc29uYW5jZS9XaWR0aCBvZiB0aGUgZmlsdGVyIGZyZXF1ZW5jeVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIGZyb20gMC4wMDEgdG8gMTAwMFxuICAgKi9cblxuXG4gIGZpbHRlcl9jcmVhdGVDbGFzcyhGaWx0ZXIsIFt7XG4gICAga2V5OiBcInByb2Nlc3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2VzcyhzcmMsIGZyZXEsIHJlcywgdGltZSkge1xuICAgICAgc3JjLmNvbm5lY3QodGhpcy5pbnB1dCk7XG4gICAgICB0aGlzLnNldChmcmVxLCByZXMsIHRpbWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IHRoZSBmcmVxdWVuY3kgYW5kIHRoZSByZXNvbmFuY2Ugb2YgdGhlIGZpbHRlci5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzZXRcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtmcmVxXSBGcmVxdWVuY3kgaW4gSHosIGZyb20gMTAgdG8gMjIwNTBcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtyZXNdICBSZXNvbmFuY2UgKFEpIGZyb20gMC4wMDEgdG8gMTAwMFxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3RpbWVGcm9tTm93XSBzY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzIGZyb20gbm93XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KGZyZXEsIHJlcywgdGltZSkge1xuICAgICAgaWYgKGZyZXEpIHtcbiAgICAgICAgdGhpcy5mcmVxKGZyZXEsIHRpbWUpO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVzKSB7XG4gICAgICAgIHRoaXMucmVzKHJlcywgdGltZSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTZXQgdGhlIGZpbHRlciBmcmVxdWVuY3ksIGluIEh6LCBmcm9tIDEwIHRvIDIyMDUwICh0aGUgcmFuZ2Ugb2ZcbiAgICAgKiAgaHVtYW4gaGVhcmluZywgYWx0aG91Z2ggaW4gcmVhbGl0eSBtb3N0IHBlb3BsZSBoZWFyIGluIGEgbmFycm93ZXJcbiAgICAgKiAgcmFuZ2UpLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGZyZXFcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBmcmVxIEZpbHRlciBGcmVxdWVuY3lcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gc2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqICBAcmV0dXJuIHtOdW1iZXJ9IHZhbHVlICBSZXR1cm5zIHRoZSBjdXJyZW50IGZyZXF1ZW5jeSB2YWx1ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZnJlcVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmcmVxKF9mcmVxLCB0aW1lKSB7XG4gICAgICB2YXIgdCA9IHRpbWUgfHwgMDtcblxuICAgICAgaWYgKF9mcmVxIDw9IDApIHtcbiAgICAgICAgX2ZyZXEgPSAxO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIF9mcmVxID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLmJpcXVhZC5mcmVxdWVuY3kuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMuYmlxdWFkLmZyZXF1ZW5jeS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKF9mcmVxLCB0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMiArIHQpO1xuICAgICAgfSBlbHNlIGlmIChfZnJlcSkge1xuICAgICAgICBfZnJlcS5jb25uZWN0KHRoaXMuYmlxdWFkLmZyZXF1ZW5jeSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmJpcXVhZC5mcmVxdWVuY3kudmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBDb250cm9scyBlaXRoZXIgd2lkdGggb2YgYSBiYW5kcGFzcyBmcmVxdWVuY3ksXG4gICAgICogIG9yIHRoZSByZXNvbmFuY2Ugb2YgYSBsb3cvaGlnaHBhc3MgY3V0b2ZmIGZyZXF1ZW5jeS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICByZXNcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IHJlcyAgUmVzb25hbmNlL1dpZHRoIG9mIGZpbHRlciBmcmVxXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgIGZyb20gMC4wMDEgdG8gMTAwMFxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3RpbWVGcm9tTm93XSBzY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzIGZyb20gbm93XG4gICAgICogIEByZXR1cm4ge051bWJlcn0gdmFsdWUgUmV0dXJucyB0aGUgY3VycmVudCByZXMgdmFsdWVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXMoX3JlcywgdGltZSkge1xuICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgX3JlcyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5iaXF1YWQuUS52YWx1ZSA9IF9yZXM7XG4gICAgICAgIHRoaXMuYmlxdWFkLlEuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMuYmlxdWFkLlEubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoX3JlcywgdGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDIgKyB0KTtcbiAgICAgIH0gZWxzZSBpZiAoX3Jlcykge1xuICAgICAgICBfcmVzLmNvbm5lY3QodGhpcy5iaXF1YWQuUSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmJpcXVhZC5RLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb250cm9scyB0aGUgZ2FpbiBhdHRyaWJ1dGUgb2YgYSBCaXF1YWQgRmlsdGVyLlxuICAgICAqIFRoaXMgaXMgZGlzdGluY3RseSBkaWZmZXJlbnQgZnJvbSAuYW1wKCkgd2hpY2ggaXMgaW5oZXJpdGVkIGZyb20gcDUuRWZmZWN0XG4gICAgICogLmFtcCgpIGNvbnRyb2xzIHRoZSB2b2x1bWUgdmlhIHRoZSBvdXRwdXQgZ2FpbiBub2RlXG4gICAgICogcDUuRmlsdGVyLmdhaW4oKSBjb250cm9scyB0aGUgZ2FpbiBwYXJhbWV0ZXIgb2YgYSBCaXF1YWQgRmlsdGVyIG5vZGUuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGdhaW5cbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IGdhaW5cbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IFJldHVybnMgdGhlIGN1cnJlbnQgb3IgdXBkYXRlZCBnYWluIHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJnYWluXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdhaW4oX2dhaW4sIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIF9nYWluID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLmJpcXVhZC5nYWluLnZhbHVlID0gX2dhaW47XG4gICAgICAgIHRoaXMuYmlxdWFkLmdhaW4uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMuYmlxdWFkLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoX2dhaW4sIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKF9nYWluKSB7XG4gICAgICAgIF9nYWluLmNvbm5lY3QodGhpcy5iaXF1YWQuZ2Fpbik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmJpcXVhZC5nYWluLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUb2dnbGUgZnVuY3Rpb24uIFN3aXRjaGVzIGJldHdlZW4gdGhlIHNwZWNpZmllZCB0eXBlIGFuZCBhbGxwYXNzXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIHRvZ2dsZVxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IFtUb2dnbGUgdmFsdWVdXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJ0b2dnbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlKCkge1xuICAgICAgdGhpcy5fb24gPSAhdGhpcy5fb247XG5cbiAgICAgIGlmICh0aGlzLl9vbiA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLmJpcXVhZC50eXBlID0gdGhpcy5fdW50b2dnbGVkVHlwZTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fb24gPT09IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuYmlxdWFkLnR5cGUgPSAnYWxscGFzcyc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLl9vbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNldCB0aGUgdHlwZSBvZiBhIHA1LkZpbHRlci4gUG9zc2libGUgdHlwZXMgaW5jbHVkZTpcbiAgICAgKiAgXCJsb3dwYXNzXCIgKGRlZmF1bHQpLCBcImhpZ2hwYXNzXCIsIFwiYmFuZHBhc3NcIixcbiAgICAgKiAgXCJsb3dzaGVsZlwiLCBcImhpZ2hzaGVsZlwiLCBcInBlYWtpbmdcIiwgXCJub3RjaFwiLFxuICAgICAqICBcImFsbHBhc3NcIi5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzZXRUeXBlXG4gICAgICogIEBwYXJhbSB7U3RyaW5nfSB0XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRUeXBlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFR5cGUodCkge1xuICAgICAgdGhpcy5iaXF1YWQudHlwZSA9IHQ7XG4gICAgICB0aGlzLl91bnRvZ2dsZWRUeXBlID0gdGhpcy5iaXF1YWQudHlwZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgX2dldChmaWx0ZXJfZ2V0UHJvdG90eXBlT2YoRmlsdGVyLnByb3RvdHlwZSksIFwiZGlzcG9zZVwiLCB0aGlzKS5jYWxsKHRoaXMpO1xuXG4gICAgICBpZiAodGhpcy5iaXF1YWQpIHtcbiAgICAgICAgdGhpcy5iaXF1YWQuZGlzY29ubmVjdCgpO1xuICAgICAgICBkZWxldGUgdGhpcy5iaXF1YWQ7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEZpbHRlcjtcbn0oZWZmZWN0KTtcbi8qKlxuICogIENvbnN0cnVjdG9yOiA8Y29kZT5uZXcgcDUuTG93UGFzcygpPC9jb2RlPiBGaWx0ZXIuXG4gKiAgVGhpcyBpcyB0aGUgc2FtZSBhcyBjcmVhdGluZyBhIHA1LkZpbHRlciBhbmQgdGhlbiBjYWxsaW5nXG4gKiAgaXRzIG1ldGhvZCA8Y29kZT5zZXRUeXBlKCdsb3dwYXNzJyk8L2NvZGU+LlxuICogIFNlZSBwNS5GaWx0ZXIgZm9yIG1ldGhvZHMuXG4gKlxuICogIEBjbGFzcyBwNS5Mb3dQYXNzXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4dGVuZHMgcDUuRmlsdGVyXG4gKi9cblxuXG52YXIgTG93UGFzcyA9XG5mdW5jdGlvbiAoX0ZpbHRlcikge1xuICBmaWx0ZXJfaW5oZXJpdHMoTG93UGFzcywgX0ZpbHRlcik7XG5cbiAgZnVuY3Rpb24gTG93UGFzcygpIHtcbiAgICBmaWx0ZXJfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG93UGFzcyk7XG5cbiAgICByZXR1cm4gZmlsdGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgZmlsdGVyX2dldFByb3RvdHlwZU9mKExvd1Bhc3MpLmNhbGwodGhpcywgJ2xvd3Bhc3MnKSk7XG4gIH1cblxuICByZXR1cm4gTG93UGFzcztcbn0oRmlsdGVyKTtcbi8qKlxuICogIENvbnN0cnVjdG9yOiA8Y29kZT5uZXcgcDUuSGlnaFBhc3MoKTwvY29kZT4gRmlsdGVyLlxuICogIFRoaXMgaXMgdGhlIHNhbWUgYXMgY3JlYXRpbmcgYSBwNS5GaWx0ZXIgYW5kIHRoZW4gY2FsbGluZ1xuICogIGl0cyBtZXRob2QgPGNvZGU+c2V0VHlwZSgnaGlnaHBhc3MnKTwvY29kZT4uXG4gKiAgU2VlIHA1LkZpbHRlciBmb3IgbWV0aG9kcy5cbiAqXG4gKiAgQGNsYXNzIHA1LkhpZ2hQYXNzXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4dGVuZHMgcDUuRmlsdGVyXG4gKi9cblxuXG52YXIgSGlnaFBhc3MgPVxuZnVuY3Rpb24gKF9GaWx0ZXIyKSB7XG4gIGZpbHRlcl9pbmhlcml0cyhIaWdoUGFzcywgX0ZpbHRlcjIpO1xuXG4gIGZ1bmN0aW9uIEhpZ2hQYXNzKCkge1xuICAgIGZpbHRlcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBIaWdoUGFzcyk7XG5cbiAgICByZXR1cm4gZmlsdGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgZmlsdGVyX2dldFByb3RvdHlwZU9mKEhpZ2hQYXNzKS5jYWxsKHRoaXMsICdoaWdocGFzcycpKTtcbiAgfVxuXG4gIHJldHVybiBIaWdoUGFzcztcbn0oRmlsdGVyKTtcbi8qKlxuICogIENvbnN0cnVjdG9yOiA8Y29kZT5uZXcgcDUuQmFuZFBhc3MoKTwvY29kZT4gRmlsdGVyLlxuICogIFRoaXMgaXMgdGhlIHNhbWUgYXMgY3JlYXRpbmcgYSBwNS5GaWx0ZXIgYW5kIHRoZW4gY2FsbGluZ1xuICogIGl0cyBtZXRob2QgPGNvZGU+c2V0VHlwZSgnYmFuZHBhc3MnKTwvY29kZT4uXG4gKiAgU2VlIHA1LkZpbHRlciBmb3IgbWV0aG9kcy5cbiAqXG4gKiAgQGNsYXNzIHA1LkJhbmRQYXNzXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4dGVuZHMgcDUuRmlsdGVyXG4gKi9cblxuXG52YXIgQmFuZFBhc3MgPVxuZnVuY3Rpb24gKF9GaWx0ZXIzKSB7XG4gIGZpbHRlcl9pbmhlcml0cyhCYW5kUGFzcywgX0ZpbHRlcjMpO1xuXG4gIGZ1bmN0aW9uIEJhbmRQYXNzKCkge1xuICAgIGZpbHRlcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBCYW5kUGFzcyk7XG5cbiAgICByZXR1cm4gZmlsdGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgZmlsdGVyX2dldFByb3RvdHlwZU9mKEJhbmRQYXNzKS5jYWxsKHRoaXMsICdiYW5kcGFzcycpKTtcbiAgfVxuXG4gIHJldHVybiBCYW5kUGFzcztcbn0oRmlsdGVyKTtcblxuIHZhciBmaWx0ZXIgPSAoRmlsdGVyKTtcblxuZnVuY3Rpb24gZXFGaWx0ZXJfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgZXFGaWx0ZXJfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IGVxRmlsdGVyX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBlcUZpbHRlcl90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiBlcUZpbHRlcl9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGVxRmlsdGVyX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBlcUZpbHRlcl9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGVxRmlsdGVyX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBlcUZpbHRlcl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBlcUZpbHRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKGVxRmlsdGVyX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gZXFGaWx0ZXJfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIGVxRmlsdGVyX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIGVxRmlsdGVyX2dldFByb3RvdHlwZU9mKG8pIHsgZXFGaWx0ZXJfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gZXFGaWx0ZXJfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gZXFGaWx0ZXJfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgZXFGaWx0ZXJfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIGVxRmlsdGVyX3NldFByb3RvdHlwZU9mKG8sIHApIHsgZXFGaWx0ZXJfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIGVxRmlsdGVyX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cblxuXG4vKipcbiAqICBFUUZpbHRlciBleHRlbmRzIHA1LkZpbHRlciB3aXRoIGNvbnN0cmFpbnRzXG4gKiAgbmVjZXNzYXJ5IGZvciB0aGUgcDUuRVFcbiAqXG4gKiAgQHByaXZhdGVcbiAqL1xuXG52YXIgZXFGaWx0ZXJfRVFGaWx0ZXIgPVxuZnVuY3Rpb24gKF9GaWx0ZXIpIHtcbiAgZXFGaWx0ZXJfaW5oZXJpdHMoRVFGaWx0ZXIsIF9GaWx0ZXIpO1xuXG4gIGZ1bmN0aW9uIEVRRmlsdGVyKGZyZXEsIHJlcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIGVxRmlsdGVyX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVRRmlsdGVyKTtcblxuICAgIF90aGlzID0gZXFGaWx0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBlcUZpbHRlcl9nZXRQcm90b3R5cGVPZihFUUZpbHRlcikuY2FsbCh0aGlzLCAncGVha2luZycpKTtcblxuICAgIF90aGlzLmRpc2Nvbm5lY3QoKTtcblxuICAgIF90aGlzLnNldChmcmVxLCByZXMpO1xuXG4gICAgX3RoaXMuYmlxdWFkLmdhaW4udmFsdWUgPSAwO1xuICAgIGRlbGV0ZSBfdGhpcy5pbnB1dDtcbiAgICBkZWxldGUgX3RoaXMub3V0cHV0O1xuICAgIGRlbGV0ZSBfdGhpcy5fZHJ5d2V0O1xuICAgIGRlbGV0ZSBfdGhpcy53ZXQ7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgZXFGaWx0ZXJfY3JlYXRlQ2xhc3MoRVFGaWx0ZXIsIFt7XG4gICAga2V5OiBcImFtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhbXAoKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ2BhbXAoKWAgaXMgbm90IGF2YWlsYWJsZSBmb3IgcDUuRVEgYmFuZHMuIFVzZSBgLmdhaW4oKWAnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZHJ5d2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRyeXdldCgpIHtcbiAgICAgIGNvbnNvbGUud2FybignYGRyeXdldCgpYCBpcyBub3QgYXZhaWxhYmxlIGZvciBwNS5FUSBiYW5kcy4nKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb25uZWN0KHVuaXQpIHtcbiAgICAgIHZhciB1ID0gdW5pdCB8fCBwNS5zb3VuZE91dC5pbnB1dDtcblxuICAgICAgaWYgKHRoaXMuYmlxdWFkKSB7XG4gICAgICAgIHRoaXMuYmlxdWFkLmNvbm5lY3QodS5pbnB1dCA/IHUuaW5wdXQgOiB1KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodS5pbnB1dCA/IHUuaW5wdXQgOiB1KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNjb25uZWN0KCkge1xuICAgICAgaWYgKHRoaXMuYmlxdWFkKSB7XG4gICAgICAgIHRoaXMuYmlxdWFkLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgdmFyIGluZGV4ID0gbWFpbi5zb3VuZEFycmF5LmluZGV4T2YodGhpcyk7XG4gICAgICBtYWluLnNvdW5kQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMuZGlzY29ubmVjdCgpO1xuICAgICAgZGVsZXRlIHRoaXMuYmlxdWFkO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBFUUZpbHRlcjtcbn0oZmlsdGVyKTtcblxuIHZhciBlcUZpbHRlciA9IChlcUZpbHRlcl9FUUZpbHRlcik7XG5mdW5jdGlvbiBlcV90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBlcV90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgZXFfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIGVxX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIGVxX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gZXFfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIGVxX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZXFfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGVxX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIGVxX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoZXFfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBlcV9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gZXFfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gZXFfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBSZWZsZWN0LmdldCkgeyBlcV9nZXQgPSBSZWZsZWN0LmdldDsgfSBlbHNlIHsgZXFfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyB2YXIgYmFzZSA9IGVxX3N1cGVyUHJvcEJhc2UodGFyZ2V0LCBwcm9wZXJ0eSk7IGlmICghYmFzZSkgcmV0dXJuOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpOyBpZiAoZGVzYy5nZXQpIHsgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpOyB9IHJldHVybiBkZXNjLnZhbHVlOyB9OyB9IHJldHVybiBlcV9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTsgfVxuXG5mdW5jdGlvbiBlcV9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHsgd2hpbGUgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHsgb2JqZWN0ID0gZXFfZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKG9iamVjdCA9PT0gbnVsbCkgYnJlYWs7IH0gcmV0dXJuIG9iamVjdDsgfVxuXG5mdW5jdGlvbiBlcV9nZXRQcm90b3R5cGVPZihvKSB7IGVxX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIGVxX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbmZ1bmN0aW9uIGVxX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIGVxX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBlcV9zZXRQcm90b3R5cGVPZihvLCBwKSB7IGVxX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBlcV9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5cblxuLyoqXG4gKiBwNS5FUSBpcyBhbiBhdWRpbyBlZmZlY3QgdGhhdCBwZXJmb3JtcyB0aGUgZnVuY3Rpb24gb2YgYSBtdWx0aWJhbmRcbiAqIGF1ZGlvIGVxdWFsaXplci4gRXF1YWxpemF0aW9uIGlzIHVzZWQgdG8gYWRqdXN0IHRoZSBiYWxhbmNlIG9mXG4gKiBmcmVxdWVuY3kgY29tcG9lbmVudHMgb2YgYW4gYXVkaW8gc2lnbmFsLiBUaGlzIHByb2Nlc3MgaXMgY29tbW9ubHkgdXNlZFxuICogaW4gc291bmQgcHJvZHVjdGlvbiBhbmQgcmVjb3JkaW5nIHRvIGNoYW5nZSB0aGUgd2F2ZWZvcm0gYmVmb3JlIGl0IHJlYWNoZXNcbiAqIGEgc291bmQgb3V0cHV0IGRldmljZS4gRVEgY2FuIGFsc28gYmUgdXNlZCBhcyBhbiBhdWRpbyBlZmZlY3QgdG8gY3JlYXRlXG4gKiBpbnRlcmVzdGluZyBkaXN0b3J0aW9ucyBieSBmaWx0ZXJpbmcgb3V0IHBhcnRzIG9mIHRoZSBzcGVjdHJ1bS4gcDUuRVEgaXNcbiAqIGJ1aWx0IHVzaW5nIGEgY2hhaW4gb2YgV2ViIEF1ZGlvIEJpcXVhZCBGaWx0ZXIgTm9kZXMgYW5kIGNhbiBiZVxuICogaW5zdGFudGlhdGVkIHdpdGggMyBvciA4IGJhbmRzLiBCYW5kcyBjYW4gYmUgYWRkZWQgb3IgcmVtb3ZlZCBmcm9tXG4gKiB0aGUgRVEgYnkgZGlyZWN0bHkgbW9kaWZ5aW5nIHA1LkVRLmJhbmRzICh0aGUgYXJyYXkgdGhhdCBzdG9yZXMgZmlsdGVycykuXG4gKlxuICogVGhpcyBjbGFzcyBleHRlbmRzIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3RcIj5wNS5FZmZlY3Q8L2E+LlxuICogTWV0aG9kcyA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2FtcFwiPmFtcCgpPC9hPiwgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9jaGFpblwiPmNoYWluKCk8L2E+LFxuICogPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kcnl3ZXRcIj5kcnl3ZXQoKTwvYT4sIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvY29ubmVjdFwiPmNvbm5lY3QoKTwvYT4sIGFuZFxuICogPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kaXNjb25uZWN0XCI+ZGlzY29ubmVjdCgpPC9hPiBhcmUgYXZhaWxhYmxlLlxuICpcbiAqIEBjbGFzcyBwNS5FUVxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBwNS5FZmZlY3RcbiAqIEBwYXJhbSB7TnVtYmVyfSBbX2Vxc2l6ZV0gQ29uc3RydWN0b3Igd2lsbCBhY2NlcHQgMyBvciA4LCBkZWZhdWx0cyB0byAzXG4gKiBAcmV0dXJuIHtPYmplY3R9IHA1LkVRIG9iamVjdFxuICpcbiAqIEBleGFtcGxlXG4gKiA8ZGl2Pjxjb2RlPlxuICogbGV0IGVxLCBzb3VuZEZpbGVcbiAqIGxldCBlcUJhbmRJbmRleCA9IDA7XG4gKiBsZXQgZXFCYW5kTmFtZXMgPSBbJ2xvd3MnLCAnbWlkcycsICdoaWdocyddO1xuICpcbiAqIGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gKiAgIHNvdW5kRm9ybWF0cygnbXAzJywgJ29nZycpO1xuICogICBzb3VuZEZpbGUgPSBsb2FkU291bmQoJ2Fzc2V0cy9iZWF0Jyk7XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICBjbnYubW91c2VQcmVzc2VkKHRvZ2dsZVNvdW5kKTtcbiAqXG4gKiAgIGVxID0gbmV3IHA1LkVRKGVxQmFuZE5hbWVzLmxlbmd0aCk7XG4gKiAgIHNvdW5kRmlsZS5kaXNjb25uZWN0KCk7XG4gKiAgIGVxLnByb2Nlc3Moc291bmRGaWxlKTtcbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBkcmF3KCkge1xuICogICBiYWNrZ3JvdW5kKDMwKTtcbiAqICAgbm9TdHJva2UoKTtcbiAqICAgZmlsbCgyNTUpO1xuICogICB0ZXh0QWxpZ24oQ0VOVEVSKTtcbiAqICAgdGV4dCgnZmlsdGVyaW5nICcsIDUwLCAyNSk7XG4gKlxuICogICBmaWxsKDI1NSwgNDAsIDI1NSk7XG4gKiAgIHRleHRTaXplKDI2KTtcbiAqICAgdGV4dChlcUJhbmROYW1lc1tlcUJhbmRJbmRleF0sIDUwLCA1NSk7XG4gKlxuICogICBmaWxsKDI1NSk7XG4gKiAgIHRleHRTaXplKDkpO1xuICpcbiAqICAgaWYgKCFzb3VuZEZpbGUuaXNQbGF5aW5nKCkpIHtcbiAqICAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDUwLCA4MCk7XG4gKiAgIH0gZWxzZSB7XG4gKiAgICAgdGV4dCgndGFwIHRvIGZpbHRlciBuZXh0IGJhbmQnLCA1MCwgODApXG4gKiAgIH1cbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiB0b2dnbGVTb3VuZCgpIHtcbiAqICAgaWYgKCFzb3VuZEZpbGUuaXNQbGF5aW5nKCkpIHtcbiAqICAgICBzb3VuZEZpbGUucGxheSgpO1xuICogICB9IGVsc2Uge1xuICogICAgIGVxQmFuZEluZGV4ID0gKGVxQmFuZEluZGV4ICsgMSkgJSBlcS5iYW5kcy5sZW5ndGg7XG4gKiAgIH1cbiAqXG4gKiAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXEuYmFuZHMubGVuZ3RoOyBpKyspIHtcbiAqICAgICBlcS5iYW5kc1tpXS5nYWluKDApO1xuICogICB9XG4gKiAgIC8vIGZpbHRlciB0aGUgYmFuZCB3ZSB3YW50IHRvIGZpbHRlclxuICogICBlcS5iYW5kc1tlcUJhbmRJbmRleF0uZ2FpbigtNDApO1xuICogfVxuICogPC9jb2RlPjwvZGl2PlxuICovXG5cbnZhciBlcV9FUSA9XG5mdW5jdGlvbiAoX0VmZmVjdCkge1xuICBlcV9pbmhlcml0cyhFUSwgX0VmZmVjdCk7XG5cbiAgZnVuY3Rpb24gRVEoX2Vxc2l6ZSkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGVxX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVRKTtcblxuICAgIF90aGlzID0gZXFfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBlcV9nZXRQcm90b3R5cGVPZihFUSkuY2FsbCh0aGlzKSk7IFxuXG4gICAgX2Vxc2l6ZSA9IF9lcXNpemUgPT09IDMgfHwgX2Vxc2l6ZSA9PT0gOCA/IF9lcXNpemUgOiAzO1xuICAgIHZhciBmYWN0b3I7XG4gICAgX2Vxc2l6ZSA9PT0gMyA/IGZhY3RvciA9IE1hdGgucG93KDIsIDMpIDogZmFjdG9yID0gMjtcbiAgICAvKipcbiAgICAgKiAgVGhlIHA1LkVRIGlzIGJ1aWx0IHdpdGggYWJzdHJhY3RlZCBwNS5GaWx0ZXIgb2JqZWN0cy5cbiAgICAgKiAgVG8gbW9kaWZ5IGFueSBiYW5kcywgdXNlIG1ldGhvZHMgb2YgdGhlIDxhXG4gICAgICogIGhyZWY9XCIvcmVmZXJlbmNlLyMvcDUuRmlsdGVyXCIgdGl0bGU9XCJwNS5GaWx0ZXIgcmVmZXJlbmNlXCI+XG4gICAgICogIHA1LkZpbHRlcjwvYT4gQVBJLCBlc3BlY2lhbGx5IGBnYWluYCBhbmQgYGZyZXFgLlxuICAgICAqICBCYW5kcyBhcmUgc3RvcmVkIGluIGFuIGFycmF5LCB3aXRoIGluZGljZXMgMCAtIDMsIG9yIDAgLSA3XG4gICAgICogIEBwcm9wZXJ0eSB7QXJyYXl9ICBiYW5kc1xuICAgICAqXG4gICAgICovXG5cbiAgICBfdGhpcy5iYW5kcyA9IFtdO1xuICAgIHZhciBmcmVxLCByZXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9lcXNpemU7IGkrKykge1xuICAgICAgaWYgKGkgPT09IF9lcXNpemUgLSAxKSB7XG4gICAgICAgIGZyZXEgPSAyMTAwMDtcbiAgICAgICAgcmVzID0gMC4wMTtcbiAgICAgIH0gZWxzZSBpZiAoaSA9PT0gMCkge1xuICAgICAgICBmcmVxID0gMTAwO1xuICAgICAgICByZXMgPSAwLjE7XG4gICAgICB9IGVsc2UgaWYgKGkgPT09IDEpIHtcbiAgICAgICAgZnJlcSA9IF9lcXNpemUgPT09IDMgPyAzNjAgKiBmYWN0b3IgOiAzNjA7XG4gICAgICAgIHJlcyA9IDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmcmVxID0gX3RoaXMuYmFuZHNbaSAtIDFdLmZyZXEoKSAqIGZhY3RvcjtcbiAgICAgICAgcmVzID0gMTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuYmFuZHNbaV0gPSBfdGhpcy5fbmV3QmFuZChmcmVxLCByZXMpO1xuXG4gICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgX3RoaXMuYmFuZHNbaSAtIDFdLmNvbm5lY3QoX3RoaXMuYmFuZHNbaV0uYmlxdWFkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF90aGlzLmlucHV0LmNvbm5lY3QoX3RoaXMuYmFuZHNbaV0uYmlxdWFkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfdGhpcy5iYW5kc1tfZXFzaXplIC0gMV0uY29ubmVjdChfdGhpcy5vdXRwdXQpO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIC8qKlxuICAgKiBQcm9jZXNzIGFuIGlucHV0IGJ5IGNvbm5lY3RpbmcgaXQgdG8gdGhlIEVRXG4gICAqIEBtZXRob2QgIHByb2Nlc3NcbiAgICogQHBhcmFtICB7T2JqZWN0fSBzcmMgQXVkaW8gc291cmNlXG4gICAqL1xuXG5cbiAgZXFfY3JlYXRlQ2xhc3MoRVEsIFt7XG4gICAga2V5OiBcInByb2Nlc3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2VzcyhzcmMpIHtcbiAgICAgIHNyYy5jb25uZWN0KHRoaXMuaW5wdXQpO1xuICAgIH0gXG4gICAgLy8gICAqIFNldCB0aGUgZnJlcXVlbmN5IGFuZCBnYWluIG9mIGVhY2ggYmFuZCBpbiB0aGUgRVEuIFRoaXMgbWV0aG9kIHNob3VsZCBiZVxuICAgIC8vICAgKiBjYWxsZWQgd2l0aCAzIG9yIDggZnJlcXVlbmN5IGFuZCBnYWluIHBhaXJzLCBkZXBlbmRpbmcgb24gdGhlIHNpemUgb2YgdGhlIEVRLlxuICAgIC8vICAgKiBleC4gZXEuc2V0KGZyZXEwLCBnYWluMCwgZnJlcTEsIGdhaW4xLCBmcmVxMiwgZ2FpbjIpO1xuICAgIC8vICAgKlxuICAgIC8vICAgKiBAbWV0aG9kICBzZXRcbiAgICAvLyAgICogQGZvciBwNS5FUVxuICAgIC8vICAgKiBAcGFyYW0ge051bWJlcn0gW2ZyZXEwXSBGcmVxdWVuY3kgdmFsdWUgZm9yIGJhbmQgd2l0aCBpbmRleCAwXG4gICAgLy8gICAqIEBwYXJhbSB7TnVtYmVyfSBbZ2FpbjBdIEdhaW4gdmFsdWUgZm9yIGJhbmQgd2l0aCBpbmRleCAwXG4gICAgLy8gICAqIEBwYXJhbSB7TnVtYmVyfSBbZnJlcTFdIEZyZXF1ZW5jeSB2YWx1ZSBmb3IgYmFuZCB3aXRoIGluZGV4IDFcbiAgICAvLyAgICogQHBhcmFtIHtOdW1iZXJ9IFtnYWluMV0gR2FpbiB2YWx1ZSBmb3IgYmFuZCB3aXRoIGluZGV4IDFcbiAgICAvLyAgICogQHBhcmFtIHtOdW1iZXJ9IFtmcmVxMl0gRnJlcXVlbmN5IHZhbHVlIGZvciBiYW5kIHdpdGggaW5kZXggMlxuICAgIC8vICAgKiBAcGFyYW0ge051bWJlcn0gW2dhaW4yXSBHYWluIHZhbHVlIGZvciBiYW5kIHdpdGggaW5kZXggMlxuICAgIC8vICAgKiBAcGFyYW0ge051bWJlcn0gW2ZyZXEzXSBGcmVxdWVuY3kgdmFsdWUgZm9yIGJhbmQgd2l0aCBpbmRleCAzXG4gICAgLy8gICAqIEBwYXJhbSB7TnVtYmVyfSBbZ2FpbjNdIEdhaW4gdmFsdWUgZm9yIGJhbmQgd2l0aCBpbmRleCAzXG4gICAgLy8gICAqIEBwYXJhbSB7TnVtYmVyfSBbZnJlcTRdIEZyZXF1ZW5jeSB2YWx1ZSBmb3IgYmFuZCB3aXRoIGluZGV4IDRcbiAgICAvLyAgICogQHBhcmFtIHtOdW1iZXJ9IFtnYWluNF0gR2FpbiB2YWx1ZSBmb3IgYmFuZCB3aXRoIGluZGV4IDRcbiAgICAvLyAgICogQHBhcmFtIHtOdW1iZXJ9IFtmcmVxNV0gRnJlcXVlbmN5IHZhbHVlIGZvciBiYW5kIHdpdGggaW5kZXggNVxuICAgIC8vICAgKiBAcGFyYW0ge051bWJlcn0gW2dhaW41XSBHYWluIHZhbHVlIGZvciBiYW5kIHdpdGggaW5kZXggNVxuICAgIC8vICAgKiBAcGFyYW0ge051bWJlcn0gW2ZyZXE2XSBGcmVxdWVuY3kgdmFsdWUgZm9yIGJhbmQgd2l0aCBpbmRleCA2XG4gICAgLy8gICAqIEBwYXJhbSB7TnVtYmVyfSBbZ2FpbjZdIEdhaW4gdmFsdWUgZm9yIGJhbmQgd2l0aCBpbmRleCA2XG4gICAgLy8gICAqIEBwYXJhbSB7TnVtYmVyfSBbZnJlcTddIEZyZXF1ZW5jeSB2YWx1ZSBmb3IgYmFuZCB3aXRoIGluZGV4IDdcbiAgICAvLyAgICogQHBhcmFtIHtOdW1iZXJ9IFtnYWluN10gR2FpbiB2YWx1ZSBmb3IgYmFuZCB3aXRoIGluZGV4IDdcbiAgICAvLyAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KCkge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IHRoaXMuYmFuZHMubGVuZ3RoICogMikge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkgKz0gMikge1xuICAgICAgICAgIHRoaXMuYmFuZHNbaSAvIDJdLmZyZXEoYXJndW1lbnRzW2ldKTtcbiAgICAgICAgICB0aGlzLmJhbmRzW2kgLyAyXS5nYWluKGFyZ3VtZW50c1tpICsgMV0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdBcmd1bWVudCBtaXNtYXRjaC4gLnNldCgpIHNob3VsZCBiZSBjYWxsZWQgd2l0aCAnICsgdGhpcy5iYW5kcy5sZW5ndGggKiAyICsgJyBhcmd1bWVudHMuIChvbmUgZnJlcXVlbmN5IGFuZCBnYWluIHZhbHVlIHBhaXIgZm9yIGVhY2ggYmFuZCBvZiB0aGUgZXEpJyk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZCBhIG5ldyBiYW5kLiBDcmVhdGVzIGEgcDUuRmlsdGVyIGFuZCBzdHJpcHMgYXdheSBldmVyeXRoaW5nIGJ1dFxuICAgICAqIHRoZSByYXcgYmlxdWFkIGZpbHRlci4gVGhpcyBtZXRob2QgcmV0dXJucyBhbiBhYnN0cmFjdGVkIHA1LkZpbHRlcixcbiAgICAgKiB3aGljaCBjYW4gYmUgYWRkZWQgdG8gcDUuRVEuYmFuZHMsIGluIG9yZGVyIHRvIGNyZWF0ZSBuZXcgRVEgYmFuZHMuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAZm9yIHA1LkVRXG4gICAgICogQG1ldGhvZCAgX25ld0JhbmRcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IGZyZXFcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHJlc1xuICAgICAqIEByZXR1cm4ge09iamVjdH0gICAgICBBYnN0cmFjdGVkIEZpbHRlclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiX25ld0JhbmRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX25ld0JhbmQoZnJlcSwgcmVzKSB7XG4gICAgICByZXR1cm4gbmV3IGVxRmlsdGVyKGZyZXEsIHJlcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIGVxX2dldChlcV9nZXRQcm90b3R5cGVPZihFUS5wcm90b3R5cGUpLCBcImRpc3Bvc2VcIiwgdGhpcykuY2FsbCh0aGlzKTtcblxuICAgICAgaWYgKHRoaXMuYmFuZHMpIHtcbiAgICAgICAgd2hpbGUgKHRoaXMuYmFuZHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGRlbGV0ZSB0aGlzLmJhbmRzLnBvcCgpLmRpc3Bvc2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZSB0aGlzLmJhbmRzO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBFUTtcbn0oZWZmZWN0KTtcblxuIHZhciBlcSA9IChlcV9FUSk7XG5mdW5jdGlvbiBsaXN0ZW5lcjNkX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gbGlzdGVuZXIzZF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gbGlzdGVuZXIzZF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGxpc3RlbmVyM2RfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGxpc3RlbmVyM2RfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuLy8gICAqIGxpc3RlbmVyIGlzIGEgY2xhc3MgdGhhdCBjYW4gY29uc3RydWN0IGJvdGggYSBTcGF0aWFsIFBhbm5lclxuLy8gICAqIGFuZCBhIFNwYXRpYWwgTGlzdGVuZXIuIFRoZSBwYW5uZXIgaXMgYmFzZWQgb24gdGhlXG4vLyAgICogV2ViIEF1ZGlvIFNwYXRpYWwgUGFubmVyIE5vZGVcbi8vICAgKiBodHRwczovL3d3dy53My5vcmcvVFIvd2ViYXVkaW8vI3RoZS1saXN0ZW5lcm5vZGUtaW50ZXJmYWNlXG4vLyAgICogVGhpcyBwYW5uZXIgaXMgYSBzcGF0aWFsIHByb2Nlc3Npbmcgbm9kZSB0aGF0IGFsbG93cyBhdWRpbyB0byBiZSBwb3NpdGlvbmVkXG4vLyAgICogYW5kIG9yaWVudGVkIGluIDNEIHNwYWNlLlxuLy8gICAqXG4vLyAgICogVGhlIExpc3RlbmVyIG1vZGlmaWVzIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBBdWRpbyBDb250ZXh0IExpc3RlbmVyLlxuLy8gICAqIEJvdGggb2JqZWN0cyB0eXBlcyB1c2UgdGhlIHNhbWUgbWV0aG9kcy4gVGhlIGRlZmF1bHQgaXMgYSBzcGF0aWFsIHBhbm5lci5cbi8vICAgKlxuLy8gICAqIDxjb2RlPnA1LlBhbm5lcjNEPC9jb2RlPiAtIENvbnN0cnVjdHMgYSBTcGF0aWFsIFBhbm5lcjxici8+XG4vLyAgICogPGNvZGU+cDUuTGlzdGVuZXIzRDwvY29kZT4gLSBDb25zdHJ1Y3RzIGEgU3BhdGlhbCBMaXN0ZW5lcjxici8+XG4vLyAgICpcbi8vICAgKiBAY2xhc3MgbGlzdGVuZXJcbi8vICAgKiBAY29uc3RydWN0b3Jcbi8vICAgKiBAcmV0dXJuIHtPYmplY3R9IHA1Lkxpc3RlbmVyM0QgT2JqZWN0XG4vLyAgICpcbi8vICAgKiBAcGFyYW0ge1dlYiBBdWRpbyBOb2RlfSBsaXN0ZW5lciBXZWIgQXVkaW8gU3BhdGlhbCBQYW5uaW5nIE5vZGVcbi8vICAgKiBAcGFyYW0ge0F1ZGlvUGFyYW19IGxpc3RlbmVyLnBhbm5pbmdNb2RlbCBcImVxdWFsIHBvd2VyXCIgb3IgXCJIUlRGXCJcbi8vICAgKiBAcGFyYW0ge0F1ZGlvUGFyYW19IGxpc3RlbmVyLmRpc3RhbmNlTW9kZWwgXCJsaW5lYXJcIiwgXCJpbnZlcnNlXCIsIG9yIFwiZXhwb25lbnRpYWxcIlxuLy8gICAqIEBwYXJhbSB7U3RyaW5nfSBbdHlwZV0gW1NwZWNpZnkgY29uc3RydWN0aW9uIG9mIGEgc3BhdGlhbCBwYW5uZXIgb3IgbGlzdGVuZXJdXG4vLyAgICovXG5cbnZhciBsaXN0ZW5lcjNkX0xpc3RlbmVyM0QgPVxuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBMaXN0ZW5lcjNEKHR5cGUpIHtcbiAgICBsaXN0ZW5lcjNkX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpc3RlbmVyM0QpO1xuXG4gICAgdGhpcy5hYyA9IG1haW4uYXVkaW9jb250ZXh0O1xuICAgIHRoaXMubGlzdGVuZXIgPSB0aGlzLmFjLmxpc3RlbmVyO1xuICB9IFxuICAvLyAgICogQ29ubmVjdCBhbiBhdWRpbyBzb3JjZVxuICAvLyAgICogQHBhcmFtICB7T2JqZWN0fSBzcmMgSW5wdXQgc291cmNlXG4gIC8vICAgKi9cblxuXG4gIGxpc3RlbmVyM2RfY3JlYXRlQ2xhc3MoTGlzdGVuZXIzRCwgW3tcbiAgICBrZXk6IFwicHJvY2Vzc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcm9jZXNzKHNyYykge1xuICAgICAgc3JjLmNvbm5lY3QodGhpcy5pbnB1dCk7XG4gICAgfSBcbiAgICAvLyAgICogU2V0IHRoZSBYLFksWiBwb3NpdGlvbiBvZiB0aGUgUGFubmVyXG4gICAgLy8gICAqIEBwYXJhbSAge1tOdW1iZXJdfSB4VmFsXG4gICAgLy8gICAqIEBwYXJhbSAge1tOdW1iZXJdfSB5VmFsXG4gICAgLy8gICAqIEBwYXJhbSAge1tOdW1iZXJdfSB6VmFsXG4gICAgLy8gICAqIEBwYXJhbSAge1tOdW1iZXJdfSB0aW1lXG4gICAgLy8gICAqIEByZXR1cm4ge1tBcnJheV19ICAgICAgW1VwZGF0ZWQgeCwgeSwgeiB2YWx1ZXMgYXMgYW4gYXJyYXldXG4gICAgLy8gICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicG9zaXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcG9zaXRpb24oeFZhbCwgeVZhbCwgelZhbCwgdGltZSkge1xuICAgICAgdGhpcy5wb3NpdGlvblgoeFZhbCwgdGltZSk7XG4gICAgICB0aGlzLnBvc2l0aW9uWSh5VmFsLCB0aW1lKTtcbiAgICAgIHRoaXMucG9zaXRpb25aKHpWYWwsIHRpbWUpO1xuICAgICAgcmV0dXJuIFt0aGlzLmxpc3RlbmVyLnBvc2l0aW9uWC52YWx1ZSwgdGhpcy5saXN0ZW5lci5wb3NpdGlvblkudmFsdWUsIHRoaXMubGlzdGVuZXIucG9zaXRpb25aLnZhbHVlXTtcbiAgICB9IFxuICAgIC8vICAgKiBHZXR0ZXIgYW5kIHNldHRlciBtZXRob2RzIGZvciBwb3NpdGlvbiBjb29yZGluYXRlc1xuICAgIC8vICAgKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgW3VwZGF0ZWQgY29vcmRpbmF0ZSB2YWx1ZV1cbiAgICAvLyAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJwb3NpdGlvblhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcG9zaXRpb25YKHhWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHhWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIucG9zaXRpb25YLnZhbHVlID0geFZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5wb3NpdGlvblguY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIucG9zaXRpb25YLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHhWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHhWYWwpIHtcbiAgICAgICAgeFZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIucG9zaXRpb25YKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIucG9zaXRpb25YLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwb3NpdGlvbllcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcG9zaXRpb25ZKHlWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHlWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIucG9zaXRpb25ZLnZhbHVlID0geVZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5wb3NpdGlvblkuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIucG9zaXRpb25ZLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHlWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHlWYWwpIHtcbiAgICAgICAgeVZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIucG9zaXRpb25ZKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIucG9zaXRpb25ZLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwb3NpdGlvblpcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcG9zaXRpb25aKHpWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHpWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIucG9zaXRpb25aLnZhbHVlID0gelZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5wb3NpdGlvblouY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIucG9zaXRpb25aLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHpWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHpWYWwpIHtcbiAgICAgICAgelZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIucG9zaXRpb25aKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIucG9zaXRpb25aLnZhbHVlO1xuICAgIH0gXG4gICAgLy8gICAqIE92ZXJyaWRlcyB0aGUgbGlzdGVuZXIgb3JpZW50KCkgbWV0aG9kIGJlY2F1c2UgTGlzdGVuZXIgaGFzIHNsaWdodGx5XG4gICAgLy8gICAqIGRpZmZlcmVudCBwYXJhbXMuIEluIGh1bWFuIHRlcm1zLCBGb3J3YXJkIHZlY3RvcnMgYXJlIHRoZSBkaXJlY3Rpb24gdGhlXG4gICAgLy8gICAqIG5vc2UgaXMgcG9pbnRpbmcuIFVwIHZlY3RvcnMgYXJlIHRoZSBkaXJlY3Rpb24gb2YgdGhlIHRvcCBvZiB0aGUgaGVhZC5cbiAgICAvLyAgICpcbiAgICAvLyAgICogQG1ldGhvZCBvcmllbnRcbiAgICAvLyAgICogQHBhcmFtICB7TnVtYmVyfSB4VmFsRiAgRm9yd2FyZCB2ZWN0b3IgWCBkaXJlY3Rpb25cbiAgICAvLyAgICogQHBhcmFtICB7TnVtYmVyfSB5VmFsRiAgRm9yd2FyZCB2ZWN0b3IgWSBkaXJlY3Rpb25cbiAgICAvLyAgICogQHBhcmFtICB7TnVtYmVyfSB6VmFsRiAgRm9yd2FyZCB2ZWN0b3IgWiBkaXJlY3Rpb25cbiAgICAvLyAgICogQHBhcmFtICB7TnVtYmVyfSB4VmFsVSAgVXAgdmVjdG9yIFggZGlyZWN0aW9uXG4gICAgLy8gICAqIEBwYXJhbSAge051bWJlcn0geVZhbFUgIFVwIHZlY3RvciBZIGRpcmVjdGlvblxuICAgIC8vICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHpWYWxVICBVcCB2ZWN0b3IgWiBkaXJlY3Rpb25cbiAgICAvLyAgICogQHBhcmFtICB7TnVtYmVyfSB0aW1lXG4gICAgLy8gICAqIEByZXR1cm4ge0FycmF5fSAgICAgICBBbGwgb3JpZW5hdGlvbiBwYXJhbXNcbiAgICAvLyAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJvcmllbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3JpZW50KHhWYWxGLCB5VmFsRiwgelZhbEYsIHhWYWxVLCB5VmFsVSwgelZhbFUsIHRpbWUpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAzIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgdGltZSA9IGFyZ3VtZW50c1szXTtcbiAgICAgICAgdGhpcy5vcmllbnRGb3J3YXJkKHhWYWxGLCB5VmFsRiwgelZhbEYsIHRpbWUpO1xuICAgICAgfSBlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSA2IHx8IGFyZ3VtZW50cyA9PT0gNykge1xuICAgICAgICB0aGlzLm9yaWVudEZvcndhcmQoeFZhbEYsIHlWYWxGLCB6VmFsRik7XG4gICAgICAgIHRoaXMub3JpZW50VXAoeFZhbFUsIHlWYWxVLCB6VmFsVSwgdGltZSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBbdGhpcy5saXN0ZW5lci5mb3J3YXJkWC52YWx1ZSwgdGhpcy5saXN0ZW5lci5mb3J3YXJkWS52YWx1ZSwgdGhpcy5saXN0ZW5lci5mb3J3YXJkWi52YWx1ZSwgdGhpcy5saXN0ZW5lci51cFgudmFsdWUsIHRoaXMubGlzdGVuZXIudXBZLnZhbHVlLCB0aGlzLmxpc3RlbmVyLnVwWi52YWx1ZV07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9yaWVudEZvcndhcmRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3JpZW50Rm9yd2FyZCh4VmFsRiwgeVZhbEYsIHpWYWxGLCB0aW1lKSB7XG4gICAgICB0aGlzLmZvcndhcmRYKHhWYWxGLCB0aW1lKTtcbiAgICAgIHRoaXMuZm9yd2FyZFkoeVZhbEYsIHRpbWUpO1xuICAgICAgdGhpcy5mb3J3YXJkWih6VmFsRiwgdGltZSk7XG4gICAgICByZXR1cm4gW3RoaXMubGlzdGVuZXIuZm9yd2FyZFgsIHRoaXMubGlzdGVuZXIuZm9yd2FyZFksIHRoaXMubGlzdGVuZXIuZm9yd2FyZFpdO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvcmllbnRVcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvcmllbnRVcCh4VmFsVSwgeVZhbFUsIHpWYWxVLCB0aW1lKSB7XG4gICAgICB0aGlzLnVwWCh4VmFsVSwgdGltZSk7XG4gICAgICB0aGlzLnVwWSh5VmFsVSwgdGltZSk7XG4gICAgICB0aGlzLnVwWih6VmFsVSwgdGltZSk7XG4gICAgICByZXR1cm4gW3RoaXMubGlzdGVuZXIudXBYLCB0aGlzLmxpc3RlbmVyLnVwWSwgdGhpcy5saXN0ZW5lci51cFpdO1xuICAgIH0gXG4gICAgLy8gICAqIEdldHRlciBhbmQgc2V0dGVyIG1ldGhvZHMgZm9yIG9yaWVudCBjb29yZGluYXRlc1xuICAgIC8vICAgKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgW3VwZGF0ZWQgY29vcmRpbmF0ZSB2YWx1ZV1cbiAgICAvLyAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJmb3J3YXJkWFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3J3YXJkWCh4VmFsLCB0aW1lKSB7XG4gICAgICB2YXIgdCA9IHRpbWUgfHwgMDtcblxuICAgICAgaWYgKHR5cGVvZiB4VmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLmxpc3RlbmVyLmZvcndhcmRYLnZhbHVlID0geFZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5mb3J3YXJkWC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDEgKyB0KTtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5mb3J3YXJkWC5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh4VmFsLCB0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMiArIHQpO1xuICAgICAgfSBlbHNlIGlmICh4VmFsKSB7XG4gICAgICAgIHhWYWwuY29ubmVjdCh0aGlzLmxpc3RlbmVyLmZvcndhcmRYKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuZm9yd2FyZFgudmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcndhcmRZXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcndhcmRZKHlWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHlWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIuZm9yd2FyZFkudmFsdWUgPSB5VmFsO1xuICAgICAgICB0aGlzLmxpc3RlbmVyLmZvcndhcmRZLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMSArIHQpO1xuICAgICAgICB0aGlzLmxpc3RlbmVyLmZvcndhcmRZLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHlWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHlWYWwpIHtcbiAgICAgICAgeVZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIuZm9yd2FyZFkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5saXN0ZW5lci5mb3J3YXJkWS52YWx1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yd2FyZFpcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yd2FyZFooelZhbCwgdGltZSkge1xuICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgelZhbCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5mb3J3YXJkWi52YWx1ZSA9IHpWYWw7XG4gICAgICAgIHRoaXMubGlzdGVuZXIuZm9yd2FyZFouY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIuZm9yd2FyZFoubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoelZhbCwgdGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDIgKyB0KTtcbiAgICAgIH0gZWxzZSBpZiAoelZhbCkge1xuICAgICAgICB6VmFsLmNvbm5lY3QodGhpcy5saXN0ZW5lci5mb3J3YXJkWik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmxpc3RlbmVyLmZvcndhcmRaLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cFhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBYKHhWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHhWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIudXBYLnZhbHVlID0geFZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci51cFguY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIudXBYLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHhWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHhWYWwpIHtcbiAgICAgICAgeFZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIudXBYKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIudXBYLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cFlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBZKHlWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHlWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIudXBZLnZhbHVlID0geVZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci51cFkuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIudXBZLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHlWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHlWYWwpIHtcbiAgICAgICAgeVZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIudXBZKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIudXBZLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cFpcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBaKHpWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHpWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIudXBaLnZhbHVlID0gelZhbDtcbiAgICAgICAgdGhpcy5saXN0ZW5lci51cFouY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXIudXBaLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHpWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHpWYWwpIHtcbiAgICAgICAgelZhbC5jb25uZWN0KHRoaXMubGlzdGVuZXIudXBaKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIudXBaLnZhbHVlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMaXN0ZW5lcjNEO1xufSgpO1xuXG4gdmFyIGxpc3RlbmVyM2QgPSAobGlzdGVuZXIzZF9MaXN0ZW5lcjNEKTtcbmZ1bmN0aW9uIHBhbm5lcjNkX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IHBhbm5lcjNkX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBwYW5uZXIzZF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gcGFubmVyM2RfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gcGFubmVyM2RfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBwYW5uZXIzZF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gcGFubmVyM2RfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBwYW5uZXIzZF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgcGFubmVyM2RfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gcGFubmVyM2RfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChwYW5uZXIzZF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIHBhbm5lcjNkX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBwYW5uZXIzZF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBwYW5uZXIzZF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7IHBhbm5lcjNkX2dldCA9IFJlZmxlY3QuZ2V0OyB9IGVsc2UgeyBwYW5uZXIzZF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IHZhciBiYXNlID0gcGFubmVyM2Rfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTsgaWYgKCFiYXNlKSByZXR1cm47IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7IGlmIChkZXNjLmdldCkgeyByZXR1cm4gZGVzYy5nZXQuY2FsbChyZWNlaXZlcik7IH0gcmV0dXJuIGRlc2MudmFsdWU7IH07IH0gcmV0dXJuIHBhbm5lcjNkX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpOyB9XG5cbmZ1bmN0aW9uIHBhbm5lcjNkX3N1cGVyUHJvcEJhc2Uob2JqZWN0LCBwcm9wZXJ0eSkgeyB3aGlsZSAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSkgeyBvYmplY3QgPSBwYW5uZXIzZF9nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhazsgfSByZXR1cm4gb2JqZWN0OyB9XG5cbmZ1bmN0aW9uIHBhbm5lcjNkX2dldFByb3RvdHlwZU9mKG8pIHsgcGFubmVyM2RfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gcGFubmVyM2RfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gcGFubmVyM2RfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgcGFubmVyM2Rfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIHBhbm5lcjNkX3NldFByb3RvdHlwZU9mKG8sIHApIHsgcGFubmVyM2Rfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIHBhbm5lcjNkX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cblxuLyoqXG4gKiBQYW5uZXIzRCBpcyBiYXNlZCBvbiB0aGUgPGEgdGl0bGU9XCJXZWIgQXVkaW8gUGFubmVyIGRvY3NcIiAgaHJlZj1cbiAqIFwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Bhbm5lck5vZGVcIj5cbiAqIFdlYiBBdWRpbyBTcGF0aWFsIFBhbm5lciBOb2RlPC9hPi5cbiAqIFRoaXMgcGFubmVyIGlzIGEgc3BhdGlhbCBwcm9jZXNzaW5nIG5vZGUgdGhhdCBhbGxvd3MgYXVkaW8gdG8gYmUgcG9zaXRpb25lZFxuICogYW5kIG9yaWVudGVkIGluIDNEIHNwYWNlLlxuICpcbiAqIFRoZSBwb3NpdGlvbiBpcyByZWxhdGl2ZSB0byBhbiA8YSB0aXRsZT1cIldlYiBBdWRpbyBMaXN0ZW5lciBkb2NzXCIgaHJlZj1cbiAqIFwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0F1ZGlvTGlzdGVuZXJcIj5cbiAqIEF1ZGlvIENvbnRleHQgTGlzdGVuZXI8L2E+LCB3aGljaCBjYW4gYmUgYWNjZXNzZWRcbiAqIGJ5IDxjb2RlPnA1LnNvdW5kT3V0LmF1ZGlvY29udGV4dC5saXN0ZW5lcjwvY29kZT5cbiAqXG4gKlxuICogQGNsYXNzIHA1LlBhbm5lcjNEXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuXG52YXIgUGFubmVyM0QgPVxuZnVuY3Rpb24gKF9FZmZlY3QpIHtcbiAgcGFubmVyM2RfaW5oZXJpdHMoUGFubmVyM0QsIF9FZmZlY3QpO1xuXG4gIGZ1bmN0aW9uIFBhbm5lcjNEKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIHBhbm5lcjNkX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhbm5lcjNEKTtcblxuICAgIF90aGlzID0gcGFubmVyM2RfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBwYW5uZXIzZF9nZXRQcm90b3R5cGVPZihQYW5uZXIzRCkuY2FsbCh0aGlzKSk7XG4gICAgLyoqXG4gICAgICogIDxhIHRpdGxlPVwiV2ViIEF1ZGlvIFBhbm5lciBkb2NzXCIgIGhyZWY9XG4gICAgICogIFwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Bhbm5lck5vZGVcIj5cbiAgICAgKiAgV2ViIEF1ZGlvIFNwYXRpYWwgUGFubmVyIE5vZGU8L2E+XG4gICAgICpcbiAgICAgKiAgUHJvcGVydGllcyBpbmNsdWRlPGJyPlxuICAgICAqIFtQYW5uaW5nIE1vZGVsXShodHRwczovL3d3dy53My5vcmcvVFIvd2ViYXVkaW8vI2lkbC1kZWYtUGFubmluZ01vZGVsVHlwZSlcbiAgICAgKiA6IFwiZXF1YWwgcG93ZXJcIiBvciBcIkhSVEZcIjxicj5cbiAgICAgKiBbRGlzdGFuY2VNb2RlbF0oaHR0cHM6Ly93d3cudzMub3JnL1RSL3dlYmF1ZGlvLyNpZGwtZGVmLURpc3RhbmNlTW9kZWxUeXBlKVxuICAgICAqICA6IFwibGluZWFyXCIsIFwiaW52ZXJzZVwiLCBvciBcImV4cG9uZW50aWFsXCJcbiAgICAgKlxuICAgICAqICBAcHJvcGVydHkge0F1ZGlvTm9kZX0gcGFubmVyXG4gICAgICpcbiAgICAgKi9cblxuICAgIF90aGlzLnBhbm5lciA9IF90aGlzLmFjLmNyZWF0ZVBhbm5lcigpO1xuICAgIF90aGlzLnBhbm5lci5wYW5uaW5nTW9kZWwgPSAnSFJURic7XG4gICAgX3RoaXMucGFubmVyLmRpc3RhbmNlTW9kZWwgPSAnbGluZWFyJztcblxuICAgIF90aGlzLnBhbm5lci5jb25uZWN0KF90aGlzLm91dHB1dCk7XG5cbiAgICBfdGhpcy5pbnB1dC5jb25uZWN0KF90aGlzLnBhbm5lcik7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgLyoqXG4gICAqIENvbm5lY3QgYW4gYXVkaW8gc29yY2VcbiAgICpcbiAgICogQG1ldGhvZCAgcHJvY2Vzc1xuICAgKiBAZm9yIHA1LlBhbm5lcjNEXG4gICAqIEBwYXJhbSAge09iamVjdH0gc3JjIElucHV0IHNvdXJjZVxuICAgKi9cblxuXG4gIHBhbm5lcjNkX2NyZWF0ZUNsYXNzKFBhbm5lcjNELCBbe1xuICAgIGtleTogXCJwcm9jZXNzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByb2Nlc3Moc3JjKSB7XG4gICAgICBzcmMuY29ubmVjdCh0aGlzLmlucHV0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBYLFksWiBwb3NpdGlvbiBvZiB0aGUgUGFubmVyXG4gICAgICogQG1ldGhvZCBzZXRcbiAgICAgKiBAZm9yIHA1LlBhbm5lcjNEXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB4VmFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB5VmFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB6VmFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB0aW1lXG4gICAgICogQHJldHVybiB7QXJyYXl9ICAgICAgVXBkYXRlZCB4LCB5LCB6IHZhbHVlcyBhcyBhbiBhcnJheVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldCh4VmFsLCB5VmFsLCB6VmFsLCB0aW1lKSB7XG4gICAgICB0aGlzLnBvc2l0aW9uWCh4VmFsLCB0aW1lKTtcbiAgICAgIHRoaXMucG9zaXRpb25ZKHlWYWwsIHRpbWUpO1xuICAgICAgdGhpcy5wb3NpdGlvblooelZhbCwgdGltZSk7XG4gICAgICByZXR1cm4gW3RoaXMucGFubmVyLnBvc2l0aW9uWC52YWx1ZSwgdGhpcy5wYW5uZXIucG9zaXRpb25ZLnZhbHVlLCB0aGlzLnBhbm5lci5wb3NpdGlvbloudmFsdWVdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXR0ZXIgYW5kIHNldHRlciBtZXRob2RzIGZvciBwb3NpdGlvbiBjb29yZGluYXRlc1xuICAgICAqIEBtZXRob2QgcG9zaXRpb25YXG4gICAgICogQGZvciBwNS5QYW5uZXIzRFxuICAgICAqIEByZXR1cm4ge051bWJlcn0gICAgICB1cGRhdGVkIGNvb3JkaW5hdGUgdmFsdWVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEdldHRlciBhbmQgc2V0dGVyIG1ldGhvZHMgZm9yIHBvc2l0aW9uIGNvb3JkaW5hdGVzXG4gICAgICogQG1ldGhvZCBwb3NpdGlvbllcbiAgICAgKiBAZm9yIHA1LlBhbm5lcjNEXG4gICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgIHVwZGF0ZWQgY29vcmRpbmF0ZSB2YWx1ZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogR2V0dGVyIGFuZCBzZXR0ZXIgbWV0aG9kcyBmb3IgcG9zaXRpb24gY29vcmRpbmF0ZXNcbiAgICAgKiBAbWV0aG9kIHBvc2l0aW9uWlxuICAgICAqIEBmb3IgcDUuUGFubmVyM0RcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgdXBkYXRlZCBjb29yZGluYXRlIHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJwb3NpdGlvblhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcG9zaXRpb25YKHhWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHhWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMucGFubmVyLnBvc2l0aW9uWC52YWx1ZSA9IHhWYWw7XG4gICAgICAgIHRoaXMucGFubmVyLnBvc2l0aW9uWC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDEgKyB0KTtcbiAgICAgICAgdGhpcy5wYW5uZXIucG9zaXRpb25YLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHhWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHhWYWwpIHtcbiAgICAgICAgeFZhbC5jb25uZWN0KHRoaXMucGFubmVyLnBvc2l0aW9uWCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnBhbm5lci5wb3NpdGlvblgudmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInBvc2l0aW9uWVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwb3NpdGlvblkoeVZhbCwgdGltZSkge1xuICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgeVZhbCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5wYW5uZXIucG9zaXRpb25ZLnZhbHVlID0geVZhbDtcbiAgICAgICAgdGhpcy5wYW5uZXIucG9zaXRpb25ZLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMSArIHQpO1xuICAgICAgICB0aGlzLnBhbm5lci5wb3NpdGlvblkubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoeVZhbCwgdGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDIgKyB0KTtcbiAgICAgIH0gZWxzZSBpZiAoeVZhbCkge1xuICAgICAgICB5VmFsLmNvbm5lY3QodGhpcy5wYW5uZXIucG9zaXRpb25ZKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucGFubmVyLnBvc2l0aW9uWS52YWx1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicG9zaXRpb25aXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBvc2l0aW9uWih6VmFsLCB0aW1lKSB7XG4gICAgICB2YXIgdCA9IHRpbWUgfHwgMDtcblxuICAgICAgaWYgKHR5cGVvZiB6VmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLnBhbm5lci5wb3NpdGlvbloudmFsdWUgPSB6VmFsO1xuICAgICAgICB0aGlzLnBhbm5lci5wb3NpdGlvblouY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMucGFubmVyLnBvc2l0aW9uWi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh6VmFsLCB0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMiArIHQpO1xuICAgICAgfSBlbHNlIGlmICh6VmFsKSB7XG4gICAgICAgIHpWYWwuY29ubmVjdCh0aGlzLnBhbm5lci5wb3NpdGlvblopO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5wYW5uZXIucG9zaXRpb25aLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIFgsWSxaIHBvc2l0aW9uIG9mIHRoZSBQYW5uZXJcbiAgICAgKiBAbWV0aG9kICBvcmllbnRcbiAgICAgKiBAZm9yIHA1LlBhbm5lcjNEXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB4VmFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB5VmFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB6VmFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB0aW1lXG4gICAgICogQHJldHVybiB7QXJyYXl9ICAgICAgVXBkYXRlZCB4LCB5LCB6IHZhbHVlcyBhcyBhbiBhcnJheVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwib3JpZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9yaWVudCh4VmFsLCB5VmFsLCB6VmFsLCB0aW1lKSB7XG4gICAgICB0aGlzLm9yaWVudFgoeFZhbCwgdGltZSk7XG4gICAgICB0aGlzLm9yaWVudFkoeVZhbCwgdGltZSk7XG4gICAgICB0aGlzLm9yaWVudFooelZhbCwgdGltZSk7XG4gICAgICByZXR1cm4gW3RoaXMucGFubmVyLm9yaWVudGF0aW9uWC52YWx1ZSwgdGhpcy5wYW5uZXIub3JpZW50YXRpb25ZLnZhbHVlLCB0aGlzLnBhbm5lci5vcmllbnRhdGlvbloudmFsdWVdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXR0ZXIgYW5kIHNldHRlciBtZXRob2RzIGZvciBvcmllbnQgY29vcmRpbmF0ZXNcbiAgICAgKiBAbWV0aG9kIG9yaWVudFhcbiAgICAgKiBAZm9yIHA1LlBhbm5lcjNEXG4gICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgIHVwZGF0ZWQgY29vcmRpbmF0ZSB2YWx1ZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogR2V0dGVyIGFuZCBzZXR0ZXIgbWV0aG9kcyBmb3Igb3JpZW50IGNvb3JkaW5hdGVzXG4gICAgICogQG1ldGhvZCBvcmllbnRZXG4gICAgICogQGZvciBwNS5QYW5uZXIzRFxuICAgICAqIEByZXR1cm4ge051bWJlcn0gICAgICB1cGRhdGVkIGNvb3JkaW5hdGUgdmFsdWVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEdldHRlciBhbmQgc2V0dGVyIG1ldGhvZHMgZm9yIG9yaWVudCBjb29yZGluYXRlc1xuICAgICAqIEBtZXRob2Qgb3JpZW50WlxuICAgICAqIEBmb3IgcDUuUGFubmVyM0RcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgdXBkYXRlZCBjb29yZGluYXRlIHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJvcmllbnRYXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9yaWVudFgoeFZhbCwgdGltZSkge1xuICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgeFZhbCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5wYW5uZXIub3JpZW50YXRpb25YLnZhbHVlID0geFZhbDtcbiAgICAgICAgdGhpcy5wYW5uZXIub3JpZW50YXRpb25YLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMSArIHQpO1xuICAgICAgICB0aGlzLnBhbm5lci5vcmllbnRhdGlvblgubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoeFZhbCwgdGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDIgKyB0KTtcbiAgICAgIH0gZWxzZSBpZiAoeFZhbCkge1xuICAgICAgICB4VmFsLmNvbm5lY3QodGhpcy5wYW5uZXIub3JpZW50YXRpb25YKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucGFubmVyLm9yaWVudGF0aW9uWC52YWx1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib3JpZW50WVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvcmllbnRZKHlWYWwsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIHlWYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMucGFubmVyLm9yaWVudGF0aW9uWS52YWx1ZSA9IHlWYWw7XG4gICAgICAgIHRoaXMucGFubmVyLm9yaWVudGF0aW9uWS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDEgKyB0KTtcbiAgICAgICAgdGhpcy5wYW5uZXIub3JpZW50YXRpb25ZLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHlWYWwsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHlWYWwpIHtcbiAgICAgICAgeVZhbC5jb25uZWN0KHRoaXMucGFubmVyLm9yaWVudGF0aW9uWSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnBhbm5lci5vcmllbnRhdGlvblkudmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9yaWVudFpcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3JpZW50Wih6VmFsLCB0aW1lKSB7XG4gICAgICB2YXIgdCA9IHRpbWUgfHwgMDtcblxuICAgICAgaWYgKHR5cGVvZiB6VmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLnBhbm5lci5vcmllbnRhdGlvbloudmFsdWUgPSB6VmFsO1xuICAgICAgICB0aGlzLnBhbm5lci5vcmllbnRhdGlvblouY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMucGFubmVyLm9yaWVudGF0aW9uWi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh6VmFsLCB0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMiArIHQpO1xuICAgICAgfSBlbHNlIGlmICh6VmFsKSB7XG4gICAgICAgIHpWYWwuY29ubmVjdCh0aGlzLnBhbm5lci5vcmllbnRhdGlvblopO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5wYW5uZXIub3JpZW50YXRpb25aLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHJvbGxvZmYgZmFjdG9yIGFuZCBtYXggZGlzdGFuY2VcbiAgICAgKiBAbWV0aG9kICBzZXRGYWxsb2ZmXG4gICAgICogQGZvciBwNS5QYW5uZXIzRFxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbbWF4RGlzdGFuY2VdXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFtyb2xsb2ZmRmFjdG9yXVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0RmFsbG9mZlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRGYWxsb2ZmKG1heERpc3RhbmNlLCByb2xsb2ZmRmFjdG9yKSB7XG4gICAgICB0aGlzLm1heERpc3QobWF4RGlzdGFuY2UpO1xuICAgICAgdGhpcy5yb2xsb2ZmKHJvbGxvZmZGYWN0b3IpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNYXhpdW0gZGlzdGFuY2UgYmV0d2VlbiB0aGUgc291cmNlIGFuZCB0aGUgbGlzdGVuZXJcbiAgICAgKiBAbWV0aG9kICBtYXhEaXN0XG4gICAgICogQGZvciBwNS5QYW5uZXIzRFxuICAgICAqIEBwYXJhbSAge051bWJlcn0gbWF4RGlzdGFuY2VcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IHVwZGF0ZWQgdmFsdWVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIm1heERpc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbWF4RGlzdChtYXhEaXN0YW5jZSkge1xuICAgICAgaWYgKHR5cGVvZiBtYXhEaXN0YW5jZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5wYW5uZXIubWF4RGlzdGFuY2UgPSBtYXhEaXN0YW5jZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucGFubmVyLm1heERpc3RhbmNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBIb3cgcXVpY2tseSB0aGUgdm9sdW1lIGlzIHJlZHVjZWQgYXMgdGhlIHNvdXJjZSBtb3ZlcyBhd2F5IGZyb20gdGhlIGxpc3RlbmVyXG4gICAgICogQG1ldGhvZCAgcm9sbG9mXG4gICAgICogQGZvciBwNS5QYW5uZXIzRFxuICAgICAqIEBwYXJhbSAge051bWJlcn0gcm9sbG9mZkZhY3RvclxuICAgICAqIEByZXR1cm4ge051bWJlcn0gdXBkYXRlZCB2YWx1ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicm9sbG9mZlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByb2xsb2ZmKHJvbGxvZmZGYWN0b3IpIHtcbiAgICAgIGlmICh0eXBlb2Ygcm9sbG9mZkZhY3RvciA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5wYW5uZXIucm9sbG9mZkZhY3RvciA9IHJvbGxvZmZGYWN0b3I7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnBhbm5lci5yb2xsb2ZmRmFjdG9yO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXNwb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICBwYW5uZXIzZF9nZXQocGFubmVyM2RfZ2V0UHJvdG90eXBlT2YoUGFubmVyM0QucHJvdG90eXBlKSwgXCJkaXNwb3NlXCIsIHRoaXMpLmNhbGwodGhpcyk7XG5cbiAgICAgIGlmICh0aGlzLnBhbm5lcikge1xuICAgICAgICB0aGlzLnBhbm5lci5kaXNjb25uZWN0KCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhbm5lcjtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUGFubmVyM0Q7XG59KGVmZmVjdCk7XG5cbiB2YXIgcGFubmVyM2QgPSAoUGFubmVyM0QpO1xuZnVuY3Rpb24gZGVsYXlfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgZGVsYXlfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IGRlbGF5X3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBkZWxheV90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiBkZWxheV9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGRlbGF5X2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBkZWxheV9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlbGF5X2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWxheV9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBkZWxheV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKGRlbGF5X3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gZGVsYXlfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIGRlbGF5X2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIGRlbGF5X2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAodHlwZW9mIFJlZmxlY3QgIT09IFwidW5kZWZpbmVkXCIgJiYgUmVmbGVjdC5nZXQpIHsgZGVsYXlfZ2V0ID0gUmVmbGVjdC5nZXQ7IH0gZWxzZSB7IGRlbGF5X2dldCA9IGZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgdmFyIGJhc2UgPSBkZWxheV9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpOyBpZiAoIWJhc2UpIHJldHVybjsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTsgaWYgKGRlc2MuZ2V0KSB7IHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTsgfSByZXR1cm4gZGVzYy52YWx1ZTsgfTsgfSByZXR1cm4gZGVsYXlfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyIHx8IHRhcmdldCk7IH1cblxuZnVuY3Rpb24gZGVsYXlfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7IHdoaWxlICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKSB7IG9iamVjdCA9IGRlbGF5X2dldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrOyB9IHJldHVybiBvYmplY3Q7IH1cblxuZnVuY3Rpb24gZGVsYXlfZ2V0UHJvdG90eXBlT2YobykgeyBkZWxheV9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBkZWxheV9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG5mdW5jdGlvbiBkZWxheV9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBkZWxheV9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gZGVsYXlfc2V0UHJvdG90eXBlT2YobywgcCkgeyBkZWxheV9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gZGVsYXlfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxuXG5cbi8qKlxuICogIERlbGF5IGlzIGFuIGVjaG8gZWZmZWN0LiBJdCBwcm9jZXNzZXMgYW4gZXhpc3Rpbmcgc291bmQgc291cmNlLFxuICogIGFuZCBvdXRwdXRzIGEgZGVsYXllZCB2ZXJzaW9uIG9mIHRoYXQgc291bmQuIFRoZSBwNS5EZWxheSBjYW5cbiAqICBwcm9kdWNlIGRpZmZlcmVudCBlZmZlY3RzIGRlcGVuZGluZyBvbiB0aGUgZGVsYXlUaW1lLCBmZWVkYmFjayxcbiAqICBmaWx0ZXIsIGFuZCB0eXBlLiBJbiB0aGUgZXhhbXBsZSBiZWxvdywgYSBmZWVkYmFjayBvZiAwLjUgKHRoZVxuICogIGRlZmF1bHQgdmFsdWUpIHdpbGwgcHJvZHVjZSBhIGxvb3BpbmcgZGVsYXkgdGhhdCBkZWNyZWFzZXMgaW5cbiAqICB2b2x1bWUgYnkgNTAlIGVhY2ggcmVwZWF0LiBBIGZpbHRlciB3aWxsIGN1dCBvdXQgdGhlIGhpZ2hcbiAqICBmcmVxdWVuY2llcyBzbyB0aGF0IHRoZSBkZWxheSBkb2VzIG5vdCBzb3VuZCBhcyBwaWVyY2luZyBhcyB0aGVcbiAqICBvcmlnaW5hbCBzb3VyY2UuXG4gKlxuICpcbiAqICBUaGlzIGNsYXNzIGV4dGVuZHMgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdFwiPnA1LkVmZmVjdDwvYT4uXG4gKiAgTWV0aG9kcyA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2FtcFwiPmFtcCgpPC9hPiwgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9jaGFpblwiPmNoYWluKCk8L2E+LFxuICogIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvZHJ5d2V0XCI+ZHJ5d2V0KCk8L2E+LCA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2Nvbm5lY3RcIj5jb25uZWN0KCk8L2E+LCBhbmRcbiAqICA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2Rpc2Nvbm5lY3RcIj5kaXNjb25uZWN0KCk8L2E+IGFyZSBhdmFpbGFibGUuXG4gKiAgQGNsYXNzIHA1LkRlbGF5XG4gKiAgQGV4dGVuZHMgcDUuRWZmZWN0XG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBvc2M7XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0QWxpZ24oQ0VOVEVSKTtcbiAqICAgIHRleHQoJ3RhcCB0byBwbGF5Jywgd2lkdGgvMiwgaGVpZ2h0LzIpO1xuICpcbiAqICAgIG9zYyA9IG5ldyBwNS5Pc2NpbGxhdG9yKCdzcXVhcmUnKTtcbiAqICAgIG9zYy5hbXAoMC41KTtcbiAqICAgIGRlbGF5ID0gbmV3IHA1LkRlbGF5KCk7XG4gKlxuICogICAgLy8gZGVsYXkucHJvY2VzcygpIGFjY2VwdHMgNCBwYXJhbWV0ZXJzOlxuICogICAgLy8gc291cmNlLCBkZWxheVRpbWUgKGluIHNlY29uZHMpLCBmZWVkYmFjaywgZmlsdGVyIGZyZXF1ZW5jeVxuICogICAgZGVsYXkucHJvY2Vzcyhvc2MsIDAuMTIsIC43LCAyMzAwKTtcbiAqXG4gKiAgICBjbnYubW91c2VQcmVzc2VkKG9zY1N0YXJ0KTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIG9zY1N0YXJ0KCkge1xuICogICAgb3NjLnN0YXJ0KCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICogICAgb3NjLnN0b3AoKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cbnZhciBkZWxheV9EZWxheSA9XG5mdW5jdGlvbiAoX0VmZmVjdCkge1xuICBkZWxheV9pbmhlcml0cyhEZWxheSwgX0VmZmVjdCk7XG5cbiAgZnVuY3Rpb24gRGVsYXkoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZGVsYXlfY2xhc3NDYWxsQ2hlY2sodGhpcywgRGVsYXkpO1xuXG4gICAgX3RoaXMgPSBkZWxheV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIGRlbGF5X2dldFByb3RvdHlwZU9mKERlbGF5KS5jYWxsKHRoaXMpKTtcbiAgICBfdGhpcy5fc3BsaXQgPSBfdGhpcy5hYy5jcmVhdGVDaGFubmVsU3BsaXR0ZXIoMik7XG4gICAgX3RoaXMuX21lcmdlID0gX3RoaXMuYWMuY3JlYXRlQ2hhbm5lbE1lcmdlcigyKTtcbiAgICBfdGhpcy5fbGVmdEdhaW4gPSBfdGhpcy5hYy5jcmVhdGVHYWluKCk7XG4gICAgX3RoaXMuX3JpZ2h0R2FpbiA9IF90aGlzLmFjLmNyZWF0ZUdhaW4oKTtcbiAgICAvKipcbiAgICAgKiAgVGhlIHA1LkRlbGF5IGlzIGJ1aWx0IHdpdGggdHdvXG4gICAgICogIDxhIGhyZWY9XCJodHRwOi8vd3d3LnczLm9yZy9UUi93ZWJhdWRpby8jRGVsYXlOb2RlXCI+XG4gICAgICogIFdlYiBBdWRpbyBEZWxheSBOb2RlczwvYT4sIG9uZSBmb3IgZWFjaCBzdGVyZW8gY2hhbm5lbC5cbiAgICAgKlxuICAgICAqICBAZm9yIHA1LkRlbGF5XG4gICAgICogIEBwcm9wZXJ0eSB7RGVsYXlOb2RlfSBsZWZ0RGVsYXlcbiAgICAgKi9cblxuICAgIF90aGlzLmxlZnREZWxheSA9IF90aGlzLmFjLmNyZWF0ZURlbGF5KCk7XG4gICAgLyoqXG4gICAgICogIFRoZSBwNS5EZWxheSBpcyBidWlsdCB3aXRoIHR3b1xuICAgICAqICA8YSBocmVmPVwiaHR0cDovL3d3dy53My5vcmcvVFIvd2ViYXVkaW8vI0RlbGF5Tm9kZVwiPlxuICAgICAqICBXZWIgQXVkaW8gRGVsYXkgTm9kZXM8L2E+LCBvbmUgZm9yIGVhY2ggc3RlcmVvIGNoYW5uZWwuXG4gICAgICogIEBmb3IgcDUuRGVsYXlcbiAgICAgKiAgQHByb3BlcnR5IHtEZWxheU5vZGV9IHJpZ2h0RGVsYXlcbiAgICAgKi9cblxuICAgIF90aGlzLnJpZ2h0RGVsYXkgPSBfdGhpcy5hYy5jcmVhdGVEZWxheSgpO1xuICAgIF90aGlzLl9sZWZ0RmlsdGVyID0gbmV3IGZpbHRlcigpO1xuICAgIF90aGlzLl9yaWdodEZpbHRlciA9IG5ldyBmaWx0ZXIoKTtcblxuICAgIF90aGlzLl9sZWZ0RmlsdGVyLmRpc2Nvbm5lY3QoKTtcblxuICAgIF90aGlzLl9yaWdodEZpbHRlci5kaXNjb25uZWN0KCk7XG5cbiAgICBfdGhpcy5fbGVmdEZpbHRlci5iaXF1YWQuZnJlcXVlbmN5LnNldFZhbHVlQXRUaW1lKDEyMDAsIF90aGlzLmFjLmN1cnJlbnRUaW1lKTtcblxuICAgIF90aGlzLl9yaWdodEZpbHRlci5iaXF1YWQuZnJlcXVlbmN5LnNldFZhbHVlQXRUaW1lKDEyMDAsIF90aGlzLmFjLmN1cnJlbnRUaW1lKTtcblxuICAgIF90aGlzLl9sZWZ0RmlsdGVyLmJpcXVhZC5RLnNldFZhbHVlQXRUaW1lKDAuMywgX3RoaXMuYWMuY3VycmVudFRpbWUpO1xuXG4gICAgX3RoaXMuX3JpZ2h0RmlsdGVyLmJpcXVhZC5RLnNldFZhbHVlQXRUaW1lKDAuMywgX3RoaXMuYWMuY3VycmVudFRpbWUpOyBcblxuXG4gICAgX3RoaXMuaW5wdXQuY29ubmVjdChfdGhpcy5fc3BsaXQpO1xuXG4gICAgX3RoaXMubGVmdERlbGF5LmNvbm5lY3QoX3RoaXMuX2xlZnRHYWluKTtcblxuICAgIF90aGlzLnJpZ2h0RGVsYXkuY29ubmVjdChfdGhpcy5fcmlnaHRHYWluKTtcblxuICAgIF90aGlzLl9sZWZ0R2Fpbi5jb25uZWN0KF90aGlzLl9sZWZ0RmlsdGVyLmlucHV0KTtcblxuICAgIF90aGlzLl9yaWdodEdhaW4uY29ubmVjdChfdGhpcy5fcmlnaHRGaWx0ZXIuaW5wdXQpO1xuXG4gICAgX3RoaXMuX21lcmdlLmNvbm5lY3QoX3RoaXMud2V0KTtcblxuICAgIF90aGlzLl9sZWZ0RmlsdGVyLmJpcXVhZC5nYWluLnNldFZhbHVlQXRUaW1lKDEsIF90aGlzLmFjLmN1cnJlbnRUaW1lKTtcblxuICAgIF90aGlzLl9yaWdodEZpbHRlci5iaXF1YWQuZ2Fpbi5zZXRWYWx1ZUF0VGltZSgxLCBfdGhpcy5hYy5jdXJyZW50VGltZSk7IFxuXG5cbiAgICBfdGhpcy5zZXRUeXBlKDApO1xuXG4gICAgX3RoaXMuX21heERlbGF5ID0gX3RoaXMubGVmdERlbGF5LmRlbGF5VGltZS5tYXhWYWx1ZTsgXG5cbiAgICBfdGhpcy5mZWVkYmFjaygwLjUpO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIC8qKlxuICAgKiAgQWRkIGRlbGF5IHRvIGFuIGF1ZGlvIHNpZ25hbCBhY2NvcmRpbmcgdG8gYSBzZXRcbiAgICogIG9mIGRlbGF5IHBhcmFtZXRlcnMuXG4gICAqXG4gICAqICBAbWV0aG9kICBwcm9jZXNzXG4gICAqICBAZm9yIHA1LkRlbGF5XG4gICAqICBAcGFyYW0gIHtPYmplY3R9IFNpZ25hbCAgQW4gb2JqZWN0IHRoYXQgb3V0cHV0cyBhdWRpb1xuICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbZGVsYXlUaW1lXSBUaW1lIChpbiBzZWNvbmRzKSBvZiB0aGUgZGVsYXkvZWNoby5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU29tZSBicm93c2VycyBsaW1pdCBkZWxheVRpbWUgdG9cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBzZWNvbmQuXG4gICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtmZWVkYmFja10gIHNlbmRzIHRoZSBkZWxheSBiYWNrIHRocm91Z2ggaXRzZWxmXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluIGEgbG9vcCB0aGF0IGRlY3JlYXNlcyBpbiB2b2x1bWVcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWFjaCB0aW1lLlxuICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbbG93UGFzc10gICBDdXRvZmYgZnJlcXVlbmN5LiBPbmx5IGZyZXF1ZW5jaWVzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlbG93IHRoZSBsb3dQYXNzIHdpbGwgYmUgcGFydCBvZiB0aGVcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXkuXG4gICAqL1xuXG5cbiAgZGVsYXlfY3JlYXRlQ2xhc3MoRGVsYXksIFt7XG4gICAga2V5OiBcInByb2Nlc3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2VzcyhzcmMsIF9kZWxheVRpbWUsIF9mZWVkYmFjaywgX2ZpbHRlcikge1xuICAgICAgdmFyIGZlZWRiYWNrID0gX2ZlZWRiYWNrIHx8IDA7XG4gICAgICB2YXIgZGVsYXlUaW1lID0gX2RlbGF5VGltZSB8fCAwO1xuXG4gICAgICBpZiAoZmVlZGJhY2sgPj0gMS4wKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRmVlZGJhY2sgdmFsdWUgd2lsbCBmb3JjZSBhIHBvc2l0aXZlIGZlZWRiYWNrIGxvb3AuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChkZWxheVRpbWUgPj0gdGhpcy5fbWF4RGVsYXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEZWxheSBUaW1lIGV4Y2VlZHMgbWF4aW11bSBkZWxheSB0aW1lIG9mICcgKyB0aGlzLl9tYXhEZWxheSArICcgc2Vjb25kLicpO1xuICAgICAgfVxuXG4gICAgICBzcmMuY29ubmVjdCh0aGlzLmlucHV0KTtcbiAgICAgIHRoaXMubGVmdERlbGF5LmRlbGF5VGltZS5zZXRWYWx1ZUF0VGltZShkZWxheVRpbWUsIHRoaXMuYWMuY3VycmVudFRpbWUpO1xuICAgICAgdGhpcy5yaWdodERlbGF5LmRlbGF5VGltZS5zZXRWYWx1ZUF0VGltZShkZWxheVRpbWUsIHRoaXMuYWMuY3VycmVudFRpbWUpO1xuICAgICAgdGhpcy5fbGVmdEdhaW4uZ2Fpbi52YWx1ZSA9IGZlZWRiYWNrO1xuICAgICAgdGhpcy5fcmlnaHRHYWluLmdhaW4udmFsdWUgPSBmZWVkYmFjaztcblxuICAgICAgaWYgKF9maWx0ZXIpIHtcbiAgICAgICAgdGhpcy5fbGVmdEZpbHRlci5mcmVxKF9maWx0ZXIpO1xuXG4gICAgICAgIHRoaXMuX3JpZ2h0RmlsdGVyLmZyZXEoX2ZpbHRlcik7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTZXQgdGhlIGRlbGF5IChlY2hvKSB0aW1lLCBpbiBzZWNvbmRzLiBVc3VhbGx5IHRoaXMgdmFsdWUgd2lsbCBiZVxuICAgICAqICBhIGZsb2F0aW5nIHBvaW50IG51bWJlciBiZXR3ZWVuIDAuMCBhbmQgMS4wLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGRlbGF5VGltZVxuICAgICAqICBAZm9yIHA1LkRlbGF5XG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBkZWxheVRpbWUgVGltZSAoaW4gc2Vjb25kcykgb2YgdGhlIGRlbGF5XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkZWxheVRpbWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVsYXlUaW1lKHQpIHtcbiAgICAgIGlmICh0eXBlb2YgdCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgdC5jb25uZWN0KHRoaXMubGVmdERlbGF5LmRlbGF5VGltZSk7XG4gICAgICAgIHQuY29ubmVjdCh0aGlzLnJpZ2h0RGVsYXkuZGVsYXlUaW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubGVmdERlbGF5LmRlbGF5VGltZS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModGhpcy5hYy5jdXJyZW50VGltZSk7XG4gICAgICAgIHRoaXMucmlnaHREZWxheS5kZWxheVRpbWUuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUpO1xuICAgICAgICB0aGlzLmxlZnREZWxheS5kZWxheVRpbWUubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCwgdGhpcy5hYy5jdXJyZW50VGltZSk7XG4gICAgICAgIHRoaXMucmlnaHREZWxheS5kZWxheVRpbWUubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCwgdGhpcy5hYy5jdXJyZW50VGltZSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBGZWVkYmFjayBvY2N1cnMgd2hlbiBEZWxheSBzZW5kcyBpdHMgc2lnbmFsIGJhY2sgdGhyb3VnaCBpdHMgaW5wdXRcbiAgICAgKiAgaW4gYSBsb29wLiBUaGUgZmVlZGJhY2sgYW1vdW50IGRldGVybWluZXMgaG93IG11Y2ggc2lnbmFsIHRvIHNlbmQgZWFjaFxuICAgICAqICB0aW1lIHRocm91Z2ggdGhlIGxvb3AuIEEgZmVlZGJhY2sgZ3JlYXRlciB0aGFuIDEuMCBpcyBub3QgZGVzaXJhYmxlIGJlY2F1c2VcbiAgICAgKiAgaXQgd2lsbCBpbmNyZWFzZSB0aGUgb3ZlcmFsbCBvdXRwdXQgZWFjaCB0aW1lIHRocm91Z2ggdGhlIGxvb3AsXG4gICAgICogIGNyZWF0aW5nIGFuIGluZmluaXRlIGZlZWRiYWNrIGxvb3AuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDAuNVxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGZlZWRiYWNrXG4gICAgICogIEBmb3IgcDUuRGVsYXlcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ8T2JqZWN0fSBmZWVkYmFjayAwLjAgdG8gMS4wLCBvciBhbiBvYmplY3Qgc3VjaCBhcyBhblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9zY2lsbGF0b3IgdGhhdCBjYW4gYmUgdXNlZCB0b1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsYXRlIHRoaXMgcGFyYW1cbiAgICAgKiAgQHJldHVybnMge051bWJlcn0gRmVlZGJhY2sgdmFsdWVcbiAgICAgKlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZmVlZGJhY2tcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZmVlZGJhY2soZikge1xuICAgICAgaWYgKGYgJiYgdHlwZW9mIGYgIT09ICdudW1iZXInKSB7XG4gICAgICAgIGYuY29ubmVjdCh0aGlzLl9sZWZ0R2Fpbi5nYWluKTtcbiAgICAgICAgZi5jb25uZWN0KHRoaXMuX3JpZ2h0R2Fpbi5nYWluKTtcbiAgICAgIH0gZWxzZSBpZiAoZiA+PSAxLjApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGZWVkYmFjayB2YWx1ZSB3aWxsIGZvcmNlIGEgcG9zaXRpdmUgZmVlZGJhY2sgbG9vcC4nKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGYgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMuX2xlZnRHYWluLmdhaW4udmFsdWUgPSBmO1xuICAgICAgICB0aGlzLl9yaWdodEdhaW4uZ2Fpbi52YWx1ZSA9IGY7XG4gICAgICB9IFxuXG5cbiAgICAgIHJldHVybiB0aGlzLl9sZWZ0R2Fpbi5nYWluLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IGEgbG93cGFzcyBmaWx0ZXIgZnJlcXVlbmN5IGZvciB0aGUgZGVsYXkuIEEgbG93cGFzcyBmaWx0ZXJcbiAgICAgKiAgd2lsbCBjdXQgb2ZmIGFueSBmcmVxdWVuY2llcyBoaWdoZXIgdGhhbiB0aGUgZmlsdGVyIGZyZXF1ZW5jeS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBmaWx0ZXJcbiAgICAgKiAgQGZvciBwNS5EZWxheVxuICAgICAqICBAcGFyYW0ge051bWJlcnxPYmplY3R9IGN1dG9mZkZyZXEgIEEgbG93cGFzcyBmaWx0ZXIgd2lsbCBjdXQgb2ZmIGFueVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJlcXVlbmNpZXMgaGlnaGVyIHRoYW4gdGhlIGZpbHRlciBmcmVxdWVuY3kuXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfE9iamVjdH0gcmVzICBSZXNvbmFuY2Ugb2YgdGhlIGZpbHRlciBmcmVxdWVuY3lcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1dG9mZiwgb3IgYW4gb2JqZWN0IChpLmUuIGEgcDUuT3NjaWxsYXRvcilcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQgY2FuIGJlIHVzZWQgdG8gbW9kdWxhdGUgdGhpcyBwYXJhbWV0ZXIuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIaWdoIG51bWJlcnMgKGkuZS4gMTUpIHdpbGwgcHJvZHVjZSBhIHJlc29uYW5jZSxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvdyBudW1iZXJzIChpLmUuIC4yKSB3aWxsIHByb2R1Y2UgYSBzbG9wZS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImZpbHRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmaWx0ZXIoZnJlcSwgcSkge1xuICAgICAgdGhpcy5fbGVmdEZpbHRlci5zZXQoZnJlcSwgcSk7XG5cbiAgICAgIHRoaXMuX3JpZ2h0RmlsdGVyLnNldChmcmVxLCBxKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIENob29zZSBhIHByZXNldCB0eXBlIG9mIGRlbGF5LiAncGluZ1BvbmcnIGJvdW5jZXMgdGhlIHNpZ25hbFxuICAgICAqICBmcm9tIHRoZSBsZWZ0IHRvIHRoZSByaWdodCBjaGFubmVsIHRvIHByb2R1Y2UgYSBzdGVyZW8gZWZmZWN0LlxuICAgICAqICBBbnkgb3RoZXIgcGFyYW1ldGVyIHdpbGwgcmV2ZXJ0IHRvIHRoZSBkZWZhdWx0IGRlbGF5IHNldHRpbmcuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgc2V0VHlwZVxuICAgICAqICBAZm9yIHA1LkRlbGF5XG4gICAgICogIEBwYXJhbSB7U3RyaW5nfE51bWJlcn0gdHlwZSAncGluZ1BvbmcnICgxKSBvciAnZGVmYXVsdCcgKDApXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRUeXBlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFR5cGUodCkge1xuICAgICAgaWYgKHQgPT09IDEpIHtcbiAgICAgICAgdCA9ICdwaW5nUG9uZyc7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3NwbGl0LmRpc2Nvbm5lY3QoKTtcblxuICAgICAgdGhpcy5fbGVmdEZpbHRlci5kaXNjb25uZWN0KCk7XG5cbiAgICAgIHRoaXMuX3JpZ2h0RmlsdGVyLmRpc2Nvbm5lY3QoKTtcblxuICAgICAgdGhpcy5fc3BsaXQuY29ubmVjdCh0aGlzLmxlZnREZWxheSwgMCk7XG5cbiAgICAgIHRoaXMuX3NwbGl0LmNvbm5lY3QodGhpcy5yaWdodERlbGF5LCAxKTtcblxuICAgICAgc3dpdGNoICh0KSB7XG4gICAgICAgIGNhc2UgJ3BpbmdQb25nJzpcbiAgICAgICAgICB0aGlzLl9yaWdodEZpbHRlci5zZXRUeXBlKHRoaXMuX2xlZnRGaWx0ZXIuYmlxdWFkLnR5cGUpO1xuXG4gICAgICAgICAgdGhpcy5fbGVmdEZpbHRlci5vdXRwdXQuY29ubmVjdCh0aGlzLl9tZXJnZSwgMCwgMCk7XG5cbiAgICAgICAgICB0aGlzLl9yaWdodEZpbHRlci5vdXRwdXQuY29ubmVjdCh0aGlzLl9tZXJnZSwgMCwgMSk7XG5cbiAgICAgICAgICB0aGlzLl9sZWZ0RmlsdGVyLm91dHB1dC5jb25uZWN0KHRoaXMucmlnaHREZWxheSk7XG5cbiAgICAgICAgICB0aGlzLl9yaWdodEZpbHRlci5vdXRwdXQuY29ubmVjdCh0aGlzLmxlZnREZWxheSk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRoaXMuX2xlZnRGaWx0ZXIub3V0cHV0LmNvbm5lY3QodGhpcy5fbWVyZ2UsIDAsIDApO1xuXG4gICAgICAgICAgdGhpcy5fcmlnaHRGaWx0ZXIub3V0cHV0LmNvbm5lY3QodGhpcy5fbWVyZ2UsIDAsIDEpO1xuXG4gICAgICAgICAgdGhpcy5fbGVmdEZpbHRlci5vdXRwdXQuY29ubmVjdCh0aGlzLmxlZnREZWxheSk7XG5cbiAgICAgICAgICB0aGlzLl9yaWdodEZpbHRlci5vdXRwdXQuY29ubmVjdCh0aGlzLnJpZ2h0RGVsYXkpO1xuXG4gICAgICB9XG4gICAgfSBcblxuICAgIC8qKlxuICAgICAqICBTZXQgdGhlIG91dHB1dCBsZXZlbCBvZiB0aGUgZGVsYXkgZWZmZWN0LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGFtcFxuICAgICAqICBAZm9yIHA1LkRlbGF5XG4gICAgICogIEBwYXJhbSAge051bWJlcn0gdm9sdW1lIGFtcGxpdHVkZSBiZXR3ZWVuIDAgYW5kIDEuMFxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3JhbXBUaW1lXSBjcmVhdGUgYSBmYWRlIHRoYXQgbGFzdHMgcmFtcFRpbWVcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gc2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogIFNlbmQgb3V0cHV0IHRvIGEgcDUuc291bmQgb3Igd2ViIGF1ZGlvIG9iamVjdFxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGNvbm5lY3RcbiAgICAgKiAgQGZvciBwNS5EZWxheVxuICAgICAqICBAcGFyYW0gIHtPYmplY3R9IHVuaXRcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqICBEaXNjb25uZWN0IGFsbCBvdXRwdXQuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCBkaXNjb25uZWN0XG4gICAgICogIEBmb3IgcDUuRGVsYXlcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIGRlbGF5X2dldChkZWxheV9nZXRQcm90b3R5cGVPZihEZWxheS5wcm90b3R5cGUpLCBcImRpc3Bvc2VcIiwgdGhpcykuY2FsbCh0aGlzKTtcblxuICAgICAgdGhpcy5fc3BsaXQuZGlzY29ubmVjdCgpO1xuXG4gICAgICB0aGlzLl9sZWZ0RmlsdGVyLmRpc3Bvc2UoKTtcblxuICAgICAgdGhpcy5fcmlnaHRGaWx0ZXIuZGlzcG9zZSgpO1xuXG4gICAgICB0aGlzLl9tZXJnZS5kaXNjb25uZWN0KCk7XG5cbiAgICAgIHRoaXMuX2xlZnRHYWluLmRpc2Nvbm5lY3QoKTtcblxuICAgICAgdGhpcy5fcmlnaHRHYWluLmRpc2Nvbm5lY3QoKTtcblxuICAgICAgdGhpcy5sZWZ0RGVsYXkuZGlzY29ubmVjdCgpO1xuICAgICAgdGhpcy5yaWdodERlbGF5LmRpc2Nvbm5lY3QoKTtcbiAgICAgIHRoaXMuX3NwbGl0ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fbGVmdEZpbHRlciA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX3JpZ2h0RmlsdGVyID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fbWVyZ2UgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLl9sZWZ0R2FpbiA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX3JpZ2h0R2FpbiA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMubGVmdERlbGF5ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5yaWdodERlbGF5ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBEZWxheTtcbn0oZWZmZWN0KTtcblxuIHZhciBkZWxheSA9IChkZWxheV9EZWxheSk7XG5mdW5jdGlvbiByZXZlcmJfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgcmV2ZXJiX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyByZXZlcmJfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIHJldmVyYl90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiByZXZlcmJfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiByZXZlcmJfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIHJldmVyYl9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIHJldmVyYl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgcmV2ZXJiX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIHJldmVyYl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKHJldmVyYl90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIHJldmVyYl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gcmV2ZXJiX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIHJldmVyYl9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7IHJldmVyYl9nZXQgPSBSZWZsZWN0LmdldDsgfSBlbHNlIHsgcmV2ZXJiX2dldCA9IGZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgdmFyIGJhc2UgPSByZXZlcmJfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTsgaWYgKCFiYXNlKSByZXR1cm47IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7IGlmIChkZXNjLmdldCkgeyByZXR1cm4gZGVzYy5nZXQuY2FsbChyZWNlaXZlcik7IH0gcmV0dXJuIGRlc2MudmFsdWU7IH07IH0gcmV0dXJuIHJldmVyYl9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTsgfVxuXG5mdW5jdGlvbiByZXZlcmJfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7IHdoaWxlICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKSB7IG9iamVjdCA9IHJldmVyYl9nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhazsgfSByZXR1cm4gb2JqZWN0OyB9XG5cbmZ1bmN0aW9uIHJldmVyYl9nZXRQcm90b3R5cGVPZihvKSB7IHJldmVyYl9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiByZXZlcmJfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gcmV2ZXJiX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIHJldmVyYl9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gcmV2ZXJiX3NldFByb3RvdHlwZU9mKG8sIHApIHsgcmV2ZXJiX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiByZXZlcmJfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxuXG5cblxuLyoqXG4gKiAgUmV2ZXJiIGFkZHMgZGVwdGggdG8gYSBzb3VuZCB0aHJvdWdoIGEgbGFyZ2UgbnVtYmVyIG9mIGRlY2F5aW5nXG4gKiAgZWNob2VzLiBJdCBjcmVhdGVzIHRoZSBwZXJjZXB0aW9uIHRoYXQgc291bmQgaXMgb2NjdXJyaW5nIGluIGFcbiAqICBwaHlzaWNhbCBzcGFjZS4gVGhlIHA1LlJldmVyYiBoYXMgcGFyYW10ZXJzIGZvciBUaW1lIChob3cgbG9uZyBkb2VzIHRoZVxuICogIHJldmVyYiBsYXN0KSBhbmQgZGVjYXlSYXRlIChob3cgbXVjaCB0aGUgc291bmQgZGVjYXlzIHdpdGggZWFjaCBlY2hvKVxuICogIHRoYXQgY2FuIGJlIHNldCB3aXRoIHRoZSAuc2V0KCkgb3IgLnByb2Nlc3MoKSBtZXRob2RzLiBUaGUgcDUuQ29udm9sdmVyXG4gKiAgZXh0ZW5kcyBwNS5SZXZlcmIgYWxsb3dpbmcgeW91IHRvIHJlY3JlYXRlIHRoZSBzb3VuZCBvZiBhY3R1YWwgcGh5c2ljYWxcbiAqICBzcGFjZXMgdGhyb3VnaCBjb252b2x1dGlvbi5cbiAqXG4gKiAgVGhpcyBjbGFzcyBleHRlbmRzIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3RcIj5wNS5FZmZlY3Q8L2E+LlxuICogIE1ldGhvZHMgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9hbXBcIj5hbXAoKTwvYT4sIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvY2hhaW5cIj5jaGFpbigpPC9hPixcbiAqICA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2RyeXdldFwiPmRyeXdldCgpPC9hPiwgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9jb25uZWN0XCI+Y29ubmVjdCgpPC9hPiwgYW5kXG4gKiAgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kaXNjb25uZWN0XCI+ZGlzY29ubmVjdCgpPC9hPiBhcmUgYXZhaWxhYmxlLlxuICpcbiAqICBAY2xhc3MgcDUuUmV2ZXJiXG4gKiAgQGV4dGVuZHMgcDUuRWZmZWN0XG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBzb3VuZEZpbGUsIHJldmVyYjtcbiAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICogICAgc291bmRGaWxlID0gbG9hZFNvdW5kKCdhc3NldHMvRGFtc2NyYXlfRGFuY2luZ1RpZ2VyLm1wMycpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheVNvdW5kKTtcbiAqXG4gKiAgICByZXZlcmIgPSBuZXcgcDUuUmV2ZXJiKCk7XG4gKiAgICBzb3VuZEZpbGUuZGlzY29ubmVjdCgpOyAvLyBzbyB3ZSdsbCBvbmx5IGhlYXIgcmV2ZXJiLi4uXG4gKlxuICogICAgLy8gY29ubmVjdCBzb3VuZEZpbGUgdG8gcmV2ZXJiLCBwcm9jZXNzIHcvXG4gKiAgICAvLyAzIHNlY29uZCByZXZlcmJUaW1lLCBkZWNheVJhdGUgb2YgMiVcbiAqICAgIHJldmVyYi5wcm9jZXNzKHNvdW5kRmlsZSwgMywgMik7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBkcmF3KCkge1xuICogICAgbGV0IGRyeVdldCA9IGNvbnN0cmFpbihtYXAobW91c2VYLCAwLCB3aWR0aCwgMCwgMSksIDAsIDEpO1xuICogICAgLy8gMSA9IGFsbCByZXZlcmIsIDAgPSBubyByZXZlcmJcbiAqICAgIHJldmVyYi5kcnl3ZXQoZHJ5V2V0KTtcbiAqXG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDEwLCAyMCk7XG4gKiAgICB0ZXh0KCdkcnkvd2V0OiAnICsgcm91bmQoZHJ5V2V0ICogMTAwKSArICclJywgMTAsIGhlaWdodCAtIDIwKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHBsYXlTb3VuZCgpIHtcbiAqICAgIHNvdW5kRmlsZS5wbGF5KCk7XG4gKiAgfVxuICogIDwvY29kZT48L2Rpdj5cbiAqL1xuXG52YXIgUmV2ZXJiID1cbmZ1bmN0aW9uIChfRWZmZWN0KSB7XG4gIHJldmVyYl9pbmhlcml0cyhSZXZlcmIsIF9FZmZlY3QpO1xuXG4gIGZ1bmN0aW9uIFJldmVyYigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICByZXZlcmJfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmV2ZXJiKTtcblxuICAgIF90aGlzID0gcmV2ZXJiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmV2ZXJiX2dldFByb3RvdHlwZU9mKFJldmVyYikuY2FsbCh0aGlzKSk7XG5cbiAgICBfdGhpcy5faW5pdENvbnZvbHZlck5vZGUoKTsgXG5cblxuICAgIF90aGlzLmlucHV0LmdhaW4udmFsdWUgPSAwLjU7IFxuXG4gICAgX3RoaXMuX3NlY29uZHMgPSAzO1xuICAgIF90aGlzLl9kZWNheSA9IDI7XG4gICAgX3RoaXMuX3JldmVyc2UgPSBmYWxzZTtcblxuICAgIF90aGlzLl9idWlsZEltcHVsc2UoKTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHJldmVyYl9jcmVhdGVDbGFzcyhSZXZlcmIsIFt7XG4gICAga2V5OiBcIl9pbml0Q29udm9sdmVyTm9kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfaW5pdENvbnZvbHZlck5vZGUoKSB7XG4gICAgICB0aGlzLmNvbnZvbHZlck5vZGUgPSB0aGlzLmFjLmNyZWF0ZUNvbnZvbHZlcigpO1xuICAgICAgdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMuY29udm9sdmVyTm9kZSk7XG4gICAgICB0aGlzLmNvbnZvbHZlck5vZGUuY29ubmVjdCh0aGlzLndldCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl90ZWFyZG93bkNvbnZvbHZlck5vZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3RlYXJkb3duQ29udm9sdmVyTm9kZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnZvbHZlck5vZGUpIHtcbiAgICAgICAgdGhpcy5jb252b2x2ZXJOb2RlLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuY29udm9sdmVyTm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX3NldEJ1ZmZlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfc2V0QnVmZmVyKGF1ZGlvQnVmZmVyKSB7XG4gICAgICB0aGlzLl90ZWFyZG93bkNvbnZvbHZlck5vZGUoKTtcblxuICAgICAgdGhpcy5faW5pdENvbnZvbHZlck5vZGUoKTtcblxuICAgICAgdGhpcy5jb252b2x2ZXJOb2RlLmJ1ZmZlciA9IGF1ZGlvQnVmZmVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgQ29ubmVjdCBhIHNvdXJjZSB0byB0aGUgcmV2ZXJiLCBhbmQgYXNzaWduIHJldmVyYiBwYXJhbWV0ZXJzLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHByb2Nlc3NcbiAgICAgKiAgQGZvciBwNS5SZXZlcmJcbiAgICAgKiAgQHBhcmFtICB7T2JqZWN0fSBzcmMgICAgIHA1LnNvdW5kIC8gV2ViIEF1ZGlvIG9iamVjdCB3aXRoIGEgc291bmRcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5cbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbc2Vjb25kc10gRHVyYXRpb24gb2YgdGhlIHJldmVyYiwgaW4gc2Vjb25kcy5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIE1pbjogMCwgTWF4OiAxMC4gRGVmYXVsdHMgdG8gMy5cbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbZGVjYXlSYXRlXSBQZXJjZW50YWdlIG9mIGRlY2F5IHdpdGggZWFjaCBlY2hvLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1pbjogMCwgTWF4OiAxMDAuIERlZmF1bHRzIHRvIDIuXG4gICAgICogIEBwYXJhbSAge0Jvb2xlYW59IFtyZXZlcnNlXSBQbGF5IHRoZSByZXZlcmIgYmFja3dhcmRzIG9yIGZvcndhcmRzLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicHJvY2Vzc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcm9jZXNzKHNyYywgc2Vjb25kcywgZGVjYXlSYXRlLCByZXZlcnNlKSB7XG4gICAgICBzcmMuY29ubmVjdCh0aGlzLmlucHV0KTtcbiAgICAgIHZhciByZWJ1aWxkID0gZmFsc2U7XG5cbiAgICAgIGlmIChzZWNvbmRzKSB7XG4gICAgICAgIHRoaXMuX3NlY29uZHMgPSBzZWNvbmRzO1xuICAgICAgICByZWJ1aWxkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGRlY2F5UmF0ZSkge1xuICAgICAgICB0aGlzLl9kZWNheSA9IGRlY2F5UmF0ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJldmVyc2UpIHtcbiAgICAgICAgdGhpcy5fcmV2ZXJzZSA9IHJldmVyc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWJ1aWxkKSB7XG4gICAgICAgIHRoaXMuX2J1aWxkSW1wdWxzZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IHRoZSByZXZlcmIgc2V0dGluZ3MuIFNpbWlsYXIgdG8gLnByb2Nlc3MoKSwgYnV0IHdpdGhvdXRcbiAgICAgKiAgYXNzaWduaW5nIGEgbmV3IGlucHV0LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHNldFxuICAgICAqICBAZm9yIHA1LlJldmVyYlxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtzZWNvbmRzXSBEdXJhdGlvbiBvZiB0aGUgcmV2ZXJiLCBpbiBzZWNvbmRzLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgTWluOiAwLCBNYXg6IDEwLiBEZWZhdWx0cyB0byAzLlxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtkZWNheVJhdGVdIFBlcmNlbnRhZ2Ugb2YgZGVjYXkgd2l0aCBlYWNoIGVjaG8uXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgTWluOiAwLCBNYXg6IDEwMC4gRGVmYXVsdHMgdG8gMi5cbiAgICAgKiAgQHBhcmFtICB7Qm9vbGVhbn0gW3JldmVyc2VdIFBsYXkgdGhlIHJldmVyYiBiYWNrd2FyZHMgb3IgZm9yd2FyZHMuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KHNlY29uZHMsIGRlY2F5UmF0ZSwgcmV2ZXJzZSkge1xuICAgICAgdmFyIHJlYnVpbGQgPSBmYWxzZTtcblxuICAgICAgaWYgKHNlY29uZHMpIHtcbiAgICAgICAgdGhpcy5fc2Vjb25kcyA9IHNlY29uZHM7XG4gICAgICAgIHJlYnVpbGQgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGVjYXlSYXRlKSB7XG4gICAgICAgIHRoaXMuX2RlY2F5ID0gZGVjYXlSYXRlO1xuICAgICAgfVxuXG4gICAgICBpZiAocmV2ZXJzZSkge1xuICAgICAgICB0aGlzLl9yZXZlcnNlID0gcmV2ZXJzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJlYnVpbGQpIHtcbiAgICAgICAgdGhpcy5fYnVpbGRJbXB1bHNlKCk7XG4gICAgICB9XG4gICAgfSBcblxuICAgIC8qKlxuICAgICAqICBTZXQgdGhlIG91dHB1dCBsZXZlbCBvZiB0aGUgcmV2ZXJiIGVmZmVjdC5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBhbXBcbiAgICAgKiAgQGZvciBwNS5SZXZlcmJcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSB2b2x1bWUgYW1wbGl0dWRlIGJldHdlZW4gMCBhbmQgMS4wXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gW3JhbXBUaW1lXSBjcmVhdGUgYSBmYWRlIHRoYXQgbGFzdHMgcmFtcFRpbWVcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbdGltZUZyb21Ob3ddIHNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMgZnJvbSBub3dcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqICBTZW5kIG91dHB1dCB0byBhIHA1LnNvdW5kIG9yIHdlYiBhdWRpbyBvYmplY3RcbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBjb25uZWN0XG4gICAgICogIEBmb3IgcDUuUmV2ZXJiXG4gICAgICogIEBwYXJhbSAge09iamVjdH0gdW5pdFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogIERpc2Nvbm5lY3QgYWxsIG91dHB1dC5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kIGRpc2Nvbm5lY3RcbiAgICAgKiAgQGZvciBwNS5SZXZlcmJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqICBJbnNwaXJlZCBieSBTaW1wbGUgUmV2ZXJiIGJ5IEpvcmRhbiBTYW50ZWxsXG4gICAgICogIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWItYXVkaW8tY29tcG9uZW50cy9zaW1wbGUtcmV2ZXJiL2Jsb2IvbWFzdGVyL2luZGV4LmpzXG4gICAgICpcbiAgICAgKiAgVXRpbGl0eSBmdW5jdGlvbiBmb3IgYnVpbGRpbmcgYW4gaW1wdWxzZSByZXNwb25zZVxuICAgICAqICBiYXNlZCBvbiB0aGUgbW9kdWxlIHBhcmFtZXRlcnMuXG4gICAgICpcbiAgICAgKiAgQHByaXZhdGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9idWlsZEltcHVsc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2J1aWxkSW1wdWxzZSgpIHtcbiAgICAgIHZhciByYXRlID0gdGhpcy5hYy5zYW1wbGVSYXRlO1xuICAgICAgdmFyIGxlbmd0aCA9IHJhdGUgKiB0aGlzLl9zZWNvbmRzO1xuICAgICAgdmFyIGRlY2F5ID0gdGhpcy5fZGVjYXk7XG4gICAgICB2YXIgaW1wdWxzZSA9IHRoaXMuYWMuY3JlYXRlQnVmZmVyKDIsIGxlbmd0aCwgcmF0ZSk7XG4gICAgICB2YXIgaW1wdWxzZUwgPSBpbXB1bHNlLmdldENoYW5uZWxEYXRhKDApO1xuICAgICAgdmFyIGltcHVsc2VSID0gaW1wdWxzZS5nZXRDaGFubmVsRGF0YSgxKTtcbiAgICAgIHZhciBuLCBpO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbiA9IHRoaXMuX3JldmVyc2UgPyBsZW5ndGggLSBpIDogaTtcbiAgICAgICAgaW1wdWxzZUxbaV0gPSAoTWF0aC5yYW5kb20oKSAqIDIgLSAxKSAqIE1hdGgucG93KDEgLSBuIC8gbGVuZ3RoLCBkZWNheSk7XG4gICAgICAgIGltcHVsc2VSW2ldID0gKE1hdGgucmFuZG9tKCkgKiAyIC0gMSkgKiBNYXRoLnBvdygxIC0gbiAvIGxlbmd0aCwgZGVjYXkpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9zZXRCdWZmZXIoaW1wdWxzZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIHJldmVyYl9nZXQocmV2ZXJiX2dldFByb3RvdHlwZU9mKFJldmVyYi5wcm90b3R5cGUpLCBcImRpc3Bvc2VcIiwgdGhpcykuY2FsbCh0aGlzKTtcblxuICAgICAgdGhpcy5fdGVhcmRvd25Db252b2x2ZXJOb2RlKCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFJldmVyYjtcbn0oZWZmZWN0KTsgXG5cbi8qKlxuICogIDxwPnA1LkNvbnZvbHZlciBleHRlbmRzIHA1LlJldmVyYi4gSXQgY2FuIGVtdWxhdGUgdGhlIHNvdW5kIG9mIHJlYWxcbiAqICBwaHlzaWNhbCBzcGFjZXMgdGhyb3VnaCBhIHByb2Nlc3MgY2FsbGVkIDxhIGhyZWY9XCJcbiAqICBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Db252b2x1dGlvbl9yZXZlcmIjUmVhbF9zcGFjZV9zaW11bGF0aW9uXCI+XG4gKiAgY29udm9sdXRpb248L2E+LjwvcD5cbiAqXG4gKiAgPHA+Q29udm9sdXRpb24gbXVsdGlwbGllcyBhbnkgYXVkaW8gaW5wdXQgYnkgYW4gXCJpbXB1bHNlIHJlc3BvbnNlXCJcbiAqICB0byBzaW11bGF0ZSB0aGUgZGlzcGVyc2lvbiBvZiBzb3VuZCBvdmVyIHRpbWUuIFRoZSBpbXB1bHNlIHJlc3BvbnNlIGlzXG4gKiAgZ2VuZXJhdGVkIGZyb20gYW4gYXVkaW8gZmlsZSB0aGF0IHlvdSBwcm92aWRlLiBPbmUgd2F5IHRvXG4gKiAgZ2VuZXJhdGUgYW4gaW1wdWxzZSByZXNwb25zZSBpcyB0byBwb3AgYSBiYWxsb29uIGluIGEgcmV2ZXJiZXJhbnQgc3BhY2VcbiAqICBhbmQgcmVjb3JkIHRoZSBlY2hvLiBDb252b2x1dGlvbiBjYW4gYWxzbyBiZSB1c2VkIHRvIGV4cGVyaW1lbnQgd2l0aFxuICogIHNvdW5kLjwvcD5cbiAqXG4gKiAgPHA+VXNlIHRoZSBtZXRob2QgPGNvZGU+Y3JlYXRlQ29udm9sdXRpb24ocGF0aCk8L2NvZGU+IHRvIGluc3RhbnRpYXRlIGFcbiAqICBwNS5Db252b2x2ZXIgd2l0aCBhIHBhdGggdG8geW91ciBpbXB1bHNlIHJlc3BvbnNlIGF1ZGlvIGZpbGUuPC9wPlxuICpcbiAqICBAY2xhc3MgcDUuQ29udm9sdmVyXG4gKiAgQGV4dGVuZHMgcDUuRWZmZWN0XG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtICB7U3RyaW5nfSAgIHBhdGggICAgIHBhdGggdG8gYSBzb3VuZCBmaWxlXG4gKiAgQHBhcmFtICB7RnVuY3Rpb259IFtjYWxsYmFja10gZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGxvYWRpbmcgc3VjY2VlZHNcbiAqICBAcGFyYW0gIHtGdW5jdGlvbn0gW2Vycm9yQ2FsbGJhY2tdIGZ1bmN0aW9uIHRvIGNhbGwgaWYgbG9hZGluZyBmYWlscy5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgZnVuY3Rpb24gd2lsbCByZWNlaXZlIGFuIGVycm9yIG9yXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBYTUxIdHRwUmVxdWVzdCBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJvdXQgd2hhdCB3ZW50IHdyb25nLlxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgY1ZlcmIsIHNvdW5kO1xuICogIGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gKiAgICAvLyBXZSBoYXZlIGJvdGggTVAzIGFuZCBPR0cgdmVyc2lvbnMgb2YgYWxsIHNvdW5kIGFzc2V0c1xuICogICAgc291bmRGb3JtYXRzKCdvZ2cnLCAnbXAzJyk7XG4gKlxuICogICAgLy8gVHJ5IHJlcGxhY2luZyAnYngtc3ByaW5nJyB3aXRoIG90aGVyIHNvdW5kZmlsZXMgbGlrZVxuICogICAgLy8gJ2NvbmNyZXRlLXR1bm5lbCcgJ3NtYWxsLXBsYXRlJyAnZHJ1bScgJ2JlYXRib3gnXG4gKiAgICBjVmVyYiA9IGNyZWF0ZUNvbnZvbHZlcignYXNzZXRzL2J4LXNwcmluZy5tcDMnKTtcbiAqXG4gKiAgICAvLyBUcnkgcmVwbGFjaW5nICdEYW1zY3JheV9EYW5jaW5nVGlnZXInIHdpdGhcbiAqICAgIC8vICdiZWF0JywgJ2Rvb3JiZWxsJywgbHVja3lfZHJhZ29uc18tX3Bvd2VyX21lbG9keSdcbiAqICAgIHNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvRGFtc2NyYXlfRGFuY2luZ1RpZ2VyLm1wMycpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheVNvdW5kKTtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHQoJ3RhcCB0byBwbGF5JywgMjAsIDIwKTtcbiAqXG4gKiAgICAvLyBkaXNjb25uZWN0IGZyb20gbWFpbiBvdXRwdXQuLi5cbiAqICAgIHNvdW5kLmRpc2Nvbm5lY3QoKTtcbiAqXG4gKiAgICAvLyAuLi5hbmQgcHJvY2VzcyB3aXRoIGNWZXJiXG4gKiAgICAvLyBzbyB0aGF0IHdlIG9ubHkgaGVhciB0aGUgY29udm9sdXRpb25cbiAqICAgIGNWZXJiLnByb2Nlc3Moc291bmQpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gcGxheVNvdW5kKCkge1xuICogICAgc291bmQucGxheSgpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG52YXIgcmV2ZXJiX0NvbnZvbHZlciA9XG5mdW5jdGlvbiAoX1JldmVyYikge1xuICByZXZlcmJfaW5oZXJpdHMoQ29udm9sdmVyLCBfUmV2ZXJiKTtcblxuICBmdW5jdGlvbiBDb252b2x2ZXIocGF0aCwgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2spIHtcbiAgICB2YXIgX3RoaXMyO1xuXG4gICAgcmV2ZXJiX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbnZvbHZlcik7XG5cbiAgICBfdGhpczIgPSByZXZlcmJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXZlcmJfZ2V0UHJvdG90eXBlT2YoQ29udm9sdmVyKS5jYWxsKHRoaXMpKTtcbiAgICAvKipcbiAgICAgKiAgSW50ZXJuYWxseSwgdGhlIHA1LkNvbnZvbHZlciB1c2VzIHRoZSBhXG4gICAgICogIDxhIGhyZWY9XCJodHRwOi8vd3d3LnczLm9yZy9UUi93ZWJhdWRpby8jQ29udm9sdmVyTm9kZVwiPlxuICAgICAqICBXZWIgQXVkaW8gQ29udm9sdmVyIE5vZGU8L2E+LlxuICAgICAqXG4gICAgICogIEBwcm9wZXJ0eSB7Q29udm9sdmVyTm9kZX0gY29udm9sdmVyTm9kZVxuICAgICAqL1xuXG4gICAgX3RoaXMyLl9pbml0Q29udm9sdmVyTm9kZSgpOyBcblxuXG4gICAgX3RoaXMyLmlucHV0LmdhaW4udmFsdWUgPSAwLjU7XG5cbiAgICBpZiAocGF0aCkge1xuICAgICAgX3RoaXMyLmltcHVsc2VzID0gW107XG5cbiAgICAgIF90aGlzMi5fbG9hZEJ1ZmZlcihwYXRoLCBjYWxsYmFjaywgZXJyb3JDYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF90aGlzMi5fc2Vjb25kcyA9IDM7XG4gICAgICBfdGhpczIuX2RlY2F5ID0gMjtcbiAgICAgIF90aGlzMi5fcmV2ZXJzZSA9IGZhbHNlO1xuXG4gICAgICBfdGhpczIuX2J1aWxkSW1wdWxzZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgSWYgeW91IGxvYWQgbXVsdGlwbGUgaW1wdWxzZSBmaWxlcyB1c2luZyB0aGUgLmFkZEltcHVsc2UgbWV0aG9kLFxuICAgICAqICB0aGV5IHdpbGwgYmUgc3RvcmVkIGFzIE9iamVjdHMgaW4gdGhpcyBBcnJheS4gVG9nZ2xlIGJldHdlZW4gdGhlbVxuICAgICAqICB3aXRoIHRoZSA8Y29kZT50b2dnbGVJbXB1bHNlKGlkKTwvY29kZT4gbWV0aG9kLlxuICAgICAqXG4gICAgICogIEBwcm9wZXJ0eSB7QXJyYXl9IGltcHVsc2VzXG4gICAgICogIEBmb3IgcDUuQ29udm9sdmVyXG4gICAgICovXG5cblxuICAgIF90aGlzMi5pbXB1bHNlcyA9IFtdO1xuICAgIF90aGlzMi5zZXQgPSBudWxsO1xuICAgIHJldHVybiBfdGhpczI7XG4gIH1cbiAgLyoqXG4gICAqICBQcml2YXRlIG1ldGhvZCB0byBsb2FkIGEgYnVmZmVyIGFzIGFuIEltcHVsc2UgUmVzcG9uc2UsXG4gICAqICBhc3NpZ24gaXQgdG8gdGhlIGNvbnZvbHZlck5vZGUsIGFuZCBhZGQgdG8gdGhlIEFycmF5IG9mIC5pbXB1bHNlcy5cbiAgICpcbiAgICogIEBwYXJhbSAgIHtTdHJpbmd9ICAgcGF0aFxuICAgKiAgQHBhcmFtICAge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKiAgQHBhcmFtICAge0Z1bmN0aW9ufSBlcnJvckNhbGxiYWNrXG4gICAqICBAcHJpdmF0ZVxuICAgKi9cblxuXG4gIHJldmVyYl9jcmVhdGVDbGFzcyhDb252b2x2ZXIsIFt7XG4gICAga2V5OiBcIl9sb2FkQnVmZmVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9sb2FkQnVmZmVyKF9wYXRoLCBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgICAgdmFyIHBhdGggPSBwNS5wcm90b3R5cGUuX2NoZWNrRmlsZUZvcm1hdHMoX3BhdGgpO1xuXG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICB2YXIgZXJyb3JUcmFjZSA9IG5ldyBFcnJvcigpLnN0YWNrO1xuICAgICAgdmFyIGFjID0gT2JqZWN0KGF1ZGlvY29udGV4dFtcImJcIiBdKSgpO1xuICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgIHJlcXVlc3Qub3BlbignR0VUJywgcGF0aCwgdHJ1ZSk7XG4gICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9ICdhcnJheWJ1ZmZlcic7XG5cbiAgICAgIHJlcXVlc3Qub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgIGFjLmRlY29kZUF1ZGlvRGF0YShyZXF1ZXN0LnJlc3BvbnNlLCBmdW5jdGlvbiAoYnVmZikge1xuICAgICAgICAgICAgdmFyIGJ1ZmZlciA9IHt9O1xuICAgICAgICAgICAgdmFyIGNodW5rcyA9IHBhdGguc3BsaXQoJy8nKTtcbiAgICAgICAgICAgIGJ1ZmZlci5uYW1lID0gY2h1bmtzW2NodW5rcy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgIGJ1ZmZlci5hdWRpb0J1ZmZlciA9IGJ1ZmY7XG4gICAgICAgICAgICBzZWxmLmltcHVsc2VzLnB1c2goYnVmZmVyKTtcblxuICAgICAgICAgICAgc2VsZi5fc2V0QnVmZmVyKGJ1ZmZlci5hdWRpb0J1ZmZlcik7XG5cbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICBjYWxsYmFjayhidWZmZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIFxuICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBlcnIgPSBuZXcgZXJyb3JIYW5kbGVyKCdkZWNvZGVBdWRpb0RhdGEnLCBlcnJvclRyYWNlLCBzZWxmLnVybCk7XG4gICAgICAgICAgICB2YXIgbXNnID0gJ0F1ZGlvQ29udGV4dCBlcnJvciBhdCBkZWNvZGVBdWRpb0RhdGEgZm9yICcgKyBzZWxmLnVybDtcblxuICAgICAgICAgICAgaWYgKGVycm9yQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgZXJyLm1zZyA9IG1zZztcbiAgICAgICAgICAgICAgZXJyb3JDYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihtc2cgKyAnXFxuIFRoZSBlcnJvciBzdGFjayB0cmFjZSBpbmNsdWRlczogXFxuJyArIGVyci5zdGFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIGVyciA9IG5ldyBlcnJvckhhbmRsZXIoJ2xvYWRDb252b2x2ZXInLCBlcnJvclRyYWNlLCBzZWxmLnVybCk7XG4gICAgICAgICAgICB2YXIgbXNnID0gJ1VuYWJsZSB0byBsb2FkICcgKyBzZWxmLnVybCArICcuIFRoZSByZXF1ZXN0IHN0YXR1cyB3YXM6ICcgKyByZXF1ZXN0LnN0YXR1cyArICcgKCcgKyByZXF1ZXN0LnN0YXR1c1RleHQgKyAnKSc7XG5cbiAgICAgICAgICAgIGlmIChlcnJvckNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgIGVyci5tZXNzYWdlID0gbXNnO1xuICAgICAgICAgICAgICBlcnJvckNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKG1zZyArICdcXG4gVGhlIGVycm9yIHN0YWNrIHRyYWNlIGluY2x1ZGVzOiBcXG4nICsgZXJyLnN0YWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICB9OyBcblxuXG4gICAgICByZXF1ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBlcnIgPSBuZXcgZXJyb3JIYW5kbGVyKCdsb2FkQ29udm9sdmVyJywgZXJyb3JUcmFjZSwgc2VsZi51cmwpO1xuICAgICAgICB2YXIgbXNnID0gJ1RoZXJlIHdhcyBubyByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIgYXQgJyArIHNlbGYudXJsICsgJy4gQ2hlY2sgdGhlIHVybCBhbmQgaW50ZXJuZXQgY29ubmVjdGl2aXR5Lic7XG5cbiAgICAgICAgaWYgKGVycm9yQ2FsbGJhY2spIHtcbiAgICAgICAgICBlcnIubWVzc2FnZSA9IG1zZztcbiAgICAgICAgICBlcnJvckNhbGxiYWNrKGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihtc2cgKyAnXFxuIFRoZSBlcnJvciBzdGFjayB0cmFjZSBpbmNsdWRlczogXFxuJyArIGVyci5zdGFjayk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJlcXVlc3Quc2VuZCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgQ29ubmVjdCBhIHNvdXJjZSB0byB0aGUgY29udm9sdmVyLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHByb2Nlc3NcbiAgICAgKiAgQGZvciBwNS5Db252b2x2ZXJcbiAgICAgKiAgQHBhcmFtICB7T2JqZWN0fSBzcmMgICAgIHA1LnNvdW5kIC8gV2ViIEF1ZGlvIG9iamVjdCB3aXRoIGEgc291bmRcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5cbiAgICAgKiAgQGV4YW1wbGVcbiAgICAgKiAgPGRpdj48Y29kZT5cbiAgICAgKiAgbGV0IGNWZXJiLCBzb3VuZDtcbiAgICAgKiAgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAgICAgKiAgICAvLyBXZSBoYXZlIGJvdGggTVAzIGFuZCBPR0cgdmVyc2lvbnMgb2YgYWxsIHNvdW5kIGFzc2V0c1xuICAgICAqICAgIHNvdW5kRm9ybWF0cygnb2dnJywgJ21wMycpO1xuICAgICAqXG4gICAgICogICAgLy8gVHJ5IHJlcGxhY2luZyAnYngtc3ByaW5nJyB3aXRoIG90aGVyIHNvdW5kZmlsZXMgbGlrZVxuICAgICAqICAgIC8vICdjb25jcmV0ZS10dW5uZWwnICdzbWFsbC1wbGF0ZScgJ2RydW0nICdiZWF0Ym94J1xuICAgICAqICAgIGNWZXJiID0gY3JlYXRlQ29udm9sdmVyKCdhc3NldHMvYngtc3ByaW5nLm1wMycpO1xuICAgICAqXG4gICAgICogICAgLy8gVHJ5IHJlcGxhY2luZyAnRGFtc2NyYXlfRGFuY2luZ1RpZ2VyJyB3aXRoXG4gICAgICogICAgLy8gJ2JlYXQnLCAnZG9vcmJlbGwnLCBsdWNreV9kcmFnb25zXy1fcG93ZXJfbWVsb2R5J1xuICAgICAqICAgIHNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvRGFtc2NyYXlfRGFuY2luZ1RpZ2VyLm1wMycpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gICAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZChwbGF5U291bmQpO1xuICAgICAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAgICAgKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDIwLCAyMCk7XG4gICAgICpcbiAgICAgKiAgICAvLyBkaXNjb25uZWN0IGZyb20gbWFpbiBvdXRwdXQuLi5cbiAgICAgKiAgICBzb3VuZC5kaXNjb25uZWN0KCk7XG4gICAgICpcbiAgICAgKiAgICAvLyAuLi5hbmQgcHJvY2VzcyB3aXRoIGNWZXJiXG4gICAgICogICAgLy8gc28gdGhhdCB3ZSBvbmx5IGhlYXIgdGhlIGNvbnZvbHV0aW9uXG4gICAgICogICAgY1ZlcmIucHJvY2Vzcyhzb3VuZCk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBwbGF5U291bmQoKSB7XG4gICAgICogICAgc291bmQucGxheSgpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicHJvY2Vzc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcm9jZXNzKHNyYykge1xuICAgICAgc3JjLmNvbm5lY3QodGhpcy5pbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBMb2FkIGFuZCBhc3NpZ24gYSBuZXcgSW1wdWxzZSBSZXNwb25zZSB0byB0aGUgcDUuQ29udm9sdmVyLlxuICAgICAqICBUaGUgaW1wdWxzZSBpcyBhZGRlZCB0byB0aGUgPGNvZGU+LmltcHVsc2VzPC9jb2RlPiBhcnJheS4gUHJldmlvdXNcbiAgICAgKiAgaW1wdWxzZXMgY2FuIGJlIGFjY2Vzc2VkIHdpdGggdGhlIDxjb2RlPi50b2dnbGVJbXB1bHNlKGlkKTwvY29kZT5cbiAgICAgKiAgbWV0aG9kLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGFkZEltcHVsc2VcbiAgICAgKiAgQGZvciBwNS5Db252b2x2ZXJcbiAgICAgKiAgQHBhcmFtICB7U3RyaW5nfSAgIHBhdGggICAgIHBhdGggdG8gYSBzb3VuZCBmaWxlXG4gICAgICogIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjayBmdW5jdGlvbiAob3B0aW9uYWwpXG4gICAgICogIEBwYXJhbSAge0Z1bmN0aW9ufSBlcnJvckNhbGxiYWNrIGZ1bmN0aW9uIChvcHRpb25hbClcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImFkZEltcHVsc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkSW1wdWxzZShwYXRoLCBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4uaW5kZXhPZignZmlsZTovLycpID4gLTEgJiYgd2luZG93LmNvcmRvdmEgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGFsZXJ0KCdUaGlzIHNrZXRjaCBtYXkgcmVxdWlyZSBhIHNlcnZlciB0byBsb2FkIGV4dGVybmFsIGZpbGVzLiBQbGVhc2Ugc2VlIGh0dHA6Ly9iaXQubHkvMXFjSW53UycpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9sb2FkQnVmZmVyKHBhdGgsIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNpbWlsYXIgdG8gLmFkZEltcHVsc2UsIGV4Y2VwdCB0aGF0IHRoZSA8Y29kZT4uaW1wdWxzZXM8L2NvZGU+XG4gICAgICogIEFycmF5IGlzIHJlc2V0IHRvIHNhdmUgbWVtb3J5LiBBIG5ldyA8Y29kZT4uaW1wdWxzZXM8L2NvZGU+XG4gICAgICogIGFycmF5IGlzIGNyZWF0ZWQgd2l0aCB0aGlzIGltcHVsc2UgYXMgdGhlIG9ubHkgaXRlbS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICByZXNldEltcHVsc2VcbiAgICAgKiAgQGZvciBwNS5Db252b2x2ZXJcbiAgICAgKiAgQHBhcmFtICB7U3RyaW5nfSAgIHBhdGggICAgIHBhdGggdG8gYSBzb3VuZCBmaWxlXG4gICAgICogIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjayBmdW5jdGlvbiAob3B0aW9uYWwpXG4gICAgICogIEBwYXJhbSAge0Z1bmN0aW9ufSBlcnJvckNhbGxiYWNrIGZ1bmN0aW9uIChvcHRpb25hbClcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJlc2V0SW1wdWxzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldEltcHVsc2UocGF0aCwgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2spIHtcbiAgICAgIGlmICh3aW5kb3cubG9jYXRpb24ub3JpZ2luLmluZGV4T2YoJ2ZpbGU6Ly8nKSA+IC0xICYmIHdpbmRvdy5jb3Jkb3ZhID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBhbGVydCgnVGhpcyBza2V0Y2ggbWF5IHJlcXVpcmUgYSBzZXJ2ZXIgdG8gbG9hZCBleHRlcm5hbCBmaWxlcy4gUGxlYXNlIHNlZSBodHRwOi8vYml0Lmx5LzFxY0lud1MnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pbXB1bHNlcyA9IFtdO1xuXG4gICAgICB0aGlzLl9sb2FkQnVmZmVyKHBhdGgsIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIElmIHlvdSBoYXZlIHVzZWQgPGNvZGU+LmFkZEltcHVsc2UoKTwvY29kZT4gdG8gYWRkIG11bHRpcGxlIGltcHVsc2VzXG4gICAgICogIHRvIGEgcDUuQ29udm9sdmVyLCB0aGVuIHlvdSBjYW4gdXNlIHRoaXMgbWV0aG9kIHRvIHRvZ2dsZSBiZXR3ZWVuXG4gICAgICogIHRoZSBpdGVtcyBpbiB0aGUgPGNvZGU+LmltcHVsc2VzPC9jb2RlPiBBcnJheS4gQWNjZXB0cyBhIHBhcmFtZXRlclxuICAgICAqICB0byBpZGVudGlmeSB3aGljaCBpbXB1bHNlIHlvdSB3aXNoIHRvIHVzZSwgaWRlbnRpZmllZCBlaXRoZXIgYnkgaXRzXG4gICAgICogIG9yaWdpbmFsIGZpbGVuYW1lIChTdHJpbmcpIG9yIGJ5IGl0cyBwb3NpdGlvbiBpbiB0aGUgPGNvZGU+LmltcHVsc2VzXG4gICAgICogIDwvY29kZT4gQXJyYXkgKE51bWJlcikuPGJyLz5cbiAgICAgKiAgWW91IGNhbiBhY2Nlc3MgdGhlIG9iamVjdHMgaW4gdGhlIC5pbXB1bHNlcyBBcnJheSBkaXJlY3RseS4gRWFjaFxuICAgICAqICBPYmplY3QgaGFzIHR3byBhdHRyaWJ1dGVzOiBhbiA8Y29kZT4uYXVkaW9CdWZmZXI8L2NvZGU+ICh0eXBlOlxuICAgICAqICBXZWIgQXVkaW8gPGEgaHJlZj1cIlxuICAgICAqICBodHRwOi8vd2ViYXVkaW8uZ2l0aHViLmlvL3dlYi1hdWRpby1hcGkvI3RoZS1hdWRpb2J1ZmZlci1pbnRlcmZhY2VcIj5cbiAgICAgKiAgQXVkaW9CdWZmZXIpPC9hPiBhbmQgYSA8Y29kZT4ubmFtZTwvY29kZT4sIGEgU3RyaW5nIHRoYXQgY29ycmVzcG9uZHNcbiAgICAgKiAgd2l0aCB0aGUgb3JpZ2luYWwgZmlsZW5hbWUuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCB0b2dnbGVJbXB1bHNlXG4gICAgICogIEBmb3IgcDUuQ29udm9sdmVyXG4gICAgICogIEBwYXJhbSB7U3RyaW5nfE51bWJlcn0gaWQgSWRlbnRpZnkgdGhlIGltcHVsc2UgYnkgaXRzIG9yaWdpbmFsIGZpbGVuYW1lXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgKFN0cmluZyksIG9yIGJ5IGl0cyBwb3NpdGlvbiBpbiB0aGVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29kZT4uaW1wdWxzZXM8L2NvZGU+IEFycmF5IChOdW1iZXIpLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwidG9nZ2xlSW1wdWxzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2dnbGVJbXB1bHNlKGlkKSB7XG4gICAgICBpZiAodHlwZW9mIGlkID09PSAnbnVtYmVyJyAmJiBpZCA8IHRoaXMuaW1wdWxzZXMubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMuX3NldEJ1ZmZlcih0aGlzLmltcHVsc2VzW2lkXS5hdWRpb0J1ZmZlcik7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5pbXB1bHNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLmltcHVsc2VzW2ldLm5hbWUgPT09IGlkKSB7XG4gICAgICAgICAgICB0aGlzLl9zZXRCdWZmZXIodGhpcy5pbXB1bHNlc1tpXS5hdWRpb0J1ZmZlcik7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXNwb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICByZXZlcmJfZ2V0KHJldmVyYl9nZXRQcm90b3R5cGVPZihDb252b2x2ZXIucHJvdG90eXBlKSwgXCJkaXNwb3NlXCIsIHRoaXMpLmNhbGwodGhpcyk7IFxuXG5cbiAgICAgIGZvciAodmFyIGkgaW4gdGhpcy5pbXB1bHNlcykge1xuICAgICAgICBpZiAodGhpcy5pbXB1bHNlc1tpXSkge1xuICAgICAgICAgIHRoaXMuaW1wdWxzZXNbaV0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENvbnZvbHZlcjtcbn0oUmV2ZXJiKTtcbi8qKlxuICogIENyZWF0ZSBhIHA1LkNvbnZvbHZlci4gQWNjZXB0cyBhIHBhdGggdG8gYSBzb3VuZGZpbGVcbiAqICB0aGF0IHdpbGwgYmUgdXNlZCB0byBnZW5lcmF0ZSBhbiBpbXB1bHNlIHJlc3BvbnNlLlxuICpcbiAqICBAbWV0aG9kICBjcmVhdGVDb252b2x2ZXJcbiAqICBAZm9yIHA1XG4gKiAgQHBhcmFtICB7U3RyaW5nfSAgIHBhdGggICAgIHBhdGggdG8gYSBzb3VuZCBmaWxlXG4gKiAgQHBhcmFtICB7RnVuY3Rpb259IFtjYWxsYmFja10gZnVuY3Rpb24gdG8gY2FsbCBpZiBsb2FkaW5nIGlzIHN1Y2Nlc3NmdWwuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIG9iamVjdCB3aWxsIGJlIHBhc3NlZCBpbiBhcyB0aGUgYXJndW1lbnRcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uXG4gKiAgQHBhcmFtICB7RnVuY3Rpb259IFtlcnJvckNhbGxiYWNrXSBmdW5jdGlvbiB0byBjYWxsIGlmIGxvYWRpbmcgaXMgbm90IHN1Y2Nlc3NmdWwuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQSBjdXN0b20gZXJyb3Igd2lsbCBiZSBwYXNzZWQgaW4gYXMgdGhlIGFyZ3VtZW50XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICogIEByZXR1cm4ge3A1LkNvbnZvbHZlcn1cbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IGNWZXJiLCBzb3VuZDtcbiAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICogICAgLy8gV2UgaGF2ZSBib3RoIE1QMyBhbmQgT0dHIHZlcnNpb25zIG9mIGFsbCBzb3VuZCBhc3NldHNcbiAqICAgIHNvdW5kRm9ybWF0cygnb2dnJywgJ21wMycpO1xuICpcbiAqICAgIC8vIFRyeSByZXBsYWNpbmcgJ2J4LXNwcmluZycgd2l0aCBvdGhlciBzb3VuZGZpbGVzIGxpa2VcbiAqICAgIC8vICdjb25jcmV0ZS10dW5uZWwnICdzbWFsbC1wbGF0ZScgJ2RydW0nICdiZWF0Ym94J1xuICogICAgY1ZlcmIgPSBjcmVhdGVDb252b2x2ZXIoJ2Fzc2V0cy9ieC1zcHJpbmcubXAzJyk7XG4gKlxuICogICAgLy8gVHJ5IHJlcGxhY2luZyAnRGFtc2NyYXlfRGFuY2luZ1RpZ2VyJyB3aXRoXG4gKiAgICAvLyAnYmVhdCcsICdkb29yYmVsbCcsIGx1Y2t5X2RyYWdvbnNfLV9wb3dlcl9tZWxvZHknXG4gKiAgICBzb3VuZCA9IGxvYWRTb3VuZCgnYXNzZXRzL0RhbXNjcmF5X0RhbmNpbmdUaWdlci5tcDMnKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlTb3VuZCk7XG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIDIwLCAyMCk7XG4gKlxuICogICAgLy8gZGlzY29ubmVjdCBmcm9tIG1haW4gb3V0cHV0Li4uXG4gKiAgICBzb3VuZC5kaXNjb25uZWN0KCk7XG4gKlxuICogICAgLy8gLi4uYW5kIHByb2Nlc3Mgd2l0aCBjVmVyYlxuICogICAgLy8gc28gdGhhdCB3ZSBvbmx5IGhlYXIgdGhlIGNvbnZvbHV0aW9uXG4gKiAgICBjVmVyYi5wcm9jZXNzKHNvdW5kKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHBsYXlTb3VuZCgpIHtcbiAqICAgIHNvdW5kLnBsYXkoKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQ29udm9sdmVyKHBhdGgsIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gIGlmICh3aW5kb3cubG9jYXRpb24ub3JpZ2luLmluZGV4T2YoJ2ZpbGU6Ly8nKSA+IC0xICYmIHdpbmRvdy5jb3Jkb3ZhID09PSAndW5kZWZpbmVkJykge1xuICAgIGFsZXJ0KCdUaGlzIHNrZXRjaCBtYXkgcmVxdWlyZSBhIHNlcnZlciB0byBsb2FkIGV4dGVybmFsIGZpbGVzLiBQbGVhc2Ugc2VlIGh0dHA6Ly9iaXQubHkvMXFjSW53UycpO1xuICB9XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgY1JldmVyYiA9IG5ldyByZXZlcmJfQ29udm9sdmVyKHBhdGgsIGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayhidWZmZXIpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygc2VsZi5fZGVjcmVtZW50UHJlbG9hZCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgc2VsZi5fZGVjcmVtZW50UHJlbG9hZCgpO1xuICAgIH1cbiAgfSwgZXJyb3JDYWxsYmFjayk7XG4gIGNSZXZlcmIuaW1wdWxzZXMgPSBbXTtcbiAgcmV0dXJuIGNSZXZlcmI7XG59XG5cblxudmFyIENsb2NrID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG52YXIgQ2xvY2tfZGVmYXVsdCA9IF9fd2VicGFja19yZXF1aXJlX18ubihDbG9jayk7XG5cbmZ1bmN0aW9uIG1ldHJvX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gbWV0cm9fZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIG1ldHJvX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgbWV0cm9fZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIG1ldHJvX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cblxuXG5cbnZhciBtZXRyb19NZXRybyA9XG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE1ldHJvKCkge1xuICAgIG1ldHJvX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1ldHJvKTtcblxuICAgIHRoaXMuY2xvY2sgPSBuZXcgQ2xvY2tfZGVmYXVsdC5hKHtcbiAgICAgIGNhbGxiYWNrOiB0aGlzLm9udGljay5iaW5kKHRoaXMpXG4gICAgfSk7XG4gICAgdGhpcy5zeW5jZWRQYXJ0cyA9IFtdO1xuICAgIHRoaXMuYnBtID0gMTIwOyBcblxuICAgIHRoaXMuX2luaXQoKTtcblxuICAgIHRoaXMucHJldlRpY2sgPSAwO1xuICAgIHRoaXMudGF0dW1UaW1lID0gMDtcblxuICAgIHRoaXMudGlja0NhbGxiYWNrID0gZnVuY3Rpb24gKCkge307XG4gIH1cblxuICBtZXRyb19jcmVhdGVDbGFzcyhNZXRybywgW3tcbiAgICBrZXk6IFwib250aWNrXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9udGljayh0aWNrVGltZSkge1xuICAgICAgdmFyIGVsYXBzZWRUaW1lID0gdGlja1RpbWUgLSB0aGlzLnByZXZUaWNrO1xuICAgICAgdmFyIHNlY29uZHNGcm9tTm93ID0gdGlja1RpbWUgLSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcblxuICAgICAgaWYgKGVsYXBzZWRUaW1lIC0gdGhpcy50YXR1bVRpbWUgPD0gLTAuMDIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5wcmV2VGljayA9IHRpY2tUaW1lOyBcblxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHRoaXMuc3luY2VkUGFydHMuZm9yRWFjaChmdW5jdGlvbiAodGhpc1BhcnQpIHtcbiAgICAgICAgICBpZiAoIXRoaXNQYXJ0LmlzUGxheWluZykgcmV0dXJuO1xuICAgICAgICAgIHRoaXNQYXJ0LmluY3JlbWVudFN0ZXAoc2Vjb25kc0Zyb21Ob3cpOyBcblxuICAgICAgICAgIHRoaXNQYXJ0LnBocmFzZXMuZm9yRWFjaChmdW5jdGlvbiAodGhpc1BocmFzZSkge1xuICAgICAgICAgICAgdmFyIHBocmFzZUFycmF5ID0gdGhpc1BocmFzZS5zZXF1ZW5jZTtcbiAgICAgICAgICAgIHZhciBiTnVtID0gc2VsZi5tZXRyb1RpY2tzICUgcGhyYXNlQXJyYXkubGVuZ3RoO1xuXG4gICAgICAgICAgICBpZiAocGhyYXNlQXJyYXlbYk51bV0gIT09IDAgJiYgKHNlbGYubWV0cm9UaWNrcyA8IHBocmFzZUFycmF5Lmxlbmd0aCB8fCAhdGhpc1BocmFzZS5sb29waW5nKSkge1xuICAgICAgICAgICAgICB0aGlzUGhyYXNlLmNhbGxiYWNrKHNlY29uZHNGcm9tTm93LCBwaHJhc2VBcnJheVtiTnVtXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1ldHJvVGlja3MgKz0gMTtcbiAgICAgICAgdGhpcy50aWNrQ2FsbGJhY2soc2Vjb25kc0Zyb21Ob3cpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXRCUE1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0QlBNKGJwbSkge1xuICAgICAgdmFyIHJhbXBUaW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICAgICAgdmFyIGJlYXRUaW1lID0gNjAgLyAoYnBtICogdGhpcy50YXR1bXMpO1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgdGhpcy50YXR1bVRpbWUgPSBiZWF0VGltZTtcbiAgICAgIHRoaXMuY2xvY2suZnJlcXVlbmN5LnNldFZhbHVlQXRUaW1lKHRoaXMuY2xvY2suZnJlcXVlbmN5LnZhbHVlLCBub3cpO1xuICAgICAgdGhpcy5jbG9jay5mcmVxdWVuY3kubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoYnBtLCBub3cgKyByYW1wVGltZSk7XG4gICAgICB0aGlzLmJwbSA9IGJwbTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0QlBNXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEJQTSgpIHtcbiAgICAgIHJldHVybiB0aGlzLmNsb2NrLmdldFJhdGUoKSAvIHRoaXMudGF0dW1zICogNjA7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9pbml0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9pbml0KCkge1xuICAgICAgdGhpcy5tZXRyb1RpY2tzID0gMDsgXG4gICAgfSBcblxuICB9LCB7XG4gICAga2V5OiBcInJlc2V0U3luY1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldFN5bmMocGFydCkge1xuICAgICAgdGhpcy5zeW5jZWRQYXJ0cyA9IFtwYXJ0XTtcbiAgICB9IFxuXG4gIH0sIHtcbiAgICBrZXk6IFwicHVzaFN5bmNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHVzaFN5bmMocGFydCkge1xuICAgICAgdGhpcy5zeW5jZWRQYXJ0cy5wdXNoKHBhcnQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzdGFydFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydCh0aW1lRnJvbU5vdykge1xuICAgICAgdmFyIHQgPSB0aW1lRnJvbU5vdyB8fCAwO1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgdGhpcy5jbG9jay5zdGFydChub3cgKyB0KTtcbiAgICAgIHRoaXMuc2V0QlBNKHRoaXMuYnBtKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKHRpbWVGcm9tTm93KSB7XG4gICAgICB2YXIgdCA9IHRpbWVGcm9tTm93IHx8IDA7XG4gICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICB0aGlzLmNsb2NrLnN0b3Aobm93ICsgdCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImJlYXRMZW5ndGhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYmVhdExlbmd0aCh0YXR1bXMpIHtcbiAgICAgIHRoaXMudGF0dW1zID0gMSAvIHRhdHVtcyAvIDQ7IFxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNZXRybztcbn0oKTtcblxuIHZhciBtZXRybyA9IChtZXRyb19NZXRybyk7XG5mdW5jdGlvbiBsb29wZXJfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIGxvb3Blcl9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGxvb3Blcl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgbG9vcGVyX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIGxvb3Blcl9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cblxuXG52YXIgQlBNID0gMTIwO1xuLyoqXG4gKiAgU2V0IHRoZSBnbG9iYWwgdGVtcG8sIGluIGJlYXRzIHBlciBtaW51dGUsIGZvciBhbGxcbiAqICBwNS5QYXJ0cy4gVGhpcyBtZXRob2Qgd2lsbCBpbXBhY3QgYWxsIGFjdGl2ZSBwNS5QYXJ0cy5cbiAqXG4gKiAgQG1ldGhvZCBzZXRCUE1cbiAqICBAZm9yIHA1XG4gKiAgQHBhcmFtIHtOdW1iZXJ9IEJQTSAgICAgIEJlYXRzIFBlciBNaW51dGVcbiAqICBAcGFyYW0ge051bWJlcn0gcmFtcFRpbWUgU2Vjb25kcyBmcm9tIG5vd1xuICovXG5cbnA1LnByb3RvdHlwZS5zZXRCUE0gPSBmdW5jdGlvbiAoYnBtLCByYW1wVGltZSkge1xuICBCUE0gPSBicG07XG5cbiAgZm9yICh2YXIgaSBpbiBtYWluLnBhcnRzKSB7XG4gICAgaWYgKG1haW4ucGFydHNbaV0pIHtcbiAgICAgIG1haW4ucGFydHNbaV0uc2V0QlBNKGJwbSwgcmFtcFRpbWUpO1xuICAgIH1cbiAgfVxufTtcbi8qKlxuICogIDxwPkEgcGhyYXNlIGlzIGEgcGF0dGVybiBvZiBtdXNpY2FsIGV2ZW50cyBvdmVyIHRpbWUsIGkuZS5cbiAqICBhIHNlcmllcyBvZiBub3RlcyBhbmQgcmVzdHMuPC9wPlxuICpcbiAqICA8cD5QaHJhc2VzIG11c3QgYmUgYWRkZWQgdG8gYSBwNS5QYXJ0IGZvciBwbGF5YmFjaywgYW5kXG4gKiAgZWFjaCBwYXJ0IGNhbiBwbGF5IG11bHRpcGxlIHBocmFzZXMgYXQgdGhlIHNhbWUgdGltZS5cbiAqICBGb3IgZXhhbXBsZSwgb25lIFBocmFzZSBtaWdodCBiZSBhIGtpY2sgZHJ1bSwgYW5vdGhlclxuICogIGNvdWxkIGJlIGEgc25hcmUsIGFuZCBhbm90aGVyIGNvdWxkIGJlIHRoZSBiYXNzbGluZS48L3A+XG4gKlxuICogIDxwPlRoZSBmaXJzdCBwYXJhbWV0ZXIgaXMgYSBuYW1lIHNvIHRoYXQgdGhlIHBocmFzZSBjYW4gYmVcbiAqICBtb2RpZmllZCBvciBkZWxldGVkIGxhdGVyLiBUaGUgY2FsbGJhY2sgaXMgYSBhIGZ1bmN0aW9uIHRoYXRcbiAqICB0aGlzIHBocmFzZSB3aWxsIGNhbGwgYXQgZXZlcnkgc3RlcOKAlGZvciBleGFtcGxlIGl0IG1pZ2h0IGJlXG4gKiAgY2FsbGVkIDxjb2RlPnBsYXlOb3RlKHZhbHVlKXt9PC9jb2RlPi4gVGhlIGFycmF5IGRldGVybWluZXNcbiAqICB3aGljaCB2YWx1ZSBpcyBwYXNzZWQgaW50byB0aGUgY2FsbGJhY2sgYXQgZWFjaCBzdGVwIG9mIHRoZVxuICogIHBocmFzZS4gSXQgY2FuIGJlIG51bWJlcnMsIGFuIG9iamVjdCB3aXRoIG11bHRpcGxlIG51bWJlcnMsXG4gKiAgb3IgYSB6ZXJvICgwKSBpbmRpY2F0ZXMgYSByZXN0IHNvIHRoZSBjYWxsYmFjayB3b24ndCBiZSBjYWxsZWQpLjwvcD5cbiAqXG4gKiAgQGNsYXNzIHA1LlBocmFzZVxuICogIEBjb25zdHJ1Y3RvclxuICogIEBwYXJhbSB7U3RyaW5nfSAgIG5hbWUgICAgIE5hbWUgc28gdGhhdCB5b3UgY2FuIGFjY2VzcyB0aGUgUGhyYXNlLlxuICogIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBuYW1lIG9mIGEgZnVuY3Rpb24gdGhhdCB0aGlzIHBocmFzZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgY2FsbC4gVHlwaWNhbGx5IGl0IHdpbGwgcGxheSBhIHNvdW5kLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBhY2NlcHQgdHdvIHBhcmFtZXRlcnM6IGEgdGltZSBhdCB3aGljaFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHBsYXkgdGhlIHNvdW5kIChpbiBzZWNvbmRzIGZyb20gbm93KSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgYSB2YWx1ZSBmcm9tIHRoZSBzZXF1ZW5jZSBhcnJheS4gVGhlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZSBzaG91bGQgYmUgcGFzc2VkIGludG8gdGhlIHBsYXkoKSBvclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0KCkgbWV0aG9kIHRvIGVuc3VyZSBwcmVjaXNpb24uXG4gKiAgQHBhcmFtIHtBcnJheX0gICBzZXF1ZW5jZSAgICBBcnJheSBvZiB2YWx1ZXMgdG8gcGFzcyBpbnRvIHRoZSBjYWxsYmFja1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXQgZWFjaCBzdGVwIG9mIHRoZSBwaHJhc2UuXG4gKiAgQGV4YW1wbGVcbiAqICA8ZGl2Pjxjb2RlPlxuICogIGxldCBteVNvdW5kLCBteVBocmFzZSwgbXlQYXJ0O1xuICogIGxldCBwYXR0ZXJuID0gWzEsMCwwLDIsMCwyLDAsMF07XG4gKlxuICogIGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gKiAgICBteVNvdW5kID0gbG9hZFNvdW5kKCdhc3NldHMvYmVhdGJveC5tcDMnKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlNeVBhcnQpO1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dCgndGFwIHRvIHBsYXknLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKiAgICB0ZXh0QWxpZ24oQ0VOVEVSLCBDRU5URVIpO1xuICpcbiAqICAgIG15UGhyYXNlID0gbmV3IHA1LlBocmFzZSgnYmJveCcsIG9uRWFjaFN0ZXAsIHBhdHRlcm4pO1xuICogICAgbXlQYXJ0ID0gbmV3IHA1LlBhcnQoKTtcbiAqICAgIG15UGFydC5hZGRQaHJhc2UobXlQaHJhc2UpO1xuICogICAgbXlQYXJ0LnNldEJQTSg2MCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBvbkVhY2hTdGVwKHRpbWUsIHBsYXliYWNrUmF0ZSkge1xuICogICAgbXlTb3VuZC5yYXRlKHBsYXliYWNrUmF0ZSk7XG4gKiAgICBteVNvdW5kLnBsYXkodGltZSk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBwbGF5TXlQYXJ0KCkge1xuICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAqICAgIG15UGFydC5zdGFydCgpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cblxuXG52YXIgUGhyYXNlID0gZnVuY3Rpb24gUGhyYXNlKG5hbWUsIGNhbGxiYWNrLCBzZXF1ZW5jZSkge1xuICBsb29wZXJfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGhyYXNlKTtcblxuICB0aGlzLnBocmFzZVN0ZXAgPSAwO1xuICB0aGlzLm5hbWUgPSBuYW1lO1xuICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gIC8qKlxuICAgKiBBcnJheSBvZiB2YWx1ZXMgdG8gcGFzcyBpbnRvIHRoZSBjYWxsYmFja1xuICAgKiBhdCBlYWNoIHN0ZXAgb2YgdGhlIHBocmFzZS4gRGVwZW5kaW5nIG9uIHRoZSBjYWxsYmFja1xuICAgKiBmdW5jdGlvbidzIHJlcXVpcmVtZW50cywgdGhlc2UgdmFsdWVzIG1heSBiZSBudW1iZXJzLFxuICAgKiBzdHJpbmdzLCBvciBhbiBvYmplY3Qgd2l0aCBtdWx0aXBsZSBwYXJhbWV0ZXJzLlxuICAgKiBaZXJvICgwKSBpbmRpY2F0ZXMgYSByZXN0LlxuICAgKlxuICAgKiBAcHJvcGVydHkge0FycmF5fSBzZXF1ZW5jZVxuICAgKi9cblxuICB0aGlzLnNlcXVlbmNlID0gc2VxdWVuY2U7XG59O1xuLyoqXG4gKiAgPHA+QSBwNS5QYXJ0IHBsYXlzIGJhY2sgb25lIG9yIG1vcmUgcDUuUGhyYXNlcy4gSW5zdGFudGlhdGUgYSBwYXJ0XG4gKiAgd2l0aCBzdGVwcyBhbmQgdGF0dW1zLiBCeSBkZWZhdWx0LCBlYWNoIHN0ZXAgcmVwcmVzZW50cyBhIDEvMTZ0aCBub3RlLjwvcD5cbiAqXG4gKiAgPHA+U2VlIHA1LlBocmFzZSBmb3IgbW9yZSBhYm91dCBtdXNpY2FsIHRpbWluZy48L3A+XG4gKlxuICogIEBjbGFzcyBwNS5QYXJ0XG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFtzdGVwc10gICBTdGVwcyBpbiB0aGUgcGFydFxuICogIEBwYXJhbSB7TnVtYmVyfSBbdGF0dW1zXSBEaXZpc2lvbnMgb2YgYSBiZWF0LCBlLmcuIHVzZSAxLzQsIG9yIDAuMjUgZm9yIGEgcXVhdGVyIG5vdGUgKGRlZmF1bHQgaXMgMS8xNiwgYSBzaXh0ZWVudGggbm90ZSlcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IGJveCwgZHJ1bSwgbXlQYXJ0O1xuICogIGxldCBib3hQYXQgPSBbMSwwLDAsMiwwLDIsMCwwXTtcbiAqICBsZXQgZHJ1bVBhdCA9IFswLDEsMSwwLDIsMCwxLDBdO1xuICpcbiAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICogICAgYm94ID0gbG9hZFNvdW5kKCdhc3NldHMvYmVhdGJveC5tcDMnKTtcbiAqICAgIGRydW0gPSBsb2FkU291bmQoJ2Fzc2V0cy9kcnVtLm1wMycpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheU15UGFydCk7XG4gKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gKiAgICB0ZXh0QWxpZ24oQ0VOVEVSLCBDRU5URVIpO1xuICogICAgdGV4dCgndGFwIHRvIHBsYXknLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKlxuICogICAgbGV0IGJveFBocmFzZSA9IG5ldyBwNS5QaHJhc2UoJ2JveCcsIHBsYXlCb3gsIGJveFBhdCk7XG4gKiAgICBsZXQgZHJ1bVBocmFzZSA9IG5ldyBwNS5QaHJhc2UoJ2RydW0nLCBwbGF5RHJ1bSwgZHJ1bVBhdCk7XG4gKiAgICBteVBhcnQgPSBuZXcgcDUuUGFydCgpO1xuICogICAgbXlQYXJ0LmFkZFBocmFzZShib3hQaHJhc2UpO1xuICogICAgbXlQYXJ0LmFkZFBocmFzZShkcnVtUGhyYXNlKTtcbiAqICAgIG15UGFydC5zZXRCUE0oNjApO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gcGxheUJveCh0aW1lLCBwbGF5YmFja1JhdGUpIHtcbiAqICAgIGJveC5yYXRlKHBsYXliYWNrUmF0ZSk7XG4gKiAgICBib3gucGxheSh0aW1lKTtcbiAqICB9XG4gKlxuICogIGZ1bmN0aW9uIHBsYXlEcnVtKHRpbWUsIHBsYXliYWNrUmF0ZSkge1xuICogICAgZHJ1bS5yYXRlKHBsYXliYWNrUmF0ZSk7XG4gKiAgICBkcnVtLnBsYXkodGltZSk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBwbGF5TXlQYXJ0KCkge1xuICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAqXG4gKiAgICBteVBhcnQuc3RhcnQoKTtcbiAqICB9XG4gKiAgPC9jb2RlPjwvZGl2PlxuICovXG5cblxudmFyIGxvb3Blcl9QYXJ0ID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUGFydChzdGVwcywgYkxlbmd0aCkge1xuICAgIGxvb3Blcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBQYXJ0KTtcblxuICAgIHRoaXMubGVuZ3RoID0gc3RlcHMgfHwgMDsgXG5cbiAgICB0aGlzLnBhcnRTdGVwID0gMDtcbiAgICB0aGlzLnBocmFzZXMgPSBbXTtcbiAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlO1xuICAgIHRoaXMubm9Mb29wKCk7XG4gICAgdGhpcy50YXR1bXMgPSBiTGVuZ3RoIHx8IDAuMDYyNTsgXG5cbiAgICB0aGlzLm1ldHJvID0gbmV3IG1ldHJvKCk7XG5cbiAgICB0aGlzLm1ldHJvLl9pbml0KCk7XG5cbiAgICB0aGlzLm1ldHJvLmJlYXRMZW5ndGgodGhpcy50YXR1bXMpO1xuICAgIHRoaXMubWV0cm8uc2V0QlBNKEJQTSk7XG4gICAgbWFpbi5wYXJ0cy5wdXNoKHRoaXMpO1xuXG4gICAgdGhpcy5jYWxsYmFjayA9IGZ1bmN0aW9uICgpIHt9O1xuICB9XG4gIC8qKlxuICAgKiAgU2V0IHRoZSB0ZW1wbyBvZiB0aGlzIHBhcnQsIGluIEJlYXRzIFBlciBNaW51dGUuXG4gICAqXG4gICAqICBAbWV0aG9kICBzZXRCUE1cbiAgICogIEBmb3IgcDUuUGFydFxuICAgKiAgQHBhcmFtIHtOdW1iZXJ9IEJQTSAgICAgIEJlYXRzIFBlciBNaW51dGVcbiAgICogIEBwYXJhbSB7TnVtYmVyfSBbcmFtcFRpbWVdIFNlY29uZHMgZnJvbSBub3dcbiAgICovXG5cblxuICBsb29wZXJfY3JlYXRlQ2xhc3MoUGFydCwgW3tcbiAgICBrZXk6IFwic2V0QlBNXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldEJQTSh0ZW1wbywgcmFtcFRpbWUpIHtcbiAgICAgIHRoaXMubWV0cm8uc2V0QlBNKHRlbXBvLCByYW1wVGltZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXR1cm5zIHRoZSB0ZW1wbywgaW4gQmVhdHMgUGVyIE1pbnV0ZSwgb2YgdGhpcyBwYXJ0LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgZ2V0QlBNXG4gICAgICogIEBmb3IgcDUuUGFydFxuICAgICAqICBAcmV0dXJuIHtOdW1iZXJ9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRCUE1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QlBNKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWV0cm8uZ2V0QlBNKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTdGFydCBwbGF5YmFjayBvZiB0aGlzIHBhcnQuIEl0IHdpbGwgcGxheVxuICAgICAqICB0aHJvdWdoIGFsbCBvZiBpdHMgcGhyYXNlcyBhdCBhIHNwZWVkXG4gICAgICogIGRldGVybWluZWQgYnkgc2V0QlBNLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHN0YXJ0XG4gICAgICogIEBmb3IgcDUuUGFydFxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFt0aW1lXSBzZWNvbmRzIGZyb20gbm93XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzdGFydFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydCh0aW1lKSB7XG4gICAgICBpZiAoIXRoaXMuaXNQbGF5aW5nKSB7XG4gICAgICAgIHRoaXMuaXNQbGF5aW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5tZXRyby5yZXNldFN5bmModGhpcyk7XG4gICAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuICAgICAgICB0aGlzLm1ldHJvLnN0YXJ0KHQpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgTG9vcCBwbGF5YmFjayBvZiB0aGlzIHBhcnQuIEl0IHdpbGwgYmVnaW5cbiAgICAgKiAgbG9vcGluZyB0aHJvdWdoIGFsbCBvZiBpdHMgcGhyYXNlcyBhdCBhIHNwZWVkXG4gICAgICogIGRldGVybWluZWQgYnkgc2V0QlBNLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGxvb3BcbiAgICAgKiAgQGZvciBwNS5QYXJ0XG4gICAgICogIEBwYXJhbSAge051bWJlcn0gW3RpbWVdIHNlY29uZHMgZnJvbSBub3dcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImxvb3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9vcCh0aW1lKSB7XG4gICAgICB0aGlzLmxvb3BpbmcgPSB0cnVlOyBcblxuICAgICAgdGhpcy5vbmVuZGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBhcnRTdGVwID0gMDtcbiAgICAgIH07XG5cbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuICAgICAgdGhpcy5zdGFydCh0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFRlbGwgdGhlIHBhcnQgdG8gc3RvcCBsb29waW5nLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIG5vTG9vcFxuICAgICAqICBAZm9yIHA1LlBhcnRcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIm5vTG9vcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBub0xvb3AoKSB7XG4gICAgICB0aGlzLmxvb3BpbmcgPSBmYWxzZTsgXG5cbiAgICAgIHRoaXMub25lbmRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU3RvcCB0aGUgcGFydCBhbmQgY3VlIGl0IHRvIHN0ZXAgMC4gUGxheWJhY2sgd2lsbCByZXN1bWUgZnJvbSB0aGUgYmVnaW5pbmcgb2YgdGhlIFBhcnQgd2hlbiBpdCBpcyBwbGF5ZWQgYWdhaW4uXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgc3RvcFxuICAgICAqICBAZm9yIHA1LlBhcnRcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbdGltZV0gc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKHRpbWUpIHtcbiAgICAgIHRoaXMucGFydFN0ZXAgPSAwO1xuICAgICAgdGhpcy5wYXVzZSh0aW1lKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFBhdXNlIHRoZSBwYXJ0LiBQbGF5YmFjayB3aWxsIHJlc3VtZVxuICAgICAqICBmcm9tIHRoZSBjdXJyZW50IHN0ZXAuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgcGF1c2VcbiAgICAgKiAgQGZvciBwNS5QYXJ0XG4gICAgICogIEBwYXJhbSAge051bWJlcn0gdGltZSBzZWNvbmRzIGZyb20gbm93XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJwYXVzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwYXVzZSh0aW1lKSB7XG4gICAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlO1xuICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG4gICAgICB0aGlzLm1ldHJvLnN0b3AodCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBBZGQgYSBwNS5QaHJhc2UgdG8gdGhpcyBQYXJ0LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGFkZFBocmFzZVxuICAgICAqICBAZm9yIHA1LlBhcnRcbiAgICAgKiAgQHBhcmFtIHtwNS5QaHJhc2V9ICAgcGhyYXNlICAgcmVmZXJlbmNlIHRvIGEgcDUuUGhyYXNlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJhZGRQaHJhc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUGhyYXNlKG5hbWUsIGNhbGxiYWNrLCBhcnJheSkge1xuICAgICAgdmFyIHA7XG5cbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAzKSB7XG4gICAgICAgIHAgPSBuZXcgUGhyYXNlKG5hbWUsIGNhbGxiYWNrLCBhcnJheSk7XG4gICAgICB9IGVsc2UgaWYgKGFyZ3VtZW50c1swXSBpbnN0YW5jZW9mIFBocmFzZSkge1xuICAgICAgICBwID0gYXJndW1lbnRzWzBdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5wdXQuIGFkZFBocmFzZSBhY2NlcHRzIG5hbWUsIGNhbGxiYWNrLCBhcnJheSBvciBhIHA1LlBocmFzZSc7XG4gICAgICB9XG5cbiAgICAgIHRoaXMucGhyYXNlcy5wdXNoKHApOyBcblxuICAgICAgaWYgKHAuc2VxdWVuY2UubGVuZ3RoID4gdGhpcy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5sZW5ndGggPSBwLnNlcXVlbmNlLmxlbmd0aDtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJlbW92ZSBhIHBocmFzZSBmcm9tIHRoaXMgcGFydCwgYmFzZWQgb24gdGhlIG5hbWUgaXQgd2FzXG4gICAgICogIGdpdmVuIHdoZW4gaXQgd2FzIGNyZWF0ZWQuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgcmVtb3ZlUGhyYXNlXG4gICAgICogIEBmb3IgcDUuUGFydFxuICAgICAqICBAcGFyYW0gIHtTdHJpbmd9IHBocmFzZU5hbWVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZVBocmFzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVQaHJhc2UobmFtZSkge1xuICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnBocmFzZXMpIHtcbiAgICAgICAgaWYgKHRoaXMucGhyYXNlc1tpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgICAgdGhpcy5waHJhc2VzLnNwbGljZShpLCAxKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgR2V0IGEgcGhyYXNlIGZyb20gdGhpcyBwYXJ0LCBiYXNlZCBvbiB0aGUgbmFtZSBpdCB3YXNcbiAgICAgKiAgZ2l2ZW4gd2hlbiBpdCB3YXMgY3JlYXRlZC4gTm93IHlvdSBjYW4gbW9kaWZ5IGl0cyBhcnJheS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBnZXRQaHJhc2VcbiAgICAgKiAgQGZvciBwNS5QYXJ0XG4gICAgICogIEBwYXJhbSAge1N0cmluZ30gcGhyYXNlTmFtZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UGhyYXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBocmFzZShuYW1lKSB7XG4gICAgICBmb3IgKHZhciBpIGluIHRoaXMucGhyYXNlcykge1xuICAgICAgICBpZiAodGhpcy5waHJhc2VzW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5waHJhc2VzW2ldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBGaW5kIGFsbCBzZXF1ZW5jZXMgd2l0aCB0aGUgc3BlY2lmaWVkIG5hbWUsIGFuZCByZXBsYWNlIHRoZWlyIHBhdHRlcm5zIHdpdGggdGhlIHNwZWNpZmllZCBhcnJheS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICByZXBsYWNlU2VxdWVuY2VcbiAgICAgKiAgQGZvciBwNS5QYXJ0XG4gICAgICogIEBwYXJhbSAge1N0cmluZ30gcGhyYXNlTmFtZVxuICAgICAqICBAcGFyYW0gIHtBcnJheX0gc2VxdWVuY2UgIEFycmF5IG9mIHZhbHVlcyB0byBwYXNzIGludG8gdGhlIGNhbGxiYWNrXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXQgZWFjaCBzdGVwIG9mIHRoZSBwaHJhc2UuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJyZXBsYWNlU2VxdWVuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVwbGFjZVNlcXVlbmNlKG5hbWUsIGFycmF5KSB7XG4gICAgICBmb3IgKHZhciBpIGluIHRoaXMucGhyYXNlcykge1xuICAgICAgICBpZiAodGhpcy5waHJhc2VzW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0aGlzLnBocmFzZXNbaV0uc2VxdWVuY2UgPSBhcnJheTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpbmNyZW1lbnRTdGVwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluY3JlbWVudFN0ZXAodGltZSkge1xuICAgICAgaWYgKHRoaXMucGFydFN0ZXAgPCB0aGlzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjayh0aW1lKTtcbiAgICAgICAgdGhpcy5wYXJ0U3RlcCArPSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF0aGlzLmxvb3BpbmcgJiYgdGhpcy5wYXJ0U3RlcCA9PT0gdGhpcy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgdGhpcy5vbmVuZGVkKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNldCB0aGUgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGNhbGxlZCBhdCBldmVyeSBzdGVwLiBUaGlzIHdpbGwgY2xlYXIgdGhlIHByZXZpb3VzIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogIEBtZXRob2Qgb25TdGVwXG4gICAgICogIEBmb3IgcDUuUGFydFxuICAgICAqICBAcGFyYW0gIHtGdW5jdGlvbn0gY2FsbGJhY2sgVGhlIG5hbWUgb2YgdGhlIGNhbGxiYWNrXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5b3Ugd2FudCB0byBmaXJlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbiBldmVyeSBiZWF0L3RhdHVtLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwib25TdGVwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uU3RlcChjYWxsYmFjaykge1xuICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQYXJ0O1xufSgpOyBcblxuLyoqXG4gKiAgQSBTY29yZSBjb25zaXN0cyBvZiBhIHNlcmllcyBvZiBQYXJ0cy4gVGhlIHBhcnRzIHdpbGxcbiAqICBiZSBwbGF5ZWQgYmFjayBpbiBvcmRlci4gRm9yIGV4YW1wbGUsIHlvdSBjb3VsZCBoYXZlIGFuXG4gKiAgQSBwYXJ0LCBhIEIgcGFydCwgYW5kIGEgQyBwYXJ0LCBhbmQgcGxheSB0aGVtIGJhY2sgaW4gdGhpcyBvcmRlclxuICogIDxjb2RlPm5ldyBwNS5TY29yZShhLCBhLCBiLCBhLCBjKTwvY29kZT5cbiAqXG4gKiAgQGNsYXNzIHA1LlNjb3JlXG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtIHtwNS5QYXJ0fSBbLi4ucGFydHNdIE9uZSBvciBtdWx0aXBsZSBwYXJ0cywgdG8gYmUgcGxheWVkIGluIHNlcXVlbmNlLlxuICovXG5cblxudmFyIFNjb3JlID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2NvcmUoKSB7XG4gICAgbG9vcGVyX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNjb3JlKTtcblxuICAgIHRoaXMucGFydHMgPSBbXTtcbiAgICB0aGlzLmN1cnJlbnRQYXJ0ID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpO1xuICAgIDtcbiAgICB2YXIgdGhpc1Njb3JlID0gdGhpcztcblxuICAgIGZvciAodmFyIGkgaW4gYXJndW1lbnRzKSB7XG4gICAgICB0aGlzLnBhcnRzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgICAgdGhpcy5wYXJ0c1tpXS5uZXh0UGFydCA9IHRoaXMucGFydHNbaSArIDFdO1xuXG4gICAgICB0aGlzLnBhcnRzW2ldLm9uZW5kZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXNTY29yZS5yZXNldFBhcnQoaSk7XG4gICAgICAgIHBsYXlOZXh0UGFydCh0aGlzU2NvcmUpO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICB0aGlzLmxvb3BpbmcgPSBmYWxzZTtcbiAgfVxuXG4gIGxvb3Blcl9jcmVhdGVDbGFzcyhTY29yZSwgW3tcbiAgICBrZXk6IFwib25lbmRlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbmVuZGVkKCkge1xuICAgICAgaWYgKHRoaXMubG9vcGluZykge1xuICAgICAgICB0aGlzLnBhcnRzWzBdLnN0YXJ0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBhcnRzW3RoaXMucGFydHMubGVuZ3RoIC0gMV0ub25lbmRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0aGlzLnN0b3AoKTtcbiAgICAgICAgICB0aGlzLnJlc2V0UGFydHMoKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jdXJyZW50UGFydCA9IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTdGFydCBwbGF5YmFjayBvZiB0aGUgc2NvcmUuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgc3RhcnRcbiAgICAgKiAgQGZvciBwNS5TY29yZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic3RhcnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnQoKSB7XG4gICAgICB0aGlzLnBhcnRzW3RoaXMuY3VycmVudFBhcnRdLnN0YXJ0KCk7XG4gICAgICB0aGlzLnNjb3JlU3RlcCA9IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTdG9wIHBsYXliYWNrIG9mIHRoZSBzY29yZS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzdG9wXG4gICAgICogIEBmb3IgcDUuU2NvcmVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInN0b3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCgpIHtcbiAgICAgIHRoaXMucGFydHNbdGhpcy5jdXJyZW50UGFydF0uc3RvcCgpO1xuICAgICAgdGhpcy5jdXJyZW50UGFydCA9IDA7XG4gICAgICB0aGlzLnNjb3JlU3RlcCA9IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBQYXVzZSBwbGF5YmFjayBvZiB0aGUgc2NvcmUuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgcGF1c2VcbiAgICAgKiAgQGZvciBwNS5TY29yZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicGF1c2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgICB0aGlzLnBhcnRzW3RoaXMuY3VycmVudFBhcnRdLnN0b3AoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIExvb3AgcGxheWJhY2sgb2YgdGhlIHNjb3JlLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGxvb3BcbiAgICAgKiAgQGZvciBwNS5TY29yZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwibG9vcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb29wKCkge1xuICAgICAgdGhpcy5sb29waW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuc3RhcnQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFN0b3AgbG9vcGluZyBwbGF5YmFjayBvZiB0aGUgc2NvcmUuIElmIGl0XG4gICAgICogIGlzIGN1cnJlbnRseSBwbGF5aW5nLCB0aGlzIHdpbGwgZ28gaW50byBlZmZlY3RcbiAgICAgKiAgYWZ0ZXIgdGhlIGN1cnJlbnQgcm91bmQgb2YgcGxheWJhY2sgY29tcGxldGVzLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIG5vTG9vcFxuICAgICAqICBAZm9yIHA1LlNjb3JlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJub0xvb3BcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbm9Mb29wKCkge1xuICAgICAgdGhpcy5sb29waW5nID0gZmFsc2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlc2V0UGFydHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzZXRQYXJ0cygpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgIHRoaXMucGFydHMuZm9yRWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBzZWxmLnJlc2V0UGFydHNbcGFydF07XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVzZXRQYXJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2V0UGFydChpKSB7XG4gICAgICB0aGlzLnBhcnRzW2ldLnN0b3AoKTtcbiAgICAgIHRoaXMucGFydHNbaV0ucGFydFN0ZXAgPSAwO1xuXG4gICAgICBmb3IgKHZhciBwIGluIHRoaXMucGFydHNbaV0ucGhyYXNlcykge1xuICAgICAgICBpZiAodGhpcy5wYXJ0c1tpXSkge1xuICAgICAgICAgIHRoaXMucGFydHNbaV0ucGhyYXNlc1twXS5waHJhc2VTdGVwID0gMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU2V0IHRoZSB0ZW1wbyBmb3IgYWxsIHBhcnRzIGluIHRoZSBzY29yZVxuICAgICAqXG4gICAgICogIEBtZXRob2Qgc2V0QlBNXG4gICAgICogIEBmb3IgcDUuU2NvcmVcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IEJQTSAgICAgIEJlYXRzIFBlciBNaW51dGVcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IHJhbXBUaW1lIFNlY29uZHMgZnJvbSBub3dcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInNldEJQTVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRCUE0oYnBtLCByYW1wVGltZSkge1xuICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnBhcnRzKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcnRzW2ldKSB7XG4gICAgICAgICAgdGhpcy5wYXJ0c1tpXS5zZXRCUE0oYnBtLCByYW1wVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2NvcmU7XG59KCk7XG5cbmZ1bmN0aW9uIHBsYXlOZXh0UGFydChhU2NvcmUpIHtcbiAgYVNjb3JlLmN1cnJlbnRQYXJ0Kys7XG5cbiAgaWYgKGFTY29yZS5jdXJyZW50UGFydCA+PSBhU2NvcmUucGFydHMubGVuZ3RoKSB7XG4gICAgYVNjb3JlLnNjb3JlU3RlcCA9IDA7XG4gICAgYVNjb3JlLm9uZW5kZWQoKTtcbiAgfSBlbHNlIHtcbiAgICBhU2NvcmUuc2NvcmVTdGVwID0gMDtcbiAgICBhU2NvcmUucGFydHNbYVNjb3JlLmN1cnJlbnRQYXJ0IC0gMV0uc3RvcCgpO1xuICAgIGFTY29yZS5wYXJ0c1thU2NvcmUuY3VycmVudFBhcnRdLnN0YXJ0KCk7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBzb3VuZExvb3BfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBzb3VuZExvb3BfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIHNvdW5kTG9vcF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIHNvdW5kTG9vcF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgc291bmRMb29wX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cblxuXG4vKipcbiAqIFNvdW5kTG9vcFxuICpcbiAqIEBjbGFzcyBwNS5Tb3VuZExvb3BcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIHRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgb24gZWFjaCBpdGVyYXRpb24gb2YgdGhlbG9vcFxuICogQHBhcmFtIHtOdW1iZXJ8U3RyaW5nfSBbaW50ZXJ2YWxdIGFtb3VudCBvZiB0aW1lIChpZiBhIG51bWJlcikgb3IgYmVhdHMgKGlmIGEgc3RyaW5nLCBmb2xsb3dpbmcgPGEgaHJlZiA9IFwiaHR0cHM6Ly9naXRodWIuY29tL1RvbmVqcy9Ub25lLmpzL3dpa2kvVGltZVwiPlRvbmUuVGltZTwvYT4gY29udmVudGlvbikgZm9yIGVhY2ggaXRlcmF0aW9uIG9mIHRoZSBsb29wLiBEZWZhdWx0cyB0byAxIHNlY29uZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogPGRpdj48Y29kZT5cbiAqICBsZXQgc3ludGgsIHNvdW5kTG9vcDtcbiAqICBsZXQgbm90ZVBhdHRlcm4gPSBbNjAsIDYyLCA2NCwgNjcsIDY5LCA3Ml07XG4gKlxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKGNhbnZhc1ByZXNzZWQpO1xuICogICAgY29sb3JNb2RlKEhTQik7XG4gKiAgICBiYWNrZ3JvdW5kKDAsIDAsIDg2KTtcbiAqICAgIHRleHQoJ3RhcCB0byBzdGFydC9zdG9wJywgMTAsIDIwKTtcbiAqXG4gKiAgICAvL3RoZSBsb29wZXIncyBjYWxsYmFjayBpcyBwYXNzZWQgdGhlIHRpbWVGcm9tTm93XG4gKiAgICAvL3RoaXMgdmFsdWUgc2hvdWxkIGJlIHVzZWQgYXMgYSByZWZlcmVuY2UgcG9pbnQgZnJvbVxuICogICAgLy93aGljaCB0byBzY2hlZHVsZSBzb3VuZHNcbiAqICAgIGxldCBpbnRlcnZhbEluU2Vjb25kcyA9IDAuMjtcbiAqICAgIHNvdW5kTG9vcCA9IG5ldyBwNS5Tb3VuZExvb3Aob25Tb3VuZExvb3AsIGludGVydmFsSW5TZWNvbmRzKTtcbiAqXG4gKiAgICBzeW50aCA9IG5ldyBwNS5Nb25vU3ludGgoKTtcbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBjYW52YXNQcmVzc2VkKCkge1xuICogICAvLyBlbnN1cmUgYXVkaW8gaXMgZW5hYmxlZFxuICogICB1c2VyU3RhcnRBdWRpbygpO1xuICpcbiAqICAgaWYgKHNvdW5kTG9vcC5pc1BsYXlpbmcpIHtcbiAqICAgICBzb3VuZExvb3Auc3RvcCgpO1xuICogICB9IGVsc2Uge1xuICogICAgIC8vIHN0YXJ0IHRoZSBsb29wXG4gKiAgICAgc291bmRMb29wLnN0YXJ0KCk7XG4gKiAgIH1cbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBvblNvdW5kTG9vcCh0aW1lRnJvbU5vdykge1xuICogICBsZXQgbm90ZUluZGV4ID0gKHNvdW5kTG9vcC5pdGVyYXRpb25zIC0gMSkgJSBub3RlUGF0dGVybi5sZW5ndGg7XG4gKiAgIGxldCBub3RlID0gbWlkaVRvRnJlcShub3RlUGF0dGVybltub3RlSW5kZXhdKTtcbiAqICAgc3ludGgucGxheShub3RlLCAwLjUsIHRpbWVGcm9tTm93KTtcbiAqICAgYmFja2dyb3VuZChub3RlSW5kZXggKiAzNjAgLyBub3RlUGF0dGVybi5sZW5ndGgsIDUwLCAxMDApO1xuICogfVxuICogPC9jb2RlPjwvZGl2PlxuICovXG5cbnZhciBzb3VuZExvb3BfU291bmRMb29wID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU291bmRMb29wKGNhbGxiYWNrLCBpbnRlcnZhbCkge1xuICAgIHNvdW5kTG9vcF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTb3VuZExvb3ApO1xuXG4gICAgLyoqXG4gICAgICogR2V0dGVycyBhbmQgU2V0dGVycywgc2V0dGluZyBhbnkgcGFyYW10ZXIgd2lsbCByZXN1bHQgaW4gYSBjaGFuZ2UgaW4gdGhlIGNsb2NrJ3NcbiAgICAgKiBmcmVxdWVuY3ksIHRoYXQgd2lsbCBiZSByZWZsZWN0ZWQgYWZ0ZXIgdGhlIG5leHQgY2FsbGJhY2tcbiAgICAgKiBiZWF0cyBwZXIgbWludXRlIChkZWZhdWx0cyB0byA2MClcbiAgICAgKiBAcHJvcGVydHkge051bWJlcn0gYnBtXG4gICAgICogQGZvciBwNS5Tb3VuZExvb3BcbiAgICAgKi9cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2JwbScsIHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYnBtO1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGJwbSkge1xuICAgICAgICBpZiAoIXRoaXMubXVzaWNhbFRpbWVNb2RlKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCdDaGFuZ2luZyB0aGUgQlBNIGluIFwic2Vjb25kc1wiIG1vZGUgaGFzIG5vIGVmZmVjdC4gJyArICdCUE0gaXMgb25seSByZWxldmFudCBpbiBtdXNpY2FsVGltZU1vZGUgJyArICd3aGVuIHRoZSBpbnRlcnZhbCBpcyBzcGVjaWZpZWQgYXMgYSBzdHJpbmcgJyArICcoXCIyblwiLCBcIjRuXCIsIFwiMW1cIi4uLmV0YyknKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2JwbSA9IGJwbTtcblxuICAgICAgICB0aGlzLl91cGRhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBudW1iZXIgb2YgcXVhcnRlciBub3RlcyBpbiBhIG1lYXN1cmUgKGRlZmF1bHRzIHRvIDQpXG4gICAgICogQHByb3BlcnR5IHtOdW1iZXJ9IHRpbWVTaWduYXR1cmVcbiAgICAgKiBAZm9yIHA1LlNvdW5kTG9vcFxuICAgICAqL1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICd0aW1lU2lnbmF0dXJlJywge1xuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90aW1lU2lnbmF0dXJlO1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHRpbWVTaWcpIHtcbiAgICAgICAgaWYgKCF0aGlzLm11c2ljYWxUaW1lTW9kZSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybignQ2hhbmdpbmcgdGhlIHRpbWVTaWduYXR1cmUgaW4gXCJzZWNvbmRzXCIgbW9kZSBoYXMgbm8gZWZmZWN0LiAnICsgJ0JQTSBpcyBvbmx5IHJlbGV2YW50IGluIG11c2ljYWxUaW1lTW9kZSAnICsgJ3doZW4gdGhlIGludGVydmFsIGlzIHNwZWNpZmllZCBhcyBhIHN0cmluZyAnICsgJyhcIjJuXCIsIFwiNG5cIiwgXCIxbVwiLi4uZXRjKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fdGltZVNpZ25hdHVyZSA9IHRpbWVTaWc7XG5cbiAgICAgICAgdGhpcy5fdXBkYXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogbGVuZ3RoIG9mIHRoZSBsb29wcyBpbnRlcnZhbFxuICAgICAqIEBwcm9wZXJ0eSB7TnVtYmVyfFN0cmluZ30gaW50ZXJ2YWxcbiAgICAgKiBAZm9yIHA1LlNvdW5kTG9vcFxuICAgICAqL1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdpbnRlcnZhbCcsIHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faW50ZXJ2YWw7XG4gICAgICB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiBzZXQoaW50ZXJ2YWwpIHtcbiAgICAgICAgdGhpcy5tdXNpY2FsVGltZU1vZGUgPSB0eXBlb2YgaW50ZXJ2YWwgPT09ICdudW1iZXInID8gZmFsc2UgOiB0cnVlO1xuICAgICAgICB0aGlzLl9pbnRlcnZhbCA9IGludGVydmFsO1xuXG4gICAgICAgIHRoaXMuX3VwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIGhvdyBtYW55IHRpbWVzIHRoZSBjYWxsYmFjayBoYXMgYmVlbiBjYWxsZWQgc28gZmFyXG4gICAgICogQHByb3BlcnR5IHtOdW1iZXJ9IGl0ZXJhdGlvbnNcbiAgICAgKiBAZm9yIHA1LlNvdW5kTG9vcFxuICAgICAqIEByZWFkb25seVxuICAgICAqL1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdpdGVyYXRpb25zJywge1xuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNsb2NrLnRpY2tzO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAvKipcbiAgICAgKiBtdXNpY2FsVGltZU1vZGUgdXNlcyA8YSBocmVmID0gXCJodHRwczovL2dpdGh1Yi5jb20vVG9uZWpzL1RvbmUuanMvd2lraS9UaW1lXCI+VG9uZS5UaW1lPC9hPiBjb252ZW50aW9uXG4gICAgICogdHJ1ZSBpZiBzdHJpbmcsIGZhbHNlIGlmIG51bWJlclxuICAgICAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gbXVzaWNhbFRpbWVNb2RlXG4gICAgICovXG5cbiAgICB0aGlzLm11c2ljYWxUaW1lTW9kZSA9IHR5cGVvZiB0aGlzLl9pbnRlcnZhbCA9PT0gJ251bWJlcicgPyBmYWxzZSA6IHRydWU7XG4gICAgdGhpcy5faW50ZXJ2YWwgPSBpbnRlcnZhbCB8fCAxO1xuICAgIC8qKlxuICAgICAqIG11c2ljYWxUaW1lTW9kZSB2YXJpYWJsZXNcbiAgICAgKiBtb2RpZnkgdGhlc2Ugb25seSB3aGVuIHRoZSBpbnRlcnZhbCBpcyBzcGVjaWZpZWQgaW4gbXVzaWNhbFRpbWUgZm9ybWF0IGFzIGEgc3RyaW5nXG4gICAgICovXG5cbiAgICB0aGlzLl90aW1lU2lnbmF0dXJlID0gNDtcbiAgICB0aGlzLl9icG0gPSA2MDtcbiAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlO1xuICAgIC8qKlxuICAgICAqIFNldCBhIGxpbWl0IHRvIHRoZSBudW1iZXIgb2YgbG9vcHMgdG8gcGxheS4gZGVmYXVsdHMgdG8gSW5maW5pdHlcbiAgICAgKiBAcHJvcGVydHkge051bWJlcn0gbWF4SXRlcmF0aW9uc1xuICAgICAqL1xuXG4gICAgdGhpcy5tYXhJdGVyYXRpb25zID0gSW5maW5pdHk7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHRoaXMuY2xvY2sgPSBuZXcgQ2xvY2tfZGVmYXVsdC5hKHtcbiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjayh0aW1lKSB7XG4gICAgICAgIHZhciB0aW1lRnJvbU5vdyA9IHRpbWUgLSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERvIG5vdCBpbml0aWF0ZSB0aGUgY2FsbGJhY2sgaWYgdGltZUZyb21Ob3cgaXMgPCAwXG4gICAgICAgICAqIFRoaXMgdXN1c3VhbGx5IG9jY3VycyBmb3IgYSBmZXcgbWlsbGlzZWNvbmRzIHdoZW4gdGhlIHBhZ2VcbiAgICAgICAgICogaXMgbm90IGZ1bGx5IGxvYWRlZFxuICAgICAgICAgKlxuICAgICAgICAgKiBUaGUgY2FsbGJhY2sgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIHVudGlsIG1heEl0ZXJhdGlvbnMgaXMgcmVhY2hlZFxuICAgICAgICAgKi9cblxuICAgICAgICBpZiAodGltZUZyb21Ob3cgPiAwICYmIHNlbGYuaXRlcmF0aW9ucyA8PSBzZWxmLm1heEl0ZXJhdGlvbnMpIHtcbiAgICAgICAgICBzZWxmLmNhbGxiYWNrKHRpbWVGcm9tTm93KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGZyZXF1ZW5jeTogdGhpcy5fY2FsY0ZyZXEoKVxuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBTdGFydCB0aGUgbG9vcFxuICAgKiBAbWV0aG9kICBzdGFydFxuICAgKiBAZm9yIHA1LlNvdW5kTG9vcFxuICAgKiBAcGFyYW0gIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gc2NoZWR1bGUgYSBzdGFydGluZyB0aW1lXG4gICAqL1xuXG5cbiAgc291bmRMb29wX2NyZWF0ZUNsYXNzKFNvdW5kTG9vcCwgW3tcbiAgICBrZXk6IFwic3RhcnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnQodGltZUZyb21Ob3cpIHtcbiAgICAgIHZhciB0ID0gdGltZUZyb21Ob3cgfHwgMDtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcblxuICAgICAgaWYgKCF0aGlzLmlzUGxheWluZykge1xuICAgICAgICB0aGlzLmNsb2NrLnN0YXJ0KG5vdyArIHQpO1xuICAgICAgICB0aGlzLmlzUGxheWluZyA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0b3AgdGhlIGxvb3BcbiAgICAgKiBAbWV0aG9kICBzdG9wXG4gICAgICogQGZvciBwNS5Tb3VuZExvb3BcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gc2NoZWR1bGUgYSBzdG9wcGluZyB0aW1lXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzdG9wXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0b3AodGltZUZyb21Ob3cpIHtcbiAgICAgIHZhciB0ID0gdGltZUZyb21Ob3cgfHwgMDtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcblxuICAgICAgaWYgKHRoaXMuaXNQbGF5aW5nKSB7XG4gICAgICAgIHRoaXMuY2xvY2suc3RvcChub3cgKyB0KTtcbiAgICAgICAgdGhpcy5pc1BsYXlpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUGF1c2UgdGhlIGxvb3BcbiAgICAgKiBAbWV0aG9kIHBhdXNlXG4gICAgICogQGZvciBwNS5Tb3VuZExvb3BcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gc2NoZWR1bGUgYSBwYXVzaW5nIHRpbWVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInBhdXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBhdXNlKHRpbWVGcm9tTm93KSB7XG4gICAgICB2YXIgdCA9IHRpbWVGcm9tTm93IHx8IDA7XG4gICAgICB2YXIgbm93ID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWU7XG5cbiAgICAgIGlmICh0aGlzLmlzUGxheWluZykge1xuICAgICAgICB0aGlzLmNsb2NrLnBhdXNlKG5vdyArIHQpO1xuICAgICAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBTeW5jaHJvbml6ZSBsb29wcy4gVXNlIHRoaXMgbWV0aG9kIHRvIHN0YXJ0IHR3byBvciBtb3JlIGxvb3BzIGluIHN5bmNocm9uaXphdGlvblxuICAgICAqIG9yIHRvIHN0YXJ0IGEgbG9vcCBpbiBzeW5jaHJvbml6YXRpb24gd2l0aCBhIGxvb3AgdGhhdCBpcyBhbHJlYWR5IHBsYXlpbmdcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIHNjaGVkdWxlIHRoZSBpbXBsaWNpdCBsb29wIGluIHN5bmMgd2l0aCB0aGUgZXhwbGljaXQgbWFzdGVyIGxvb3BcbiAgICAgKiBpLmUuIGxvb3BUb1N0YXJ0LnN5bmNlZFN0YXJ0KGxvb3BUb1N5bmNXaXRoKVxuICAgICAqXG4gICAgICogQG1ldGhvZCAgc3luY2VkU3RhcnRcbiAgICAgKiBAZm9yIHA1LlNvdW5kTG9vcFxuICAgICAqIEBwYXJhbSAge09iamVjdH0gb3RoZXJMb29wICAgYSBwNS5Tb3VuZExvb3AgdG8gc3luYyB3aXRoXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSBbdGltZUZyb21Ob3ddIFN0YXJ0IHRoZSBsb29wcyBpbiBzeW5jIGFmdGVyIHRpbWVGcm9tTm93IHNlY29uZHNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInN5bmNlZFN0YXJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN5bmNlZFN0YXJ0KG90aGVyTG9vcCwgdGltZUZyb21Ob3cpIHtcbiAgICAgIHZhciB0ID0gdGltZUZyb21Ob3cgfHwgMDtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcblxuICAgICAgaWYgKCFvdGhlckxvb3AuaXNQbGF5aW5nKSB7XG4gICAgICAgIG90aGVyTG9vcC5jbG9jay5zdGFydChub3cgKyB0KTtcbiAgICAgICAgb3RoZXJMb29wLmlzUGxheWluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuY2xvY2suc3RhcnQobm93ICsgdCk7XG4gICAgICAgIHRoaXMuaXNQbGF5aW5nID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAob3RoZXJMb29wLmlzUGxheWluZykge1xuICAgICAgICB2YXIgdGltZSA9IG90aGVyTG9vcC5jbG9jay5fbmV4dFRpY2sgLSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgdGhpcy5jbG9jay5zdGFydChub3cgKyB0aW1lKTtcbiAgICAgICAgdGhpcy5pc1BsYXlpbmcgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIGZyZXF1ZW5jeSB2YWx1ZSwgcmVmbGVjdGVkIGluIG5leHQgY2FsbGJhY2tcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBmb3IgcDUuU291bmRMb29wXG4gICAgICogQG1ldGhvZCAgX3VwZGF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiX3VwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfdXBkYXRlKCkge1xuICAgICAgdGhpcy5jbG9jay5mcmVxdWVuY3kudmFsdWUgPSB0aGlzLl9jYWxjRnJlcSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxjdWxhdGUgdGhlIGZyZXF1ZW5jeSBvZiB0aGUgY2xvY2sncyBjYWxsYmFjayBiYXNlZCBvbiBicG0sIGludGVydmFsLCBhbmQgdGltZXNpZ25hdHVyZVxuICAgICAqIEBwcml2YXRlXG4gICAgICogQGZvciBwNS5Tb3VuZExvb3BcbiAgICAgKiBAbWV0aG9kICBfY2FsY0ZyZXFcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IG5ldyBjbG9jayBmcmVxdWVuY3kgdmFsdWVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9jYWxjRnJlcVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY2FsY0ZyZXEoKSB7XG4gICAgICBpZiAodHlwZW9mIHRoaXMuX2ludGVydmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLm11c2ljYWxUaW1lTW9kZSA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gMSAvIHRoaXMuX2ludGVydmFsO1xuICAgICAgfSBcbiAgICAgIGVsc2UgaWYgKHR5cGVvZiB0aGlzLl9pbnRlcnZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICB0aGlzLm11c2ljYWxUaW1lTW9kZSA9IHRydWU7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2JwbSAvIDYwIC8gdGhpcy5fY29udmVydE5vdGF0aW9uKHRoaXMuX2ludGVydmFsKSAqICh0aGlzLl90aW1lU2lnbmF0dXJlIC8gNCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29udmVydCBub3RhdGlvbiBmcm9tIG11c2ljYWwgdGltZSBmb3JtYXQgdG8gc2Vjb25kc1xuICAgICAqIFVzZXMgPGEgaHJlZiA9IFwiaHR0cHM6Ly9naXRodWIuY29tL1RvbmVqcy9Ub25lLmpzL3dpa2kvVGltZVwiPlRvbmUuVGltZTwvYT4gY29udmVudGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQGZvciBwNS5Tb3VuZExvb3BcbiAgICAgKiBAbWV0aG9kIF9jb252ZXJ0Tm90YXRpb25cbiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9IHZhbHVlIHZhbHVlIHRvIGJlIGNvbnZlcnRlZFxuICAgICAqIEByZXR1cm4ge051bWJlcn0gICAgICAgY29udmVydGVkIHZhbHVlIGluIHNlY29uZHNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9jb252ZXJ0Tm90YXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NvbnZlcnROb3RhdGlvbih2YWx1ZSkge1xuICAgICAgdmFyIHR5cGUgPSB2YWx1ZS5zbGljZSgtMSk7XG4gICAgICB2YWx1ZSA9IE51bWJlcih2YWx1ZS5zbGljZSgwLCAtMSkpO1xuXG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAnbSc6XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX21lYXN1cmUodmFsdWUpO1xuXG4gICAgICAgIGNhc2UgJ24nOlxuICAgICAgICAgIHJldHVybiB0aGlzLl9ub3RlKHZhbHVlKTtcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGNvbnNvbGUud2FybignU3BlY2lmaWVkIGludGVydmFsIGlzIG5vdCBmb3JtYXR0ZWQgY29ycmVjdGx5LiBTZWUgVG9uZS5qcyAnICsgJ3RpbWluZyByZWZlcmVuY2UgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9naXRodWIuY29tL1RvbmVqcy9Ub25lLmpzL3dpa2kvVGltZScpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBIZWxwZXIgY29udmVyc2lvbiBtZXRob2RzIG9mIG1lYXN1cmUgYW5kIG5vdGVcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBmb3IgcDUuU291bmRMb29wXG4gICAgICogQG1ldGhvZCAgX21lYXN1cmVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9tZWFzdXJlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9tZWFzdXJlKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdmFsdWUgKiB0aGlzLl90aW1lU2lnbmF0dXJlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgIF9ub3RlXG4gICAgICogQGZvciBwNS5Tb3VuZExvb3BcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9ub3RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9ub3RlKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGltZVNpZ25hdHVyZSAvIHZhbHVlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTb3VuZExvb3A7XG59KCk7XG5cbiB2YXIgc291bmRMb29wID0gKHNvdW5kTG9vcF9Tb3VuZExvb3ApO1xuZnVuY3Rpb24gY29tcHJlc3Nvcl90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBjb21wcmVzc29yX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBjb21wcmVzc29yX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBjb21wcmVzc29yX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIGNvbXByZXNzb3JfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBjb21wcmVzc29yX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBjb21wcmVzc29yX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgY29tcHJlc3Nvcl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgY29tcHJlc3Nvcl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBjb21wcmVzc29yX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoY29tcHJlc3Nvcl90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIGNvbXByZXNzb3JfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIGNvbXByZXNzb3JfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gY29tcHJlc3Nvcl9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7IGNvbXByZXNzb3JfZ2V0ID0gUmVmbGVjdC5nZXQ7IH0gZWxzZSB7IGNvbXByZXNzb3JfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyB2YXIgYmFzZSA9IGNvbXByZXNzb3Jfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTsgaWYgKCFiYXNlKSByZXR1cm47IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7IGlmIChkZXNjLmdldCkgeyByZXR1cm4gZGVzYy5nZXQuY2FsbChyZWNlaXZlcik7IH0gcmV0dXJuIGRlc2MudmFsdWU7IH07IH0gcmV0dXJuIGNvbXByZXNzb3JfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyIHx8IHRhcmdldCk7IH1cblxuZnVuY3Rpb24gY29tcHJlc3Nvcl9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHsgd2hpbGUgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHsgb2JqZWN0ID0gY29tcHJlc3Nvcl9nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhazsgfSByZXR1cm4gb2JqZWN0OyB9XG5cbmZ1bmN0aW9uIGNvbXByZXNzb3JfZ2V0UHJvdG90eXBlT2YobykgeyBjb21wcmVzc29yX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIGNvbXByZXNzb3JfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gY29tcHJlc3Nvcl9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBjb21wcmVzc29yX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBjb21wcmVzc29yX3NldFByb3RvdHlwZU9mKG8sIHApIHsgY29tcHJlc3Nvcl9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gY29tcHJlc3Nvcl9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5cbi8qKlxuICogQ29tcHJlc3NvciBpcyBhbiBhdWRpbyBlZmZlY3QgY2xhc3MgdGhhdCBwZXJmb3JtcyBkeW5hbWljcyBjb21wcmVzc2lvblxuICogb24gYW4gYXVkaW8gaW5wdXQgc291cmNlLiBUaGlzIGlzIGEgdmVyeSBjb21tb25seSB1c2VkIHRlY2huaXF1ZSBpbiBtdXNpY1xuICogYW5kIHNvdW5kIHByb2R1Y3Rpb24uIENvbXByZXNzaW9uIGNyZWF0ZXMgYW4gb3ZlcmFsbCBsb3VkZXIsIHJpY2hlcixcbiAqIGFuZCBmdWxsZXIgc291bmQgYnkgbG93ZXJpbmcgdGhlIHZvbHVtZSBvZiBsb3VkcyBhbmQgcmFpc2luZyB0aGF0IG9mIHNvZnRzLlxuICogQ29tcHJlc3Npb24gY2FuIGJlIHVzZWQgdG8gYXZvaWQgY2xpcHBpbmcgKHNvdW5kIGRpc3RvcnRpb24gZHVlIHRvXG4gKiBwZWFrcyBpbiB2b2x1bWUpIGFuZCBpcyBlc3BlY2lhbGx5IHVzZWZ1bCB3aGVuIG1hbnkgc291bmRzIGFyZSBwbGF5ZWRcbiAqIGF0IG9uY2UuIENvbXByZXNzaW9uIGNhbiBiZSB1c2VkIG9uIGluZGl2dWRhbCBzb3VuZCBzb3VyY2VzIGluIGFkZGl0aW9uXG4gKiB0byB0aGUgbWFpbiBvdXRwdXQuXG4gKlxuICogVGhpcyBjbGFzcyBleHRlbmRzIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3RcIj5wNS5FZmZlY3Q8L2E+LlxuICogTWV0aG9kcyA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2FtcFwiPmFtcCgpPC9hPiwgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9jaGFpblwiPmNoYWluKCk8L2E+LFxuICogPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kcnl3ZXRcIj5kcnl3ZXQoKTwvYT4sIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvY29ubmVjdFwiPmNvbm5lY3QoKTwvYT4sIGFuZFxuICogPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kaXNjb25uZWN0XCI+ZGlzY29ubmVjdCgpPC9hPiBhcmUgYXZhaWxhYmxlLlxuICpcbiAqIEBjbGFzcyBwNS5Db21wcmVzc29yXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIHA1LkVmZmVjdFxuICpcbiAqXG4gKi9cblxudmFyIENvbXByZXNzb3IgPVxuZnVuY3Rpb24gKF9FZmZlY3QpIHtcbiAgY29tcHJlc3Nvcl9pbmhlcml0cyhDb21wcmVzc29yLCBfRWZmZWN0KTtcblxuICBmdW5jdGlvbiBDb21wcmVzc29yKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGNvbXByZXNzb3JfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29tcHJlc3Nvcik7XG5cbiAgICBfdGhpcyA9IGNvbXByZXNzb3JfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBjb21wcmVzc29yX2dldFByb3RvdHlwZU9mKENvbXByZXNzb3IpLmNhbGwodGhpcykpO1xuICAgIC8qKlxuICAgICAqXG4gICAgICogVGhlIHA1LkNvbXByZXNzb3IgaXMgYnVpbHQgd2l0aCBhIDxhIGhyZWY9XCJodHRwczovL3d3dy53My5vcmcvVFIvd2ViYXVkaW8vI3RoZS1keW5hbWljc2NvbXByZXNzb3Jub2RlLWludGVyZmFjZVwiXG4gICAgICogICB0YXJnZXQ9XCJfYmxhbmtcIiB0aXRsZT1cIlczIHNwZWMgZm9yIER5bmFtaWNzIENvbXByZXNzb3IgTm9kZVwiPldlYiBBdWRpbyBEeW5hbWljcyBDb21wcmVzc29yIE5vZGVcbiAgICAgKiAgIDwvYT5cbiAgICAgKiBAcHJvcGVydHkge0F1ZGlvTm9kZX0gY29tcHJlc3NvclxuICAgICAqL1xuXG4gICAgX3RoaXMuY29tcHJlc3NvciA9IF90aGlzLmFjLmNyZWF0ZUR5bmFtaWNzQ29tcHJlc3NvcigpO1xuXG4gICAgX3RoaXMuaW5wdXQuY29ubmVjdChfdGhpcy5jb21wcmVzc29yKTtcblxuICAgIF90aGlzLmNvbXByZXNzb3IuY29ubmVjdChfdGhpcy53ZXQpO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIC8qKlxuICAgKiBQZXJmb3JtcyB0aGUgc2FtZSBmdW5jdGlvbiBhcyAuY29ubmVjdCwgYnV0IGFsc28gYWNjZXB0c1xuICAgKiBvcHRpb25hbCBwYXJhbWV0ZXJzIHRvIHNldCBjb21wcmVzc29yJ3MgYXVkaW9QYXJhbXNcbiAgICogQG1ldGhvZCBwcm9jZXNzXG4gICAqIEBmb3IgcDUuQ29tcHJlc3NvclxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gc3JjICAgICAgICAgU291bmQgc291cmNlIHRvIGJlIGNvbm5lY3RlZFxuICAgKlxuICAgKiBAcGFyYW0ge051bWJlcn0gW2F0dGFja10gICAgIFRoZSBhbW91bnQgb2YgdGltZSAoaW4gc2Vjb25kcykgdG8gcmVkdWNlIHRoZSBnYWluIGJ5IDEwZEIsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAuMDAzLCByYW5nZSAwIC0gMVxuICAgKiBAcGFyYW0ge051bWJlcn0gW2tuZWVdICAgICAgIEEgZGVjaWJlbCB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIHJhbmdlIGFib3ZlIHRoZVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQgd2hlcmUgdGhlIGN1cnZlIHNtb290aGx5IHRyYW5zaXRpb25zIHRvIHRoZSBcInJhdGlvXCIgcG9ydGlvbi5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDMwLCByYW5nZSAwIC0gNDBcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtyYXRpb10gICAgICBUaGUgYW1vdW50IG9mIGRCIGNoYW5nZSBpbiBpbnB1dCBmb3IgYSAxIGRCIGNoYW5nZSBpbiBvdXRwdXRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDEyLCByYW5nZSAxIC0gMjBcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFt0aHJlc2hvbGRdICBUaGUgZGVjaWJlbCB2YWx1ZSBhYm92ZSB3aGljaCB0aGUgY29tcHJlc3Npb24gd2lsbCBzdGFydCB0YWtpbmcgZWZmZWN0XG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAtMjQsIHJhbmdlIC0xMDAgLSAwXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbcmVsZWFzZV0gICAgVGhlIGFtb3VudCBvZiB0aW1lIChpbiBzZWNvbmRzKSB0byBpbmNyZWFzZSB0aGUgZ2FpbiBieSAxMGRCXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAuMjUsIHJhbmdlIDAgLSAxXG4gICAqL1xuXG5cbiAgY29tcHJlc3Nvcl9jcmVhdGVDbGFzcyhDb21wcmVzc29yLCBbe1xuICAgIGtleTogXCJwcm9jZXNzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByb2Nlc3Moc3JjLCBhdHRhY2ssIGtuZWUsIHJhdGlvLCB0aHJlc2hvbGQsIHJlbGVhc2UpIHtcbiAgICAgIHNyYy5jb25uZWN0KHRoaXMuaW5wdXQpO1xuICAgICAgdGhpcy5zZXQoYXR0YWNrLCBrbmVlLCByYXRpbywgdGhyZXNob2xkLCByZWxlYXNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBwYXJhbXRlcnMgb2YgYSBjb21wcmVzc29yLlxuICAgICAqIEBtZXRob2QgIHNldFxuICAgICAqIEBmb3IgcDUuQ29tcHJlc3NvclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBhdHRhY2sgICAgIFRoZSBhbW91bnQgb2YgdGltZSAoaW4gc2Vjb25kcykgdG8gcmVkdWNlIHRoZSBnYWluIGJ5IDEwZEIsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IC4wMDMsIHJhbmdlIDAgLSAxXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGtuZWUgICAgICAgQSBkZWNpYmVsIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgcmFuZ2UgYWJvdmUgdGhlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyZXNob2xkIHdoZXJlIHRoZSBjdXJ2ZSBzbW9vdGhseSB0cmFuc2l0aW9ucyB0byB0aGUgXCJyYXRpb1wiIHBvcnRpb24uXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDMwLCByYW5nZSAwIC0gNDBcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gcmF0aW8gICAgICBUaGUgYW1vdW50IG9mIGRCIGNoYW5nZSBpbiBpbnB1dCBmb3IgYSAxIGRCIGNoYW5nZSBpbiBvdXRwdXRcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gMTIsIHJhbmdlIDEgLSAyMFxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSB0aHJlc2hvbGQgIFRoZSBkZWNpYmVsIHZhbHVlIGFib3ZlIHdoaWNoIHRoZSBjb21wcmVzc2lvbiB3aWxsIHN0YXJ0IHRha2luZyBlZmZlY3RcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gLTI0LCByYW5nZSAtMTAwIC0gMFxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSByZWxlYXNlICAgIFRoZSBhbW91bnQgb2YgdGltZSAoaW4gc2Vjb25kcykgdG8gaW5jcmVhc2UgdGhlIGdhaW4gYnkgMTBkQlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAuMjUsIHJhbmdlIDAgLSAxXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KGF0dGFjaywga25lZSwgcmF0aW8sIHRocmVzaG9sZCwgcmVsZWFzZSkge1xuICAgICAgaWYgKHR5cGVvZiBhdHRhY2sgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRoaXMuYXR0YWNrKGF0dGFjayk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2Yga25lZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhpcy5rbmVlKGtuZWUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIHJhdGlvICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aGlzLnJhdGlvKHJhdGlvKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiB0aHJlc2hvbGQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRoaXMudGhyZXNob2xkKHRocmVzaG9sZCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgcmVsZWFzZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhpcy5yZWxlYXNlKHJlbGVhc2UpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgY3VycmVudCBhdHRhY2sgb3Igc2V0IHZhbHVlIHcvIHRpbWUgcmFtcFxuICAgICAqXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGF0dGFja1xuICAgICAqIEBmb3IgcDUuQ29tcHJlc3NvclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbYXR0YWNrXSBBdHRhY2sgaXMgdGhlIGFtb3VudCBvZiB0aW1lIChpbiBzZWNvbmRzKSB0byByZWR1Y2UgdGhlIGdhaW4gYnkgMTBkQixcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IC4wMDMsIHJhbmdlIDAgLSAxXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFt0aW1lXSAgQXNzaWduIHRpbWUgdmFsdWUgdG8gc2NoZWR1bGUgdGhlIGNoYW5nZSBpbiB2YWx1ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiYXR0YWNrXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGF0dGFjayhfYXR0YWNrLCB0aW1lKSB7XG4gICAgICB2YXIgdCA9IHRpbWUgfHwgMDtcblxuICAgICAgaWYgKHR5cGVvZiBfYXR0YWNrID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLmNvbXByZXNzb3IuYXR0YWNrLnZhbHVlID0gX2F0dGFjaztcbiAgICAgICAgdGhpcy5jb21wcmVzc29yLmF0dGFjay5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDEgKyB0KTtcbiAgICAgICAgdGhpcy5jb21wcmVzc29yLmF0dGFjay5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShfYXR0YWNrLCB0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMiArIHQpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgX2F0dGFjayAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgX2F0dGFjay5jb25uZWN0KHRoaXMuY29tcHJlc3Nvci5hdHRhY2spO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jb21wcmVzc29yLmF0dGFjay52YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGN1cnJlbnQga25lZSBvciBzZXQgdmFsdWUgdy8gdGltZSByYW1wXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIGtuZWVcbiAgICAgKiBAZm9yIHA1LkNvbXByZXNzb3JcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW2tuZWVdIEEgZGVjaWJlbCB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIHJhbmdlIGFib3ZlIHRoZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgdGhyZXNob2xkIHdoZXJlIHRoZSBjdXJ2ZSBzbW9vdGhseSB0cmFuc2l0aW9ucyB0byB0aGUgXCJyYXRpb1wiIHBvcnRpb24uXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gMzAsIHJhbmdlIDAgLSA0MFxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbdGltZV0gIEFzc2lnbiB0aW1lIHZhbHVlIHRvIHNjaGVkdWxlIHRoZSBjaGFuZ2UgaW4gdmFsdWVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImtuZWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24ga25lZShfa25lZSwgdGltZSkge1xuICAgICAgdmFyIHQgPSB0aW1lIHx8IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgX2tuZWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMuY29tcHJlc3Nvci5rbmVlLnZhbHVlID0gX2tuZWU7XG4gICAgICAgIHRoaXMuY29tcHJlc3Nvci5rbmVlLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMSArIHQpO1xuICAgICAgICB0aGlzLmNvbXByZXNzb3Iua25lZS5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShfa25lZSwgdGhpcy5hYy5jdXJyZW50VGltZSArIDAuMDIgKyB0KTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIF9rbmVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfa25lZS5jb25uZWN0KHRoaXMuY29tcHJlc3Nvci5rbmVlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcHJlc3Nvci5rbmVlLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgY3VycmVudCByYXRpbyBvciBzZXQgdmFsdWUgdy8gdGltZSByYW1wXG4gICAgICogQG1ldGhvZCByYXRpb1xuICAgICAqIEBmb3IgcDUuQ29tcHJlc3NvclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcmF0aW9dICAgICAgVGhlIGFtb3VudCBvZiBkQiBjaGFuZ2UgaW4gaW5wdXQgZm9yIGEgMSBkQiBjaGFuZ2UgaW4gb3V0cHV0XG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDEyLCByYW5nZSAxIC0gMjBcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3RpbWVdICBBc3NpZ24gdGltZSB2YWx1ZSB0byBzY2hlZHVsZSB0aGUgY2hhbmdlIGluIHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJyYXRpb1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByYXRpbyhfcmF0aW8sIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIF9yYXRpbyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5jb21wcmVzc29yLnJhdGlvLnZhbHVlID0gX3JhdGlvO1xuICAgICAgICB0aGlzLmNvbXByZXNzb3IucmF0aW8uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMuY29tcHJlc3Nvci5yYXRpby5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShfcmF0aW8sIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBfcmF0aW8gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIF9yYXRpby5jb25uZWN0KHRoaXMuY29tcHJlc3Nvci5yYXRpbyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXByZXNzb3IucmF0aW8udmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBjdXJyZW50IHRocmVzaG9sZCBvciBzZXQgdmFsdWUgdy8gdGltZSByYW1wXG4gICAgICogQG1ldGhvZCB0aHJlc2hvbGRcbiAgICAgKiBAZm9yIHA1LkNvbXByZXNzb3JcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gdGhyZXNob2xkICBUaGUgZGVjaWJlbCB2YWx1ZSBhYm92ZSB3aGljaCB0aGUgY29tcHJlc3Npb24gd2lsbCBzdGFydCB0YWtpbmcgZWZmZWN0XG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IC0yNCwgcmFuZ2UgLTEwMCAtIDBcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3RpbWVdICBBc3NpZ24gdGltZSB2YWx1ZSB0byBzY2hlZHVsZSB0aGUgY2hhbmdlIGluIHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJ0aHJlc2hvbGRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdGhyZXNob2xkKF90aHJlc2hvbGQsIHRpbWUpIHtcbiAgICAgIHZhciB0ID0gdGltZSB8fCAwO1xuXG4gICAgICBpZiAodHlwZW9mIF90aHJlc2hvbGQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMuY29tcHJlc3Nvci50aHJlc2hvbGQudmFsdWUgPSBfdGhyZXNob2xkO1xuICAgICAgICB0aGlzLmNvbXByZXNzb3IudGhyZXNob2xkLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMSArIHQpO1xuICAgICAgICB0aGlzLmNvbXByZXNzb3IudGhyZXNob2xkLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKF90aHJlc2hvbGQsIHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAyICsgdCk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBfdGhyZXNob2xkICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfdGhyZXNob2xkLmNvbm5lY3QodGhpcy5jb21wcmVzc29yLnRocmVzaG9sZCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXByZXNzb3IudGhyZXNob2xkLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgY3VycmVudCByZWxlYXNlIG9yIHNldCB2YWx1ZSB3LyB0aW1lIHJhbXBcbiAgICAgKiBAbWV0aG9kIHJlbGVhc2VcbiAgICAgKiBAZm9yIHA1LkNvbXByZXNzb3JcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gcmVsZWFzZSAgICBUaGUgYW1vdW50IG9mIHRpbWUgKGluIHNlY29uZHMpIHRvIGluY3JlYXNlIHRoZSBnYWluIGJ5IDEwZEJcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gLjI1LCByYW5nZSAwIC0gMVxuICAgICAqXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFt0aW1lXSAgQXNzaWduIHRpbWUgdmFsdWUgdG8gc2NoZWR1bGUgdGhlIGNoYW5nZSBpbiB2YWx1ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicmVsZWFzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWxlYXNlKF9yZWxlYXNlLCB0aW1lKSB7XG4gICAgICB2YXIgdCA9IHRpbWUgfHwgMDtcblxuICAgICAgaWYgKHR5cGVvZiBfcmVsZWFzZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5jb21wcmVzc29yLnJlbGVhc2UudmFsdWUgPSBfcmVsZWFzZTtcbiAgICAgICAgdGhpcy5jb21wcmVzc29yLnJlbGVhc2UuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMuYWMuY3VycmVudFRpbWUgKyAwLjAxICsgdCk7XG4gICAgICAgIHRoaXMuY29tcHJlc3Nvci5yZWxlYXNlLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKF9yZWxlYXNlLCB0aGlzLmFjLmN1cnJlbnRUaW1lICsgMC4wMiArIHQpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbnVtYmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfcmVsZWFzZS5jb25uZWN0KHRoaXMuY29tcHJlc3Nvci5yZWxlYXNlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcHJlc3Nvci5yZWxlYXNlLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIGN1cnJlbnQgcmVkdWN0aW9uIHZhbHVlXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIHJlZHVjdGlvblxuICAgICAqIEBmb3IgcDUuQ29tcHJlc3NvclxuICAgICAqIEByZXR1cm4ge051bWJlcn0gVmFsdWUgb2YgdGhlIGFtb3VudCBvZiBnYWluIHJlZHVjdGlvbiB0aGF0IGlzIGFwcGxpZWQgdG8gdGhlIHNpZ25hbFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicmVkdWN0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZHVjdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmNvbXByZXNzb3IucmVkdWN0aW9uLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXNwb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICBjb21wcmVzc29yX2dldChjb21wcmVzc29yX2dldFByb3RvdHlwZU9mKENvbXByZXNzb3IucHJvdG90eXBlKSwgXCJkaXNwb3NlXCIsIHRoaXMpLmNhbGwodGhpcyk7XG5cbiAgICAgIGlmICh0aGlzLmNvbXByZXNzb3IpIHtcbiAgICAgICAgdGhpcy5jb21wcmVzc29yLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuY29tcHJlc3NvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29tcHJlc3Nvcjtcbn0oZWZmZWN0KTtcblxuIHZhciBjb21wcmVzc29yID0gKENvbXByZXNzb3IpO1xuZnVuY3Rpb24gcGVha0RldGVjdF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIHBlYWtEZXRlY3RfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIHBlYWtEZXRlY3RfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBwZWFrRGV0ZWN0X2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBwZWFrRGV0ZWN0X2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbi8qKlxuICogIDxwPlBlYWtEZXRlY3Qgd29ya3MgaW4gY29uanVuY3Rpb24gd2l0aCBwNS5GRlQgdG9cbiAqICBsb29rIGZvciBvbnNldHMgaW4gc29tZSBvciBhbGwgb2YgdGhlIGZyZXF1ZW5jeSBzcGVjdHJ1bS5cbiAqICA8L3A+XG4gKiAgPHA+XG4gKiAgVG8gdXNlIHA1LlBlYWtEZXRlY3QsIGNhbGwgPGNvZGU+dXBkYXRlPC9jb2RlPiBpbiB0aGUgZHJhdyBsb29wXG4gKiAgYW5kIHBhc3MgaW4gYSBwNS5GRlQgb2JqZWN0LlxuICogIDwvcD5cbiAqICA8cD5cbiAqICBZb3UgY2FuIGxpc3RlbiBmb3IgYSBzcGVjaWZpYyBwYXJ0IG9mIHRoZSBmcmVxdWVuY3kgc3BlY3RydW0gYnlcbiAqICBzZXR0aW5nIHRoZSByYW5nZSBiZXR3ZWVuIDxjb2RlPmZyZXExPC9jb2RlPiBhbmQgPGNvZGU+ZnJlcTI8L2NvZGU+LlxuICogIDwvcD5cbiAqXG4gKiAgPHA+PGNvZGU+dGhyZXNob2xkPC9jb2RlPiBpcyB0aGUgdGhyZXNob2xkIGZvciBkZXRlY3RpbmcgYSBwZWFrLFxuICogIHNjYWxlZCBiZXR3ZWVuIDAgYW5kIDEuIEl0IGlzIGxvZ2FyaXRobWljLCBzbyAwLjEgaXMgaGFsZiBhcyBsb3VkXG4gKiAgYXMgMS4wLjwvcD5cbiAqXG4gKiAgPHA+XG4gKiAgVGhlIHVwZGF0ZSBtZXRob2QgaXMgbWVhbnQgdG8gYmUgcnVuIGluIHRoZSBkcmF3IGxvb3AsIGFuZFxuICogIDxiPmZyYW1lczwvYj4gZGV0ZXJtaW5lcyBob3cgbWFueSBsb29wcyBtdXN0IHBhc3MgYmVmb3JlXG4gKiAgYW5vdGhlciBwZWFrIGNhbiBiZSBkZXRlY3RlZC5cbiAqICBGb3IgZXhhbXBsZSwgaWYgdGhlIGZyYW1lUmF0ZSgpID0gNjAsIHlvdSBjb3VsZCBkZXRlY3QgdGhlIGJlYXQgb2YgYVxuICogIDEyMCBiZWF0LXBlci1taW51dGUgc29uZyB3aXRoIHRoaXMgZXF1YXRpb246XG4gKiAgPGNvZGU+IGZyYW1lc1BlclBlYWsgPSA2MCAvIChlc3RpbWF0ZWRCUE0gLyA2MCApOzwvY29kZT5cbiAqICA8L3A+XG4gKlxuICogIDxwPlxuICogIEJhc2VkIG9uIGV4YW1wbGUgY29udHJpYnR1ZWQgYnkgQGIycmVuZ2VyLCBhbmQgYSBzaW1wbGUgYmVhdCBkZXRlY3Rpb25cbiAqICBleHBsYW5hdGlvbiBieSA8YVxuICogIGhyZWY9XCJodHRwOi8vd3d3LmFpcnRpZ2h0aW50ZXJhY3RpdmUuY29tLzIwMTMvMTAvbWFraW5nLWF1ZGlvLXJlYWN0aXZlLXZpc3VhbHMvXCJcbiAqICB0YXJnZXQ9XCJfYmxhbmtcIj5GZWxpeCBUdXJuZXI8L2E+LlxuICogIDwvcD5cbiAqXG4gKiAgQGNsYXNzICBwNS5QZWFrRGV0ZWN0XG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFtmcmVxMV0gICAgIGxvd0ZyZXF1ZW5jeSAtIGRlZmF1bHRzIHRvIDIwSHpcbiAqICBAcGFyYW0ge051bWJlcn0gW2ZyZXEyXSAgICAgaGlnaEZyZXF1ZW5jeSAtIGRlZmF1bHRzIHRvIDIwMDAwIEh6XG4gKiAgQHBhcmFtIHtOdW1iZXJ9IFt0aHJlc2hvbGRdIFRocmVzaG9sZCBmb3IgZGV0ZWN0aW5nIGEgYmVhdCBiZXR3ZWVuIDAgYW5kIDFcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlZCBsb2dhcml0aG1pY2FsbHkgd2hlcmUgMC4xIGlzIDEvMiB0aGUgbG91ZG5lc3NcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIDEuMC4gRGVmYXVsdHMgdG8gMC4zNS5cbiAqICBAcGFyYW0ge051bWJlcn0gW2ZyYW1lc1BlclBlYWtdICAgICBEZWZhdWx0cyB0byAyMC5cbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKlxuICogIHZhciBjbnYsIHNvdW5kRmlsZSwgZmZ0LCBwZWFrRGV0ZWN0O1xuICogIHZhciBlbGxpcHNlV2lkdGggPSAxMDtcbiAqXG4gKiAgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAqICAgIHNvdW5kRmlsZSA9IGxvYWRTb3VuZCgnYXNzZXRzL2JlYXQubXAzJyk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGJhY2tncm91bmQoMCk7XG4gKiAgICBub1N0cm9rZSgpO1xuICogICAgZmlsbCgyNTUpO1xuICogICAgdGV4dEFsaWduKENFTlRFUik7XG4gKlxuICogICAgLy8gcDUuUGVha0RldGVjdCByZXF1aXJlcyBhIHA1LkZGVFxuICogICAgZmZ0ID0gbmV3IHA1LkZGVCgpO1xuICogICAgcGVha0RldGVjdCA9IG5ldyBwNS5QZWFrRGV0ZWN0KCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBkcmF3KCkge1xuICogICAgYmFja2dyb3VuZCgwKTtcbiAqICAgIHRleHQoJ2NsaWNrIHRvIHBsYXkvcGF1c2UnLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKlxuICogICAgLy8gcGVha0RldGVjdCBhY2NlcHRzIGFuIGZmdCBwb3N0LWFuYWx5c2lzXG4gKiAgICBmZnQuYW5hbHl6ZSgpO1xuICogICAgcGVha0RldGVjdC51cGRhdGUoZmZ0KTtcbiAqXG4gKiAgICBpZiAoIHBlYWtEZXRlY3QuaXNEZXRlY3RlZCApIHtcbiAqICAgICAgZWxsaXBzZVdpZHRoID0gNTA7XG4gKiAgICB9IGVsc2Uge1xuICogICAgICBlbGxpcHNlV2lkdGggKj0gMC45NTtcbiAqICAgIH1cbiAqXG4gKiAgICBlbGxpcHNlKHdpZHRoLzIsIGhlaWdodC8yLCBlbGxpcHNlV2lkdGgsIGVsbGlwc2VXaWR0aCk7XG4gKiAgfVxuICpcbiAqICAvLyB0b2dnbGUgcGxheS9zdG9wIHdoZW4gY2FudmFzIGlzIGNsaWNrZWRcbiAqICBmdW5jdGlvbiBtb3VzZUNsaWNrZWQoKSB7XG4gKiAgICBpZiAobW91c2VYID4gMCAmJiBtb3VzZVggPCB3aWR0aCAmJiBtb3VzZVkgPiAwICYmIG1vdXNlWSA8IGhlaWdodCkge1xuICogICAgICBpZiAoc291bmRGaWxlLmlzUGxheWluZygpICkge1xuICogICAgICAgIHNvdW5kRmlsZS5zdG9wKCk7XG4gKiAgICAgIH0gZWxzZSB7XG4gKiAgICAgICAgc291bmRGaWxlLnBsYXkoKTtcbiAqICAgICAgfVxuICogICAgfVxuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKi9cbnZhciBQZWFrRGV0ZWN0ID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUGVha0RldGVjdChmcmVxMSwgZnJlcTIsIHRocmVzaG9sZCwgX2ZyYW1lc1BlclBlYWspIHtcbiAgICBwZWFrRGV0ZWN0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBlYWtEZXRlY3QpO1xuXG4gICAgdGhpcy5mcmFtZXNQZXJQZWFrID0gX2ZyYW1lc1BlclBlYWsgfHwgMjA7XG4gICAgdGhpcy5mcmFtZXNTaW5jZUxhc3RQZWFrID0gMDtcbiAgICB0aGlzLmRlY2F5UmF0ZSA9IDAuOTU7XG4gICAgdGhpcy50aHJlc2hvbGQgPSB0aHJlc2hvbGQgfHwgMC4zNTtcbiAgICB0aGlzLmN1dG9mZiA9IDA7IFxuXG4gICAgdGhpcy5jdXRvZmZNdWx0ID0gMS41O1xuICAgIHRoaXMuZW5lcmd5ID0gMDtcbiAgICB0aGlzLnBlbmVyZ3kgPSAwOyBcblxuICAgIHRoaXMuY3VycmVudFZhbHVlID0gMDtcbiAgICAvKipcbiAgICAgKiAgaXNEZXRlY3RlZCBpcyBzZXQgdG8gdHJ1ZSB3aGVuIGEgcGVhayBpcyBkZXRlY3RlZC5cbiAgICAgKlxuICAgICAqICBAYXR0cmlidXRlIGlzRGV0ZWN0ZWQge0Jvb2xlYW59XG4gICAgICogIEBkZWZhdWx0ICBmYWxzZVxuICAgICAqL1xuXG4gICAgdGhpcy5pc0RldGVjdGVkID0gZmFsc2U7XG4gICAgdGhpcy5mMSA9IGZyZXExIHx8IDQwO1xuICAgIHRoaXMuZjIgPSBmcmVxMiB8fCAyMDAwMDsgXG5cbiAgICB0aGlzLl9vblBlYWsgPSBmdW5jdGlvbiAoKSB7fTtcbiAgfVxuICAvKipcbiAgICogIFRoZSB1cGRhdGUgbWV0aG9kIGlzIHJ1biBpbiB0aGUgZHJhdyBsb29wLlxuICAgKlxuICAgKiAgQWNjZXB0cyBhbiBGRlQgb2JqZWN0LiBZb3UgbXVzdCBjYWxsIC5hbmFseXplKClcbiAgICogIG9uIHRoZSBGRlQgb2JqZWN0IHByaW9yIHRvIHVwZGF0aW5nIHRoZSBwZWFrRGV0ZWN0XG4gICAqICBiZWNhdXNlIGl0IHJlbGllcyBvbiBhIGNvbXBsZXRlZCBGRlQgYW5hbHlzaXMuXG4gICAqXG4gICAqICBAbWV0aG9kICB1cGRhdGVcbiAgICogIEBwYXJhbSAge3A1LkZGVH0gZmZ0T2JqZWN0IEEgcDUuRkZUIG9iamVjdFxuICAgKi9cblxuXG4gIHBlYWtEZXRlY3RfY3JlYXRlQ2xhc3MoUGVha0RldGVjdCwgW3tcbiAgICBrZXk6IFwidXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShmZnRPYmplY3QpIHtcbiAgICAgIHZhciBucmcgPSB0aGlzLmVuZXJneSA9IGZmdE9iamVjdC5nZXRFbmVyZ3kodGhpcy5mMSwgdGhpcy5mMikgLyAyNTU7XG5cbiAgICAgIGlmIChucmcgPiB0aGlzLmN1dG9mZiAmJiBucmcgPiB0aGlzLnRocmVzaG9sZCAmJiBucmcgLSB0aGlzLnBlbmVyZ3kgPiAwKSB7XG4gICAgICAgIHRoaXMuX29uUGVhaygpO1xuXG4gICAgICAgIHRoaXMuaXNEZXRlY3RlZCA9IHRydWU7IFxuXG4gICAgICAgIHRoaXMuY3V0b2ZmID0gbnJnICogdGhpcy5jdXRvZmZNdWx0O1xuICAgICAgICB0aGlzLmZyYW1lc1NpbmNlTGFzdFBlYWsgPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pc0RldGVjdGVkID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKHRoaXMuZnJhbWVzU2luY2VMYXN0UGVhayA8PSB0aGlzLmZyYW1lc1BlclBlYWspIHtcbiAgICAgICAgICB0aGlzLmZyYW1lc1NpbmNlTGFzdFBlYWsrKztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmN1dG9mZiAqPSB0aGlzLmRlY2F5UmF0ZTtcbiAgICAgICAgICB0aGlzLmN1dG9mZiA9IE1hdGgubWF4KHRoaXMuY3V0b2ZmLCB0aGlzLnRocmVzaG9sZCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5jdXJyZW50VmFsdWUgPSBucmc7XG4gICAgICB0aGlzLnBlbmVyZ3kgPSBucmc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBvblBlYWsgYWNjZXB0cyB0d28gYXJndW1lbnRzOiBhIGZ1bmN0aW9uIHRvIGNhbGwgd2hlblxuICAgICAqICBhIHBlYWsgaXMgZGV0ZWN0ZWQuIFRoZSB2YWx1ZSBvZiB0aGUgcGVhayxcbiAgICAgKiAgYmV0d2VlbiAwLjAgYW5kIDEuMCwgaXMgcGFzc2VkIHRvIHRoZSBjYWxsYmFjay5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBvblBlYWtcbiAgICAgKiAgQHBhcmFtICB7RnVuY3Rpb259IGNhbGxiYWNrIE5hbWUgb2YgYSBmdW5jdGlvbiB0aGF0IHdpbGxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNhbGxlZCB3aGVuIGEgcGVhayBpc1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0ZWN0ZWQuXG4gICAgICogIEBwYXJhbSAge09iamVjdH0gICBbdmFsXSAgICBPcHRpb25hbCB2YWx1ZSB0byBwYXNzXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRvIHRoZSBmdW5jdGlvbiB3aGVuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHBlYWsgaXMgZGV0ZWN0ZWQuXG4gICAgICogIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogIHZhciBjbnYsIHNvdW5kRmlsZSwgZmZ0LCBwZWFrRGV0ZWN0O1xuICAgICAqICB2YXIgZWxsaXBzZVdpZHRoID0gMDtcbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgICAqICAgIHNvdW5kRmlsZSA9IGxvYWRTb3VuZCgnYXNzZXRzL2JlYXQubXAzJyk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICAgKiAgICBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLDEwMCk7XG4gICAgICogICAgdGV4dEFsaWduKENFTlRFUik7XG4gICAgICpcbiAgICAgKiAgICBmZnQgPSBuZXcgcDUuRkZUKCk7XG4gICAgICogICAgcGVha0RldGVjdCA9IG5ldyBwNS5QZWFrRGV0ZWN0KCk7XG4gICAgICpcbiAgICAgKiAgICBzZXR1cFNvdW5kKCk7XG4gICAgICpcbiAgICAgKiAgICAvLyB3aGVuIGEgYmVhdCBpcyBkZXRlY3RlZCwgY2FsbCB0cmlnZ2VyQmVhdCgpXG4gICAgICogICAgcGVha0RldGVjdC5vblBlYWsodHJpZ2dlckJlYXQpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gZHJhdygpIHtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDApO1xuICAgICAqICAgIGZpbGwoMjU1KTtcbiAgICAgKiAgICB0ZXh0KCdjbGljayB0byBwbGF5Jywgd2lkdGgvMiwgaGVpZ2h0LzIpO1xuICAgICAqXG4gICAgICogICAgZmZ0LmFuYWx5emUoKTtcbiAgICAgKiAgICBwZWFrRGV0ZWN0LnVwZGF0ZShmZnQpO1xuICAgICAqXG4gICAgICogICAgZWxsaXBzZVdpZHRoICo9IDAuOTU7XG4gICAgICogICAgZWxsaXBzZSh3aWR0aC8yLCBoZWlnaHQvMiwgZWxsaXBzZVdpZHRoLCBlbGxpcHNlV2lkdGgpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgLy8gdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYnkgcGVha0RldGVjdC5vblBlYWtcbiAgICAgKiAgZnVuY3Rpb24gdHJpZ2dlckJlYXQoKSB7XG4gICAgICogICAgZWxsaXBzZVdpZHRoID0gNTA7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICAvLyBtb3VzZWNsaWNrIHN0YXJ0cy9zdG9wcyBzb3VuZFxuICAgICAqICBmdW5jdGlvbiBzZXR1cFNvdW5kKCkge1xuICAgICAqICAgIGNudi5tb3VzZUNsaWNrZWQoIGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgaWYgKHNvdW5kRmlsZS5pc1BsYXlpbmcoKSApIHtcbiAgICAgKiAgICAgICAgc291bmRGaWxlLnN0b3AoKTtcbiAgICAgKiAgICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgIHNvdW5kRmlsZS5wbGF5KCk7XG4gICAgICogICAgICB9XG4gICAgICogICAgfSk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwib25QZWFrXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uUGVhayhjYWxsYmFjaywgdmFsKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgIHNlbGYuX29uUGVhayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2FsbGJhY2soc2VsZi5lbmVyZ3ksIHZhbCk7XG4gICAgICB9O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQZWFrRGV0ZWN0O1xufSgpO1xuXG4gdmFyIHBlYWtEZXRlY3QgPSAoUGVha0RldGVjdCk7XG5mdW5jdGlvbiBzb3VuZFJlY29yZGVyX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gc291bmRSZWNvcmRlcl9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gc291bmRSZWNvcmRlcl9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIHNvdW5kUmVjb3JkZXJfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIHNvdW5kUmVjb3JkZXJfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuXG5cblxudmFyIHNvdW5kUmVjb3JkZXJfYWMgPSBtYWluLmF1ZGlvY29udGV4dDtcbi8qKlxuICogIDxwPlJlY29yZCBzb3VuZHMgZm9yIHBsYXliYWNrIGFuZC9vciB0byBzYXZlIGFzIGEgLndhdiBmaWxlLlxuICogIFRoZSBwNS5Tb3VuZFJlY29yZGVyIHJlY29yZHMgYWxsIHNvdW5kIG91dHB1dCBmcm9tIHlvdXIgc2tldGNoLFxuICogIG9yIGNhbiBiZSBhc3NpZ25lZCBhIHNwZWNpZmljIHNvdXJjZSB3aXRoIHNldElucHV0KCkuPC9wPlxuICogIDxwPlRoZSByZWNvcmQoKSBtZXRob2QgYWNjZXB0cyBhIHA1LlNvdW5kRmlsZSBhcyBhIHBhcmFtZXRlci5cbiAqICBXaGVuIHBsYXliYWNrIGlzIHN0b3BwZWQgKGVpdGhlciBhZnRlciB0aGUgZ2l2ZW4gYW1vdW50IG9mIHRpbWUsXG4gKiAgb3Igd2l0aCB0aGUgc3RvcCgpIG1ldGhvZCksIHRoZSBwNS5Tb3VuZFJlY29yZGVyIHdpbGwgc2VuZCBpdHNcbiAqICByZWNvcmRpbmcgdG8gdGhhdCBwNS5Tb3VuZEZpbGUgZm9yIHBsYXliYWNrLjwvcD5cbiAqXG4gKiAgQGNsYXNzIHA1LlNvdW5kUmVjb3JkZXJcbiAqICBAY29uc3RydWN0b3JcbiAqICBAZXhhbXBsZVxuICogIDxkaXY+PGNvZGU+XG4gKiAgbGV0IG1pYywgcmVjb3JkZXIsIHNvdW5kRmlsZTtcbiAqICBsZXQgc3RhdGUgPSAwO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgY252Lm1vdXNlUHJlc3NlZChjYW52YXNQcmVzc2VkKTtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHRBbGlnbihDRU5URVIsIENFTlRFUik7XG4gKlxuICogICAgLy8gY3JlYXRlIGFuIGF1ZGlvIGluXG4gKiAgICBtaWMgPSBuZXcgcDUuQXVkaW9JbigpO1xuICpcbiAqICAgIC8vIHByb21wdHMgdXNlciB0byBlbmFibGUgdGhlaXIgYnJvd3NlciBtaWNcbiAqICAgIG1pYy5zdGFydCgpO1xuICpcbiAqICAgIC8vIGNyZWF0ZSBhIHNvdW5kIHJlY29yZGVyXG4gKiAgICByZWNvcmRlciA9IG5ldyBwNS5Tb3VuZFJlY29yZGVyKCk7XG4gKlxuICogICAgLy8gY29ubmVjdCB0aGUgbWljIHRvIHRoZSByZWNvcmRlclxuICogICAgcmVjb3JkZXIuc2V0SW5wdXQobWljKTtcbiAqXG4gKiAgICAvLyB0aGlzIHNvdW5kIGZpbGUgd2lsbCBiZSB1c2VkIHRvXG4gKiAgICAvLyBwbGF5YmFjayAmIHNhdmUgdGhlIHJlY29yZGluZ1xuICogICAgc291bmRGaWxlID0gbmV3IHA1LlNvdW5kRmlsZSgpO1xuICpcbiAqICAgIHRleHQoJ3RhcCB0byByZWNvcmQnLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBjYW52YXNQcmVzc2VkKCkge1xuICogICAgLy8gZW5zdXJlIGF1ZGlvIGlzIGVuYWJsZWRcbiAqICAgIHVzZXJTdGFydEF1ZGlvKCk7XG4gKlxuICogICAgLy8gbWFrZSBzdXJlIHVzZXIgZW5hYmxlZCB0aGUgbWljXG4gKiAgICBpZiAoc3RhdGUgPT09IDAgJiYgbWljLmVuYWJsZWQpIHtcbiAqXG4gKiAgICAgIC8vIHJlY29yZCB0byBvdXIgcDUuU291bmRGaWxlXG4gKiAgICAgIHJlY29yZGVyLnJlY29yZChzb3VuZEZpbGUpO1xuICpcbiAqICAgICAgYmFja2dyb3VuZCgyNTUsMCwwKTtcbiAqICAgICAgdGV4dCgnUmVjb3JkaW5nIScsIHdpZHRoLzIsIGhlaWdodC8yKTtcbiAqICAgICAgc3RhdGUrKztcbiAqICAgIH1cbiAqICAgIGVsc2UgaWYgKHN0YXRlID09PSAxKSB7XG4gKiAgICAgIGJhY2tncm91bmQoMCwyNTUsMCk7XG4gKlxuICogICAgICAvLyBzdG9wIHJlY29yZGVyIGFuZFxuICogICAgICAvLyBzZW5kIHJlc3VsdCB0byBzb3VuZEZpbGVcbiAqICAgICAgcmVjb3JkZXIuc3RvcCgpO1xuICpcbiAqICAgICAgdGV4dCgnRG9uZSEgVGFwIHRvIHBsYXkgYW5kIGRvd25sb2FkJywgd2lkdGgvMiwgaGVpZ2h0LzIsIHdpZHRoIC0gMjApO1xuICogICAgICBzdGF0ZSsrO1xuICogICAgfVxuICpcbiAqICAgIGVsc2UgaWYgKHN0YXRlID09PSAyKSB7XG4gKiAgICAgIHNvdW5kRmlsZS5wbGF5KCk7IC8vIHBsYXkgdGhlIHJlc3VsdCFcbiAqICAgICAgc2F2ZShzb3VuZEZpbGUsICdteVNvdW5kLndhdicpO1xuICogICAgICBzdGF0ZSsrO1xuICogICAgfVxuICogIH1cbiAqICA8L2Rpdj48L2NvZGU+XG4gKi9cblxudmFyIHNvdW5kUmVjb3JkZXJfU291bmRSZWNvcmRlciA9XG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNvdW5kUmVjb3JkZXIoKSB7XG4gICAgc291bmRSZWNvcmRlcl9jbGFzc0NhbGxDaGVjayh0aGlzLCBTb3VuZFJlY29yZGVyKTtcblxuICAgIHRoaXMuaW5wdXQgPSBzb3VuZFJlY29yZGVyX2FjLmNyZWF0ZUdhaW4oKTtcbiAgICB0aGlzLm91dHB1dCA9IHNvdW5kUmVjb3JkZXJfYWMuY3JlYXRlR2FpbigpO1xuICAgIHRoaXMuX2lucHV0Q2hhbm5lbHMgPSAyO1xuICAgIHRoaXMuX291dHB1dENoYW5uZWxzID0gMjsgXG5cbiAgICB2YXIgd29ya2xldEJ1ZmZlclNpemUgPSBzYWZlQnVmZmVyU2l6ZSgxMDI0KTtcbiAgICB0aGlzLl93b3JrbGV0Tm9kZSA9IG5ldyBBdWRpb1dvcmtsZXROb2RlKHNvdW5kUmVjb3JkZXJfYWMsIHByb2Nlc3Nvck5hbWVzX2RlZmF1bHQuYS5yZWNvcmRlclByb2Nlc3Nvciwge1xuICAgICAgb3V0cHV0Q2hhbm5lbENvdW50OiBbdGhpcy5fb3V0cHV0Q2hhbm5lbHNdLFxuICAgICAgcHJvY2Vzc29yT3B0aW9uczoge1xuICAgICAgICBudW1JbnB1dENoYW5uZWxzOiB0aGlzLl9pbnB1dENoYW5uZWxzLFxuICAgICAgICBidWZmZXJTaXplOiB3b3JrbGV0QnVmZmVyU2l6ZVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5fd29ya2xldE5vZGUucG9ydC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5kYXRhLm5hbWUgPT09ICdidWZmZXJzJykge1xuICAgICAgICB2YXIgYnVmZmVycyA9IFtuZXcgRmxvYXQzMkFycmF5KGV2ZW50LmRhdGEubGVmdEJ1ZmZlciksIG5ldyBGbG9hdDMyQXJyYXkoZXZlbnQuZGF0YS5yaWdodEJ1ZmZlcildO1xuXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrKGJ1ZmZlcnMpO1xuICAgICAgfVxuICAgIH0uYmluZCh0aGlzKTtcbiAgICAvKipcbiAgICAgKiAgY2FsbGJhY2sgaW52b2tlZCB3aGVuIHRoZSByZWNvcmRpbmcgaXMgb3ZlclxuICAgICAqICBAcHJpdmF0ZVxuICAgICAqICBAdHlwZSBGdW5jdGlvbihGbG9hdDMyQXJyYXkpXG4gICAgICovXG5cblxuICAgIHRoaXMuX2NhbGxiYWNrID0gZnVuY3Rpb24gKCkge307IFxuXG5cbiAgICB0aGlzLl93b3JrbGV0Tm9kZS5jb25uZWN0KHA1LnNvdW5kT3V0Ll9zaWxlbnROb2RlKTtcblxuICAgIHRoaXMuc2V0SW5wdXQoKTsgXG5cbiAgICBtYWluLnNvdW5kQXJyYXkucHVzaCh0aGlzKTtcbiAgfVxuICAvKipcbiAgICogIENvbm5lY3QgYSBzcGVjaWZpYyBkZXZpY2UgdG8gdGhlIHA1LlNvdW5kUmVjb3JkZXIuXG4gICAqICBJZiBubyBwYXJhbWV0ZXIgaXMgZ2l2ZW4sIHA1LlNvdW5kUmVjb3JlciB3aWxsIHJlY29yZFxuICAgKiAgYWxsIGF1ZGlibGUgcDUuc291bmQgZnJvbSB5b3VyIHNrZXRjaC5cbiAgICpcbiAgICogIEBtZXRob2QgIHNldElucHV0XG4gICAqICBAZm9yIHA1LlNvdW5kUmVjb3JkZXJcbiAgICogIEBwYXJhbSB7T2JqZWN0fSBbdW5pdF0gcDUuc291bmQgb2JqZWN0IG9yIGEgd2ViIGF1ZGlvIHVuaXRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgdGhhdCBvdXRwdXRzIHNvdW5kXG4gICAqL1xuXG5cbiAgc291bmRSZWNvcmRlcl9jcmVhdGVDbGFzcyhTb3VuZFJlY29yZGVyLCBbe1xuICAgIGtleTogXCJzZXRJbnB1dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRJbnB1dCh1bml0KSB7XG4gICAgICB0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgIHRoaXMuaW5wdXQgPSBudWxsO1xuICAgICAgdGhpcy5pbnB1dCA9IHNvdW5kUmVjb3JkZXJfYWMuY3JlYXRlR2FpbigpO1xuICAgICAgdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMuX3dvcmtsZXROb2RlKTtcbiAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLm91dHB1dCk7XG5cbiAgICAgIGlmICh1bml0KSB7XG4gICAgICAgIHVuaXQuY29ubmVjdCh0aGlzLmlucHV0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHA1LnNvdW5kT3V0Lm91dHB1dC5jb25uZWN0KHRoaXMuaW5wdXQpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgU3RhcnQgcmVjb3JkaW5nLiBUbyBhY2Nlc3MgdGhlIHJlY29yZGluZywgcHJvdmlkZVxuICAgICAqICBhIHA1LlNvdW5kRmlsZSBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyLiBUaGUgcDUuU291bmRSZWNvcmRlclxuICAgICAqICB3aWxsIHNlbmQgaXRzIHJlY29yZGluZyB0byB0aGF0IHA1LlNvdW5kRmlsZSBmb3IgcGxheWJhY2sgb25jZVxuICAgICAqICByZWNvcmRpbmcgaXMgY29tcGxldGUuIE9wdGlvbmFsIHBhcmFtZXRlcnMgaW5jbHVkZSBkdXJhdGlvblxuICAgICAqICAoaW4gc2Vjb25kcykgb2YgdGhlIHJlY29yZGluZywgYW5kIGEgY2FsbGJhY2sgZnVuY3Rpb24gdGhhdFxuICAgICAqICB3aWxsIGJlIGNhbGxlZCBvbmNlIHRoZSBjb21wbGV0ZSByZWNvcmRpbmcgaGFzIGJlZW5cbiAgICAgKiAgdHJhbnNmZXJlZCB0byB0aGUgcDUuU291bmRGaWxlLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHJlY29yZFxuICAgICAqICBAZm9yIHA1LlNvdW5kUmVjb3JkZXJcbiAgICAgKiAgQHBhcmFtICB7cDUuU291bmRGaWxlfSAgIHNvdW5kRmlsZSAgICBwNS5Tb3VuZEZpbGVcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSAgIFtkdXJhdGlvbl0gVGltZSAoaW4gc2Vjb25kcylcbiAgICAgKiAgQHBhcmFtICB7RnVuY3Rpb259IFtjYWxsYmFja10gVGhlIG5hbWUgb2YgYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGVkIG9uY2UgdGhlIHJlY29yZGluZyBjb21wbGV0ZXNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJlY29yZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWNvcmQoc0ZpbGUsIGR1cmF0aW9uLCBjYWxsYmFjaykge1xuICAgICAgdGhpcy5fd29ya2xldE5vZGUucG9ydC5wb3N0TWVzc2FnZSh7XG4gICAgICAgIG5hbWU6ICdzdGFydCcsXG4gICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvblxuICAgICAgfSk7XG5cbiAgICAgIGlmIChzRmlsZSAmJiBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgICAgICAgICBzRmlsZS5zZXRCdWZmZXIoYnVmZmVyKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChzRmlsZSkge1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgICAgICAgICBzRmlsZS5zZXRCdWZmZXIoYnVmZmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFN0b3AgdGhlIHJlY29yZGluZy4gT25jZSB0aGUgcmVjb3JkaW5nIGlzIHN0b3BwZWQsXG4gICAgICogIHRoZSByZXN1bHRzIHdpbGwgYmUgc2VudCB0byB0aGUgcDUuU291bmRGaWxlIHRoYXRcbiAgICAgKiAgd2FzIGdpdmVuIG9uIC5yZWNvcmQoKSwgYW5kIGlmIGEgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKiAgd2FzIHByb3ZpZGVkIG9uIHJlY29yZCwgdGhhdCBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZC5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzdG9wXG4gICAgICogIEBmb3IgcDUuU291bmRSZWNvcmRlclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgdGhpcy5fd29ya2xldE5vZGUucG9ydC5wb3N0TWVzc2FnZSh7XG4gICAgICAgIG5hbWU6ICdzdG9wJ1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIHZhciBpbmRleCA9IG1haW4uc291bmRBcnJheS5pbmRleE9mKHRoaXMpO1xuICAgICAgbWFpbi5zb3VuZEFycmF5LnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgIHRoaXMuX2NhbGxiYWNrID0gZnVuY3Rpb24gKCkge307XG5cbiAgICAgIGlmICh0aGlzLmlucHV0KSB7XG4gICAgICAgIHRoaXMuaW5wdXQuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmlucHV0ID0gbnVsbDtcbiAgICAgIHRoaXMuX3dvcmtsZXROb2RlID0gbnVsbDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU291bmRSZWNvcmRlcjtcbn0oKTtcblxuIHZhciBzb3VuZFJlY29yZGVyID0gKHNvdW5kUmVjb3JkZXJfU291bmRSZWNvcmRlcik7XG5mdW5jdGlvbiBkaXN0b3J0aW9uX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IGRpc3RvcnRpb25fdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IGRpc3RvcnRpb25fdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIGRpc3RvcnRpb25fdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gZGlzdG9ydGlvbl9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGRpc3RvcnRpb25fZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIGRpc3RvcnRpb25fY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkaXN0b3J0aW9uX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkaXN0b3J0aW9uX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIGRpc3RvcnRpb25fcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChkaXN0b3J0aW9uX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gZGlzdG9ydGlvbl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gZGlzdG9ydGlvbl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBkaXN0b3J0aW9uX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAodHlwZW9mIFJlZmxlY3QgIT09IFwidW5kZWZpbmVkXCIgJiYgUmVmbGVjdC5nZXQpIHsgZGlzdG9ydGlvbl9nZXQgPSBSZWZsZWN0LmdldDsgfSBlbHNlIHsgZGlzdG9ydGlvbl9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IHZhciBiYXNlID0gZGlzdG9ydGlvbl9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpOyBpZiAoIWJhc2UpIHJldHVybjsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTsgaWYgKGRlc2MuZ2V0KSB7IHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTsgfSByZXR1cm4gZGVzYy52YWx1ZTsgfTsgfSByZXR1cm4gZGlzdG9ydGlvbl9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTsgfVxuXG5mdW5jdGlvbiBkaXN0b3J0aW9uX3N1cGVyUHJvcEJhc2Uob2JqZWN0LCBwcm9wZXJ0eSkgeyB3aGlsZSAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSkgeyBvYmplY3QgPSBkaXN0b3J0aW9uX2dldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrOyB9IHJldHVybiBvYmplY3Q7IH1cblxuZnVuY3Rpb24gZGlzdG9ydGlvbl9nZXRQcm90b3R5cGVPZihvKSB7IGRpc3RvcnRpb25fZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gZGlzdG9ydGlvbl9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG5mdW5jdGlvbiBkaXN0b3J0aW9uX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIGRpc3RvcnRpb25fc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIGRpc3RvcnRpb25fc2V0UHJvdG90eXBlT2YobywgcCkgeyBkaXN0b3J0aW9uX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBkaXN0b3J0aW9uX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cblxuXG5mdW5jdGlvbiBtYWtlRGlzdG9ydGlvbkN1cnZlKGFtb3VudCkge1xuICB2YXIgayA9IHR5cGVvZiBhbW91bnQgPT09ICdudW1iZXInID8gYW1vdW50IDogNTA7XG4gIHZhciBudW1TYW1wbGVzID0gNDQxMDA7XG4gIHZhciBjdXJ2ZSA9IG5ldyBGbG9hdDMyQXJyYXkobnVtU2FtcGxlcyk7XG4gIHZhciBkZWcgPSBNYXRoLlBJIC8gMTgwO1xuICB2YXIgaSA9IDA7XG4gIHZhciB4O1xuXG4gIGZvciAoOyBpIDwgbnVtU2FtcGxlczsgKytpKSB7XG4gICAgeCA9IGkgKiAyIC8gbnVtU2FtcGxlcyAtIDE7XG4gICAgY3VydmVbaV0gPSAoMyArIGspICogeCAqIDIwICogZGVnIC8gKE1hdGguUEkgKyBrICogTWF0aC5hYnMoeCkpO1xuICB9XG5cbiAgcmV0dXJuIGN1cnZlO1xufVxuLyoqXG4gKiBBIERpc3RvcnRpb24gZWZmZWN0IGNyZWF0ZWQgd2l0aCBhIFdhdmVzaGFwZXIgTm9kZSxcbiAqIHdpdGggYW4gYXBwcm9hY2ggYWRhcHRlZCBmcm9tXG4gKiBbS2V2aW4gRW5uaXNdKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjIzMTI4NDEvd2F2ZXNoYXBlci1ub2RlLWluLXdlYmF1ZGlvLWhvdy10by1lbXVsYXRlLWRpc3RvcnRpb24pXG4gKlxuICogVGhpcyBjbGFzcyBleHRlbmRzIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3RcIj5wNS5FZmZlY3Q8L2E+LlxuICogTWV0aG9kcyA8YSBocmVmID0gXCIvcmVmZXJlbmNlLyMvcDUuRWZmZWN0L2FtcFwiPmFtcCgpPC9hPiwgPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9jaGFpblwiPmNoYWluKCk8L2E+LFxuICogPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kcnl3ZXRcIj5kcnl3ZXQoKTwvYT4sIDxhIGhyZWYgPSBcIi9yZWZlcmVuY2UvIy9wNS5FZmZlY3QvY29ubmVjdFwiPmNvbm5lY3QoKTwvYT4sIGFuZFxuICogPGEgaHJlZiA9IFwiL3JlZmVyZW5jZS8jL3A1LkVmZmVjdC9kaXNjb25uZWN0XCI+ZGlzY29ubmVjdCgpPC9hPiBhcmUgYXZhaWxhYmxlLlxuICpcbiAqIEBjbGFzcyBwNS5EaXN0b3J0aW9uXG4gKiBAZXh0ZW5kcyBwNS5FZmZlY3RcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtOdW1iZXJ9IFthbW91bnQ9MC4yNV0gVW5ib3VuZGVkIGRpc3RvcnRpb24gYW1vdW50LlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcm1hbCB2YWx1ZXMgcmFuZ2UgZnJvbSAwLTEuXG4gKiBAcGFyYW0ge1N0cmluZ30gW292ZXJzYW1wbGU9J25vbmUnXSAnbm9uZScsICcyeCcsIG9yICc0eCcuXG4gKlxuICovXG5cblxudmFyIERpc3RvcnRpb24gPVxuZnVuY3Rpb24gKF9FZmZlY3QpIHtcbiAgZGlzdG9ydGlvbl9pbmhlcml0cyhEaXN0b3J0aW9uLCBfRWZmZWN0KTtcblxuICBmdW5jdGlvbiBEaXN0b3J0aW9uKGFtb3VudCwgb3ZlcnNhbXBsZSkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGRpc3RvcnRpb25fY2xhc3NDYWxsQ2hlY2sodGhpcywgRGlzdG9ydGlvbik7XG5cbiAgICBfdGhpcyA9IGRpc3RvcnRpb25fcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBkaXN0b3J0aW9uX2dldFByb3RvdHlwZU9mKERpc3RvcnRpb24pLmNhbGwodGhpcykpO1xuXG4gICAgaWYgKHR5cGVvZiBhbW91bnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBhbW91bnQgPSAwLjI1O1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgYW1vdW50ICE9PSAnbnVtYmVyJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhbW91bnQgbXVzdCBiZSBhIG51bWJlcicpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb3ZlcnNhbXBsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIG92ZXJzYW1wbGUgPSAnMngnO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb3ZlcnNhbXBsZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignb3ZlcnNhbXBsZSBtdXN0IGJlIGEgU3RyaW5nJyk7XG4gICAgfVxuXG4gICAgdmFyIGN1cnZlQW1vdW50ID0gcDUucHJvdG90eXBlLm1hcChhbW91bnQsIDAuMCwgMS4wLCAwLCAyMDAwKTtcbiAgICAvKipcbiAgICAgKiAgVGhlIHA1LkRpc3RvcnRpb24gaXMgYnVpbHQgd2l0aCBhXG4gICAgICogIDxhIGhyZWY9XCJodHRwOi8vd3d3LnczLm9yZy9UUi93ZWJhdWRpby8jV2F2ZVNoYXBlck5vZGVcIj5cbiAgICAgKiAgV2ViIEF1ZGlvIFdhdmVTaGFwZXIgTm9kZTwvYT4uXG4gICAgICpcbiAgICAgKiAgQHByb3BlcnR5IHtBdWRpb05vZGV9IFdhdmVTaGFwZXJOb2RlXG4gICAgICovXG5cbiAgICBfdGhpcy53YXZlU2hhcGVyTm9kZSA9IF90aGlzLmFjLmNyZWF0ZVdhdmVTaGFwZXIoKTtcbiAgICBfdGhpcy5hbW91bnQgPSBjdXJ2ZUFtb3VudDtcbiAgICBfdGhpcy53YXZlU2hhcGVyTm9kZS5jdXJ2ZSA9IG1ha2VEaXN0b3J0aW9uQ3VydmUoY3VydmVBbW91bnQpO1xuICAgIF90aGlzLndhdmVTaGFwZXJOb2RlLm92ZXJzYW1wbGUgPSBvdmVyc2FtcGxlO1xuXG4gICAgX3RoaXMuaW5wdXQuY29ubmVjdChfdGhpcy53YXZlU2hhcGVyTm9kZSk7XG5cbiAgICBfdGhpcy53YXZlU2hhcGVyTm9kZS5jb25uZWN0KF90aGlzLndldCk7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgLyoqXG4gICAqIFByb2Nlc3MgYSBzb3VuZCBzb3VyY2UsIG9wdGlvbmFsbHkgc3BlY2lmeSBhbW91bnQgYW5kIG92ZXJzYW1wbGUgdmFsdWVzLlxuICAgKlxuICAgKiBAbWV0aG9kIHByb2Nlc3NcbiAgICogQGZvciBwNS5EaXN0b3J0aW9uXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbYW1vdW50PTAuMjVdIFVuYm91bmRlZCBkaXN0b3J0aW9uIGFtb3VudC5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcm1hbCB2YWx1ZXMgcmFuZ2UgZnJvbSAwLTEuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3ZlcnNhbXBsZT0nbm9uZSddICdub25lJywgJzJ4Jywgb3IgJzR4Jy5cbiAgICovXG5cblxuICBkaXN0b3J0aW9uX2NyZWF0ZUNsYXNzKERpc3RvcnRpb24sIFt7XG4gICAga2V5OiBcInByb2Nlc3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2VzcyhzcmMsIGFtb3VudCwgb3ZlcnNhbXBsZSkge1xuICAgICAgc3JjLmNvbm5lY3QodGhpcy5pbnB1dCk7XG4gICAgICB0aGlzLnNldChhbW91bnQsIG92ZXJzYW1wbGUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGFtb3VudCBhbmQgb3ZlcnNhbXBsZSBvZiB0aGUgd2F2ZXNoYXBlciBkaXN0b3J0aW9uLlxuICAgICAqXG4gICAgICogQG1ldGhvZCBzZXRcbiAgICAgKiBAZm9yIHA1LkRpc3RvcnRpb25cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW2Ftb3VudD0wLjI1XSBVbmJvdW5kZWQgZGlzdG9ydGlvbiBhbW91bnQuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcm1hbCB2YWx1ZXMgcmFuZ2UgZnJvbSAwLTEuXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IFtvdmVyc2FtcGxlPSdub25lJ10gJ25vbmUnLCAnMngnLCBvciAnNHgnLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldChhbW91bnQsIG92ZXJzYW1wbGUpIHtcbiAgICAgIGlmIChhbW91bnQpIHtcbiAgICAgICAgdmFyIGN1cnZlQW1vdW50ID0gcDUucHJvdG90eXBlLm1hcChhbW91bnQsIDAuMCwgMS4wLCAwLCAyMDAwKTtcbiAgICAgICAgdGhpcy5hbW91bnQgPSBjdXJ2ZUFtb3VudDtcbiAgICAgICAgdGhpcy53YXZlU2hhcGVyTm9kZS5jdXJ2ZSA9IG1ha2VEaXN0b3J0aW9uQ3VydmUoY3VydmVBbW91bnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAob3ZlcnNhbXBsZSkge1xuICAgICAgICB0aGlzLndhdmVTaGFwZXJOb2RlLm92ZXJzYW1wbGUgPSBvdmVyc2FtcGxlO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmV0dXJuIHRoZSBkaXN0b3J0aW9uIGFtb3VudCwgdHlwaWNhbGx5IGJldHdlZW4gMC0xLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGdldEFtb3VudFxuICAgICAqICBAZm9yIHA1LkRpc3RvcnRpb25cbiAgICAgKiAgQHJldHVybiB7TnVtYmVyfSBVbmJvdW5kZWQgZGlzdG9ydGlvbiBhbW91bnQuXG4gICAgICogICAgICAgICAgICAgICAgICAgTm9ybWFsIHZhbHVlcyByYW5nZSBmcm9tIDAtMS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldEFtb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRBbW91bnQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5hbW91bnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBSZXR1cm4gdGhlIG92ZXJzYW1wbGluZy5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kIGdldE92ZXJzYW1wbGVcbiAgICAgKiAgQGZvciBwNS5EaXN0b3J0aW9uXG4gICAgICogIEByZXR1cm4ge1N0cmluZ30gT3ZlcnNhbXBsZSBjYW4gZWl0aGVyIGJlICdub25lJywgJzJ4Jywgb3IgJzR4Jy5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldE92ZXJzYW1wbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0T3ZlcnNhbXBsZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLndhdmVTaGFwZXJOb2RlLm92ZXJzYW1wbGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIGRpc3RvcnRpb25fZ2V0KGRpc3RvcnRpb25fZ2V0UHJvdG90eXBlT2YoRGlzdG9ydGlvbi5wcm90b3R5cGUpLCBcImRpc3Bvc2VcIiwgdGhpcykuY2FsbCh0aGlzKTtcblxuICAgICAgaWYgKHRoaXMud2F2ZVNoYXBlck5vZGUpIHtcbiAgICAgICAgdGhpcy53YXZlU2hhcGVyTm9kZS5kaXNjb25uZWN0KCk7XG4gICAgICAgIHRoaXMud2F2ZVNoYXBlck5vZGUgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBEaXN0b3J0aW9uO1xufShlZmZlY3QpO1xuXG4gdmFyIGRpc3RvcnRpb24gPSAoRGlzdG9ydGlvbik7XG5mdW5jdGlvbiBnYWluX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gZ2Fpbl9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gZ2Fpbl9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGdhaW5fZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGdhaW5fZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuXG4vKipcbiAqICBBIGdhaW4gbm9kZSBpcyB1c2VmdWxsIHRvIHNldCB0aGUgcmVsYXRpdmUgdm9sdW1lIG9mIHNvdW5kLlxuICogIEl0J3MgdHlwaWNhbGx5IHVzZWQgdG8gYnVpbGQgbWl4ZXJzLlxuICpcbiAqICBAY2xhc3MgcDUuR2FpblxuICogIEBjb25zdHJ1Y3RvclxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqXG4gKiAgLy8gbG9hZCB0d28gc291bmRmaWxlIGFuZCBjcm9zc2ZhZGUgYmVldHdlZW4gdGhlbVxuICogIGxldCBzb3VuZDEsc291bmQyO1xuICogIGxldCBzb3VuZDFHYWluLCBzb3VuZDJHYWluLCBtaXhHYWluO1xuICogIGZ1bmN0aW9uIHByZWxvYWQoKXtcbiAqICAgIHNvdW5kRm9ybWF0cygnb2dnJywgJ21wMycpO1xuICogICAgc291bmQxID0gbG9hZFNvdW5kKCdhc3NldHMvRGFtc2NyYXlfLV9EYW5jaW5nX1RpZ2VyXzAxJyk7XG4gKiAgICBzb3VuZDIgPSBsb2FkU291bmQoJ2Fzc2V0cy9iZWF0Jyk7XG4gKiAgfVxuICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gKiAgICBjbnYubW91c2VQcmVzc2VkKHN0YXJ0U291bmQpO1xuICogICAgLy8gY3JlYXRlIGEgJ21peCcgZ2FpbiBidXMgdG8gd2hpY2ggd2Ugd2lsbCBjb25uZWN0IGJvdGggc291bmRmaWxlc1xuICogICAgbWl4R2FpbiA9IG5ldyBwNS5HYWluKCk7XG4gKiAgICBtaXhHYWluLmNvbm5lY3QoKTtcbiAqICAgIHNvdW5kMS5kaXNjb25uZWN0KCk7IC8vIGRpY29ubmVjdCBmcm9tIHA1IG91dHB1dFxuICogICAgc291bmQxR2FpbiA9IG5ldyBwNS5HYWluKCk7IC8vIHNldHVwIGEgZ2FpbiBub2RlXG4gKiAgICBzb3VuZDFHYWluLnNldElucHV0KHNvdW5kMSk7IC8vIGNvbm5lY3QgdGhlIGZpcnN0IHNvdW5kIHRvIGl0cyBpbnB1dFxuICogICAgc291bmQxR2Fpbi5jb25uZWN0KG1peEdhaW4pOyAvLyBjb25uZWN0IGl0cyBvdXRwdXQgdG8gdGhlIGZpbmFsIG1peCBidXNcbiAqICAgIHNvdW5kMi5kaXNjb25uZWN0KCk7XG4gKiAgICBzb3VuZDJHYWluID0gbmV3IHA1LkdhaW4oKTtcbiAqICAgIHNvdW5kMkdhaW4uc2V0SW5wdXQoc291bmQyKTtcbiAqICAgIHNvdW5kMkdhaW4uY29ubmVjdChtaXhHYWluKTtcbiAqICB9XG4gKiAgZnVuY3Rpb24gc3RhcnRTb3VuZCgpIHtcbiAqICAgIHNvdW5kMS5sb29wKCk7XG4gKiAgICBzb3VuZDIubG9vcCgpO1xuICogICAgbG9vcCgpO1xuICogIH1cbiAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICogICAgc291bmQxLnN0b3AoKTtcbiAqICAgIHNvdW5kMi5zdG9wKCk7XG4gKiAgfVxuICogIGZ1bmN0aW9uIGRyYXcoKXtcbiAqICAgIGJhY2tncm91bmQoMjIwKTtcbiAqICAgIHRleHRBbGlnbihDRU5URVIpO1xuICogICAgdGV4dFNpemUoMTEpO1xuICogICAgZmlsbCgwKTtcbiAqICAgIGlmICghc291bmQxLmlzUGxheWluZygpKSB7XG4gKiAgICAgIHRleHQoJ3RhcCBhbmQgZHJhZyB0byBwbGF5Jywgd2lkdGgvMiwgaGVpZ2h0LzIpO1xuICogICAgICByZXR1cm47XG4gKiAgICB9XG4gKiAgICAvLyBtYXAgdGhlIGhvcml6b250YWwgcG9zaXRpb24gb2YgdGhlIG1vdXNlIHRvIHZhbHVlcyB1c2VhYmxlIGZvciB2b2x1bWUgICAgKiAgY29udHJvbCBvZiBzb3VuZDFcbiAqICAgIHZhciBzb3VuZDFWb2x1bWUgPSBjb25zdHJhaW4obWFwKG1vdXNlWCx3aWR0aCwwLDAsMSksIDAsIDEpO1xuICogICAgdmFyIHNvdW5kMlZvbHVtZSA9IDEtc291bmQxVm9sdW1lO1xuICogICAgc291bmQxR2Fpbi5hbXAoc291bmQxVm9sdW1lKTtcbiAqICAgIHNvdW5kMkdhaW4uYW1wKHNvdW5kMlZvbHVtZSk7XG4gKiAgICAvLyBtYXAgdGhlIHZlcnRpY2FsIHBvc2l0aW9uIG9mIHRoZSBtb3VzZSB0byB2YWx1ZXMgdXNlYWJsZSBmb3IgJ291dHB1dCAgICAqICB2b2x1bWUgY29udHJvbCdcbiAqICAgIHZhciBvdXRwdXRWb2x1bWUgPSBjb25zdHJhaW4obWFwKG1vdXNlWSxoZWlnaHQsMCwwLDEpLCAwLCAxKTtcbiAqICAgIG1peEdhaW4uYW1wKG91dHB1dFZvbHVtZSk7XG4gKiAgICB0ZXh0KCdvdXRwdXQnLCB3aWR0aC8yLCBoZWlnaHQgLSBvdXRwdXRWb2x1bWUgKiBoZWlnaHQgKiAwLjkpXG4gKiAgICBmaWxsKDI1NSwgMCwgMjU1KTtcbiAqICAgIHRleHRBbGlnbihMRUZUKTtcbiAqICAgIHRleHQoJ3NvdW5kMScsIDUsIGhlaWdodCAtIHNvdW5kMVZvbHVtZSAqIGhlaWdodCAqIDAuOSk7XG4gKiAgICB0ZXh0QWxpZ24oUklHSFQpO1xuICogICAgdGV4dCgnc291bmQyJywgd2lkdGggLSA1LCBoZWlnaHQgLSBzb3VuZDJWb2x1bWUgKiBoZWlnaHQgKiAwLjkpO1xuICogIH1cbiAqPC9jb2RlPjwvZGl2PlxuICovXG5cbnZhciBnYWluX0dhaW4gPVxuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBHYWluKCkge1xuICAgIGdhaW5fY2xhc3NDYWxsQ2hlY2sodGhpcywgR2Fpbik7XG5cbiAgICB0aGlzLmFjID0gbWFpbi5hdWRpb2NvbnRleHQ7XG4gICAgdGhpcy5pbnB1dCA9IHRoaXMuYWMuY3JlYXRlR2FpbigpO1xuICAgIHRoaXMub3V0cHV0ID0gdGhpcy5hYy5jcmVhdGVHYWluKCk7IFxuXG4gICAgdGhpcy5pbnB1dC5nYWluLnZhbHVlID0gMC41O1xuICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLm91dHB1dCk7IFxuXG4gICAgbWFpbi5zb3VuZEFycmF5LnB1c2godGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqICBDb25uZWN0IGEgc291cmNlIHRvIHRoZSBnYWluIG5vZGUuXG4gICAqXG4gICAqICBAbWV0aG9kICBzZXRJbnB1dFxuICAgKiAgQGZvciBwNS5HYWluXG4gICAqICBAcGFyYW0gIHtPYmplY3R9IHNyYyAgICAgcDUuc291bmQgLyBXZWIgQXVkaW8gb2JqZWN0IHdpdGggYSBzb3VuZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5cbiAgICovXG5cblxuICBnYWluX2NyZWF0ZUNsYXNzKEdhaW4sIFt7XG4gICAga2V5OiBcInNldElucHV0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldElucHV0KHNyYykge1xuICAgICAgc3JjLmNvbm5lY3QodGhpcy5pbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTZW5kIG91dHB1dCB0byBhIHA1LnNvdW5kIG9yIHdlYiBhdWRpbyBvYmplY3RcbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBjb25uZWN0XG4gICAgICogIEBmb3IgcDUuR2FpblxuICAgICAqICBAcGFyYW0gIHtPYmplY3R9IHVuaXRcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImNvbm5lY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29ubmVjdCh1bml0KSB7XG4gICAgICB2YXIgdSA9IHVuaXQgfHwgcDUuc291bmRPdXQuaW5wdXQ7XG4gICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHUuaW5wdXQgPyB1LmlucHV0IDogdSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBEaXNjb25uZWN0IGFsbCBvdXRwdXQuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCBkaXNjb25uZWN0XG4gICAgICogIEBmb3IgcDUuR2FpblxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNjb25uZWN0KCkge1xuICAgICAgaWYgKHRoaXMub3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFNldCB0aGUgb3V0cHV0IGxldmVsIG9mIHRoZSBnYWluIG5vZGUuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgYW1wXG4gICAgICogIEBmb3IgcDUuR2FpblxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IHZvbHVtZSBhbXBsaXR1ZGUgYmV0d2VlbiAwIGFuZCAxLjBcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbcmFtcFRpbWVdIGNyZWF0ZSBhIGZhZGUgdGhhdCBsYXN0cyByYW1wVGltZVxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFt0aW1lRnJvbU5vd10gc2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vd1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiYW1wXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFtcCh2b2wpIHtcbiAgICAgIHZhciByYW1wVGltZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgICAgIHZhciB0RnJvbU5vdyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMDtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgIHZhciBjdXJyZW50Vm9sID0gdGhpcy5vdXRwdXQuZ2Fpbi52YWx1ZTtcbiAgICAgIHRoaXMub3V0cHV0LmdhaW4uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKG5vdyk7XG4gICAgICB0aGlzLm91dHB1dC5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKGN1cnJlbnRWb2wsIG5vdyArIHRGcm9tTm93KTtcbiAgICAgIHRoaXMub3V0cHV0LmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodm9sLCBub3cgKyB0RnJvbU5vdyArIHJhbXBUaW1lKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgdmFyIGluZGV4ID0gbWFpbi5zb3VuZEFycmF5LmluZGV4T2YodGhpcyk7XG4gICAgICBtYWluLnNvdW5kQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgaWYgKHRoaXMub3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMub3V0cHV0O1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5pbnB1dCkge1xuICAgICAgICB0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuaW5wdXQ7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEdhaW47XG59KCk7XG5cbiB2YXIgZ2FpbiA9IChnYWluX0dhaW4pO1xuZnVuY3Rpb24gYXVkaW9Wb2ljZV9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIGF1ZGlvVm9pY2VfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIGF1ZGlvVm9pY2VfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBhdWRpb1ZvaWNlX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBhdWRpb1ZvaWNlX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cblxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBtb25vcGhvbmljIHN5bnRoZXNpemVycy4gQW55IGV4dGVuc2lvbnMgb2YgdGhpcyBjbGFzc1xuICogc2hvdWxkIGZvbGxvdyB0aGUgQVBJIGFuZCBpbXBsZW1lbnQgdGhlIG1ldGhvZHMgYmVsb3cgaW4gb3JkZXIgdG9cbiAqIHJlbWFpbiBjb21wYXRpYmxlIHdpdGggcDUuUG9seVN5bnRoKCk7XG4gKlxuICogQGNsYXNzIHA1LkF1ZGlvVm9pY2VcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5cbnZhciBhdWRpb1ZvaWNlX0F1ZGlvVm9pY2UgPVxuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBBdWRpb1ZvaWNlKCkge1xuICAgIGF1ZGlvVm9pY2VfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXVkaW9Wb2ljZSk7XG5cbiAgICB0aGlzLmFjID0gbWFpbi5hdWRpb2NvbnRleHQ7XG4gICAgdGhpcy5vdXRwdXQgPSB0aGlzLmFjLmNyZWF0ZUdhaW4oKTtcbiAgICB0aGlzLmNvbm5lY3QoKTtcbiAgICBtYWluLnNvdW5kQXJyYXkucHVzaCh0aGlzKTtcbiAgfVxuXG4gIGF1ZGlvVm9pY2VfY3JlYXRlQ2xhc3MoQXVkaW9Wb2ljZSwgW3tcbiAgICBrZXk6IFwicGxheVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwbGF5KG5vdGUsIHZlbG9jaXR5LCBzZWNvbmRzRnJvbU5vdywgc3VzdGltZSkge31cbiAgfSwge1xuICAgIGtleTogXCJ0cmlnZ2VyQXR0YWNrXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRyaWdnZXJBdHRhY2sobm90ZSwgdmVsb2NpdHksIHNlY29uZHNGcm9tTm93KSB7fVxuICB9LCB7XG4gICAga2V5OiBcInRyaWdnZXJSZWxlYXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRyaWdnZXJSZWxlYXNlKHNlY29uZHNGcm9tTm93KSB7fVxuICB9LCB7XG4gICAga2V5OiBcImFtcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhbXAodm9sLCByYW1wVGltZSkge31cbiAgICAvKipcbiAgICAgKiBDb25uZWN0IHRvIHA1IG9iamVjdHMgb3IgV2ViIEF1ZGlvIE5vZGVzXG4gICAgICogQG1ldGhvZCAgY29ubmVjdFxuICAgICAqIEBmb3IgcDUuQXVkaW9Wb2ljZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1bml0XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3QodW5pdCkge1xuICAgICAgdmFyIHUgPSB1bml0IHx8IG1haW4uaW5wdXQ7XG4gICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHUuaW5wdXQgPyB1LmlucHV0IDogdSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc2Nvbm5lY3QgZnJvbSBzb3VuZE91dFxuICAgICAqIEBtZXRob2QgIGRpc2Nvbm5lY3RcbiAgICAgKiBAZm9yIHA1LkF1ZGlvVm9pY2VcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRpc2Nvbm5lY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzY29ubmVjdCgpIHtcbiAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzcG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgaWYgKHRoaXMub3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgZGVsZXRlIHRoaXMub3V0cHV0O1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBBdWRpb1ZvaWNlO1xufSgpO1xuXG4gdmFyIGF1ZGlvVm9pY2VfMCA9IChhdWRpb1ZvaWNlX0F1ZGlvVm9pY2UpO1xuZnVuY3Rpb24gbW9ub3N5bnRoX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IG1vbm9zeW50aF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgbW9ub3N5bnRoX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBtb25vc3ludGhfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gbW9ub3N5bnRoX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gbW9ub3N5bnRoX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBtb25vc3ludGhfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBtb25vc3ludGhfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIG1vbm9zeW50aF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBtb25vc3ludGhfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChtb25vc3ludGhfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBtb25vc3ludGhfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIG1vbm9zeW50aF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBtb25vc3ludGhfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBSZWZsZWN0LmdldCkgeyBtb25vc3ludGhfZ2V0ID0gUmVmbGVjdC5nZXQ7IH0gZWxzZSB7IG1vbm9zeW50aF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IHZhciBiYXNlID0gbW9ub3N5bnRoX3N1cGVyUHJvcEJhc2UodGFyZ2V0LCBwcm9wZXJ0eSk7IGlmICghYmFzZSkgcmV0dXJuOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpOyBpZiAoZGVzYy5nZXQpIHsgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpOyB9IHJldHVybiBkZXNjLnZhbHVlOyB9OyB9IHJldHVybiBtb25vc3ludGhfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyIHx8IHRhcmdldCk7IH1cblxuZnVuY3Rpb24gbW9ub3N5bnRoX3N1cGVyUHJvcEJhc2Uob2JqZWN0LCBwcm9wZXJ0eSkgeyB3aGlsZSAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSkgeyBvYmplY3QgPSBtb25vc3ludGhfZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKG9iamVjdCA9PT0gbnVsbCkgYnJlYWs7IH0gcmV0dXJuIG9iamVjdDsgfVxuXG5mdW5jdGlvbiBtb25vc3ludGhfZ2V0UHJvdG90eXBlT2YobykgeyBtb25vc3ludGhfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gbW9ub3N5bnRoX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbmZ1bmN0aW9uIG1vbm9zeW50aF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBtb25vc3ludGhfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIG1vbm9zeW50aF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG1vbm9zeW50aF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gbW9ub3N5bnRoX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cblxuXG5cblxuXG52YXIgREVGQVVMVF9TVVNUQUlOID0gMC4xNTtcbi8qKlxuICogIEEgTW9ub1N5bnRoIGlzIHVzZWQgYXMgYSBzaW5nbGUgdm9pY2UgZm9yIHNvdW5kIHN5bnRoZXNpcy5cbiAqICBUaGlzIGlzIGEgY2xhc3MgdG8gYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBQb2x5U3ludGhcbiAqICBjbGFzcy4gQ3VzdG9tIHN5bnRoZXRpc2VycyBzaG91bGQgYmUgYnVpbHQgaW5oZXJpdGluZyBmcm9tXG4gKiAgdGhpcyBjbGFzcy5cbiAqXG4gKiAgQGNsYXNzIHA1Lk1vbm9TeW50aFxuICogIEBjb25zdHJ1Y3RvclxuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgbW9ub1N5bnRoO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgY252Lm1vdXNlUHJlc3NlZChwbGF5U3ludGgpO1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dEFsaWduKENFTlRFUik7XG4gKiAgICB0ZXh0KCd0YXAgdG8gcGxheScsIHdpZHRoLzIsIGhlaWdodC8yKTtcbiAqXG4gKiAgICBtb25vU3ludGggPSBuZXcgcDUuTW9ub1N5bnRoKCk7XG4gKiAgfVxuICpcbiAqICBmdW5jdGlvbiBwbGF5U3ludGgoKSB7XG4gKiAgICB1c2VyU3RhcnRBdWRpbygpO1xuICpcbiAqICAgIGxldCBub3RlID0gcmFuZG9tKFsnRmI0JywgJ0c0J10pO1xuICogICAgLy8gbm90ZSB2ZWxvY2l0eSAodm9sdW1lLCBmcm9tIDAgdG8gMSlcbiAqICAgIGxldCB2ZWxvY2l0eSA9IHJhbmRvbSgpO1xuICogICAgLy8gdGltZSBmcm9tIG5vdyAoaW4gc2Vjb25kcylcbiAqICAgIGxldCB0aW1lID0gMDtcbiAqICAgIC8vIG5vdGUgZHVyYXRpb24gKGluIHNlY29uZHMpXG4gKiAgICBsZXQgZHVyID0gMS82O1xuICpcbiAqICAgIG1vbm9TeW50aC5wbGF5KG5vdGUsIHZlbG9jaXR5LCB0aW1lLCBkdXIpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKiovXG5cbnZhciBtb25vc3ludGhfTW9ub1N5bnRoID1cbmZ1bmN0aW9uIChfQXVkaW9Wb2ljZSkge1xuICBtb25vc3ludGhfaW5oZXJpdHMoTW9ub1N5bnRoLCBfQXVkaW9Wb2ljZSk7XG5cbiAgZnVuY3Rpb24gTW9ub1N5bnRoKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIG1vbm9zeW50aF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNb25vU3ludGgpO1xuXG4gICAgX3RoaXMgPSBtb25vc3ludGhfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBtb25vc3ludGhfZ2V0UHJvdG90eXBlT2YoTW9ub1N5bnRoKS5jYWxsKHRoaXMpKTtcbiAgICBfdGhpcy5vc2NpbGxhdG9yID0gbmV3IG9zY2lsbGF0b3IoKTtcbiAgICBfdGhpcy5lbnYgPSBuZXcgZW52ZWxvcGUoKTsgXG5cbiAgICBfdGhpcy5lbnYuc2V0UmFuZ2UoMSwgMCk7XG5cbiAgICBfdGhpcy5lbnYuc2V0RXhwKHRydWUpOyBcblxuXG4gICAgX3RoaXMuc2V0QURTUigwLjAyLCAwLjI1LCAwLjA1LCAwLjM1KTsgXG5cblxuICAgIF90aGlzLm9zY2lsbGF0b3IuZGlzY29ubmVjdCgpO1xuXG4gICAgX3RoaXMub3NjaWxsYXRvci5jb25uZWN0KF90aGlzLm91dHB1dCk7XG5cbiAgICBfdGhpcy5lbnYuZGlzY29ubmVjdCgpO1xuXG4gICAgX3RoaXMuZW52LnNldElucHV0KF90aGlzLm91dHB1dC5nYWluKTsgXG5cblxuICAgIF90aGlzLm9zY2lsbGF0b3Iub3V0cHV0LmdhaW4udmFsdWUgPSAxLjA7XG5cbiAgICBfdGhpcy5vc2NpbGxhdG9yLnN0YXJ0KCk7XG5cbiAgICBfdGhpcy5jb25uZWN0KCk7XG5cbiAgICBtYWluLnNvdW5kQXJyYXkucHVzaChtb25vc3ludGhfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgLyoqXG4gICAgICogR2V0dGVycyBhbmQgU2V0dGVyc1xuICAgICAqIEBwcm9wZXJ0eSB7TnVtYmVyfSBhdHRhY2tcbiAgICAgKiBAZm9yIHA1Lk1vbm9TeW50aFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQHByb3BlcnR5IHtOdW1iZXJ9IGRlY2F5XG4gICAgICogQGZvciBwNS5Nb25vU3ludGhcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEBwcm9wZXJ0eSB7TnVtYmVyfSBzdXN0YWluXG4gICAgICogQGZvciBwNS5Nb25vU3ludGhcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEBwcm9wZXJ0eSB7TnVtYmVyfSByZWxlYXNlXG4gICAgICogQGZvciBwNS5Nb25vU3ludGhcbiAgICAgKi9cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKG1vbm9zeW50aF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCB7XG4gICAgICBhdHRhY2s6IHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuZW52LmFUaW1lO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIHNldChhdHRhY2spIHtcbiAgICAgICAgICB0aGlzLmVudi5zZXRBRFNSKGF0dGFjaywgdGhpcy5lbnYuZFRpbWUsIHRoaXMuZW52LnNQZXJjZW50LCB0aGlzLmVudi5yVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBkZWNheToge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5lbnYuZFRpbWU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gc2V0KGRlY2F5KSB7XG4gICAgICAgICAgdGhpcy5lbnYuc2V0QURTUih0aGlzLmVudi5hVGltZSwgZGVjYXksIHRoaXMuZW52LnNQZXJjZW50LCB0aGlzLmVudi5yVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzdXN0YWluOiB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgIHJldHVybiB0aGlzLmVudi5zUGVyY2VudDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiBzZXQoc3VzdGFpbikge1xuICAgICAgICAgIHRoaXMuZW52LnNldEFEU1IodGhpcy5lbnYuYVRpbWUsIHRoaXMuZW52LmRUaW1lLCBzdXN0YWluLCB0aGlzLmVudi5yVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICByZWxlYXNlOiB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgIHJldHVybiB0aGlzLmVudi5yVGltZTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiBzZXQocmVsZWFzZSkge1xuICAgICAgICAgIHRoaXMuZW52LnNldEFEU1IodGhpcy5lbnYuYVRpbWUsIHRoaXMuZW52LmRUaW1lLCB0aGlzLmVudi5zUGVyY2VudCwgcmVsZWFzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgLyoqXG4gICAqICBQbGF5IHRlbGxzIHRoZSBNb25vU3ludGggdG8gc3RhcnQgcGxheWluZyBhIG5vdGUuIFRoaXMgbWV0aG9kIHNjaGVkdWxlc1xuICAgKiAgdGhlIGNhbGxpbmcgb2YgLnRyaWdnZXJBdHRhY2sgYW5kIC50cmlnZ2VyUmVsZWFzZS5cbiAgICpcbiAgICogIEBtZXRob2QgcGxheVxuICAgKiAgQGZvciBwNS5Nb25vU3ludGhcbiAgICogIEBwYXJhbSB7U3RyaW5nIHwgTnVtYmVyfSBub3RlIHRoZSBub3RlIHlvdSB3YW50IHRvIHBsYXksIHNwZWNpZmllZCBhcyBhXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJlcXVlbmN5IGluIEhlcnR6IChOdW1iZXIpIG9yIGFzIGEgbWlkaVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlIGluIE5vdGUvT2N0YXZlIGZvcm1hdCAoXCJDNFwiLCBcIkViM1wiLi4uZXRjXCIpXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VlIDxhIGhyZWYgPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9Ub25lanMvVG9uZS5qcy93aWtpL0luc3RydW1lbnRzXCI+XG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVG9uZTwvYT4uIERlZmF1bHRzIHRvIDQ0MCBoei5cbiAgICogIEBwYXJhbSAge051bWJlcn0gW3ZlbG9jaXR5XSB2ZWxvY2l0eSBvZiB0aGUgbm90ZSB0byBwbGF5IChyYW5naW5nIGZyb20gMCB0byAxKVxuICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbc2Vjb25kc0Zyb21Ob3ddICB0aW1lIGZyb20gbm93IChpbiBzZWNvbmRzKSBhdCB3aGljaCB0byBwbGF5XG4gICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtzdXN0YWluVGltZV0gdGltZSB0byBzdXN0YWluIGJlZm9yZSByZWxlYXNpbmcgdGhlIGVudmVsb3BlLiBEZWZhdWx0cyB0byAwLjE1IHNlY29uZHMuXG4gICAqICBAZXhhbXBsZVxuICAgKiAgPGRpdj48Y29kZT5cbiAgICogIGxldCBtb25vU3ludGg7XG4gICAqXG4gICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheVN5bnRoKTtcbiAgICogICAgYmFja2dyb3VuZCgyMjApO1xuICAgKiAgICB0ZXh0QWxpZ24oQ0VOVEVSKTtcbiAgICogICAgdGV4dCgndGFwIHRvIHBsYXknLCB3aWR0aC8yLCBoZWlnaHQvMik7XG4gICAqXG4gICAqICAgIG1vbm9TeW50aCA9IG5ldyBwNS5Nb25vU3ludGgoKTtcbiAgICogIH1cbiAgICpcbiAgICogIGZ1bmN0aW9uIHBsYXlTeW50aCgpIHtcbiAgICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAgICpcbiAgICogICAgbGV0IG5vdGUgPSByYW5kb20oWydGYjQnLCAnRzQnXSk7XG4gICAqICAgIC8vIG5vdGUgdmVsb2NpdHkgKHZvbHVtZSwgZnJvbSAwIHRvIDEpXG4gICAqICAgIGxldCB2ZWxvY2l0eSA9IHJhbmRvbSgpO1xuICAgKiAgICAvLyB0aW1lIGZyb20gbm93IChpbiBzZWNvbmRzKVxuICAgKiAgICBsZXQgdGltZSA9IDA7XG4gICAqICAgIC8vIG5vdGUgZHVyYXRpb24gKGluIHNlY29uZHMpXG4gICAqICAgIGxldCBkdXIgPSAxLzY7XG4gICAqXG4gICAqICAgIG1vbm9TeW50aC5wbGF5KG5vdGUsIHZlbG9jaXR5LCB0aW1lLCBkdXIpO1xuICAgKiAgfVxuICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgKlxuICAgKi9cblxuXG4gIG1vbm9zeW50aF9jcmVhdGVDbGFzcyhNb25vU3ludGgsIFt7XG4gICAga2V5OiBcInBsYXlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcGxheShub3RlLCB2ZWxvY2l0eSwgc2Vjb25kc0Zyb21Ob3csIHN1c1RpbWUpIHtcbiAgICAgIHRoaXMudHJpZ2dlckF0dGFjayhub3RlLCB2ZWxvY2l0eSwgfn5zZWNvbmRzRnJvbU5vdyk7XG4gICAgICB0aGlzLnRyaWdnZXJSZWxlYXNlKH5+c2Vjb25kc0Zyb21Ob3cgKyAoc3VzVGltZSB8fCBERUZBVUxUX1NVU1RBSU4pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFRyaWdnZXIgdGhlIEF0dGFjaywgYW5kIERlY2F5IHBvcnRpb24gb2YgdGhlIEVudmVsb3BlLlxuICAgICAqICBTaW1pbGFyIHRvIGhvbGRpbmcgZG93biBhIGtleSBvbiBhIHBpYW5vLCBidXQgaXQgd2lsbFxuICAgICAqICBob2xkIHRoZSBzdXN0YWluIGxldmVsIHVudGlsIHlvdSBsZXQgZ28uXG4gICAgICpcbiAgICAgKiAgQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXJ9IG5vdGUgdGhlIG5vdGUgeW91IHdhbnQgdG8gcGxheSwgc3BlY2lmaWVkIGFzIGFcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyZXF1ZW5jeSBpbiBIZXJ0eiAoTnVtYmVyKSBvciBhcyBhIG1pZGlcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlIGluIE5vdGUvT2N0YXZlIGZvcm1hdCAoXCJDNFwiLCBcIkViM1wiLi4uZXRjXCIpXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWUgPGEgaHJlZiA9IFwiaHR0cHM6Ly9naXRodWIuY29tL1RvbmVqcy9Ub25lLmpzL3dpa2kvSW5zdHJ1bWVudHNcIj5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRvbmU8L2E+LiBEZWZhdWx0cyB0byA0NDAgaHpcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbdmVsb2NpdHldIHZlbG9jaXR5IG9mIHRoZSBub3RlIHRvIHBsYXkgKHJhbmdpbmcgZnJvbSAwIHRvIDEpXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gW3NlY29uZHNGcm9tTm93XSAgdGltZSBmcm9tIG5vdyAoaW4gc2Vjb25kcykgYXQgd2hpY2ggdG8gcGxheVxuICAgICAqICBAbWV0aG9kICB0cmlnZ2VyQXR0YWNrXG4gICAgICogIEBmb3IgcDUuTW9ub1N5bnRoXG4gICAgICogIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogIGxldCBtb25vU3ludGg7XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gICAgICogICAgbGV0IGNudiA9IGNyZWF0ZUNhbnZhcygxMDAsIDEwMCk7XG4gICAgICogICAgY252Lm1vdXNlUHJlc3NlZCh0cmlnZ2VyQXR0YWNrKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgdGV4dCgndGFwIGhlcmUgZm9yIGF0dGFjaywgbGV0IGdvIHRvIHJlbGVhc2UnLCA1LCAyMCwgd2lkdGggLSAyMCk7XG4gICAgICogICAgbW9ub1N5bnRoID0gbmV3IHA1Lk1vbm9TeW50aCgpO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gdHJpZ2dlckF0dGFjaygpIHtcbiAgICAgKiAgICB1c2VyU3RhcnRBdWRpbygpO1xuICAgICAqXG4gICAgICogICAgbW9ub1N5bnRoLnRyaWdnZXJBdHRhY2soXCJFM1wiKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIG1vdXNlUmVsZWFzZWQoKSB7XG4gICAgICogICAgbW9ub1N5bnRoLnRyaWdnZXJSZWxlYXNlKCk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwidHJpZ2dlckF0dGFja1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0cmlnZ2VyQXR0YWNrKG5vdGUsIHZlbG9jaXR5KSB7XG4gICAgICB2YXIgc2Vjb25kc0Zyb21Ob3cgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDA7XG4gICAgICB2YXIgZnJlcSA9IG5vdGVUb0ZyZXEobm90ZSk7XG4gICAgICB2YXIgdmVsID0gdmVsb2NpdHkgfHwgMC4xO1xuICAgICAgdGhpcy5vc2NpbGxhdG9yLmZyZXEoZnJlcSwgMCwgc2Vjb25kc0Zyb21Ob3cpO1xuICAgICAgdGhpcy5lbnYucmFtcCh0aGlzLm91dHB1dC5nYWluLCBzZWNvbmRzRnJvbU5vdywgdmVsKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFRyaWdnZXIgdGhlIHJlbGVhc2Ugb2YgdGhlIEVudmVsb3BlLiBUaGlzIGlzIHNpbWlsYXIgdG8gcmVsZWFzaW5nXG4gICAgICogIHRoZSBrZXkgb24gYSBwaWFubyBhbmQgbGV0dGluZyB0aGUgc291bmQgZmFkZSBhY2NvcmRpbmcgdG8gdGhlXG4gICAgICogIHJlbGVhc2UgbGV2ZWwgYW5kIHJlbGVhc2UgdGltZS5cbiAgICAgKlxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IHNlY29uZHNGcm9tTm93IHRpbWUgdG8gdHJpZ2dlciB0aGUgcmVsZWFzZVxuICAgICAqICBAbWV0aG9kICB0cmlnZ2VyUmVsZWFzZVxuICAgICAqICBAZm9yIHA1Lk1vbm9TeW50aFxuICAgICAqICBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgbW9ub1N5bnRoO1xuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgICAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICAgICAqICAgIGNudi5tb3VzZVByZXNzZWQodHJpZ2dlckF0dGFjayk7XG4gICAgICogICAgYmFja2dyb3VuZCgyMjApO1xuICAgICAqICAgIHRleHQoJ3RhcCBoZXJlIGZvciBhdHRhY2ssIGxldCBnbyB0byByZWxlYXNlJywgNSwgMjAsIHdpZHRoIC0gMjApO1xuICAgICAqICAgIG1vbm9TeW50aCA9IG5ldyBwNS5Nb25vU3ludGgoKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHRyaWdnZXJBdHRhY2soKSB7XG4gICAgICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAgICAgKlxuICAgICAqICAgIG1vbm9TeW50aC50cmlnZ2VyQXR0YWNrKFwiRTNcIik7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICAgICAqICAgIG1vbm9TeW50aC50cmlnZ2VyUmVsZWFzZSgpO1xuICAgICAqICB9XG4gICAgICogIDwvY29kZT48L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInRyaWdnZXJSZWxlYXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRyaWdnZXJSZWxlYXNlKCkge1xuICAgICAgdmFyIHNlY29uZHNGcm9tTm93ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAwO1xuICAgICAgdGhpcy5lbnYucmFtcCh0aGlzLm91dHB1dC5nYWluLCBzZWNvbmRzRnJvbU5vdywgMCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBTZXQgdmFsdWVzIGxpa2UgYSB0cmFkaXRpb25hbFxuICAgICAqICA8YSBocmVmPVwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvU3ludGhlc2l6ZXIjL21lZGlhL0ZpbGU6QURTUl9wYXJhbWV0ZXIuc3ZnXCI+XG4gICAgICogIEFEU1IgZW52ZWxvcGVcbiAgICAgKiAgPC9hPi5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBzZXRBRFNSXG4gICAgICogIEBmb3IgcDUuTW9ub1N5bnRoXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBhdHRhY2tUaW1lICAgIFRpbWUgKGluIHNlY29uZHMgYmVmb3JlIGVudmVsb3BlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgQXR0YWNrIExldmVsXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbZGVjYXlUaW1lXSAgICBUaW1lIChpbiBzZWNvbmRzKSBiZWZvcmUgZW52ZWxvcGVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhY2hlcyBEZWNheS9TdXN0YWluIExldmVsXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbc3VzUmF0aW9dICAgIFJhdGlvIGJldHdlZW4gYXR0YWNrTGV2ZWwgYW5kIHJlbGVhc2VMZXZlbCwgb24gYSBzY2FsZSBmcm9tIDAgdG8gMSxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmUgMS4wID0gYXR0YWNrTGV2ZWwsIDAuMCA9IHJlbGVhc2VMZXZlbC5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIHN1c1JhdGlvIGRldGVybWluZXMgdGhlIGRlY2F5TGV2ZWwgYW5kIHRoZSBsZXZlbCBhdCB3aGljaCB0aGVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VzdGFpbiBwb3J0aW9uIG9mIHRoZSBlbnZlbG9wZSB3aWxsIHN1c3RhaW4uXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvciBleGFtcGxlLCBpZiBhdHRhY2tMZXZlbCBpcyAwLjQsIHJlbGVhc2VMZXZlbCBpcyAwLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgc3VzQW10IGlzIDAuNSwgdGhlIGRlY2F5TGV2ZWwgd291bGQgYmUgMC4yLiBJZiBhdHRhY2tMZXZlbCBpc1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmNyZWFzZWQgdG8gMS4wICh1c2luZyA8Y29kZT5zZXRSYW5nZTwvY29kZT4pLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVuIGRlY2F5TGV2ZWwgd291bGQgaW5jcmVhc2UgcHJvcG9ydGlvbmFsbHksIHRvIGJlY29tZSAwLjUuXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbcmVsZWFzZVRpbWVdICAgVGltZSBpbiBzZWNvbmRzIGZyb20gbm93IChkZWZhdWx0cyB0byAwKVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwic2V0QURTUlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRBRFNSKGF0dGFjaywgZGVjYXksIHN1c3RhaW4sIHJlbGVhc2UpIHtcbiAgICAgIHRoaXMuZW52LnNldEFEU1IoYXR0YWNrLCBkZWNheSwgc3VzdGFpbiwgcmVsZWFzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vbm9TeW50aCBhbXBcbiAgICAgKiBAbWV0aG9kICBhbXBcbiAgICAgKiBAZm9yIHA1Lk1vbm9TeW50aFxuICAgICAqIEBwYXJhbSAge051bWJlcn0gdm9sICAgICAgZGVzaXJlZCB2b2x1bWVcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IFtyYW1wVGltZV0gVGltZSB0byByZWFjaCBuZXcgdm9sdW1lXG4gICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgICAgICBuZXcgdm9sdW1lIHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJhbXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYW1wKHZvbCwgcmFtcFRpbWUpIHtcbiAgICAgIHZhciB0ID0gcmFtcFRpbWUgfHwgMDtcblxuICAgICAgaWYgKHR5cGVvZiB2b2wgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRoaXMub3NjaWxsYXRvci5hbXAodm9sLCB0KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMub3NjaWxsYXRvci5hbXAoKS52YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIENvbm5lY3QgdG8gYSBwNS5zb3VuZCAvIFdlYiBBdWRpbyBvYmplY3QuXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgY29ubmVjdFxuICAgICAqICBAZm9yIHA1Lk1vbm9TeW50aFxuICAgICAqICBAcGFyYW0gIHtPYmplY3R9IHVuaXQgQSBwNS5zb3VuZCBvciBXZWIgQXVkaW8gb2JqZWN0XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3QodW5pdCkge1xuICAgICAgdmFyIHUgPSB1bml0IHx8IG1haW4uaW5wdXQ7XG4gICAgICB0aGlzLm91dHB1dC5jb25uZWN0KHUuaW5wdXQgPyB1LmlucHV0IDogdSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBEaXNjb25uZWN0IGFsbCBvdXRwdXRzXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgZGlzY29ubmVjdFxuICAgICAqICBAZm9yIHA1Lk1vbm9TeW50aFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNjb25uZWN0KCkge1xuICAgICAgaWYgKHRoaXMub3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIEdldCByaWQgb2YgdGhlIE1vbm9TeW50aCBhbmQgZnJlZSB1cCBpdHMgcmVzb3VyY2VzIC8gbWVtb3J5LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGRpc3Bvc2VcbiAgICAgKiAgQGZvciBwNS5Nb25vU3ludGhcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRpc3Bvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIG1vbm9zeW50aF9nZXQobW9ub3N5bnRoX2dldFByb3RvdHlwZU9mKE1vbm9TeW50aC5wcm90b3R5cGUpLCBcImRpc3Bvc2VcIiwgdGhpcykuY2FsbCh0aGlzKTtcblxuICAgICAgaWYgKHRoaXMuZW52KSB7XG4gICAgICAgIHRoaXMuZW52LmRpc3Bvc2UoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3NjaWxsYXRvcikge1xuICAgICAgICB0aGlzLm9zY2lsbGF0b3IuZGlzcG9zZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNb25vU3ludGg7XG59KGF1ZGlvVm9pY2VfMCk7XG5cbiB2YXIgbW9ub3N5bnRoID0gKG1vbm9zeW50aF9Nb25vU3ludGgpO1xuZnVuY3Rpb24gb25zZXREZXRlY3RfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBvbnNldERldGVjdF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gb25zZXREZXRlY3RfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBvbnNldERldGVjdF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgb25zZXREZXRlY3RfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuLyoqXG4gKiAgTGlzdGVuIGZvciBvbnNldHMgKGEgc2hhcnAgaW5jcmVhc2UgaW4gdm9sdW1lKSB3aXRoaW4gYSBnaXZlblxuICogIGZyZXF1ZW5jeSByYW5nZS5cbiAqXG4gKiAgQGNsYXNzIHA1Lk9uc2V0RGV0ZWN0XG4gKiAgQGNvbnN0cnVjdG9yXG4gKiAgQHBhcmFtIHtOdW1iZXJ9IGZyZXFMb3cgICAgIExvdyBmcmVxdWVuY3lcbiAqICBAcGFyYW0ge051bWJlcn0gZnJlcUhpZ2ggICAgIEhpZ2ggZnJlcXVlbmN5XG4gKiAgQHBhcmFtIHtOdW1iZXJ9IHRocmVzaG9sZCAgIEFtcGxpdHVkZSB0aHJlc2hvbGQgYmV0d2VlbiAwIChubyBlbmVyZ3kpIGFuZCAxIChtYXhpbXVtKVxuICogIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrICBGdW5jdGlvbiB0byBjYWxsIHdoZW4gYW4gb25zZXQgaXMgZGV0ZWN0ZWRcbiAqL1xudmFyIE9uc2V0RGV0ZWN0ID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gT25zZXREZXRlY3QoZnJlcUxvdywgZnJlcUhpZ2gsIHRocmVzaG9sZCwgY2FsbGJhY2spIHtcbiAgICBvbnNldERldGVjdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPbnNldERldGVjdCk7XG5cbiAgICB0aGlzLmlzRGV0ZWN0ZWQgPSBmYWxzZTtcbiAgICB0aGlzLmZyZXFMb3cgPSBmcmVxTG93O1xuICAgIHRoaXMuZnJlcUhpZ2ggPSBmcmVxSGlnaDtcbiAgICB0aGlzLnRyZXNob2xkID0gdGhyZXNob2xkO1xuICAgIHRoaXMuZW5lcmd5ID0gMDtcbiAgICB0aGlzLnBlbmVyZ3kgPSAwOyBcblxuICAgIHRoaXMuc2Vuc2l0aXZpdHkgPSA1MDA7XG4gICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICB9IFxuXG5cbiAgb25zZXREZXRlY3RfY3JlYXRlQ2xhc3MoT25zZXREZXRlY3QsIFt7XG4gICAga2V5OiBcInVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoZmZ0T2JqZWN0LCBjYWxsYmFjaykge1xuICAgICAgdGhpcy5lbmVyZ3kgPSBmZnRPYmplY3QuZ2V0RW5lcmd5KHRoaXMuZnJlcUxvdywgdGhpcy5mcmVxSGlnaCkgLyAyNTU7XG5cbiAgICAgIGlmICh0aGlzLmlzRGV0ZWN0ZWQgPT09IGZhbHNlKSB7XG4gICAgICAgIGlmICh0aGlzLmVuZXJneSAtIHRoaXMucGVuZXJneSA+IHRoaXMudHJlc2hvbGQpIHtcbiAgICAgICAgICB0aGlzLmlzRGV0ZWN0ZWQgPSB0cnVlO1xuXG4gICAgICAgICAgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2sodGhpcy5lbmVyZ3kpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHRoaXMuZW5lcmd5KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzZWxmLmlzRGV0ZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICB9LCB0aGlzLnNlbnNpdGl2aXR5KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnBlbmVyZ3kgPSB0aGlzLmVuZXJneTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gT25zZXREZXRlY3Q7XG59KCk7XG5cbiB2YXIgb25zZXREZXRlY3QgPSAoT25zZXREZXRlY3QpO1xuZnVuY3Rpb24gcG9seXN5bnRoX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gcG9seXN5bnRoX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBwb2x5c3ludGhfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBwb2x5c3ludGhfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIHBvbHlzeW50aF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5cblxuXG4vKipcbiAqICBBbiBBdWRpb1ZvaWNlIGlzIHVzZWQgYXMgYSBzaW5nbGUgdm9pY2UgZm9yIHNvdW5kIHN5bnRoZXNpcy5cbiAqICBUaGUgUG9seVN5bnRoIGNsYXNzIGhvbGRzIGFuIGFycmF5IG9mIEF1ZGlvVm9pY2UsIGFuZCBkZWFsc1xuICogIHdpdGggdm9pY2VzIGFsbG9jYXRpb25zLCB3aXRoIHNldHRpbmcgbm90ZXMgdG8gYmUgcGxheWVkLCBhbmRcbiAqICBwYXJhbWV0ZXJzIHRvIGJlIHNldC5cbiAqXG4gKiAgQGNsYXNzIHA1LlBvbHlTeW50aFxuICogIEBjb25zdHJ1Y3RvclxuICpcbiAqICBAcGFyYW0ge051bWJlcn0gW3N5bnRoVm9pY2VdICAgQSBtb25vcGhvbmljIHN5bnRoIHZvaWNlIGluaGVyaXRpbmdcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIEF1ZGlvVm9pY2UgY2xhc3MuIERlZmF1bHRzIHRvIHA1Lk1vbm9TeW50aFxuICogIEBwYXJhbSB7TnVtYmVyfSBbbWF4Vm9pY2VzXSBOdW1iZXIgb2Ygdm9pY2VzLCBkZWZhdWx0cyB0byA4O1xuICogIEBleGFtcGxlXG4gKiAgPGRpdj48Y29kZT5cbiAqICBsZXQgcG9seVN5bnRoO1xuICpcbiAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICogICAgY252Lm1vdXNlUHJlc3NlZChwbGF5U3ludGgpO1xuICogICAgYmFja2dyb3VuZCgyMjApO1xuICogICAgdGV4dCgnY2xpY2sgdG8gcGxheScsIDIwLCAyMCk7XG4gKlxuICogICAgcG9seVN5bnRoID0gbmV3IHA1LlBvbHlTeW50aCgpO1xuICogIH1cbiAqXG4gKiAgZnVuY3Rpb24gcGxheVN5bnRoKCkge1xuICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAqXG4gKiAgICAvLyBub3RlIGR1cmF0aW9uIChpbiBzZWNvbmRzKVxuICogICAgbGV0IGR1ciA9IDEuNTtcbiAqXG4gKiAgICAvLyB0aW1lIGZyb20gbm93IChpbiBzZWNvbmRzKVxuICogICAgbGV0IHRpbWUgPSAwO1xuICpcbiAqICAgIC8vIHZlbG9jaXR5ICh2b2x1bWUsIGZyb20gMCB0byAxKVxuICogICAgbGV0IHZlbCA9IDAuMTtcbiAqXG4gKiAgICAvLyBub3RlcyBjYW4gb3ZlcmxhcCB3aXRoIGVhY2ggb3RoZXJcbiAqICAgIHBvbHlTeW50aC5wbGF5KCdHMicsIHZlbCwgMCwgZHVyKTtcbiAqICAgIHBvbHlTeW50aC5wbGF5KCdDMycsIHZlbCwgdGltZSArPSAxLzMsIGR1cik7XG4gKiAgICBwb2x5U3ludGgucGxheSgnRzMnLCB2ZWwsIHRpbWUgKz0gMS8zLCBkdXIpO1xuICogIH1cbiAqICA8L2NvZGU+PC9kaXY+XG4gKiovXG5cbnZhciBwb2x5c3ludGhfUG9seVN5bnRoID1cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUG9seVN5bnRoKGF1ZGlvVm9pY2UsIG1heFZvaWNlcykge1xuICAgIHBvbHlzeW50aF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQb2x5U3ludGgpO1xuXG4gICAgdGhpcy5hdWRpb3ZvaWNlcyA9IFtdO1xuICAgIC8qKlxuICAgICAqIEFuIG9iamVjdCB0aGF0IGhvbGRzIGluZm9ybWF0aW9uIGFib3V0IHdoaWNoIG5vdGVzIGhhdmUgYmVlbiBwbGF5ZWQgYW5kXG4gICAgICogd2hpY2ggbm90ZXMgYXJlIGN1cnJlbnRseSBiZWluZyBwbGF5ZWQuIE5ldyBub3RlcyBhcmUgYWRkZWQgYXMga2V5c1xuICAgICAqIG9uIHRoZSBmbHkuIFdoaWxlIGEgbm90ZSBoYXMgYmVlbiBhdHRhY2tlZCwgYnV0IG5vdCByZWxlYXNlZCwgdGhlIHZhbHVlIG9mIHRoZVxuICAgICAqIGtleSBpcyB0aGUgYXVkaW92b2ljZSB3aGljaCBpcyBnZW5lcmF0aW5nIHRoYXQgbm90ZS4gV2hlbiBub3RlcyBhcmUgcmVsZWFzZWQsXG4gICAgICogdGhlIHZhbHVlIG9mIHRoZSBrZXkgYmVjb21lcyB1bmRlZmluZWQuXG4gICAgICogQHByb3BlcnR5IG5vdGVzXG4gICAgICovXG5cbiAgICB0aGlzLm5vdGVzID0ge307IFxuXG4gICAgdGhpcy5fbmV3ZXN0ID0gMDtcbiAgICB0aGlzLl9vbGRlc3QgPSAwO1xuICAgIC8qKlxuICAgICAqIEEgUG9seVN5bnRoIG11c3QgaGF2ZSBhdCBsZWFzdCAxIHZvaWNlLCBkZWZhdWx0cyB0byA4XG4gICAgICogQHByb3BlcnR5IHBvbHl2YWx1ZVxuICAgICAqL1xuXG4gICAgdGhpcy5tYXhWb2ljZXMgPSBtYXhWb2ljZXMgfHwgODtcbiAgICAvKipcbiAgICAgKiBNb25vc3ludGggdGhhdCBnZW5lcmF0ZXMgdGhlIHNvdW5kIGZvciBlYWNoIG5vdGUgdGhhdCBpcyB0cmlnZ2VyZWQuIFRoZVxuICAgICAqIHA1LlBvbHlTeW50aCBkZWZhdWx0cyB0byB1c2luZyB0aGUgcDUuTW9ub1N5bnRoIGFzIGl0cyB2b2ljZS5cbiAgICAgKiBAcHJvcGVydHkgQXVkaW9Wb2ljZVxuICAgICAqL1xuXG4gICAgdGhpcy5BdWRpb1ZvaWNlID0gYXVkaW9Wb2ljZSA9PT0gdW5kZWZpbmVkID8gcDUuTW9ub1N5bnRoIDogYXVkaW9Wb2ljZTtcbiAgICAvKipcbiAgICAgKiBUaGlzIHZhbHVlIG11c3Qgb25seSBjaGFuZ2UgYXMgYSBub3RlIGlzIGF0dGFja2VkIG9yIHJlbGVhc2VkLiBEdWUgdG8gZGVsYXlcbiAgICAgKiBhbmQgc3VzdGFpbiB0aW1lcywgVG9uZS5UaW1lbGluZVNpZ25hbCBpcyByZXF1aXJlZCB0byBzY2hlZHVsZSB0aGUgY2hhbmdlIGluIHZhbHVlLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHByb3BlcnR5IHtUb25lLlRpbWVsaW5lU2lnbmFsfSBfdm9pY2VzSW5Vc2VcbiAgICAgKi9cblxuICAgIHRoaXMuX3ZvaWNlc0luVXNlID0gbmV3IFRpbWVsaW5lU2lnbmFsX2RlZmF1bHQuYSgwKTtcbiAgICB0aGlzLm91dHB1dCA9IG1haW4uYXVkaW9jb250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICB0aGlzLmNvbm5lY3QoKTsgXG5cbiAgICB0aGlzLl9hbGxvY2F0ZVZvaWNlcygpO1xuXG4gICAgbWFpbi5zb3VuZEFycmF5LnB1c2godGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqIENvbnN0cnVjdCB0aGUgYXBwcm9wcmlhdGUgbnVtYmVyIG9mIGF1ZGlvdm9pY2VzXG4gICAqIEBwcml2YXRlXG4gICAqIEBmb3IgcDUuUG9seVN5bnRoXG4gICAqIEBtZXRob2QgIF9hbGxvY2F0ZVZvaWNlc1xuICAgKi9cblxuXG4gIHBvbHlzeW50aF9jcmVhdGVDbGFzcyhQb2x5U3ludGgsIFt7XG4gICAga2V5OiBcIl9hbGxvY2F0ZVZvaWNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfYWxsb2NhdGVWb2ljZXMoKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubWF4Vm9pY2VzOyBpKyspIHtcbiAgICAgICAgdGhpcy5hdWRpb3ZvaWNlcy5wdXNoKG5ldyB0aGlzLkF1ZGlvVm9pY2UoKSk7XG4gICAgICAgIHRoaXMuYXVkaW92b2ljZXNbaV0uZGlzY29ubmVjdCgpO1xuICAgICAgICB0aGlzLmF1ZGlvdm9pY2VzW2ldLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUGxheSBhIG5vdGUgYnkgdHJpZ2dlcmluZyBub3RlQXR0YWNrIGFuZCBub3RlUmVsZWFzZSB3aXRoIHN1c3RhaW4gdGltZVxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHBsYXlcbiAgICAgKiAgQGZvciBwNS5Qb2x5U3ludGhcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbbm90ZV0gbWlkaSBub3RlIHRvIHBsYXkgKHJhbmdpbmcgZnJvbSAwIHRvIDEyNyAtIDYwIGJlaW5nIGEgbWlkZGxlIEMpXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gW3ZlbG9jaXR5XSB2ZWxvY2l0eSBvZiB0aGUgbm90ZSB0byBwbGF5IChyYW5naW5nIGZyb20gMCB0byAxKVxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtzZWNvbmRzRnJvbU5vd10gIHRpbWUgZnJvbSBub3cgKGluIHNlY29uZHMpIGF0IHdoaWNoIHRvIHBsYXlcbiAgICAgKiAgQHBhcmFtICB7TnVtYmVyfSBbc3VzdGFpblRpbWVdIHRpbWUgdG8gc3VzdGFpbiBiZWZvcmUgcmVsZWFzaW5nIHRoZSBlbnZlbG9wZVxuICAgICAqICBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgcG9seVN5bnRoO1xuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgICAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICAgICAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheVN5bnRoKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgdGV4dCgnY2xpY2sgdG8gcGxheScsIDIwLCAyMCk7XG4gICAgICpcbiAgICAgKiAgICBwb2x5U3ludGggPSBuZXcgcDUuUG9seVN5bnRoKCk7XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBwbGF5U3ludGgoKSB7XG4gICAgICogICAgdXNlclN0YXJ0QXVkaW8oKTtcbiAgICAgKlxuICAgICAqICAgIC8vIG5vdGUgZHVyYXRpb24gKGluIHNlY29uZHMpXG4gICAgICogICAgbGV0IGR1ciA9IDEuNTtcbiAgICAgKlxuICAgICAqICAgIC8vIHRpbWUgZnJvbSBub3cgKGluIHNlY29uZHMpXG4gICAgICogICAgbGV0IHRpbWUgPSAwO1xuICAgICAqXG4gICAgICogICAgLy8gdmVsb2NpdHkgKHZvbHVtZSwgZnJvbSAwIHRvIDEpXG4gICAgICogICAgbGV0IHZlbCA9IDAuMTtcbiAgICAgKlxuICAgICAqICAgIC8vIG5vdGVzIGNhbiBvdmVybGFwIHdpdGggZWFjaCBvdGhlclxuICAgICAqICAgIHBvbHlTeW50aC5wbGF5KCdHMicsIHZlbCwgMCwgZHVyKTtcbiAgICAgKiAgICBwb2x5U3ludGgucGxheSgnQzMnLCB2ZWwsIHRpbWUgKz0gMS8zLCBkdXIpO1xuICAgICAqICAgIHBvbHlTeW50aC5wbGF5KCdHMycsIHZlbCwgdGltZSArPSAxLzMsIGR1cik7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicGxheVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwbGF5KG5vdGUsIHZlbG9jaXR5LCBzZWNvbmRzRnJvbU5vdykge1xuICAgICAgdmFyIHN1c1RpbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDE7XG4gICAgICB0aGlzLm5vdGVBdHRhY2sobm90ZSwgdmVsb2NpdHksIHNlY29uZHNGcm9tTm93KTtcbiAgICAgIHRoaXMubm90ZVJlbGVhc2Uobm90ZSwgc2Vjb25kc0Zyb21Ob3cgKyBzdXNUaW1lKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIG5vdGVBRFNSIHNldHMgdGhlIGVudmVsb3BlIGZvciBhIHNwZWNpZmljIG5vdGUgdGhhdCBoYXMganVzdCBiZWVuIHRyaWdnZXJlZC5cbiAgICAgKiAgVXNpbmcgdGhpcyBtZXRob2QgbW9kaWZpZXMgdGhlIGVudmVsb3BlIG9mIHdoaWNoZXZlciBhdWRpb3ZvaWNlIGlzIGJlaW5nIHVzZWRcbiAgICAgKiAgdG8gcGxheSB0aGUgZGVzaXJlZCBub3RlLiBUaGUgZW52ZWxvcGUgc2hvdWxkIGJlIHJlc2V0IGJlZm9yZSBub3RlUmVsZWFzZSBpcyBjYWxsZWRcbiAgICAgKiAgaW4gb3JkZXIgdG8gcHJldmVudCB0aGUgbW9kaWZpZWQgZW52ZWxvcGUgZnJvbSBiZWluZyB1c2VkIG9uIG90aGVyIG5vdGVzLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIG5vdGVBRFNSXG4gICAgICogIEBmb3IgcDUuUG9seVN5bnRoXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbbm90ZV0gICAgICAgIE1pZGkgbm90ZSBvbiB3aGljaCBBRFNSIHNob3VsZCBiZSBzZXQuXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbYXR0YWNrVGltZV0gIFRpbWUgKGluIHNlY29uZHMgYmVmb3JlIGVudmVsb3BlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgQXR0YWNrIExldmVsXG4gICAgICogIEBwYXJhbSB7TnVtYmVyfSBbZGVjYXlUaW1lXSAgIFRpbWUgKGluIHNlY29uZHMpIGJlZm9yZSBlbnZlbG9wZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFjaGVzIERlY2F5L1N1c3RhaW4gTGV2ZWxcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtzdXNSYXRpb10gICAgUmF0aW8gYmV0d2VlbiBhdHRhY2tMZXZlbCBhbmQgcmVsZWFzZUxldmVsLCBvbiBhIHNjYWxlIGZyb20gMCB0byAxLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZSAxLjAgPSBhdHRhY2tMZXZlbCwgMC4wID0gcmVsZWFzZUxldmVsLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgc3VzUmF0aW8gZGV0ZXJtaW5lcyB0aGUgZGVjYXlMZXZlbCBhbmQgdGhlIGxldmVsIGF0IHdoaWNoIHRoZVxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdXN0YWluIHBvcnRpb24gb2YgdGhlIGVudmVsb3BlIHdpbGwgc3VzdGFpbi5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yIGV4YW1wbGUsIGlmIGF0dGFja0xldmVsIGlzIDAuNCwgcmVsZWFzZUxldmVsIGlzIDAsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBzdXNBbXQgaXMgMC41LCB0aGUgZGVjYXlMZXZlbCB3b3VsZCBiZSAwLjIuIElmIGF0dGFja0xldmVsIGlzXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlYXNlZCB0byAxLjAgKHVzaW5nIDxjb2RlPnNldFJhbmdlPC9jb2RlPiksXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gZGVjYXlMZXZlbCB3b3VsZCBpbmNyZWFzZSBwcm9wb3J0aW9uYWxseSwgdG8gYmVjb21lIDAuNS5cbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtyZWxlYXNlVGltZV0gICBUaW1lIGluIHNlY29uZHMgZnJvbSBub3cgKGRlZmF1bHRzIHRvIDApXG4gICAgICoqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwibm90ZUFEU1JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbm90ZUFEU1Iobm90ZSwgYSwgZCwgcywgcikge1xuICAgICAgdmFyIHRpbWVGcm9tTm93ID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgJiYgYXJndW1lbnRzWzVdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNV0gOiAwO1xuICAgICAgdmFyIG5vdyA9IG1haW4uYXVkaW9jb250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgdmFyIHQgPSBub3cgKyB0aW1lRnJvbU5vdztcbiAgICAgIHRoaXMuYXVkaW92b2ljZXNbdGhpcy5ub3Rlc1tub3RlXS5nZXRWYWx1ZUF0VGltZSh0KV0uc2V0QURTUihhLCBkLCBzLCByKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBQb2x5U3ludGhzIGdsb2JhbCBlbnZlbG9wZS4gVGhpcyBtZXRob2QgbW9kaWZpZXMgdGhlIGVudmVsb3BlcyBvZiBlYWNoXG4gICAgICogbW9ub3N5bnRoIHNvIHRoYXQgYWxsIG5vdGVzIGFyZSBwbGF5ZWQgd2l0aCB0aGlzIGVudmVsb3BlLlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIHNldEFEU1JcbiAgICAgKiAgQGZvciBwNS5Qb2x5U3ludGhcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFthdHRhY2tUaW1lXSAgVGltZSAoaW4gc2Vjb25kcyBiZWZvcmUgZW52ZWxvcGVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhY2hlcyBBdHRhY2sgTGV2ZWxcbiAgICAgKiAgQHBhcmFtIHtOdW1iZXJ9IFtkZWNheVRpbWVdICAgVGltZSAoaW4gc2Vjb25kcykgYmVmb3JlIGVudmVsb3BlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgRGVjYXkvU3VzdGFpbiBMZXZlbFxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3N1c1JhdGlvXSAgICBSYXRpbyBiZXR3ZWVuIGF0dGFja0xldmVsIGFuZCByZWxlYXNlTGV2ZWwsIG9uIGEgc2NhbGUgZnJvbSAwIHRvIDEsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlIDEuMCA9IGF0dGFja0xldmVsLCAwLjAgPSByZWxlYXNlTGV2ZWwuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBzdXNSYXRpbyBkZXRlcm1pbmVzIHRoZSBkZWNheUxldmVsIGFuZCB0aGUgbGV2ZWwgYXQgd2hpY2ggdGhlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1c3RhaW4gcG9ydGlvbiBvZiB0aGUgZW52ZWxvcGUgd2lsbCBzdXN0YWluLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb3IgZXhhbXBsZSwgaWYgYXR0YWNrTGV2ZWwgaXMgMC40LCByZWxlYXNlTGV2ZWwgaXMgMCxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIHN1c0FtdCBpcyAwLjUsIHRoZSBkZWNheUxldmVsIHdvdWxkIGJlIDAuMi4gSWYgYXR0YWNrTGV2ZWwgaXNcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5jcmVhc2VkIHRvIDEuMCAodXNpbmcgPGNvZGU+c2V0UmFuZ2U8L2NvZGU+KSxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbiBkZWNheUxldmVsIHdvdWxkIGluY3JlYXNlIHByb3BvcnRpb25hbGx5LCB0byBiZWNvbWUgMC41LlxuICAgICAqICBAcGFyYW0ge051bWJlcn0gW3JlbGVhc2VUaW1lXSAgIFRpbWUgaW4gc2Vjb25kcyBmcm9tIG5vdyAoZGVmYXVsdHMgdG8gMClcbiAgICAgKiovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRBRFNSXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldEFEU1IoYSwgZCwgcywgcikge1xuICAgICAgdGhpcy5hdWRpb3ZvaWNlcy5mb3JFYWNoKGZ1bmN0aW9uICh2b2ljZSkge1xuICAgICAgICB2b2ljZS5zZXRBRFNSKGEsIGQsIHMsIHIpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBUcmlnZ2VyIHRoZSBBdHRhY2ssIGFuZCBEZWNheSBwb3J0aW9uIG9mIGEgTW9ub1N5bnRoLlxuICAgICAqICBTaW1pbGFyIHRvIGhvbGRpbmcgZG93biBhIGtleSBvbiBhIHBpYW5vLCBidXQgaXQgd2lsbFxuICAgICAqICBob2xkIHRoZSBzdXN0YWluIGxldmVsIHVudGlsIHlvdSBsZXQgZ28uXG4gICAgICpcbiAgICAgKiAgQG1ldGhvZCAgbm90ZUF0dGFja1xuICAgICAqICBAZm9yIHA1LlBvbHlTeW50aFxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtub3RlXSAgICAgICAgICAgbWlkaSBub3RlIG9uIHdoaWNoIGF0dGFjayBzaG91bGQgYmUgdHJpZ2dlcmVkLlxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFt2ZWxvY2l0eV0gICAgICAgdmVsb2NpdHkgb2YgdGhlIG5vdGUgdG8gcGxheSAocmFuZ2luZyBmcm9tIDAgdG8gMSkvXG4gICAgICogIEBwYXJhbSAge051bWJlcn0gW3NlY29uZHNGcm9tTm93XSB0aW1lIGZyb20gbm93IChpbiBzZWNvbmRzKVxuICAgICAqICBAZXhhbXBsZVxuICAgICAqICA8ZGl2Pjxjb2RlPlxuICAgICAqICBsZXQgcG9seVN5bnRoID0gbmV3IHA1LlBvbHlTeW50aCgpO1xuICAgICAqICBsZXQgcGl0Y2hlcyA9IFsnRycsICdEJywgJ0cnLCAnQyddO1xuICAgICAqICBsZXQgb2N0YXZlcyA9IFsyLCAzLCA0XTtcbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICAgKiAgICBsZXQgY252ID0gY3JlYXRlQ2FudmFzKDEwMCwgMTAwKTtcbiAgICAgKiAgICBjbnYubW91c2VQcmVzc2VkKHBsYXlDaG9yZCk7XG4gICAgICogICAgYmFja2dyb3VuZCgyMjApO1xuICAgICAqICAgIHRleHQoJ3RhcCB0byBwbGF5JywgMjAsIDIwKTtcbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHBsYXlDaG9yZCgpIHtcbiAgICAgKiAgICB1c2VyU3RhcnRBdWRpbygpO1xuICAgICAqXG4gICAgICogICAgLy8gcGxheSBhIGNob3JkOiBtdWx0aXBsZSBub3RlcyBhdCB0aGUgc2FtZSB0aW1lXG4gICAgICogICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgKiAgICAgIGxldCBub3RlID0gcmFuZG9tKHBpdGNoZXMpICsgcmFuZG9tKG9jdGF2ZXMpO1xuICAgICAqICAgICAgcG9seVN5bnRoLm5vdGVBdHRhY2sobm90ZSwgMC4xKTtcbiAgICAgKiAgICB9XG4gICAgICogIH1cbiAgICAgKlxuICAgICAqICBmdW5jdGlvbiBtb3VzZVJlbGVhc2VkKCkge1xuICAgICAqICAgIC8vIHJlbGVhc2UgYWxsIHZvaWNlc1xuICAgICAqICAgIHBvbHlTeW50aC5ub3RlUmVsZWFzZSgpO1xuICAgICAqICB9XG4gICAgICogIDwvY29kZT48L2Rpdj5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIm5vdGVBdHRhY2tcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbm90ZUF0dGFjayhfbm90ZSwgX3ZlbG9jaXR5KSB7XG4gICAgICB2YXIgc2Vjb25kc0Zyb21Ob3cgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDA7XG4gICAgICB2YXIgYWNUaW1lID0gbWFpbi5hdWRpb2NvbnRleHQuY3VycmVudFRpbWUgKyBzZWNvbmRzRnJvbU5vdzsgXG5cbiAgICAgIHZhciBub3RlID0gbm90ZVRvRnJlcShfbm90ZSk7XG4gICAgICB2YXIgdmVsb2NpdHkgPSBfdmVsb2NpdHkgfHwgMC4xO1xuICAgICAgdmFyIGN1cnJlbnRWb2ljZTsgXG5cbiAgICAgIGlmICh0aGlzLm5vdGVzW25vdGVdICYmIHRoaXMubm90ZXNbbm90ZV0uZ2V0VmFsdWVBdFRpbWUoYWNUaW1lKSAhPT0gbnVsbCkge1xuICAgICAgICB0aGlzLm5vdGVSZWxlYXNlKG5vdGUsIDApO1xuICAgICAgfSBcblxuXG4gICAgICBpZiAodGhpcy5fdm9pY2VzSW5Vc2UuZ2V0VmFsdWVBdFRpbWUoYWNUaW1lKSA8IHRoaXMubWF4Vm9pY2VzKSB7XG4gICAgICAgIGN1cnJlbnRWb2ljZSA9IE1hdGgubWF4KH5+dGhpcy5fdm9pY2VzSW5Vc2UuZ2V0VmFsdWVBdFRpbWUoYWNUaW1lKSwgMCk7XG4gICAgICB9IFxuICAgICAgZWxzZSB7XG4gICAgICAgICAgY3VycmVudFZvaWNlID0gdGhpcy5fb2xkZXN0O1xuICAgICAgICAgIG9sZGVzdE5vdGUgPSBmcmVxVG9NaWRpKHRoaXMuYXVkaW92b2ljZXNbdGhpcy5fb2xkZXN0XS5vc2NpbGxhdG9yLmZyZXEoKS52YWx1ZSk7XG4gICAgICAgICAgdGhpcy5ub3RlUmVsZWFzZShvbGRlc3ROb3RlKTtcbiAgICAgICAgICB0aGlzLl9vbGRlc3QgPSAodGhpcy5fb2xkZXN0ICsgMSkgJSAodGhpcy5tYXhWb2ljZXMgLSAxKTtcbiAgICAgICAgfSBcblxuXG4gICAgICB0aGlzLm5vdGVzW25vdGVdID0gbmV3IFRpbWVsaW5lU2lnbmFsX2RlZmF1bHQuYSgpO1xuICAgICAgdGhpcy5ub3Rlc1tub3RlXS5zZXRWYWx1ZUF0VGltZShjdXJyZW50Vm9pY2UsIGFjVGltZSk7IFxuXG4gICAgICB2YXIgcHJldmlvdXNWYWwgPSB0aGlzLl92b2ljZXNJblVzZS5fc2VhcmNoQmVmb3JlKGFjVGltZSkgPT09IG51bGwgPyAwIDogdGhpcy5fdm9pY2VzSW5Vc2UuX3NlYXJjaEJlZm9yZShhY1RpbWUpLnZhbHVlO1xuXG4gICAgICB0aGlzLl92b2ljZXNJblVzZS5zZXRWYWx1ZUF0VGltZShwcmV2aW91c1ZhbCArIDEsIGFjVGltZSk7IFxuXG5cbiAgICAgIHRoaXMuX3VwZGF0ZUFmdGVyKGFjVGltZSwgMSk7XG5cbiAgICAgIHRoaXMuX25ld2VzdCA9IGN1cnJlbnRWb2ljZTsgXG5cbiAgICAgIGlmICh0eXBlb2YgdmVsb2NpdHkgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHZhciBtYXhSYW5nZSA9IDEgLyB0aGlzLl92b2ljZXNJblVzZS5nZXRWYWx1ZUF0VGltZShhY1RpbWUpICogMjtcbiAgICAgICAgdmVsb2NpdHkgPSB2ZWxvY2l0eSA+IG1heFJhbmdlID8gbWF4UmFuZ2UgOiB2ZWxvY2l0eTtcbiAgICAgIH0gXG5cblxuICAgICAgdGhpcy5hdWRpb3ZvaWNlc1tjdXJyZW50Vm9pY2VdLnRyaWdnZXJBdHRhY2sobm90ZSwgdmVsb2NpdHksIHNlY29uZHNGcm9tTm93KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUHJpdmF0ZSBtZXRob2QgdG8gZW5zdXJlIGFjY3VyYXRlIHZhbHVlcyBvZiB0aGlzLl92b2ljZXNJblVzZVxuICAgICAqIEFueSB0aW1lIGEgbmV3IHZhbHVlIGlzIHNjaGVkdWxlZCwgaXQgaXMgbmVjZXNzYXJ5IHRvIGluY3JlbWVudCBhbGwgc3Vic2VxdWVudFxuICAgICAqIHNjaGVkdWxlZFZhbHVlcyBhZnRlciBhdHRhY2ssIGFuZCBkZWNyZW1lbnQgYWxsIHN1YnNlcXVlbnRcbiAgICAgKiBzY2hlZHVsZWRWYWx1ZXMgYWZ0ZXIgcmVsZWFzZVxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAZm9yIHA1LlBvbHlTeW50aFxuICAgICAqIEBwYXJhbSAge1t0eXBlXX0gdGltZSAgW2Rlc2NyaXB0aW9uXVxuICAgICAqIEBwYXJhbSAge1t0eXBlXX0gdmFsdWUgW2Rlc2NyaXB0aW9uXVxuICAgICAqIEByZXR1cm4ge1t0eXBlXX0gICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiX3VwZGF0ZUFmdGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF91cGRhdGVBZnRlcih0aW1lLCB2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMuX3ZvaWNlc0luVXNlLl9zZWFyY2hBZnRlcih0aW1lKSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl92b2ljZXNJblVzZS5fc2VhcmNoQWZ0ZXIodGltZSkudmFsdWUgKz0gdmFsdWU7XG5cbiAgICAgICAgdmFyIG5leHRUaW1lID0gdGhpcy5fdm9pY2VzSW5Vc2UuX3NlYXJjaEFmdGVyKHRpbWUpLnRpbWU7XG5cbiAgICAgICAgdGhpcy5fdXBkYXRlQWZ0ZXIobmV4dFRpbWUsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogIFRyaWdnZXIgdGhlIFJlbGVhc2Ugb2YgYW4gQXVkaW9Wb2ljZSBub3RlLiBUaGlzIGlzIHNpbWlsYXIgdG8gcmVsZWFzaW5nXG4gICAgICogIHRoZSBrZXkgb24gYSBwaWFubyBhbmQgbGV0dGluZyB0aGUgc291bmQgZmFkZSBhY2NvcmRpbmcgdG8gdGhlXG4gICAgICogIHJlbGVhc2UgbGV2ZWwgYW5kIHJlbGVhc2UgdGltZS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBub3RlUmVsZWFzZVxuICAgICAqICBAZm9yIHA1LlBvbHlTeW50aFxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtub3RlXSAgICAgICAgICAgbWlkaSBub3RlIG9uIHdoaWNoIGF0dGFjayBzaG91bGQgYmUgdHJpZ2dlcmVkLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgbm8gdmFsdWUgaXMgcHJvdmlkZWQsIGFsbCBub3RlcyB3aWxsIGJlIHJlbGVhc2VkLlxuICAgICAqICBAcGFyYW0gIHtOdW1iZXJ9IFtzZWNvbmRzRnJvbU5vd10gdGltZSB0byB0cmlnZ2VyIHRoZSByZWxlYXNlXG4gICAgICogIEBleGFtcGxlXG4gICAgICogIDxkaXY+PGNvZGU+XG4gICAgICogIGxldCBwb2x5U3ludGggPSBuZXcgcDUuUG9seVN5bnRoKCk7XG4gICAgICogIGxldCBwaXRjaGVzID0gWydHJywgJ0QnLCAnRycsICdDJ107XG4gICAgICogIGxldCBvY3RhdmVzID0gWzIsIDMsIDRdO1xuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgICAqICAgIGxldCBjbnYgPSBjcmVhdGVDYW52YXMoMTAwLCAxMDApO1xuICAgICAqICAgIGNudi5tb3VzZVByZXNzZWQocGxheUNob3JkKTtcbiAgICAgKiAgICBiYWNrZ3JvdW5kKDIyMCk7XG4gICAgICogICAgdGV4dCgndGFwIHRvIHBsYXknLCAyMCwgMjApO1xuICAgICAqICB9XG4gICAgICpcbiAgICAgKiAgZnVuY3Rpb24gcGxheUNob3JkKCkge1xuICAgICAqICAgIHVzZXJTdGFydEF1ZGlvKCk7XG4gICAgICpcbiAgICAgKiAgICAvLyBwbGF5IGEgY2hvcmQ6IG11bHRpcGxlIG5vdGVzIGF0IHRoZSBzYW1lIHRpbWVcbiAgICAgKiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgICAqICAgICAgbGV0IG5vdGUgPSByYW5kb20ocGl0Y2hlcykgKyByYW5kb20ob2N0YXZlcyk7XG4gICAgICogICAgICBwb2x5U3ludGgubm90ZUF0dGFjayhub3RlLCAwLjEpO1xuICAgICAqICAgIH1cbiAgICAgKiAgfVxuICAgICAqXG4gICAgICogIGZ1bmN0aW9uIG1vdXNlUmVsZWFzZWQoKSB7XG4gICAgICogICAgLy8gcmVsZWFzZSBhbGwgdm9pY2VzXG4gICAgICogICAgcG9seVN5bnRoLm5vdGVSZWxlYXNlKCk7XG4gICAgICogIH1cbiAgICAgKiAgPC9jb2RlPjwvZGl2PlxuICAgICAqXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJub3RlUmVsZWFzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBub3RlUmVsZWFzZShfbm90ZSwgc2Vjb25kc0Zyb21Ob3cpIHtcbiAgICAgIHZhciBub3cgPSBtYWluLmF1ZGlvY29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgIHZhciB0RnJvbU5vdyA9IHNlY29uZHNGcm9tTm93IHx8IDA7XG4gICAgICB2YXIgdCA9IG5vdyArIHRGcm9tTm93OyBcblxuICAgICAgaWYgKCFfbm90ZSkge1xuICAgICAgICB0aGlzLmF1ZGlvdm9pY2VzLmZvckVhY2goZnVuY3Rpb24gKHZvaWNlKSB7XG4gICAgICAgICAgdm9pY2UudHJpZ2dlclJlbGVhc2UodEZyb21Ob3cpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLl92b2ljZXNJblVzZS5zZXRWYWx1ZUF0VGltZSgwLCB0KTtcblxuICAgICAgICBmb3IgKHZhciBuIGluIHRoaXMubm90ZXMpIHtcbiAgICAgICAgICB0aGlzLm5vdGVzW25dLmRpc3Bvc2UoKTtcbiAgICAgICAgICBkZWxldGUgdGhpcy5ub3Rlc1tuXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gXG5cblxuICAgICAgdmFyIG5vdGUgPSBub3RlVG9GcmVxKF9ub3RlKTtcblxuICAgICAgaWYgKCF0aGlzLm5vdGVzW25vdGVdIHx8IHRoaXMubm90ZXNbbm90ZV0uZ2V0VmFsdWVBdFRpbWUodCkgPT09IG51bGwpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdDYW5ub3QgcmVsZWFzZSBhIG5vdGUgdGhhdCBpcyBub3QgYWxyZWFkeSBwbGF5aW5nJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcHJldmlvdXNWYWwgPSBNYXRoLm1heCh+fnRoaXMuX3ZvaWNlc0luVXNlLmdldFZhbHVlQXRUaW1lKHQpLnZhbHVlLCAxKTtcblxuICAgICAgICB0aGlzLl92b2ljZXNJblVzZS5zZXRWYWx1ZUF0VGltZShwcmV2aW91c1ZhbCAtIDEsIHQpOyBcblxuXG4gICAgICAgIGlmIChwcmV2aW91c1ZhbCA+IDApIHtcbiAgICAgICAgICB0aGlzLl91cGRhdGVBZnRlcih0LCAtMSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmF1ZGlvdm9pY2VzW3RoaXMubm90ZXNbbm90ZV0uZ2V0VmFsdWVBdFRpbWUodCldLnRyaWdnZXJSZWxlYXNlKHRGcm9tTm93KTtcbiAgICAgICAgdGhpcy5ub3Rlc1tub3RlXS5kaXNwb3NlKCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm5vdGVzW25vdGVdO1xuICAgICAgICB0aGlzLl9uZXdlc3QgPSB0aGlzLl9uZXdlc3QgPT09IDAgPyAwIDogKHRoaXMuX25ld2VzdCAtIDEpICUgKHRoaXMubWF4Vm9pY2VzIC0gMSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBDb25uZWN0IHRvIGEgcDUuc291bmQgLyBXZWIgQXVkaW8gb2JqZWN0LlxuICAgICAqXG4gICAgICogIEBtZXRob2QgIGNvbm5lY3RcbiAgICAgKiAgQGZvciBwNS5Qb2x5U3ludGhcbiAgICAgKiAgQHBhcmFtICB7T2JqZWN0fSB1bml0IEEgcDUuc291bmQgb3IgV2ViIEF1ZGlvIG9iamVjdFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb25uZWN0KHVuaXQpIHtcbiAgICAgIHZhciB1ID0gdW5pdCB8fCBtYWluLmlucHV0O1xuICAgICAgdGhpcy5vdXRwdXQuY29ubmVjdCh1LmlucHV0ID8gdS5pbnB1dCA6IHUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgRGlzY29ubmVjdCBhbGwgb3V0cHV0c1xuICAgICAqXG4gICAgICogIEBtZXRob2QgIGRpc2Nvbm5lY3RcbiAgICAgKiAgQGZvciBwNS5Qb2x5U3ludGhcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRpc2Nvbm5lY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzY29ubmVjdCgpIHtcbiAgICAgIGlmICh0aGlzLm91dHB1dCkge1xuICAgICAgICB0aGlzLm91dHB1dC5kaXNjb25uZWN0KCk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqICBHZXQgcmlkIG9mIHRoZSBNb25vU3ludGggYW5kIGZyZWUgdXAgaXRzIHJlc291cmNlcyAvIG1lbW9yeS5cbiAgICAgKlxuICAgICAqICBAbWV0aG9kICBkaXNwb3NlXG4gICAgICogIEBmb3IgcDUuUG9seVN5bnRoXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkaXNwb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICB0aGlzLmF1ZGlvdm9pY2VzLmZvckVhY2goZnVuY3Rpb24gKHZvaWNlKSB7XG4gICAgICAgIHZvaWNlLmRpc3Bvc2UoKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAodGhpcy5vdXRwdXQpIHtcbiAgICAgICAgdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpO1xuICAgICAgICBkZWxldGUgdGhpcy5vdXRwdXQ7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFBvbHlTeW50aDtcbn0oKTtcblxuIHZhciBwb2x5c3ludGggPSAocG9seXN5bnRoX1BvbHlTeW50aCk7XG5mdW5jdGlvbiBTaWduYWxfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgU2lnbmFsX1NpZ25hbCA9IGZ1bmN0aW9uIFNpZ25hbCgpIHtcbiAgU2lnbmFsX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNpZ25hbCk7XG5cbiAgY29uc29sZS53YXJuKCdwNS5TaWduYWwgaXMgZGVwcmVjYXRlZCAsIFVzZSBUb25lLmpzIFNpZ25hbCBpbnN0ZWFkICcpO1xufTtcblxuIHZhciBkZXByZWNhdGlvbnNfU2lnbmFsID0gKFNpZ25hbF9TaWduYWwpO1xuXG5cblxucDUucHJvdG90eXBlLmdldEF1ZGlvQ29udGV4dCA9IGF1ZGlvY29udGV4dFtcImJcIiBdO1xucDUucHJvdG90eXBlLnVzZXJTdGFydEF1ZGlvID0gYXVkaW9jb250ZXh0W1wiY1wiIF07XG5cblxucDUucHJvdG90eXBlLnNhbXBsZVJhdGUgPSBzYW1wbGVSYXRlO1xucDUucHJvdG90eXBlLmZyZXFUb01pZGkgPSBmcmVxVG9NaWRpO1xucDUucHJvdG90eXBlLm1pZGlUb0ZyZXEgPSBtaWRpVG9GcmVxO1xucDUucHJvdG90eXBlLm5vdGVUb0ZyZXEgPSBub3RlVG9GcmVxO1xucDUucHJvdG90eXBlLnNvdW5kRm9ybWF0cyA9IHNvdW5kRm9ybWF0cztcbnA1LnByb3RvdHlwZS5kaXNwb3NlU291bmQgPSBkaXNwb3NlU291bmQ7XG5wNS5wcm90b3R5cGUuX2NoZWNrRmlsZUZvcm1hdHMgPSBfY2hlY2tGaWxlRm9ybWF0cztcbnA1LnByb3RvdHlwZS5fbWF0aENoYWluID0gX21hdGhDaGFpbjtcbnA1LnByb3RvdHlwZS5jb252ZXJ0VG9XYXYgPSBjb252ZXJ0VG9XYXY7XG5wNS5wcm90b3R5cGUuaW50ZXJsZWF2ZSA9IGludGVybGVhdmU7XG5wNS5wcm90b3R5cGUud3JpdGVVVEZCeXRlcyA9IHdyaXRlVVRGQnl0ZXM7XG5wNS5wcm90b3R5cGUuc2FmZUJ1ZmZlclNpemUgPSBzYWZlQnVmZmVyU2l6ZTtcbnA1LnByb3RvdHlwZS5zYXZlU291bmQgPSBzYXZlU291bmQ7IFxuXG5wNS5wcm90b3R5cGUucmVnaXN0ZXJNZXRob2QoJ3JlbW92ZScsIHA1LnByb3RvdHlwZS5kaXNwb3NlU291bmQpO1xuXG5cblxucDUuUGFubmVyID0gcGFubmVyXzA7XG5cbnA1LlNvdW5kRmlsZSA9IHNvdW5kZmlsZTtcbnA1LnByb3RvdHlwZS5sb2FkU291bmQgPSBsb2FkU291bmQ7IFxuXG5wNS5wcm90b3R5cGUucmVnaXN0ZXJQcmVsb2FkTWV0aG9kKCdsb2FkU291bmQnLCBwNS5wcm90b3R5cGUpO1xuXG5wNS5BbXBsaXR1ZGUgPSBhbXBsaXR1ZGU7XG5cbnA1LkZGVCA9IGZmdDtcblxucDUuT3NjaWxsYXRvciA9IG9zY2lsbGF0b3I7XG5wNS5TaW5Pc2MgPSBTaW5Pc2M7XG5wNS5UcmlPc2MgPSBUcmlPc2M7XG5wNS5TYXdPc2MgPSBTYXdPc2M7XG5wNS5TcXJPc2MgPSBTcXJPc2M7XG5cblxucDUuTm9pc2UgPSBub2lzZTtcblxucDUuUHVsc2UgPSBwdWxzZTtcblxucDUuQXVkaW9JbiA9IGF1ZGlvaW47XG5cbnA1LkVmZmVjdCA9IGVmZmVjdDtcblxucDUuRmlsdGVyID0gZmlsdGVyO1xucDUuTG93UGFzcyA9IExvd1Bhc3M7XG5wNS5IaWdoUGFzcyA9IEhpZ2hQYXNzO1xucDUuQmFuZFBhc3MgPSBCYW5kUGFzcztcblxucDUuRVEgPSBlcTtcblxucDUubGlzdGVuZXIzRCA9IGxpc3RlbmVyM2Q7XG5cbnA1LlBhbm5lcjNEID0gcGFubmVyM2Q7XG5cbnA1LkRlbGF5ID0gZGVsYXk7XG5cbnA1LlJldmVyYiA9IFJldmVyYjtcbnA1LkNvbnZvbHZlciA9IHJldmVyYl9Db252b2x2ZXI7XG5wNS5wcm90b3R5cGUuY3JlYXRlQ29udm9sdmVyID0gY3JlYXRlQ29udm9sdmVyO1xucDUucHJvdG90eXBlLnJlZ2lzdGVyUHJlbG9hZE1ldGhvZCgnY3JlYXRlQ29udm9sdmVyJywgcDUucHJvdG90eXBlKTtcblxucDUuTWV0cm8gPSBtZXRybztcblxucDUuUGhyYXNlID0gUGhyYXNlO1xucDUuUGFydCA9IGxvb3Blcl9QYXJ0O1xucDUuU2NvcmUgPSBTY29yZTtcblxucDUuU291bmRMb29wID0gc291bmRMb29wO1xuXG5wNS5Db21wcmVzc29yID0gY29tcHJlc3NvcjtcblxucDUucGVha0RldGVjdCA9IHBlYWtEZXRlY3Q7XG5cbnA1LlNvdW5kUmVjb3JkZXIgPSBzb3VuZFJlY29yZGVyO1xuXG5wNS5EaXN0b3J0aW9uID0gZGlzdG9ydGlvbjtcblxucDUuR2FpbiA9IGdhaW47XG5cbnA1LkF1ZGlvVm9pY2UgPSBhdWRpb1ZvaWNlXzA7XG5cbnA1Lk1vbm9TeW50aCA9IG1vbm9zeW50aDtcblxucDUuT25zZXREZXRlY3QgPSBvbnNldERldGVjdDtcblxucDUuUG9seVN5bnRoID0gcG9seXN5bnRoO1xuXG5wNS5QZWFrRGV0ZWN0ID0gcGVha0RldGVjdDsgXG5cblxucDUuU2lnbmFsID0gZGVwcmVjYXRpb25zX1NpZ25hbDtcblxuIH0pXG4gXSk7XG4iLCIvKiEgcDUuanMgdjEuNC4xIEZlYnJ1YXJ5IDAyLCAyMDIyICovXG5cbiFmdW5jdGlvbihlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7KFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OlwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcykucDU9ZSgpfX0oZnVuY3Rpb24oKXt2YXIgaSxlLHQ7cmV0dXJuIGZ1bmN0aW9uIGkoYSxzLGwpe2Z1bmN0aW9uIHUodCxlKXtpZighc1t0XSl7aWYoIWFbdF0pe3ZhciByPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWUmJnIpcmV0dXJuIHIodCwhMCk7aWYoYylyZXR1cm4gYyh0LCEwKTt2YXIgbj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK3QrXCInXCIpO3Rocm93IG4uY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixufXZhciBvPXNbdF09e2V4cG9ydHM6e319O2FbdF1bMF0uY2FsbChvLmV4cG9ydHMsZnVuY3Rpb24oZSl7cmV0dXJuIHUoYVt0XVsxXVtlXXx8ZSl9LG8sby5leHBvcnRzLGksYSxzLGwpfXJldHVybiBzW3RdLmV4cG9ydHN9Zm9yKHZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsZT0wO2U8bC5sZW5ndGg7ZSsrKXUobFtlXSk7cmV0dXJuIHV9KHsxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ci5ieXRlTGVuZ3RoPWZ1bmN0aW9uKGUpe3ZhciB0PWQoZSkscj10WzBdLG49dFsxXTtyZXR1cm4gMyoocituKS80LW59LHIudG9CeXRlQXJyYXk9ZnVuY3Rpb24oZSl7dmFyIHQscixuPWQoZSksbz1uWzBdLGk9blsxXSxhPW5ldyBjKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIDMqKGUrdCkvNC10fShvLGkpKSxzPTAsbD0wPGk/by00Om87Zm9yKHI9MDtyPGw7cis9NCl0PXVbZS5jaGFyQ29kZUF0KHIpXTw8MTh8dVtlLmNoYXJDb2RlQXQocisxKV08PDEyfHVbZS5jaGFyQ29kZUF0KHIrMildPDw2fHVbZS5jaGFyQ29kZUF0KHIrMyldLGFbcysrXT10Pj4xNiYyNTUsYVtzKytdPXQ+PjgmMjU1LGFbcysrXT0yNTUmdDsyPT09aSYmKHQ9dVtlLmNoYXJDb2RlQXQocildPDwyfHVbZS5jaGFyQ29kZUF0KHIrMSldPj40LGFbcysrXT0yNTUmdCk7MT09PWkmJih0PXVbZS5jaGFyQ29kZUF0KHIpXTw8MTB8dVtlLmNoYXJDb2RlQXQocisxKV08PDR8dVtlLmNoYXJDb2RlQXQocisyKV0+PjIsYVtzKytdPXQ+PjgmMjU1LGFbcysrXT0yNTUmdCk7cmV0dXJuIGF9LHIuZnJvbUJ5dGVBcnJheT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1lLmxlbmd0aCxuPXIlMyxvPVtdLGk9MCxhPXItbjtpPGE7aSs9MTYzODMpby5wdXNoKGwoZSxpLGE8aSsxNjM4Mz9hOmkrMTYzODMpKTsxPT1uPyh0PWVbci0xXSxvLnB1c2goc1t0Pj4yXStzW3Q8PDQmNjNdK1wiPT1cIikpOjI9PW4mJih0PShlW3ItMl08PDgpK2Vbci0xXSxvLnB1c2goc1t0Pj4xMF0rc1t0Pj40JjYzXStzW3Q8PDImNjNdK1wiPVwiKSk7cmV0dXJuIG8uam9pbihcIlwiKX07Zm9yKHZhciBzPVtdLHU9W10sYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheT9VaW50OEFycmF5OkFycmF5LG49XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIsbz0wLGk9bi5sZW5ndGg7bzxpOysrbylzW29dPW5bb10sdVtuLmNoYXJDb2RlQXQobyldPW87ZnVuY3Rpb24gZChlKXt2YXIgdD1lLmxlbmd0aDtpZigwPHQlNCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpO3ZhciByPWUuaW5kZXhPZihcIj1cIik7cmV0dXJuLTE9PT1yJiYocj10KSxbcixyPT09dD8wOjQtciU0XX1mdW5jdGlvbiBsKGUsdCxyKXtmb3IodmFyIG4sbyxpPVtdLGE9dDthPHI7YSs9MyluPShlW2FdPDwxNiYxNjcxMTY4MCkrKGVbYSsxXTw8OCY2NTI4MCkrKDI1NSZlW2ErMl0pLGkucHVzaChzWyhvPW4pPj4xOCY2M10rc1tvPj4xMiY2M10rc1tvPj42JjYzXStzWzYzJm9dKTtyZXR1cm4gaS5qb2luKFwiXCIpfXVbXCItXCIuY2hhckNvZGVBdCgwKV09NjIsdVtcIl9cIi5jaGFyQ29kZUF0KDApXT02M30se31dLDI6W2Z1bmN0aW9uKGUsdCxyKXt9LHt9XSwzOltmdW5jdGlvbihlLHQscil7YXJndW1lbnRzWzRdWzJdWzBdLmFwcGx5KHIsYXJndW1lbnRzKX0se2R1cDoyfV0sNDpbZnVuY3Rpb24oVSxlLE4peyhmdW5jdGlvbihkKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1VKFwiYmFzZTY0LWpzXCIpLGk9VShcImllZWU3NTRcIiksZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbC5mb3I/U3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpOm51bGw7Ti5CdWZmZXI9ZCxOLlNsb3dCdWZmZXI9ZnVuY3Rpb24oZSl7K2UhPWUmJihlPTApO3JldHVybiBkLmFsbG9jKCtlKX0sTi5JTlNQRUNUX01BWF9CWVRFUz01MDt2YXIgcj0yMTQ3NDgzNjQ3O2Z1bmN0aW9uIGEoZSl7aWYocjxlKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpO3ZhciB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxkLnByb3RvdHlwZSksdH1mdW5jdGlvbiBkKGUsdCxyKXtpZihcIm51bWJlclwiIT10eXBlb2YgZSlyZXR1cm4gbyhlLHQscik7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtyZXR1cm4gbChlKX1mdW5jdGlvbiBvKGUsdCxyKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZnVuY3Rpb24oZSx0KXtcInN0cmluZ1wiPT10eXBlb2YgdCYmXCJcIiE9PXR8fCh0PVwidXRmOFwiKTtpZighZC5pc0VuY29kaW5nKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIit0KTt2YXIgcj0wfGYoZSx0KSxuPWEociksbz1uLndyaXRlKGUsdCk7byE9PXImJihuPW4uc2xpY2UoMCxvKSk7cmV0dXJuIG59KGUsdCk7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXJldHVybiB1KGUpO2lmKG51bGw9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiBlKTtpZihSKGUsQXJyYXlCdWZmZXIpfHxlJiZSKGUuYnVmZmVyLEFycmF5QnVmZmVyKSlyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe2lmKHQ8MHx8ZS5ieXRlTGVuZ3RoPHQpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wib2Zmc2V0XCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJyk7aWYoZS5ieXRlTGVuZ3RoPHQrKHJ8fDApKXRocm93IG5ldyBSYW5nZUVycm9yKCdcImxlbmd0aFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpO3ZhciBuO249dm9pZCAwPT09dCYmdm9pZCAwPT09cj9uZXcgVWludDhBcnJheShlKTp2b2lkIDA9PT1yP25ldyBVaW50OEFycmF5KGUsdCk6bmV3IFVpbnQ4QXJyYXkoZSx0LHIpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YobixkLnByb3RvdHlwZSksbn0oZSx0LHIpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJyk7dmFyIG49ZS52YWx1ZU9mJiZlLnZhbHVlT2YoKTtpZihudWxsIT1uJiZuIT09ZSlyZXR1cm4gZC5mcm9tKG4sdCxyKTt2YXIgbz1mdW5jdGlvbihlKXtpZihkLmlzQnVmZmVyKGUpKXt2YXIgdD0wfGMoZS5sZW5ndGgpLHI9YSh0KTtyZXR1cm4gMD09PXIubGVuZ3RofHxlLmNvcHkociwwLDAsdCkscn1pZih2b2lkIDAhPT1lLmxlbmd0aClyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgZS5sZW5ndGh8fEQoZS5sZW5ndGgpP2EoMCk6dShlKTtpZihcIkJ1ZmZlclwiPT09ZS50eXBlJiZBcnJheS5pc0FycmF5KGUuZGF0YSkpcmV0dXJuIHUoZS5kYXRhKX0oZSk7aWYobylyZXR1cm4gbztpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1TeW1ib2wudG9QcmltaXRpdmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGVbU3ltYm9sLnRvUHJpbWl0aXZlXSlyZXR1cm4gZC5mcm9tKGVbU3ltYm9sLnRvUHJpbWl0aXZlXShcInN0cmluZ1wiKSx0LHIpO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSl9ZnVuY3Rpb24gcyhlKXtpZihcIm51bWJlclwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJyk7aWYoZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIHMoZSksYShlPDA/MDowfGMoZSkpfWZ1bmN0aW9uIHUoZSl7Zm9yKHZhciB0PWUubGVuZ3RoPDA/MDowfGMoZS5sZW5ndGgpLHI9YSh0KSxuPTA7bjx0O24rPTEpcltuXT0yNTUmZVtuXTtyZXR1cm4gcn1mdW5jdGlvbiBjKGUpe2lmKHI8PWUpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtIHNpemU6IDB4XCIrci50b1N0cmluZygxNikrXCIgYnl0ZXNcIik7cmV0dXJuIDB8ZX1mdW5jdGlvbiBmKGUsdCl7aWYoZC5pc0J1ZmZlcihlKSlyZXR1cm4gZS5sZW5ndGg7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpfHxSKGUsQXJyYXlCdWZmZXIpKXJldHVybiBlLmJ5dGVMZW5ndGg7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgb3IgQXJyYXlCdWZmZXIuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgZSk7dmFyIHI9ZS5sZW5ndGgsbj0yPGFyZ3VtZW50cy5sZW5ndGgmJiEwPT09YXJndW1lbnRzWzJdO2lmKCFuJiYwPT09cilyZXR1cm4gMDtmb3IodmFyIG89ITE7Oylzd2l0Y2godCl7Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gcjtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm4gUChlKS5sZW5ndGg7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIDIqcjtjYXNlXCJoZXhcIjpyZXR1cm4gcj4+PjE7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIEEoZSkubGVuZ3RoO2RlZmF1bHQ6aWYobylyZXR1cm4gbj8tMTpQKGUpLmxlbmd0aDt0PShcIlwiK3QpLnRvTG93ZXJDYXNlKCksbz0hMH19ZnVuY3Rpb24gaChlLHQscil7dmFyIG49ZVt0XTtlW3RdPWVbcl0sZVtyXT1ufWZ1bmN0aW9uIHAoZSx0LHIsbixvKXtpZigwPT09ZS5sZW5ndGgpcmV0dXJuLTE7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHI/KG49cixyPTApOjIxNDc0ODM2NDc8cj9yPTIxNDc0ODM2NDc6cjwtMjE0NzQ4MzY0OCYmKHI9LTIxNDc0ODM2NDgpLEQocj0rcikmJihyPW8/MDplLmxlbmd0aC0xKSxyPDAmJihyPWUubGVuZ3RoK3IpLHI+PWUubGVuZ3RoKXtpZihvKXJldHVybi0xO3I9ZS5sZW5ndGgtMX1lbHNlIGlmKHI8MCl7aWYoIW8pcmV0dXJuLTE7cj0wfWlmKFwic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1kLmZyb20odCxuKSksZC5pc0J1ZmZlcih0KSlyZXR1cm4gMD09PXQubGVuZ3RoPy0xOnkoZSx0LHIsbixvKTtpZihcIm51bWJlclwiPT10eXBlb2YgdClyZXR1cm4gdCY9MjU1LFwiZnVuY3Rpb25cIj09dHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/bz9VaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZSx0LHIpOlVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoZSx0LHIpOnkoZSxbdF0scixuLG8pO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJ2YWwgbXVzdCBiZSBzdHJpbmcsIG51bWJlciBvciBCdWZmZXJcIil9ZnVuY3Rpb24geShlLHQscixuLG8pe3ZhciBpLGE9MSxzPWUubGVuZ3RoLGw9dC5sZW5ndGg7aWYodm9pZCAwIT09biYmKFwidWNzMlwiPT09KG49U3RyaW5nKG4pLnRvTG93ZXJDYXNlKCkpfHxcInVjcy0yXCI9PT1ufHxcInV0ZjE2bGVcIj09PW58fFwidXRmLTE2bGVcIj09PW4pKXtpZihlLmxlbmd0aDwyfHx0Lmxlbmd0aDwyKXJldHVybi0xO3MvPWE9MixsLz0yLHIvPTJ9ZnVuY3Rpb24gdShlLHQpe3JldHVybiAxPT09YT9lW3RdOmUucmVhZFVJbnQxNkJFKHQqYSl9aWYobyl7dmFyIGM9LTE7Zm9yKGk9cjtpPHM7aSsrKWlmKHUoZSxpKT09PXUodCwtMT09PWM/MDppLWMpKXtpZigtMT09PWMmJihjPWkpLGktYysxPT09bClyZXR1cm4gYyphfWVsc2UtMSE9PWMmJihpLT1pLWMpLGM9LTF9ZWxzZSBmb3IoczxyK2wmJihyPXMtbCksaT1yOzA8PWk7aS0tKXtmb3IodmFyIGQ9ITAsZj0wO2Y8bDtmKyspaWYodShlLGkrZikhPT11KHQsZikpe2Q9ITE7YnJlYWt9aWYoZClyZXR1cm4gaX1yZXR1cm4tMX1mdW5jdGlvbiBtKGUsdCxyLG4pe3I9TnVtYmVyKHIpfHwwO3ZhciBvPWUubGVuZ3RoLXI7bj9vPChuPU51bWJlcihuKSkmJihuPW8pOm49bzt2YXIgaT10Lmxlbmd0aDtpLzI8biYmKG49aS8yKTtmb3IodmFyIGE9MDthPG47KythKXt2YXIgcz1wYXJzZUludCh0LnN1YnN0cigyKmEsMiksMTYpO2lmKEQocykpcmV0dXJuIGE7ZVtyK2FdPXN9cmV0dXJuIGF9ZnVuY3Rpb24gZyhlLHQscixuKXtyZXR1cm4gayhmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0wO3I8ZS5sZW5ndGg7KytyKXQucHVzaCgyNTUmZS5jaGFyQ29kZUF0KHIpKTtyZXR1cm4gdH0odCksZSxyLG4pfWZ1bmN0aW9uIHYoZSx0LHIsbil7cmV0dXJuIGsoZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsbixvLGk9W10sYT0wO2E8ZS5sZW5ndGgmJiEoKHQtPTIpPDApOysrYSlyPWUuY2hhckNvZGVBdChhKSxuPXI+Pjgsbz1yJTI1NixpLnB1c2gobyksaS5wdXNoKG4pO3JldHVybiBpfSh0LGUubGVuZ3RoLXIpLGUscixuKX1mdW5jdGlvbiBiKGUsdCxyKXtyZXR1cm4gMD09PXQmJnI9PT1lLmxlbmd0aD9uLmZyb21CeXRlQXJyYXkoZSk6bi5mcm9tQnl0ZUFycmF5KGUuc2xpY2UodCxyKSl9ZnVuY3Rpb24gXyhlLHQscil7cj1NYXRoLm1pbihlLmxlbmd0aCxyKTtmb3IodmFyIG49W10sbz10O288cjspe3ZhciBpLGEscyxsLHU9ZVtvXSxjPW51bGwsZD0yMzk8dT80OjIyMzx1PzM6MTkxPHU/MjoxO2lmKG8rZDw9cilzd2l0Y2goZCl7Y2FzZSAxOnU8MTI4JiYoYz11KTticmVhaztjYXNlIDI6MTI4PT0oMTkyJihpPWVbbysxXSkpJiYxMjc8KGw9KDMxJnUpPDw2fDYzJmkpJiYoYz1sKTticmVhaztjYXNlIDM6aT1lW28rMV0sYT1lW28rMl0sMTI4PT0oMTkyJmkpJiYxMjg9PSgxOTImYSkmJjIwNDc8KGw9KDE1JnUpPDwxMnwoNjMmaSk8PDZ8NjMmYSkmJihsPDU1Mjk2fHw1NzM0MzxsKSYmKGM9bCk7YnJlYWs7Y2FzZSA0Omk9ZVtvKzFdLGE9ZVtvKzJdLHM9ZVtvKzNdLDEyOD09KDE5MiZpKSYmMTI4PT0oMTkyJmEpJiYxMjg9PSgxOTImcykmJjY1NTM1PChsPSgxNSZ1KTw8MTh8KDYzJmkpPDwxMnwoNjMmYSk8PDZ8NjMmcykmJmw8MTExNDExMiYmKGM9bCl9bnVsbD09PWM/KGM9NjU1MzMsZD0xKTo2NTUzNTxjJiYoYy09NjU1MzYsbi5wdXNoKGM+Pj4xMCYxMDIzfDU1Mjk2KSxjPTU2MzIwfDEwMjMmYyksbi5wdXNoKGMpLG8rPWR9cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PWUubGVuZ3RoO2lmKHQ8PXgpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGUpO3ZhciByPVwiXCIsbj0wO2Zvcig7bjx0OylyKz1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxlLnNsaWNlKG4sbis9eCkpO3JldHVybiByfShuKX1OLmtNYXhMZW5ndGg9ciwoZC5UWVBFRF9BUlJBWV9TVVBQT1JUPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPW5ldyBVaW50OEFycmF5KDEpLHQ9e2ZvbzpmdW5jdGlvbigpe3JldHVybiA0Mn19O3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxVaW50OEFycmF5LnByb3RvdHlwZSksT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCksNDI9PT1lLmZvbygpfWNhdGNoKGUpe3JldHVybiExfX0oKSl8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBjb25zb2xlfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBjb25zb2xlLmVycm9yfHxjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGxhY2tzIHR5cGVkIGFycmF5IChVaW50OEFycmF5KSBzdXBwb3J0IHdoaWNoIGlzIHJlcXVpcmVkIGJ5IGBidWZmZXJgIHY1LnguIFVzZSBgYnVmZmVyYCB2NC54IGlmIHlvdSByZXF1aXJlIG9sZCBicm93c2VyIHN1cHBvcnQuXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLnByb3RvdHlwZSxcInBhcmVudFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe2lmKGQuaXNCdWZmZXIodGhpcykpcmV0dXJuIHRoaXMuYnVmZmVyfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkLnByb3RvdHlwZSxcIm9mZnNldFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe2lmKGQuaXNCdWZmZXIodGhpcykpcmV0dXJuIHRoaXMuYnl0ZU9mZnNldH19KSxcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1TeW1ib2wuc3BlY2llcyYmZFtTeW1ib2wuc3BlY2llc109PT1kJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZCxTeW1ib2wuc3BlY2llcyx7dmFsdWU6bnVsbCxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMX0pLGQucG9vbFNpemU9ODE5MixkLmZyb209ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBvKGUsdCxyKX0sT2JqZWN0LnNldFByb3RvdHlwZU9mKGQucHJvdG90eXBlLFVpbnQ4QXJyYXkucHJvdG90eXBlKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoZCxVaW50OEFycmF5KSxkLmFsbG9jPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbz10LGk9cixzKG49ZSksbjw9MD9hKG4pOnZvaWQgMCE9PW8/XCJzdHJpbmdcIj09dHlwZW9mIGk/YShuKS5maWxsKG8saSk6YShuKS5maWxsKG8pOmEobik7dmFyIG4sbyxpfSxkLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKGUpe3JldHVybiBsKGUpfSxkLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbihlKXtyZXR1cm4gbChlKX0sZC5pc0J1ZmZlcj1mdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9ZSYmITA9PT1lLl9pc0J1ZmZlciYmZSE9PWQucHJvdG90eXBlfSxkLmNvbXBhcmU9ZnVuY3Rpb24oZSx0KXtpZihSKGUsVWludDhBcnJheSkmJihlPWQuZnJvbShlLGUub2Zmc2V0LGUuYnl0ZUxlbmd0aCkpLFIodCxVaW50OEFycmF5KSYmKHQ9ZC5mcm9tKHQsdC5vZmZzZXQsdC5ieXRlTGVuZ3RoKSksIWQuaXNCdWZmZXIoZSl8fCFkLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImJ1ZjFcIiwgXCJidWYyXCIgYXJndW1lbnRzIG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXknKTtpZihlPT09dClyZXR1cm4gMDtmb3IodmFyIHI9ZS5sZW5ndGgsbj10Lmxlbmd0aCxvPTAsaT1NYXRoLm1pbihyLG4pO288aTsrK28paWYoZVtvXSE9PXRbb10pe3I9ZVtvXSxuPXRbb107YnJlYWt9cmV0dXJuIHI8bj8tMTpuPHI/MTowfSxkLmlzRW5jb2Rpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKFN0cmluZyhlKS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxkLmNvbmNhdD1mdW5jdGlvbihlLHQpe2lmKCFBcnJheS5pc0FycmF5KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO2lmKDA9PT1lLmxlbmd0aClyZXR1cm4gZC5hbGxvYygwKTt2YXIgcjtpZih2b2lkIDA9PT10KWZvcihyPXQ9MDtyPGUubGVuZ3RoOysrcil0Kz1lW3JdLmxlbmd0aDt2YXIgbj1kLmFsbG9jVW5zYWZlKHQpLG89MDtmb3Iocj0wO3I8ZS5sZW5ndGg7KytyKXt2YXIgaT1lW3JdO2lmKFIoaSxVaW50OEFycmF5KSYmKGk9ZC5mcm9tKGkpKSwhZC5pc0J1ZmZlcihpKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKTtpLmNvcHkobixvKSxvKz1pLmxlbmd0aH1yZXR1cm4gbn0sZC5ieXRlTGVuZ3RoPWYsZC5wcm90b3R5cGUuX2lzQnVmZmVyPSEwLGQucHJvdG90eXBlLnN3YXAxNj1mdW5jdGlvbigpe3ZhciBlPXRoaXMubGVuZ3RoO2lmKGUlMiE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzXCIpO2Zvcih2YXIgdD0wO3Q8ZTt0Kz0yKWgodGhpcyx0LHQrMSk7cmV0dXJuIHRoaXN9LGQucHJvdG90eXBlLnN3YXAzMj1mdW5jdGlvbigpe3ZhciBlPXRoaXMubGVuZ3RoO2lmKGUlNCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzXCIpO2Zvcih2YXIgdD0wO3Q8ZTt0Kz00KWgodGhpcyx0LHQrMyksaCh0aGlzLHQrMSx0KzIpO3JldHVybiB0aGlzfSxkLnByb3RvdHlwZS5zd2FwNjQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmxlbmd0aDtpZihlJTghPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNjQtYml0c1wiKTtmb3IodmFyIHQ9MDt0PGU7dCs9OCloKHRoaXMsdCx0KzcpLGgodGhpcyx0KzEsdCs2KSxoKHRoaXMsdCsyLHQrNSksaCh0aGlzLHQrMyx0KzQpO3JldHVybiB0aGlzfSxkLnByb3RvdHlwZS50b0xvY2FsZVN0cmluZz1kLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBlPXRoaXMubGVuZ3RoO3JldHVybiAwPT09ZT9cIlwiOjA9PT1hcmd1bWVudHMubGVuZ3RoP18odGhpcywwLGUpOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj0hMTtpZigodm9pZCAwPT09dHx8dDwwKSYmKHQ9MCksdD50aGlzLmxlbmd0aClyZXR1cm5cIlwiO2lmKCh2b2lkIDA9PT1yfHxyPnRoaXMubGVuZ3RoKSYmKHI9dGhpcy5sZW5ndGgpLHI8PTApcmV0dXJuXCJcIjtpZigocj4+Pj0wKTw9KHQ+Pj49MCkpcmV0dXJuXCJcIjtmb3IoZT1lfHxcInV0ZjhcIjs7KXN3aXRjaChlKXtjYXNlXCJoZXhcIjpyZXR1cm4gUyh0aGlzLHQscik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIF8odGhpcyx0LHIpO2Nhc2VcImFzY2lpXCI6cmV0dXJuIHcodGhpcyx0LHIpO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiBqKHRoaXMsdCxyKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gYih0aGlzLHQscik7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIE0odGhpcyx0LHIpO2RlZmF1bHQ6aWYobil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrZSk7ZT0oZStcIlwiKS50b0xvd2VyQ2FzZSgpLG49ITB9fS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGQucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtpZighZC5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKTtyZXR1cm4gdGhpcz09PWV8fDA9PT1kLmNvbXBhcmUodGhpcyxlKX0sZC5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe3ZhciBlPVwiXCIsdD1OLklOU1BFQ1RfTUFYX0JZVEVTO3JldHVybiBlPXRoaXMudG9TdHJpbmcoXCJoZXhcIiwwLHQpLnJlcGxhY2UoLyguezJ9KS9nLFwiJDEgXCIpLnRyaW0oKSx0aGlzLmxlbmd0aD50JiYoZSs9XCIgLi4uIFwiKSxcIjxCdWZmZXIgXCIrZStcIj5cIn0sZSYmKGQucHJvdG90eXBlW2VdPWQucHJvdG90eXBlLmluc3BlY3QpLGQucHJvdG90eXBlLmNvbXBhcmU9ZnVuY3Rpb24oZSx0LHIsbixvKXtpZihSKGUsVWludDhBcnJheSkmJihlPWQuZnJvbShlLGUub2Zmc2V0LGUuYnl0ZUxlbmd0aCkpLCFkLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInRhcmdldFwiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXkuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgZSk7aWYodm9pZCAwPT09dCYmKHQ9MCksdm9pZCAwPT09ciYmKHI9ZT9lLmxlbmd0aDowKSx2b2lkIDA9PT1uJiYobj0wKSx2b2lkIDA9PT1vJiYobz10aGlzLmxlbmd0aCksdDwwfHxyPmUubGVuZ3RofHxuPDB8fG8+dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvdXQgb2YgcmFuZ2UgaW5kZXhcIik7aWYobzw9biYmcjw9dClyZXR1cm4gMDtpZihvPD1uKXJldHVybi0xO2lmKHI8PXQpcmV0dXJuIDE7aWYodGhpcz09PWUpcmV0dXJuIDA7Zm9yKHZhciBpPShvPj4+PTApLShuPj4+PTApLGE9KHI+Pj49MCktKHQ+Pj49MCkscz1NYXRoLm1pbihpLGEpLGw9dGhpcy5zbGljZShuLG8pLHU9ZS5zbGljZSh0LHIpLGM9MDtjPHM7KytjKWlmKGxbY10hPT11W2NdKXtpPWxbY10sYT11W2NdO2JyZWFrfXJldHVybiBpPGE/LTE6YTxpPzE6MH0sZC5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybi0xIT09dGhpcy5pbmRleE9mKGUsdCxyKX0sZC5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlLHQscil7cmV0dXJuIHAodGhpcyxlLHQsciwhMCl9LGQucHJvdG90eXBlLmxhc3RJbmRleE9mPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcCh0aGlzLGUsdCxyLCExKX0sZC5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oZSx0LHIsbil7aWYodm9pZCAwPT09dCluPVwidXRmOFwiLHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2UgaWYodm9pZCAwPT09ciYmXCJzdHJpbmdcIj09dHlwZW9mIHQpbj10LHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2V7aWYoIWlzRmluaXRlKHQpKXRocm93IG5ldyBFcnJvcihcIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkXCIpO3Q+Pj49MCxpc0Zpbml0ZShyKT8ocj4+Pj0wLHZvaWQgMD09PW4mJihuPVwidXRmOFwiKSk6KG49cixyPXZvaWQgMCl9dmFyIG89dGhpcy5sZW5ndGgtdDtpZigodm9pZCAwPT09cnx8bzxyKSYmKHI9byksMDxlLmxlbmd0aCYmKHI8MHx8dDwwKXx8dD50aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkF0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzXCIpO249bnx8XCJ1dGY4XCI7Zm9yKHZhciBpLGEscyxsLHUsYyxkPSExOzspc3dpdGNoKG4pe2Nhc2VcImhleFwiOnJldHVybiBtKHRoaXMsZSx0LHIpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiB1PXQsYz1yLGsoUChlLChsPXRoaXMpLmxlbmd0aC11KSxsLHUsYyk7Y2FzZVwiYXNjaWlcIjpyZXR1cm4gZyh0aGlzLGUsdCxyKTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gZyh0aGlzLGUsdCxyKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gaT10aGlzLGE9dCxzPXIsayhBKGUpLGksYSxzKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdih0aGlzLGUsdCxyKTtkZWZhdWx0OmlmKGQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK24pO249KFwiXCIrbikudG9Mb3dlckNhc2UoKSxkPSEwfX0sZC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJCdWZmZXJcIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O3ZhciB4PTQwOTY7ZnVuY3Rpb24gdyhlLHQscil7dmFyIG49XCJcIjtyPU1hdGgubWluKGUubGVuZ3RoLHIpO2Zvcih2YXIgbz10O288cjsrK28pbis9U3RyaW5nLmZyb21DaGFyQ29kZSgxMjcmZVtvXSk7cmV0dXJuIG59ZnVuY3Rpb24gaihlLHQscil7dmFyIG49XCJcIjtyPU1hdGgubWluKGUubGVuZ3RoLHIpO2Zvcih2YXIgbz10O288cjsrK28pbis9U3RyaW5nLmZyb21DaGFyQ29kZShlW29dKTtyZXR1cm4gbn1mdW5jdGlvbiBTKGUsdCxyKXt2YXIgbj1lLmxlbmd0aDsoIXR8fHQ8MCkmJih0PTApLCghcnx8cjwwfHxuPHIpJiYocj1uKTtmb3IodmFyIG89XCJcIixpPXQ7aTxyOysraSlvKz1JW2VbaV1dO3JldHVybiBvfWZ1bmN0aW9uIE0oZSx0LHIpe2Zvcih2YXIgbj1lLnNsaWNlKHQsciksbz1cIlwiLGk9MDtpPG4ubGVuZ3RoO2krPTIpbys9U3RyaW5nLmZyb21DaGFyQ29kZShuW2ldKzI1NipuW2krMV0pO3JldHVybiBvfWZ1bmN0aW9uIEUoZSx0LHIpe2lmKGUlMSE9MHx8ZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwib2Zmc2V0IGlzIG5vdCB1aW50XCIpO2lmKHI8ZSt0KXRocm93IG5ldyBSYW5nZUVycm9yKFwiVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKX1mdW5jdGlvbiBUKGUsdCxyLG4sbyxpKXtpZighZC5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImJ1ZmZlclwiIGFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXIgaW5zdGFuY2UnKTtpZihvPHR8fHQ8aSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKTtpZihyK24+ZS5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIil9ZnVuY3Rpb24gTyhlLHQscixuKXtpZihyK24+ZS5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIik7aWYocjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfWZ1bmN0aW9uIEMoZSx0LHIsbixvKXtyZXR1cm4gdD0rdCxyPj4+PTAsb3x8TyhlLDAsciw0KSxpLndyaXRlKGUsdCxyLG4sMjMsNCkscis0fWZ1bmN0aW9uIEwoZSx0LHIsbixvKXtyZXR1cm4gdD0rdCxyPj4+PTAsb3x8TyhlLDAsciw4KSxpLndyaXRlKGUsdCxyLG4sNTIsOCkscis4fWQucHJvdG90eXBlLnNsaWNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5sZW5ndGg7KGU9fn5lKTwwPyhlKz1yKTwwJiYoZT0wKTpyPGUmJihlPXIpLCh0PXZvaWQgMD09PXQ/cjp+fnQpPDA/KHQrPXIpPDAmJih0PTApOnI8dCYmKHQ9ciksdDxlJiYodD1lKTt2YXIgbj10aGlzLnN1YmFycmF5KGUsdCk7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihuLGQucHJvdG90eXBlKSxufSxkLnByb3RvdHlwZS5yZWFkVUludExFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fEUoZSx0LHRoaXMubGVuZ3RoKTtmb3IodmFyIG49dGhpc1tlXSxvPTEsaT0wOysraTx0JiYobyo9MjU2KTspbis9dGhpc1tlK2ldKm87cmV0dXJuIG59LGQucHJvdG90eXBlLnJlYWRVSW50QkU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8RShlLHQsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW2UrLS10XSxvPTE7MDx0JiYobyo9MjU2KTspbis9dGhpc1tlKy0tdF0qbztyZXR1cm4gbn0sZC5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxFKGUsMSx0aGlzLmxlbmd0aCksdGhpc1tlXX0sZC5wcm90b3R5cGUucmVhZFVJbnQxNkxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxFKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXXx0aGlzW2UrMV08PDh9LGQucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8RShlLDIsdGhpcy5sZW5ndGgpLHRoaXNbZV08PDh8dGhpc1tlKzFdfSxkLnByb3RvdHlwZS5yZWFkVUludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fEUoZSw0LHRoaXMubGVuZ3RoKSwodGhpc1tlXXx0aGlzW2UrMV08PDh8dGhpc1tlKzJdPDwxNikrMTY3NzcyMTYqdGhpc1tlKzNdfSxkLnByb3RvdHlwZS5yZWFkVUludDMyQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fEUoZSw0LHRoaXMubGVuZ3RoKSwxNjc3NzIxNip0aGlzW2VdKyh0aGlzW2UrMV08PDE2fHRoaXNbZSsyXTw8OHx0aGlzW2UrM10pfSxkLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8RShlLHQsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW2VdLG89MSxpPTA7KytpPHQmJihvKj0yNTYpOyluKz10aGlzW2UraV0qbztyZXR1cm4obyo9MTI4KTw9biYmKG4tPU1hdGgucG93KDIsOCp0KSksbn0sZC5wcm90b3R5cGUucmVhZEludEJFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fEUoZSx0LHRoaXMubGVuZ3RoKTtmb3IodmFyIG49dCxvPTEsaT10aGlzW2UrLS1uXTswPG4mJihvKj0yNTYpOylpKz10aGlzW2UrLS1uXSpvO3JldHVybihvKj0xMjgpPD1pJiYoaS09TWF0aC5wb3coMiw4KnQpKSxpfSxkLnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8RShlLDEsdGhpcy5sZW5ndGgpLDEyOCZ0aGlzW2VdPy0xKigyNTUtdGhpc1tlXSsxKTp0aGlzW2VdfSxkLnByb3RvdHlwZS5yZWFkSW50MTZMRT1mdW5jdGlvbihlLHQpe2U+Pj49MCx0fHxFKGUsMix0aGlzLmxlbmd0aCk7dmFyIHI9dGhpc1tlXXx0aGlzW2UrMV08PDg7cmV0dXJuIDMyNzY4JnI/NDI5NDkwMTc2MHxyOnJ9LGQucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7ZT4+Pj0wLHR8fEUoZSwyLHRoaXMubGVuZ3RoKTt2YXIgcj10aGlzW2UrMV18dGhpc1tlXTw8ODtyZXR1cm4gMzI3Njgmcj80Mjk0OTAxNzYwfHI6cn0sZC5wcm90b3R5cGUucmVhZEludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fEUoZSw0LHRoaXMubGVuZ3RoKSx0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2fHRoaXNbZSszXTw8MjR9LGQucHJvdG90eXBlLnJlYWRJbnQzMkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxFKGUsNCx0aGlzLmxlbmd0aCksdGhpc1tlXTw8MjR8dGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdfSxkLnByb3RvdHlwZS5yZWFkRmxvYXRMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8RShlLDQsdGhpcy5sZW5ndGgpLGkucmVhZCh0aGlzLGUsITAsMjMsNCl9LGQucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxFKGUsNCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsZSwhMSwyMyw0KX0sZC5wcm90b3R5cGUucmVhZERvdWJsZUxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxFKGUsOCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsZSwhMCw1Miw4KX0sZC5wcm90b3R5cGUucmVhZERvdWJsZUJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxFKGUsOCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsZSwhMSw1Miw4KX0sZC5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24oZSx0LHIsbil7ZT0rZSx0Pj4+PTAscj4+Pj0wLG58fFQodGhpcyxlLHQscixNYXRoLnBvdygyLDgqciktMSwwKTt2YXIgbz0xLGk9MDtmb3IodGhpc1t0XT0yNTUmZTsrK2k8ciYmKG8qPTI1Nik7KXRoaXNbdCtpXT1lL28mMjU1O3JldHVybiB0K3J9LGQucHJvdG90eXBlLndyaXRlVUludEJFPWZ1bmN0aW9uKGUsdCxyLG4pe2U9K2UsdD4+Pj0wLHI+Pj49MCxufHxUKHRoaXMsZSx0LHIsTWF0aC5wb3coMiw4KnIpLTEsMCk7dmFyIG89ci0xLGk9MTtmb3IodGhpc1t0K29dPTI1NSZlOzA8PS0tbyYmKGkqPTI1Nik7KXRoaXNbdCtvXT1lL2kmMjU1O3JldHVybiB0K3J9LGQucHJvdG90eXBlLndyaXRlVUludDg9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxUKHRoaXMsZSx0LDEsMjU1LDApLHRoaXNbdF09MjU1JmUsdCsxfSxkLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8VCh0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sZC5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fFQodGhpcyxlLHQsMiw2NTUzNSwwKSx0aGlzW3RdPWU+Pj44LHRoaXNbdCsxXT0yNTUmZSx0KzJ9LGQucHJvdG90eXBlLndyaXRlVUludDMyTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxUKHRoaXMsZSx0LDQsNDI5NDk2NzI5NSwwKSx0aGlzW3QrM109ZT4+PjI0LHRoaXNbdCsyXT1lPj4+MTYsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdF09MjU1JmUsdCs0fSxkLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8VCh0aGlzLGUsdCw0LDQyOTQ5NjcyOTUsMCksdGhpc1t0XT1lPj4+MjQsdGhpc1t0KzFdPWU+Pj4xNix0aGlzW3QrMl09ZT4+PjgsdGhpc1t0KzNdPTI1NSZlLHQrNH0sZC5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtpZihlPStlLHQ+Pj49MCwhbil7dmFyIG89TWF0aC5wb3coMiw4KnItMSk7VCh0aGlzLGUsdCxyLG8tMSwtbyl9dmFyIGk9MCxhPTEscz0wO2Zvcih0aGlzW3RdPTI1NSZlOysraTxyJiYoYSo9MjU2KTspZTwwJiYwPT09cyYmMCE9PXRoaXNbdCtpLTFdJiYocz0xKSx0aGlzW3QraV09KGUvYT4+MCktcyYyNTU7cmV0dXJuIHQrcn0sZC5wcm90b3R5cGUud3JpdGVJbnRCRT1mdW5jdGlvbihlLHQscixuKXtpZihlPStlLHQ+Pj49MCwhbil7dmFyIG89TWF0aC5wb3coMiw4KnItMSk7VCh0aGlzLGUsdCxyLG8tMSwtbyl9dmFyIGk9ci0xLGE9MSxzPTA7Zm9yKHRoaXNbdCtpXT0yNTUmZTswPD0tLWkmJihhKj0yNTYpOyllPDAmJjA9PT1zJiYwIT09dGhpc1t0K2krMV0mJihzPTEpLHRoaXNbdCtpXT0oZS9hPj4wKS1zJjI1NTtyZXR1cm4gdCtyfSxkLnByb3RvdHlwZS53cml0ZUludDg9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxUKHRoaXMsZSx0LDEsMTI3LC0xMjgpLGU8MCYmKGU9MjU1K2UrMSksdGhpc1t0XT0yNTUmZSx0KzF9LGQucHJvdG90eXBlLndyaXRlSW50MTZMRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fFQodGhpcyxlLHQsMiwzMjc2NywtMzI3NjgpLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sZC5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8VCh0aGlzLGUsdCwyLDMyNzY3LC0zMjc2OCksdGhpc1t0XT1lPj4+OCx0aGlzW3QrMV09MjU1JmUsdCsyfSxkLnByb3RvdHlwZS53cml0ZUludDMyTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxUKHRoaXMsZSx0LDQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCksdGhpc1t0XT0yNTUmZSx0aGlzW3QrMV09ZT4+PjgsdGhpc1t0KzJdPWU+Pj4xNix0aGlzW3QrM109ZT4+PjI0LHQrNH0sZC5wcm90b3R5cGUud3JpdGVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8VCh0aGlzLGUsdCw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLGU8MCYmKGU9NDI5NDk2NzI5NStlKzEpLHRoaXNbdF09ZT4+PjI0LHRoaXNbdCsxXT1lPj4+MTYsdGhpc1t0KzJdPWU+Pj44LHRoaXNbdCszXT0yNTUmZSx0KzR9LGQucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIEModGhpcyxlLHQsITAscil9LGQucHJvdG90eXBlLndyaXRlRmxvYXRCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIEModGhpcyxlLHQsITEscil9LGQucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBMKHRoaXMsZSx0LCEwLHIpfSxkLnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gTCh0aGlzLGUsdCwhMSxyKX0sZC5wcm90b3R5cGUuY29weT1mdW5jdGlvbihlLHQscixuKXtpZighZC5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgc2hvdWxkIGJlIGEgQnVmZmVyXCIpO2lmKHI9cnx8MCxufHwwPT09bnx8KG49dGhpcy5sZW5ndGgpLHQ+PWUubGVuZ3RoJiYodD1lLmxlbmd0aCksdD10fHwwLDA8biYmbjxyJiYobj1yKSxuPT09cilyZXR1cm4gMDtpZigwPT09ZS5sZW5ndGh8fDA9PT10aGlzLmxlbmd0aClyZXR1cm4gMDtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzXCIpO2lmKHI8MHx8cj49dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIik7aWYobjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwic291cmNlRW5kIG91dCBvZiBib3VuZHNcIik7bj50aGlzLmxlbmd0aCYmKG49dGhpcy5sZW5ndGgpLGUubGVuZ3RoLXQ8bi1yJiYobj1lLmxlbmd0aC10K3IpO3ZhciBvPW4tcjtpZih0aGlzPT09ZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbil0aGlzLmNvcHlXaXRoaW4odCxyLG4pO2Vsc2UgaWYodGhpcz09PWUmJnI8dCYmdDxuKWZvcih2YXIgaT1vLTE7MDw9aTstLWkpZVtpK3RdPXRoaXNbaStyXTtlbHNlIFVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKGUsdGhpcy5zdWJhcnJheShyLG4pLHQpO3JldHVybiBvfSxkLnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdD8obj10LHQ9MCxyPXRoaXMubGVuZ3RoKTpcInN0cmluZ1wiPT10eXBlb2YgciYmKG49cixyPXRoaXMubGVuZ3RoKSx2b2lkIDAhPT1uJiZcInN0cmluZ1wiIT10eXBlb2Ygbil0aHJvdyBuZXcgVHlwZUVycm9yKFwiZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZ1wiKTtpZihcInN0cmluZ1wiPT10eXBlb2YgbiYmIWQuaXNFbmNvZGluZyhuKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrbik7aWYoMT09PWUubGVuZ3RoKXt2YXIgbz1lLmNoYXJDb2RlQXQoMCk7KFwidXRmOFwiPT09biYmbzwxMjh8fFwibGF0aW4xXCI9PT1uKSYmKGU9byl9fWVsc2VcIm51bWJlclwiPT10eXBlb2YgZT9lJj0yNTU6XCJib29sZWFuXCI9PXR5cGVvZiBlJiYoZT1OdW1iZXIoZSkpO2lmKHQ8MHx8dGhpcy5sZW5ndGg8dHx8dGhpcy5sZW5ndGg8cil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihyPD10KXJldHVybiB0aGlzO3ZhciBpO2lmKHQ+Pj49MCxyPXZvaWQgMD09PXI/dGhpcy5sZW5ndGg6cj4+PjAsXCJudW1iZXJcIj09dHlwZW9mKGU9ZXx8MCkpZm9yKGk9dDtpPHI7KytpKXRoaXNbaV09ZTtlbHNle3ZhciBhPWQuaXNCdWZmZXIoZSk/ZTpkLmZyb20oZSxuKSxzPWEubGVuZ3RoO2lmKDA9PT1zKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSB2YWx1ZSBcIicrZSsnXCIgaXMgaW52YWxpZCBmb3IgYXJndW1lbnQgXCJ2YWx1ZVwiJyk7Zm9yKGk9MDtpPHItdDsrK2kpdGhpc1tpK3RdPWFbaSVzXX1yZXR1cm4gdGhpc307dmFyIHQ9L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiBQKGUsdCl7dmFyIHI7dD10fHwxLzA7Zm9yKHZhciBuPWUubGVuZ3RoLG89bnVsbCxpPVtdLGE9MDthPG47KythKXtpZig1NTI5NTwocj1lLmNoYXJDb2RlQXQoYSkpJiZyPDU3MzQ0KXtpZighbyl7aWYoNTYzMTk8cil7LTE8KHQtPTMpJiZpLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWlmKGErMT09PW4pey0xPCh0LT0zKSYmaS5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1vPXI7Y29udGludWV9aWYocjw1NjMyMCl7LTE8KHQtPTMpJiZpLnB1c2goMjM5LDE5MSwxODkpLG89cjtjb250aW51ZX1yPTY1NTM2KyhvLTU1Mjk2PDwxMHxyLTU2MzIwKX1lbHNlIG8mJi0xPCh0LT0zKSYmaS5wdXNoKDIzOSwxOTEsMTg5KTtpZihvPW51bGwscjwxMjgpe2lmKC0tdDwwKWJyZWFrO2kucHVzaChyKX1lbHNlIGlmKHI8MjA0OCl7aWYoKHQtPTIpPDApYnJlYWs7aS5wdXNoKHI+PjZ8MTkyLDYzJnJ8MTI4KX1lbHNlIGlmKHI8NjU1MzYpe2lmKCh0LT0zKTwwKWJyZWFrO2kucHVzaChyPj4xMnwyMjQscj4+NiY2M3wxMjgsNjMmcnwxMjgpfWVsc2V7aWYoIShyPDExMTQxMTIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZSBwb2ludFwiKTtpZigodC09NCk8MClicmVhaztpLnB1c2gocj4+MTh8MjQwLHI+PjEyJjYzfDEyOCxyPj42JjYzfDEyOCw2MyZyfDEyOCl9fXJldHVybiBpfWZ1bmN0aW9uIEEoZSl7cmV0dXJuIG4udG9CeXRlQXJyYXkoZnVuY3Rpb24oZSl7aWYoKGU9KGU9ZS5zcGxpdChcIj1cIilbMF0pLnRyaW0oKS5yZXBsYWNlKHQsXCJcIikpLmxlbmd0aDwyKXJldHVyblwiXCI7Zm9yKDtlLmxlbmd0aCU0IT0wOyllKz1cIj1cIjtyZXR1cm4gZX0oZSkpfWZ1bmN0aW9uIGsoZSx0LHIsbil7Zm9yKHZhciBvPTA7bzxuJiYhKG8rcj49dC5sZW5ndGh8fG8+PWUubGVuZ3RoKTsrK28pdFtvK3JdPWVbb107cmV0dXJuIG99ZnVuY3Rpb24gUihlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgdHx8bnVsbCE9ZSYmbnVsbCE9ZS5jb25zdHJ1Y3RvciYmbnVsbCE9ZS5jb25zdHJ1Y3Rvci5uYW1lJiZlLmNvbnN0cnVjdG9yLm5hbWU9PT10Lm5hbWV9ZnVuY3Rpb24gRChlKXtyZXR1cm4gZSE9ZX12YXIgST1mdW5jdGlvbigpe2Zvcih2YXIgZT1cIjAxMjM0NTY3ODlhYmNkZWZcIix0PW5ldyBBcnJheSgyNTYpLHI9MDtyPDE2Oysrcilmb3IodmFyIG49MTYqcixvPTA7bzwxNjsrK28pdFtuK29dPWVbcl0rZVtvXTtyZXR1cm4gdH0oKX0pLmNhbGwodGhpcyxVKFwiYnVmZmVyXCIpLkJ1ZmZlcil9LHtcImJhc2U2NC1qc1wiOjEsYnVmZmVyOjQsaWVlZTc1NDoyMzZ9XSw1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgVHlwZUVycm9yKFN0cmluZyhlKStcIiBpcyBub3QgYSBmdW5jdGlvblwiKTtyZXR1cm4gZX19LHt9XSw2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFuKGUpJiZudWxsIT09ZSl0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBzZXQgXCIrU3RyaW5nKGUpK1wiIGFzIGEgcHJvdG90eXBlXCIpO3JldHVybiBlfX0se1wiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiOjc0fV0sNzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIiksbz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGVcIiksaT1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIiksYT1uKFwidW5zY29wYWJsZXNcIikscz1BcnJheS5wcm90b3R5cGU7bnVsbD09c1thXSYmaS5mKHMsYSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOm8obnVsbCl9KSx0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7c1thXVtlXT0hMH19LHtcIi4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlXCI6OTAsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvc3RyaW5nLW11bHRpYnl0ZVwiKS5jaGFyQXQ7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdCsocj9uKGUsdCkubGVuZ3RoOjEpfX0se1wiLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGVcIjoxMjN9XSw5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBUeXBlRXJyb3IoXCJJbmNvcnJlY3QgXCIrKHI/citcIiBcIjpcIlwiKStcImludm9jYXRpb25cIik7cmV0dXJuIGV9fSx7fV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIW4oZSkpdGhyb3cgVHlwZUVycm9yKFN0cmluZyhlKStcIiBpcyBub3QgYW4gb2JqZWN0XCIpO3JldHVybiBlfX0se1wiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiOjc0fV0sMTE6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgRGF0YVZpZXd9LHt9XSwxMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGwoZSkmJnUoTCxjKGUpKX12YXIgbyxpPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLW5hdGl2ZVwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIikscz1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLHU9ZShcIi4uL2ludGVybmFscy9oYXNcIiksYz1lKFwiLi4vaW50ZXJuYWxzL2NsYXNzb2ZcIiksZD1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKSxmPWUoXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIiksaD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIikuZixwPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1wcm90b3R5cGUtb2ZcIikseT1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1zZXQtcHJvdG90eXBlLW9mXCIpLG09ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKSxnPWUoXCIuLi9pbnRlcm5hbHMvdWlkXCIpLHY9cy5JbnQ4QXJyYXksYj12JiZ2LnByb3RvdHlwZSxfPXMuVWludDhDbGFtcGVkQXJyYXkseD1fJiZfLnByb3RvdHlwZSx3PXYmJnAodiksaj1iJiZwKGIpLFM9T2JqZWN0LnByb3RvdHlwZSxNPVMuaXNQcm90b3R5cGVPZixFPW0oXCJ0b1N0cmluZ1RhZ1wiKSxUPWcoXCJUWVBFRF9BUlJBWV9UQUdcIiksTz1pJiYhIXkmJlwiT3BlcmFcIiE9PWMocy5vcGVyYSksQz0hMSxMPXtJbnQ4QXJyYXk6MSxVaW50OEFycmF5OjEsVWludDhDbGFtcGVkQXJyYXk6MSxJbnQxNkFycmF5OjIsVWludDE2QXJyYXk6MixJbnQzMkFycmF5OjQsVWludDMyQXJyYXk6NCxGbG9hdDMyQXJyYXk6NCxGbG9hdDY0QXJyYXk6OH07Zm9yKG8gaW4gTClzW29dfHwoTz0hMSk7aWYoKCFPfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiB3fHx3PT09RnVuY3Rpb24ucHJvdG90eXBlKSYmKHc9ZnVuY3Rpb24oKXt0aHJvdyBUeXBlRXJyb3IoXCJJbmNvcnJlY3QgaW52b2NhdGlvblwiKX0sTykpZm9yKG8gaW4gTClzW29dJiZ5KHNbb10sdyk7aWYoKCFPfHwhanx8aj09PVMpJiYoaj13LnByb3RvdHlwZSxPKSlmb3IobyBpbiBMKXNbb10mJnkoc1tvXS5wcm90b3R5cGUsaik7aWYoTyYmcCh4KSE9PWomJnkoeCxqKSxhJiYhdShqLEUpKWZvcihvIGluIEM9ITAsaChqLEUse2dldDpmdW5jdGlvbigpe3JldHVybiBsKHRoaXMpP3RoaXNbVF06dm9pZCAwfX0pLEwpc1tvXSYmZChzW29dLFQsbyk7dC5leHBvcnRzPXtOQVRJVkVfQVJSQVlfQlVGRkVSX1ZJRVdTOk8sVFlQRURfQVJSQVlfVEFHOkMmJlQsYVR5cGVkQXJyYXk6ZnVuY3Rpb24oZSl7aWYobihlKSlyZXR1cm4gZTt0aHJvdyBUeXBlRXJyb3IoXCJUYXJnZXQgaXMgbm90IGEgdHlwZWQgYXJyYXlcIil9LGFUeXBlZEFycmF5Q29uc3RydWN0b3I6ZnVuY3Rpb24oZSl7aWYoeSl7aWYoTS5jYWxsKHcsZSkpcmV0dXJuIGV9ZWxzZSBmb3IodmFyIHQgaW4gTClpZih1KEwsbykpe3ZhciByPXNbdF07aWYociYmKGU9PT1yfHxNLmNhbGwocixlKSkpcmV0dXJuIGV9dGhyb3cgVHlwZUVycm9yKFwiVGFyZ2V0IGlzIG5vdCBhIHR5cGVkIGFycmF5IGNvbnN0cnVjdG9yXCIpfSxleHBvcnRUeXBlZEFycmF5TWV0aG9kOmZ1bmN0aW9uKGUsdCxyKXtpZihhKXtpZihyKWZvcih2YXIgbiBpbiBMKXt2YXIgbz1zW25dO28mJnUoby5wcm90b3R5cGUsZSkmJmRlbGV0ZSBvLnByb3RvdHlwZVtlXX1qW2VdJiYhcnx8ZihqLGUscj90Ok8mJmJbZV18fHQpfX0sZXhwb3J0VHlwZWRBcnJheVN0YXRpY01ldGhvZDpmdW5jdGlvbihlLHQscil7dmFyIG4sbztpZihhKXtpZih5KXtpZihyKWZvcihuIGluIEwpKG89c1tuXSkmJnUobyxlKSYmZGVsZXRlIG9bZV07aWYod1tlXSYmIXIpcmV0dXJuO3RyeXtyZXR1cm4gZih3LGUscj90Ok8mJnZbZV18fHQpfWNhdGNoKGUpe319Zm9yKG4gaW4gTCkhKG89c1tuXSl8fG9bZV0mJiFyfHxmKG8sZSx0KX19LGlzVmlldzpmdW5jdGlvbihlKXt2YXIgdD1jKGUpO3JldHVyblwiRGF0YVZpZXdcIj09PXR8fHUoTCx0KX0saXNUeXBlZEFycmF5Om4sVHlwZWRBcnJheTp3LFR5cGVkQXJyYXlQcm90b3R5cGU6an19LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItbmF0aXZlXCI6MTEsXCIuLi9pbnRlcm5hbHMvY2xhc3NvZlwiOjI5LFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiOjM3LFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCI6NzQsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mXCI6OTcsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LXNldC1wcm90b3R5cGUtb2ZcIjoxMDEsXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIjoxMDgsXCIuLi9pbnRlcm5hbHMvdWlkXCI6MTQzLFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKGUpe3JldHVyblsyNTUmZV19ZnVuY3Rpb24gbyhlKXtyZXR1cm5bMjU1JmUsZT4+OCYyNTVdfWZ1bmN0aW9uIGkoZSl7cmV0dXJuWzI1NSZlLGU+PjgmMjU1LGU+PjE2JjI1NSxlPj4yNCYyNTVdfWZ1bmN0aW9uIGEoZSl7cmV0dXJuIGVbM108PDI0fGVbMl08PDE2fGVbMV08PDh8ZVswXX1mdW5jdGlvbiBzKGUpe3JldHVybiBWKGUsMjMsNCl9ZnVuY3Rpb24gbChlKXtyZXR1cm4gVihlLDUyLDgpfWZ1bmN0aW9uIHUoZSx0KXtFKGVbUl0sdCx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEwodGhpcylbdF19fSl9ZnVuY3Rpb24gYyhlLHQscixuKXt2YXIgbz14KHIpLGk9TChlKTtpZihvK3Q+aS5ieXRlTGVuZ3RoKXRocm93IEcoRCk7dmFyIGE9TChpLmJ1ZmZlcikuYnl0ZXMscz1vK2kuYnl0ZU9mZnNldCxsPWEuc2xpY2UocyxzK3QpO3JldHVybiBuP2w6bC5yZXZlcnNlKCl9ZnVuY3Rpb24gZChlLHQscixuLG8saSl7dmFyIGE9eChyKSxzPUwoZSk7aWYoYSt0PnMuYnl0ZUxlbmd0aCl0aHJvdyBHKEQpO2Zvcih2YXIgbD1MKHMuYnVmZmVyKS5ieXRlcyx1PWErcy5ieXRlT2Zmc2V0LGM9bigrbyksZD0wO2Q8dDtkKyspbFt1K2RdPWNbaT9kOnQtZC0xXX12YXIgZj1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxoPWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIikscD1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci1uYXRpdmVcIikseT1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKSxtPWUoXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmUtYWxsXCIpLGc9ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSx2PWUoXCIuLi9pbnRlcm5hbHMvYW4taW5zdGFuY2VcIiksYj1lKFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIiksXz1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSx4PWUoXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhcIiksdz1lKFwiLi4vaW50ZXJuYWxzL2llZWU3NTRcIiksaj1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mXCIpLFM9ZShcIi4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZlwiKSxNPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXNcIikuZixFPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKS5mLFQ9ZShcIi4uL2ludGVybmFscy9hcnJheS1maWxsXCIpLE89ZShcIi4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZ1wiKSxDPWUoXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGVcIiksTD1DLmdldCxQPUMuc2V0LEE9XCJBcnJheUJ1ZmZlclwiLGs9XCJEYXRhVmlld1wiLFI9XCJwcm90b3R5cGVcIixEPVwiV3JvbmcgaW5kZXhcIixJPWZbQV0sVT1JLE49ZltrXSxGPU4mJk5bUl0sQj1PYmplY3QucHJvdG90eXBlLEc9Zi5SYW5nZUVycm9yLFY9dy5wYWNrLHo9dy51bnBhY2s7aWYocCl7aWYoIWcoZnVuY3Rpb24oKXtJKDEpfSl8fCFnKGZ1bmN0aW9uKCl7bmV3IEkoLTEpfSl8fGcoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEksbmV3IEkoMS41KSxuZXcgSShOYU4pLEkubmFtZSE9QX0pKXtmb3IodmFyIEgsVz0oVT1mdW5jdGlvbihlKXtyZXR1cm4gdih0aGlzLFUpLG5ldyBJKHgoZSkpfSlbUl09SVtSXSxxPU0oSSksWD0wO3EubGVuZ3RoPlg7KShIPXFbWCsrXSlpbiBVfHx5KFUsSCxJW0hdKTtXLmNvbnN0cnVjdG9yPVV9UyYmaihGKSE9PUImJlMoRixCKTt2YXIgWT1uZXcgTihuZXcgVSgyKSksWj1GLnNldEludDg7WS5zZXRJbnQ4KDAsMjE0NzQ4MzY0OCksWS5zZXRJbnQ4KDEsMjE0NzQ4MzY0OSksIVkuZ2V0SW50OCgwKSYmWS5nZXRJbnQ4KDEpfHxtKEYse3NldEludDg6ZnVuY3Rpb24oZSx0KXtaLmNhbGwodGhpcyxlLHQ8PDI0Pj4yNCl9LHNldFVpbnQ4OmZ1bmN0aW9uKGUsdCl7Wi5jYWxsKHRoaXMsZSx0PDwyND4+MjQpfX0se3Vuc2FmZTohMH0pfWVsc2UgVT1mdW5jdGlvbihlKXt2KHRoaXMsVSxBKTt2YXIgdD14KGUpO1AodGhpcyx7Ynl0ZXM6VC5jYWxsKG5ldyBBcnJheSh0KSwwKSxieXRlTGVuZ3RoOnR9KSxofHwodGhpcy5ieXRlTGVuZ3RoPXQpfSxOPWZ1bmN0aW9uKGUsdCxyKXt2KHRoaXMsTixrKSx2KGUsVSxrKTt2YXIgbj1MKGUpLmJ5dGVMZW5ndGgsbz1iKHQpO2lmKG88MHx8bjxvKXRocm93IEcoXCJXcm9uZyBvZmZzZXRcIik7aWYobjxvKyhyPXZvaWQgMD09PXI/bi1vOl8ocikpKXRocm93IEcoXCJXcm9uZyBsZW5ndGhcIik7UCh0aGlzLHtidWZmZXI6ZSxieXRlTGVuZ3RoOnIsYnl0ZU9mZnNldDpvfSksaHx8KHRoaXMuYnVmZmVyPWUsdGhpcy5ieXRlTGVuZ3RoPXIsdGhpcy5ieXRlT2Zmc2V0PW8pfSxoJiYodShVLFwiYnl0ZUxlbmd0aFwiKSx1KE4sXCJidWZmZXJcIiksdShOLFwiYnl0ZUxlbmd0aFwiKSx1KE4sXCJieXRlT2Zmc2V0XCIpKSxtKE5bUl0se2dldEludDg6ZnVuY3Rpb24oZSl7cmV0dXJuIGModGhpcywxLGUpWzBdPDwyND4+MjR9LGdldFVpbnQ4OmZ1bmN0aW9uKGUpe3JldHVybiBjKHRoaXMsMSxlKVswXX0sZ2V0SW50MTY6ZnVuY3Rpb24oZSx0KXt2YXIgcj1jKHRoaXMsMixlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCk7cmV0dXJuKHJbMV08PDh8clswXSk8PDE2Pj4xNn0sZ2V0VWludDE2OmZ1bmN0aW9uKGUsdCl7dmFyIHI9Yyh0aGlzLDIsZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApO3JldHVybiByWzFdPDw4fHJbMF19LGdldEludDMyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEoYyh0aGlzLDQsZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApKX0sZ2V0VWludDMyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEoYyh0aGlzLDQsZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApKT4+PjB9LGdldEZsb2F0MzI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4geihjKHRoaXMsNCxlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCksMjMpfSxnZXRGbG9hdDY0OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHooYyh0aGlzLDgsZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApLDUyKX0sc2V0SW50ODpmdW5jdGlvbihlLHQpe2QodGhpcywxLGUsbix0KX0sc2V0VWludDg6ZnVuY3Rpb24oZSx0KXtkKHRoaXMsMSxlLG4sdCl9LHNldEludDE2OmZ1bmN0aW9uKGUsdCxyKXtkKHRoaXMsMixlLG8sdCwyPGFyZ3VtZW50cy5sZW5ndGg/cjp2b2lkIDApfSxzZXRVaW50MTY6ZnVuY3Rpb24oZSx0LHIpe2QodGhpcywyLGUsbyx0LDI8YXJndW1lbnRzLmxlbmd0aD9yOnZvaWQgMCl9LHNldEludDMyOmZ1bmN0aW9uKGUsdCxyKXtkKHRoaXMsNCxlLGksdCwyPGFyZ3VtZW50cy5sZW5ndGg/cjp2b2lkIDApfSxzZXRVaW50MzI6ZnVuY3Rpb24oZSx0LHIpe2QodGhpcyw0LGUsaSx0LDI8YXJndW1lbnRzLmxlbmd0aD9yOnZvaWQgMCl9LHNldEZsb2F0MzI6ZnVuY3Rpb24oZSx0LHIpe2QodGhpcyw0LGUscyx0LDI8YXJndW1lbnRzLmxlbmd0aD9yOnZvaWQgMCl9LHNldEZsb2F0NjQ6ZnVuY3Rpb24oZSx0LHIpe2QodGhpcyw4LGUsbCx0LDI8YXJndW1lbnRzLmxlbmd0aD9yOnZvaWQgMCl9fSk7TyhVLEEpLE8oTixrKSx0LmV4cG9ydHM9e0FycmF5QnVmZmVyOlUsRGF0YVZpZXc6Tn19LHtcIi4uL2ludGVybmFscy9hbi1pbnN0YW5jZVwiOjksXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLW5hdGl2ZVwiOjExLFwiLi4vaW50ZXJuYWxzL2FycmF5LWZpbGxcIjoxNSxcIi4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHlcIjozNyxcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiOjQyLFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvaWVlZTc1NFwiOjY1LFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCI6NzAsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzXCI6OTUsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1wcm90b3R5cGUtb2ZcIjo5NyxcIi4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZlwiOjEwMSxcIi4uL2ludGVybmFscy9yZWRlZmluZS1hbGxcIjoxMDcsXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIjoxMTcsXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhcIjoxMzEsXCIuLi9pbnRlcm5hbHMvdG8taW50ZWdlclwiOjEzMyxcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzR9XSwxNDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBjPWUoXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCIpLGQ9ZShcIi4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleFwiKSxmPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLGg9TWF0aC5taW47dC5leHBvcnRzPVtdLmNvcHlXaXRoaW58fGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1jKHRoaXMpLG89ZihuLmxlbmd0aCksaT1kKGUsbyksYT1kKHQsbykscz0yPGFyZ3VtZW50cy5sZW5ndGg/cjp2b2lkIDAsbD1oKCh2b2lkIDA9PT1zP286ZChzLG8pKS1hLG8taSksdT0xO2ZvcihhPGkmJmk8YStsJiYodT0tMSxhKz1sLTEsaSs9bC0xKTswPGwtLTspYSBpbiBuP25baV09blthXTpkZWxldGUgbltpXSxpKz11LGErPXU7cmV0dXJuIG59fSx7XCIuLi9pbnRlcm5hbHMvdG8tYWJzb2x1dGUtaW5kZXhcIjoxMzAsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0LFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiOjEzNX1dLDE1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHU9ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIiksYz1lKFwiLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4XCIpLGQ9ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49dSh0aGlzKSxvPWQobi5sZW5ndGgpLGk9YXJndW1lbnRzLmxlbmd0aCxhPWMoMTxpP3Q6dm9pZCAwLG8pLHM9MjxpP3I6dm9pZCAwLGw9dm9pZCAwPT09cz9vOmMocyxvKTthPGw7KW5bYSsrXT1lO3JldHVybiBufX0se1wiLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4XCI6MTMwLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNCxcIi4uL2ludGVybmFscy90by1vYmplY3RcIjoxMzV9XSwxNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLmZvckVhY2gsbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3RcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiKSxhPW8oXCJmb3JFYWNoXCIpLHM9aShcImZvckVhY2hcIik7dC5leHBvcnRzPWEmJnM/W10uZm9yRWFjaDpmdW5jdGlvbihlLHQpe3JldHVybiBuKHRoaXMsZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiOjE5LFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3RcIjoyMixcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtdXNlcy10by1sZW5ndGhcIjoyM31dLDE3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG09ZShcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIiksZz1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSx2PWUoXCIuLi9pbnRlcm5hbHMvY2FsbC13aXRoLXNhZmUtaXRlcmF0aW9uLWNsb3NpbmdcIiksYj1lKFwiLi4vaW50ZXJuYWxzL2lzLWFycmF5LWl0ZXJhdG9yLW1ldGhvZFwiKSxfPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLHg9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHlcIiksdz1lKFwiLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvci1tZXRob2RcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGksYSxzLGwsdT1nKGUpLGM9XCJmdW5jdGlvblwiPT10eXBlb2YgdGhpcz90aGlzOkFycmF5LGQ9YXJndW1lbnRzLmxlbmd0aCxmPTE8ZD90OnZvaWQgMCxoPXZvaWQgMCE9PWYscD13KHUpLHk9MDtpZihoJiYoZj1tKGYsMjxkP3I6dm9pZCAwLDIpKSxudWxsPT1wfHxjPT1BcnJheSYmYihwKSlmb3Iobz1uZXcgYyhuPV8odS5sZW5ndGgpKTt5PG47eSsrKWw9aD9mKHVbeV0seSk6dVt5XSx4KG8seSxsKTtlbHNlIGZvcihzPShhPXAuY2FsbCh1KSkubmV4dCxvPW5ldyBjOyEoaT1zLmNhbGwoYSkpLmRvbmU7eSsrKWw9aD92KGEsZixbaS52YWx1ZSx5XSwhMCk6aS52YWx1ZSx4KG8seSxsKTtyZXR1cm4gby5sZW5ndGg9eSxvfX0se1wiLi4vaW50ZXJuYWxzL2NhbGwtd2l0aC1zYWZlLWl0ZXJhdGlvbi1jbG9zaW5nXCI6MjYsXCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5XCI6MzksXCIuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0XCI6NTQsXCIuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZFwiOjU3LFwiLi4vaW50ZXJuYWxzL2lzLWFycmF5LWl0ZXJhdG9yLW1ldGhvZFwiOjcxLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNCxcIi4uL2ludGVybmFscy90by1vYmplY3RcIjoxMzV9XSwxODpbZnVuY3Rpb24oZSx0LHIpe2Z1bmN0aW9uIG4ocyl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxyKXt2YXIgbixvPWwoZSksaT11KG8ubGVuZ3RoKSxhPWMocixpKTtpZihzJiZ0IT10KXtmb3IoO2E8aTspaWYoKG49b1thKytdKSE9bilyZXR1cm4hMH1lbHNlIGZvcig7YTxpO2ErKylpZigoc3x8YSBpbiBvKSYmb1thXT09PXQpcmV0dXJuIHN8fGF8fDA7cmV0dXJuIXMmJi0xfX12YXIgbD1lKFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0XCIpLHU9ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIiksYz1lKFwiLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4XCIpO3QuZXhwb3J0cz17aW5jbHVkZXM6bighMCksaW5kZXhPZjpuKCExKX19LHtcIi4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleFwiOjEzMCxcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiOjEzMixcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzR9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe2Z1bmN0aW9uIG4oaCl7dmFyIHA9MT09aCx5PTI9PWgsbT0zPT1oLGc9ND09aCx2PTY9PWgsYj01PT1ofHx2O3JldHVybiBmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIG8saSxhPXcoZSkscz14KGEpLGw9Xyh0LHIsMyksdT1qKHMubGVuZ3RoKSxjPTAsZD1ufHxTLGY9cD9kKGUsdSk6eT9kKGUsMCk6dm9pZCAwO2M8dTtjKyspaWYoKGJ8fGMgaW4gcykmJihpPWwobz1zW2NdLGMsYSksaCkpaWYocClmW2NdPWk7ZWxzZSBpZihpKXN3aXRjaChoKXtjYXNlIDM6cmV0dXJuITA7Y2FzZSA1OnJldHVybiBvO2Nhc2UgNjpyZXR1cm4gYztjYXNlIDI6TS5jYWxsKGYsbyl9ZWxzZSBpZihnKXJldHVybiExO3JldHVybiB2Py0xOm18fGc/ZzpmfX12YXIgXz1lKFwiLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dFwiKSx4PWUoXCIuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3RcIiksdz1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSxqPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLFM9ZShcIi4uL2ludGVybmFscy9hcnJheS1zcGVjaWVzLWNyZWF0ZVwiKSxNPVtdLnB1c2g7dC5leHBvcnRzPXtmb3JFYWNoOm4oMCksbWFwOm4oMSksZmlsdGVyOm4oMiksc29tZTpuKDMpLGV2ZXJ5Om4oNCksZmluZDpuKDUpLGZpbmRJbmRleDpuKDYpfX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlXCI6MjUsXCIuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0XCI6NTQsXCIuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3RcIjo2NixcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzQsXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1fV0sMjA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1lKFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0XCIpLGE9ZShcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCIpLHM9ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIiksbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3RcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiKSxsPU1hdGgubWluLHU9W10ubGFzdEluZGV4T2YsYz0hIXUmJjEvWzFdLmxhc3RJbmRleE9mKDEsLTApPDAsZD1uKFwibGFzdEluZGV4T2ZcIiksZj1vKFwiaW5kZXhPZlwiLHtBQ0NFU1NPUlM6ITAsMTowfSksaD1jfHwhZHx8IWY7dC5leHBvcnRzPWg/ZnVuY3Rpb24oZSx0KXtpZihjKXJldHVybiB1LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8MDt2YXIgcj1pKHRoaXMpLG49cyhyLmxlbmd0aCksbz1uLTE7Zm9yKDE8YXJndW1lbnRzLmxlbmd0aCYmKG89bChvLGEodCkpKSxvPDAmJihvPW4rbyk7MDw9bztvLS0paWYobyBpbiByJiZyW29dPT09ZSlyZXR1cm4gb3x8MDtyZXR1cm4tMX06dX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3RcIjoyMixcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtdXNlcy10by1sZW5ndGhcIjoyMyxcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiOjEzMixcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCI6MTMzLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNH1dLDIxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSxvPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2VuZ2luZS12OC12ZXJzaW9uXCIpLGE9byhcInNwZWNpZXNcIik7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiA1MTw9aXx8IW4oZnVuY3Rpb24oKXt2YXIgZT1bXTtyZXR1cm4oZS5jb25zdHJ1Y3Rvcj17fSlbYV09ZnVuY3Rpb24oKXtyZXR1cm57Zm9vOjF9fSwxIT09ZVt0XShCb29sZWFuKS5mb299KX19LHtcIi4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvblwiOjQ3LFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIjoxNDZ9XSwyMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9W11bZV07cmV0dXJuISFyJiZuKGZ1bmN0aW9uKCl7ci5jYWxsKG51bGwsdHx8ZnVuY3Rpb24oKXt0aHJvdyAxfSwxKX0pfX0se1wiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTB9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe2Z1bmN0aW9uIGEoZSl7dGhyb3cgZX12YXIgcz1lKFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCIpLGw9ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSx1PWUoXCIuLi9pbnRlcm5hbHMvaGFzXCIpLGM9T2JqZWN0LmRlZmluZVByb3BlcnR5LGQ9e307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYodShkLGUpKXJldHVybiBkW2VdO3ZhciByPVtdW2VdLG49ISF1KHQ9dHx8e30sXCJBQ0NFU1NPUlNcIikmJnQuQUNDRVNTT1JTLG89dSh0LDApP3RbMF06YSxpPXUodCwxKT90WzFdOnZvaWQgMDtyZXR1cm4gZFtlXT0hIXImJiFsKGZ1bmN0aW9uKCl7aWYobiYmIXMpcmV0dXJuITA7dmFyIGU9e2xlbmd0aDotMX07bj9jKGUsMSx7ZW51bWVyYWJsZTohMCxnZXQ6YX0pOmVbMV09MSxyLmNhbGwoZSxvLGkpfSl9fSx7XCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIjo0MixcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL2hhc1wiOjYwfV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXtmdW5jdGlvbiBuKHUpe3JldHVybiBmdW5jdGlvbihlLHQscixuKXtjKHQpO3ZhciBvPWQoZSksaT1mKG8pLGE9aChvLmxlbmd0aCkscz11P2EtMTowLGw9dT8tMToxO2lmKHI8Milmb3IoOzspe2lmKHMgaW4gaSl7bj1pW3NdLHMrPWw7YnJlYWt9aWYocys9bCx1P3M8MDphPD1zKXRocm93IFR5cGVFcnJvcihcIlJlZHVjZSBvZiBlbXB0eSBhcnJheSB3aXRoIG5vIGluaXRpYWwgdmFsdWVcIil9Zm9yKDt1PzA8PXM6czxhO3MrPWwpcyBpbiBpJiYobj10KG4saVtzXSxzLG8pKTtyZXR1cm4gbn19dmFyIGM9ZShcIi4uL2ludGVybmFscy9hLWZ1bmN0aW9uXCIpLGQ9ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2luZGV4ZWQtb2JqZWN0XCIpLGg9ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIik7dC5leHBvcnRzPXtsZWZ0Om4oITEpLHJpZ2h0Om4oITApfX0se1wiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIjo1LFwiLi4vaW50ZXJuYWxzL2luZGV4ZWQtb2JqZWN0XCI6NjYsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0LFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiOjEzNX1dLDI1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2lzLWFycmF5XCIpLGk9ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKShcInNwZWNpZXNcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG8oZSkmJihcImZ1bmN0aW9uXCIhPXR5cGVvZihyPWUuY29uc3RydWN0b3IpfHxyIT09QXJyYXkmJiFvKHIucHJvdG90eXBlKT9uKHIpJiZudWxsPT09KHI9cltpXSkmJihyPXZvaWQgMCk6cj12b2lkIDApLG5ldyh2b2lkIDA9PT1yP0FycmF5OnIpKDA9PT10PzA6dCl9fSx7XCIuLi9pbnRlcm5hbHMvaXMtYXJyYXlcIjo3MixcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDI2OltmdW5jdGlvbihlLHQscil7dmFyIGk9ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxyLG4pe3RyeXtyZXR1cm4gbj9lKGkocilbMF0sclsxXSk6ZShyKX1jYXRjaChlKXt2YXIgbz10LnJldHVybjt0aHJvdyB2b2lkIDAhPT1vJiZpKG8uY2FsbCh0KSksZX19fSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTB9XSwyNzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIikoXCJpdGVyYXRvclwiKSxpPSExO3RyeXt2YXIgbj0wLGE9e25leHQ6ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTohIW4rK319LHJldHVybjpmdW5jdGlvbigpe2k9ITB9fTthW29dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LEFycmF5LmZyb20oYSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChlKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFpKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgbj17fTtuW29dPWZ1bmN0aW9uKCl7cmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTpyPSEwfX19fSxlKG4pfWNhdGNoKGUpe31yZXR1cm4gcn19LHtcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDI4OltmdW5jdGlvbihlLHQscil7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXdcIiksaT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpKFwidG9TdHJpbmdUYWdcIiksYT1cIkFyZ3VtZW50c1wiPT1vKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSk7dC5leHBvcnRzPW4/bzpmdW5jdGlvbihlKXt2YXIgdCxyLG47cmV0dXJuIHZvaWQgMD09PWU/XCJVbmRlZmluZWRcIjpudWxsPT09ZT9cIk51bGxcIjpcInN0cmluZ1wiPT10eXBlb2Yocj1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChlKXt9fSh0PU9iamVjdChlKSxpKSk/cjphP28odCk6XCJPYmplY3RcIj09KG49byh0KSkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY2FsbGVlP1wiQXJndW1lbnRzXCI6bn19LHtcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiOjI4LFwiLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydFwiOjEzOSxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDMwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHU9ZShcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCIpLmYsYz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGVcIiksZD1lKFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lLWFsbFwiKSxmPWUoXCIuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0XCIpLGg9ZShcIi4uL2ludGVybmFscy9hbi1pbnN0YW5jZVwiKSxwPWUoXCIuLi9pbnRlcm5hbHMvaXRlcmF0ZVwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvZGVmaW5lLWl0ZXJhdG9yXCIpLHM9ZShcIi4uL2ludGVybmFscy9zZXQtc3BlY2llc1wiKSx5PWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIiksbT1lKFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLW1ldGFkYXRhXCIpLmZhc3RLZXksbj1lKFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCIpLGc9bi5zZXQsdj1uLmdldHRlckZvcjt0LmV4cG9ydHM9e2dldENvbnN0cnVjdG9yOmZ1bmN0aW9uKGUscixuLG8pe2Z1bmN0aW9uIGkoZSx0LHIpe3ZhciBuLG8saT1zKGUpLGE9bChlLHQpO3JldHVybiBhP2EudmFsdWU9cjooaS5sYXN0PWE9e2luZGV4Om89bSh0LCEwKSxrZXk6dCx2YWx1ZTpyLHByZXZpb3VzOm49aS5sYXN0LG5leHQ6dm9pZCAwLHJlbW92ZWQ6ITF9LGkuZmlyc3R8fChpLmZpcnN0PWEpLG4mJihuLm5leHQ9YSkseT9pLnNpemUrKzplLnNpemUrKyxcIkZcIiE9PW8mJihpLmluZGV4W29dPWEpKSxlfXZhciBhPWUoZnVuY3Rpb24oZSx0KXtoKGUsYSxyKSxnKGUse3R5cGU6cixpbmRleDpjKG51bGwpLGZpcnN0OnZvaWQgMCxsYXN0OnZvaWQgMCxzaXplOjB9KSx5fHwoZS5zaXplPTApLG51bGwhPXQmJnAodCxlW29dLGUsbil9KSxzPXYociksbD1mdW5jdGlvbihlLHQpe3ZhciByLG49cyhlKSxvPW0odCk7aWYoXCJGXCIhPT1vKXJldHVybiBuLmluZGV4W29dO2ZvcihyPW4uZmlyc3Q7cjtyPXIubmV4dClpZihyLmtleT09dClyZXR1cm4gcn07cmV0dXJuIGQoYS5wcm90b3R5cGUse2NsZWFyOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXModGhpcyksdD1lLmluZGV4LHI9ZS5maXJzdDtyOylyLnJlbW92ZWQ9ITAsci5wcmV2aW91cyYmKHIucHJldmlvdXM9ci5wcmV2aW91cy5uZXh0PXZvaWQgMCksZGVsZXRlIHRbci5pbmRleF0scj1yLm5leHQ7ZS5maXJzdD1lLmxhc3Q9dm9pZCAwLHk/ZS5zaXplPTA6dGhpcy5zaXplPTB9LGRlbGV0ZTpmdW5jdGlvbihlKXt2YXIgdD1zKHRoaXMpLHI9bCh0aGlzLGUpO2lmKHIpe3ZhciBuPXIubmV4dCxvPXIucHJldmlvdXM7ZGVsZXRlIHQuaW5kZXhbci5pbmRleF0sci5yZW1vdmVkPSEwLG8mJihvLm5leHQ9biksbiYmKG4ucHJldmlvdXM9byksdC5maXJzdD09ciYmKHQuZmlyc3Q9biksdC5sYXN0PT1yJiYodC5sYXN0PW8pLHk/dC5zaXplLS06dGhpcy5zaXplLS19cmV0dXJuISFyfSxmb3JFYWNoOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLG49cyh0aGlzKSxvPWYoZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDAsMyk7cj1yP3IubmV4dDpuLmZpcnN0Oylmb3IobyhyLnZhbHVlLHIua2V5LHRoaXMpO3ImJnIucmVtb3ZlZDspcj1yLnByZXZpb3VzfSxoYXM6ZnVuY3Rpb24oZSl7cmV0dXJuISFsKHRoaXMsZSl9fSksZChhLnByb3RvdHlwZSxuP3tnZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9bCh0aGlzLGUpO3JldHVybiB0JiZ0LnZhbHVlfSxzZXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSh0aGlzLDA9PT1lPzA6ZSx0KX19OnthZGQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGkodGhpcyxlPTA9PT1lPzA6ZSxlKX19KSx5JiZ1KGEucHJvdG90eXBlLFwic2l6ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcyh0aGlzKS5zaXplfX0pLGF9LHNldFN0cm9uZzpmdW5jdGlvbihlLHQscil7dmFyIG49dCtcIiBJdGVyYXRvclwiLG89dih0KSxpPXYobik7YShlLHQsZnVuY3Rpb24oZSx0KXtnKHRoaXMse3R5cGU6bix0YXJnZXQ6ZSxzdGF0ZTpvKGUpLGtpbmQ6dCxsYXN0OnZvaWQgMH0pfSxmdW5jdGlvbigpe2Zvcih2YXIgZT1pKHRoaXMpLHQ9ZS5raW5kLHI9ZS5sYXN0O3ImJnIucmVtb3ZlZDspcj1yLnByZXZpb3VzO3JldHVybiBlLnRhcmdldCYmKGUubGFzdD1yPXI/ci5uZXh0OmUuc3RhdGUuZmlyc3QpP1wia2V5c1wiPT10P3t2YWx1ZTpyLmtleSxkb25lOiExfTpcInZhbHVlc1wiPT10P3t2YWx1ZTpyLnZhbHVlLGRvbmU6ITF9Ont2YWx1ZTpbci5rZXksci52YWx1ZV0sZG9uZTohMX06e3ZhbHVlOmUudGFyZ2V0PXZvaWQgMCxkb25lOiEwfX0scj9cImVudHJpZXNcIjpcInZhbHVlc1wiLCFyLCEwKSxzKHQpfX19LHtcIi4uL2ludGVybmFscy9hbi1pbnN0YW5jZVwiOjksXCIuLi9pbnRlcm5hbHMvZGVmaW5lLWl0ZXJhdG9yXCI6NDAsXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIjo0MixcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIjo1NCxcIi4uL2ludGVybmFscy9pbnRlcm5hbC1tZXRhZGF0YVwiOjY5LFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCI6NzAsXCIuLi9pbnRlcm5hbHMvaXRlcmF0ZVwiOjc3LFwiLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGVcIjo5MCxcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCI6OTIsXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmUtYWxsXCI6MTA3LFwiLi4vaW50ZXJuYWxzL3NldC1zcGVjaWVzXCI6MTE2fV0sMzE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbT1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxnPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLHY9ZShcIi4uL2ludGVybmFscy9pcy1mb3JjZWRcIiksYj1lKFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCIpLF89ZShcIi4uL2ludGVybmFscy9pbnRlcm5hbC1tZXRhZGF0YVwiKSx4PWUoXCIuLi9pbnRlcm5hbHMvaXRlcmF0ZVwiKSx3PWUoXCIuLi9pbnRlcm5hbHMvYW4taW5zdGFuY2VcIiksaj1lKFwiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiKSxTPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksTT1lKFwiLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvblwiKSxFPWUoXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIiksVD1lKFwiLi4vaW50ZXJuYWxzL2luaGVyaXQtaWYtcmVxdWlyZWRcIik7dC5leHBvcnRzPWZ1bmN0aW9uKG4sZSx0KXtmdW5jdGlvbiByKGUpe3ZhciByPWxbZV07YihsLGUsXCJhZGRcIj09ZT9mdW5jdGlvbihlKXtyZXR1cm4gci5jYWxsKHRoaXMsMD09PWU/MDplKSx0aGlzfTpcImRlbGV0ZVwiPT1lP2Z1bmN0aW9uKGUpe3JldHVybiEoaSYmIWooZSkpJiZyLmNhbGwodGhpcywwPT09ZT8wOmUpfTpcImdldFwiPT1lP2Z1bmN0aW9uKGUpe3JldHVybiBpJiYhaihlKT92b2lkIDA6ci5jYWxsKHRoaXMsMD09PWU/MDplKX06XCJoYXNcIj09ZT9mdW5jdGlvbihlKXtyZXR1cm4hKGkmJiFqKGUpKSYmci5jYWxsKHRoaXMsMD09PWU/MDplKX06ZnVuY3Rpb24oZSx0KXtyZXR1cm4gci5jYWxsKHRoaXMsMD09PWU/MDplLHQpLHRoaXN9KX12YXIgbz0tMSE9PW4uaW5kZXhPZihcIk1hcFwiKSxpPS0xIT09bi5pbmRleE9mKFwiV2Vha1wiKSxhPW8/XCJzZXRcIjpcImFkZFwiLHM9Z1tuXSxsPXMmJnMucHJvdG90eXBlLHU9cyxjPXt9O2lmKHYobixcImZ1bmN0aW9uXCIhPXR5cGVvZiBzfHwhKGl8fGwuZm9yRWFjaCYmIVMoZnVuY3Rpb24oKXsobmV3IHMpLmVudHJpZXMoKS5uZXh0KCl9KSkpKXU9dC5nZXRDb25zdHJ1Y3RvcihlLG4sbyxhKSxfLlJFUVVJUkVEPSEwO2Vsc2UgaWYodihuLCEwKSl7dmFyIGQ9bmV3IHUsZj1kW2FdKGk/e306LTAsMSkhPWQsaD1TKGZ1bmN0aW9uKCl7ZC5oYXMoMSl9KSxwPU0oZnVuY3Rpb24oZSl7bmV3IHMoZSl9KSx5PSFpJiZTKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPW5ldyBzLHQ9NTt0LS07KWVbYV0odCx0KTtyZXR1cm4hZS5oYXMoLTApfSk7cHx8KCgodT1lKGZ1bmN0aW9uKGUsdCl7dyhlLHUsbik7dmFyIHI9VChuZXcgcyxlLHUpO3JldHVybiBudWxsIT10JiZ4KHQsclthXSxyLG8pLHJ9KSkucHJvdG90eXBlPWwpLmNvbnN0cnVjdG9yPXUpLChofHx5KSYmKHIoXCJkZWxldGVcIikscihcImhhc1wiKSxvJiZyKFwiZ2V0XCIpKSwoeXx8ZikmJnIoYSksaSYmbC5jbGVhciYmZGVsZXRlIGwuY2xlYXJ9cmV0dXJuIGNbbl09dSxtKHtnbG9iYWw6ITAsZm9yY2VkOnUhPXN9LGMpLEUodSxuKSxpfHx0LnNldFN0cm9uZyh1LG4sbyksdX19LHtcIi4uL2ludGVybmFscy9hbi1pbnN0YW5jZVwiOjksXCIuLi9pbnRlcm5hbHMvY2hlY2stY29ycmVjdG5lc3Mtb2YtaXRlcmF0aW9uXCI6MjcsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkXCI6NjcsXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtbWV0YWRhdGFcIjo2OSxcIi4uL2ludGVybmFscy9pcy1mb3JjZWRcIjo3MyxcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy9pdGVyYXRlXCI6NzcsXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIjoxMDgsXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIjoxMTd9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBzPWUoXCIuLi9pbnRlcm5hbHMvaGFzXCIpLGw9ZShcIi4uL2ludGVybmFscy9vd24ta2V5c1wiKSx1PWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiKSxjPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9bCh0KSxuPWMuZixvPXUuZixpPTA7aTxyLmxlbmd0aDtpKyspe3ZhciBhPXJbaV07cyhlLGEpfHxuKGUsYSxvKHQsYSkpfX19LHtcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCI6OTIsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiOjkzLFwiLi4vaW50ZXJuYWxzL293bi1rZXlzXCI6MTAzfV0sMzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpKFwibWF0Y2hcIik7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciByPS8uLzt0cnl7XCIvLi9cIlt0XShyKX1jYXRjaChlKXt0cnl7cmV0dXJuIHJbbl09ITEsXCIvLi9cIlt0XShyKX1jYXRjaChlKXt9fXJldHVybiExfX0se1wiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMzQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpO3QuZXhwb3J0cz0hbihmdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPW51bGwsT2JqZWN0LmdldFByb3RvdHlwZU9mKG5ldyBlKSE9PWUucHJvdG90eXBlfSl9LHtcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwfV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiKSxzPS9cIi9nO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixuKXt2YXIgbz1TdHJpbmcoYShlKSksaT1cIjxcIit0O3JldHVyblwiXCIhPT1yJiYoaSs9XCIgXCIrcisnPVwiJytTdHJpbmcobikucmVwbGFjZShzLFwiJnF1b3Q7XCIpKydcIicpLGkrXCI+XCIrbytcIjwvXCIrdCtcIj5cIn19LHtcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIjoxMTN9XSwzNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG8oKXtyZXR1cm4gdGhpc312YXIgaT1lKFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycy1jb3JlXCIpLkl0ZXJhdG9yUHJvdG90eXBlLGE9ZShcIi4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlXCIpLHM9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvclwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIiksdT1lKFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9yc1wiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXQrXCIgSXRlcmF0b3JcIjtyZXR1cm4gZS5wcm90b3R5cGU9YShpLHtuZXh0OnMoMSxyKX0pLGwoZSxuLCExLCEwKSx1W25dPW8sZX19LHtcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvclwiOjM4LFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9yc1wiOjc5LFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycy1jb3JlXCI6NzgsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZVwiOjkwLFwiLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnXCI6MTE3fV0sMzc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCIpLG89ZShcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCIpLGk9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvclwiKTt0LmV4cG9ydHM9bj9mdW5jdGlvbihlLHQscil7cmV0dXJuIG8uZihlLHQsaSgxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LHtcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvclwiOjM4LFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyfV0sMzg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSx7fV0sMzk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbz1lKFwiLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZVwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3JcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1vKHQpO24gaW4gZT9pLmYoZSxuLGEoMCxyKSk6ZVtuXT1yfX0se1wiLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yXCI6MzgsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZVwiOjEzOH1dLDQwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gZygpe3JldHVybiB0aGlzfXZhciB2PWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLGI9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtaXRlcmF0b3ItY29uc3RydWN0b3JcIiksXz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mXCIpLHg9ZShcIi4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZlwiKSx3PWUoXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIiksaj1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKSxTPWUoXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIiksbj1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLE09ZShcIi4uL2ludGVybmFscy9pcy1wdXJlXCIpLEU9ZShcIi4uL2ludGVybmFscy9pdGVyYXRvcnNcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycy1jb3JlXCIpLFQ9by5JdGVyYXRvclByb3RvdHlwZSxPPW8uQlVHR1lfU0FGQVJJX0lURVJBVE9SUyxDPW4oXCJpdGVyYXRvclwiKSxMPVwidmFsdWVzXCIsUD1cImVudHJpZXNcIjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSl7YihyLHQsbik7ZnVuY3Rpb24gcyhlKXtpZihlPT09byYmeSlyZXR1cm4geTtpZighTyYmZSBpbiBoKXJldHVybiBoW2VdO3N3aXRjaChlKXtjYXNlXCJrZXlzXCI6Y2FzZSBMOmNhc2UgUDpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMpfX12YXIgbCx1LGMsZD10K1wiIEl0ZXJhdG9yXCIsZj0hMSxoPWUucHJvdG90eXBlLHA9aFtDXXx8aFtcIkBAaXRlcmF0b3JcIl18fG8mJmhbb10seT0hTyYmcHx8cyhvKSxtPVwiQXJyYXlcIj09dCYmaC5lbnRyaWVzfHxwO2lmKG0mJihsPV8obS5jYWxsKG5ldyBlKSksVCE9PU9iamVjdC5wcm90b3R5cGUmJmwubmV4dCYmKE18fF8obCk9PT1UfHwoeD94KGwsVCk6XCJmdW5jdGlvblwiIT10eXBlb2YgbFtDXSYmaihsLEMsZykpLHcobCxkLCEwLCEwKSxNJiYoRVtkXT1nKSkpLG89PUwmJnAmJnAubmFtZSE9PUwmJihmPSEwLHk9ZnVuY3Rpb24oKXtyZXR1cm4gcC5jYWxsKHRoaXMpfSksTSYmIWF8fGhbQ109PT15fHxqKGgsQyx5KSxFW3RdPXksbylpZih1PXt2YWx1ZXM6cyhMKSxrZXlzOmk/eTpzKFwia2V5c1wiKSxlbnRyaWVzOnMoUCl9LGEpZm9yKGMgaW4gdSkhTyYmIWYmJmMgaW4gaHx8UyhoLGMsdVtjXSk7ZWxzZSB2KHt0YXJnZXQ6dCxwcm90bzohMCxmb3JjZWQ6T3x8Zn0sdSk7cmV0dXJuIHV9fSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXJhdG9yLWNvbnN0cnVjdG9yXCI6MzYsXCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCI6MzcsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiOjc1LFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9yc1wiOjc5LFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycy1jb3JlXCI6NzgsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1wcm90b3R5cGUtb2ZcIjo5NyxcIi4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZlwiOjEwMSxcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZ1wiOjExNyxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDQxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9wYXRoXCIpLG89ZShcIi4uL2ludGVybmFscy9oYXNcIiksaT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sLXdyYXBwZWRcIiksYT1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIikuZjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9bi5TeW1ib2x8fChuLlN5bWJvbD17fSk7byh0LGUpfHxhKHQsZSx7dmFsdWU6aS5mKGUpfSl9fSx7XCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL3BhdGhcIjoxMDQsXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wtd3JhcHBlZFwiOjE0NX1dLDQyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKTt0LmV4cG9ydHM9IW4oZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LDEse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pWzFdfSl9LHtcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwfV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLGk9bi5kb2N1bWVudCxhPW8oaSkmJm8oaS5jcmVhdGVFbGVtZW50KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGE/aS5jcmVhdGVFbGVtZW50KGUpOnt9fX0se1wiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5LFwiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiOjc0fV0sNDQ6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e0NTU1J1bGVMaXN0OjAsQ1NTU3R5bGVEZWNsYXJhdGlvbjowLENTU1ZhbHVlTGlzdDowLENsaWVudFJlY3RMaXN0OjAsRE9NUmVjdExpc3Q6MCxET01TdHJpbmdMaXN0OjAsRE9NVG9rZW5MaXN0OjEsRGF0YVRyYW5zZmVySXRlbUxpc3Q6MCxGaWxlTGlzdDowLEhUTUxBbGxDb2xsZWN0aW9uOjAsSFRNTENvbGxlY3Rpb246MCxIVE1MRm9ybUVsZW1lbnQ6MCxIVE1MU2VsZWN0RWxlbWVudDowLE1lZGlhTGlzdDowLE1pbWVUeXBlQXJyYXk6MCxOYW1lZE5vZGVNYXA6MCxOb2RlTGlzdDoxLFBhaW50UmVxdWVzdExpc3Q6MCxQbHVnaW46MCxQbHVnaW5BcnJheTowLFNWR0xlbmd0aExpc3Q6MCxTVkdOdW1iZXJMaXN0OjAsU1ZHUGF0aFNlZ0xpc3Q6MCxTVkdQb2ludExpc3Q6MCxTVkdTdHJpbmdMaXN0OjAsU1ZHVHJhbnNmb3JtTGlzdDowLFNvdXJjZUJ1ZmZlckxpc3Q6MCxTdHlsZVNoZWV0TGlzdDowLFRleHRUcmFja0N1ZUxpc3Q6MCxUZXh0VHJhY2tMaXN0OjAsVG91Y2hMaXN0OjB9fSx7fV0sNDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50XCIpO3QuZXhwb3J0cz0vKGlwaG9uZXxpcG9kfGlwYWQpLiphcHBsZXdlYmtpdC9pLnRlc3Qobil9LHtcIi4uL2ludGVybmFscy9lbmdpbmUtdXNlci1hZ2VudFwiOjQ2fV0sNDY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pblwiKTt0LmV4cG9ydHM9bihcIm5hdmlnYXRvclwiLFwidXNlckFnZW50XCIpfHxcIlwifSx7XCIuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluXCI6NTZ9XSw0NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG8saT1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvZW5naW5lLXVzZXItYWdlbnRcIikscz1pLnByb2Nlc3MsbD1zJiZzLnZlcnNpb25zLHU9bCYmbC52ODt1P289KG49dS5zcGxpdChcIi5cIikpWzBdK25bMV06YSYmKCEobj1hLm1hdGNoKC9FZGdlXFwvKFxcZCspLykpfHw3NDw9blsxXSkmJihuPWEubWF0Y2goL0Nocm9tZVxcLyhcXGQrKS8pKSYmKG89blsxXSksdC5leHBvcnRzPW8mJitvfSx7XCIuLi9pbnRlcm5hbHMvZW5naW5lLXVzZXItYWdlbnRcIjo0NixcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OX1dLDQ4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPVtcImNvbnN0cnVjdG9yXCIsXCJoYXNPd25Qcm9wZXJ0eVwiLFwiaXNQcm90b3R5cGVPZlwiLFwicHJvcGVydHlJc0VudW1lcmFibGVcIixcInRvTG9jYWxlU3RyaW5nXCIsXCJ0b1N0cmluZ1wiLFwidmFsdWVPZlwiXX0se31dLDQ5OltmdW5jdGlvbihlLHQscil7dmFyIGM9ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksZD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIikuZixmPWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCIpLGg9ZShcIi4uL2ludGVybmFscy9yZWRlZmluZVwiKSxwPWUoXCIuLi9pbnRlcm5hbHMvc2V0LWdsb2JhbFwiKSx5PWUoXCIuLi9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzXCIpLG09ZShcIi4uL2ludGVybmFscy9pcy1mb3JjZWRcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLGksYSxzPWUudGFyZ2V0LGw9ZS5nbG9iYWwsdT1lLnN0YXQ7aWYocj1sP2M6dT9jW3NdfHxwKHMse30pOihjW3NdfHx7fSkucHJvdG90eXBlKWZvcihuIGluIHQpe2lmKGk9dFtuXSxvPWUubm9UYXJnZXRHZXQ/KGE9ZChyLG4pKSYmYS52YWx1ZTpyW25dLCFtKGw/bjpzKyh1P1wiLlwiOlwiI1wiKStuLGUuZm9yY2VkKSYmdm9pZCAwIT09byl7aWYodHlwZW9mIGk9PXR5cGVvZiBvKWNvbnRpbnVlO3koaSxvKX0oZS5zaGFtfHxvJiZvLnNoYW0pJiZmKGksXCJzaGFtXCIsITApLGgocixuLGksZSl9fX0se1wiLi4vaW50ZXJuYWxzL2NvcHktY29uc3RydWN0b3ItcHJvcGVydGllc1wiOjMyLFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiOjM3LFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5LFwiLi4vaW50ZXJuYWxzL2lzLWZvcmNlZFwiOjczLFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIjo5MyxcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9zZXQtZ2xvYmFsXCI6MTE1fV0sNTA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiEwfX19LHt9XSw1MTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCIuLi9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpO3ZhciBkPWUoXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGg9ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKSxwPWUoXCIuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWNcIikseT1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKSxtPWgoXCJzcGVjaWVzXCIpLGc9IWYoZnVuY3Rpb24oKXt2YXIgZT0vLi87cmV0dXJuIGUuZXhlYz1mdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiBlLmdyb3Vwcz17YTpcIjdcIn0sZX0sXCI3XCIhPT1cIlwiLnJlcGxhY2UoZSxcIiQ8YT5cIil9KSx2PVwiJDBcIj09PVwiYVwiLnJlcGxhY2UoLy4vLFwiJDBcIiksbj1oKFwicmVwbGFjZVwiKSxiPSEhLy4vW25dJiZcIlwiPT09Ly4vW25dKFwiYVwiLFwiJDBcIiksXz0hZihmdW5jdGlvbigpe3ZhciBlPS8oPzopLyx0PWUuZXhlYztlLmV4ZWM9ZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3ZhciByPVwiYWJcIi5zcGxpdChlKTtyZXR1cm4gMiE9PXIubGVuZ3RofHxcImFcIiE9PXJbMF18fFwiYlwiIT09clsxXX0pO3QuZXhwb3J0cz1mdW5jdGlvbihyLGUsdCxuKXt2YXIgbz1oKHIpLGk9IWYoZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gZVtvXT1mdW5jdGlvbigpe3JldHVybiA3fSw3IT1cIlwiW3JdKGUpfSksYT1pJiYhZihmdW5jdGlvbigpe3ZhciBlPSExLHQ9L2EvO3JldHVyblwic3BsaXRcIj09PXImJigodD17Y29uc3RydWN0b3I6e319KS5jb25zdHJ1Y3RvclttXT1mdW5jdGlvbigpe3JldHVybiB0fSx0LmZsYWdzPVwiXCIsdFtvXT0vLi9bb10pLHQuZXhlYz1mdW5jdGlvbigpe3JldHVybiBlPSEwLG51bGx9LHRbb10oXCJcIiksIWV9KTtpZighaXx8IWF8fFwicmVwbGFjZVwiPT09ciYmKCFnfHwhdnx8Yil8fFwic3BsaXRcIj09PXImJiFfKXt2YXIgcz0vLi9bb10sbD10KG8sXCJcIltyXSxmdW5jdGlvbihlLHQscixuLG8pe3JldHVybiB0LmV4ZWM9PT1wP2kmJiFvP3tkb25lOiEwLHZhbHVlOnMuY2FsbCh0LHIsbil9Ontkb25lOiEwLHZhbHVlOmUuY2FsbChyLHQsbil9Ontkb25lOiExfX0se1JFUExBQ0VfS0VFUFNfJDA6dixSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRTpifSksdT1sWzBdLGM9bFsxXTtkKFN0cmluZy5wcm90b3R5cGUscix1KSxkKFJlZ0V4cC5wcm90b3R5cGUsbywyPT1lP2Z1bmN0aW9uKGUsdCl7cmV0dXJuIGMuY2FsbChlLHRoaXMsdCl9OmZ1bmN0aW9uKGUpe3JldHVybiBjLmNhbGwoZSx0aGlzKX0pfW4mJnkoUmVnRXhwLnByb3RvdHlwZVtvXSxcInNoYW1cIiwhMCl9fSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCI6MzcsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9yZWdleHAtZXhlY1wiOjExMCxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0NixcIi4uL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODF9XSw1MjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBmPWUoXCIuLi9pbnRlcm5hbHMvaXMtYXJyYXlcIiksaD1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSxwPWUoXCIuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0XCIpLHk9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSxzKXtmb3IodmFyIGwsdT1vLGM9MCxkPSEhYSYmcChhLHMsMyk7YzxuOyl7aWYoYyBpbiByKXtpZihsPWQ/ZChyW2NdLGMsdCk6cltjXSwwPGkmJmYobCkpdT15KGUsdCxsLGgobC5sZW5ndGgpLHUsaS0xKS0xO2Vsc2V7aWYoOTAwNzE5OTI1NDc0MDk5MTw9dSl0aHJvdyBUeXBlRXJyb3IoXCJFeGNlZWQgdGhlIGFjY2VwdGFibGUgYXJyYXkgbGVuZ3RoXCIpO2VbdV09bH11Kyt9YysrfXJldHVybiB1fTt0LmV4cG9ydHM9eX0se1wiLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dFwiOjU0LFwiLi4vaW50ZXJuYWxzL2lzLWFycmF5XCI6NzIsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0fV0sNTM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpO3QuZXhwb3J0cz0hbihmdW5jdGlvbigpe3JldHVybiBPYmplY3QuaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSl9LHtcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwfV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgaT1lKFwiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIik7dC5leHBvcnRzPWZ1bmN0aW9uKG4sbyxlKXtpZihpKG4pLHZvaWQgMD09PW8pcmV0dXJuIG47c3dpdGNoKGUpe2Nhc2UgMDpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbi5jYWxsKG8pfTtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwobyxlKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBuLmNhbGwobyxlLHQpfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5jYWxsKG8sZSx0LHIpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbi5hcHBseShvLGFyZ3VtZW50cyl9fX0se1wiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIjo1fV0sNTU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1lKFwiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIiksYT1lKFwiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiKSxzPVtdLnNsaWNlLGw9e307dC5leHBvcnRzPUZ1bmN0aW9uLmJpbmR8fGZ1bmN0aW9uKHQpe3ZhciByPWkodGhpcyksbj1zLmNhbGwoYXJndW1lbnRzLDEpLG89ZnVuY3Rpb24oKXt2YXIgZT1uLmNvbmNhdChzLmNhbGwoYXJndW1lbnRzKSk7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBvP2Z1bmN0aW9uKGUsdCxyKXtpZighKHQgaW4gbCkpe2Zvcih2YXIgbj1bXSxvPTA7bzx0O28rKyluW29dPVwiYVtcIitvK1wiXVwiO2xbdF09RnVuY3Rpb24oXCJDLGFcIixcInJldHVybiBuZXcgQyhcIituLmpvaW4oXCIsXCIpK1wiKVwiKX1yZXR1cm4gbFt0XShlLHIpfShyLGUubGVuZ3RoLGUpOnIuYXBwbHkodCxlKX07cmV0dXJuIGEoci5wcm90b3R5cGUpJiYoby5wcm90b3R5cGU9ci5wcm90b3R5cGUpLG99fSx7XCIuLi9pbnRlcm5hbHMvYS1mdW5jdGlvblwiOjUsXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCI6NzR9XSw1NjpbZnVuY3Rpb24oZSx0LHIpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZT9lOnZvaWQgMH12YXIgbz1lKFwiLi4vaW50ZXJuYWxzL3BhdGhcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwyP24ob1tlXSl8fG4oaVtlXSk6b1tlXSYmb1tlXVt0XXx8aVtlXSYmaVtlXVt0XX19LHtcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9wYXRoXCI6MTA0fV0sNTc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2NsYXNzb2ZcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9yc1wiKSxpPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIikoXCJpdGVyYXRvclwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYobnVsbCE9ZSlyZXR1cm4gZVtpXXx8ZVtcIkBAaXRlcmF0b3JcIl18fG9bbihlKV19fSx7XCIuLi9pbnRlcm5hbHMvY2xhc3NvZlwiOjI5LFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9yc1wiOjc5LFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sNTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9byhlKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IFR5cGVFcnJvcihTdHJpbmcoZSkrXCIgaXMgbm90IGl0ZXJhYmxlXCIpO3JldHVybiBuKHQuY2FsbChlKSl9fSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZFwiOjU3fV0sNTk6W2Z1bmN0aW9uKGUscix0KXsoZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZSYmZS5NYXRoPT1NYXRoJiZlfXIuZXhwb3J0cz10KFwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWxUaGlzJiZnbG9iYWxUaGlzKXx8dChcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cpfHx0KFwib2JqZWN0XCI9PXR5cGVvZiBzZWxmJiZzZWxmKXx8dChcIm9iamVjdFwiPT10eXBlb2YgZSYmZSl8fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKX0pLmNhbGwodGhpcyxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9KX0se31dLDYwOltmdW5jdGlvbihlLHQscil7dmFyIG49e30uaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY2FsbChlLHQpfX0se31dLDYxOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXt9fSx7fV0sNjI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uLmNvbnNvbGU7ciYmci5lcnJvciYmKDE9PT1hcmd1bWVudHMubGVuZ3RoP3IuZXJyb3IoZSk6ci5lcnJvcihlLHQpKX19LHtcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OX1dLDYzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIik7dC5leHBvcnRzPW4oXCJkb2N1bWVudFwiLFwiZG9jdW1lbnRFbGVtZW50XCIpfSx7XCIuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluXCI6NTZ9XSw2NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGk9ZShcIi4uL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudFwiKTt0LmV4cG9ydHM9IW4mJiFvKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShpKFwiZGl2XCIpLFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHtcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiOjQyLFwiLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50XCI6NDMsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MH1dLDY1OltmdW5jdGlvbihlLHQscil7dmFyIGg9TWF0aC5hYnMscD1NYXRoLnBvdyx5PU1hdGguZmxvb3IsbT1NYXRoLmxvZyxnPU1hdGguTE4yO3QuZXhwb3J0cz17cGFjazpmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLGE9bmV3IEFycmF5KHIpLHM9OCpyLXQtMSxsPSgxPDxzKS0xLHU9bD4+MSxjPTIzPT09dD9wKDIsLTI0KS1wKDIsLTc3KTowLGQ9ZTwwfHwwPT09ZSYmMS9lPDA/MTowLGY9MDtmb3IoKGU9aChlKSkhPWV8fGU9PT0xLzA/KG89ZSE9ZT8xOjAsbj1sKToobj15KG0oZSkvZyksZSooaT1wKDIsLW4pKTwxJiYobi0tLGkqPTIpLDI8PShlKz0xPD1uK3U/Yy9pOmMqcCgyLDEtdSkpKmkmJihuKyssaS89MiksbDw9bit1PyhvPTAsbj1sKToxPD1uK3U/KG89KGUqaS0xKSpwKDIsdCksbis9dSk6KG89ZSpwKDIsdS0xKSpwKDIsdCksbj0wKSk7ODw9dDthW2YrK109MjU1Jm8sby89MjU2LHQtPTgpO2ZvcihuPW48PHR8byxzKz10OzA8czthW2YrK109MjU1Jm4sbi89MjU2LHMtPTgpO3JldHVybiBhWy0tZl18PTEyOCpkLGF9LHVucGFjazpmdW5jdGlvbihlLHQpe3ZhciByLG49ZS5sZW5ndGgsbz04Km4tdC0xLGk9KDE8PG8pLTEsYT1pPj4xLHM9by03LGw9bi0xLHU9ZVtsLS1dLGM9MTI3JnU7Zm9yKHU+Pj03OzA8cztjPTI1NipjK2VbbF0sbC0tLHMtPTgpO2ZvcihyPWMmKDE8PC1zKS0xLGM+Pj0tcyxzKz10OzA8cztyPTI1NipyK2VbbF0sbC0tLHMtPTgpO2lmKDA9PT1jKWM9MS1hO2Vsc2V7aWYoYz09PWkpcmV0dXJuIHI/TmFOOnU/LTEvMDoxLzA7cis9cCgyLHQpLGMtPWF9cmV0dXJuKHU/LTE6MSkqcipwKDIsYy10KX19fSx7fV0sNjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLG89ZShcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiKSxpPVwiXCIuc3BsaXQ7dC5leHBvcnRzPW4oZnVuY3Rpb24oKXtyZXR1cm4hT2JqZWN0KFwielwiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKX0pP2Z1bmN0aW9uKGUpe3JldHVyblwiU3RyaW5nXCI9PW8oZSk/aS5jYWxsKGUsXCJcIik6T2JqZWN0KGUpfTpPYmplY3R9LHtcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiOjI4LFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTB9XSw2NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBpPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLGE9ZShcIi4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZlwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG87cmV0dXJuIGEmJlwiZnVuY3Rpb25cIj09dHlwZW9mKG49dC5jb25zdHJ1Y3RvcikmJm4hPT1yJiZpKG89bi5wcm90b3R5cGUpJiZvIT09ci5wcm90b3R5cGUmJmEoZSxvKSxlfX0se1wiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiOjc0LFwiLi4vaW50ZXJuYWxzL29iamVjdC1zZXQtcHJvdG90eXBlLW9mXCI6MTAxfV0sNjg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZVwiKSxvPUZ1bmN0aW9uLnRvU3RyaW5nO1wiZnVuY3Rpb25cIiE9dHlwZW9mIG4uaW5zcGVjdFNvdXJjZSYmKG4uaW5zcGVjdFNvdXJjZT1mdW5jdGlvbihlKXtyZXR1cm4gby5jYWxsKGUpfSksdC5leHBvcnRzPW4uaW5zcGVjdFNvdXJjZX0se1wiLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZVwiOjExOX1dLDY5OltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gbihlKXtzKGUsYyx7dmFsdWU6e29iamVjdElEOlwiT1wiKyArK2Qsd2Vha0RhdGE6e319fSl9dmFyIG89ZShcIi4uL2ludGVybmFscy9oaWRkZW4ta2V5c1wiKSxpPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLGE9ZShcIi4uL2ludGVybmFscy9oYXNcIikscz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIikuZixsPWUoXCIuLi9pbnRlcm5hbHMvdWlkXCIpLHU9ZShcIi4uL2ludGVybmFscy9mcmVlemluZ1wiKSxjPWwoXCJtZXRhXCIpLGQ9MCxmPU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LGg9dC5leHBvcnRzPXtSRVFVSVJFRDohMSxmYXN0S2V5OmZ1bmN0aW9uKGUsdCl7aWYoIWkoZSkpcmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIGU/ZTooXCJzdHJpbmdcIj09dHlwZW9mIGU/XCJTXCI6XCJQXCIpK2U7aWYoIWEoZSxjKSl7aWYoIWYoZSkpcmV0dXJuXCJGXCI7aWYoIXQpcmV0dXJuXCJFXCI7bihlKX1yZXR1cm4gZVtjXS5vYmplY3RJRH0sZ2V0V2Vha0RhdGE6ZnVuY3Rpb24oZSx0KXtpZighYShlLGMpKXtpZighZihlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtuKGUpfXJldHVybiBlW2NdLndlYWtEYXRhfSxvbkZyZWV6ZTpmdW5jdGlvbihlKXtyZXR1cm4gdSYmaC5SRVFVSVJFRCYmZihlKSYmIWEoZSxjKSYmbihlKSxlfX07b1tjXT0hMH0se1wiLi4vaW50ZXJuYWxzL2ZyZWV6aW5nXCI6NTMsXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXNcIjo2MSxcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCI6OTIsXCIuLi9pbnRlcm5hbHMvdWlkXCI6MTQzfV0sNzA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGksYT1lKFwiLi4vaW50ZXJuYWxzL25hdGl2ZS13ZWFrLW1hcFwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLGw9ZShcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIiksdT1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKSxjPWUoXCIuLi9pbnRlcm5hbHMvaGFzXCIpLGQ9ZShcIi4uL2ludGVybmFscy9zaGFyZWQta2V5XCIpLGY9ZShcIi4uL2ludGVybmFscy9oaWRkZW4ta2V5c1wiKSxoPXMuV2Vha01hcDtpZihhKXt2YXIgcD1uZXcgaCx5PXAuZ2V0LG09cC5oYXMsZz1wLnNldDtuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGcuY2FsbChwLGUsdCksdH0sbz1mdW5jdGlvbihlKXtyZXR1cm4geS5jYWxsKHAsZSl8fHt9fSxpPWZ1bmN0aW9uKGUpe3JldHVybiBtLmNhbGwocCxlKX19ZWxzZXt2YXIgdj1kKFwic3RhdGVcIik7Zlt2XT0hMCxuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHUoZSx2LHQpLHR9LG89ZnVuY3Rpb24oZSl7cmV0dXJuIGMoZSx2KT9lW3ZdOnt9fSxpPWZ1bmN0aW9uKGUpe3JldHVybiBjKGUsdil9fXQuZXhwb3J0cz17c2V0Om4sZ2V0Om8saGFzOmksZW5mb3JjZTpmdW5jdGlvbihlKXtyZXR1cm4gaShlKT9vKGUpOm4oZSx7fSl9LGdldHRlckZvcjpmdW5jdGlvbihyKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ7aWYoIWwoZSl8fCh0PW8oZSkpLnR5cGUhPT1yKXRocm93IFR5cGVFcnJvcihcIkluY29tcGF0aWJsZSByZWNlaXZlciwgXCIrcitcIiByZXF1aXJlZFwiKTtyZXR1cm4gdH19fX0se1wiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiOjM3LFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5LFwiLi4vaW50ZXJuYWxzL2hhc1wiOjYwLFwiLi4vaW50ZXJuYWxzL2hpZGRlbi1rZXlzXCI6NjEsXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCI6NzQsXCIuLi9pbnRlcm5hbHMvbmF0aXZlLXdlYWstbWFwXCI6ODUsXCIuLi9pbnRlcm5hbHMvc2hhcmVkLWtleVwiOjExOH1dLDcxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvaXRlcmF0b3JzXCIpLGk9bihcIml0ZXJhdG9yXCIpLGE9QXJyYXkucHJvdG90eXBlO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmKG8uQXJyYXk9PT1lfHxhW2ldPT09ZSl9fSx7XCIuLi9pbnRlcm5hbHMvaXRlcmF0b3JzXCI6NzksXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIjoxNDZ9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXdcIik7dC5leHBvcnRzPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVyblwiQXJyYXlcIj09bihlKX19LHtcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiOjI4fV0sNzM6W2Z1bmN0aW9uKGUsdCxyKXtmdW5jdGlvbiBuKGUsdCl7dmFyIHI9c1thKGUpXTtyZXR1cm4gcj09dXx8ciE9bCYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/byh0KTohIXQpfXZhciBvPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksaT0vI3xcXC5wcm90b3R5cGVcXC4vLGE9bi5ub3JtYWxpemU9ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZyhlKS5yZXBsYWNlKGksXCIuXCIpLnRvTG93ZXJDYXNlKCl9LHM9bi5kYXRhPXt9LGw9bi5OQVRJVkU9XCJOXCIsdT1uLlBPTFlGSUxMPVwiUFwiO3QuZXhwb3J0cz1ufSx7XCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MH1dLDc0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlP251bGwhPT1lOlwiZnVuY3Rpb25cIj09dHlwZW9mIGV9fSx7fV0sNzU6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ITF9LHt9XSw3NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLG89ZShcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiKSxpPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIikoXCJtYXRjaFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIG4oZSkmJih2b2lkIDAhPT0odD1lW2ldKT8hIXQ6XCJSZWdFeHBcIj09byhlKSl9fSx7XCIuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXdcIjoyOCxcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDc3OltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gaChlLHQpe3RoaXMuc3RvcHBlZD1lLHRoaXMucmVzdWx0PXR9dmFyIHA9ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIikseT1lKFwiLi4vaW50ZXJuYWxzL2lzLWFycmF5LWl0ZXJhdG9yLW1ldGhvZFwiKSxtPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLGc9ZShcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIiksdj1lKFwiLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvci1tZXRob2RcIiksYj1lKFwiLi4vaW50ZXJuYWxzL2NhbGwtd2l0aC1zYWZlLWl0ZXJhdGlvbi1jbG9zaW5nXCIpOyh0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbixvKXt2YXIgaSxhLHMsbCx1LGMsZCxmPWcodCxyLG4/MjoxKTtpZihvKWk9ZTtlbHNle2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGE9dihlKSkpdGhyb3cgVHlwZUVycm9yKFwiVGFyZ2V0IGlzIG5vdCBpdGVyYWJsZVwiKTtpZih5KGEpKXtmb3Iocz0wLGw9bShlLmxlbmd0aCk7czxsO3MrKylpZigodT1uP2YocChkPWVbc10pWzBdLGRbMV0pOmYoZVtzXSkpJiZ1IGluc3RhbmNlb2YgaClyZXR1cm4gdTtyZXR1cm4gbmV3IGgoITEpfWk9YS5jYWxsKGUpfWZvcihjPWkubmV4dDshKGQ9Yy5jYWxsKGkpKS5kb25lOylpZihcIm9iamVjdFwiPT10eXBlb2YodT1iKGksZixkLnZhbHVlLG4pKSYmdSYmdSBpbnN0YW5jZW9mIGgpcmV0dXJuIHU7cmV0dXJuIG5ldyBoKCExKX0pLnN0b3A9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBoKCEwLGUpfX0se1wiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiOjEwLFwiLi4vaW50ZXJuYWxzL2NhbGwtd2l0aC1zYWZlLWl0ZXJhdGlvbi1jbG9zaW5nXCI6MjYsXCIuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0XCI6NTQsXCIuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZFwiOjU3LFwiLi4vaW50ZXJuYWxzL2lzLWFycmF5LWl0ZXJhdG9yLW1ldGhvZFwiOjcxLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNH1dLDc4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG4sbyxpLGE9ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LXByb3RvdHlwZS1vZlwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCIpLGw9ZShcIi4uL2ludGVybmFscy9oYXNcIiksdT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLGM9ZShcIi4uL2ludGVybmFscy9pcy1wdXJlXCIpLGQ9dShcIml0ZXJhdG9yXCIpLGY9ITE7W10ua2V5cyYmKFwibmV4dFwiaW4oaT1bXS5rZXlzKCkpPyhvPWEoYShpKSkpIT09T2JqZWN0LnByb3RvdHlwZSYmKG49byk6Zj0hMCksbnVsbD09biYmKG49e30pLGN8fGwobixkKXx8cyhuLGQsZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQuZXhwb3J0cz17SXRlcmF0b3JQcm90b3R5cGU6bixCVUdHWV9TQUZBUklfSVRFUkFUT1JTOmZ9fSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCI6MzcsXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiOjc1LFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mXCI6OTcsXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIjoxNDZ9XSw3OTpbZnVuY3Rpb24oZSx0LHIpe2FyZ3VtZW50c1s0XVs2MV1bMF0uYXBwbHkocixhcmd1bWVudHMpfSx7ZHVwOjYxfV0sODA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9TWF0aC5zaWdufHxmdW5jdGlvbihlKXtyZXR1cm4gMD09KGU9K2UpfHxlIT1lP2U6ZTwwPy0xOjF9fSx7fV0sODE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGksYSxzLGwsdSxjLGQ9ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksZj1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIikuZixoPWUoXCIuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXdcIikscD1lKFwiLi4vaW50ZXJuYWxzL3Rhc2tcIikuc2V0LHk9ZShcIi4uL2ludGVybmFscy9lbmdpbmUtaXMtaW9zXCIpLG09ZC5NdXRhdGlvbk9ic2VydmVyfHxkLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIsZz1kLnByb2Nlc3Msdj1kLlByb21pc2UsYj1cInByb2Nlc3NcIj09aChnKSxfPWYoZCxcInF1ZXVlTWljcm90YXNrXCIpLHg9XyYmXy52YWx1ZTt4fHwobj1mdW5jdGlvbigpe3ZhciBlLHQ7Zm9yKGImJihlPWcuZG9tYWluKSYmZS5leGl0KCk7bzspe3Q9by5mbixvPW8ubmV4dDt0cnl7dCgpfWNhdGNoKGUpe3Rocm93IG8/YSgpOmk9dm9pZCAwLGV9fWk9dm9pZCAwLGUmJmUuZW50ZXIoKX0sYT1iP2Z1bmN0aW9uKCl7Zy5uZXh0VGljayhuKX06bSYmIXk/KHM9ITAsbD1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKSxuZXcgbShuKS5vYnNlcnZlKGwse2NoYXJhY3RlckRhdGE6ITB9KSxmdW5jdGlvbigpe2wuZGF0YT1zPSFzfSk6diYmdi5yZXNvbHZlPyh1PXYucmVzb2x2ZSh2b2lkIDApLGM9dS50aGVuLGZ1bmN0aW9uKCl7Yy5jYWxsKHUsbil9KTpmdW5jdGlvbigpe3AuY2FsbChkLG4pfSksdC5leHBvcnRzPXh8fGZ1bmN0aW9uKGUpe3ZhciB0PXtmbjplLG5leHQ6dm9pZCAwfTtpJiYoaS5uZXh0PXQpLG98fChvPXQsYSgpKSxpPXR9fSx7XCIuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXdcIjoyOCxcIi4uL2ludGVybmFscy9lbmdpbmUtaXMtaW9zXCI6NDUsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiOjkzLFwiLi4vaW50ZXJuYWxzL3Rhc2tcIjoxMjh9XSw4MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpO3QuZXhwb3J0cz1uLlByb21pc2V9LHtcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OX1dLDgzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKTt0LmV4cG9ydHM9ISFPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzJiYhbihmdW5jdGlvbigpe3JldHVybiFTdHJpbmcoU3ltYm9sKCkpfSl9LHtcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwfV0sODQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLG89ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiKSxhPW8oXCJpdGVyYXRvclwiKTt0LmV4cG9ydHM9IW4oZnVuY3Rpb24oKXt2YXIgZT1uZXcgVVJMKFwiYj9hPTEmYj0yJmM9M1wiLFwiaHR0cDovL2FcIikscj1lLnNlYXJjaFBhcmFtcyxuPVwiXCI7cmV0dXJuIGUucGF0aG5hbWU9XCJjJTIwZFwiLHIuZm9yRWFjaChmdW5jdGlvbihlLHQpe3IuZGVsZXRlKFwiYlwiKSxuKz10K2V9KSxpJiYhZS50b0pTT058fCFyLnNvcnR8fFwiaHR0cDovL2EvYyUyMGQ/YT0xJmM9M1wiIT09ZS5ocmVmfHxcIjNcIiE9PXIuZ2V0KFwiY1wiKXx8XCJhPTFcIiE9PVN0cmluZyhuZXcgVVJMU2VhcmNoUGFyYW1zKFwiP2E9MVwiKSl8fCFyW2FdfHxcImFcIiE9PW5ldyBVUkwoXCJodHRwczovL2FAYlwiKS51c2VybmFtZXx8XCJiXCIhPT1uZXcgVVJMU2VhcmNoUGFyYW1zKG5ldyBVUkxTZWFyY2hQYXJhbXMoXCJhPWJcIikpLmdldChcImFcIil8fFwieG4tLWUxYXliY1wiIT09bmV3IFVSTChcImh0dHA6Ly/RgtC10YHRglwiKS5ob3N0fHxcIiMlRDAlQjFcIiE9PW5ldyBVUkwoXCJodHRwOi8vYSPQsVwiKS5oYXNofHxcImExYzNcIiE9PW58fFwieFwiIT09bmV3IFVSTChcImh0dHA6Ly94XCIsdm9pZCAwKS5ob3N0fSl9LHtcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL2lzLXB1cmVcIjo3NSxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDg1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlXCIpLGk9bi5XZWFrTWFwO3QuZXhwb3J0cz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBpJiYvbmF0aXZlIGNvZGUvLnRlc3QobyhpKSl9LHtcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZVwiOjY4fV0sODY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKGUpe3ZhciByLG47dGhpcy5wcm9taXNlPW5ldyBlKGZ1bmN0aW9uKGUsdCl7aWYodm9pZCAwIT09cnx8dm9pZCAwIT09bil0aHJvdyBUeXBlRXJyb3IoXCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvclwiKTtyPWUsbj10fSksdGhpcy5yZXNvbHZlPW8ociksdGhpcy5yZWplY3Q9byhuKX12YXIgbz1lKFwiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIik7dC5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBuKGUpfX0se1wiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIjo1fV0sODc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2lzLXJlZ2V4cFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYobihlKSl0aHJvdyBUeXBlRXJyb3IoXCJUaGUgbWV0aG9kIGRvZXNuJ3QgYWNjZXB0IHJlZ3VsYXIgZXhwcmVzc2lvbnNcIik7cmV0dXJuIGV9fSx7XCIuLi9pbnRlcm5hbHMvaXMtcmVnZXhwXCI6NzZ9XSw4ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLmlzRmluaXRlO3QuZXhwb3J0cz1OdW1iZXIuaXNGaW5pdGV8fGZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlJiZuKGUpfX0se1wiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5fV0sODk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgZj1lKFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCIpLG49ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSxoPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXNcIikscD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHNcIikseT1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlXCIpLG09ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIiksZz1lKFwiLi4vaW50ZXJuYWxzL2luZGV4ZWQtb2JqZWN0XCIpLG89T2JqZWN0LmFzc2lnbixpPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt0LmV4cG9ydHM9IW98fG4oZnVuY3Rpb24oKXtpZihmJiYxIT09byh7YjoxfSxvKGkoe30sXCJhXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aSh0aGlzLFwiYlwiLHt2YWx1ZTozLGVudW1lcmFibGU6ITF9KX19KSx7YjoyfSkpLmIpcmV0dXJuITA7dmFyIGU9e30sdD17fSxyPVN5bWJvbCgpLG49XCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwiO3JldHVybiBlW3JdPTcsbi5zcGxpdChcIlwiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RbZV09ZX0pLDchPW8oe30sZSlbcl18fGgobyh7fSx0KSkuam9pbihcIlwiKSE9bn0pP2Z1bmN0aW9uKGUsdCl7Zm9yKHZhciByPW0oZSksbj1hcmd1bWVudHMubGVuZ3RoLG89MSxpPXAuZixhPXkuZjtvPG47KWZvcih2YXIgcyxsPWcoYXJndW1lbnRzW28rK10pLHU9aT9oKGwpLmNvbmNhdChpKGwpKTpoKGwpLGM9dS5sZW5ndGgsZD0wO2Q8Yzspcz11W2QrK10sZiYmIWEuY2FsbChsLHMpfHwocltzXT1sW3NdKTtyZXR1cm4gcn06b30se1wiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdFwiOjY2LFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHNcIjo5NixcIi4uL2ludGVybmFscy9vYmplY3Qta2V5c1wiOjk5LFwiLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlXCI6MTAwLFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiOjEzNX1dLDkwOltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gbigpe31mdW5jdGlvbiBvKGUpe3JldHVyblwiPHNjcmlwdD5cIitlK1wiPC9cIitwK1wiPlwifXZhciBpLGE9ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIikscz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydGllc1wiKSxsPWUoXCIuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5c1wiKSx1PWUoXCIuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXNcIiksYz1lKFwiLi4vaW50ZXJuYWxzL2h0bWxcIiksZD1lKFwiLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50XCIpLGY9ZShcIi4uL2ludGVybmFscy9zaGFyZWQta2V5XCIpLGg9XCJwcm90b3R5cGVcIixwPVwic2NyaXB0XCIseT1mKFwiSUVfUFJPVE9cIiksbT1mdW5jdGlvbigpe3RyeXtpPWRvY3VtZW50LmRvbWFpbiYmbmV3IEFjdGl2ZVhPYmplY3QoXCJodG1sZmlsZVwiKX1jYXRjaChlKXt9dmFyIGUsdDttPWk/ZnVuY3Rpb24oZSl7ZS53cml0ZShvKFwiXCIpKSxlLmNsb3NlKCk7dmFyIHQ9ZS5wYXJlbnRXaW5kb3cuT2JqZWN0O3JldHVybiBlPW51bGwsdH0oaSk6KCh0PWQoXCJpZnJhbWVcIikpLnN0eWxlLmRpc3BsYXk9XCJub25lXCIsYy5hcHBlbmRDaGlsZCh0KSx0LnNyYz1TdHJpbmcoXCJqYXZhc2NyaXB0OlwiKSwoZT10LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpLm9wZW4oKSxlLndyaXRlKG8oXCJkb2N1bWVudC5GPU9iamVjdFwiKSksZS5jbG9zZSgpLGUuRik7Zm9yKHZhciByPWwubGVuZ3RoO3ItLTspZGVsZXRlIG1baF1bbFtyXV07cmV0dXJuIG0oKX07dVt5XT0hMCx0LmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gbnVsbCE9PWU/KG5baF09YShlKSxyPW5ldyBuLG5baF09bnVsbCxyW3ldPWUpOnI9bSgpLHZvaWQgMD09PXQ/cjpzKHIsdCl9fSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnRcIjo0MyxcIi4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzXCI6NDgsXCIuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXNcIjo2MSxcIi4uL2ludGVybmFscy9odG1sXCI6NjMsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0aWVzXCI6OTEsXCIuLi9pbnRlcm5hbHMvc2hhcmVkLWtleVwiOjExOH1dLDkxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiKSxhPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpLGw9ZShcIi4uL2ludGVybmFscy9vYmplY3Qta2V5c1wiKTt0LmV4cG9ydHM9bj9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe3MoZSk7Zm9yKHZhciByLG49bCh0KSxvPW4ubGVuZ3RoLGk9MDtpPG87KWEuZihlLHI9bltpKytdLHRbcl0pO3JldHVybiBlfX0se1wiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiOjEwLFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzXCI6OTl9XSw5MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lXCIpLGk9ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIiksYT1lKFwiLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZVwiKSxzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTtyLmY9bj9zOmZ1bmN0aW9uKGUsdCxyKXtpZihpKGUpLHQ9YSh0LCEwKSxpKHIpLG8pdHJ5e3JldHVybiBzKGUsdCxyKX1jYXRjaChlKXt9aWYoXCJnZXRcImluIHJ8fFwic2V0XCJpbiByKXRocm93IFR5cGVFcnJvcihcIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkXCIpO3JldHVyblwidmFsdWVcImluIHImJihlW3RdPXIudmFsdWUpLGV9fSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIjo0MixcIi4uL2ludGVybmFscy9pZTgtZG9tLWRlZmluZVwiOjY0LFwiLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZVwiOjEzOH1dLDkzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiKSxvPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGVcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpLGE9ZShcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlXCIpLGw9ZShcIi4uL2ludGVybmFscy9oYXNcIiksdT1lKFwiLi4vaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lXCIpLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtyLmY9bj9jOmZ1bmN0aW9uKGUsdCl7aWYoZT1hKGUpLHQ9cyh0LCEwKSx1KXRyeXtyZXR1cm4gYyhlLHQpfWNhdGNoKGUpe31pZihsKGUsdCkpcmV0dXJuIGkoIW8uZi5jYWxsKGUsdCksZVt0XSl9fSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3JcIjozOCxcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiOjQyLFwiLi4vaW50ZXJuYWxzL2hhc1wiOjYwLFwiLi4vaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lXCI6NjQsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGVcIjoxMDAsXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3RcIjoxMzIsXCIuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlXCI6MTM4fV0sOTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0XCIpLG89ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lc1wiKS5mLGk9e30udG9TdHJpbmcsYT1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzP09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdyk6W107dC5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIGEmJlwiW29iamVjdCBXaW5kb3ddXCI9PWkuY2FsbChlKT9mdW5jdGlvbihlKXt0cnl7cmV0dXJuIG8oZSl9Y2F0Y2goZSl7cmV0dXJuIGEuc2xpY2UoKX19KGUpOm8obihlKSl9fSx7XCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXNcIjo5NSxcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiOjEzMn1dLDk1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5c1wiKS5jb25jYXQoXCJsZW5ndGhcIixcInByb3RvdHlwZVwiKTtyLmY9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSx7XCIuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5c1wiOjQ4LFwiLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzLWludGVybmFsXCI6OTh9XSw5NjpbZnVuY3Rpb24oZSx0LHIpe3IuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSx7fV0sOTc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2hhc1wiKSxvPWUoXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCIpLGk9ZShcIi4uL2ludGVybmFscy9zaGFyZWQta2V5XCIpLGE9ZShcIi4uL2ludGVybmFscy9jb3JyZWN0LXByb3RvdHlwZS1nZXR0ZXJcIikscz1pKFwiSUVfUFJPVE9cIiksbD1PYmplY3QucHJvdG90eXBlO3QuZXhwb3J0cz1hP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbihlKXtyZXR1cm4gZT1vKGUpLG4oZSxzKT9lW3NdOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/bDpudWxsfX0se1wiLi4vaW50ZXJuYWxzL2NvcnJlY3QtcHJvdG90eXBlLWdldHRlclwiOjM0LFwiLi4vaW50ZXJuYWxzL2hhc1wiOjYwLFwiLi4vaW50ZXJuYWxzL3NoYXJlZC1rZXlcIjoxMTgsXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1fV0sOTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi4vaW50ZXJuYWxzL2hhc1wiKSxzPWUoXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3RcIiksbD1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzXCIpLmluZGV4T2YsdT1lKFwiLi4vaW50ZXJuYWxzL2hpZGRlbi1rZXlzXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLG49cyhlKSxvPTAsaT1bXTtmb3IociBpbiBuKSFhKHUscikmJmEobixyKSYmaS5wdXNoKHIpO2Zvcig7dC5sZW5ndGg+bzspYShuLHI9dFtvKytdKSYmKH5sKGkscil8fGkucHVzaChyKSk7cmV0dXJuIGl9fSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXNcIjoxOCxcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9oaWRkZW4ta2V5c1wiOjYxLFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0XCI6MTMyfV0sOTk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzLWludGVybmFsXCIpLG89ZShcIi4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzXCIpO3QuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LHtcIi4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzXCI6NDgsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMtaW50ZXJuYWxcIjo5OH1dLDEwMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLG89T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixpPW8mJiFuLmNhbGwoezE6Mn0sMSk7ci5mPWk/ZnVuY3Rpb24oZSl7dmFyIHQ9byh0aGlzLGUpO3JldHVybiEhdCYmdC5lbnVtZXJhYmxlfTpufSx7fV0sMTAxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2EtcG9zc2libGUtcHJvdG90eXBlXCIpO3QuZXhwb3J0cz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fChcIl9fcHJvdG9fX1wiaW57fT9mdW5jdGlvbigpe3ZhciByLG49ITEsZT17fTt0cnl7KHI9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPYmplY3QucHJvdG90eXBlLFwiX19wcm90b19fXCIpLnNldCkuY2FsbChlLFtdKSxuPWUgaW5zdGFuY2VvZiBBcnJheX1jYXRjaChlKXt9cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8oZSksaSh0KSxuP3IuY2FsbChlLHQpOmUuX19wcm90b19fPXQsZX19KCk6dm9pZCAwKX0se1wiLi4vaW50ZXJuYWxzL2EtcG9zc2libGUtcHJvdG90eXBlXCI6NixcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIjoxMH1dLDEwMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0XCIpLG89ZShcIi4uL2ludGVybmFscy9jbGFzc29mXCIpO3QuZXhwb3J0cz1uP3t9LnRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuXCJbb2JqZWN0IFwiK28odGhpcykrXCJdXCJ9fSx7XCIuLi9pbnRlcm5hbHMvY2xhc3NvZlwiOjI5LFwiLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydFwiOjEzOX1dLDEwMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluXCIpLG89ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lc1wiKSxpPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9sc1wiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpO3QuZXhwb3J0cz1uKFwiUmVmbGVjdFwiLFwib3duS2V5c1wiKXx8ZnVuY3Rpb24oZSl7dmFyIHQ9by5mKGEoZSkpLHI9aS5mO3JldHVybiByP3QuY29uY2F0KHIoZSkpOnR9fSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluXCI6NTYsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXNcIjo5NSxcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzXCI6OTZ9XSwxMDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKTt0LmV4cG9ydHM9bn0se1wiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5fV0sMTA1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm57ZXJyb3I6ITEsdmFsdWU6ZSgpfX1jYXRjaChlKXtyZXR1cm57ZXJyb3I6ITAsdmFsdWU6ZX19fX0se31dLDEwNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpLG89ZShcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIiksaT1lKFwiLi4vaW50ZXJuYWxzL25ldy1wcm9taXNlLWNhcGFiaWxpdHlcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYobihlKSxvKHQpJiZ0LmNvbnN0cnVjdG9yPT09ZSlyZXR1cm4gdDt2YXIgcj1pLmYoZSk7cmV0dXJuKDAsci5yZXNvbHZlKSh0KSxyLnByb21pc2V9fSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCI6NzQsXCIuLi9pbnRlcm5hbHMvbmV3LXByb21pc2UtY2FwYWJpbGl0eVwiOjg2fV0sMTA3OltmdW5jdGlvbihlLHQscil7dmFyIG89ZShcIi4uL2ludGVybmFscy9yZWRlZmluZVwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbiBpbiB0KW8oZSxuLHRbbl0scik7cmV0dXJuIGV9fSx7XCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIjoxMDh9XSwxMDg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgcz1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCIpLHU9ZShcIi4uL2ludGVybmFscy9oYXNcIiksYz1lKFwiLi4vaW50ZXJuYWxzL3NldC1nbG9iYWxcIiksbj1lKFwiLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlXCIpLG89ZShcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiKSxpPW8uZ2V0LGQ9by5lbmZvcmNlLGY9U3RyaW5nKFN0cmluZykuc3BsaXQoXCJTdHJpbmdcIik7KHQuZXhwb3J0cz1mdW5jdGlvbihlLHQscixuKXt2YXIgbz0hIW4mJiEhbi51bnNhZmUsaT0hIW4mJiEhbi5lbnVtZXJhYmxlLGE9ISFuJiYhIW4ubm9UYXJnZXRHZXQ7XCJmdW5jdGlvblwiPT10eXBlb2YgciYmKFwic3RyaW5nXCIhPXR5cGVvZiB0fHx1KHIsXCJuYW1lXCIpfHxsKHIsXCJuYW1lXCIsdCksZChyKS5zb3VyY2U9Zi5qb2luKFwic3RyaW5nXCI9PXR5cGVvZiB0P3Q6XCJcIikpLGUhPT1zPyhvPyFhJiZlW3RdJiYoaT0hMCk6ZGVsZXRlIGVbdF0saT9lW3RdPXI6bChlLHQscikpOmk/ZVt0XT1yOmModCxyKX0pKEZ1bmN0aW9uLnByb3RvdHlwZSxcInRvU3RyaW5nXCIsZnVuY3Rpb24oKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzJiZpKHRoaXMpLnNvdXJjZXx8bih0aGlzKX0pfSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCI6MzcsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaW5zcGVjdC1zb3VyY2VcIjo2OCxcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiOjcwLFwiLi4vaW50ZXJuYWxzL3NldC1nbG9iYWxcIjoxMTV9XSwxMDk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKFwiLi9jbGFzc29mLXJhd1wiKSxpPWUoXCIuL3JlZ2V4cC1leGVjXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPWUuZXhlYztpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKXt2YXIgbj1yLmNhbGwoZSx0KTtpZihcIm9iamVjdFwiIT10eXBlb2Ygbil0aHJvdyBUeXBlRXJyb3IoXCJSZWdFeHAgZXhlYyBtZXRob2QgcmV0dXJuZWQgc29tZXRoaW5nIG90aGVyIHRoYW4gYW4gT2JqZWN0IG9yIG51bGxcIik7cmV0dXJuIG59aWYoXCJSZWdFeHBcIiE9PW8oZSkpdGhyb3cgVHlwZUVycm9yKFwiUmVnRXhwI2V4ZWMgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlclwiKTtyZXR1cm4gaS5jYWxsKGUsdCl9fSx7XCIuL2NsYXNzb2YtcmF3XCI6MjgsXCIuL3JlZ2V4cC1leGVjXCI6MTEwfV0sMTEwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG4sbyxkPWUoXCIuL3JlZ2V4cC1mbGFnc1wiKSxpPWUoXCIuL3JlZ2V4cC1zdGlja3ktaGVscGVyc1wiKSxmPVJlZ0V4cC5wcm90b3R5cGUuZXhlYyxoPVN0cmluZy5wcm90b3R5cGUucmVwbGFjZSxhPWYscD0obj0vYS8sbz0vYiovZyxmLmNhbGwobixcImFcIiksZi5jYWxsKG8sXCJhXCIpLDAhPT1uLmxhc3RJbmRleHx8MCE9PW8ubGFzdEluZGV4KSx5PWkuVU5TVVBQT1JURURfWXx8aS5CUk9LRU5fQ0FSRVQsbT12b2lkIDAhPT0vKCk/Py8uZXhlYyhcIlwiKVsxXTsocHx8bXx8eSkmJihhPWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixvLGk9dGhpcyxhPXkmJmkuc3RpY2t5LHM9ZC5jYWxsKGkpLGw9aS5zb3VyY2UsdT0wLGM9ZTtyZXR1cm4gYSYmKC0xPT09KHM9cy5yZXBsYWNlKFwieVwiLFwiXCIpKS5pbmRleE9mKFwiZ1wiKSYmKHMrPVwiZ1wiKSxjPVN0cmluZyhlKS5zbGljZShpLmxhc3RJbmRleCksMDxpLmxhc3RJbmRleCYmKCFpLm11bHRpbGluZXx8aS5tdWx0aWxpbmUmJlwiXFxuXCIhPT1lW2kubGFzdEluZGV4LTFdKSYmKGw9XCIoPzogXCIrbCtcIilcIixjPVwiIFwiK2MsdSsrKSxyPW5ldyBSZWdFeHAoXCJeKD86XCIrbCtcIilcIixzKSksbSYmKHI9bmV3IFJlZ0V4cChcIl5cIitsK1wiJCg/IVxcXFxzKVwiLHMpKSxwJiYodD1pLmxhc3RJbmRleCksbj1mLmNhbGwoYT9yOmksYyksYT9uPyhuLmlucHV0PW4uaW5wdXQuc2xpY2UodSksblswXT1uWzBdLnNsaWNlKHUpLG4uaW5kZXg9aS5sYXN0SW5kZXgsaS5sYXN0SW5kZXgrPW5bMF0ubGVuZ3RoKTppLmxhc3RJbmRleD0wOnAmJm4mJihpLmxhc3RJbmRleD1pLmdsb2JhbD9uLmluZGV4K25bMF0ubGVuZ3RoOnQpLG0mJm4mJjE8bi5sZW5ndGgmJmguY2FsbChuWzBdLHIsZnVuY3Rpb24oKXtmb3Iobz0xO288YXJndW1lbnRzLmxlbmd0aC0yO28rKyl2b2lkIDA9PT1hcmd1bWVudHNbb10mJihuW29dPXZvaWQgMCl9KSxufSksdC5leHBvcnRzPWF9LHtcIi4vcmVnZXhwLWZsYWdzXCI6MTExLFwiLi9yZWdleHAtc3RpY2t5LWhlbHBlcnNcIjoxMTJ9XSwxMTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZT1uKHRoaXMpLHQ9XCJcIjtyZXR1cm4gZS5nbG9iYWwmJih0Kz1cImdcIiksZS5pZ25vcmVDYXNlJiYodCs9XCJpXCIpLGUubXVsdGlsaW5lJiYodCs9XCJtXCIpLGUuZG90QWxsJiYodCs9XCJzXCIpLGUudW5pY29kZSYmKHQrPVwidVwiKSxlLnN0aWNreSYmKHQrPVwieVwiKSx0fX0se1wiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiOjEwfV0sMTEyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4vZmFpbHNcIik7ZnVuY3Rpb24gbyhlLHQpe3JldHVybiBSZWdFeHAoZSx0KX1yLlVOU1VQUE9SVEVEX1k9bihmdW5jdGlvbigpe3ZhciBlPW8oXCJhXCIsXCJ5XCIpO3JldHVybiBlLmxhc3RJbmRleD0yLG51bGwhPWUuZXhlYyhcImFiY2RcIil9KSxyLkJST0tFTl9DQVJFVD1uKGZ1bmN0aW9uKCl7dmFyIGU9byhcIl5yXCIsXCJneVwiKTtyZXR1cm4gZS5sYXN0SW5kZXg9MixudWxsIT1lLmV4ZWMoXCJzdHJcIil9KX0se1wiLi9mYWlsc1wiOjUwfV0sMTEzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKG51bGw9PWUpdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gXCIrZSk7cmV0dXJuIGV9fSx7fV0sMTE0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPU9iamVjdC5pc3x8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXQ/MCE9PWV8fDEvZT09MS90OmUhPWUmJnQhPXR9fSx7fV0sMTE1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxyKXt0cnl7byhuLHQscil9Y2F0Y2goZSl7blt0XT1yfXJldHVybiByfX0se1wiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiOjM3LFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5fV0sMTE2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIiksbz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIiksaT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLGE9ZShcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiKSxzPWkoXCJzcGVjaWVzXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1uKGUpLHI9by5mO2EmJnQmJiF0W3NdJiZyKHQscyx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0se1wiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluXCI6NTYsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMTE3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCIpLmYsbz1lKFwiLi4vaW50ZXJuYWxzL2hhc1wiKSxpPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIikoXCJ0b1N0cmluZ1RhZ1wiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UmJiFvKGU9cj9lOmUucHJvdG90eXBlLGkpJiZuKGUsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LHtcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCI6OTIsXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIjoxNDZ9XSwxMTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL3NoYXJlZFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvdWlkXCIpLGk9bihcImtleXNcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpW2VdfHwoaVtlXT1vKGUpKX19LHtcIi4uL2ludGVybmFscy9zaGFyZWRcIjoxMjAsXCIuLi9pbnRlcm5hbHMvdWlkXCI6MTQzfV0sMTE5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3NldC1nbG9iYWxcIiksaT1cIl9fY29yZS1qc19zaGFyZWRfX1wiLGE9bltpXXx8byhpLHt9KTt0LmV4cG9ydHM9YX0se1wiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5LFwiLi4vaW50ZXJuYWxzL3NldC1nbG9iYWxcIjoxMTV9XSwxMjA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2lzLXB1cmVcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZVwiKTsodC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG9bZV18fChvW2VdPXZvaWQgMCE9PXQ/dDp7fSl9KShcInZlcnNpb25zXCIsW10pLnB1c2goe3ZlcnNpb246XCIzLjYuNVwiLG1vZGU6bj9cInB1cmVcIjpcImdsb2JhbFwiLGNvcHlyaWdodDpcIsKpIDIwMjAgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSlcIn0pfSx7XCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiOjc1LFwiLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZVwiOjExOX1dLDEyMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpLGk9ZShcIi4uL2ludGVybmFscy9hLWZ1bmN0aW9uXCIpLGE9ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKShcInNwZWNpZXNcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbj1vKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1ufHxudWxsPT0ocj1vKG4pW2FdKT90Omkocil9fSx7XCIuLi9pbnRlcm5hbHMvYS1mdW5jdGlvblwiOjUsXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIjoxNDZ9XSwxMjI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gbihmdW5jdGlvbigpe3ZhciBlPVwiXCJbdF0oJ1wiJyk7cmV0dXJuIGUhPT1lLnRvTG93ZXJDYXNlKCl8fDM8ZS5zcGxpdCgnXCInKS5sZW5ndGh9KX19LHtcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwfV0sMTIzOltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gbihzKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXt2YXIgcixuLG89U3RyaW5nKHUoZSkpLGk9bCh0KSxhPW8ubGVuZ3RoO3JldHVybiBpPDB8fGE8PWk/cz9cIlwiOnZvaWQgMDoocj1vLmNoYXJDb2RlQXQoaSkpPDU1Mjk2fHw1NjMxOTxyfHxpKzE9PT1hfHwobj1vLmNoYXJDb2RlQXQoaSsxKSk8NTYzMjB8fDU3MzQzPG4/cz9vLmNoYXJBdChpKTpyOnM/by5zbGljZShpLGkrMik6bi01NjMyMCsoci01NTI5Njw8MTApKzY1NTM2fX12YXIgbD1lKFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIiksdT1lKFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiKTt0LmV4cG9ydHM9e2NvZGVBdDpuKCExKSxjaGFyQXQ6bighMCl9fSx7XCIuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlXCI6MTEzLFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIjoxMzN9XSwxMjQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBnKGUpe3JldHVybiBlKzIyKzc1KihlPDI2KX1mdW5jdGlvbiB2KGUsdCxyKXt2YXIgbj0wO2ZvcihlPXI/eChlLzcwMCk6ZT4+MSxlKz14KGUvdCk7NDU1PGU7bis9MzYpZT14KGUvMzUpO3JldHVybiB4KG4rMzYqZS8oZSszOCkpfWZ1bmN0aW9uIGkoZSl7dmFyIHQscixuPVtdLG89KGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MCxuPWUubGVuZ3RoO3I8bjspe3ZhciBvPWUuY2hhckNvZGVBdChyKyspO2lmKDU1Mjk2PD1vJiZvPD01NjMxOSYmcjxuKXt2YXIgaT1lLmNoYXJDb2RlQXQocisrKTs1NjMyMD09KDY0NTEyJmkpP3QucHVzaCgoKDEwMjMmbyk8PDEwKSsoMTAyMyZpKSs2NTUzNik6KHQucHVzaChvKSxyLS0pfWVsc2UgdC5wdXNoKG8pfXJldHVybiB0fShlKSkubGVuZ3RoLGk9MTI4LGE9MCxzPTcyO2Zvcih0PTA7dDxlLmxlbmd0aDt0KyspKHI9ZVt0XSk8MTI4JiZuLnB1c2godyhyKSk7dmFyIGw9bi5sZW5ndGgsdT1sO2ZvcihsJiZuLnB1c2goXCItXCIpO3U8bzspe3ZhciBjPWI7Zm9yKHQ9MDt0PGUubGVuZ3RoO3QrKylpPD0ocj1lW3RdKSYmcjxjJiYoYz1yKTt2YXIgZD11KzE7aWYoYy1pPngoKGItYSkvZCkpdGhyb3cgUmFuZ2VFcnJvcihfKTtmb3IoYSs9KGMtaSkqZCxpPWMsdD0wO3Q8ZS5sZW5ndGg7dCsrKXtpZigocj1lW3RdKTxpJiYrK2E+Yil0aHJvdyBSYW5nZUVycm9yKF8pO2lmKHI9PWkpe2Zvcih2YXIgZj1hLGg9MzY7O2grPTM2KXt2YXIgcD1oPD1zPzE6cysyNjw9aD8yNjpoLXM7aWYoZjxwKWJyZWFrO3ZhciB5PWYtcCxtPTM2LXA7bi5wdXNoKHcoZyhwK3klbSkpKSxmPXgoeS9tKX1uLnB1c2godyhnKGYpKSkscz12KGEsZCx1PT1sKSxhPTAsKyt1fX0rK2EsKytpfXJldHVybiBuLmpvaW4oXCJcIil9dmFyIGI9MjE0NzQ4MzY0NyxhPS9bXlxcMC1cXHUwMDdFXS8scz0vWy5cXHUzMDAyXFx1RkYwRVxcdUZGNjFdL2csXz1cIk92ZXJmbG93OiBpbnB1dCBuZWVkcyB3aWRlciBpbnRlZ2VycyB0byBwcm9jZXNzXCIseD1NYXRoLmZsb29yLHc9U3RyaW5nLmZyb21DaGFyQ29kZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixuPVtdLG89ZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UocyxcIi5cIikuc3BsaXQoXCIuXCIpO2Zvcih0PTA7dDxvLmxlbmd0aDt0Kyspcj1vW3RdLG4ucHVzaChhLnRlc3Qocik/XCJ4bi0tXCIraShyKTpyKTtyZXR1cm4gbi5qb2luKFwiLlwiKX19LHt9XSwxMjU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbz1lKFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIiksaT1lKFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiKTt0LmV4cG9ydHM9XCJcIi5yZXBlYXR8fGZ1bmN0aW9uKGUpe3ZhciB0PVN0cmluZyhpKHRoaXMpKSxyPVwiXCIsbj1vKGUpO2lmKG48MHx8bj09MS8wKXRocm93IFJhbmdlRXJyb3IoXCJXcm9uZyBudW1iZXIgb2YgcmVwZXRpdGlvbnNcIik7Zm9yKDswPG47KG4+Pj49MSkmJih0Kz10KSkxJm4mJihyKz10KTtyZXR1cm4gcn19LHtcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIjoxMTMsXCIuLi9pbnRlcm5hbHMvdG8taW50ZWdlclwiOjEzM31dLDEyNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3doaXRlc3BhY2VzXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbihmdW5jdGlvbigpe3JldHVybiEhb1tlXSgpfHxcIuKAi8KF4aCOXCIhPVwi4oCLwoXhoI5cIltlXSgpfHxvW2VdLm5hbWUhPT1lfSl9fSx7XCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy93aGl0ZXNwYWNlc1wiOjE0N31dLDEyNzpbZnVuY3Rpb24oZSx0LHIpe2Z1bmN0aW9uIG4ocil7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PVN0cmluZyhvKGUpKTtyZXR1cm4gMSZyJiYodD10LnJlcGxhY2UoYSxcIlwiKSksMiZyJiYodD10LnJlcGxhY2UocyxcIlwiKSksdH19dmFyIG89ZShcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIiksaT1cIltcIitlKFwiLi4vaW50ZXJuYWxzL3doaXRlc3BhY2VzXCIpK1wiXVwiLGE9UmVnRXhwKFwiXlwiK2kraStcIipcIikscz1SZWdFeHAoaStpK1wiKiRcIik7dC5leHBvcnRzPXtzdGFydDpuKDEpLGVuZDpuKDIpLHRyaW06bigzKX19LHtcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIjoxMTMsXCIuLi9pbnRlcm5hbHMvd2hpdGVzcGFjZXNcIjoxNDd9XSwxMjg6W2Z1bmN0aW9uKGUsdCxyKXtmdW5jdGlvbiBuKGUpe2lmKFMuaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PVNbZV07ZGVsZXRlIFNbZV0sdCgpfX1mdW5jdGlvbiBvKGUpe3JldHVybiBmdW5jdGlvbigpe24oZSl9fWZ1bmN0aW9uIGkoZSl7bihlLmRhdGEpfWZ1bmN0aW9uIGEoZSl7Yy5wb3N0TWVzc2FnZShlK1wiXCIsZy5wcm90b2NvbCtcIi8vXCIrZy5ob3N0KX12YXIgcyxsLHUsYz1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxkPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3XCIpLGg9ZShcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIikscD1lKFwiLi4vaW50ZXJuYWxzL2h0bWxcIikseT1lKFwiLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50XCIpLG09ZShcIi4uL2ludGVybmFscy9lbmdpbmUtaXMtaW9zXCIpLGc9Yy5sb2NhdGlvbix2PWMuc2V0SW1tZWRpYXRlLGI9Yy5jbGVhckltbWVkaWF0ZSxfPWMucHJvY2Vzcyx4PWMuTWVzc2FnZUNoYW5uZWwsdz1jLkRpc3BhdGNoLGo9MCxTPXt9LE09XCJvbnJlYWR5c3RhdGVjaGFuZ2VcIjt2JiZifHwodj1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0xO3I8YXJndW1lbnRzLmxlbmd0aDspdC5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gU1srK2pdPWZ1bmN0aW9uKCl7KFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSkuYXBwbHkodm9pZCAwLHQpfSxzKGopLGp9LGI9ZnVuY3Rpb24oZSl7ZGVsZXRlIFNbZV19LFwicHJvY2Vzc1wiPT1mKF8pP3M9ZnVuY3Rpb24oZSl7Xy5uZXh0VGljayhvKGUpKX06dyYmdy5ub3c/cz1mdW5jdGlvbihlKXt3Lm5vdyhvKGUpKX06eCYmIW0/KHU9KGw9bmV3IHgpLnBvcnQyLGwucG9ydDEub25tZXNzYWdlPWkscz1oKHUucG9zdE1lc3NhZ2UsdSwxKSk6IWMuYWRkRXZlbnRMaXN0ZW5lcnx8XCJmdW5jdGlvblwiIT10eXBlb2YgcG9zdE1lc3NhZ2V8fGMuaW1wb3J0U2NyaXB0c3x8ZChhKXx8XCJmaWxlOlwiPT09Zy5wcm90b2NvbD9zPU0gaW4geShcInNjcmlwdFwiKT9mdW5jdGlvbihlKXtwLmFwcGVuZENoaWxkKHkoXCJzY3JpcHRcIikpW01dPWZ1bmN0aW9uKCl7cC5yZW1vdmVDaGlsZCh0aGlzKSxuKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChvKGUpLDApfToocz1hLGMuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixpLCExKSkpLHQuZXhwb3J0cz17c2V0OnYsY2xlYXI6Yn19LHtcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiOjI4LFwiLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50XCI6NDMsXCIuLi9pbnRlcm5hbHMvZW5naW5lLWlzLWlvc1wiOjQ1LFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0XCI6NTQsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvaHRtbFwiOjYzfV0sMTI5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUmJlwiTnVtYmVyXCIhPW4oZSkpdGhyb3cgVHlwZUVycm9yKFwiSW5jb3JyZWN0IGludm9jYXRpb25cIik7cmV0dXJuK2V9fSx7XCIuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXdcIjoyOH1dLDEzMDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvdG8taW50ZWdlclwiKSxvPU1hdGgubWF4LGk9TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bihlKTtyZXR1cm4gcjwwP28ocit0LDApOmkocix0KX19LHtcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCI6MTMzfV0sMTMxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCIpLG89ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpcmV0dXJuIDA7dmFyIHQ9bihlKSxyPW8odCk7aWYodCE9PXIpdGhyb3cgUmFuZ2VFcnJvcihcIldyb25nIGxlbmd0aCBvciBpbmRleFwiKTtyZXR1cm4gcn19LHtcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCI6MTMzLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNH1dLDEzMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3RcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSx7XCIuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3RcIjo2NixcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIjoxMTN9XSwxMzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1NYXRoLmNlaWwsbz1NYXRoLmZsb29yO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooMDxlP286bikoZSl9fSx7fV0sMTM0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCIpLG89TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiAwPGU/byhuKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSx7XCIuLi9pbnRlcm5hbHMvdG8taW50ZWdlclwiOjEzM31dLDEzNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KG4oZSkpfX0se1wiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiOjExM31dLDEzNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvdG8tcG9zaXRpdmUtaW50ZWdlclwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uKGUpO2lmKHIldCl0aHJvdyBSYW5nZUVycm9yKFwiV3Jvbmcgb2Zmc2V0XCIpO3JldHVybiByfX0se1wiLi4vaW50ZXJuYWxzL3RvLXBvc2l0aXZlLWludGVnZXJcIjoxMzd9XSwxMzc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW4oZSk7aWYodDwwKXRocm93IFJhbmdlRXJyb3IoXCJUaGUgYXJndW1lbnQgY2FuJ3QgYmUgbGVzcyB0aGFuIDBcIik7cmV0dXJuIHR9fSx7XCIuLi9pbnRlcm5hbHMvdG8taW50ZWdlclwiOjEzM31dLDEzODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFvKGUpKXJldHVybiBlO3ZhciByLG47aWYodCYmXCJmdW5jdGlvblwiPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW8obj1yLmNhbGwoZSkpKXJldHVybiBuO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW8obj1yLmNhbGwoZSkpKXJldHVybiBuO2lmKCF0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbyhuPXIuY2FsbChlKSkpcmV0dXJuIG47dGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpfX0se1wiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiOjc0fV0sMTM5OltmdW5jdGlvbihlLHQscil7dmFyIG49e307bltlKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpKFwidG9TdHJpbmdUYWdcIildPVwielwiLHQuZXhwb3J0cz1cIltvYmplY3Qgel1cIj09PVN0cmluZyhuKX0se1wiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMTQwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcChlLHQpe2Zvcih2YXIgcj0wLG49dC5sZW5ndGgsbz1uZXcoWChlKSkobik7cjxuOylvW3JdPXRbcisrXTtyZXR1cm4gb31mdW5jdGlvbiBuKGUsdCl7VShlLHQse2dldDpmdW5jdGlvbigpe3JldHVybiBEKHRoaXMpW3RdfX0pfWZ1bmN0aW9uIHkoZSl7dmFyIHQ7cmV0dXJuIGUgaW5zdGFuY2VvZiBHfHxcIkFycmF5QnVmZmVyXCI9PSh0PWooZSkpfHxcIlNoYXJlZEFycmF5QnVmZmVyXCI9PXR9ZnVuY3Rpb24gbyhlLHQpe3JldHVybiBZKGUpJiZcInN5bWJvbFwiIT10eXBlb2YgdCYmdCBpbiBlJiZTdHJpbmcoK3QpPT1TdHJpbmcodCl9ZnVuY3Rpb24gaShlLHQpe3JldHVybiBvKGUsdD1oKHQsITApKT9mKDIsZVt0XSk6TihlLHQpfWZ1bmN0aW9uIGEoZSx0LHIpe3JldHVybiEobyhlLHQ9aCh0LCEwKSkmJlMocikmJncocixcInZhbHVlXCIpKXx8dyhyLFwiZ2V0XCIpfHx3KHIsXCJzZXRcIil8fHIuY29uZmlndXJhYmxlfHx3KHIsXCJ3cml0YWJsZVwiKSYmIXIud3JpdGFibGV8fHcocixcImVudW1lcmFibGVcIikmJiFyLmVudW1lcmFibGU/VShlLHQscik6KGVbdF09ci52YWx1ZSxlKX12YXIgbD1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSx1PWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLHM9ZShcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiKSxtPWUoXCIuLi9pbnRlcm5hbHMvdHlwZWQtYXJyYXktY29uc3RydWN0b3JzLXJlcXVpcmUtd3JhcHBlcnNcIiksYz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksZD1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlclwiKSxnPWUoXCIuLi9pbnRlcm5hbHMvYW4taW5zdGFuY2VcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpLHY9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHlcIiksYj1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSxfPWUoXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhcIikseD1lKFwiLi4vaW50ZXJuYWxzL3RvLW9mZnNldFwiKSxoPWUoXCIuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlXCIpLHc9ZShcIi4uL2ludGVybmFscy9oYXNcIiksaj1lKFwiLi4vaW50ZXJuYWxzL2NsYXNzb2ZcIiksUz1lKFwiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiKSxNPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZVwiKSxFPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LXNldC1wcm90b3R5cGUtb2ZcIiksVD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzXCIpLmYsTz1lKFwiLi4vaW50ZXJuYWxzL3R5cGVkLWFycmF5LWZyb21cIiksQz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiKS5mb3JFYWNoLEw9ZShcIi4uL2ludGVybmFscy9zZXQtc3BlY2llc1wiKSxQPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKSxBPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiKSxrPWUoXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGVcIiksUj1lKFwiLi4vaW50ZXJuYWxzL2luaGVyaXQtaWYtcmVxdWlyZWRcIiksRD1rLmdldCxJPWsuc2V0LFU9UC5mLE49QS5mLEY9TWF0aC5yb3VuZCxCPXUuUmFuZ2VFcnJvcixHPWQuQXJyYXlCdWZmZXIsVj1kLkRhdGFWaWV3LHo9Yy5OQVRJVkVfQVJSQVlfQlVGRkVSX1ZJRVdTLEg9Yy5UWVBFRF9BUlJBWV9UQUcsVz1jLlR5cGVkQXJyYXkscT1jLlR5cGVkQXJyYXlQcm90b3R5cGUsWD1jLmFUeXBlZEFycmF5Q29uc3RydWN0b3IsWT1jLmlzVHlwZWRBcnJheSxaPVwiQllURVNfUEVSX0VMRU1FTlRcIixRPVwiV3JvbmcgbGVuZ3RoXCI7cz8oenx8KEEuZj1pLFAuZj1hLG4ocSxcImJ1ZmZlclwiKSxuKHEsXCJieXRlT2Zmc2V0XCIpLG4ocSxcImJ5dGVMZW5ndGhcIiksbihxLFwibGVuZ3RoXCIpKSxsKHt0YXJnZXQ6XCJPYmplY3RcIixzdGF0OiEwLGZvcmNlZDohen0se2dldE93blByb3BlcnR5RGVzY3JpcHRvcjppLGRlZmluZVByb3BlcnR5OmF9KSx0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LGkpe2Z1bmN0aW9uIGMoZSxvKXtVKGUsbyx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGU9bywodD1EKHRoaXMpKS52aWV3W3JdKGUqZCt0LmJ5dGVPZmZzZXQsITApO3ZhciBlLHR9LHNldDpmdW5jdGlvbihlKXtyZXR1cm4gdD1vLHI9ZSxuPUQodGhpcyksaSYmKHI9KHI9RihyKSk8MD8wOjI1NTxyPzI1NToyNTUmciksdm9pZCBuLnZpZXdbYV0odCpkK24uYnl0ZU9mZnNldCxyLCEwKTt2YXIgdCxyLG59LGVudW1lcmFibGU6ITB9KX12YXIgZD1lLm1hdGNoKC9cXGQrJC8pWzBdLzgsZj1lKyhpP1wiQ2xhbXBlZFwiOlwiXCIpK1wiQXJyYXlcIixyPVwiZ2V0XCIrZSxhPVwic2V0XCIrZSxvPXVbZl0saD1vLG49aCYmaC5wcm90b3R5cGUscz17fTt6P20mJihoPXQoZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuIGcoZSxoLGYpLFIoUyh0KT95KHQpP3ZvaWQgMCE9PW4/bmV3IG8odCx4KHIsZCksbik6dm9pZCAwIT09cj9uZXcgbyh0LHgocixkKSk6bmV3IG8odCk6WSh0KT9wKGgsdCk6Ty5jYWxsKGgsdCk6bmV3IG8oXyh0KSksZSxoKX0pLEUmJkUoaCxXKSxDKFQobyksZnVuY3Rpb24oZSl7ZSBpbiBofHx2KGgsZSxvW2VdKX0pLGgucHJvdG90eXBlPW4pOihoPXQoZnVuY3Rpb24oZSx0LHIsbil7ZyhlLGgsZik7dmFyIG8saSxhLHM9MCxsPTA7aWYoUyh0KSl7aWYoIXkodCkpcmV0dXJuIFkodCk/cChoLHQpOk8uY2FsbChoLHQpO289dCxsPXgocixkKTt2YXIgdT10LmJ5dGVMZW5ndGg7aWYodm9pZCAwPT09bil7aWYodSVkKXRocm93IEIoUSk7aWYoKGk9dS1sKTwwKXRocm93IEIoUSl9ZWxzZSBpZih1PChpPWIobikqZCkrbCl0aHJvdyBCKFEpO2E9aS9kfWVsc2UgYT1fKHQpLG89bmV3IEcoaT1hKmQpO2ZvcihJKGUse2J1ZmZlcjpvLGJ5dGVPZmZzZXQ6bCxieXRlTGVuZ3RoOmksbGVuZ3RoOmEsdmlldzpuZXcgVihvKX0pO3M8YTspYyhlLHMrKyl9KSxFJiZFKGgsVyksbj1oLnByb3RvdHlwZT1NKHEpKSxuLmNvbnN0cnVjdG9yIT09aCYmdihuLFwiY29uc3RydWN0b3JcIixoKSxIJiZ2KG4sSCxmKSxzW2ZdPWgsbCh7Z2xvYmFsOiEwLGZvcmNlZDpoIT1vLHNoYW06IXp9LHMpLFogaW4gaHx8dihoLFosZCksWiBpbiBufHx2KG4sWixkKSxMKGYpfSk6dC5leHBvcnRzPWZ1bmN0aW9uKCl7fX0se1wiLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlXCI6OSxcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXJcIjoxMyxcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCI6MTksXCIuLi9pbnRlcm5hbHMvY2xhc3NvZlwiOjI5LFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiOjM3LFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yXCI6MzgsXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIjo0MixcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkXCI6NjcsXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGVcIjo3MCxcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlXCI6OTAsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyLFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIjo5MyxcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lc1wiOjk1LFwiLi4vaW50ZXJuYWxzL29iamVjdC1zZXQtcHJvdG90eXBlLW9mXCI6MTAxLFwiLi4vaW50ZXJuYWxzL3NldC1zcGVjaWVzXCI6MTE2LFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4XCI6MTMxLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNCxcIi4uL2ludGVybmFscy90by1vZmZzZXRcIjoxMzYsXCIuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlXCI6MTM4LFwiLi4vaW50ZXJuYWxzL3R5cGVkLWFycmF5LWNvbnN0cnVjdG9ycy1yZXF1aXJlLXdyYXBwZXJzXCI6MTQxLFwiLi4vaW50ZXJuYWxzL3R5cGVkLWFycmF5LWZyb21cIjoxNDJ9XSwxNDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvblwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKS5OQVRJVkVfQVJSQVlfQlVGRkVSX1ZJRVdTLHM9bi5BcnJheUJ1ZmZlcixsPW4uSW50OEFycmF5O3QuZXhwb3J0cz0hYXx8IW8oZnVuY3Rpb24oKXtsKDEpfSl8fCFvKGZ1bmN0aW9uKCl7bmV3IGwoLTEpfSl8fCFpKGZ1bmN0aW9uKGUpe25ldyBsLG5ldyBsKG51bGwpLG5ldyBsKDEuNSksbmV3IGwoZSl9LCEwKXx8byhmdW5jdGlvbigpe3JldHVybiAxIT09bmV3IGwobmV3IHMoMiksMSx2b2lkIDApLmxlbmd0aH0pfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyLFwiLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvblwiOjI3LFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTl9XSwxNDI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgcD1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSx5PWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLG09ZShcIi4uL2ludGVybmFscy9nZXQtaXRlcmF0b3ItbWV0aG9kXCIpLGc9ZShcIi4uL2ludGVybmFscy9pcy1hcnJheS1pdGVyYXRvci1tZXRob2RcIiksdj1lKFwiLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dFwiKSxiPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKS5hVHlwZWRBcnJheUNvbnN0cnVjdG9yO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLGEscyxsLHU9cChlKSxjPWFyZ3VtZW50cy5sZW5ndGgsZD0xPGM/dDp2b2lkIDAsZj12b2lkIDAhPT1kLGg9bSh1KTtpZihudWxsIT1oJiYhZyhoKSlmb3IobD0ocz1oLmNhbGwodSkpLm5leHQsdT1bXTshKGE9bC5jYWxsKHMpKS5kb25lOyl1LnB1c2goYS52YWx1ZSk7Zm9yKGYmJjI8YyYmKGQ9dihkLHIsMikpLG89eSh1Lmxlbmd0aCksaT1uZXcoYih0aGlzKSkobyksbj0wO248bztuKyspaVtuXT1mP2QodVtuXSxuKTp1W25dO3JldHVybiBpfX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIjoxMixcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIjo1NCxcIi4uL2ludGVybmFscy9nZXQtaXRlcmF0b3ItbWV0aG9kXCI6NTcsXCIuLi9pbnRlcm5hbHMvaXMtYXJyYXktaXRlcmF0b3ItbWV0aG9kXCI6NzEsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0LFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiOjEzNX1dLDE0MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPTAsbz1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm5cIlN5bWJvbChcIitTdHJpbmcodm9pZCAwPT09ZT9cIlwiOmUpK1wiKV9cIisoKytuK28pLnRvU3RyaW5nKDM2KX19LHt9XSwxNDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2xcIik7dC5leHBvcnRzPW4mJiFTeW1ib2wuc2hhbSYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcn0se1wiLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2xcIjo4M31dLDE0NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIik7ci5mPW59LHtcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0Nn1dLDE0NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLG89ZShcIi4uL2ludGVybmFscy9zaGFyZWRcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2hhc1wiKSxhPWUoXCIuLi9pbnRlcm5hbHMvdWlkXCIpLHM9ZShcIi4uL2ludGVybmFscy9uYXRpdmUtc3ltYm9sXCIpLGw9ZShcIi4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZFwiKSx1PW8oXCJ3a3NcIiksYz1uLlN5bWJvbCxkPWw/YzpjJiZjLndpdGhvdXRTZXR0ZXJ8fGE7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpKHUsZSl8fChzJiZpKGMsZSk/dVtlXT1jW2VdOnVbZV09ZChcIlN5bWJvbC5cIitlKSksdVtlXX19LHtcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9uYXRpdmUtc3ltYm9sXCI6ODMsXCIuLi9pbnRlcm5hbHMvc2hhcmVkXCI6MTIwLFwiLi4vaW50ZXJuYWxzL3VpZFwiOjE0MyxcIi4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZFwiOjE0NH1dLDE0NzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1cIlxcdFxcblxcdlxcZlxcciDCoOGagOKAgOKAgeKAguKAg+KAhOKAheKAhuKAh+KAiOKAieKAiuKAr+KBn+OAgFxcdTIwMjhcXHUyMDI5XFx1ZmVmZlwifSx7fV0sMTQ4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyXCIpLGE9ZShcIi4uL2ludGVybmFscy9zZXQtc3BlY2llc1wiKSxzPVwiQXJyYXlCdWZmZXJcIixsPWlbc107bih7Z2xvYmFsOiEwLGZvcmNlZDpvW3NdIT09bH0se0FycmF5QnVmZmVyOmx9KSxhKHMpfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyXCI6MTMsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvc2V0LXNwZWNpZXNcIjoxMTZ9XSwxNDk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB1KGUpe2lmKCFhKGUpKXJldHVybiExO3ZhciB0PWVbeV07cmV0dXJuIHZvaWQgMCE9PXQ/ISF0OmkoZSl9dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGk9ZShcIi4uL2ludGVybmFscy9pcy1hcnJheVwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLGM9ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIiksZD1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSxmPWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5XCIpLGg9ZShcIi4uL2ludGVybmFscy9hcnJheS1zcGVjaWVzLWNyZWF0ZVwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWhhcy1zcGVjaWVzLXN1cHBvcnRcIiksbD1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLHA9ZShcIi4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvblwiKSx5PWwoXCJpc0NvbmNhdFNwcmVhZGFibGVcIiksbT05MDA3MTk5MjU0NzQwOTkxLGc9XCJNYXhpbXVtIGFsbG93ZWQgaW5kZXggZXhjZWVkZWRcIix2PTUxPD1wfHwhbyhmdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiBlW3ldPSExLGUuY29uY2F0KClbMF0hPT1lfSksYj1zKFwiY29uY2F0XCIpO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOiF2fHwhYn0se2NvbmNhdDpmdW5jdGlvbihlKXt2YXIgdCxyLG4sbyxpLGE9Yyh0aGlzKSxzPWgoYSwwKSxsPTA7Zm9yKHQ9LTEsbj1hcmd1bWVudHMubGVuZ3RoO3Q8bjt0KyspaWYodShpPS0xPT09dD9hOmFyZ3VtZW50c1t0XSkpe2lmKG89ZChpLmxlbmd0aCksbTxsK28pdGhyb3cgVHlwZUVycm9yKGcpO2ZvcihyPTA7cjxvO3IrKyxsKyspciBpbiBpJiZmKHMsbCxpW3JdKX1lbHNle2lmKG08PWwpdGhyb3cgVHlwZUVycm9yKGcpO2YocyxsKyssaSl9cmV0dXJuIHMubGVuZ3RoPWwsc319KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0XCI6MjEsXCIuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGVcIjoyNSxcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHlcIjozOSxcIi4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvblwiOjQ3LFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5LFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvaXMtYXJyYXlcIjo3MixcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzQsXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1LFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMTUwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiKS5ldmVyeSxpPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWlzLXN0cmljdFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCIpLHM9aShcImV2ZXJ5XCIpLGw9YShcImV2ZXJ5XCIpO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOiFzfHwhbH0se2V2ZXJ5OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8odGhpcyxlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCl9fSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb25cIjoxOSxcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0XCI6MjIsXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCI6MjMsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDl9XSwxNTE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktZmlsbFwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzXCIpO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITB9LHtmaWxsOm99KSxpKFwiZmlsbFwiKX0se1wiLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlc1wiOjcsXCIuLi9pbnRlcm5hbHMvYXJyYXktZmlsbFwiOjE1LFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5fV0sMTUyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiKS5maWx0ZXIsaT1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0XCIpLGE9ZShcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtdXNlcy10by1sZW5ndGhcIikscz1pKFwiZmlsdGVyXCIpLGw9YShcImZpbHRlclwiKTtuKHt0YXJnZXQ6XCJBcnJheVwiLHByb3RvOiEwLGZvcmNlZDohc3x8IWx9LHtmaWx0ZXI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyh0aGlzLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKX19KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiOjE5LFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0XCI6MjEsXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCI6MjMsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDl9XSwxNTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvZmxhdHRlbi1pbnRvLWFycmF5XCIpLGE9ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIikscz1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvYS1mdW5jdGlvblwiKSx1PWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGVcIik7bih7dGFyZ2V0OlwiQXJyYXlcIixwcm90bzohMH0se2ZsYXRNYXA6ZnVuY3Rpb24oZSx0KXt2YXIgcixuPWEodGhpcyksbz1zKG4ubGVuZ3RoKTtyZXR1cm4gbChlKSwocj11KG4sMCkpLmxlbmd0aD1pKHIsbixuLG8sMCwxLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKSxyfX0pfSx7XCIuLi9pbnRlcm5hbHMvYS1mdW5jdGlvblwiOjUsXCIuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGVcIjoyNSxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9mbGF0dGVuLWludG8tYXJyYXlcIjo1MixcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzQsXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1fV0sMTU0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWZvci1lYWNoXCIpO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOltdLmZvckVhY2ghPW99LHtmb3JFYWNoOm99KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWZvci1lYWNoXCI6MTYsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDl9XSwxNTU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktZnJvbVwiKTtuKHt0YXJnZXQ6XCJBcnJheVwiLHN0YXQ6ITAsZm9yY2VkOiFlKFwiLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvblwiKShmdW5jdGlvbihlKXtBcnJheS5mcm9tKGUpfSl9LHtmcm9tOm99KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWZyb21cIjoxNyxcIi4uL2ludGVybmFscy9jaGVjay1jb3JyZWN0bmVzcy1vZi1pdGVyYXRpb25cIjoyNyxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OX1dLDE1NjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLG89ZShcIi4uL2ludGVybmFscy9hcnJheS1pbmNsdWRlc1wiKS5pbmNsdWRlcyxpPWUoXCIuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzXCIpO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOiFlKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiKShcImluZGV4T2ZcIix7QUNDRVNTT1JTOiEwLDE6MH0pfSx7aW5jbHVkZXM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyh0aGlzLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKX19KSxpKFwiaW5jbHVkZXNcIil9LHtcIi4uL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXNcIjo3LFwiLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzXCI6MTgsXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCI6MjMsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDl9XSwxNTc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXNcIikuaW5kZXhPZixpPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWlzLXN0cmljdFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCIpLHM9W10uaW5kZXhPZixsPSEhcyYmMS9bMV0uaW5kZXhPZigxLC0wKTwwLHU9aShcImluZGV4T2ZcIiksYz1hKFwiaW5kZXhPZlwiLHtBQ0NFU1NPUlM6ITAsMTowfSk7bih7dGFyZ2V0OlwiQXJyYXlcIixwcm90bzohMCxmb3JjZWQ6bHx8IXV8fCFjfSx7aW5kZXhPZjpmdW5jdGlvbihlLHQpe3JldHVybiBsP3MuYXBwbHkodGhpcyxhcmd1bWVudHMpfHwwOm8odGhpcyxlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCl9fSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1pbmNsdWRlc1wiOjE4LFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3RcIjoyMixcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtdXNlcy10by1sZW5ndGhcIjoyMyxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OX1dLDE1ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3RcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlc1wiKSxpPWUoXCIuLi9pbnRlcm5hbHMvaXRlcmF0b3JzXCIpLGE9ZShcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvZGVmaW5lLWl0ZXJhdG9yXCIpLGw9XCJBcnJheSBJdGVyYXRvclwiLHU9YS5zZXQsYz1hLmdldHRlckZvcihsKTt0LmV4cG9ydHM9cyhBcnJheSxcIkFycmF5XCIsZnVuY3Rpb24oZSx0KXt1KHRoaXMse3R5cGU6bCx0YXJnZXQ6bihlKSxpbmRleDowLGtpbmQ6dH0pfSxmdW5jdGlvbigpe3ZhciBlPWModGhpcyksdD1lLnRhcmdldCxyPWUua2luZCxuPWUuaW5kZXgrKztyZXR1cm4hdHx8bj49dC5sZW5ndGg/e3ZhbHVlOmUudGFyZ2V0PXZvaWQgMCxkb25lOiEwfTpcImtleXNcIj09cj97dmFsdWU6bixkb25lOiExfTpcInZhbHVlc1wiPT1yP3t2YWx1ZTp0W25dLGRvbmU6ITF9Ont2YWx1ZTpbbix0W25dXSxkb25lOiExfX0sXCJ2YWx1ZXNcIiksaS5Bcmd1bWVudHM9aS5BcnJheSxvKFwia2V5c1wiKSxvKFwidmFsdWVzXCIpLG8oXCJlbnRyaWVzXCIpfSx7XCIuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzXCI6NyxcIi4uL2ludGVybmFscy9kZWZpbmUtaXRlcmF0b3JcIjo0MCxcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiOjcwLFwiLi4vaW50ZXJuYWxzL2l0ZXJhdG9yc1wiOjc5LFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0XCI6MTMyfV0sMTU5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2luZGV4ZWQtb2JqZWN0XCIpLGk9ZShcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWlzLXN0cmljdFwiKSxzPVtdLmpvaW4sbD1vIT1PYmplY3QsdT1hKFwiam9pblwiLFwiLFwiKTtuKHt0YXJnZXQ6XCJBcnJheVwiLHByb3RvOiEwLGZvcmNlZDpsfHwhdX0se2pvaW46ZnVuY3Rpb24oZSl7cmV0dXJuIHMuY2FsbChpKHRoaXMpLHZvaWQgMD09PWU/XCIsXCI6ZSl9fSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0XCI6MjIsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3RcIjo2NixcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiOjEzMn1dLDE2MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLG89ZShcIi4uL2ludGVybmFscy9hcnJheS1sYXN0LWluZGV4LW9mXCIpO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOm8hPT1bXS5sYXN0SW5kZXhPZn0se2xhc3RJbmRleE9mOm99KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWxhc3QtaW5kZXgtb2ZcIjoyMCxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OX1dLDE2MTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLG89ZShcIi4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb25cIikubWFwLGk9ZShcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCIpLHM9aShcIm1hcFwiKSxsPWEoXCJtYXBcIik7bih7dGFyZ2V0OlwiQXJyYXlcIixwcm90bzohMCxmb3JjZWQ6IXN8fCFsfSx7bWFwOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8odGhpcyxlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCl9fSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb25cIjoxOSxcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydFwiOjIxLFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiOjIzLFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5fV0sMTYyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksdT1lKFwiLi4vaW50ZXJuYWxzL2lzLW9iamVjdFwiKSxjPWUoXCIuLi9pbnRlcm5hbHMvaXMtYXJyYXlcIiksZD1lKFwiLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4XCIpLGY9ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIiksaD1lKFwiLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0XCIpLHA9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHlcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLGk9ZShcIi4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCIpLHM9aShcInNsaWNlXCIpLGw9YShcInNsaWNlXCIse0FDQ0VTU09SUzohMCwwOjAsMToyfSkseT1vKFwic3BlY2llc1wiKSxtPVtdLnNsaWNlLGc9TWF0aC5tYXg7bih7dGFyZ2V0OlwiQXJyYXlcIixwcm90bzohMCxmb3JjZWQ6IXN8fCFsfSx7c2xpY2U6ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8saT1oKHRoaXMpLGE9ZihpLmxlbmd0aCkscz1kKGUsYSksbD1kKHZvaWQgMD09PXQ/YTp0LGEpO2lmKGMoaSkmJihcImZ1bmN0aW9uXCIhPXR5cGVvZihyPWkuY29uc3RydWN0b3IpfHxyIT09QXJyYXkmJiFjKHIucHJvdG90eXBlKT91KHIpJiZudWxsPT09KHI9clt5XSkmJihyPXZvaWQgMCk6cj12b2lkIDAscj09PUFycmF5fHx2b2lkIDA9PT1yKSlyZXR1cm4gbS5jYWxsKGkscyxsKTtmb3Iobj1uZXcodm9pZCAwPT09cj9BcnJheTpyKShnKGwtcywwKSksbz0wO3M8bDtzKyssbysrKXMgaW4gaSYmcChuLG8saVtzXSk7cmV0dXJuIG4ubGVuZ3RoPW8sbn19KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0XCI6MjEsXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCI6MjMsXCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5XCI6MzksXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvaXMtYXJyYXlcIjo3MixcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleFwiOjEzMCxcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiOjEzMixcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzQsXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIjoxNDZ9XSwxNjM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLnNvbWUsaT1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3RcIiksYT1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiKSxzPWkoXCJzb21lXCIpLGw9YShcInNvbWVcIik7bih7dGFyZ2V0OlwiQXJyYXlcIixwcm90bzohMCxmb3JjZWQ6IXN8fCFsfSx7c29tZTpmdW5jdGlvbihlLHQpe3JldHVybiBvKHRoaXMsZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfX0pfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCI6MTksXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWlzLXN0cmljdFwiOjIyLFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiOjIzLFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5fV0sMTY0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksZj1lKFwiLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4XCIpLGg9ZShcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCIpLHA9ZShcIi4uL2ludGVybmFscy90by1sZW5ndGhcIikseT1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSxtPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGVcIiksZz1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWhhcy1zcGVjaWVzLXN1cHBvcnRcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aFwiKSxhPW8oXCJzcGxpY2VcIikscz1pKFwic3BsaWNlXCIse0FDQ0VTU09SUzohMCwwOjAsMToyfSksdj1NYXRoLm1heCxiPU1hdGgubWluO24oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOiFhfHwhc30se3NwbGljZTpmdW5jdGlvbihlLHQpe3ZhciByLG4sbyxpLGEscyxsPXkodGhpcyksdT1wKGwubGVuZ3RoKSxjPWYoZSx1KSxkPWFyZ3VtZW50cy5sZW5ndGg7aWYoMD09PWQ/cj1uPTA6bj0xPT09ZD8ocj0wLHUtYyk6KHI9ZC0yLGIodihoKHQpLDApLHUtYykpLDkwMDcxOTkyNTQ3NDA5OTE8dStyLW4pdGhyb3cgVHlwZUVycm9yKFwiTWF4aW11bSBhbGxvd2VkIGxlbmd0aCBleGNlZWRlZFwiKTtmb3Iobz1tKGwsbiksaT0wO2k8bjtpKyspKGE9YytpKWluIGwmJmcobyxpLGxbYV0pO2lmKHI8KG8ubGVuZ3RoPW4pKXtmb3IoaT1jO2k8dS1uO2krKylzPWkrciwoYT1pK24paW4gbD9sW3NdPWxbYV06ZGVsZXRlIGxbc107Zm9yKGk9dTt1LW4rcjxpO2ktLSlkZWxldGUgbFtpLTFdfWVsc2UgaWYobjxyKWZvcihpPXUtbjtjPGk7aS0tKXM9aStyLTEsKGE9aStuLTEpaW4gbD9sW3NdPWxbYV06ZGVsZXRlIGxbc107Zm9yKGk9MDtpPHI7aSsrKWxbaStjXT1hcmd1bWVudHNbaSsyXTtyZXR1cm4gbC5sZW5ndGg9dS1uK3Isb319KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0XCI6MjEsXCIuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoXCI6MjMsXCIuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGVcIjoyNSxcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHlcIjozOSxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleFwiOjEzMCxcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCI6MTMzLFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiOjEzNCxcIi4uL2ludGVybmFscy90by1vYmplY3RcIjoxMzV9XSwxNjU6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlc1wiKShcImZsYXRNYXBcIil9LHtcIi4uL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXNcIjo3fV0sMTY2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9kZXNjcmlwdG9yc1wiKSxvPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKS5mLGk9RnVuY3Rpb24ucHJvdG90eXBlLGE9aS50b1N0cmluZyxzPS9eXFxzKmZ1bmN0aW9uIChbXiAoXSopLzshbnx8XCJuYW1lXCJpbiBpfHxvKGksXCJuYW1lXCIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIGEuY2FsbCh0aGlzKS5tYXRjaChzKVsxXX1jYXRjaChlKXtyZXR1cm5cIlwifX19KX0se1wiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyfV0sMTY3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9jb2xsZWN0aW9uXCIpLG89ZShcIi4uL2ludGVybmFscy9jb2xsZWN0aW9uLXN0cm9uZ1wiKTt0LmV4cG9ydHM9bihcIk1hcFwiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gdCh0aGlzLGFyZ3VtZW50cy5sZW5ndGg/ZTp2b2lkIDApfX0sbyl9LHtcIi4uL2ludGVybmFscy9jb2xsZWN0aW9uXCI6MzEsXCIuLi9pbnRlcm5hbHMvY29sbGVjdGlvbi1zdHJvbmdcIjozMH1dLDE2ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLG89TWF0aC5oeXBvdCxsPU1hdGguYWJzLHU9TWF0aC5zcXJ0O24oe3RhcmdldDpcIk1hdGhcIixzdGF0OiEwLGZvcmNlZDohIW8mJm8oMS8wLE5hTikhPT0xLzB9LHtoeXBvdDpmdW5jdGlvbihlLHQpe2Zvcih2YXIgcixuLG89MCxpPTAsYT1hcmd1bWVudHMubGVuZ3RoLHM9MDtpPGE7KXM8KHI9bChhcmd1bWVudHNbaSsrXSkpPyhvPW8qKG49cy9yKSpuKzEscz1yKTpvKz0wPHI/KG49ci9zKSpuOnI7cmV0dXJuIHM9PT0xLzA/MS8wOnMqdShvKX19KX0se1wiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5fV0sMTY5OltmdW5jdGlvbihlLHQscil7ZShcIi4uL2ludGVybmFscy9leHBvcnRcIikoe3RhcmdldDpcIk1hdGhcIixzdGF0OiEwfSx7c2lnbjplKFwiLi4vaW50ZXJuYWxzL21hdGgtc2lnblwiKX0pfSx7XCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvbWF0aC1zaWduXCI6ODB9XSwxNzA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKGUpe3ZhciB0LHIsbixvLGksYSxzLGwsdT1kKGUsITEpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB1JiYyPHUubGVuZ3RoKWlmKDQzPT09KHQ9KHU9Zyh1KSkuY2hhckNvZGVBdCgwKSl8fDQ1PT09dCl7aWYoODg9PT0ocj11LmNoYXJDb2RlQXQoMikpfHwxMjA9PT1yKXJldHVybiBOYU59ZWxzZSBpZig0OD09PXQpe3N3aXRjaCh1LmNoYXJDb2RlQXQoMSkpe2Nhc2UgNjY6Y2FzZSA5ODpuPTIsbz00OTticmVhaztjYXNlIDc5OmNhc2UgMTExOm49OCxvPTU1O2JyZWFrO2RlZmF1bHQ6cmV0dXJuK3V9Zm9yKGE9KGk9dS5zbGljZSgyKSkubGVuZ3RoLHM9MDtzPGE7cysrKWlmKChsPWkuY2hhckNvZGVBdChzKSk8NDh8fG88bClyZXR1cm4gTmFOO3JldHVybiBwYXJzZUludChpLG4pfXJldHVybit1fXZhciBvPWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvaXMtZm9yY2VkXCIpLHM9ZShcIi4uL2ludGVybmFscy9yZWRlZmluZVwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvaGFzXCIpLHU9ZShcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiKSxjPWUoXCIuLi9pbnRlcm5hbHMvaW5oZXJpdC1pZi1yZXF1aXJlZFwiKSxkPWUoXCIuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlXCIpLGY9ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSxoPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZVwiKSxwPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXNcIikuZix5PWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiKS5mLG09ZShcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCIpLmYsZz1lKFwiLi4vaW50ZXJuYWxzL3N0cmluZy10cmltXCIpLnRyaW0sdj1cIk51bWJlclwiLGI9aVt2XSxfPWIucHJvdG90eXBlLHg9dShoKF8pKT09djtpZihhKHYsIWIoXCIgMG8xXCIpfHwhYihcIjBiMVwiKXx8YihcIisweDFcIikpKXtmb3IodmFyIHcsaj1mdW5jdGlvbihlKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPDE/MDplLHI9dGhpcztyZXR1cm4gciBpbnN0YW5jZW9mIGomJih4P2YoZnVuY3Rpb24oKXtfLnZhbHVlT2YuY2FsbChyKX0pOnUocikhPXYpP2MobmV3IGIobih0KSkscixqKTpuKHQpfSxTPW8/cChiKTpcIk1BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLEVQU0lMT04saXNGaW5pdGUsaXNJbnRlZ2VyLGlzTmFOLGlzU2FmZUludGVnZXIsTUFYX1NBRkVfSU5URUdFUixNSU5fU0FGRV9JTlRFR0VSLHBhcnNlRmxvYXQscGFyc2VJbnQsaXNJbnRlZ2VyXCIuc3BsaXQoXCIsXCIpLE09MDtTLmxlbmd0aD5NO00rKylsKGIsdz1TW01dKSYmIWwoaix3KSYmbShqLHcseShiLHcpKTsoai5wcm90b3R5cGU9XykuY29uc3RydWN0b3I9aixzKGksdixqKX19LHtcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiOjI4LFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkXCI6NjcsXCIuLi9pbnRlcm5hbHMvaXMtZm9yY2VkXCI6NzMsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZVwiOjkwLFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIjo5MixcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yXCI6OTMsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXNcIjo5NSxcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9zdHJpbmctdHJpbVwiOjEyNyxcIi4uL2ludGVybmFscy90by1wcmltaXRpdmVcIjoxMzh9XSwxNzE6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSh7dGFyZ2V0OlwiTnVtYmVyXCIsc3RhdDohMH0se2lzRmluaXRlOmUoXCIuLi9pbnRlcm5hbHMvbnVtYmVyLWlzLWZpbml0ZVwiKX0pfSx7XCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvbnVtYmVyLWlzLWZpbml0ZVwiOjg4fV0sMTcyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksaD1lKFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIikscD1lKFwiLi4vaW50ZXJuYWxzL3RoaXMtbnVtYmVyLXZhbHVlXCIpLHk9ZShcIi4uL2ludGVybmFscy9zdHJpbmctcmVwZWF0XCIpLG89ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSxpPTEuLnRvRml4ZWQsbT1NYXRoLmZsb29yLGc9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiAwPT09dD9yOnQlMj09MT9nKGUsdC0xLHIqZSk6ZyhlKmUsdC8yLHIpfTtuKHt0YXJnZXQ6XCJOdW1iZXJcIixwcm90bzohMCxmb3JjZWQ6aSYmKFwiMC4wMDBcIiE9PThlLTUudG9GaXhlZCgzKXx8XCIxXCIhPT0uOS50b0ZpeGVkKDApfHxcIjEuMjVcIiE9PTEuMjU1LnRvRml4ZWQoMil8fFwiMTAwMDAwMDAwMDAwMDAwMDEyOFwiIT09KDB4ZGUwYjZiM2E3NjQwMDgwKS50b0ZpeGVkKDApKXx8IW8oZnVuY3Rpb24oKXtpLmNhbGwoe30pfSl9LHt0b0ZpeGVkOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSx0KXtmb3IodmFyIHI9LTEsbj10Oysrcjw2OyluKz1lKmNbcl0sY1tyXT1uJTFlNyxuPW0obi8xZTcpfWZ1bmN0aW9uIHIoZSl7Zm9yKHZhciB0PTYscj0wOzA8PS0tdDspcis9Y1t0XSxjW3RdPW0oci9lKSxyPXIlZSoxZTd9ZnVuY3Rpb24gbigpe2Zvcih2YXIgZT02LHQ9XCJcIjswPD0tLWU7KWlmKFwiXCIhPT10fHwwPT09ZXx8MCE9PWNbZV0pe3ZhciByPVN0cmluZyhjW2VdKTt0PVwiXCI9PT10P3I6dCt5LmNhbGwoXCIwXCIsNy1yLmxlbmd0aCkrcn1yZXR1cm4gdH12YXIgbyxpLGEscyxsPXAodGhpcyksdT1oKGUpLGM9WzAsMCwwLDAsMCwwXSxkPVwiXCIsZj1cIjBcIjtpZih1PDB8fDIwPHUpdGhyb3cgUmFuZ2VFcnJvcihcIkluY29ycmVjdCBmcmFjdGlvbiBkaWdpdHNcIik7aWYobCE9bClyZXR1cm5cIk5hTlwiO2lmKGw8PS0xZTIxfHwxZTIxPD1sKXJldHVybiBTdHJpbmcobCk7aWYobDwwJiYoZD1cIi1cIixsPS1sKSwxZS0yMTxsKWlmKGk9KG89ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAscj1lOzQwOTY8PXI7KXQrPTEyLHIvPTQwOTY7Zm9yKDsyPD1yOyl0Kz0xLHIvPTI7cmV0dXJuIHR9KGwqZygyLDY5LDEpKS02OSk8MD9sKmcoMiwtbywxKTpsL2coMixvLDEpLGkqPTQ1MDM1OTk2MjczNzA0OTYsMDwobz01Mi1vKSl7Zm9yKHQoMCxpKSxhPXU7Nzw9YTspdCgxZTcsMCksYS09Nztmb3IodChnKDEwLGEsMSksMCksYT1vLTE7MjM8PWE7KXIoMTw8MjMpLGEtPTIzO3IoMTw8YSksdCgxLDEpLHIoMiksZj1uKCl9ZWxzZSB0KDAsaSksdCgxPDwtbywwKSxmPW4oKSt5LmNhbGwoXCIwXCIsdSk7cmV0dXJuIGY9MDx1P2QrKChzPWYubGVuZ3RoKTw9dT9cIjAuXCIreS5jYWxsKFwiMFwiLHUtcykrZjpmLnNsaWNlKDAscy11KStcIi5cIitmLnNsaWNlKHMtdSkpOmQrZn19KX0se1wiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5LFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvc3RyaW5nLXJlcGVhdFwiOjEyNSxcIi4uL2ludGVybmFscy90aGlzLW51bWJlci12YWx1ZVwiOjEyOSxcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCI6MTMzfV0sMTczOltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1hc3NpZ25cIik7bih7dGFyZ2V0OlwiT2JqZWN0XCIsc3RhdDohMCxmb3JjZWQ6T2JqZWN0LmFzc2lnbiE9PW99LHthc3NpZ246b30pfSx7XCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnblwiOjg5fV0sMTc0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGk9ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy1leHRlcm5hbFwiKS5mO24oe3RhcmdldDpcIk9iamVjdFwiLHN0YXQ6ITAsZm9yY2VkOm8oZnVuY3Rpb24oKXtyZXR1cm4hT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoMSl9KX0se2dldE93blByb3BlcnR5TmFtZXM6aX0pfSx7XCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy1leHRlcm5hbFwiOjk0fV0sMTc1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGk9ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIiksYT1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mXCIpLHM9ZShcIi4uL2ludGVybmFscy9jb3JyZWN0LXByb3RvdHlwZS1nZXR0ZXJcIik7bih7dGFyZ2V0OlwiT2JqZWN0XCIsc3RhdDohMCxmb3JjZWQ6byhmdW5jdGlvbigpe2EoMSl9KSxzaGFtOiFzfSx7Z2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24oZSl7cmV0dXJuIGEoaShlKSl9fSl9LHtcIi4uL2ludGVybmFscy9jb3JyZWN0LXByb3RvdHlwZS1nZXR0ZXJcIjozNCxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mXCI6OTcsXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1fV0sMTc2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXNcIik7bih7dGFyZ2V0OlwiT2JqZWN0XCIsc3RhdDohMCxmb3JjZWQ6ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKShmdW5jdGlvbigpe2koMSl9KX0se2tleXM6ZnVuY3Rpb24oZSl7cmV0dXJuIGkobyhlKSl9fSl9LHtcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzXCI6OTksXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1fV0sMTc3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCIpLGk9ZShcIi4uL2ludGVybmFscy9vYmplY3QtdG8tc3RyaW5nXCIpO258fG8oT2JqZWN0LnByb3RvdHlwZSxcInRvU3RyaW5nXCIsaSx7dW5zYWZlOiEwfSl9LHtcIi4uL2ludGVybmFscy9vYmplY3QtdG8tc3RyaW5nXCI6MTAyLFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCI6MTA4LFwiLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydFwiOjEzOX1dLDE3ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHkoZSl7dmFyIHQ7cmV0dXJuISgheChlKXx8XCJmdW5jdGlvblwiIT10eXBlb2YodD1lLnRoZW4pKSYmdH1mdW5jdGlvbiBpKGQsZixoKXtpZighZi5ub3RpZmllZCl7Zi5ub3RpZmllZD0hMDt2YXIgcD1mLnJlYWN0aW9ucztMKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPWYudmFsdWUsdD0xPT1mLnN0YXRlLHI9MDtwLmxlbmd0aD5yOyl7dmFyIG4sbyxpLGE9cFtyKytdLHM9dD9hLm9rOmEuZmFpbCxsPWEucmVzb2x2ZSx1PWEucmVqZWN0LGM9YS5kb21haW47dHJ5e3M/KHR8fCgyPT09Zi5yZWplY3Rpb24mJm9lKGQsZiksZi5yZWplY3Rpb249MSksITA9PT1zP249ZTooYyYmYy5lbnRlcigpLG49cyhlKSxjJiYoYy5leGl0KCksaT0hMCkpLG49PT1hLnByb21pc2U/dShXKFwiUHJvbWlzZS1jaGFpbiBjeWNsZVwiKSk6KG89eShuKSk/by5jYWxsKG4sbCx1KTpsKG4pKTp1KGUpfWNhdGNoKGUpe2MmJiFpJiZjLmV4aXQoKSx1KGUpfX1mLnJlYWN0aW9ucz1bXSxmLm5vdGlmaWVkPSExLGgmJiFmLnJlamVjdGlvbiYmcmUoZCxmKX0pfX1mdW5jdGlvbiBvKGUsdCxyKXt2YXIgbixvO0o/KChuPXEuY3JlYXRlRXZlbnQoXCJFdmVudFwiKSkucHJvbWlzZT10LG4ucmVhc29uPXIsbi5pbml0RXZlbnQoZSwhMSwhMCksaC5kaXNwYXRjaEV2ZW50KG4pKTpuPXtwcm9taXNlOnQscmVhc29uOnJ9LChvPWhbXCJvblwiK2VdKT9vKG4pOmU9PT0kJiZBKFwiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uXCIscil9ZnVuY3Rpb24gYSh0LHIsbixvKXtyZXR1cm4gZnVuY3Rpb24oZSl7dChyLG4sZSxvKX19ZnVuY3Rpb24gcyhlLHQscixuKXt0LmRvbmV8fCh0LmRvbmU9ITAsbiYmKHQ9biksdC52YWx1ZT1yLHQuc3RhdGU9MixpKGUsdCwhMCkpfXZhciBuLGwsdSxjLGQ9ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2lzLXB1cmVcIiksaD1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxwPWUoXCIuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluXCIpLG09ZShcIi4uL2ludGVybmFscy9uYXRpdmUtcHJvbWlzZS1jb25zdHJ1Y3RvclwiKSxnPWUoXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIiksdj1lKFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lLWFsbFwiKSxiPWUoXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIiksXz1lKFwiLi4vaW50ZXJuYWxzL3NldC1zcGVjaWVzXCIpLHg9ZShcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIiksdz1lKFwiLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb25cIiksaj1lKFwiLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlXCIpLFM9ZShcIi4uL2ludGVybmFscy9jbGFzc29mLXJhd1wiKSxNPWUoXCIuLi9pbnRlcm5hbHMvaW5zcGVjdC1zb3VyY2VcIiksRT1lKFwiLi4vaW50ZXJuYWxzL2l0ZXJhdGVcIiksVD1lKFwiLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvblwiKSxPPWUoXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiKSxDPWUoXCIuLi9pbnRlcm5hbHMvdGFza1wiKS5zZXQsTD1lKFwiLi4vaW50ZXJuYWxzL21pY3JvdGFza1wiKSxQPWUoXCIuLi9pbnRlcm5hbHMvcHJvbWlzZS1yZXNvbHZlXCIpLEE9ZShcIi4uL2ludGVybmFscy9ob3N0LXJlcG9ydC1lcnJvcnNcIiksaz1lKFwiLi4vaW50ZXJuYWxzL25ldy1wcm9taXNlLWNhcGFiaWxpdHlcIiksUj1lKFwiLi4vaW50ZXJuYWxzL3BlcmZvcm1cIiksRD1lKFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCIpLEk9ZShcIi4uL2ludGVybmFscy9pcy1mb3JjZWRcIiksVT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLE49ZShcIi4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvblwiKSxGPVUoXCJzcGVjaWVzXCIpLEI9XCJQcm9taXNlXCIsRz1ELmdldCxWPUQuc2V0LHo9RC5nZXR0ZXJGb3IoQiksSD1tLFc9aC5UeXBlRXJyb3IscT1oLmRvY3VtZW50LFg9aC5wcm9jZXNzLFk9cChcImZldGNoXCIpLFo9ay5mLFE9WixLPVwicHJvY2Vzc1wiPT1TKFgpLEo9ISEocSYmcS5jcmVhdGVFdmVudCYmaC5kaXNwYXRjaEV2ZW50KSwkPVwidW5oYW5kbGVkcmVqZWN0aW9uXCIsZWU9SShCLGZ1bmN0aW9uKCl7aWYoIShNKEgpIT09U3RyaW5nKEgpKSl7aWYoNjY9PT1OKXJldHVybiEwO2lmKCFLJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpcmV0dXJuITB9aWYoZiYmIUgucHJvdG90eXBlLmZpbmFsbHkpcmV0dXJuITA7aWYoNTE8PU4mJi9uYXRpdmUgY29kZS8udGVzdChIKSlyZXR1cm4hMTtmdW5jdGlvbiBlKGUpe2UoZnVuY3Rpb24oKXt9LGZ1bmN0aW9uKCl7fSl9dmFyIHQ9SC5yZXNvbHZlKDEpO3JldHVybih0LmNvbnN0cnVjdG9yPXt9KVtGXT1lLCEodC50aGVuKGZ1bmN0aW9uKCl7fSlpbnN0YW5jZW9mIGUpfSksdGU9ZWV8fCFUKGZ1bmN0aW9uKGUpe0guYWxsKGUpLmNhdGNoKGZ1bmN0aW9uKCl7fSl9KSxyZT1mdW5jdGlvbihyLG4pe0MuY2FsbChoLGZ1bmN0aW9uKCl7dmFyIGUsdD1uLnZhbHVlO2lmKG5lKG4pJiYoZT1SKGZ1bmN0aW9uKCl7Sz9YLmVtaXQoXCJ1bmhhbmRsZWRSZWplY3Rpb25cIix0LHIpOm8oJCxyLHQpfSksbi5yZWplY3Rpb249S3x8bmUobik/MjoxLGUuZXJyb3IpKXRocm93IGUudmFsdWV9KX0sbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIDEhPT1lLnJlamVjdGlvbiYmIWUucGFyZW50fSxvZT1mdW5jdGlvbihlLHQpe0MuY2FsbChoLGZ1bmN0aW9uKCl7Sz9YLmVtaXQoXCJyZWplY3Rpb25IYW5kbGVkXCIsZSk6byhcInJlamVjdGlvbmhhbmRsZWRcIixlLHQudmFsdWUpfSl9LGllPWZ1bmN0aW9uKHIsbixlLHQpe2lmKCFuLmRvbmUpe24uZG9uZT0hMCx0JiYobj10KTt0cnl7aWYocj09PWUpdGhyb3cgVyhcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO3ZhciBvPXkoZSk7bz9MKGZ1bmN0aW9uKCl7dmFyIHQ9e2RvbmU6ITF9O3RyeXtvLmNhbGwoZSxhKGllLHIsdCxuKSxhKHMscix0LG4pKX1jYXRjaChlKXtzKHIsdCxlLG4pfX0pOihuLnZhbHVlPWUsbi5zdGF0ZT0xLGkocixuLCExKSl9Y2F0Y2goZSl7cyhyLHtkb25lOiExfSxlLG4pfX19O2VlJiYoSD1mdW5jdGlvbihlKXtqKHRoaXMsSCxCKSx3KGUpLG4uY2FsbCh0aGlzKTt2YXIgdD1HKHRoaXMpO3RyeXtlKGEoaWUsdGhpcyx0KSxhKHMsdGhpcyx0KSl9Y2F0Y2goZSl7cyh0aGlzLHQsZSl9fSwobj1mdW5jdGlvbigpe1YodGhpcyx7dHlwZTpCLGRvbmU6ITEsbm90aWZpZWQ6ITEscGFyZW50OiExLHJlYWN0aW9uczpbXSxyZWplY3Rpb246ITEsc3RhdGU6MCx2YWx1ZTp2b2lkIDB9KX0pLnByb3RvdHlwZT12KEgucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9eih0aGlzKSxuPVooTyh0aGlzLEgpKTtyZXR1cm4gbi5vaz1cImZ1bmN0aW9uXCIhPXR5cGVvZiBlfHxlLG4uZmFpbD1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZ0LG4uZG9tYWluPUs/WC5kb21haW46dm9pZCAwLHIucGFyZW50PSEwLHIucmVhY3Rpb25zLnB1c2gobiksMCE9ci5zdGF0ZSYmaSh0aGlzLHIsITEpLG4ucHJvbWlzZX0sY2F0Y2g6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksbD1mdW5jdGlvbigpe3ZhciBlPW5ldyBuLHQ9RyhlKTt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9YShpZSxlLHQpLHRoaXMucmVqZWN0PWEocyxlLHQpfSxrLmY9Wj1mdW5jdGlvbihlKXtyZXR1cm4gZT09PUh8fGU9PT11P25ldyBsKGUpOlEoZSl9LGZ8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIG18fChjPW0ucHJvdG90eXBlLnRoZW4sZyhtLnByb3RvdHlwZSxcInRoZW5cIixmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBIKGZ1bmN0aW9uKGUsdCl7Yy5jYWxsKHIsZSx0KX0pLnRoZW4oZSx0KX0se3Vuc2FmZTohMH0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIFkmJmQoe2dsb2JhbDohMCxlbnVtZXJhYmxlOiEwLGZvcmNlZDohMH0se2ZldGNoOmZ1bmN0aW9uKGUpe3JldHVybiBQKEgsWS5hcHBseShoLGFyZ3VtZW50cykpfX0pKSksZCh7Z2xvYmFsOiEwLHdyYXA6ITAsZm9yY2VkOmVlfSx7UHJvbWlzZTpIfSksYihILEIsITEsITApLF8oQiksdT1wKEIpLGQoe3RhcmdldDpCLHN0YXQ6ITAsZm9yY2VkOmVlfSx7cmVqZWN0OmZ1bmN0aW9uKGUpe3ZhciB0PVoodGhpcyk7cmV0dXJuIHQucmVqZWN0LmNhbGwodm9pZCAwLGUpLHQucHJvbWlzZX19KSxkKHt0YXJnZXQ6QixzdGF0OiEwLGZvcmNlZDpmfHxlZX0se3Jlc29sdmU6ZnVuY3Rpb24oZSl7cmV0dXJuIFAoZiYmdGhpcz09PXU/SDp0aGlzLGUpfX0pLGQoe3RhcmdldDpCLHN0YXQ6ITAsZm9yY2VkOnRlfSx7YWxsOmZ1bmN0aW9uKGUpe3ZhciBzPXRoaXMsdD1aKHMpLGw9dC5yZXNvbHZlLHU9dC5yZWplY3Qscj1SKGZ1bmN0aW9uKCl7dmFyIG49dyhzLnJlc29sdmUpLG89W10saT0wLGE9MTtFKGUsZnVuY3Rpb24oZSl7dmFyIHQ9aSsrLHI9ITE7by5wdXNoKHZvaWQgMCksYSsrLG4uY2FsbChzLGUpLnRoZW4oZnVuY3Rpb24oZSl7cnx8KHI9ITAsb1t0XT1lLC0tYXx8bChvKSl9LHUpfSksLS1hfHxsKG8pfSk7cmV0dXJuIHIuZXJyb3ImJnUoci52YWx1ZSksdC5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciByPXRoaXMsbj1aKHIpLG89bi5yZWplY3QsdD1SKGZ1bmN0aW9uKCl7dmFyIHQ9dyhyLnJlc29sdmUpO0UoZSxmdW5jdGlvbihlKXt0LmNhbGwocixlKS50aGVuKG4ucmVzb2x2ZSxvKX0pfSk7cmV0dXJuIHQuZXJyb3ImJm8odC52YWx1ZSksbi5wcm9taXNlfX0pfSx7XCIuLi9pbnRlcm5hbHMvYS1mdW5jdGlvblwiOjUsXCIuLi9pbnRlcm5hbHMvYW4taW5zdGFuY2VcIjo5LFwiLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvblwiOjI3LFwiLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3XCI6MjgsXCIuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb25cIjo0NyxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIjo1NixcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9ob3N0LXJlcG9ydC1lcnJvcnNcIjo2MixcIi4uL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZVwiOjY4LFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCI6NzAsXCIuLi9pbnRlcm5hbHMvaXMtZm9yY2VkXCI6NzMsXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCI6NzQsXCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiOjc1LFwiLi4vaW50ZXJuYWxzL2l0ZXJhdGVcIjo3NyxcIi4uL2ludGVybmFscy9taWNyb3Rhc2tcIjo4MSxcIi4uL2ludGVybmFscy9uYXRpdmUtcHJvbWlzZS1jb25zdHJ1Y3RvclwiOjgyLFwiLi4vaW50ZXJuYWxzL25ldy1wcm9taXNlLWNhcGFiaWxpdHlcIjo4NixcIi4uL2ludGVybmFscy9wZXJmb3JtXCI6MTA1LFwiLi4vaW50ZXJuYWxzL3Byb21pc2UtcmVzb2x2ZVwiOjEwNixcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9yZWRlZmluZS1hbGxcIjoxMDcsXCIuLi9pbnRlcm5hbHMvc2V0LXNwZWNpZXNcIjoxMTYsXCIuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWdcIjoxMTcsXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiOjEyMSxcIi4uL2ludGVybmFscy90YXNrXCI6MTI4LFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMTc5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pblwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvYS1mdW5jdGlvblwiKSx1PWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpLGM9ZShcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIiksZD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGVcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmRcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGg9byhcIlJlZmxlY3RcIixcImNvbnN0cnVjdFwiKSxwPWkoZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7fXJldHVybiEoaChmdW5jdGlvbigpe30sW10sZSlpbnN0YW5jZW9mIGUpfSkseT0haShmdW5jdGlvbigpe2goZnVuY3Rpb24oKXt9KX0pLGE9cHx8eTtuKHt0YXJnZXQ6XCJSZWZsZWN0XCIsc3RhdDohMCxmb3JjZWQ6YSxzaGFtOmF9LHtjb25zdHJ1Y3Q6ZnVuY3Rpb24oZSx0LHIpe2woZSksdSh0KTt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPDM/ZTpsKHIpO2lmKHkmJiFwKXJldHVybiBoKGUsdCxuKTtpZihlPT1uKXtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IGU7Y2FzZSAxOnJldHVybiBuZXcgZSh0WzBdKTtjYXNlIDI6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuZXcgZSh0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuZXcgZSh0WzBdLHRbMV0sdFsyXSx0WzNdKX12YXIgbz1bbnVsbF07cmV0dXJuIG8ucHVzaC5hcHBseShvLHQpLG5ldyhmLmFwcGx5KGUsbykpfXZhciBpPW4ucHJvdG90eXBlLGE9ZChjKGkpP2k6T2JqZWN0LnByb3RvdHlwZSkscz1GdW5jdGlvbi5hcHBseS5jYWxsKGUsYSx0KTtyZXR1cm4gYyhzKT9zOmF9fSl9LHtcIi4uL2ludGVybmFscy9hLWZ1bmN0aW9uXCI6NSxcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIjoxMCxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmRcIjo1NSxcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIjo1NixcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlXCI6OTB9XSwxODA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCIpLG89ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksaT1lKFwiLi4vaW50ZXJuYWxzL2lzLWZvcmNlZFwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvaW5oZXJpdC1pZi1yZXF1aXJlZFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiKS5mLGw9ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lc1wiKS5mLHU9ZShcIi4uL2ludGVybmFscy9pcy1yZWdleHBcIiksYz1lKFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1mbGFnc1wiKSxkPWUoXCIuLi9pbnRlcm5hbHMvcmVnZXhwLXN0aWNreS1oZWxwZXJzXCIpLGY9ZShcIi4uL2ludGVybmFscy9yZWRlZmluZVwiKSxoPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIikscD1lKFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCIpLnNldCx5PWUoXCIuLi9pbnRlcm5hbHMvc2V0LXNwZWNpZXNcIiksbT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpKFwibWF0Y2hcIiksZz1vLlJlZ0V4cCx2PWcucHJvdG90eXBlLGI9L2EvZyxfPS9hL2cseD1uZXcgZyhiKSE9PWIsdz1kLlVOU1VQUE9SVEVEX1k7aWYobiYmaShcIlJlZ0V4cFwiLCF4fHx3fHxoKGZ1bmN0aW9uKCl7cmV0dXJuIF9bbV09ITEsZyhiKSE9Ynx8ZyhfKT09X3x8XCIvYS9pXCIhPWcoYixcImlcIil9KSkpe2Z1bmN0aW9uIGoodCl7dCBpbiBTfHxhKFMsdCx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBnW3RdfSxzZXQ6ZnVuY3Rpb24oZSl7Z1t0XT1lfX0pfWZvcih2YXIgUz1mdW5jdGlvbihlLHQpe3ZhciByLG49dGhpcyBpbnN0YW5jZW9mIFMsbz11KGUpLGk9dm9pZCAwPT09dDtpZighbiYmbyYmZS5jb25zdHJ1Y3Rvcj09PVMmJmkpcmV0dXJuIGU7eD9vJiYhaSYmKGU9ZS5zb3VyY2UpOmUgaW5zdGFuY2VvZiBTJiYoaSYmKHQ9Yy5jYWxsKGUpKSxlPWUuc291cmNlKSx3JiYocj0hIXQmJi0xPHQuaW5kZXhPZihcInlcIikpJiYodD10LnJlcGxhY2UoL3kvZyxcIlwiKSk7dmFyIGE9cyh4P25ldyBnKGUsdCk6ZyhlLHQpLG4/dGhpczp2LFMpO3JldHVybiB3JiZyJiZwKGEse3N0aWNreTpyfSksYX0sTT1sKGcpLEU9MDtNLmxlbmd0aD5FOylqKE1bRSsrXSk7KHYuY29uc3RydWN0b3I9UykucHJvdG90eXBlPXYsZihvLFwiUmVnRXhwXCIsUyl9eShcIlJlZ0V4cFwiKX0se1wiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkXCI6NjcsXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGVcIjo3MCxcIi4uL2ludGVybmFscy9pcy1mb3JjZWRcIjo3MyxcIi4uL2ludGVybmFscy9pcy1yZWdleHBcIjo3NixcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCI6OTIsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXNcIjo5NSxcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9yZWdleHAtZmxhZ3NcIjoxMTEsXCIuLi9pbnRlcm5hbHMvcmVnZXhwLXN0aWNreS1oZWxwZXJzXCI6MTEyLFwiLi4vaW50ZXJuYWxzL3NldC1zcGVjaWVzXCI6MTE2LFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2fV0sMTgxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjXCIpO24oe3RhcmdldDpcIlJlZ0V4cFwiLHByb3RvOiEwLGZvcmNlZDovLi8uZXhlYyE9PW99LHtleGVjOm99KX0se1wiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5LFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjXCI6MTEwfV0sMTgyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9yZWRlZmluZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpLGk9ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSxhPWUoXCIuLi9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzXCIpLHM9XCJ0b1N0cmluZ1wiLGw9UmVnRXhwLnByb3RvdHlwZSx1PWxbc10sYz1pKGZ1bmN0aW9uKCl7cmV0dXJuXCIvYS9iXCIhPXUuY2FsbCh7c291cmNlOlwiYVwiLGZsYWdzOlwiYlwifSl9KSxkPXUubmFtZSE9czsoY3x8ZCkmJm4oUmVnRXhwLnByb3RvdHlwZSxzLGZ1bmN0aW9uKCl7dmFyIGU9byh0aGlzKSx0PVN0cmluZyhlLnNvdXJjZSkscj1lLmZsYWdzO3JldHVyblwiL1wiK3QrXCIvXCIrU3RyaW5nKHZvaWQgMD09PXImJmUgaW5zdGFuY2VvZiBSZWdFeHAmJiEoXCJmbGFnc1wiaW4gbCk/YS5jYWxsKGUpOnIpfSx7dW5zYWZlOiEwfSl9LHtcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIjoxMCxcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCI6MTA4LFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1mbGFnc1wiOjExMX1dLDE4MzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvY29sbGVjdGlvblwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvY29sbGVjdGlvbi1zdHJvbmdcIik7dC5leHBvcnRzPW4oXCJTZXRcIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHQodGhpcyxhcmd1bWVudHMubGVuZ3RoP2U6dm9pZCAwKX19LG8pfSx7XCIuLi9pbnRlcm5hbHMvY29sbGVjdGlvblwiOjMxLFwiLi4vaW50ZXJuYWxzL2NvbGxlY3Rpb24tc3Ryb25nXCI6MzB9XSwxODQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbixvPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLGk9ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpLmYscz1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvbm90LWEtcmVnZXhwXCIpLHU9ZShcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIiksYT1lKFwiLi4vaW50ZXJuYWxzL2NvcnJlY3QtaXMtcmVnZXhwLWxvZ2ljXCIpLGM9ZShcIi4uL2ludGVybmFscy9pcy1wdXJlXCIpLGQ9XCJcIi5lbmRzV2l0aCxmPU1hdGgubWluLGg9YShcImVuZHNXaXRoXCIpO28oe3RhcmdldDpcIlN0cmluZ1wiLHByb3RvOiEwLGZvcmNlZDohIShjfHxofHwoIShuPWkoU3RyaW5nLnByb3RvdHlwZSxcImVuZHNXaXRoXCIpKXx8bi53cml0YWJsZSkpJiYhaH0se2VuZHNXaXRoOmZ1bmN0aW9uKGUsdCl7dmFyIHI9U3RyaW5nKHUodGhpcykpO2woZSk7dmFyIG49MTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwLG89cyhyLmxlbmd0aCksaT12b2lkIDA9PT1uP286ZihzKG4pLG8pLGE9U3RyaW5nKGUpO3JldHVybiBkP2QuY2FsbChyLGEsaSk6ci5zbGljZShpLWEubGVuZ3RoLGkpPT09YX19KX0se1wiLi4vaW50ZXJuYWxzL2NvcnJlY3QtaXMtcmVnZXhwLWxvZ2ljXCI6MzMsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiOjc1LFwiLi4vaW50ZXJuYWxzL25vdC1hLXJlZ2V4cFwiOjg3LFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIjo5MyxcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIjoxMTMsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0fV0sMTg1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL25vdC1hLXJlZ2V4cFwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlXCIpO24oe3RhcmdldDpcIlN0cmluZ1wiLHByb3RvOiEwLGZvcmNlZDohZShcIi4uL2ludGVybmFscy9jb3JyZWN0LWlzLXJlZ2V4cC1sb2dpY1wiKShcImluY2x1ZGVzXCIpfSx7aW5jbHVkZXM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4hIX5TdHJpbmcoaSh0aGlzKSkuaW5kZXhPZihvKGUpLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCl9fSl9LHtcIi4uL2ludGVybmFscy9jb3JyZWN0LWlzLXJlZ2V4cC1sb2dpY1wiOjMzLFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiOjQ5LFwiLi4vaW50ZXJuYWxzL25vdC1hLXJlZ2V4cFwiOjg3LFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiOjExM31dLDE4NjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBvPWUoXCIuLi9pbnRlcm5hbHMvc3RyaW5nLW11bHRpYnl0ZVwiKS5jaGFyQXQsbj1lKFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCIpLGk9ZShcIi4uL2ludGVybmFscy9kZWZpbmUtaXRlcmF0b3JcIiksYT1cIlN0cmluZyBJdGVyYXRvclwiLHM9bi5zZXQsbD1uLmdldHRlckZvcihhKTtpKFN0cmluZyxcIlN0cmluZ1wiLGZ1bmN0aW9uKGUpe3ModGhpcyx7dHlwZTphLHN0cmluZzpTdHJpbmcoZSksaW5kZXg6MH0pfSxmdW5jdGlvbigpe3ZhciBlLHQ9bCh0aGlzKSxyPXQuc3RyaW5nLG49dC5pbmRleDtyZXR1cm4gbj49ci5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1vKHIsbiksdC5pbmRleCs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHtcIi4uL2ludGVybmFscy9kZWZpbmUtaXRlcmF0b3JcIjo0MCxcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiOjcwLFwiLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGVcIjoxMjN9XSwxODc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWNcIiksZD1lKFwiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiKSxmPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLG89ZShcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIiksaD1lKFwiLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4XCIpLHA9ZShcIi4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdFwiKTtuKFwibWF0Y2hcIiwxLGZ1bmN0aW9uKG4sdSxjKXtyZXR1cm5bZnVuY3Rpb24oZSl7dmFyIHQ9byh0aGlzKSxyPW51bGw9PWU/dm9pZCAwOmVbbl07cmV0dXJuIHZvaWQgMCE9PXI/ci5jYWxsKGUsdCk6bmV3IFJlZ0V4cChlKVtuXShTdHJpbmcodCkpfSxmdW5jdGlvbihlKXt2YXIgdD1jKHUsZSx0aGlzKTtpZih0LmRvbmUpcmV0dXJuIHQudmFsdWU7dmFyIHI9ZChlKSxuPVN0cmluZyh0aGlzKTtpZighci5nbG9iYWwpcmV0dXJuIHAocixuKTtmb3IodmFyIG8saT1yLnVuaWNvZGUsYT1bXSxzPXIubGFzdEluZGV4PTA7bnVsbCE9PShvPXAocixuKSk7KXt2YXIgbD1TdHJpbmcob1swXSk7XCJcIj09PShhW3NdPWwpJiYoci5sYXN0SW5kZXg9aChuLGYoci5sYXN0SW5kZXgpLGkpKSxzKyt9cmV0dXJuIDA9PT1zP251bGw6YX1dfSl9LHtcIi4uL2ludGVybmFscy9hZHZhbmNlLXN0cmluZy1pbmRleFwiOjgsXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpY1wiOjUxLFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjLWFic3RyYWN0XCI6MTA5LFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiOjExMyxcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzR9XSwxODg6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSh7dGFyZ2V0OlwiU3RyaW5nXCIscHJvdG86ITB9LHtyZXBlYXQ6ZShcIi4uL2ludGVybmFscy9zdHJpbmctcmVwZWF0XCIpfSl9LHtcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9zdHJpbmctcmVwZWF0XCI6MTI1fV0sMTg5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljXCIpLFQ9ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIiksZj1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSxPPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLEM9ZShcIi4uL2ludGVybmFscy90by1pbnRlZ2VyXCIpLGk9ZShcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIiksTD1lKFwiLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4XCIpLFA9ZShcIi4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdFwiKSxBPU1hdGgubWF4LGs9TWF0aC5taW4saD1NYXRoLmZsb29yLHA9L1xcJChbJCYnYF18XFxkXFxkP3w8W14+XSo+KS9nLHk9L1xcJChbJCYnYF18XFxkXFxkPykvZztuKFwicmVwbGFjZVwiLDIsZnVuY3Rpb24obyx4LHcsZSl7dmFyIGo9ZS5SRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRSxTPWUuUkVQTEFDRV9LRUVQU18kMCxNPWo/XCIkXCI6XCIkMFwiO3JldHVybltmdW5jdGlvbihlLHQpe3ZhciByPWkodGhpcyksbj1udWxsPT1lP3ZvaWQgMDplW29dO3JldHVybiB2b2lkIDAhPT1uP24uY2FsbChlLHIsdCk6eC5jYWxsKFN0cmluZyhyKSxlLHQpfSxmdW5jdGlvbihlLHQpe2lmKCFqJiZTfHxcInN0cmluZ1wiPT10eXBlb2YgdCYmLTE9PT10LmluZGV4T2YoTSkpe3ZhciByPXcoeCxlLHRoaXMsdCk7aWYoci5kb25lKXJldHVybiByLnZhbHVlfXZhciBuPVQoZSksbz1TdHJpbmcodGhpcyksaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0O2l8fCh0PVN0cmluZyh0KSk7dmFyIGE9bi5nbG9iYWw7aWYoYSl7dmFyIHM9bi51bmljb2RlO24ubGFzdEluZGV4PTB9Zm9yKHZhciBsPVtdOzspe3ZhciB1PVAobixvKTtpZihudWxsPT09dSlicmVhaztpZihsLnB1c2godSksIWEpYnJlYWs7XCJcIj09PVN0cmluZyh1WzBdKSYmKG4ubGFzdEluZGV4PUwobyxPKG4ubGFzdEluZGV4KSxzKSl9Zm9yKHZhciBjLGQ9XCJcIixmPTAsaD0wO2g8bC5sZW5ndGg7aCsrKXt1PWxbaF07Zm9yKHZhciBwPVN0cmluZyh1WzBdKSx5PUEoayhDKHUuaW5kZXgpLG8ubGVuZ3RoKSwwKSxtPVtdLGc9MTtnPHUubGVuZ3RoO2crKyltLnB1c2godm9pZCAwPT09KGM9dVtnXSk/YzpTdHJpbmcoYykpO3ZhciB2PXUuZ3JvdXBzO2lmKGkpe3ZhciBiPVtwXS5jb25jYXQobSx5LG8pO3ZvaWQgMCE9PXYmJmIucHVzaCh2KTt2YXIgXz1TdHJpbmcodC5hcHBseSh2b2lkIDAsYikpfWVsc2UgXz1FKHAsbyx5LG0sdix0KTtmPD15JiYoZCs9by5zbGljZShmLHkpK18sZj15K3AubGVuZ3RoKX1yZXR1cm4gZCtvLnNsaWNlKGYpfV07ZnVuY3Rpb24gRShpLGEscyxsLHUsZSl7dmFyIGM9cytpLmxlbmd0aCxkPWwubGVuZ3RoLHQ9eTtyZXR1cm4gdm9pZCAwIT09dSYmKHU9Zih1KSx0PXApLHguY2FsbChlLHQsZnVuY3Rpb24oZSx0KXt2YXIgcjtzd2l0Y2godC5jaGFyQXQoMCkpe2Nhc2VcIiRcIjpyZXR1cm5cIiRcIjtjYXNlXCImXCI6cmV0dXJuIGk7Y2FzZVwiYFwiOnJldHVybiBhLnNsaWNlKDAscyk7Y2FzZVwiJ1wiOnJldHVybiBhLnNsaWNlKGMpO2Nhc2VcIjxcIjpyPXVbdC5zbGljZSgxLC0xKV07YnJlYWs7ZGVmYXVsdDp2YXIgbj0rdDtpZigwPT1uKXJldHVybiBlO2lmKGQ8bil7dmFyIG89aChuLzEwKTtyZXR1cm4gMD09PW8/ZTpvPD1kP3ZvaWQgMD09PWxbby0xXT90LmNoYXJBdCgxKTpsW28tMV0rdC5jaGFyQXQoMSk6ZX1yPWxbbi0xXX1yZXR1cm4gdm9pZCAwPT09cj9cIlwiOnJ9KX19KX0se1wiLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4XCI6OCxcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIjoxMCxcIi4uL2ludGVybmFscy9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljXCI6NTEsXCIuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMtYWJzdHJhY3RcIjoxMDksXCIuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlXCI6MTEzLFwiLi4vaW50ZXJuYWxzL3RvLWludGVnZXJcIjoxMzMsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0LFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiOjEzNX1dLDE5MDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpY1wiKSxsPWUoXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCIpLG89ZShcIi4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGVcIiksdT1lKFwiLi4vaW50ZXJuYWxzL3NhbWUtdmFsdWVcIiksYz1lKFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjLWFic3RyYWN0XCIpO24oXCJzZWFyY2hcIiwxLGZ1bmN0aW9uKG4sYSxzKXtyZXR1cm5bZnVuY3Rpb24oZSl7dmFyIHQ9byh0aGlzKSxyPW51bGw9PWU/dm9pZCAwOmVbbl07cmV0dXJuIHZvaWQgMCE9PXI/ci5jYWxsKGUsdCk6bmV3IFJlZ0V4cChlKVtuXShTdHJpbmcodCkpfSxmdW5jdGlvbihlKXt2YXIgdD1zKGEsZSx0aGlzKTtpZih0LmRvbmUpcmV0dXJuIHQudmFsdWU7dmFyIHI9bChlKSxuPVN0cmluZyh0aGlzKSxvPXIubGFzdEluZGV4O3UobywwKXx8KHIubGFzdEluZGV4PTApO3ZhciBpPWMocixuKTtyZXR1cm4gdShyLmxhc3RJbmRleCxvKXx8KHIubGFzdEluZGV4PW8pLG51bGw9PT1pPy0xOmkuaW5kZXh9XX0pfSx7XCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpY1wiOjUxLFwiLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjLWFic3RyYWN0XCI6MTA5LFwiLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZVwiOjExMyxcIi4uL2ludGVybmFscy9zYW1lLXZhbHVlXCI6MTE0fV0sMTkxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljXCIpLGQ9ZShcIi4uL2ludGVybmFscy9pcy1yZWdleHBcIiksYj1lKFwiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiKSxmPWUoXCIuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlXCIpLF89ZShcIi4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yXCIpLHg9ZShcIi4uL2ludGVybmFscy9hZHZhbmNlLXN0cmluZy1pbmRleFwiKSx3PWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLGo9ZShcIi4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdFwiKSxoPWUoXCIuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWNcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLHA9W10ucHVzaCxTPU1hdGgubWluLE09NDI5NDk2NzI5NSxFPSFvKGZ1bmN0aW9uKCl7cmV0dXJuIVJlZ0V4cChNLFwieVwiKX0pO24oXCJzcGxpdFwiLDIsZnVuY3Rpb24obyxtLGcpe3ZhciB2O3JldHVybiB2PVwiY1wiPT1cImFiYmNcIi5zcGxpdCgvKGIpKi8pWzFdfHw0IT1cInRlc3RcIi5zcGxpdCgvKD86KS8sLTEpLmxlbmd0aHx8MiE9XCJhYlwiLnNwbGl0KC8oPzphYikqLykubGVuZ3RofHw0IT1cIi5cIi5zcGxpdCgvKC4/KSguPykvKS5sZW5ndGh8fDE8XCIuXCIuc3BsaXQoLygpKCkvKS5sZW5ndGh8fFwiXCIuc3BsaXQoLy4/LykubGVuZ3RoP2Z1bmN0aW9uKGUsdCl7dmFyIHI9U3RyaW5nKGYodGhpcykpLG49dm9pZCAwPT09dD9NOnQ+Pj4wO2lmKDA9PW4pcmV0dXJuW107aWYodm9pZCAwPT09ZSlyZXR1cm5bcl07aWYoIWQoZSkpcmV0dXJuIG0uY2FsbChyLGUsbik7Zm9yKHZhciBvLGksYSxzPVtdLGw9KGUuaWdub3JlQ2FzZT9cImlcIjpcIlwiKSsoZS5tdWx0aWxpbmU/XCJtXCI6XCJcIikrKGUudW5pY29kZT9cInVcIjpcIlwiKSsoZS5zdGlja3k/XCJ5XCI6XCJcIiksdT0wLGM9bmV3IFJlZ0V4cChlLnNvdXJjZSxsK1wiZ1wiKTsobz1oLmNhbGwoYyxyKSkmJiEodTwoaT1jLmxhc3RJbmRleCkmJihzLnB1c2goci5zbGljZSh1LG8uaW5kZXgpKSwxPG8ubGVuZ3RoJiZvLmluZGV4PHIubGVuZ3RoJiZwLmFwcGx5KHMsby5zbGljZSgxKSksYT1vWzBdLmxlbmd0aCx1PWkscy5sZW5ndGg+PW4pKTspYy5sYXN0SW5kZXg9PT1vLmluZGV4JiZjLmxhc3RJbmRleCsrO3JldHVybiB1PT09ci5sZW5ndGg/IWEmJmMudGVzdChcIlwiKXx8cy5wdXNoKFwiXCIpOnMucHVzaChyLnNsaWNlKHUpKSxzLmxlbmd0aD5uP3Muc2xpY2UoMCxuKTpzfTpcIjBcIi5zcGxpdCh2b2lkIDAsMCkubGVuZ3RoP2Z1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PWUmJjA9PT10P1tdOm0uY2FsbCh0aGlzLGUsdCl9Om0sW2Z1bmN0aW9uKGUsdCl7dmFyIHI9Zih0aGlzKSxuPW51bGw9PWU/dm9pZCAwOmVbb107cmV0dXJuIHZvaWQgMCE9PW4/bi5jYWxsKGUscix0KTp2LmNhbGwoU3RyaW5nKHIpLGUsdCl9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9Zyh2LGUsdGhpcyx0LHYhPT1tKTtpZihyLmRvbmUpcmV0dXJuIHIudmFsdWU7dmFyIG49YihlKSxvPVN0cmluZyh0aGlzKSxpPV8obixSZWdFeHApLGE9bi51bmljb2RlLHM9KG4uaWdub3JlQ2FzZT9cImlcIjpcIlwiKSsobi5tdWx0aWxpbmU/XCJtXCI6XCJcIikrKG4udW5pY29kZT9cInVcIjpcIlwiKSsoRT9cInlcIjpcImdcIiksbD1uZXcgaShFP246XCJeKD86XCIrbi5zb3VyY2UrXCIpXCIscyksdT12b2lkIDA9PT10P006dD4+PjA7aWYoMD09dSlyZXR1cm5bXTtpZigwPT09by5sZW5ndGgpcmV0dXJuIG51bGw9PT1qKGwsbyk/W29dOltdO2Zvcih2YXIgYz0wLGQ9MCxmPVtdO2Q8by5sZW5ndGg7KXtsLmxhc3RJbmRleD1FP2Q6MDt2YXIgaCxwPWoobCxFP286by5zbGljZShkKSk7aWYobnVsbD09PXB8fChoPVModyhsLmxhc3RJbmRleCsoRT8wOmQpKSxvLmxlbmd0aCkpPT09YylkPXgobyxkLGEpO2Vsc2V7aWYoZi5wdXNoKG8uc2xpY2UoYyxkKSksZi5sZW5ndGg9PT11KXJldHVybiBmO2Zvcih2YXIgeT0xO3k8PXAubGVuZ3RoLTE7eSsrKWlmKGYucHVzaChwW3ldKSxmLmxlbmd0aD09PXUpcmV0dXJuIGY7ZD1jPWh9fXJldHVybiBmLnB1c2goby5zbGljZShjKSksZn1dfSwhRSl9LHtcIi4uL2ludGVybmFscy9hZHZhbmNlLXN0cmluZy1pbmRleFwiOjgsXCIuLi9pbnRlcm5hbHMvYW4tb2JqZWN0XCI6MTAsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljXCI6NTEsXCIuLi9pbnRlcm5hbHMvaXMtcmVnZXhwXCI6NzYsXCIuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWNcIjoxMTAsXCIuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMtYWJzdHJhY3RcIjoxMDksXCIuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlXCI6MTEzLFwiLi4vaW50ZXJuYWxzL3NwZWNpZXMtY29uc3RydWN0b3JcIjoxMjEsXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCI6MTM0fV0sMTkyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1odG1sXCIpO24oe3RhcmdldDpcIlN0cmluZ1wiLHByb3RvOiEwLGZvcmNlZDplKFwiLi4vaW50ZXJuYWxzL3N0cmluZy1odG1sLWZvcmNlZFwiKShcInN1YlwiKX0se3N1YjpmdW5jdGlvbigpe3JldHVybiBvKHRoaXMsXCJzdWJcIixcIlwiLFwiXCIpfX0pfSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLWh0bWxcIjozNSxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9zdHJpbmctaHRtbC1mb3JjZWRcIjoxMjJ9XSwxOTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2V4cG9ydFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW1cIikudHJpbTtuKHt0YXJnZXQ6XCJTdHJpbmdcIixwcm90bzohMCxmb3JjZWQ6ZShcIi4uL2ludGVybmFscy9zdHJpbmctdHJpbS1mb3JjZWRcIikoXCJ0cmltXCIpfSx7dHJpbTpmdW5jdGlvbigpe3JldHVybiBvKHRoaXMpfX0pfSx7XCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW1cIjoxMjcsXCIuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW0tZm9yY2VkXCI6MTI2fV0sMTk0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCIpLGk9ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksYT1lKFwiLi4vaW50ZXJuYWxzL2hhc1wiKSxzPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLGw9ZShcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCIpLmYsdT1lKFwiLi4vaW50ZXJuYWxzL2NvcHktY29uc3RydWN0b3ItcHJvcGVydGllc1wiKSxjPWkuU3ltYm9sO2lmKG8mJlwiZnVuY3Rpb25cIj09dHlwZW9mIGMmJighKFwiZGVzY3JpcHRpb25cImluIGMucHJvdG90eXBlKXx8dm9pZCAwIT09YygpLmRlc2NyaXB0aW9uKSl7dmFyIGQ9e30sZj1mdW5jdGlvbihlKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPDF8fHZvaWQgMD09PWU/dm9pZCAwOlN0cmluZyhlKSxyPXRoaXMgaW5zdGFuY2VvZiBmP25ldyBjKHQpOnZvaWQgMD09PXQ/YygpOmModCk7cmV0dXJuXCJcIj09PXQmJihkW3JdPSEwKSxyfTt1KGYsYyk7dmFyIGg9Zi5wcm90b3R5cGU9Yy5wcm90b3R5cGU7aC5jb25zdHJ1Y3Rvcj1mO3ZhciBwPWgudG9TdHJpbmcseT1cIlN5bWJvbCh0ZXN0KVwiPT1TdHJpbmcoYyhcInRlc3RcIikpLG09L15TeW1ib2xcXCgoLiopXFwpW14pXSskLztsKGgsXCJkZXNjcmlwdGlvblwiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9cyh0aGlzKT90aGlzLnZhbHVlT2YoKTp0aGlzLHQ9cC5jYWxsKGUpO2lmKGEoZCxlKSlyZXR1cm5cIlwiO3ZhciByPXk/dC5zbGljZSg3LC0xKTp0LnJlcGxhY2UobSxcIiQxXCIpO3JldHVyblwiXCI9PT1yP3ZvaWQgMDpyfX0pLG4oe2dsb2JhbDohMCxmb3JjZWQ6ITB9LHtTeW1ib2w6Zn0pfX0se1wiLi4vaW50ZXJuYWxzL2NvcHktY29uc3RydWN0b3ItcHJvcGVydGllc1wiOjMyLFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCI6NzQsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eVwiOjkyfV0sMTk1OltmdW5jdGlvbihlLHQscil7ZShcIi4uL2ludGVybmFscy9kZWZpbmUtd2VsbC1rbm93bi1zeW1ib2xcIikoXCJpdGVyYXRvclwiKX0se1wiLi4vaW50ZXJuYWxzL2RlZmluZS13ZWxsLWtub3duLXN5bWJvbFwiOjQxfV0sMTk2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbyhlLHQpe3ZhciByPXJlW2VdPWooUVtXXSk7cmV0dXJuIFgocix7dHlwZTpILHRhZzplLGRlc2NyaXB0aW9uOnR9KSxkfHwoci5kZXNjcmlwdGlvbj10KSxyfWZ1bmN0aW9uIG4odCxlKXt2KHQpO3ZhciByPV8oZSksbj1TKHIpLmNvbmNhdChoZShyKSk7cmV0dXJuIFYobixmdW5jdGlvbihlKXtkJiYhZmUuY2FsbChyLGUpfHxkZSh0LGUscltlXSl9KSx0fWZ1bmN0aW9uIGkoZSx0KXt2YXIgcj1fKGUpLG49eCh0LCEwKTtpZihyIT09Wnx8IXkocmUsbil8fHkobmUsbikpe3ZhciBvPUoocixuKTtyZXR1cm4hb3x8IXkocmUsbil8fHkocix6KSYmclt6XVtuXXx8KG8uZW51bWVyYWJsZT0hMCksb319ZnVuY3Rpb24gYShlKXt2YXIgdD1lZShfKGUpKSxyPVtdO3JldHVybiBWKHQsZnVuY3Rpb24oZSl7eShyZSxlKXx8eShELGUpfHxyLnB1c2goZSl9KSxyfXZhciBzPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLGw9ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksdT1lKFwiLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pblwiKSxjPWUoXCIuLi9pbnRlcm5hbHMvaXMtcHVyZVwiKSxkPWUoXCIuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnNcIiksZj1lKFwiLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2xcIiksaD1lKFwiLi4vaW50ZXJuYWxzL3VzZS1zeW1ib2wtYXMtdWlkXCIpLHA9ZShcIi4uL2ludGVybmFscy9mYWlsc1wiKSx5PWUoXCIuLi9pbnRlcm5hbHMvaGFzXCIpLG09ZShcIi4uL2ludGVybmFscy9pcy1hcnJheVwiKSxnPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLHY9ZShcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIiksYj1lKFwiLi4vaW50ZXJuYWxzL3RvLW9iamVjdFwiKSxfPWUoXCIuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3RcIikseD1lKFwiLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZVwiKSx3PWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3JcIiksaj1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGVcIiksUz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzXCIpLE09ZShcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lc1wiKSxFPWUoXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMtZXh0ZXJuYWxcIiksVD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHNcIiksTz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIiksQz1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHlcIiksTD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlXCIpLFA9ZShcIi4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHlcIiksQT1lKFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCIpLGs9ZShcIi4uL2ludGVybmFscy9zaGFyZWRcIiksUj1lKFwiLi4vaW50ZXJuYWxzL3NoYXJlZC1rZXlcIiksRD1lKFwiLi4vaW50ZXJuYWxzL2hpZGRlbi1rZXlzXCIpLEk9ZShcIi4uL2ludGVybmFscy91aWRcIiksVT1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpLE49ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkXCIpLEY9ZShcIi4uL2ludGVybmFscy9kZWZpbmUtd2VsbC1rbm93bi1zeW1ib2xcIiksQj1lKFwiLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnXCIpLEc9ZShcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiKSxWPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLmZvckVhY2gsej1SKFwiaGlkZGVuXCIpLEg9XCJTeW1ib2xcIixXPVwicHJvdG90eXBlXCIscT1VKFwidG9QcmltaXRpdmVcIiksWD1HLnNldCxZPUcuZ2V0dGVyRm9yKEgpLFo9T2JqZWN0W1ddLFE9bC5TeW1ib2wsSz11KFwiSlNPTlwiLFwic3RyaW5naWZ5XCIpLEo9Ty5mLCQ9Qy5mLGVlPUUuZix0ZT1MLmYscmU9ayhcInN5bWJvbHNcIiksbmU9ayhcIm9wLXN5bWJvbHNcIiksb2U9ayhcInN0cmluZy10by1zeW1ib2wtcmVnaXN0cnlcIiksaWU9ayhcInN5bWJvbC10by1zdHJpbmctcmVnaXN0cnlcIiksYWU9ayhcIndrc1wiKSxzZT1sLlFPYmplY3QsbGU9IXNlfHwhc2VbV118fCFzZVtXXS5maW5kQ2hpbGQsdWU9ZCYmcChmdW5jdGlvbigpe3JldHVybiA3IT1qKCQoe30sXCJhXCIse2dldDpmdW5jdGlvbigpe3JldHVybiAkKHRoaXMsXCJhXCIse3ZhbHVlOjd9KS5hfX0pKS5hfSk/ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPUooWix0KTtuJiZkZWxldGUgWlt0XSwkKGUsdCxyKSxuJiZlIT09WiYmJChaLHQsbil9OiQsY2U9aD9mdW5jdGlvbihlKXtyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChlKWluc3RhbmNlb2YgUX0sZGU9ZnVuY3Rpb24oZSx0LHIpe2U9PT1aJiZkZShuZSx0LHIpLHYoZSk7dmFyIG49eCh0LCEwKTtyZXR1cm4gdihyKSx5KHJlLG4pPyhyLmVudW1lcmFibGU/KHkoZSx6KSYmZVt6XVtuXSYmKGVbel1bbl09ITEpLHI9aihyLHtlbnVtZXJhYmxlOncoMCwhMSl9KSk6KHkoZSx6KXx8JChlLHosdygxLHt9KSksZVt6XVtuXT0hMCksdWUoZSxuLHIpKTokKGUsbixyKX0sZmU9ZnVuY3Rpb24oZSl7dmFyIHQ9eChlLCEwKSxyPXRlLmNhbGwodGhpcyx0KTtyZXR1cm4hKHRoaXM9PT1aJiZ5KHJlLHQpJiYheShuZSx0KSkmJighKHJ8fCF5KHRoaXMsdCl8fCF5KHJlLHQpfHx5KHRoaXMseikmJnRoaXNbel1bdF0pfHxyKX0saGU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZT09PVoscj1lZSh0P25lOl8oZSkpLG49W107cmV0dXJuIFYocixmdW5jdGlvbihlKXsheShyZSxlKXx8dCYmIXkoWixlKXx8bi5wdXNoKHJlW2VdKX0pLG59O2Z8fChBKChRPWZ1bmN0aW9uKGUpe2lmKHRoaXMgaW5zdGFuY2VvZiBRKXRocm93IFR5cGVFcnJvcihcIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvclwiKTt2YXIgdD1hcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1lP1N0cmluZyhlKTp2b2lkIDAscj1JKHQpLG49ZnVuY3Rpb24oZSl7dGhpcz09PVomJm4uY2FsbChuZSxlKSx5KHRoaXMseikmJnkodGhpc1t6XSxyKSYmKHRoaXNbel1bcl09ITEpLHVlKHRoaXMscix3KDEsZSkpfTtyZXR1cm4gZCYmbGUmJnVlKFoscix7Y29uZmlndXJhYmxlOiEwLHNldDpufSksbyhyLHQpfSlbV10sXCJ0b1N0cmluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFkodGhpcykudGFnfSksQShRLFwid2l0aG91dFNldHRlclwiLGZ1bmN0aW9uKGUpe3JldHVybiBvKEkoZSksZSl9KSxMLmY9ZmUsQy5mPWRlLE8uZj1pLE0uZj1FLmY9YSxULmY9aGUsTi5mPWZ1bmN0aW9uKGUpe3JldHVybiBvKFUoZSksZSl9LGQmJigkKFFbV10sXCJkZXNjcmlwdGlvblwiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFkodGhpcykuZGVzY3JpcHRpb259fSksY3x8QShaLFwicHJvcGVydHlJc0VudW1lcmFibGVcIixmZSx7dW5zYWZlOiEwfSkpKSxzKHtnbG9iYWw6ITAsd3JhcDohMCxmb3JjZWQ6IWYsc2hhbTohZn0se1N5bWJvbDpRfSksVihTKGFlKSxmdW5jdGlvbihlKXtGKGUpfSkscyh7dGFyZ2V0Okgsc3RhdDohMCxmb3JjZWQ6IWZ9LHtmb3I6ZnVuY3Rpb24oZSl7dmFyIHQ9U3RyaW5nKGUpO2lmKHkob2UsdCkpcmV0dXJuIG9lW3RdO3ZhciByPVEodCk7cmV0dXJuIG9lW3RdPXIsaWVbcl09dCxyfSxrZXlGb3I6ZnVuY3Rpb24oZSl7aWYoIWNlKGUpKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhIHN5bWJvbFwiKTtpZih5KGllLGUpKXJldHVybiBpZVtlXX0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7bGU9ITB9LHVzZVNpbXBsZTpmdW5jdGlvbigpe2xlPSExfX0pLHMoe3RhcmdldDpcIk9iamVjdFwiLHN0YXQ6ITAsZm9yY2VkOiFmLHNoYW06IWR9LHtjcmVhdGU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09dD9qKGUpOm4oaihlKSx0KX0sZGVmaW5lUHJvcGVydHk6ZGUsZGVmaW5lUHJvcGVydGllczpuLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjppfSkscyh7dGFyZ2V0OlwiT2JqZWN0XCIsc3RhdDohMCxmb3JjZWQ6IWZ9LHtnZXRPd25Qcm9wZXJ0eU5hbWVzOmEsZ2V0T3duUHJvcGVydHlTeW1ib2xzOmhlfSkscyh7dGFyZ2V0OlwiT2JqZWN0XCIsc3RhdDohMCxmb3JjZWQ6cChmdW5jdGlvbigpe1QuZigxKX0pfSx7Z2V0T3duUHJvcGVydHlTeW1ib2xzOmZ1bmN0aW9uKGUpe3JldHVybiBULmYoYihlKSl9fSksSyYmcyh7dGFyZ2V0OlwiSlNPTlwiLHN0YXQ6ITAsZm9yY2VkOiFmfHxwKGZ1bmN0aW9uKCl7dmFyIGU9USgpO3JldHVyblwiW251bGxdXCIhPUsoW2VdKXx8XCJ7fVwiIT1LKHthOmV9KXx8XCJ7fVwiIT1LKE9iamVjdChlKSl9KX0se3N0cmluZ2lmeTpmdW5jdGlvbihlLHQscil7Zm9yKHZhciBuLG89W2VdLGk9MTtpPGFyZ3VtZW50cy5sZW5ndGg7KW8ucHVzaChhcmd1bWVudHNbaSsrXSk7aWYoKGcobj10KXx8dm9pZCAwIT09ZSkmJiFjZShlKSlyZXR1cm4gbSh0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiYodD1uLmNhbGwodGhpcyxlLHQpKSwhY2UodCkpcmV0dXJuIHR9KSxvWzFdPXQsSy5hcHBseShudWxsLG8pfX0pO1FbV11bcV18fFAoUVtXXSxxLFFbV10udmFsdWVPZiksQihRLEgpLERbel09ITB9LHtcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIjoxMCxcIi4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb25cIjoxOSxcIi4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHlcIjozNyxcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvclwiOjM4LFwiLi4vaW50ZXJuYWxzL2RlZmluZS13ZWxsLWtub3duLXN5bWJvbFwiOjQxLFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIjo1NixcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy9oYXNcIjo2MCxcIi4uL2ludGVybmFscy9oaWRkZW4ta2V5c1wiOjYxLFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCI6NzAsXCIuLi9pbnRlcm5hbHMvaXMtYXJyYXlcIjo3MixcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy9pcy1wdXJlXCI6NzUsXCIuLi9pbnRlcm5hbHMvbmF0aXZlLXN5bWJvbFwiOjgzLFwiLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGVcIjo5MCxcIi4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5XCI6OTIsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiOjkzLFwiLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzXCI6OTUsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMtZXh0ZXJuYWxcIjo5NCxcIi4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzXCI6OTYsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXNcIjo5OSxcIi4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZVwiOjEwMCxcIi4uL2ludGVybmFscy9yZWRlZmluZVwiOjEwOCxcIi4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZ1wiOjExNyxcIi4uL2ludGVybmFscy9zaGFyZWRcIjoxMjAsXCIuLi9pbnRlcm5hbHMvc2hhcmVkLWtleVwiOjExOCxcIi4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdFwiOjEzMixcIi4uL2ludGVybmFscy90by1vYmplY3RcIjoxMzUsXCIuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlXCI6MTM4LFwiLi4vaW50ZXJuYWxzL3VpZFwiOjE0MyxcIi4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZFwiOjE0NCxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0NixcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkXCI6MTQ1fV0sMTk3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCIpLG89ZShcIi4uL2ludGVybmFscy9hcnJheS1jb3B5LXdpdGhpblwiKSxpPW4uYVR5cGVkQXJyYXk7KDAsbi5leHBvcnRUeXBlZEFycmF5TWV0aG9kKShcImNvcHlXaXRoaW5cIixmdW5jdGlvbihlLHQscil7cmV0dXJuIG8uY2FsbChpKHRoaXMpLGUsdCwyPGFyZ3VtZW50cy5sZW5ndGg/cjp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktY29weS13aXRoaW5cIjoxNH1dLDE5ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLmV2ZXJ5LGk9bi5hVHlwZWRBcnJheTsoMCxuLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QpKFwiZXZlcnlcIixmdW5jdGlvbihlLHQpe3JldHVybiBvKGkodGhpcyksZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCI6MTl9XSwxOTk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWZpbGxcIiksaT1uLmFUeXBlZEFycmF5OygwLG4uZXhwb3J0VHlwZWRBcnJheU1ldGhvZCkoXCJmaWxsXCIsZnVuY3Rpb24oZSl7cmV0dXJuIG8uYXBwbHkoaSh0aGlzKSxhcmd1bWVudHMpfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktZmlsbFwiOjE1fV0sMjAwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCIpLHM9ZShcIi4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb25cIikuZmlsdGVyLGw9ZShcIi4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yXCIpLHU9bi5hVHlwZWRBcnJheSxjPW4uYVR5cGVkQXJyYXlDb25zdHJ1Y3RvcjsoMCxuLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QpKFwiZmlsdGVyXCIsZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9cyh1KHRoaXMpLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKSxuPWwodGhpcyx0aGlzLmNvbnN0cnVjdG9yKSxvPTAsaT1yLmxlbmd0aCxhPW5ldyhjKG4pKShpKTtvPGk7KWFbb109cltvKytdO3JldHVybiBhfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCI6MTksXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiOjEyMX1dLDIwMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLmZpbmRJbmRleCxpPW4uYVR5cGVkQXJyYXk7KDAsbi5leHBvcnRUeXBlZEFycmF5TWV0aG9kKShcImZpbmRJbmRleFwiLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8oaSh0aGlzKSxlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCl9KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIjoxMixcIi4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb25cIjoxOX1dLDIwMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLmZpbmQsaT1uLmFUeXBlZEFycmF5OygwLG4uZXhwb3J0VHlwZWRBcnJheU1ldGhvZCkoXCJmaW5kXCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhpKHRoaXMpLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKX0pfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyLFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiOjE5fV0sMjAzOltmdW5jdGlvbihlLHQscil7ZShcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiKShcIkZsb2F0MzJcIixmdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuKHRoaXMsZSx0LHIpfX0pfSx7XCIuLi9pbnRlcm5hbHMvdHlwZWQtYXJyYXktY29uc3RydWN0b3JcIjoxNDB9XSwyMDQ6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vaW50ZXJuYWxzL3R5cGVkLWFycmF5LWNvbnN0cnVjdG9yXCIpKFwiRmxvYXQ2NFwiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlLHQscil7cmV0dXJuIG4odGhpcyxlLHQscil9fSl9LHtcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiOjE0MH1dLDIwNTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLmZvckVhY2gsaT1uLmFUeXBlZEFycmF5OygwLG4uZXhwb3J0VHlwZWRBcnJheU1ldGhvZCkoXCJmb3JFYWNoXCIsZnVuY3Rpb24oZSx0KXtvKGkodGhpcyksZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCI6MTl9XSwyMDY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzXCIpLmluY2x1ZGVzLGk9bi5hVHlwZWRBcnJheTsoMCxuLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QpKFwiaW5jbHVkZXNcIixmdW5jdGlvbihlLHQpe3JldHVybiBvKGkodGhpcyksZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXNcIjoxOH1dLDIwNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXNcIikuaW5kZXhPZixpPW4uYVR5cGVkQXJyYXk7KDAsbi5leHBvcnRUeXBlZEFycmF5TWV0aG9kKShcImluZGV4T2ZcIixmdW5jdGlvbihlLHQpe3JldHVybiBvKGkodGhpcyksZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXNcIjoxOH1dLDIwODpbZnVuY3Rpb24oZSx0LHIpe2UoXCIuLi9pbnRlcm5hbHMvdHlwZWQtYXJyYXktY29uc3RydWN0b3JcIikoXCJJbnQxNlwiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlLHQscil7cmV0dXJuIG4odGhpcyxlLHQscil9fSl9LHtcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiOjE0MH1dLDIwOTpbZnVuY3Rpb24oZSx0LHIpe2UoXCIuLi9pbnRlcm5hbHMvdHlwZWQtYXJyYXktY29uc3RydWN0b3JcIikoXCJJbnQzMlwiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlLHQscil7cmV0dXJuIG4odGhpcyxlLHQscil9fSl9LHtcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiOjE0MH1dLDIxMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4oKXtyZXR1cm4gdS5jYWxsKGYodGhpcykpfXZhciBvPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLGk9ZShcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCIpLGE9ZShcIi4uL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIikscz1lKFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCIpKFwiaXRlcmF0b3JcIiksbD1vLlVpbnQ4QXJyYXksdT1hLnZhbHVlcyxjPWEua2V5cyxkPWEuZW50cmllcyxmPWkuYVR5cGVkQXJyYXksaD1pLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QscD1sJiZsLnByb3RvdHlwZVtzXSx5PSEhcCYmKFwidmFsdWVzXCI9PXAubmFtZXx8bnVsbD09cC5uYW1lKTtoKFwiZW50cmllc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGQuY2FsbChmKHRoaXMpKX0pLGgoXCJrZXlzXCIsZnVuY3Rpb24oKXtyZXR1cm4gYy5jYWxsKGYodGhpcykpfSksaChcInZhbHVlc1wiLG4sIXkpLGgocyxuLCF5KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIjoxMixcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OSxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0NixcIi4uL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTh9XSwyMTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1uLmFUeXBlZEFycmF5LGk9bi5leHBvcnRUeXBlZEFycmF5TWV0aG9kLGE9W10uam9pbjtpKFwiam9pblwiLGZ1bmN0aW9uKGUpe3JldHVybiBhLmFwcGx5KG8odGhpcyksYXJndW1lbnRzKX0pfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyfV0sMjEyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCIpLG89ZShcIi4uL2ludGVybmFscy9hcnJheS1sYXN0LWluZGV4LW9mXCIpLGk9bi5hVHlwZWRBcnJheTsoMCxuLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QpKFwibGFzdEluZGV4T2ZcIixmdW5jdGlvbihlKXtyZXR1cm4gby5hcHBseShpKHRoaXMpLGFyZ3VtZW50cyl9KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIjoxMixcIi4uL2ludGVybmFscy9hcnJheS1sYXN0LWluZGV4LW9mXCI6MjB9XSwyMTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiKS5tYXAsaT1lKFwiLi4vaW50ZXJuYWxzL3NwZWNpZXMtY29uc3RydWN0b3JcIiksYT1uLmFUeXBlZEFycmF5LHM9bi5hVHlwZWRBcnJheUNvbnN0cnVjdG9yOygwLG4uZXhwb3J0VHlwZWRBcnJheU1ldGhvZCkoXCJtYXBcIixmdW5jdGlvbihlLHQpe3JldHVybiBvKGEodGhpcyksZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDAsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3KHMoaShlLGUuY29uc3RydWN0b3IpKSkodCl9KX0pfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyLFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiOjE5LFwiLi4vaW50ZXJuYWxzL3NwZWNpZXMtY29uc3RydWN0b3JcIjoxMjF9XSwyMTQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LXJlZHVjZVwiKS5yaWdodCxpPW4uYVR5cGVkQXJyYXk7KDAsbi5leHBvcnRUeXBlZEFycmF5TWV0aG9kKShcInJlZHVjZVJpZ2h0XCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhpKHRoaXMpLGUsYXJndW1lbnRzLmxlbmd0aCwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktcmVkdWNlXCI6MjR9XSwyMTU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LXJlZHVjZVwiKS5sZWZ0LGk9bi5hVHlwZWRBcnJheTsoMCxuLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QpKFwicmVkdWNlXCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhpKHRoaXMpLGUsYXJndW1lbnRzLmxlbmd0aCwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvYXJyYXktcmVkdWNlXCI6MjR9XSwyMTY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIiksbz1uLmFUeXBlZEFycmF5LGk9bi5leHBvcnRUeXBlZEFycmF5TWV0aG9kLGE9TWF0aC5mbG9vcjtpKFwicmV2ZXJzZVwiLGZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9byh0aGlzKS5sZW5ndGgscj1hKHQvMiksbj0wO248cjspZT10aGlzW25dLHRoaXNbbisrXT10aGlzWy0tdF0sdGhpc1t0XT1lO3JldHVybiB0aGlzfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTJ9XSwyMTc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIikscz1lKFwiLi4vaW50ZXJuYWxzL3RvLWxlbmd0aFwiKSxsPWUoXCIuLi9pbnRlcm5hbHMvdG8tb2Zmc2V0XCIpLHU9ZShcIi4uL2ludGVybmFscy90by1vYmplY3RcIiksbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGM9bi5hVHlwZWRBcnJheTsoMCxuLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QpKFwic2V0XCIsZnVuY3Rpb24oZSx0KXtjKHRoaXMpO3ZhciByPWwoMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwLDEpLG49dGhpcy5sZW5ndGgsbz11KGUpLGk9cyhvLmxlbmd0aCksYT0wO2lmKG48aStyKXRocm93IFJhbmdlRXJyb3IoXCJXcm9uZyBsZW5ndGhcIik7Zm9yKDthPGk7KXRoaXNbcithXT1vW2ErK119LG8oZnVuY3Rpb24oKXtuZXcgSW50OEFycmF5KDEpLnNldCh7fSl9KSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvZmFpbHNcIjo1MCxcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzQsXCIuLi9pbnRlcm5hbHMvdG8tb2JqZWN0XCI6MTM1LFwiLi4vaW50ZXJuYWxzL3RvLW9mZnNldFwiOjEzNn1dLDIxODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksbD1uLmFUeXBlZEFycmF5LHU9bi5hVHlwZWRBcnJheUNvbnN0cnVjdG9yLGk9bi5leHBvcnRUeXBlZEFycmF5TWV0aG9kLGM9W10uc2xpY2U7aShcInNsaWNlXCIsZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9Yy5jYWxsKGwodGhpcyksZSx0KSxuPXModGhpcyx0aGlzLmNvbnN0cnVjdG9yKSxvPTAsaT1yLmxlbmd0aCxhPW5ldyh1KG4pKShpKTtvPGk7KWFbb109cltvKytdO3JldHVybiBhfSxvKGZ1bmN0aW9uKCl7bmV3IEludDhBcnJheSgxKS5zbGljZSgpfSkpfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyLFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiOjEyMX1dLDIxOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uXCIpLnNvbWUsaT1uLmFUeXBlZEFycmF5OygwLG4uZXhwb3J0VHlwZWRBcnJheU1ldGhvZCkoXCJzb21lXCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhpKHRoaXMpLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKX0pfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyLFwiLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvblwiOjE5fV0sMjIwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCIpLG89bi5hVHlwZWRBcnJheSxpPW4uZXhwb3J0VHlwZWRBcnJheU1ldGhvZCxhPVtdLnNvcnQ7aShcInNvcnRcIixmdW5jdGlvbihlKXtyZXR1cm4gYS5jYWxsKG8odGhpcyksZSl9KX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIjoxMn1dLDIyMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoXCIpLGE9ZShcIi4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleFwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiKSxsPW4uYVR5cGVkQXJyYXk7KDAsbi5leHBvcnRUeXBlZEFycmF5TWV0aG9kKShcInN1YmFycmF5XCIsZnVuY3Rpb24oZSx0KXt2YXIgcj1sKHRoaXMpLG49ci5sZW5ndGgsbz1hKGUsbik7cmV0dXJuIG5ldyhzKHIsci5jb25zdHJ1Y3RvcikpKHIuYnVmZmVyLHIuYnl0ZU9mZnNldCtvKnIuQllURVNfUEVSX0VMRU1FTlQsaSgodm9pZCAwPT09dD9uOmEodCxuKSktbykpfSl9LHtcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCI6MTIsXCIuLi9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3RvclwiOjEyMSxcIi4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleFwiOjEzMCxcIi4uL2ludGVybmFscy90by1sZW5ndGhcIjoxMzR9XSwyMjI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1lKFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiKSxvPWUoXCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiKSxpPWUoXCIuLi9pbnRlcm5hbHMvZmFpbHNcIiksYT1uLkludDhBcnJheSxzPW8uYVR5cGVkQXJyYXksbD1vLmV4cG9ydFR5cGVkQXJyYXlNZXRob2QsdT1bXS50b0xvY2FsZVN0cmluZyxjPVtdLnNsaWNlLGQ9ISFhJiZpKGZ1bmN0aW9uKCl7dS5jYWxsKG5ldyBhKDEpKX0pO2woXCJ0b0xvY2FsZVN0cmluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHUuYXBwbHkoZD9jLmNhbGwocyh0aGlzKSk6cyh0aGlzKSxhcmd1bWVudHMpfSxpKGZ1bmN0aW9uKCl7cmV0dXJuWzEsMl0udG9Mb2NhbGVTdHJpbmcoKSE9bmV3IGEoWzEsMl0pLnRvTG9jYWxlU3RyaW5nKCl9KXx8IWkoZnVuY3Rpb24oKXthLnByb3RvdHlwZS50b0xvY2FsZVN0cmluZy5jYWxsKFsxLDJdKX0pKX0se1wiLi4vaW50ZXJuYWxzL2FycmF5LWJ1ZmZlci12aWV3LWNvcmVcIjoxMixcIi4uL2ludGVybmFscy9mYWlsc1wiOjUwLFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5fV0sMjIzOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZShcIi4uL2ludGVybmFscy9hcnJheS1idWZmZXItdmlldy1jb3JlXCIpLmV4cG9ydFR5cGVkQXJyYXlNZXRob2Qsbz1lKFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCIpLGk9ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIikuVWludDhBcnJheSxhPWkmJmkucHJvdG90eXBlfHx7fSxzPVtdLnRvU3RyaW5nLGw9W10uam9pbjtvKGZ1bmN0aW9uKCl7cy5jYWxsKHt9KX0pJiYocz1mdW5jdGlvbigpe3JldHVybiBsLmNhbGwodGhpcyl9KSxuKFwidG9TdHJpbmdcIixzLGEudG9TdHJpbmchPXMpfSx7XCIuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLXZpZXctY29yZVwiOjEyLFwiLi4vaW50ZXJuYWxzL2ZhaWxzXCI6NTAsXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTl9XSwyMjQ6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vaW50ZXJuYWxzL3R5cGVkLWFycmF5LWNvbnN0cnVjdG9yXCIpKFwiVWludDE2XCIsZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbih0aGlzLGUsdCxyKX19KX0se1wiLi4vaW50ZXJuYWxzL3R5cGVkLWFycmF5LWNvbnN0cnVjdG9yXCI6MTQwfV0sMjI1OltmdW5jdGlvbihlLHQscil7ZShcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiKShcIlVpbnQzMlwiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlLHQscil7cmV0dXJuIG4odGhpcyxlLHQscil9fSl9LHtcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiOjE0MH1dLDIyNjpbZnVuY3Rpb24oZSx0LHIpe2UoXCIuLi9pbnRlcm5hbHMvdHlwZWQtYXJyYXktY29uc3RydWN0b3JcIikoXCJVaW50OFwiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlLHQscil7cmV0dXJuIG4odGhpcyxlLHQscil9fSl9LHtcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiOjE0MH1dLDIyNzpbZnVuY3Rpb24oZSx0LHIpe2UoXCIuLi9pbnRlcm5hbHMvdHlwZWQtYXJyYXktY29uc3RydWN0b3JcIikoXCJVaW50OFwiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlLHQscil7cmV0dXJuIG4odGhpcyxlLHQscil9fSwhMCl9LHtcIi4uL2ludGVybmFscy90eXBlZC1hcnJheS1jb25zdHJ1Y3RvclwiOjE0MH1dLDIyODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLG89ZShcIi4uL2ludGVybmFscy9kb20taXRlcmFibGVzXCIpLGk9ZShcIi4uL2ludGVybmFscy9hcnJheS1mb3ItZWFjaFwiKSxhPWUoXCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCIpO2Zvcih2YXIgcyBpbiBvKXt2YXIgbD1uW3NdLHU9bCYmbC5wcm90b3R5cGU7aWYodSYmdS5mb3JFYWNoIT09aSl0cnl7YSh1LFwiZm9yRWFjaFwiLGkpfWNhdGNoKGUpe3UuZm9yRWFjaD1pfX19LHtcIi4uL2ludGVybmFscy9hcnJheS1mb3ItZWFjaFwiOjE2LFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiOjM3LFwiLi4vaW50ZXJuYWxzL2RvbS1pdGVyYWJsZXNcIjo0NCxcIi4uL2ludGVybmFscy9nbG9iYWxcIjo1OX1dLDIyOTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCIpLG89ZShcIi4uL2ludGVybmFscy9kb20taXRlcmFibGVzXCIpLGk9ZShcIi4uL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksYT1lKFwiLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eVwiKSxzPWUoXCIuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2xcIiksbD1zKFwiaXRlcmF0b3JcIiksdT1zKFwidG9TdHJpbmdUYWdcIiksYz1pLnZhbHVlcztmb3IodmFyIGQgaW4gbyl7dmFyIGY9bltkXSxoPWYmJmYucHJvdG90eXBlO2lmKGgpe2lmKGhbbF0hPT1jKXRyeXthKGgsbCxjKX1jYXRjaChlKXtoW2xdPWN9aWYoaFt1XXx8YShoLHUsZCksb1tkXSlmb3IodmFyIHAgaW4gaSlpZihoW3BdIT09aVtwXSl0cnl7YShoLHAsaVtwXSl9Y2F0Y2goZSl7aFtwXT1pW3BdfX19fSx7XCIuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5XCI6MzcsXCIuLi9pbnRlcm5hbHMvZG9tLWl0ZXJhYmxlc1wiOjQ0LFwiLi4vaW50ZXJuYWxzL2dsb2JhbFwiOjU5LFwiLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sXCI6MTQ2LFwiLi4vbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OH1dLDIzMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCIuLi9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpO2Z1bmN0aW9uIG8odCl7dHJ5e3JldHVybiBkZWNvZGVVUklDb21wb25lbnQodCl9Y2F0Y2goZSl7cmV0dXJuIHR9fWZ1bmN0aW9uIGEoZSl7dmFyIHQscj1lLnJlcGxhY2UoVSxcIiBcIiksbj00O3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHIpfWNhdGNoKGUpe2Zvcig7bjspcj1yLnJlcGxhY2UoKHQ9bi0tLE5bdC0xXXx8KE5bdC0xXT1SZWdFeHAoXCIoKD86JVtcXFxcZGEtZl17Mn0pe1wiK3QrXCJ9KVwiLFwiZ2lcIikpKSxvKTtyZXR1cm4gcn19ZnVuY3Rpb24gbihlKXtyZXR1cm4gQltlXX1mdW5jdGlvbiBpKGUpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoZSkucmVwbGFjZShGLG4pfWZ1bmN0aW9uIGYoZSx0KXtpZih0KWZvcih2YXIgcixuLG89dC5zcGxpdChcIiZcIiksaT0wO2k8by5sZW5ndGg7KShyPW9baSsrXSkubGVuZ3RoJiYobj1yLnNwbGl0KFwiPVwiKSxlLnB1c2goe2tleTphKG4uc2hpZnQoKSksdmFsdWU6YShuLmpvaW4oXCI9XCIpKX0pKX1mdW5jdGlvbiBoKGUpe3RoaXMuZW50cmllcy5sZW5ndGg9MCxmKHRoaXMuZW50cmllcyxlKX1mdW5jdGlvbiB1KGUsdCl7aWYoZTx0KXRocm93IFR5cGVFcnJvcihcIk5vdCBlbm91Z2ggYXJndW1lbnRzXCIpfXZhciBzPWUoXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCIpLGw9ZShcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIiksYz1lKFwiLi4vaW50ZXJuYWxzL25hdGl2ZS11cmxcIiksZD1lKFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCIpLHA9ZShcIi4uL2ludGVybmFscy9yZWRlZmluZS1hbGxcIikseT1lKFwiLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnXCIpLG09ZShcIi4uL2ludGVybmFscy9jcmVhdGUtaXRlcmF0b3ItY29uc3RydWN0b3JcIiksZz1lKFwiLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlXCIpLHY9ZShcIi4uL2ludGVybmFscy9hbi1pbnN0YW5jZVwiKSxiPWUoXCIuLi9pbnRlcm5hbHMvaGFzXCIpLF89ZShcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIikseD1lKFwiLi4vaW50ZXJuYWxzL2NsYXNzb2ZcIiksdz1lKFwiLi4vaW50ZXJuYWxzL2FuLW9iamVjdFwiKSxqPWUoXCIuLi9pbnRlcm5hbHMvaXMtb2JqZWN0XCIpLFM9ZShcIi4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlXCIpLE09ZShcIi4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvclwiKSxFPWUoXCIuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yXCIpLFQ9ZShcIi4uL2ludGVybmFscy9nZXQtaXRlcmF0b3ItbWV0aG9kXCIpLE89ZShcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiKSxDPWwoXCJmZXRjaFwiKSxMPWwoXCJIZWFkZXJzXCIpLFA9TyhcIml0ZXJhdG9yXCIpLEE9XCJVUkxTZWFyY2hQYXJhbXNcIixrPUErXCJJdGVyYXRvclwiLFI9Zy5zZXQsRD1nLmdldHRlckZvcihBKSxJPWcuZ2V0dGVyRm9yKGspLFU9L1xcKy9nLE49QXJyYXkoNCksRj0vWyEnKCl+XXwlMjAvZyxCPXtcIiFcIjpcIiUyMVwiLFwiJ1wiOlwiJTI3XCIsXCIoXCI6XCIlMjhcIixcIilcIjpcIiUyOVwiLFwiflwiOlwiJTdFXCIsXCIlMjBcIjpcIitcIn0sRz1tKGZ1bmN0aW9uKGUsdCl7Uih0aGlzLHt0eXBlOmssaXRlcmF0b3I6RShEKGUpLmVudHJpZXMpLGtpbmQ6dH0pfSxcIkl0ZXJhdG9yXCIsZnVuY3Rpb24oKXt2YXIgZT1JKHRoaXMpLHQ9ZS5raW5kLHI9ZS5pdGVyYXRvci5uZXh0KCksbj1yLnZhbHVlO3JldHVybiByLmRvbmV8fChyLnZhbHVlPVwia2V5c1wiPT09dD9uLmtleTpcInZhbHVlc1wiPT09dD9uLnZhbHVlOltuLmtleSxuLnZhbHVlXSkscn0pLFY9ZnVuY3Rpb24oZSl7dih0aGlzLFYsQSk7dmFyIHQscixuLG8saSxhLHMsbCx1LGM9MDxhcmd1bWVudHMubGVuZ3RoP2U6dm9pZCAwLGQ9W107aWYoUih0aGlzLHt0eXBlOkEsZW50cmllczpkLHVwZGF0ZVVSTDpmdW5jdGlvbigpe30sdXBkYXRlU2VhcmNoUGFyYW1zOmh9KSx2b2lkIDAhPT1jKWlmKGooYykpaWYoXCJmdW5jdGlvblwiPT10eXBlb2YodD1UKGMpKSlmb3Iobj0ocj10LmNhbGwoYykpLm5leHQ7IShvPW4uY2FsbChyKSkuZG9uZTspe2lmKChzPShhPShpPUUodyhvLnZhbHVlKSkpLm5leHQpLmNhbGwoaSkpLmRvbmV8fChsPWEuY2FsbChpKSkuZG9uZXx8IWEuY2FsbChpKS5kb25lKXRocm93IFR5cGVFcnJvcihcIkV4cGVjdGVkIHNlcXVlbmNlIHdpdGggbGVuZ3RoIDJcIik7ZC5wdXNoKHtrZXk6cy52YWx1ZStcIlwiLHZhbHVlOmwudmFsdWUrXCJcIn0pfWVsc2UgZm9yKHUgaW4gYyliKGMsdSkmJmQucHVzaCh7a2V5OnUsdmFsdWU6Y1t1XStcIlwifSk7ZWxzZSBmKGQsXCJzdHJpbmdcIj09dHlwZW9mIGM/XCI/XCI9PT1jLmNoYXJBdCgwKT9jLnNsaWNlKDEpOmM6YytcIlwiKX0sej1WLnByb3RvdHlwZTtwKHose2FwcGVuZDpmdW5jdGlvbihlLHQpe3UoYXJndW1lbnRzLmxlbmd0aCwyKTt2YXIgcj1EKHRoaXMpO3IuZW50cmllcy5wdXNoKHtrZXk6ZStcIlwiLHZhbHVlOnQrXCJcIn0pLHIudXBkYXRlVVJMKCl9LGRlbGV0ZTpmdW5jdGlvbihlKXt1KGFyZ3VtZW50cy5sZW5ndGgsMSk7Zm9yKHZhciB0PUQodGhpcykscj10LmVudHJpZXMsbj1lK1wiXCIsbz0wO288ci5sZW5ndGg7KXJbb10ua2V5PT09bj9yLnNwbGljZShvLDEpOm8rKzt0LnVwZGF0ZVVSTCgpfSxnZXQ6ZnVuY3Rpb24oZSl7dShhcmd1bWVudHMubGVuZ3RoLDEpO2Zvcih2YXIgdD1EKHRoaXMpLmVudHJpZXMscj1lK1wiXCIsbj0wO248dC5sZW5ndGg7bisrKWlmKHRbbl0ua2V5PT09cilyZXR1cm4gdFtuXS52YWx1ZTtyZXR1cm4gbnVsbH0sZ2V0QWxsOmZ1bmN0aW9uKGUpe3UoYXJndW1lbnRzLmxlbmd0aCwxKTtmb3IodmFyIHQ9RCh0aGlzKS5lbnRyaWVzLHI9ZStcIlwiLG49W10sbz0wO288dC5sZW5ndGg7bysrKXRbb10ua2V5PT09ciYmbi5wdXNoKHRbb10udmFsdWUpO3JldHVybiBufSxoYXM6ZnVuY3Rpb24oZSl7dShhcmd1bWVudHMubGVuZ3RoLDEpO2Zvcih2YXIgdD1EKHRoaXMpLmVudHJpZXMscj1lK1wiXCIsbj0wO248dC5sZW5ndGg7KWlmKHRbbisrXS5rZXk9PT1yKXJldHVybiEwO3JldHVybiExfSxzZXQ6ZnVuY3Rpb24oZSx0KXt1KGFyZ3VtZW50cy5sZW5ndGgsMSk7Zm9yKHZhciByLG49RCh0aGlzKSxvPW4uZW50cmllcyxpPSExLGE9ZStcIlwiLHM9dCtcIlwiLGw9MDtsPG8ubGVuZ3RoO2wrKykocj1vW2xdKS5rZXk9PT1hJiYoaT9vLnNwbGljZShsLS0sMSk6KGk9ITAsci52YWx1ZT1zKSk7aXx8by5wdXNoKHtrZXk6YSx2YWx1ZTpzfSksbi51cGRhdGVVUkwoKX0sc29ydDpmdW5jdGlvbigpe3ZhciBlLHQscixuPUQodGhpcyksbz1uLmVudHJpZXMsaT1vLnNsaWNlKCk7Zm9yKHI9by5sZW5ndGg9MDtyPGkubGVuZ3RoO3IrKyl7Zm9yKGU9aVtyXSx0PTA7dDxyO3QrKylpZihvW3RdLmtleT5lLmtleSl7by5zcGxpY2UodCwwLGUpO2JyZWFrfXQ9PT1yJiZvLnB1c2goZSl9bi51cGRhdGVVUkwoKX0sZm9yRWFjaDpmdW5jdGlvbihlLHQpe2Zvcih2YXIgcixuPUQodGhpcykuZW50cmllcyxvPV8oZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDAsMyksaT0wO2k8bi5sZW5ndGg7KW8oKHI9bltpKytdKS52YWx1ZSxyLmtleSx0aGlzKX0sa2V5czpmdW5jdGlvbigpe3JldHVybiBuZXcgRyh0aGlzLFwia2V5c1wiKX0sdmFsdWVzOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBHKHRoaXMsXCJ2YWx1ZXNcIil9LGVudHJpZXM6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEcodGhpcyxcImVudHJpZXNcIil9fSx7ZW51bWVyYWJsZTohMH0pLGQoeixQLHouZW50cmllcyksZCh6LFwidG9TdHJpbmdcIixmdW5jdGlvbigpe2Zvcih2YXIgZSx0PUQodGhpcykuZW50cmllcyxyPVtdLG49MDtuPHQubGVuZ3RoOyllPXRbbisrXSxyLnB1c2goaShlLmtleSkrXCI9XCIraShlLnZhbHVlKSk7cmV0dXJuIHIuam9pbihcIiZcIil9LHtlbnVtZXJhYmxlOiEwfSkseShWLEEpLHMoe2dsb2JhbDohMCxmb3JjZWQ6IWN9LHtVUkxTZWFyY2hQYXJhbXM6Vn0pLGN8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIEN8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIEx8fHMoe2dsb2JhbDohMCxlbnVtZXJhYmxlOiEwLGZvcmNlZDohMH0se2ZldGNoOmZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLGk9W2VdO3JldHVybiAxPGFyZ3VtZW50cy5sZW5ndGgmJihqKHI9dCkmJihuPXIuYm9keSx4KG4pPT09QSYmKChvPXIuaGVhZGVycz9uZXcgTChyLmhlYWRlcnMpOm5ldyBMKS5oYXMoXCJjb250ZW50LXR5cGVcIil8fG8uc2V0KFwiY29udGVudC10eXBlXCIsXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD1VVEYtOFwiKSxyPVMocix7Ym9keTpNKDAsU3RyaW5nKG4pKSxoZWFkZXJzOk0oMCxvKX0pKSksaS5wdXNoKHIpKSxDLmFwcGx5KHRoaXMsaSl9fSksdC5leHBvcnRzPXtVUkxTZWFyY2hQYXJhbXM6VixnZXRTdGF0ZTpEfX0se1wiLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlXCI6OSxcIi4uL2ludGVybmFscy9hbi1vYmplY3RcIjoxMCxcIi4uL2ludGVybmFscy9jbGFzc29mXCI6MjksXCIuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXJhdG9yLWNvbnN0cnVjdG9yXCI6MzYsXCIuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3JcIjozOCxcIi4uL2ludGVybmFscy9leHBvcnRcIjo0OSxcIi4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHRcIjo1NCxcIi4uL2ludGVybmFscy9nZXQtYnVpbHQtaW5cIjo1NixcIi4uL2ludGVybmFscy9nZXQtaXRlcmF0b3JcIjo1OCxcIi4uL2ludGVybmFscy9nZXQtaXRlcmF0b3ItbWV0aG9kXCI6NTcsXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGVcIjo3MCxcIi4uL2ludGVybmFscy9pcy1vYmplY3RcIjo3NCxcIi4uL2ludGVybmFscy9uYXRpdmUtdXJsXCI6ODQsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZVwiOjkwLFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCI6MTA4LFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lLWFsbFwiOjEwNyxcIi4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZ1wiOjExNyxcIi4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbFwiOjE0NixcIi4uL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTh9XSwyMzE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiLi4vbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIik7ZnVuY3Rpb24gXyhlLHQpe3ZhciByLG4sbztpZihcIltcIj09dC5jaGFyQXQoMCkpe2lmKFwiXVwiIT10LmNoYXJBdCh0Lmxlbmd0aC0xKSlyZXR1cm4gSTtpZighKHI9USh0LnNsaWNlKDEsLTEpKSkpcmV0dXJuIEk7ZS5ob3N0PXJ9ZWxzZSBpZihuZShlKSl7aWYodD1tKHQpLFcudGVzdCh0KSlyZXR1cm4gSTtpZihudWxsPT09KHI9Wih0KSkpcmV0dXJuIEk7ZS5ob3N0PXJ9ZWxzZXtpZihxLnRlc3QodCkpcmV0dXJuIEk7Zm9yKHI9XCJcIixuPVQodCksbz0wO288bi5sZW5ndGg7bysrKXIrPXRlKG5bb10sSyk7ZS5ob3N0PXJ9fWZ1bmN0aW9uIGMoZSl7dmFyIHQscixuLG87aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpe2Zvcih0PVtdLHI9MDtyPDQ7cisrKXQudW5zaGlmdChlJTI1NiksZT1rKGUvMjU2KTtyZXR1cm4gdC5qb2luKFwiLlwiKX1pZihcIm9iamVjdFwiIT10eXBlb2YgZSlyZXR1cm4gZTtmb3IodD1cIlwiLG49ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW51bGwscj0xLG49bnVsbCxvPTAsaT0wO2k8ODtpKyspMCE9PWVbaV0/KHI8byYmKHQ9bixyPW8pLG49bnVsbCxvPTApOihudWxsPT09biYmKG49aSksKytvKTtyZXR1cm4gcjxvJiYodD1uLHI9byksdH0oZSkscj0wO3I8ODtyKyspbyYmMD09PWVbcl18fChvPW8mJiExLG49PT1yPyh0Kz1yP1wiOlwiOlwiOjpcIixvPSEwKToodCs9ZVtyXS50b1N0cmluZygxNikscjw3JiYodCs9XCI6XCIpKSk7cmV0dXJuXCJbXCIrdCtcIl1cIn1mdW5jdGlvbiB4KGUpe3JldHVyblwiXCIhPWUudXNlcm5hbWV8fFwiXCIhPWUucGFzc3dvcmR9ZnVuY3Rpb24gbyhlKXtyZXR1cm4hZS5ob3N0fHxlLmNhbm5vdEJlQUJhc2VVUkx8fFwiZmlsZVwiPT1lLnNjaGVtZX1mdW5jdGlvbiB3KGUsdCl7dmFyIHI7cmV0dXJuIDI9PWUubGVuZ3RoJiZOLnRlc3QoZS5jaGFyQXQoMCkpJiYoXCI6XCI9PShyPWUuY2hhckF0KDEpKXx8IXQmJlwifFwiPT1yKX1mdW5jdGlvbiBqKGUpe3ZhciB0O3JldHVybiAxPGUubGVuZ3RoJiZ3KGUuc2xpY2UoMCwyKSkmJigyPT1lLmxlbmd0aHx8XCIvXCI9PT0odD1lLmNoYXJBdCgyKSl8fFwiXFxcXFwiPT09dHx8XCI/XCI9PT10fHxcIiNcIj09PXQpfWZ1bmN0aW9uIFMoZSl7dmFyIHQ9ZS5wYXRoLHI9dC5sZW5ndGg7IXJ8fFwiZmlsZVwiPT1lLnNjaGVtZSYmMT09ciYmdyh0WzBdLCEwKXx8dC5wb3AoKX1mdW5jdGlvbiBkKGUsdCxyLG4pe3ZhciBvLGksYSxzLGwsdSxjPXJ8fG9lLGQ9MCxmPVwiXCIsaD0hMSxwPSExLHk9ITE7Zm9yKHJ8fChlLnNjaGVtZT1cIlwiLGUudXNlcm5hbWU9XCJcIixlLnBhc3N3b3JkPVwiXCIsZS5ob3N0PW51bGwsZS5wb3J0PW51bGwsZS5wYXRoPVtdLGUucXVlcnk9bnVsbCxlLmZyYWdtZW50PW51bGwsZS5jYW5ub3RCZUFCYXNlVVJMPSExLHQ9dC5yZXBsYWNlKFgsXCJcIikpLHQ9dC5yZXBsYWNlKFksXCJcIiksbz1UKHQpO2Q8PW8ubGVuZ3RoOyl7c3dpdGNoKGk9b1tkXSxjKXtjYXNlIG9lOmlmKCFpfHwhTi50ZXN0KGkpKXtpZihyKXJldHVybiBEO2M9YWU7Y29udGludWV9Zis9aS50b0xvd2VyQ2FzZSgpLGM9aWU7YnJlYWs7Y2FzZSBpZTppZihpJiYoRi50ZXN0KGkpfHxcIitcIj09aXx8XCItXCI9PWl8fFwiLlwiPT1pKSlmKz1pLnRvTG93ZXJDYXNlKCk7ZWxzZXtpZihcIjpcIiE9aSl7aWYocilyZXR1cm4gRDtmPVwiXCIsYz1hZSxkPTA7Y29udGludWV9aWYociYmKG5lKGUpIT1FKHJlLGYpfHxcImZpbGVcIj09ZiYmKHgoZSl8fG51bGwhPT1lLnBvcnQpfHxcImZpbGVcIj09ZS5zY2hlbWUmJiFlLmhvc3QpKXJldHVybjtpZihlLnNjaGVtZT1mLHIpcmV0dXJuIHZvaWQobmUoZSkmJnJlW2Uuc2NoZW1lXT09ZS5wb3J0JiYoZS5wb3J0PW51bGwpKTtmPVwiXCIsXCJmaWxlXCI9PWUuc2NoZW1lP2M9Z2U6bmUoZSkmJm4mJm4uc2NoZW1lPT1lLnNjaGVtZT9jPXNlOm5lKGUpP2M9ZGU6XCIvXCI9PW9bZCsxXT8oYz1sZSxkKyspOihlLmNhbm5vdEJlQUJhc2VVUkw9ITAsZS5wYXRoLnB1c2goXCJcIiksYz13ZSl9YnJlYWs7Y2FzZSBhZTppZighbnx8bi5jYW5ub3RCZUFCYXNlVVJMJiZcIiNcIiE9aSlyZXR1cm4gRDtpZihuLmNhbm5vdEJlQUJhc2VVUkwmJlwiI1wiPT1pKXtlLnNjaGVtZT1uLnNjaGVtZSxlLnBhdGg9bi5wYXRoLnNsaWNlKCksZS5xdWVyeT1uLnF1ZXJ5LGUuZnJhZ21lbnQ9XCJcIixlLmNhbm5vdEJlQUJhc2VVUkw9ITAsYz1TZTticmVha31jPVwiZmlsZVwiPT1uLnNjaGVtZT9nZTp1ZTtjb250aW51ZTtjYXNlIHNlOmlmKFwiL1wiIT1pfHxcIi9cIiE9b1tkKzFdKXtjPXVlO2NvbnRpbnVlfWM9ZmUsZCsrO2JyZWFrO2Nhc2UgbGU6aWYoXCIvXCI9PWkpe2M9aGU7YnJlYWt9Yz14ZTtjb250aW51ZTtjYXNlIHVlOmlmKGUuc2NoZW1lPW4uc2NoZW1lLGk9PU0pZS51c2VybmFtZT1uLnVzZXJuYW1lLGUucGFzc3dvcmQ9bi5wYXNzd29yZCxlLmhvc3Q9bi5ob3N0LGUucG9ydD1uLnBvcnQsZS5wYXRoPW4ucGF0aC5zbGljZSgpLGUucXVlcnk9bi5xdWVyeTtlbHNlIGlmKFwiL1wiPT1pfHxcIlxcXFxcIj09aSYmbmUoZSkpYz1jZTtlbHNlIGlmKFwiP1wiPT1pKWUudXNlcm5hbWU9bi51c2VybmFtZSxlLnBhc3N3b3JkPW4ucGFzc3dvcmQsZS5ob3N0PW4uaG9zdCxlLnBvcnQ9bi5wb3J0LGUucGF0aD1uLnBhdGguc2xpY2UoKSxlLnF1ZXJ5PVwiXCIsYz1qZTtlbHNle2lmKFwiI1wiIT1pKXtlLnVzZXJuYW1lPW4udXNlcm5hbWUsZS5wYXNzd29yZD1uLnBhc3N3b3JkLGUuaG9zdD1uLmhvc3QsZS5wb3J0PW4ucG9ydCxlLnBhdGg9bi5wYXRoLnNsaWNlKCksZS5wYXRoLnBvcCgpLGM9eGU7Y29udGludWV9ZS51c2VybmFtZT1uLnVzZXJuYW1lLGUucGFzc3dvcmQ9bi5wYXNzd29yZCxlLmhvc3Q9bi5ob3N0LGUucG9ydD1uLnBvcnQsZS5wYXRoPW4ucGF0aC5zbGljZSgpLGUucXVlcnk9bi5xdWVyeSxlLmZyYWdtZW50PVwiXCIsYz1TZX1icmVhaztjYXNlIGNlOmlmKCFuZShlKXx8XCIvXCIhPWkmJlwiXFxcXFwiIT1pKXtpZihcIi9cIiE9aSl7ZS51c2VybmFtZT1uLnVzZXJuYW1lLGUucGFzc3dvcmQ9bi5wYXNzd29yZCxlLmhvc3Q9bi5ob3N0LGUucG9ydD1uLnBvcnQsYz14ZTtjb250aW51ZX1jPWhlfWVsc2UgYz1mZTticmVhaztjYXNlIGRlOmlmKGM9ZmUsXCIvXCIhPWl8fFwiL1wiIT1mLmNoYXJBdChkKzEpKWNvbnRpbnVlO2QrKzticmVhaztjYXNlIGZlOmlmKFwiL1wiPT1pfHxcIlxcXFxcIj09aSlicmVhaztjPWhlO2NvbnRpbnVlO2Nhc2UgaGU6aWYoXCJAXCI9PWkpe2gmJihmPVwiJTQwXCIrZiksaD0hMCxhPVQoZik7Zm9yKHZhciBtPTA7bTxhLmxlbmd0aDttKyspe3ZhciBnPWFbbV07aWYoXCI6XCIhPWd8fHkpe3ZhciB2PXRlKGcsZWUpO3k/ZS5wYXNzd29yZCs9djplLnVzZXJuYW1lKz12fWVsc2UgeT0hMH1mPVwiXCJ9ZWxzZSBpZihpPT1NfHxcIi9cIj09aXx8XCI/XCI9PWl8fFwiI1wiPT1pfHxcIlxcXFxcIj09aSYmbmUoZSkpe2lmKGgmJlwiXCI9PWYpcmV0dXJuXCJJbnZhbGlkIGF1dGhvcml0eVwiO2QtPVQoZikubGVuZ3RoKzEsZj1cIlwiLGM9cGV9ZWxzZSBmKz1pO2JyZWFrO2Nhc2UgcGU6Y2FzZSB5ZTppZihyJiZcImZpbGVcIj09ZS5zY2hlbWUpe2M9YmU7Y29udGludWV9aWYoXCI6XCIhPWl8fHApe2lmKGk9PU18fFwiL1wiPT1pfHxcIj9cIj09aXx8XCIjXCI9PWl8fFwiXFxcXFwiPT1pJiZuZShlKSl7aWYobmUoZSkmJlwiXCI9PWYpcmV0dXJuIEk7aWYociYmXCJcIj09ZiYmKHgoZSl8fG51bGwhPT1lLnBvcnQpKXJldHVybjtpZihzPV8oZSxmKSlyZXR1cm4gcztpZihmPVwiXCIsYz1fZSxyKXJldHVybjtjb250aW51ZX1cIltcIj09aT9wPSEwOlwiXVwiPT1pJiYocD0hMSksZis9aX1lbHNle2lmKFwiXCI9PWYpcmV0dXJuIEk7aWYocz1fKGUsZikpcmV0dXJuIHM7aWYoZj1cIlwiLGM9bWUscj09eWUpcmV0dXJufWJyZWFrO2Nhc2UgbWU6aWYoIUIudGVzdChpKSl7aWYoaT09TXx8XCIvXCI9PWl8fFwiP1wiPT1pfHxcIiNcIj09aXx8XCJcXFxcXCI9PWkmJm5lKGUpfHxyKXtpZihcIlwiIT1mKXt2YXIgYj1wYXJzZUludChmLDEwKTtpZig2NTUzNTxiKXJldHVybiBVO2UucG9ydD1uZShlKSYmYj09PXJlW2Uuc2NoZW1lXT9udWxsOmIsZj1cIlwifWlmKHIpcmV0dXJuO2M9X2U7Y29udGludWV9cmV0dXJuIFV9Zis9aTticmVhaztjYXNlIGdlOmlmKGUuc2NoZW1lPVwiZmlsZVwiLFwiL1wiPT1pfHxcIlxcXFxcIj09aSljPXZlO2Vsc2V7aWYoIW58fFwiZmlsZVwiIT1uLnNjaGVtZSl7Yz14ZTtjb250aW51ZX1pZihpPT1NKWUuaG9zdD1uLmhvc3QsZS5wYXRoPW4ucGF0aC5zbGljZSgpLGUucXVlcnk9bi5xdWVyeTtlbHNlIGlmKFwiP1wiPT1pKWUuaG9zdD1uLmhvc3QsZS5wYXRoPW4ucGF0aC5zbGljZSgpLGUucXVlcnk9XCJcIixjPWplO2Vsc2V7aWYoXCIjXCIhPWkpe2ooby5zbGljZShkKS5qb2luKFwiXCIpKXx8KGUuaG9zdD1uLmhvc3QsZS5wYXRoPW4ucGF0aC5zbGljZSgpLFMoZSkpLGM9eGU7Y29udGludWV9ZS5ob3N0PW4uaG9zdCxlLnBhdGg9bi5wYXRoLnNsaWNlKCksZS5xdWVyeT1uLnF1ZXJ5LGUuZnJhZ21lbnQ9XCJcIixjPVNlfX1icmVhaztjYXNlIHZlOmlmKFwiL1wiPT1pfHxcIlxcXFxcIj09aSl7Yz1iZTticmVha31uJiZcImZpbGVcIj09bi5zY2hlbWUmJiFqKG8uc2xpY2UoZCkuam9pbihcIlwiKSkmJih3KG4ucGF0aFswXSwhMCk/ZS5wYXRoLnB1c2gobi5wYXRoWzBdKTplLmhvc3Q9bi5ob3N0KSxjPXhlO2NvbnRpbnVlO2Nhc2UgYmU6aWYoaT09TXx8XCIvXCI9PWl8fFwiXFxcXFwiPT1pfHxcIj9cIj09aXx8XCIjXCI9PWkpe2lmKCFyJiZ3KGYpKWM9eGU7ZWxzZSBpZihcIlwiPT1mKXtpZihlLmhvc3Q9XCJcIixyKXJldHVybjtjPV9lfWVsc2V7aWYocz1fKGUsZikpcmV0dXJuIHM7aWYoXCJsb2NhbGhvc3RcIj09ZS5ob3N0JiYoZS5ob3N0PVwiXCIpLHIpcmV0dXJuO2Y9XCJcIixjPV9lfWNvbnRpbnVlfWYrPWk7YnJlYWs7Y2FzZSBfZTppZihuZShlKSl7aWYoYz14ZSxcIi9cIiE9aSYmXCJcXFxcXCIhPWkpY29udGludWV9ZWxzZSBpZihyfHxcIj9cIiE9aSlpZihyfHxcIiNcIiE9aSl7aWYoaSE9TSYmKGM9eGUsXCIvXCIhPWkpKWNvbnRpbnVlfWVsc2UgZS5mcmFnbWVudD1cIlwiLGM9U2U7ZWxzZSBlLnF1ZXJ5PVwiXCIsYz1qZTticmVhaztjYXNlIHhlOmlmKGk9PU18fFwiL1wiPT1pfHxcIlxcXFxcIj09aSYmbmUoZSl8fCFyJiYoXCI/XCI9PWl8fFwiI1wiPT1pKSl7aWYoXCIuLlwiPT09KHU9KHU9ZikudG9Mb3dlckNhc2UoKSl8fFwiJTJlLlwiPT09dXx8XCIuJTJlXCI9PT11fHxcIiUyZSUyZVwiPT09dT8oUyhlKSxcIi9cIj09aXx8XCJcXFxcXCI9PWkmJm5lKGUpfHxlLnBhdGgucHVzaChcIlwiKSk6XCIuXCI9PT0obD1mKXx8XCIlMmVcIj09PWwudG9Mb3dlckNhc2UoKT9cIi9cIj09aXx8XCJcXFxcXCI9PWkmJm5lKGUpfHxlLnBhdGgucHVzaChcIlwiKTooXCJmaWxlXCI9PWUuc2NoZW1lJiYhZS5wYXRoLmxlbmd0aCYmdyhmKSYmKGUuaG9zdCYmKGUuaG9zdD1cIlwiKSxmPWYuY2hhckF0KDApK1wiOlwiKSxlLnBhdGgucHVzaChmKSksZj1cIlwiLFwiZmlsZVwiPT1lLnNjaGVtZSYmKGk9PU18fFwiP1wiPT1pfHxcIiNcIj09aSkpZm9yKDsxPGUucGF0aC5sZW5ndGgmJlwiXCI9PT1lLnBhdGhbMF07KWUucGF0aC5zaGlmdCgpO1wiP1wiPT1pPyhlLnF1ZXJ5PVwiXCIsYz1qZSk6XCIjXCI9PWkmJihlLmZyYWdtZW50PVwiXCIsYz1TZSl9ZWxzZSBmKz10ZShpLCQpO2JyZWFrO2Nhc2Ugd2U6XCI/XCI9PWk/KGUucXVlcnk9XCJcIixjPWplKTpcIiNcIj09aT8oZS5mcmFnbWVudD1cIlwiLGM9U2UpOmkhPU0mJihlLnBhdGhbMF0rPXRlKGksSykpO2JyZWFrO2Nhc2UgamU6cnx8XCIjXCIhPWk/aSE9TSYmKFwiJ1wiPT1pJiZuZShlKT9lLnF1ZXJ5Kz1cIiUyN1wiOmUucXVlcnkrPVwiI1wiPT1pP1wiJTIzXCI6dGUoaSxLKSk6KGUuZnJhZ21lbnQ9XCJcIixjPVNlKTticmVhaztjYXNlIFNlOmkhPU0mJihlLmZyYWdtZW50Kz10ZShpLEopKX1kKyt9fWZ1bmN0aW9uIG4oZSx0KXtyZXR1cm57Z2V0OmUsc2V0OnQsY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITB9fXZhciBNLGk9ZShcIi4uL2ludGVybmFscy9leHBvcnRcIiksZj1lKFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCIpLGE9ZShcIi4uL2ludGVybmFscy9uYXRpdmUtdXJsXCIpLHM9ZShcIi4uL2ludGVybmFscy9nbG9iYWxcIiksbD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydGllc1wiKSx1PWUoXCIuLi9pbnRlcm5hbHMvcmVkZWZpbmVcIiksaD1lKFwiLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlXCIpLEU9ZShcIi4uL2ludGVybmFscy9oYXNcIikscD1lKFwiLi4vaW50ZXJuYWxzL29iamVjdC1hc3NpZ25cIiksVD1lKFwiLi4vaW50ZXJuYWxzL2FycmF5LWZyb21cIikseT1lKFwiLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGVcIikuY29kZUF0LG09ZShcIi4uL2ludGVybmFscy9zdHJpbmctcHVueWNvZGUtdG8tYXNjaWlcIiksZz1lKFwiLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnXCIpLHY9ZShcIi4uL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zXCIpLGI9ZShcIi4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZVwiKSxPPXMuVVJMLEM9di5VUkxTZWFyY2hQYXJhbXMsTD12LmdldFN0YXRlLFA9Yi5zZXQsQT1iLmdldHRlckZvcihcIlVSTFwiKSxrPU1hdGguZmxvb3IsUj1NYXRoLnBvdyxEPVwiSW52YWxpZCBzY2hlbWVcIixJPVwiSW52YWxpZCBob3N0XCIsVT1cIkludmFsaWQgcG9ydFwiLE49L1tBLVphLXpdLyxGPS9bXFxkKy0uQS1aYS16XS8sQj0vXFxkLyxHPS9eKDB4fDBYKS8sVj0vXlswLTddKyQvLHo9L15cXGQrJC8sSD0vXltcXGRBLUZhLWZdKyQvLFc9L1tcXHUwMDAwXFx1MDAwOVxcdTAwMEFcXHUwMDBEICMlLzo/QFtcXFxcXV0vLHE9L1tcXHUwMDAwXFx1MDAwOVxcdTAwMEFcXHUwMDBEICMvOj9AW1xcXFxdXS8sWD0vXltcXHUwMDAwLVxcdTAwMUYgXSt8W1xcdTAwMDAtXFx1MDAxRiBdKyQvZyxZPS9bXFx1MDAwOVxcdTAwMEFcXHUwMDBEXS9nLFo9ZnVuY3Rpb24oZSl7dmFyIHQscixuLG8saSxhLHMsbD1lLnNwbGl0KFwiLlwiKTtpZihsLmxlbmd0aCYmXCJcIj09bFtsLmxlbmd0aC0xXSYmbC5wb3AoKSw0PCh0PWwubGVuZ3RoKSlyZXR1cm4gZTtmb3Iocj1bXSxuPTA7bjx0O24rKyl7aWYoXCJcIj09KG89bFtuXSkpcmV0dXJuIGU7aWYoaT0xMCwxPG8ubGVuZ3RoJiZcIjBcIj09by5jaGFyQXQoMCkmJihpPUcudGVzdChvKT8xNjo4LG89by5zbGljZSg4PT1pPzE6MikpLFwiXCI9PT1vKWE9MDtlbHNle2lmKCEoMTA9PWk/ejo4PT1pP1Y6SCkudGVzdChvKSlyZXR1cm4gZTthPXBhcnNlSW50KG8saSl9ci5wdXNoKGEpfWZvcihuPTA7bjx0O24rKylpZihhPXJbbl0sbj09dC0xKXtpZihhPj1SKDI1Niw1LXQpKXJldHVybiBudWxsfWVsc2UgaWYoMjU1PGEpcmV0dXJuIG51bGw7Zm9yKHM9ci5wb3AoKSxuPTA7bjxyLmxlbmd0aDtuKyspcys9cltuXSpSKDI1NiwzLW4pO3JldHVybiBzfSxRPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gZS5jaGFyQXQoZil9dmFyIHIsbixvLGksYSxzLGwsdT1bMCwwLDAsMCwwLDAsMCwwXSxjPTAsZD1udWxsLGY9MDtpZihcIjpcIj09dCgpKXtpZihcIjpcIiE9ZS5jaGFyQXQoMSkpcmV0dXJuO2YrPTIsZD0rK2N9Zm9yKDt0KCk7KXtpZig4PT1jKXJldHVybjtpZihcIjpcIiE9dCgpKXtmb3Iocj1uPTA7bjw0JiZILnRlc3QodCgpKTspcj0xNipyK3BhcnNlSW50KHQoKSwxNiksZisrLG4rKztpZihcIi5cIj09dCgpKXtpZigwPT1uKXJldHVybjtpZihmLT1uLDY8YylyZXR1cm47Zm9yKG89MDt0KCk7KXtpZihpPW51bGwsMDxvKXtpZighKFwiLlwiPT10KCkmJm88NCkpcmV0dXJuO2YrK31pZighQi50ZXN0KHQoKSkpcmV0dXJuO2Zvcig7Qi50ZXN0KHQoKSk7KXtpZihhPXBhcnNlSW50KHQoKSwxMCksbnVsbD09PWkpaT1hO2Vsc2V7aWYoMD09aSlyZXR1cm47aT0xMCppK2F9aWYoMjU1PGkpcmV0dXJuO2YrK311W2NdPTI1Nip1W2NdK2ksMiE9KytvJiY0IT1vfHxjKyt9aWYoNCE9bylyZXR1cm47YnJlYWt9aWYoXCI6XCI9PXQoKSl7aWYoZisrLCF0KCkpcmV0dXJufWVsc2UgaWYodCgpKXJldHVybjt1W2MrK109cn1lbHNle2lmKG51bGwhPT1kKXJldHVybjtmKyssZD0rK2N9fWlmKG51bGwhPT1kKWZvcihzPWMtZCxjPTc7MCE9YyYmMDxzOylsPXVbY10sdVtjLS1dPXVbZCtzLTFdLHVbZCstLXNdPWw7ZWxzZSBpZig4IT1jKXJldHVybjtyZXR1cm4gdX0sSz17fSxKPXAoe30sSyx7XCIgXCI6MSwnXCInOjEsXCI8XCI6MSxcIj5cIjoxLFwiYFwiOjF9KSwkPXAoe30sSix7XCIjXCI6MSxcIj9cIjoxLFwie1wiOjEsXCJ9XCI6MX0pLGVlPXAoe30sJCx7XCIvXCI6MSxcIjpcIjoxLFwiO1wiOjEsXCI9XCI6MSxcIkBcIjoxLFwiW1wiOjEsXCJcXFxcXCI6MSxcIl1cIjoxLFwiXlwiOjEsXCJ8XCI6MX0pLHRlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9eShlLDApO3JldHVybiAzMjxyJiZyPDEyNyYmIUUodCxlKT9lOmVuY29kZVVSSUNvbXBvbmVudChlKX0scmU9e2Z0cDoyMSxmaWxlOm51bGwsaHR0cDo4MCxodHRwczo0NDMsd3M6ODAsd3NzOjQ0M30sbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIEUocmUsZS5zY2hlbWUpfSxvZT17fSxpZT17fSxhZT17fSxzZT17fSxsZT17fSx1ZT17fSxjZT17fSxkZT17fSxmZT17fSxoZT17fSxwZT17fSx5ZT17fSxtZT17fSxnZT17fSx2ZT17fSxiZT17fSxfZT17fSx4ZT17fSx3ZT17fSxqZT17fSxTZT17fSxNZT1mdW5jdGlvbihlLHQpe3ZhciByLG4sbz1oKHRoaXMsTWUsXCJVUkxcIiksaT0xPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDAsYT1TdHJpbmcoZSkscz1QKG8se3R5cGU6XCJVUkxcIn0pO2lmKHZvaWQgMCE9PWkpaWYoaSBpbnN0YW5jZW9mIE1lKXI9QShpKTtlbHNlIGlmKG49ZChyPXt9LFN0cmluZyhpKSkpdGhyb3cgVHlwZUVycm9yKG4pO2lmKG49ZChzLGEsbnVsbCxyKSl0aHJvdyBUeXBlRXJyb3Iobik7dmFyIGw9cy5zZWFyY2hQYXJhbXM9bmV3IEMsdT1MKGwpO3UudXBkYXRlU2VhcmNoUGFyYW1zKHMucXVlcnkpLHUudXBkYXRlVVJMPWZ1bmN0aW9uKCl7cy5xdWVyeT1TdHJpbmcobCl8fG51bGx9LGZ8fChvLmhyZWY9VGUuY2FsbChvKSxvLm9yaWdpbj1PZS5jYWxsKG8pLG8ucHJvdG9jb2w9Q2UuY2FsbChvKSxvLnVzZXJuYW1lPUxlLmNhbGwobyksby5wYXNzd29yZD1QZS5jYWxsKG8pLG8uaG9zdD1BZS5jYWxsKG8pLG8uaG9zdG5hbWU9a2UuY2FsbChvKSxvLnBvcnQ9UmUuY2FsbChvKSxvLnBhdGhuYW1lPURlLmNhbGwobyksby5zZWFyY2g9SWUuY2FsbChvKSxvLnNlYXJjaFBhcmFtcz1VZS5jYWxsKG8pLG8uaGFzaD1OZS5jYWxsKG8pKX0sRWU9TWUucHJvdG90eXBlLFRlPWZ1bmN0aW9uKCl7dmFyIGU9QSh0aGlzKSx0PWUuc2NoZW1lLHI9ZS51c2VybmFtZSxuPWUucGFzc3dvcmQsbz1lLmhvc3QsaT1lLnBvcnQsYT1lLnBhdGgscz1lLnF1ZXJ5LGw9ZS5mcmFnbWVudCx1PXQrXCI6XCI7cmV0dXJuIG51bGwhPT1vPyh1Kz1cIi8vXCIseChlKSYmKHUrPXIrKG4/XCI6XCIrbjpcIlwiKStcIkBcIiksdSs9YyhvKSxudWxsIT09aSYmKHUrPVwiOlwiK2kpKTpcImZpbGVcIj09dCYmKHUrPVwiLy9cIiksdSs9ZS5jYW5ub3RCZUFCYXNlVVJMP2FbMF06YS5sZW5ndGg/XCIvXCIrYS5qb2luKFwiL1wiKTpcIlwiLG51bGwhPT1zJiYodSs9XCI/XCIrcyksbnVsbCE9PWwmJih1Kz1cIiNcIitsKSx1fSxPZT1mdW5jdGlvbigpe3ZhciBlPUEodGhpcyksdD1lLnNjaGVtZSxyPWUucG9ydDtpZihcImJsb2JcIj09dCl0cnl7cmV0dXJuIG5ldyBVUkwodC5wYXRoWzBdKS5vcmlnaW59Y2F0Y2goZSl7cmV0dXJuXCJudWxsXCJ9cmV0dXJuXCJmaWxlXCIhPXQmJm5lKGUpP3QrXCI6Ly9cIitjKGUuaG9zdCkrKG51bGwhPT1yP1wiOlwiK3I6XCJcIik6XCJudWxsXCJ9LENlPWZ1bmN0aW9uKCl7cmV0dXJuIEEodGhpcykuc2NoZW1lK1wiOlwifSxMZT1mdW5jdGlvbigpe3JldHVybiBBKHRoaXMpLnVzZXJuYW1lfSxQZT1mdW5jdGlvbigpe3JldHVybiBBKHRoaXMpLnBhc3N3b3JkfSxBZT1mdW5jdGlvbigpe3ZhciBlPUEodGhpcyksdD1lLmhvc3Qscj1lLnBvcnQ7cmV0dXJuIG51bGw9PT10P1wiXCI6bnVsbD09PXI/Yyh0KTpjKHQpK1wiOlwiK3J9LGtlPWZ1bmN0aW9uKCl7dmFyIGU9QSh0aGlzKS5ob3N0O3JldHVybiBudWxsPT09ZT9cIlwiOmMoZSl9LFJlPWZ1bmN0aW9uKCl7dmFyIGU9QSh0aGlzKS5wb3J0O3JldHVybiBudWxsPT09ZT9cIlwiOlN0cmluZyhlKX0sRGU9ZnVuY3Rpb24oKXt2YXIgZT1BKHRoaXMpLHQ9ZS5wYXRoO3JldHVybiBlLmNhbm5vdEJlQUJhc2VVUkw/dFswXTp0Lmxlbmd0aD9cIi9cIit0LmpvaW4oXCIvXCIpOlwiXCJ9LEllPWZ1bmN0aW9uKCl7dmFyIGU9QSh0aGlzKS5xdWVyeTtyZXR1cm4gZT9cIj9cIitlOlwiXCJ9LFVlPWZ1bmN0aW9uKCl7cmV0dXJuIEEodGhpcykuc2VhcmNoUGFyYW1zfSxOZT1mdW5jdGlvbigpe3ZhciBlPUEodGhpcykuZnJhZ21lbnQ7cmV0dXJuIGU/XCIjXCIrZTpcIlwifTtpZihmJiZsKEVlLHtocmVmOm4oVGUsZnVuY3Rpb24oZSl7dmFyIHQ9QSh0aGlzKSxyPVN0cmluZyhlKSxuPWQodCxyKTtpZihuKXRocm93IFR5cGVFcnJvcihuKTtMKHQuc2VhcmNoUGFyYW1zKS51cGRhdGVTZWFyY2hQYXJhbXModC5xdWVyeSl9KSxvcmlnaW46bihPZSkscHJvdG9jb2w6bihDZSxmdW5jdGlvbihlKXt2YXIgdD1BKHRoaXMpO2QodCxTdHJpbmcoZSkrXCI6XCIsb2UpfSksdXNlcm5hbWU6bihMZSxmdW5jdGlvbihlKXt2YXIgdD1BKHRoaXMpLHI9VChTdHJpbmcoZSkpO2lmKCFvKHQpKXt0LnVzZXJuYW1lPVwiXCI7Zm9yKHZhciBuPTA7bjxyLmxlbmd0aDtuKyspdC51c2VybmFtZSs9dGUocltuXSxlZSl9fSkscGFzc3dvcmQ6bihQZSxmdW5jdGlvbihlKXt2YXIgdD1BKHRoaXMpLHI9VChTdHJpbmcoZSkpO2lmKCFvKHQpKXt0LnBhc3N3b3JkPVwiXCI7Zm9yKHZhciBuPTA7bjxyLmxlbmd0aDtuKyspdC5wYXNzd29yZCs9dGUocltuXSxlZSl9fSksaG9zdDpuKEFlLGZ1bmN0aW9uKGUpe3ZhciB0PUEodGhpcyk7dC5jYW5ub3RCZUFCYXNlVVJMfHxkKHQsU3RyaW5nKGUpLHBlKX0pLGhvc3RuYW1lOm4oa2UsZnVuY3Rpb24oZSl7dmFyIHQ9QSh0aGlzKTt0LmNhbm5vdEJlQUJhc2VVUkx8fGQodCxTdHJpbmcoZSkseWUpfSkscG9ydDpuKFJlLGZ1bmN0aW9uKGUpe3ZhciB0PUEodGhpcyk7byh0KXx8KFwiXCI9PShlPVN0cmluZyhlKSk/dC5wb3J0PW51bGw6ZCh0LGUsbWUpKX0pLHBhdGhuYW1lOm4oRGUsZnVuY3Rpb24oZSl7dmFyIHQ9QSh0aGlzKTt0LmNhbm5vdEJlQUJhc2VVUkx8fCh0LnBhdGg9W10sZCh0LGUrXCJcIixfZSkpfSksc2VhcmNoOm4oSWUsZnVuY3Rpb24oZSl7dmFyIHQ9QSh0aGlzKTtcIlwiPT0oZT1TdHJpbmcoZSkpP3QucXVlcnk9bnVsbDooXCI/XCI9PWUuY2hhckF0KDApJiYoZT1lLnNsaWNlKDEpKSx0LnF1ZXJ5PVwiXCIsZCh0LGUsamUpKSxMKHQuc2VhcmNoUGFyYW1zKS51cGRhdGVTZWFyY2hQYXJhbXModC5xdWVyeSl9KSxzZWFyY2hQYXJhbXM6bihVZSksaGFzaDpuKE5lLGZ1bmN0aW9uKGUpe3ZhciB0PUEodGhpcyk7XCJcIiE9KGU9U3RyaW5nKGUpKT8oXCIjXCI9PWUuY2hhckF0KDApJiYoZT1lLnNsaWNlKDEpKSx0LmZyYWdtZW50PVwiXCIsZCh0LGUsU2UpKTp0LmZyYWdtZW50PW51bGx9KX0pLHUoRWUsXCJ0b0pTT05cIixmdW5jdGlvbigpe3JldHVybiBUZS5jYWxsKHRoaXMpfSx7ZW51bWVyYWJsZTohMH0pLHUoRWUsXCJ0b1N0cmluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFRlLmNhbGwodGhpcyl9LHtlbnVtZXJhYmxlOiEwfSksTyl7dmFyIEZlPU8uY3JlYXRlT2JqZWN0VVJMLEJlPU8ucmV2b2tlT2JqZWN0VVJMO0ZlJiZ1KE1lLFwiY3JlYXRlT2JqZWN0VVJMXCIsZnVuY3Rpb24oZSl7cmV0dXJuIEZlLmFwcGx5KE8sYXJndW1lbnRzKX0pLEJlJiZ1KE1lLFwicmV2b2tlT2JqZWN0VVJMXCIsZnVuY3Rpb24oZSl7cmV0dXJuIEJlLmFwcGx5KE8sYXJndW1lbnRzKX0pfWcoTWUsXCJVUkxcIiksaSh7Z2xvYmFsOiEwLGZvcmNlZDohYSxzaGFtOiFmfSx7VVJMOk1lfSl9LHtcIi4uL2ludGVybmFscy9hbi1pbnN0YW5jZVwiOjksXCIuLi9pbnRlcm5hbHMvYXJyYXktZnJvbVwiOjE3LFwiLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzXCI6NDIsXCIuLi9pbnRlcm5hbHMvZXhwb3J0XCI6NDksXCIuLi9pbnRlcm5hbHMvZ2xvYmFsXCI6NTksXCIuLi9pbnRlcm5hbHMvaGFzXCI6NjAsXCIuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGVcIjo3MCxcIi4uL2ludGVybmFscy9uYXRpdmUtdXJsXCI6ODQsXCIuLi9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnblwiOjg5LFwiLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydGllc1wiOjkxLFwiLi4vaW50ZXJuYWxzL3JlZGVmaW5lXCI6MTA4LFwiLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnXCI6MTE3LFwiLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGVcIjoxMjMsXCIuLi9pbnRlcm5hbHMvc3RyaW5nLXB1bnljb2RlLXRvLWFzY2lpXCI6MTI0LFwiLi4vbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCIuLi9tb2R1bGVzL3dlYi51cmwtc2VhcmNoLXBhcmFtc1wiOjIzMH1dLDIzMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz1lKFwiLi9cIikucG9seWZpbGwoKX0se1wiLi9cIjoyMzN9XSwyMzM6W2Z1bmN0aW9uKHoscixuKXsoZnVuY3Rpb24oRyxWKXt2YXIgZSx0O2U9dGhpcyx0PWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbChlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfXZhciByPUFycmF5LmlzQXJyYXk/QXJyYXkuaXNBcnJheTpmdW5jdGlvbihlKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LG49MCx0PXZvaWQgMCxvPXZvaWQgMCxhPWZ1bmN0aW9uKGUsdCl7ZltuXT1lLGZbbisxXT10LDI9PT0obis9MikmJihvP28oaCk6digpKX07dmFyIGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dm9pZCAwLGk9ZXx8e30scz1pLk11dGF0aW9uT2JzZXJ2ZXJ8fGkuV2ViS2l0TXV0YXRpb25PYnNlcnZlcix1PVwidW5kZWZpbmVkXCI9PXR5cGVvZiBzZWxmJiZ2b2lkIDAhPT1HJiZcIltvYmplY3QgcHJvY2Vzc11cIj09PXt9LnRvU3RyaW5nLmNhbGwoRyksYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXkmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBpbXBvcnRTY3JpcHRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgTWVzc2FnZUNoYW5uZWw7ZnVuY3Rpb24gZCgpe3ZhciBlPXNldFRpbWVvdXQ7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUoaCwxKX19dmFyIGY9bmV3IEFycmF5KDFlMyk7ZnVuY3Rpb24gaCgpe2Zvcih2YXIgZT0wO2U8bjtlKz0yKXsoMCxmW2VdKShmW2UrMV0pLGZbZV09dm9pZCAwLGZbZSsxXT12b2lkIDB9bj0wfXZhciBwLHksbSxnLHY9dm9pZCAwO2Z1bmN0aW9uIGIoZSx0KXt2YXIgcj10aGlzLG49bmV3IHRoaXMuY29uc3RydWN0b3Iodyk7dm9pZCAwPT09blt4XSYmSShuKTt2YXIgbz1yLl9zdGF0ZTtpZihvKXt2YXIgaT1hcmd1bWVudHNbby0xXTthKGZ1bmN0aW9uKCl7cmV0dXJuIFIobyxuLGksci5fcmVzdWx0KX0pfWVsc2UgQShyLG4sZSx0KTtyZXR1cm4gbn1mdW5jdGlvbiBfKGUpe2lmKGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmNvbnN0cnVjdG9yPT09dGhpcylyZXR1cm4gZTt2YXIgdD1uZXcgdGhpcyh3KTtyZXR1cm4gTyh0LGUpLHR9dj11P2Z1bmN0aW9uKCl7cmV0dXJuIEcubmV4dFRpY2soaCl9OnM/KHk9MCxtPW5ldyBzKGgpLGc9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIiksbS5vYnNlcnZlKGcse2NoYXJhY3RlckRhdGE6ITB9KSxmdW5jdGlvbigpe2cuZGF0YT15PSsreSUyfSk6Yz8oKHA9bmV3IE1lc3NhZ2VDaGFubmVsKS5wb3J0MS5vbm1lc3NhZ2U9aCxmdW5jdGlvbigpe3JldHVybiBwLnBvcnQyLnBvc3RNZXNzYWdlKDApfSk6dm9pZCAwPT09ZSYmXCJmdW5jdGlvblwiPT10eXBlb2Ygej9mdW5jdGlvbigpe3RyeXt2YXIgZT1GdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkucmVxdWlyZShcInZlcnR4XCIpO3JldHVybiB2b2lkIDAhPT0odD1lLnJ1bk9uTG9vcHx8ZS5ydW5PbkNvbnRleHQpP2Z1bmN0aW9uKCl7dChoKX06ZCgpfWNhdGNoKGUpe3JldHVybiBkKCl9fSgpOmQoKTt2YXIgeD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMik7ZnVuY3Rpb24gdygpe312YXIgaj12b2lkIDAsUz0xLE09MjtmdW5jdGlvbiBFKGUsbixvKXthKGZ1bmN0aW9uKHQpe3ZhciByPSExLGU9ZnVuY3Rpb24oZSx0LHIsbil7dHJ5e2UuY2FsbCh0LHIsbil9Y2F0Y2goZSl7cmV0dXJuIGV9fShvLG4sZnVuY3Rpb24oZSl7cnx8KHI9ITAsbiE9PWU/Tyh0LGUpOkwodCxlKSl9LGZ1bmN0aW9uKGUpe3J8fChyPSEwLFAodCxlKSl9LHQuX2xhYmVsKTshciYmZSYmKHI9ITAsUCh0LGUpKX0sZSl9ZnVuY3Rpb24gVChlLHQscil7dmFyIG4sbzt0LmNvbnN0cnVjdG9yPT09ZS5jb25zdHJ1Y3RvciYmcj09PWImJnQuY29uc3RydWN0b3IucmVzb2x2ZT09PV8/KG49ZSwobz10KS5fc3RhdGU9PT1TP0wobixvLl9yZXN1bHQpOm8uX3N0YXRlPT09TT9QKG4sby5fcmVzdWx0KTpBKG8sdm9pZCAwLGZ1bmN0aW9uKGUpe3JldHVybiBPKG4sZSl9LGZ1bmN0aW9uKGUpe3JldHVybiBQKG4sZSl9KSk6dm9pZCAwPT09cj9MKGUsdCk6bChyKT9FKGUsdCxyKTpMKGUsdCl9ZnVuY3Rpb24gTyh0LGUpe2lmKHQ9PT1lKVAodCxuZXcgVHlwZUVycm9yKFwiWW91IGNhbm5vdCByZXNvbHZlIGEgcHJvbWlzZSB3aXRoIGl0c2VsZlwiKSk7ZWxzZSBpZihvPXR5cGVvZihuPWUpLG51bGw9PT1ufHxcIm9iamVjdFwiIT1vJiZcImZ1bmN0aW9uXCIhPW8pTCh0LGUpO2Vsc2V7dmFyIHI9dm9pZCAwO3RyeXtyPWUudGhlbn1jYXRjaChlKXtyZXR1cm4gdm9pZCBQKHQsZSl9VCh0LGUscil9dmFyIG4sb31mdW5jdGlvbiBDKGUpe2UuX29uZXJyb3ImJmUuX29uZXJyb3IoZS5fcmVzdWx0KSxrKGUpfWZ1bmN0aW9uIEwoZSx0KXtlLl9zdGF0ZT09PWomJihlLl9yZXN1bHQ9dCxlLl9zdGF0ZT1TLDAhPT1lLl9zdWJzY3JpYmVycy5sZW5ndGgmJmEoayxlKSl9ZnVuY3Rpb24gUChlLHQpe2UuX3N0YXRlPT09aiYmKGUuX3N0YXRlPU0sZS5fcmVzdWx0PXQsYShDLGUpKX1mdW5jdGlvbiBBKGUsdCxyLG4pe3ZhciBvPWUuX3N1YnNjcmliZXJzLGk9by5sZW5ndGg7ZS5fb25lcnJvcj1udWxsLG9baV09dCxvW2krU109cixvW2krTV09biwwPT09aSYmZS5fc3RhdGUmJmEoayxlKX1mdW5jdGlvbiBrKGUpe3ZhciB0PWUuX3N1YnNjcmliZXJzLHI9ZS5fc3RhdGU7aWYoMCE9PXQubGVuZ3RoKXtmb3IodmFyIG49dm9pZCAwLG89dm9pZCAwLGk9ZS5fcmVzdWx0LGE9MDthPHQubGVuZ3RoO2ErPTMpbj10W2FdLG89dFthK3JdLG4/UihyLG4sbyxpKTpvKGkpO2UuX3N1YnNjcmliZXJzLmxlbmd0aD0wfX1mdW5jdGlvbiBSKGUsdCxyLG4pe3ZhciBvPWwociksaT12b2lkIDAsYT12b2lkIDAscz0hMDtpZihvKXt0cnl7aT1yKG4pfWNhdGNoKGUpe3M9ITEsYT1lfWlmKHQ9PT1pKXJldHVybiB2b2lkIFAodCxuZXcgVHlwZUVycm9yKFwiQSBwcm9taXNlcyBjYWxsYmFjayBjYW5ub3QgcmV0dXJuIHRoYXQgc2FtZSBwcm9taXNlLlwiKSl9ZWxzZSBpPW47dC5fc3RhdGUhPT1qfHwobyYmcz9PKHQsaSk6ITE9PT1zP1AodCxhKTplPT09Uz9MKHQsaSk6ZT09PU0mJlAodCxpKSl9dmFyIEQ9MDtmdW5jdGlvbiBJKGUpe2VbeF09RCsrLGUuX3N0YXRlPXZvaWQgMCxlLl9yZXN1bHQ9dm9pZCAwLGUuX3N1YnNjcmliZXJzPVtdfXZhciBVPShOLnByb3RvdHlwZS5fZW51bWVyYXRlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3RoaXMuX3N0YXRlPT09aiYmdDxlLmxlbmd0aDt0KyspdGhpcy5fZWFjaEVudHJ5KGVbdF0sdCl9LE4ucHJvdG90eXBlLl9lYWNoRW50cnk9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLl9pbnN0YW5jZUNvbnN0cnVjdG9yLG49ci5yZXNvbHZlO2lmKG49PT1fKXt2YXIgbz12b2lkIDAsaT12b2lkIDAsYT0hMTt0cnl7bz10LnRoZW59Y2F0Y2goZSl7YT0hMCxpPWV9aWYobz09PWImJnQuX3N0YXRlIT09ail0aGlzLl9zZXR0bGVkQXQodC5fc3RhdGUsZSx0Ll9yZXN1bHQpO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygbyl0aGlzLl9yZW1haW5pbmctLSx0aGlzLl9yZXN1bHRbZV09dDtlbHNlIGlmKHI9PT1GKXt2YXIgcz1uZXcgcih3KTthP1AocyxpKTpUKHMsdCxvKSx0aGlzLl93aWxsU2V0dGxlQXQocyxlKX1lbHNlIHRoaXMuX3dpbGxTZXR0bGVBdChuZXcgcihmdW5jdGlvbihlKXtyZXR1cm4gZSh0KX0pLGUpfWVsc2UgdGhpcy5fd2lsbFNldHRsZUF0KG4odCksZSl9LE4ucHJvdG90eXBlLl9zZXR0bGVkQXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMucHJvbWlzZTtuLl9zdGF0ZT09PWomJih0aGlzLl9yZW1haW5pbmctLSxlPT09TT9QKG4scik6dGhpcy5fcmVzdWx0W3RdPXIpLDA9PT10aGlzLl9yZW1haW5pbmcmJkwobix0aGlzLl9yZXN1bHQpfSxOLnByb3RvdHlwZS5fd2lsbFNldHRsZUF0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztBKGUsdm9pZCAwLGZ1bmN0aW9uKGUpe3JldHVybiByLl9zZXR0bGVkQXQoUyx0LGUpfSxmdW5jdGlvbihlKXtyZXR1cm4gci5fc2V0dGxlZEF0KE0sdCxlKX0pfSxOKTtmdW5jdGlvbiBOKGUsdCl7dGhpcy5faW5zdGFuY2VDb25zdHJ1Y3Rvcj1lLHRoaXMucHJvbWlzZT1uZXcgZSh3KSx0aGlzLnByb21pc2VbeF18fEkodGhpcy5wcm9taXNlKSxyKHQpPyh0aGlzLmxlbmd0aD10Lmxlbmd0aCx0aGlzLl9yZW1haW5pbmc9dC5sZW5ndGgsdGhpcy5fcmVzdWx0PW5ldyBBcnJheSh0aGlzLmxlbmd0aCksMD09PXRoaXMubGVuZ3RoP0wodGhpcy5wcm9taXNlLHRoaXMuX3Jlc3VsdCk6KHRoaXMubGVuZ3RoPXRoaXMubGVuZ3RofHwwLHRoaXMuX2VudW1lcmF0ZSh0KSwwPT09dGhpcy5fcmVtYWluaW5nJiZMKHRoaXMucHJvbWlzZSx0aGlzLl9yZXN1bHQpKSk6UCh0aGlzLnByb21pc2UsbmV3IEVycm9yKFwiQXJyYXkgTWV0aG9kcyBtdXN0IGJlIHByb3ZpZGVkIGFuIEFycmF5XCIpKX12YXIgRj0oQi5wcm90b3R5cGUuY2F0Y2g9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbihudWxsLGUpfSxCLnByb3RvdHlwZS5maW5hbGx5PWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuY29uc3RydWN0b3I7cmV0dXJuIGwodCk/dGhpcy50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiByLnJlc29sdmUodCgpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGV9KX0sZnVuY3Rpb24oZSl7cmV0dXJuIHIucmVzb2x2ZSh0KCkpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBlfSl9KTp0aGlzLnRoZW4odCx0KX0sQik7ZnVuY3Rpb24gQihlKXt0aGlzW3hdPUQrKyx0aGlzLl9yZXN1bHQ9dGhpcy5fc3RhdGU9dm9pZCAwLHRoaXMuX3N1YnNjcmliZXJzPVtdLHchPT1lJiYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiWW91IG11c3QgcGFzcyBhIHJlc29sdmVyIGZ1bmN0aW9uIGFzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB0aGUgcHJvbWlzZSBjb25zdHJ1Y3RvclwiKX0oKSx0aGlzIGluc3RhbmNlb2YgQj9mdW5jdGlvbih0LGUpe3RyeXtlKGZ1bmN0aW9uKGUpe08odCxlKX0sZnVuY3Rpb24oZSl7UCh0LGUpfSl9Y2F0Y2goZSl7UCh0LGUpfX0odGhpcyxlKTpmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdQcm9taXNlJzogUGxlYXNlIHVzZSB0aGUgJ25ldycgb3BlcmF0b3IsIHRoaXMgb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi5cIil9KCkpfXJldHVybiBGLnByb3RvdHlwZS50aGVuPWIsRi5hbGw9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBVKHRoaXMsZSkucHJvbWlzZX0sRi5yYWNlPWZ1bmN0aW9uKG8pe3ZhciBpPXRoaXM7cmV0dXJuIHIobyk/bmV3IGkoZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9by5sZW5ndGgsbj0wO248cjtuKyspaS5yZXNvbHZlKG9bbl0pLnRoZW4oZSx0KX0pOm5ldyBpKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQobmV3IFR5cGVFcnJvcihcIllvdSBtdXN0IHBhc3MgYW4gYXJyYXkgdG8gcmFjZS5cIikpfSl9LEYucmVzb2x2ZT1fLEYucmVqZWN0PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyB0aGlzKHcpO3JldHVybiBQKHQsZSksdH0sRi5fc2V0U2NoZWR1bGVyPWZ1bmN0aW9uKGUpe289ZX0sRi5fc2V0QXNhcD1mdW5jdGlvbihlKXthPWV9LEYuX2FzYXA9YSxGLnBvbHlmaWxsPWZ1bmN0aW9uKCl7dmFyIGU9dm9pZCAwO2lmKHZvaWQgMCE9PVYpZT1WO2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYpZT1zZWxmO2Vsc2UgdHJ5e2U9RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfWNhdGNoKGUpe3Rocm93IG5ldyBFcnJvcihcInBvbHlmaWxsIGZhaWxlZCBiZWNhdXNlIGdsb2JhbCBvYmplY3QgaXMgdW5hdmFpbGFibGUgaW4gdGhpcyBlbnZpcm9ubWVudFwiKX12YXIgdD1lLlByb21pc2U7aWYodCl7dmFyIHI9bnVsbDt0cnl7cj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodC5yZXNvbHZlKCkpfWNhdGNoKGUpe31pZihcIltvYmplY3QgUHJvbWlzZV1cIj09PXImJiF0LmNhc3QpcmV0dXJufWUuUHJvbWlzZT1GfSxGLlByb21pc2U9Rn0sXCJvYmplY3RcIj09dHlwZW9mIG4mJnZvaWQgMCE9PXI/ci5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBpJiZpLmFtZD9pKHQpOmUuRVM2UHJvbWlzZT10KCl9KS5jYWxsKHRoaXMseihcIl9wcm9jZXNzXCIpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6e30pfSx7X3Byb2Nlc3M6MjQxfV0sMjM0OltmdW5jdGlvbihlLG4sbyl7IWZ1bmN0aW9uKGUsdCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgaSYmaS5hbWQpaShbXCJleHBvcnRzXCIsXCJtb2R1bGVcIl0sdCk7ZWxzZSBpZih2b2lkIDAhPT1vJiZ2b2lkIDAhPT1uKXQobyxuKTtlbHNle3ZhciByPXtleHBvcnRzOnt9fTt0KHIuZXhwb3J0cyxyKSxlLmZldGNoSnNvbnA9ci5leHBvcnRzfX0odGhpcyxmdW5jdGlvbihlLHQpe1widXNlIHN0cmljdFwiO3ZhciByPTVlMyxuPVwiY2FsbGJhY2tcIjtmdW5jdGlvbiBkKHQpe3RyeXtkZWxldGUgd2luZG93W3RdfWNhdGNoKGUpe3dpbmRvd1t0XT12b2lkIDB9fWZ1bmN0aW9uIGYoZSl7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSk7dCYmZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLnJlbW92ZUNoaWxkKHQpfXQuZXhwb3J0cz1mdW5jdGlvbihpKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPD0xfHx2b2lkIDA9PT1hcmd1bWVudHNbMV0/e306YXJndW1lbnRzWzFdLHM9aSxsPWEudGltZW91dHx8cix1PWEuanNvbnBDYWxsYmFja3x8bixjPXZvaWQgMDtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxlKXt2YXIgcj1hLmpzb25wQ2FsbGJhY2tGdW5jdGlvbnx8XCJqc29ucF9cIitEYXRlLm5vdygpK1wiX1wiK01hdGguY2VpbCgxZTUqTWF0aC5yYW5kb20oKSksbj11K1wiX1wiK3I7d2luZG93W3JdPWZ1bmN0aW9uKGUpe3Qoe29rOiEwLGpzb246ZnVuY3Rpb24oKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGUpfX0pLGMmJmNsZWFyVGltZW91dChjKSxmKG4pLGQocil9LHMrPS0xPT09cy5pbmRleE9mKFwiP1wiKT9cIj9cIjpcIiZcIjt2YXIgbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO28uc2V0QXR0cmlidXRlKFwic3JjXCIsXCJcIitzK3UrXCI9XCIrciksYS5jaGFyc2V0JiZvLnNldEF0dHJpYnV0ZShcImNoYXJzZXRcIixhLmNoYXJzZXQpLG8uaWQ9bixkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0uYXBwZW5kQ2hpbGQobyksYz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShuZXcgRXJyb3IoXCJKU09OUCByZXF1ZXN0IHRvIFwiK2krXCIgdGltZWQgb3V0XCIpKSxkKHIpLGYobiksd2luZG93W3JdPWZ1bmN0aW9uKCl7ZChyKX19LGwpLG8ub25lcnJvcj1mdW5jdGlvbigpe2UobmV3IEVycm9yKFwiSlNPTlAgcmVxdWVzdCB0byBcIitpK1wiIGZhaWxlZFwiKSksZChyKSxmKG4pLGMmJmNsZWFyVGltZW91dChjKX19KX19KX0se31dLDIzNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPW58fGZ1bmN0aW9uKHMpe1widXNlIHN0cmljdFwiO2lmKCEodm9pZCAwPT09c3x8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmL01TSUUgWzEtOV1cXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpKXt2YXIgZT1zLmRvY3VtZW50LGw9ZnVuY3Rpb24oKXtyZXR1cm4gcy5VUkx8fHMud2Via2l0VVJMfHxzfSx1PWUuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLFwiYVwiKSxjPVwiZG93bmxvYWRcImluIHUsZD0vY29uc3RydWN0b3IvaS50ZXN0KHMuSFRNTEVsZW1lbnQpfHxzLnNhZmFyaSxmPS9DcmlPU1xcL1tcXGRdKy8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxoPWZ1bmN0aW9uKGUpeyhzLnNldEltbWVkaWF0ZXx8cy5zZXRUaW1lb3V0KShmdW5jdGlvbigpe3Rocm93IGV9LDApfSxwPWZ1bmN0aW9uKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtcInN0cmluZ1wiPT10eXBlb2YgZT9sKCkucmV2b2tlT2JqZWN0VVJMKGUpOmUucmVtb3ZlKCl9LDRlNCl9LHk9ZnVuY3Rpb24oZSl7cmV0dXJuL15cXHMqKD86dGV4dFxcL1xcUyp8YXBwbGljYXRpb25cXC94bWx8XFxTKlxcL1xcUypcXCt4bWwpXFxzKjsuKmNoYXJzZXRcXHMqPVxccyp1dGYtOC9pLnRlc3QoZS50eXBlKT9uZXcgQmxvYihbU3RyaW5nLmZyb21DaGFyQ29kZSg2NTI3OSksZV0se3R5cGU6ZS50eXBlfSk6ZX0sbj1mdW5jdGlvbihlLHIsdCl7dHx8KGU9eShlKSk7ZnVuY3Rpb24gbigpeyFmdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPSh0PVtdLmNvbmNhdCh0KSkubGVuZ3RoO24tLTspe3ZhciBvPWVbXCJvblwiK3Rbbl1dO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG8pdHJ5e28uY2FsbChlLHJ8fGUpfWNhdGNoKGUpe2goZSl9fX0oaSxcIndyaXRlc3RhcnQgcHJvZ3Jlc3Mgd3JpdGUgd3JpdGVlbmRcIi5zcGxpdChcIiBcIikpfXZhciBvLGk9dGhpcyxhPVwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCI9PT1lLnR5cGU7aWYoaS5yZWFkeVN0YXRlPWkuSU5JVCxjKXJldHVybiBvPWwoKS5jcmVhdGVPYmplY3RVUkwoZSksdm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGUsdDt1LmhyZWY9byx1LmRvd25sb2FkPXIsZT11LHQ9bmV3IE1vdXNlRXZlbnQoXCJjbGlja1wiKSxlLmRpc3BhdGNoRXZlbnQodCksbigpLHAobyksaS5yZWFkeVN0YXRlPWkuRE9ORX0pOyFmdW5jdGlvbigpe2lmKChmfHxhJiZkKSYmcy5GaWxlUmVhZGVyKXt2YXIgdD1uZXcgRmlsZVJlYWRlcjtyZXR1cm4gdC5vbmxvYWRlbmQ9ZnVuY3Rpb24oKXt2YXIgZT1mP3QucmVzdWx0OnQucmVzdWx0LnJlcGxhY2UoL15kYXRhOlteO10qOy8sXCJkYXRhOmF0dGFjaG1lbnQvZmlsZTtcIik7cy5vcGVuKGUsXCJfYmxhbmtcIil8fChzLmxvY2F0aW9uLmhyZWY9ZSksZT12b2lkIDAsaS5yZWFkeVN0YXRlPWkuRE9ORSxuKCl9LHQucmVhZEFzRGF0YVVSTChlKSxpLnJlYWR5U3RhdGU9aS5JTklUfShvPW98fGwoKS5jcmVhdGVPYmplY3RVUkwoZSksYSk/cy5sb2NhdGlvbi5ocmVmPW86cy5vcGVuKG8sXCJfYmxhbmtcIil8fChzLmxvY2F0aW9uLmhyZWY9byk7aS5yZWFkeVN0YXRlPWkuRE9ORSxuKCkscChvKX0oKX0sdD1uLnByb3RvdHlwZTtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYj9mdW5jdGlvbihlLHQscil7cmV0dXJuIHQ9dHx8ZS5uYW1lfHxcImRvd25sb2FkXCIscnx8KGU9eShlKSksbmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IoZSx0KX06KHQuYWJvcnQ9ZnVuY3Rpb24oKXt9LHQucmVhZHlTdGF0ZT10LklOSVQ9MCx0LldSSVRJTkc9MSx0LkRPTkU9Mix0LmVycm9yPXQub253cml0ZXN0YXJ0PXQub25wcm9ncmVzcz10Lm9ud3JpdGU9dC5vbmFib3J0PXQub25lcnJvcj10Lm9ud3JpdGVlbmQ9bnVsbCxmdW5jdGlvbihlLHQscil7cmV0dXJuIG5ldyBuKGUsdHx8ZS5uYW1lfHxcImRvd25sb2FkXCIscil9KX19KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fHRoaXMuY29udGVudCk7dm9pZCAwIT09dCYmdC5leHBvcnRzP3QuZXhwb3J0cy5zYXZlQXM9bjpudWxsIT1pJiZudWxsIT09aS5hbWQmJmkoXCJGaWxlU2F2ZXIuanNcIixmdW5jdGlvbigpe3JldHVybiBufSl9LHt9XSwyMzY6W2Z1bmN0aW9uKGUsdCxyKXtyLnJlYWQ9ZnVuY3Rpb24oZSx0LHIsbixvKXt2YXIgaSxhLHM9OCpvLW4tMSxsPSgxPDxzKS0xLHU9bD4+MSxjPS03LGQ9cj9vLTE6MCxmPXI/LTE6MSxoPWVbdCtkXTtmb3IoZCs9ZixpPWgmKDE8PC1jKS0xLGg+Pj0tYyxjKz1zOzA8YztpPTI1NippK2VbdCtkXSxkKz1mLGMtPTgpO2ZvcihhPWkmKDE8PC1jKS0xLGk+Pj0tYyxjKz1uOzA8YzthPTI1NiphK2VbdCtkXSxkKz1mLGMtPTgpO2lmKDA9PT1pKWk9MS11O2Vsc2V7aWYoaT09PWwpcmV0dXJuIGE/TmFOOjEvMCooaD8tMToxKTthKz1NYXRoLnBvdygyLG4pLGktPXV9cmV0dXJuKGg/LTE6MSkqYSpNYXRoLnBvdygyLGktbil9LHIud3JpdGU9ZnVuY3Rpb24oZSx0LHIsbixvLGkpe3ZhciBhLHMsbCx1PTgqaS1vLTEsYz0oMTw8dSktMSxkPWM+PjEsZj0yMz09PW8/TWF0aC5wb3coMiwtMjQpLU1hdGgucG93KDIsLTc3KTowLGg9bj8wOmktMSxwPW4/MTotMSx5PXQ8MHx8MD09PXQmJjEvdDwwPzE6MDtmb3IodD1NYXRoLmFicyh0KSxpc05hTih0KXx8dD09PTEvMD8ocz1pc05hTih0KT8xOjAsYT1jKTooYT1NYXRoLmZsb29yKE1hdGgubG9nKHQpL01hdGguTE4yKSx0KihsPU1hdGgucG93KDIsLWEpKTwxJiYoYS0tLGwqPTIpLDI8PSh0Kz0xPD1hK2Q/Zi9sOmYqTWF0aC5wb3coMiwxLWQpKSpsJiYoYSsrLGwvPTIpLGM8PWErZD8ocz0wLGE9Yyk6MTw9YStkPyhzPSh0KmwtMSkqTWF0aC5wb3coMixvKSxhKz1kKToocz10Kk1hdGgucG93KDIsZC0xKSpNYXRoLnBvdygyLG8pLGE9MCkpOzg8PW87ZVtyK2hdPTI1NSZzLGgrPXAscy89MjU2LG8tPTgpO2ZvcihhPWE8PG98cyx1Kz1vOzA8dTtlW3IraF09MjU1JmEsaCs9cCxhLz0yNTYsdS09OCk7ZVtyK2gtcF18PTEyOCp5fX0se31dLDIzNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuO2Z1bmN0aW9uIG0oZSx0KXtyZXR1cm4gZS5iPT09dC5iJiZlLmE9PT10LmF9ZnVuY3Rpb24gZyhlLHQpe3JldHVybiBlLmI8dC5ifHxlLmI9PT10LmImJmUuYTw9dC5hfWZ1bmN0aW9uIHYoZSx0LHIpe3ZhciBuPXQuYi1lLmIsbz1yLmItdC5iO3JldHVybiAwPG4rbz9uPG8/dC5hLWUuYStuLyhuK28pKihlLmEtci5hKTp0LmEtci5hK28vKG4rbykqKHIuYS1lLmEpOjB9ZnVuY3Rpb24gYihlLHQscil7dmFyIG49dC5iLWUuYixvPXIuYi10LmI7cmV0dXJuIDA8bitvPyh0LmEtci5hKSpuKyh0LmEtZS5hKSpvOjB9ZnVuY3Rpb24gXyhlLHQpe3JldHVybiBlLmE8dC5hfHxlLmE9PT10LmEmJmUuYjw9dC5ifWZ1bmN0aW9uIHgoZSx0LHIpe3ZhciBuPXQuYS1lLmEsbz1yLmEtdC5hO3JldHVybiAwPG4rbz9uPG8/dC5iLWUuYituLyhuK28pKihlLmItci5iKTp0LmItci5iK28vKG4rbykqKHIuYi1lLmIpOjB9ZnVuY3Rpb24gdyhlLHQscil7dmFyIG49dC5hLWUuYSxvPXIuYS10LmE7cmV0dXJuIDA8bitvPyh0LmItci5iKSpuKyh0LmItZS5iKSpvOjB9ZnVuY3Rpb24gaihlLHQscixuKXtyZXR1cm4oZT1lPDA/MDplKTw9KHI9cjwwPzA6cik/MD09PXI/KHQrbikvMjp0K2UvKGUrcikqKG4tdCk6bityLyhlK3IpKih0LW4pfWZ1bmN0aW9uIGEoZSl7dmFyIHQ9aShlLmIpO3JldHVybiBvKHQsZS5jKSxvKHQuYixlLmMpLHModCxlLmEpLHR9ZnVuY3Rpb24gUyhlLHQpe3ZhciByPSExLG49ITE7ZSE9PXQmJih0LmEhPT1lLmEmJihuPSEwLHkodC5hLGUuYSkpLHQuZCE9PWUuZCYmKHI9ITAsbCh0LmQsZS5kKSksaCh0LGUpLG58fChvKHQsZS5hKSxlLmEuYz1lKSxyfHwocyh0LGUuZCksZS5kLmE9ZSkpfWZ1bmN0aW9uIGQoZSl7dmFyIHQ9ZS5iLHI9ITE7ZS5kIT09ZS5iLmQmJihyPSEwLGwoZS5kLGUuYi5kKSksZS5jPT09ZT95KGUuYSxudWxsKTooZS5iLmQuYT1LKGUpLGUuYS5jPWUuYyxoKGUsSyhlKSkscnx8cyhlLGUuZCkpLHQuYz09PXQ/KHkodC5hLG51bGwpLGwodC5kLG51bGwpKTooZS5kLmE9Syh0KSx0LmEuYz10LmMsaCh0LEsodCkpKSxwKGUpfWZ1bmN0aW9uIE0oZSl7dmFyIHQ9aShlKSxyPXQuYjtyZXR1cm4gaCh0LGUuZSksdC5hPWUuYi5hLG8ocix0LmEpLHQuZD1yLmQ9ZS5kLHQ9dC5iLGgoZS5iLEsoZS5iKSksaChlLmIsdCksZS5iLmE9dC5hLHQuYi5hLmM9dC5iLHQuYi5kPWUuYi5kLHQuZj1lLmYsdC5iLmY9ZS5iLmYsdH1mdW5jdGlvbiBmKGUsdCl7dmFyIHI9ITEsbj1pKGUpLG89bi5iO3JldHVybiB0LmQhPT1lLmQmJihyPSEwLGwodC5kLGUuZCkpLGgobixlLmUpLGgobyx0KSxuLmE9ZS5iLmEsby5hPXQuYSxuLmQ9by5kPWUuZCxlLmQuYT1vLHJ8fHMobixlLmQpLG59ZnVuY3Rpb24gaShlKXt2YXIgdD1uZXcgUSxyPW5ldyBRLG49ZS5iLmg7cmV0dXJuKCgoci5oPW4pLmIuaD10KS5oPWUpLmIuaD1yLHQuYj1yLCgodC5jPXQpLmU9cikuYj10LChyLmM9cikuZT10fWZ1bmN0aW9uIGgoZSx0KXt2YXIgcj1lLmMsbj10LmM7ci5iLmU9dCwobi5iLmU9ZSkuYz1uLHQuYz1yfWZ1bmN0aW9uIG8oZSx0KXt2YXIgcj10LmYsbj1uZXcgJCh0LHIpO2ZvcihyLmU9bixyPSh0LmY9bikuYz1lO3IuYT1uLChyPXIuYykhPT1lOyk7fWZ1bmN0aW9uIHMoZSx0KXt2YXIgcj10LmQsbj1uZXcgWih0LHIpO2ZvcihyLmI9biwodC5kPW4pLmE9ZSxuLmM9dC5jLHI9ZTtyLmQ9biwocj1yLmUpIT09ZTspO31mdW5jdGlvbiBwKGUpe3ZhciB0PWUuaDtlPWUuYi5oLCh0LmIuaD1lKS5iLmg9dH1mdW5jdGlvbiB5KGUsdCl7Zm9yKHZhciByPWUuYyxuPXI7bi5hPXQsKG49bi5jKSE9PXI7KTtyPWUuZiwoKG49ZS5lKS5mPXIpLmU9bn1mdW5jdGlvbiBsKGUsdCl7Zm9yKHZhciByPWUuYSxuPXI7bi5kPXQsKG49bi5lKSE9PXI7KTtyPWUuZCwoKG49ZS5iKS5kPXIpLmI9bn1mdW5jdGlvbiBFKGUpe3ZhciB0PTA7cmV0dXJuIE1hdGguYWJzKGVbMV0pPk1hdGguYWJzKGVbMF0pJiYodD0xKSxNYXRoLmFicyhlWzJdKT5NYXRoLmFicyhlW3RdKSYmKHQ9MiksdH1mdW5jdGlvbiBUKGUsdCl7ZS5mKz10LmYsZS5iLmYrPXQuYi5mfWZ1bmN0aW9uIHUoZSx0LHIpe3JldHVybiBlPWUuYSx0PXQuYSxyPXIuYSx0LmIuYT09PWU/ci5iLmE9PT1lP2codC5hLHIuYSk/YihyLmIuYSx0LmEsci5hKTw9MDowPD1iKHQuYi5hLHIuYSx0LmEpOmIoci5iLmEsZSxyLmEpPD0wOnIuYi5hPT09ZT8wPD1iKHQuYi5hLGUsdC5hKToodD12KHQuYi5hLGUsdC5hKSwoZT12KHIuYi5hLGUsci5hKSk8PXQpfWZ1bmN0aW9uIE8oZSl7ZS5hLmk9bnVsbDt2YXIgdD1lLmU7dC5hLmM9dC5jLHQuYy5hPXQuYSxlLmU9bnVsbH1mdW5jdGlvbiBjKGUsdCl7ZChlLmEpLGUuYz0hMSwoZS5hPXQpLmk9ZX1mdW5jdGlvbiBDKGUpe2Zvcih2YXIgdD1lLmEuYTsoZT1kZShlKSkuYS5hPT09dDspO3JldHVybiBlLmMmJihjKGUsdD1mKGNlKGUpLmEuYixlLmEuZSkpLGU9ZGUoZSkpLGV9ZnVuY3Rpb24gTChlLHQscil7dmFyIG49bmV3IHVlO3JldHVybiBuLmE9cixuLmU9SChlLmYsdC5lLG4pLHIuaT1ufWZ1bmN0aW9uIFAoZSx0KXtzd2l0Y2goZS5zKXtjYXNlIDEwMDEzMDpyZXR1cm4gMCE9KDEmdCk7Y2FzZSAxMDAxMzE6cmV0dXJuIDAhPT10O2Nhc2UgMTAwMTMyOnJldHVybiAwPHQ7Y2FzZSAxMDAxMzM6cmV0dXJuIHQ8MDtjYXNlIDEwMDEzNDpyZXR1cm4gMjw9dHx8dDw9LTJ9cmV0dXJuITF9ZnVuY3Rpb24gQShlKXt2YXIgdD1lLmEscj10LmQ7ci5jPWUuZCxyLmE9dCxPKGUpfWZ1bmN0aW9uIGsoZSx0LHIpe2Zvcih0PShlPXQpLmE7ZSE9PXI7KXtlLmM9ITE7dmFyIG49Y2UoZSksbz1uLmE7aWYoby5hIT09dC5hKXtpZighbi5jKXtBKGUpO2JyZWFrfWMobixvPWYodC5jLmIsby5iKSl9dC5jIT09byYmKFMoSyhvKSxvKSxTKHQsbykpLEEoZSksdD1uLmEsZT1ufXJldHVybiB0fWZ1bmN0aW9uIFIoZSx0LHIsbixvLGkpe2Zvcih2YXIgYT0hMDtMKGUsdCxyLmIpLChyPXIuYykhPT1uOyk7Zm9yKG51bGw9PT1vJiYobz1jZSh0KS5hLmIuYyk7KHI9KG49Y2UodCkpLmEuYikuYT09PW8uYTspci5jIT09byYmKFMoSyhyKSxyKSxTKEsobykscikpLG4uZj10LmYtci5mLG4uZD1QKGUsbi5mKSx0LmI9ITAsIWEmJk4oZSx0KSYmKFQocixvKSxPKHQpLGQobykpLGE9ITEsdD1uLG89cjt0LmI9ITAsaSYmQihlLHQpfWZ1bmN0aW9uIEQoZSx0LHIsbixvKXt2YXIgaT1bdC5nWzBdLHQuZ1sxXSx0LmdbMl1dO3QuZD1udWxsLHQuZD1lLm8mJmUubyhpLHIsbixlLmMpfHxudWxsLG51bGw9PT10LmQmJihvP2Uubnx8KFkoZSwxMDAxNTYpLGUubj0hMCk6dC5kPXJbMF0pfWZ1bmN0aW9uIEkoZSx0LHIpe3ZhciBuPVtudWxsLG51bGwsbnVsbCxudWxsXTtuWzBdPXQuYS5kLG5bMV09ci5hLmQsRChlLHQuYSxuLFsuNSwuNSwwLDBdLCExKSxTKHQscil9ZnVuY3Rpb24gVShlLHQscixuLG8pe3ZhciBpPU1hdGguYWJzKHQuYi1lLmIpK01hdGguYWJzKHQuYS1lLmEpLGE9TWF0aC5hYnMoci5iLWUuYikrTWF0aC5hYnMoci5hLWUuYSkscz1vKzE7bltvXT0uNSphLyhpK2EpLG5bc109LjUqaS8oaSthKSxlLmdbMF0rPW5bb10qdC5nWzBdK25bc10qci5nWzBdLGUuZ1sxXSs9bltvXSp0LmdbMV0rbltzXSpyLmdbMV0sZS5nWzJdKz1uW29dKnQuZ1syXStuW3NdKnIuZ1syXX1mdW5jdGlvbiBOKGUsdCl7dmFyIHI9Y2UodCksbj10LmEsbz1yLmE7aWYoZyhuLmEsby5hKSl7aWYoMDxiKG8uYi5hLG4uYSxvLmEpKXJldHVybiExO2lmKG0obi5hLG8uYSkpe2lmKG4uYSE9PW8uYSl7cj1lLmU7dmFyIGk9bi5hLmg7aWYoMDw9aSl7dmFyIGE9KHI9ci5iKS5kLHM9ci5lLGw9ci5jLHU9bFtpXTthW3VdPWFbci5hXSwobFthW3VdXT11KTw9LS1yLmEmJih1PD0xP3NlKHIsdSk6ZyhzW2FbdT4+MV1dLHNbYVt1XV0pP3NlKHIsdSk6bGUocix1KSksc1tpXT1udWxsLGxbaV09ci5iLHIuYj1pfWVsc2UgZm9yKHIuY1stKGkrMSldPW51bGw7MDxyLmEmJm51bGw9PT1yLmNbci5kW3IuYS0xXV07KS0tci5hO0koZSxLKG8pLG4pfX1lbHNlIE0oby5iKSxTKG4sSyhvKSksdC5iPXIuYj0hMH1lbHNle2lmKGIobi5iLmEsby5hLG4uYSk8MClyZXR1cm4hMTtkZSh0KS5iPXQuYj0hMCxNKG4uYiksUyhLKG8pLG4pfXJldHVybiEwfWZ1bmN0aW9uIEYoZSx0KXt2YXIgcj1jZSh0KSxuPXQuYSxvPXIuYSxpPW4uYSxhPW8uYSxzPW4uYi5hLGw9by5iLmEsdT1uZXcgJDtpZihiKHMsZS5hLGkpLGIobCxlLmEsYSksaT09PWF8fE1hdGgubWluKGkuYSxzLmEpPk1hdGgubWF4KGEuYSxsLmEpKXJldHVybiExO2lmKGcoaSxhKSl7aWYoMDxiKGwsaSxhKSlyZXR1cm4hMX1lbHNlIGlmKGIocyxhLGkpPDApcmV0dXJuITE7dmFyIGMsZCxmPXMsaD1pLHA9bCx5PWE7aWYoZyhmLGgpfHwoYz1mLGY9aCxoPWMpLGcocCx5KXx8KGM9cCxwPXkseT1jKSxnKGYscCl8fChjPWYsZj1wLHA9YyxjPWgsaD15LHk9YyksZyhwLGgpP2coaCx5KT8oKGM9dihmLHAsaCkpKyhkPXYocCxoLHkpKTwwJiYoYz0tYyxkPS1kKSx1LmI9aihjLHAuYixkLGguYikpOigoYz1iKGYscCxoKSkrKGQ9LWIoZix5LGgpKTwwJiYoYz0tYyxkPS1kKSx1LmI9aihjLHAuYixkLHkuYikpOnUuYj0ocC5iK2guYikvMixfKGYsaCl8fChjPWYsZj1oLGg9YyksXyhwLHkpfHwoYz1wLHA9eSx5PWMpLF8oZixwKXx8KGM9ZixmPXAscD1jLGM9aCxoPXkseT1jKSxfKHAsaCk/XyhoLHkpPygoYz14KGYscCxoKSkrKGQ9eChwLGgseSkpPDAmJihjPS1jLGQ9LWQpLHUuYT1qKGMscC5hLGQsaC5hKSk6KChjPXcoZixwLGgpKSsoZD0tdyhmLHksaCkpPDAmJihjPS1jLGQ9LWQpLHUuYT1qKGMscC5hLGQseS5hKSk6dS5hPShwLmEraC5hKS8yLGcodSxlLmEpJiYodS5iPWUuYS5iLHUuYT1lLmEuYSksZj1nKGksYSk/aTphLGcoZix1KSYmKHUuYj1mLmIsdS5hPWYuYSksbSh1LGkpfHxtKHUsYSkpcmV0dXJuIE4oZSx0KSwhMTtpZighbShzLGUuYSkmJjA8PWIocyxlLmEsdSl8fCFtKGwsZS5hKSYmYihsLGUuYSx1KTw9MCl7aWYobD09PWUuYSlyZXR1cm4gTShuLmIpLFMoby5iLG4pLG49Y2UodD1DKHQpKS5hLGsoZSxjZSh0KSxyKSxSKGUsdCxLKG4pLG4sbiwhMCksITA7aWYocyE9PWUuYSlyZXR1cm4gMDw9YihzLGUuYSx1KSYmKGRlKHQpLmI9dC5iPSEwLE0obi5iKSxuLmEuYj1lLmEuYixuLmEuYT1lLmEuYSksYihsLGUuYSx1KTw9MCYmKHQuYj1yLmI9ITAsTShvLmIpLG8uYS5iPWUuYS5iLG8uYS5hPWUuYS5hKSwhMTtmb3IoTShvLmIpLFMobi5lLEsobykpLGE9KGk9cj10KS5hLmIuYTsoaT1kZShpKSkuYS5iLmE9PT1hOyk7cmV0dXJuIGk9Y2UodD1pKS5hLmIuYyxyLmE9SyhvKSxSKGUsdCwobz1rKGUscixudWxsKSkuYyxuLmIuYyxpLCEwKSwhMH1yZXR1cm4gTShuLmIpLE0oby5iKSxTKEsobyksbiksbi5hLmI9dS5iLG4uYS5hPXUuYSxuLmEuaD10ZShlLmUsbi5hKSxuPW4uYSxvPVswLDAsMCwwXSx1PVtpLmQscy5kLGEuZCxsLmRdLG4uZ1swXT1uLmdbMV09bi5nWzJdPTAsVShuLGkscyxvLDApLFUobixhLGwsbywyKSxEKGUsbix1LG8sITApLGRlKHQpLmI9dC5iPXIuYj0hMCwhMX1mdW5jdGlvbiBCKGUsdCl7Zm9yKHZhciByPWNlKHQpOzspe2Zvcig7ci5iOylyPWNlKHQ9cik7aWYoIXQuYiYmKG51bGw9PT0odD1kZShyPXQpKXx8IXQuYikpYnJlYWs7dC5iPSExO3ZhciBuLG89dC5hLGk9ci5hO2lmKG49by5iLmEhPT1pLmIuYSllOnt2YXIgYT1jZShuPXQpLHM9bi5hLGw9YS5hLHU9dm9pZCAwO2lmKGcocy5iLmEsbC5iLmEpKXtpZihiKHMuYi5hLGwuYi5hLHMuYSk8MCl7bj0hMTticmVhayBlfWRlKG4pLmI9bi5iPSEwLHU9TShzKSxTKGwuYix1KSx1LmQuYz1uLmR9ZWxzZXtpZigwPGIobC5iLmEscy5iLmEsbC5hKSl7bj0hMTticmVhayBlfW4uYj1hLmI9ITAsdT1NKGwpLFMocy5lLGwuYiksdS5iLmQuYz1uLmR9bj0hMH1pZihuJiYoci5jPyhPKHIpLGQoaSksaT0ocj1jZSh0KSkuYSk6dC5jJiYoTyh0KSxkKG8pLG89KHQ9ZGUocikpLmEpKSxvLmEhPT1pLmEpaWYoby5iLmE9PT1pLmIuYXx8dC5jfHxyLmN8fG8uYi5hIT09ZS5hJiZpLmIuYSE9PWUuYSlOKGUsdCk7ZWxzZSBpZihGKGUsdCkpYnJlYWs7by5hPT09aS5hJiZvLmIuYT09PWkuYi5hJiYoVChpLG8pLE8odCksZChvKSx0PWRlKHIpKX19ZnVuY3Rpb24gRyhlLHQpe2Zvcih2YXIgcj0oZS5hPXQpLmM7bnVsbD09PXIuaTspaWYoKHI9ci5jKT09PXQuYyl7cj1lO3ZhciBuPXQ7KGE9bmV3IHVlKS5hPW4uYy5iO2Zvcih2YXIgbz0obD1yLmYpLmE7bnVsbCE9PShvPW8uYSkuYiYmIWwuYyhsLmIsYSxvLmIpOyk7dmFyIGk9Y2UobD1vLmIpLGE9bC5hO289aS5hO2lmKDA9PT1iKGEuYi5hLG4sYS5hKSltKChhPWwuYSkuYSxuKXx8bShhLmIuYSxuKXx8KE0oYS5iKSxsLmMmJihkKGEuYyksbC5jPSExKSxTKG4uYyxhKSxHKHIsbikpO2Vsc2V7dmFyIHM9ZyhvLmIuYSxhLmIuYSk/bDppO2k9dm9pZCAwO2wuZHx8cy5jPyhpPXM9PT1sP2Yobi5jLmIsYS5lKTpmKG8uYi5jLmIsbi5jKS5iLHMuYz9jKHMsaSk6KChsPUwoYT1yLGwsaSkpLmY9ZGUobCkuZitsLmEuZixsLmQ9UChhLGwuZikpLEcocixuKSk6UihyLGwsbi5jLG4uYyxudWxsLCEwKX1yZXR1cm59aWYobD0oYT1jZShyPUMoci5pKSkpLmEsKGE9ayhlLGEsbnVsbCkpLmM9PT1sKXthPShsPWEpLmMsbz1jZShyKSxpPXIuYSxzPW8uYTt2YXIgbCx1PSExO2kuYi5hIT09cy5iLmEmJkYoZSxyKSxtKGkuYSxlLmEpJiYoUyhLKGEpLGkpLGE9Y2Uocj1DKHIpKS5hLGsoZSxjZShyKSxvKSx1PSEwKSxtKHMuYSxlLmEpJiYoUyhsLEsocykpLGw9ayhlLG8sbnVsbCksdT0hMCksdT9SKGUscixsLmMsYSxhLCEwKToobj1nKHMuYSxpLmEpP0socyk6aSxSKGUscixuPWYobC5jLmIsbiksbi5jLG4uYywhMSksbi5iLmkuYz0hMCxCKGUscikpfWVsc2UgUihlLHIsYS5jLGwsbCwhMCl9ZnVuY3Rpb24gVihlLHQpe3ZhciByPW5ldyB1ZSxuPWEoZS5iKTtuLmEuYj00ZTE1MCxuLmEuYT10LG4uYi5hLmI9LTRlMTUwLG4uYi5hLmE9dCxlLmE9bi5iLmEsci5hPW4sci5mPTAsci5kPSExLHIuYz0hMSxyLmg9ITAsci5iPSExLG49SChuPWUuZixuLmEsciksci5lPW59ZnVuY3Rpb24geihlKXt0aGlzLmE9bmV3IFcsdGhpcy5iPWUsdGhpcy5jPXV9ZnVuY3Rpb24gSChlLHQscil7Zm9yKDtudWxsIT09KHQ9dC5jKS5iJiYhZS5jKGUuYix0LmIscik7KTtyZXR1cm4gZT1uZXcgVyhyLHQuYSx0KSx0LmEuYz1lLHQuYT1lfWZ1bmN0aW9uIFcoZSx0LHIpe3RoaXMuYj1lfHxudWxsLHRoaXMuYT10fHx0aGlzLHRoaXMuYz1yfHx0aGlzfWZ1bmN0aW9uIHEoKXt0aGlzLmQ9MCx0aGlzLnA9dGhpcy5iPXRoaXMucT1udWxsLHRoaXMuaj1bMCwwLDBdLHRoaXMucz0xMDAxMzAsdGhpcy5uPSExLHRoaXMubz10aGlzLmE9dGhpcy5lPXRoaXMuZj1udWxsLHRoaXMubT0hMSx0aGlzLmM9dGhpcy5yPXRoaXMuaT10aGlzLms9dGhpcy5sPXRoaXMuaD1udWxsfWZ1bmN0aW9uIFgoZSx0KXtpZihlLmQhPT10KWZvcig7ZS5kIT09dDspaWYoZS5kPHQpc3dpdGNoKGUuZCl7Y2FzZSAwOlkoZSwxMDAxNTEpLGUudShudWxsKTticmVhaztjYXNlIDE6WShlLDEwMDE1MiksZS50KCl9ZWxzZSBzd2l0Y2goZS5kKXtjYXNlIDI6WShlLDEwMDE1NCksZS52KCk7YnJlYWs7Y2FzZSAxOlkoZSwxMDAxNTMpLGUudygpfX1mdW5jdGlvbiBZKGUsdCl7ZS5wJiZlLnAodCxlLmMpfWZ1bmN0aW9uIFooZSx0KXt0aGlzLmI9ZXx8dGhpcyx0aGlzLmQ9dHx8dGhpcyx0aGlzLmE9bnVsbCx0aGlzLmM9ITF9ZnVuY3Rpb24gUSgpeyh0aGlzLmg9dGhpcykuaT10aGlzLmQ9dGhpcy5hPXRoaXMuZT10aGlzLmM9dGhpcy5iPW51bGwsdGhpcy5mPTB9ZnVuY3Rpb24gSyhlKXtyZXR1cm4gZS5iLmV9ZnVuY3Rpb24gSigpe3RoaXMuYz1uZXcgJCx0aGlzLmE9bmV3IFosdGhpcy5iPW5ldyBRLHRoaXMuZD1uZXcgUSx0aGlzLmIuYj10aGlzLmQsdGhpcy5kLmI9dGhpcy5ifWZ1bmN0aW9uICQoZSx0KXt0aGlzLmU9ZXx8dGhpcyx0aGlzLmY9dHx8dGhpcyx0aGlzLmQ9dGhpcy5jPW51bGwsdGhpcy5nPVswLDAsMF0sdGhpcy5oPXRoaXMuYT10aGlzLmI9MH1mdW5jdGlvbiBlZSgpe3RoaXMuYz1bXSx0aGlzLmQ9bnVsbCx0aGlzLmE9MCx0aGlzLmU9ITEsdGhpcy5iPW5ldyBuZX1mdW5jdGlvbiB0ZShlLHQpe2lmKGUuZSl7dmFyIHIsbj1lLmIsbz0rK24uYTtyZXR1cm4gMipvPm4uZiYmKG4uZio9MixuLmM9b2Uobi5jLG4uZisxKSksMD09PW4uYj9yPW86KHI9bi5iLG4uYj1uLmNbbi5iXSksbi5lW3JdPXQsbi5jW3JdPW8sbi5kW29dPXIsbi5oJiZsZShuLG8pLHJ9cmV0dXJuIG49ZS5hKyssZS5jW25dPXQsLShuKzEpfWZ1bmN0aW9uIHJlKGUpe2lmKDA9PT1lLmEpcmV0dXJuIGFlKGUuYik7dmFyIHQ9ZS5jW2UuZFtlLmEtMV1dO2lmKDAhPT1lLmIuYSYmZyhpZShlLmIpLHQpKXJldHVybiBhZShlLmIpO2Zvcig7LS1lLmEsMDxlLmEmJm51bGw9PT1lLmNbZS5kW2UuYS0xXV07KTtyZXR1cm4gdH1mdW5jdGlvbiBuZSgpe3RoaXMuZD1vZShbMF0sMzMpLHRoaXMuZT1bbnVsbCxudWxsXSx0aGlzLmM9WzAsMF0sdGhpcy5hPTAsdGhpcy5mPTMyLHRoaXMuYj0wLHRoaXMuaD0hMSx0aGlzLmRbMV09MX1mdW5jdGlvbiBvZShlLHQpe2Zvcih2YXIgcj1BcnJheSh0KSxuPTA7bjxlLmxlbmd0aDtuKyspcltuXT1lW25dO2Zvcig7bjx0O24rKylyW25dPTA7cmV0dXJuIHJ9ZnVuY3Rpb24gaWUoZSl7cmV0dXJuIGUuZVtlLmRbMV1dfWZ1bmN0aW9uIGFlKGUpe3ZhciB0PWUuZCxyPWUuZSxuPWUuYyxvPXRbMV0saT1yW29dO3JldHVybiAwPGUuYSYmKHRbMV09dFtlLmFdLG5bdFsxXV09MSxyW29dPW51bGwsbltvXT1lLmIsZS5iPW8sMDwtLWUuYSYmc2UoZSwxKSksaX1mdW5jdGlvbiBzZShlLHQpe2Zvcih2YXIgcj1lLmQsbj1lLmUsbz1lLmMsaT10LGE9cltpXTs7KXt2YXIgcz1pPDwxO3M8ZS5hJiZnKG5bcltzKzFdXSxuW3Jbc11dKSYmKHMrPTEpO3ZhciBsPXJbc107aWYocz5lLmF8fGcoblthXSxuW2xdKSl7b1tyW2ldPWFdPWk7YnJlYWt9b1tyW2ldPWxdPWksaT1zfX1mdW5jdGlvbiBsZShlLHQpe2Zvcih2YXIgcj1lLmQsbj1lLmUsbz1lLmMsaT10LGE9cltpXTs7KXt2YXIgcz1pPj4xLGw9cltzXTtpZigwPT1zfHxnKG5bbF0sblthXSkpe29bcltpXT1hXT1pO2JyZWFrfW9bcltpXT1sXT1pLGk9c319ZnVuY3Rpb24gdWUoKXt0aGlzLmU9dGhpcy5hPW51bGwsdGhpcy5mPTAsdGhpcy5jPXRoaXMuYj10aGlzLmg9dGhpcy5kPSExfWZ1bmN0aW9uIGNlKGUpe3JldHVybiBlLmUuYy5ifWZ1bmN0aW9uIGRlKGUpe3JldHVybiBlLmUuYS5ifShuPXEucHJvdG90eXBlKS54PWZ1bmN0aW9uKCl7WCh0aGlzLDApfSxuLkI9ZnVuY3Rpb24oZSx0KXtzd2l0Y2goZSl7Y2FzZSAxMDAxNDI6cmV0dXJuO2Nhc2UgMTAwMTQwOnN3aXRjaCh0KXtjYXNlIDEwMDEzMDpjYXNlIDEwMDEzMTpjYXNlIDEwMDEzMjpjYXNlIDEwMDEzMzpjYXNlIDEwMDEzNDpyZXR1cm4gdm9pZCh0aGlzLnM9dCl9YnJlYWs7Y2FzZSAxMDAxNDE6cmV0dXJuIHZvaWQodGhpcy5tPSEhdCk7ZGVmYXVsdDpyZXR1cm4gdm9pZCBZKHRoaXMsMTAwOTAwKX1ZKHRoaXMsMTAwOTAxKX0sbi55PWZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIDEwMDE0MjpyZXR1cm4gMDtjYXNlIDEwMDE0MDpyZXR1cm4gdGhpcy5zO2Nhc2UgMTAwMTQxOnJldHVybiB0aGlzLm07ZGVmYXVsdDpZKHRoaXMsMTAwOTAwKX1yZXR1cm4hMX0sbi5BPWZ1bmN0aW9uKGUsdCxyKXt0aGlzLmpbMF09ZSx0aGlzLmpbMV09dCx0aGlzLmpbMl09cn0sbi56PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dHx8bnVsbDtzd2l0Y2goZSl7Y2FzZSAxMDAxMDA6Y2FzZSAxMDAxMDY6dGhpcy5oPXI7YnJlYWs7Y2FzZSAxMDAxMDQ6Y2FzZSAxMDAxMTA6dGhpcy5sPXI7YnJlYWs7Y2FzZSAxMDAxMDE6Y2FzZSAxMDAxMDc6dGhpcy5rPXI7YnJlYWs7Y2FzZSAxMDAxMDI6Y2FzZSAxMDAxMDg6dGhpcy5pPXI7YnJlYWs7Y2FzZSAxMDAxMDM6Y2FzZSAxMDAxMDk6dGhpcy5wPXI7YnJlYWs7Y2FzZSAxMDAxMDU6Y2FzZSAxMDAxMTE6dGhpcy5vPXI7YnJlYWs7Y2FzZSAxMDAxMTI6dGhpcy5yPXI7YnJlYWs7ZGVmYXVsdDpZKHRoaXMsMTAwOTAwKX19LG4uQz1mdW5jdGlvbihlLHQpe3ZhciByPSExLG49WzAsMCwwXTtYKHRoaXMsMik7Zm9yKHZhciBvPTA7bzwzOysrbyl7dmFyIGk9ZVtvXTtpPC0xZTE1MCYmKGk9LTFlMTUwLHI9ITApLDFlMTUwPGkmJihpPTFlMTUwLHI9ITApLG5bb109aX1yJiZZKHRoaXMsMTAwMTU1KSxudWxsPT09KHI9dGhpcy5xKT9TKHI9YSh0aGlzLmIpLHIuYik6KE0ocikscj1yLmUpLHIuYS5kPXQsci5hLmdbMF09blswXSxyLmEuZ1sxXT1uWzFdLHIuYS5nWzJdPW5bMl0sci5mPTEsci5iLmY9LTEsdGhpcy5xPXJ9LG4udT1mdW5jdGlvbihlKXtYKHRoaXMsMCksdGhpcy5kPTEsdGhpcy5iPW5ldyBKLHRoaXMuYz1lfSxuLnQ9ZnVuY3Rpb24oKXtYKHRoaXMsMSksdGhpcy5kPTIsdGhpcy5xPW51bGx9LG4udj1mdW5jdGlvbigpe1godGhpcywyKSx0aGlzLmQ9MX0sbi53PWZ1bmN0aW9uKCl7WCh0aGlzLDEpLHRoaXMuZD0wO3ZhciBlLHQscj0hMSxuPVtsPXRoaXMualswXSxvPXRoaXMualsxXSxhPXRoaXMualsyXV07aWYoMD09PWwmJjA9PT1vJiYwPT09YSl7Zm9yKHZhciBvPVstMmUxNTAsLTJlMTUwLC0yZTE1MF0saT1bMmUxNTAsMmUxNTAsMmUxNTBdLGE9W10scz1bXSxsPShyPXRoaXMuYi5jKS5lO2whPT1yO2w9bC5lKWZvcih2YXIgdT0wO3U8MzsrK3Upe3ZhciBjPWwuZ1t1XTtjPGlbdV0mJihpW3VdPWMsc1t1XT1sKSxjPm9bdV0mJihvW3VdPWMsYVt1XT1sKX1pZihsPTAsb1sxXS1pWzFdPm9bMF0taVswXSYmKGw9MSksb1syXS1pWzJdPm9bbF0taVtsXSYmKGw9MiksaVtsXT49b1tsXSluWzBdPTAsblsxXT0wLG5bMl09MTtlbHNle2ZvcihvPTAsaT1zW2xdLGE9YVtsXSxzPVswLDAsMF0saT1baS5nWzBdLWEuZ1swXSxpLmdbMV0tYS5nWzFdLGkuZ1syXS1hLmdbMl1dLHU9WzAsMCwwXSxsPXIuZTtsIT09cjtsPWwuZSl1WzBdPWwuZ1swXS1hLmdbMF0sdVsxXT1sLmdbMV0tYS5nWzFdLHVbMl09bC5nWzJdLWEuZ1syXSxzWzBdPWlbMV0qdVsyXS1pWzJdKnVbMV0sc1sxXT1pWzJdKnVbMF0taVswXSp1WzJdLHNbMl09aVswXSp1WzFdLWlbMV0qdVswXSxvPChjPXNbMF0qc1swXStzWzFdKnNbMV0rc1syXSpzWzJdKSYmKG89YyxuWzBdPXNbMF0sblsxXT1zWzFdLG5bMl09c1syXSk7bzw9MCYmKG5bMF09blsxXT1uWzJdPTAsbltFKGkpXT0xKX1yPSEwfWZvcihzPUUobiksbD10aGlzLmIuYyxvPShzKzEpJTMsYT0ocysyKSUzLHM9MDxuW3NdPzE6LTEsbj1sLmU7biE9PWw7bj1uLmUpbi5iPW4uZ1tvXSxuLmE9cypuLmdbYV07aWYocil7Zm9yKG49MCxsPShyPXRoaXMuYi5hKS5iO2whPT1yO2w9bC5iKWlmKCEoKG89bC5hKS5mPD0wKSlmb3IoO24rPShvLmEuYi1vLmIuYS5iKSooby5hLmErby5iLmEuYSksKG89by5lKSE9PWwuYTspO2lmKG48MClmb3Iocj0obj10aGlzLmIuYykuZTtyIT09bjtyPXIuZSlyLmE9LXIuYX1mb3IodGhpcy5uPSExLGw9KG49dGhpcy5iLmIpLmg7bCE9PW47bD1yKXI9bC5oLG89bC5lLG0obC5hLGwuYi5hKSYmbC5lLmUhPT1sJiYoSSh0aGlzLG8sbCksZChsKSxvPShsPW8pLmUpLG8uZT09PWwmJihvIT09bCYmKG8hPT1yJiZvIT09ci5ifHwocj1yLmgpLGQobykpLGwhPT1yJiZsIT09ci5ifHwocj1yLmgpLGQobCkpO2Zvcih0aGlzLmU9bj1uZXcgZWUsbD0ocj10aGlzLmIuYykuZTtsIT09cjtsPWwuZSlsLmg9dGUobixsKTtmb3IoIWZ1bmN0aW9uKGUpe2UuZD1bXTtmb3IodmFyIHQ9MDt0PGUuYTt0KyspZS5kW3RdPXQ7ZS5kLnNvcnQoZnVuY3Rpb24ocil7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGcocltlXSxyW3RdKT8xOi0xfX0oZS5jKSksZS5lPSEwLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmE7MTw9dDstLXQpc2UoZSx0KTtlLmg9ITB9KGUuYil9KG4pLHRoaXMuZj1uZXcgeih0aGlzKSxWKHRoaXMsLTRlMTUwKSxWKHRoaXMsNGUxNTApO251bGwhPT0obj1yZSh0aGlzLmUpKTspe2Zvcig7Oyl7ZTppZihsPXRoaXMuZSwwPT09bC5hKXI9aWUobC5iKTtlbHNlIGlmKHI9bC5jW2wuZFtsLmEtMV1dLDAhPT1sLmIuYSYmKGw9aWUobC5iKSxnKGwscikpKXtyPWw7YnJlYWsgZX1pZihudWxsPT09cnx8IW0ocixuKSlicmVhaztyPXJlKHRoaXMuZSksSSh0aGlzLG4uYyxyLmMpfUcodGhpcyxuKX1mb3IodGhpcy5hPXRoaXMuZi5hLmEuYi5hLmEsbj0wO251bGwhPT0ocj10aGlzLmYuYS5hLmIpOylyLmh8fCsrbixPKHIpO2Zvcih0aGlzLmY9bnVsbCwobj10aGlzLmUpLmI9bnVsbCxuLmQ9bnVsbCx0aGlzLmU9bi5jPW51bGwsbD0obj10aGlzLmIpLmEuYjtsIT09bi5hO2w9cilyPWwuYiwobD1sLmEpLmUuZT09PWwmJihUKGwuYyxsKSxkKGwpKTtpZighdGhpcy5uKXtpZihuPXRoaXMuYix0aGlzLm0pZm9yKGw9bi5iLmg7bCE9PW4uYjtsPXIpcj1sLmgsbC5iLmQuYyE9PWwuZC5jP2wuZj1sLmQuYz8xOi0xOmQobCk7ZWxzZSBmb3IobD1uLmEuYjtsIT09bi5hO2w9cilpZihyPWwuYixsLmMpe2ZvcihsPWwuYTtnKGwuYi5hLGwuYSk7bD1sLmMuYik7Zm9yKDtnKGwuYSxsLmIuYSk7bD1sLmUpO2ZvcihvPWwuYy5iLGE9dm9pZCAwO2wuZSE9PW87KWlmKGcobC5iLmEsby5hKSl7Zm9yKDtvLmUhPT1sJiYoZygodD1vLmUpLmIuYSx0LmEpfHxiKG8uYSxvLmIuYSxvLmUuYi5hKTw9MCk7KW89KGE9ZihvLmUsbykpLmI7bz1vLmMuYn1lbHNle2Zvcig7by5lIT09bCYmKGcoKGU9bC5jLmIpLmEsZS5iLmEpfHwwPD1iKGwuYi5hLGwuYSxsLmMuYi5hKSk7KWw9KGE9ZihsLGwuYy5iKSkuYjtsPWwuZX1mb3IoO28uZS5lIT09bDspbz0oYT1mKG8uZSxvKSkuYn1pZih0aGlzLmh8fHRoaXMuaXx8dGhpcy5rfHx0aGlzLmwpaWYodGhpcy5tKXtmb3Iocj0obj10aGlzLmIpLmEuYjtyIT09bi5hO3I9ci5iKWlmKHIuYyl7Zm9yKHRoaXMuaCYmdGhpcy5oKDIsdGhpcy5jKSxsPXIuYTt0aGlzLmsmJnRoaXMuayhsLmEuZCx0aGlzLmMpLChsPWwuZSkhPT1yLmE7KTt0aGlzLmkmJnRoaXMuaSh0aGlzLmMpfX1lbHNle2ZvcihuPXRoaXMuYixyPSEhdGhpcy5sLGw9ITEsbz0tMSxhPW4uYS5kO2EhPT1uLmE7YT1hLmQpaWYoYS5jKWZvcihsfHwodGhpcy5oJiZ0aGlzLmgoNCx0aGlzLmMpLGw9ITApLHM9YS5hO3ImJihvIT09KGk9cy5iLmQuYz8wOjEpJiYobz1pLHRoaXMubCYmdGhpcy5sKCEhbyx0aGlzLmMpKSksdGhpcy5rJiZ0aGlzLmsocy5hLmQsdGhpcy5jKSwocz1zLmUpIT09YS5hOyk7bCYmdGhpcy5pJiZ0aGlzLmkodGhpcy5jKX1pZih0aGlzLnIpe2ZvcihsPShuPXRoaXMuYikuYS5iO2whPT1uLmE7bD1yKWlmKHI9bC5iLCFsLmMpe2ZvcihhPShvPWwuYSkuZSxzPXZvaWQgMDthPShzPWEpLmUsKHMuZD1udWxsKT09PXMuYi5kJiYocy5jPT09cz95KHMuYSxudWxsKToocy5hLmM9cy5jLGgocyxLKHMpKSksKGk9cy5iKS5jPT09aT95KGkuYSxudWxsKTooaS5hLmM9aS5jLGgoaSxLKGkpKSkscChzKSkscyE9PW87KTtvPWwuZCwoKGw9bC5iKS5kPW8pLmI9bH1yZXR1cm4gdGhpcy5yKHRoaXMuYiksdm9pZCh0aGlzLmM9dGhpcy5iPW51bGwpfX10aGlzLmI9dGhpcy5jPW51bGx9LHRoaXMubGlidGVzcz17R2x1VGVzc2VsYXRvcjpxLHdpbmRpbmdSdWxlOntHTFVfVEVTU19XSU5ESU5HX09ERDoxMDAxMzAsR0xVX1RFU1NfV0lORElOR19OT05aRVJPOjEwMDEzMSxHTFVfVEVTU19XSU5ESU5HX1BPU0lUSVZFOjEwMDEzMixHTFVfVEVTU19XSU5ESU5HX05FR0FUSVZFOjEwMDEzMyxHTFVfVEVTU19XSU5ESU5HX0FCU19HRVFfVFdPOjEwMDEzNH0scHJpbWl0aXZlVHlwZTp7R0xfTElORV9MT09QOjIsR0xfVFJJQU5HTEVTOjQsR0xfVFJJQU5HTEVfU1RSSVA6NSxHTF9UUklBTkdMRV9GQU46Nn0sZXJyb3JUeXBlOntHTFVfVEVTU19NSVNTSU5HX0JFR0lOX1BPTFlHT046MTAwMTUxLEdMVV9URVNTX01JU1NJTkdfRU5EX1BPTFlHT046MTAwMTUzLEdMVV9URVNTX01JU1NJTkdfQkVHSU5fQ09OVE9VUjoxMDAxNTIsR0xVX1RFU1NfTUlTU0lOR19FTkRfQ09OVE9VUjoxMDAxNTQsR0xVX1RFU1NfQ09PUkRfVE9PX0xBUkdFOjEwMDE1NSxHTFVfVEVTU19ORUVEX0NPTUJJTkVfQ0FMTEJBQ0s6MTAwMTU2fSxnbHVFbnVtOntHTFVfVEVTU19NRVNIOjEwMDExMixHTFVfVEVTU19UT0xFUkFOQ0U6MTAwMTQyLEdMVV9URVNTX1dJTkRJTkdfUlVMRToxMDAxNDAsR0xVX1RFU1NfQk9VTkRBUllfT05MWToxMDAxNDEsR0xVX0lOVkFMSURfRU5VTToxMDA5MDAsR0xVX0lOVkFMSURfVkFMVUU6MTAwOTAxLEdMVV9URVNTX0JFR0lOOjEwMDEwMCxHTFVfVEVTU19WRVJURVg6MTAwMTAxLEdMVV9URVNTX0VORDoxMDAxMDIsR0xVX1RFU1NfRVJST1I6MTAwMTAzLEdMVV9URVNTX0VER0VfRkxBRzoxMDAxMDQsR0xVX1RFU1NfQ09NQklORToxMDAxMDUsR0xVX1RFU1NfQkVHSU5fREFUQToxMDAxMDYsR0xVX1RFU1NfVkVSVEVYX0RBVEE6MTAwMTA3LEdMVV9URVNTX0VORF9EQVRBOjEwMDEwOCxHTFVfVEVTU19FUlJPUl9EQVRBOjEwMDEwOSxHTFVfVEVTU19FREdFX0ZMQUdfREFUQToxMDAxMTAsR0xVX1RFU1NfQ09NQklORV9EQVRBOjEwMDExMX19LHEucHJvdG90eXBlLmdsdURlbGV0ZVRlc3M9cS5wcm90b3R5cGUueCxxLnByb3RvdHlwZS5nbHVUZXNzUHJvcGVydHk9cS5wcm90b3R5cGUuQixxLnByb3RvdHlwZS5nbHVHZXRUZXNzUHJvcGVydHk9cS5wcm90b3R5cGUueSxxLnByb3RvdHlwZS5nbHVUZXNzTm9ybWFsPXEucHJvdG90eXBlLkEscS5wcm90b3R5cGUuZ2x1VGVzc0NhbGxiYWNrPXEucHJvdG90eXBlLnoscS5wcm90b3R5cGUuZ2x1VGVzc1ZlcnRleD1xLnByb3RvdHlwZS5DLHEucHJvdG90eXBlLmdsdVRlc3NCZWdpblBvbHlnb249cS5wcm90b3R5cGUudSxxLnByb3RvdHlwZS5nbHVUZXNzQmVnaW5Db250b3VyPXEucHJvdG90eXBlLnQscS5wcm90b3R5cGUuZ2x1VGVzc0VuZENvbnRvdXI9cS5wcm90b3R5cGUudixxLnByb3RvdHlwZS5nbHVUZXNzRW5kUG9seWdvbj1xLnByb3RvdHlwZS53LHZvaWQgMCE9PXQmJih0LmV4cG9ydHM9dGhpcy5saWJ0ZXNzKX0se31dLDIzODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIE8oZSx0LHIsbil7Zm9yKHZhciBvPWVbdCsrXSxpPTE8PG8sYT0xK2kscz0xK2EsbD1vKzEsdT0oMTw8bCktMSxjPTAsZD0wLGY9MCxoPWVbdCsrXSxwPW5ldyBJbnQzMkFycmF5KDQwOTYpLHk9bnVsbDs7KXtmb3IoO2M8MTYmJjAhPT1oOylkfD1lW3QrK108PGMsYys9OCwxPT09aD9oPWVbdCsrXTotLWg7aWYoYzxsKWJyZWFrO3ZhciBtPWQmdTtpZihkPj49bCxjLT1sLG0hPWkpe2lmKG09PWEpYnJlYWs7Zm9yKHZhciBnPW08cz9tOnksdj0wLGI9ZztpPGI7KWI9cFtiXT4+OCwrK3Y7dmFyIF89YjtpZihuPGYrdisoZyE9PW0/MTowKSlyZXR1cm4gdm9pZCBjb25zb2xlLmxvZyhcIldhcm5pbmcsIGdpZiBzdHJlYW0gbG9uZ2VyIHRoYW4gZXhwZWN0ZWQuXCIpO3JbZisrXT1fO3ZhciB4PWYrPXY7Zm9yKGchPT1tJiYocltmKytdPV8pLGI9Zzt2LS07KWI9cFtiXSxyWy0teF09MjU1JmIsYj4+PTg7bnVsbCE9PXkmJnM8NDA5NiYmKHBbcysrXT15PDw4fF8sdSsxPD1zJiZsPDEyJiYoKytsLHU9dTw8MXwxKSkseT1tfWVsc2Ugcz0xK2EsdT0oMTw8KGw9bysxKSktMSx5PW51bGx9cmV0dXJuIGYhPT1uJiZjb25zb2xlLmxvZyhcIldhcm5pbmcsIGdpZiBzdHJlYW0gc2hvcnRlciB0aGFuIGV4cGVjdGVkLlwiKSxyfXRyeXtyLkdpZldyaXRlcj1mdW5jdGlvbihnLGUsdCxyKXt2YXIgdj0wLG49dm9pZCAwPT09KHI9dm9pZCAwPT09cj97fTpyKS5sb29wP251bGw6ci5sb29wLGI9dm9pZCAwPT09ci5wYWxldHRlP251bGw6ci5wYWxldHRlO2lmKGU8PTB8fHQ8PTB8fDY1NTM1PGV8fDY1NTM1PHQpdGhyb3cgbmV3IEVycm9yKFwiV2lkdGgvSGVpZ2h0IGludmFsaWQuXCIpO2Z1bmN0aW9uIF8oZSl7dmFyIHQ9ZS5sZW5ndGg7aWYodDwyfHwyNTY8dHx8dCZ0LTEpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb2RlL2NvbG9yIGxlbmd0aCwgbXVzdCBiZSBwb3dlciBvZiAyIGFuZCAyIC4uIDI1Ni5cIik7cmV0dXJuIHR9Z1t2KytdPTcxLGdbdisrXT03MyxnW3YrK109NzAsZ1t2KytdPTU2LGdbdisrXT01NyxnW3YrK109OTc7dmFyIG89MCxpPTA7aWYobnVsbCE9PWIpe2Zvcih2YXIgYT1fKGIpO2E+Pj0xOykrK287aWYoYT0xPDxvLC0tbyx2b2lkIDAhPT1yLmJhY2tncm91bmQpe2lmKGE8PShpPXIuYmFja2dyb3VuZCkpdGhyb3cgbmV3IEVycm9yKFwiQmFja2dyb3VuZCBpbmRleCBvdXQgb2YgcmFuZ2UuXCIpO2lmKDA9PT1pKXRocm93IG5ldyBFcnJvcihcIkJhY2tncm91bmQgaW5kZXggZXhwbGljaXRseSBwYXNzZWQgYXMgMC5cIil9fWlmKGdbdisrXT0yNTUmZSxnW3YrK109ZT4+OCYyNTUsZ1t2KytdPTI1NSZ0LGdbdisrXT10Pj44JjI1NSxnW3YrK109KG51bGwhPT1iPzEyODowKXxvLGdbdisrXT1pLGdbdisrXT0wLG51bGwhPT1iKWZvcih2YXIgcz0wLGw9Yi5sZW5ndGg7czxsOysrcyl7dmFyIHU9YltzXTtnW3YrK109dT4+MTYmMjU1LGdbdisrXT11Pj44JjI1NSxnW3YrK109MjU1JnV9aWYobnVsbCE9PW4pe2lmKG48MHx8NjU1MzU8bil0aHJvdyBuZXcgRXJyb3IoXCJMb29wIGNvdW50IGludmFsaWQuXCIpO2dbdisrXT0zMyxnW3YrK109MjU1LGdbdisrXT0xMSxnW3YrK109NzgsZ1t2KytdPTY5LGdbdisrXT04NCxnW3YrK109ODMsZ1t2KytdPTY3LGdbdisrXT02NSxnW3YrK109ODAsZ1t2KytdPTY5LGdbdisrXT01MCxnW3YrK109NDYsZ1t2KytdPTQ4LGdbdisrXT0zLGdbdisrXT0xLGdbdisrXT0yNTUmbixnW3YrK109bj4+OCYyNTUsZ1t2KytdPTB9dmFyIHg9ITE7dGhpcy5hZGRGcmFtZT1mdW5jdGlvbihlLHQscixuLG8saSl7aWYoITA9PT14JiYoLS12LHg9ITEpLGk9dm9pZCAwPT09aT97fTppLGU8MHx8dDwwfHw2NTUzNTxlfHw2NTUzNTx0KXRocm93IG5ldyBFcnJvcihcIngveSBpbnZhbGlkLlwiKTtpZihyPD0wfHxuPD0wfHw2NTUzNTxyfHw2NTUzNTxuKXRocm93IG5ldyBFcnJvcihcIldpZHRoL0hlaWdodCBpbnZhbGlkLlwiKTtpZihvLmxlbmd0aDxyKm4pdGhyb3cgbmV3IEVycm9yKFwiTm90IGVub3VnaCBwaXhlbHMgZm9yIHRoZSBmcmFtZSBzaXplLlwiKTt2YXIgYT0hMCxzPWkucGFsZXR0ZTtpZihudWxsPT1zJiYoYT0hMSxzPWIpLG51bGw9PXMpdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBzdXBwbHkgZWl0aGVyIGEgbG9jYWwgb3IgZ2xvYmFsIHBhbGV0dGUuXCIpO2Zvcih2YXIgbD1fKHMpLHU9MDtsPj49MTspKyt1O2w9MTw8dTt2YXIgYz12b2lkIDA9PT1pLmRlbGF5PzA6aS5kZWxheSxkPXZvaWQgMD09PWkuZGlzcG9zYWw/MDppLmRpc3Bvc2FsO2lmKGQ8MHx8MzxkKXRocm93IG5ldyBFcnJvcihcIkRpc3Bvc2FsIG91dCBvZiByYW5nZS5cIik7dmFyIGY9ITEsaD0wO2lmKHZvaWQgMCE9PWkudHJhbnNwYXJlbnQmJm51bGwhPT1pLnRyYW5zcGFyZW50JiYoZj0hMCwoaD1pLnRyYW5zcGFyZW50KTwwfHxsPD1oKSl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc3BhcmVudCBjb2xvciBpbmRleC5cIik7aWYoMD09PWQmJiFmJiYwPT09Y3x8KGdbdisrXT0zMyxnW3YrK109MjQ5LGdbdisrXT00LGdbdisrXT1kPDwyfCghMD09PWY/MTowKSxnW3YrK109MjU1JmMsZ1t2KytdPWM+PjgmMjU1LGdbdisrXT1oLGdbdisrXT0wKSxnW3YrK109NDQsZ1t2KytdPTI1NSZlLGdbdisrXT1lPj44JjI1NSxnW3YrK109MjU1JnQsZ1t2KytdPXQ+PjgmMjU1LGdbdisrXT0yNTUmcixnW3YrK109cj4+OCYyNTUsZ1t2KytdPTI1NSZuLGdbdisrXT1uPj44JjI1NSxnW3YrK109ITA9PT1hPzEyOHx1LTE6MCwhMD09PWEpZm9yKHZhciBwPTAseT1zLmxlbmd0aDtwPHk7KytwKXt2YXIgbT1zW3BdO2dbdisrXT1tPj4xNiYyNTUsZ1t2KytdPW0+PjgmMjU1LGdbdisrXT0yNTUmbX1yZXR1cm4gdj1mdW5jdGlvbih0LHIsZSxuKXt0W3IrK109ZTt2YXIgbz1yKyssaT0xPDxlLGE9aS0xLHM9MStpLGw9MStzLHU9ZSsxLGM9MCxkPTA7ZnVuY3Rpb24gZihlKXtmb3IoO2U8PWM7KXRbcisrXT0yNTUmZCxkPj49OCxjLT04LHI9PT1vKzI1NiYmKHRbb109MjU1LG89cisrKX1mdW5jdGlvbiBoKGUpe2R8PWU8PGMsYys9dSxmKDgpfXZhciBwPW5bMF0mYSx5PXt9O2goaSk7Zm9yKHZhciBtPTEsZz1uLmxlbmd0aDttPGc7KyttKXt2YXIgdj1uW21dJmEsYj1wPDw4fHYsXz15W2JdO2lmKHZvaWQgMD09PV8pe2ZvcihkfD1wPDxjLGMrPXU7ODw9YzspdFtyKytdPTI1NSZkLGQ+Pj04LGMtPTgscj09PW8rMjU2JiYodFtvXT0yNTUsbz1yKyspOzQwOTY9PT1sPyhoKGkpLGw9MStzLHU9ZSsxLHk9e30pOigxPDx1PD1sJiYrK3UseVtiXT1sKyspLHA9dn1lbHNlIHA9X31oKHApLGgocyksZigxKSxvKzE9PT1yP3Rbb109MDoodFtvXT1yLW8tMSx0W3IrK109MCk7cmV0dXJuIHJ9KGcsdix1PDI/Mjp1LG8pfSx0aGlzLmVuZD1mdW5jdGlvbigpe3JldHVybiExPT09eCYmKGdbdisrXT01OSx4PSEwKSx2fSx0aGlzLmdldE91dHB1dEJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBnfSx0aGlzLnNldE91dHB1dEJ1ZmZlcj1mdW5jdGlvbihlKXtnPWV9LHRoaXMuZ2V0T3V0cHV0QnVmZmVyUG9zaXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gdn0sdGhpcy5zZXRPdXRwdXRCdWZmZXJQb3NpdGlvbj1mdW5jdGlvbihlKXt2PWV9fSxyLkdpZlJlYWRlcj1mdW5jdGlvbih4KXt2YXIgZT0wO2lmKDcxIT09eFtlKytdfHw3MyE9PXhbZSsrXXx8NzAhPT14W2UrK118fDU2IT09eFtlKytdfHw1NiE9KHhbZSsrXSsxJjI1Myl8fDk3IT09eFtlKytdKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgR0lGIDg3YS84OWEgaGVhZGVyLlwiKTt2YXIgdz14W2UrK118eFtlKytdPDw4LHQ9eFtlKytdfHhbZSsrXTw8OCxyPXhbZSsrXSxuPXI+Pjcsbz0xPDwxKyg3JnIpO3hbZSsrXSx4W2UrK107dmFyIGk9bnVsbCxhPW51bGw7biYmKGk9ZSxlKz0zKihhPW8pKTt2YXIgcz0hMCxsPVtdLHU9MCxjPW51bGwsZD0wLGY9bnVsbDtmb3IodGhpcy53aWR0aD13LHRoaXMuaGVpZ2h0PXQ7cyYmZTx4Lmxlbmd0aDspc3dpdGNoKHhbZSsrXSl7Y2FzZSAzMzpzd2l0Y2goeFtlKytdKXtjYXNlIDI1NTppZigxMSE9PXhbZV18fDc4PT14W2UrMV0mJjY5PT14W2UrMl0mJjg0PT14W2UrM10mJjgzPT14W2UrNF0mJjY3PT14W2UrNV0mJjY1PT14W2UrNl0mJjgwPT14W2UrN10mJjY5PT14W2UrOF0mJjUwPT14W2UrOV0mJjQ2PT14W2UrMTBdJiY0OD09eFtlKzExXSYmMz09eFtlKzEyXSYmMT09eFtlKzEzXSYmMD09eFtlKzE2XSllKz0xNCxmPXhbZSsrXXx4W2UrK108PDgsZSsrO2Vsc2UgZm9yKGUrPTEyOzspe2lmKCEoMDw9KFQ9eFtlKytdKSkpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGJsb2NrIHNpemVcIik7aWYoMD09PVQpYnJlYWs7ZSs9VH1icmVhaztjYXNlIDI0OTppZig0IT09eFtlKytdfHwwIT09eFtlKzRdKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZ3JhcGhpY3MgZXh0ZW5zaW9uIGJsb2NrLlwiKTt2YXIgaD14W2UrK107dT14W2UrK118eFtlKytdPDw4LGM9eFtlKytdLDA9PSgxJmgpJiYoYz1udWxsKSxkPWg+PjImNyxlKys7YnJlYWs7Y2FzZSAyNTQ6Zm9yKDs7KXtpZighKDA8PShUPXhbZSsrXSkpKXRocm93IEVycm9yKFwiSW52YWxpZCBibG9jayBzaXplXCIpO2lmKDA9PT1UKWJyZWFrO2UrPVR9YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGdyYXBoaWMgY29udHJvbCBsYWJlbDogMHhcIit4W2UtMV0udG9TdHJpbmcoMTYpKX1icmVhaztjYXNlIDQ0OnZhciBwPXhbZSsrXXx4W2UrK108PDgseT14W2UrK118eFtlKytdPDw4LG09eFtlKytdfHhbZSsrXTw8OCxnPXhbZSsrXXx4W2UrK108PDgsdj14W2UrK10sYj12Pj42JjEsXz0xPDwxKyg3JnYpLGo9aSxTPWEsTT0hMTtpZih2Pj43KXtNPSEwO2o9ZSxlKz0zKihTPV8pfXZhciBFPWU7Zm9yKGUrKzs7KXt2YXIgVDtpZighKDA8PShUPXhbZSsrXSkpKXRocm93IEVycm9yKFwiSW52YWxpZCBibG9jayBzaXplXCIpO2lmKDA9PT1UKWJyZWFrO2UrPVR9bC5wdXNoKHt4OnAseTp5LHdpZHRoOm0saGVpZ2h0OmcsaGFzX2xvY2FsX3BhbGV0dGU6TSxwYWxldHRlX29mZnNldDpqLHBhbGV0dGVfc2l6ZTpTLGRhdGFfb2Zmc2V0OkUsZGF0YV9sZW5ndGg6ZS1FLHRyYW5zcGFyZW50X2luZGV4OmMsaW50ZXJsYWNlZDohIWIsZGVsYXk6dSxkaXNwb3NhbDpkfSk7YnJlYWs7Y2FzZSA1OTpzPSExO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBnaWYgYmxvY2s6IDB4XCIreFtlLTFdLnRvU3RyaW5nKDE2KSl9dGhpcy5udW1GcmFtZXM9ZnVuY3Rpb24oKXtyZXR1cm4gbC5sZW5ndGh9LHRoaXMubG9vcENvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIGZ9LHRoaXMuZnJhbWVJbmZvPWZ1bmN0aW9uKGUpe2lmKGU8MHx8ZT49bC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiRnJhbWUgaW5kZXggb3V0IG9mIHJhbmdlLlwiKTtyZXR1cm4gbFtlXX0sdGhpcy5kZWNvZGVBbmRCbGl0RnJhbWVCR1JBPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5mcmFtZUluZm8oZSksbj1yLndpZHRoKnIuaGVpZ2h0LG89bmV3IFVpbnQ4QXJyYXkobik7Tyh4LHIuZGF0YV9vZmZzZXQsbyxuKTt2YXIgaT1yLnBhbGV0dGVfb2Zmc2V0LGE9ci50cmFuc3BhcmVudF9pbmRleDtudWxsPT09YSYmKGE9MjU2KTt2YXIgcz1yLndpZHRoLGw9dy1zLHU9cyxjPTQqKHIueSp3K3IueCksZD00Kigoci55K3IuaGVpZ2h0KSp3K3IueCksZj1jLGg9NCpsOyEwPT09ci5pbnRlcmxhY2VkJiYoaCs9NCp3KjcpO2Zvcih2YXIgcD04LHk9MCxtPW8ubGVuZ3RoO3k8bTsrK3kpe3ZhciBnPW9beV07aWYoMD09PXUmJih1PXMsZDw9KGYrPWgpJiYoaD00KmwrNCp3KihwLTEpLGY9YysocytsKSoocDw8MSkscD4+PTEpKSxnPT09YSlmKz00O2Vsc2V7dmFyIHY9eFtpKzMqZ10sYj14W2krMypnKzFdLF89eFtpKzMqZysyXTt0W2YrK109Xyx0W2YrK109Yix0W2YrK109dix0W2YrK109MjU1fS0tdX19LHRoaXMuZGVjb2RlQW5kQmxpdEZyYW1lUkdCQT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMuZnJhbWVJbmZvKGUpLG49ci53aWR0aCpyLmhlaWdodCxvPW5ldyBVaW50OEFycmF5KG4pO08oeCxyLmRhdGFfb2Zmc2V0LG8sbik7dmFyIGk9ci5wYWxldHRlX29mZnNldCxhPXIudHJhbnNwYXJlbnRfaW5kZXg7bnVsbD09PWEmJihhPTI1Nik7dmFyIHM9ci53aWR0aCxsPXctcyx1PXMsYz00KihyLnkqdytyLngpLGQ9NCooKHIueStyLmhlaWdodCkqdytyLngpLGY9YyxoPTQqbDshMD09PXIuaW50ZXJsYWNlZCYmKGgrPTQqdyo3KTtmb3IodmFyIHA9OCx5PTAsbT1vLmxlbmd0aDt5PG07Kyt5KXt2YXIgZz1vW3ldO2lmKDA9PT11JiYodT1zLGQ8PShmKz1oKSYmKGg9NCpsKzQqdyoocC0xKSxmPWMrKHMrbCkqKHA8PDEpLHA+Pj0xKSksZz09PWEpZis9NDtlbHNle3ZhciB2PXhbaSszKmddLGI9eFtpKzMqZysxXSxfPXhbaSszKmcrMl07dFtmKytdPXYsdFtmKytdPWIsdFtmKytdPV8sdFtmKytdPTI1NX0tLXV9fX19Y2F0Y2goZSl7fX0se31dLDIzOTpbZnVuY3Rpb24oQnIscixuKXsoZnVuY3Rpb24oRnIpe3ZhciBlLHQ7ZT10aGlzLHQ9ZnVuY3Rpb24oTSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gZShlKXtpZihudWxsPT10aGlzKXRocm93IFR5cGVFcnJvcigpO3ZhciB0PVN0cmluZyh0aGlzKSxyPXQubGVuZ3RoLG49ZT9OdW1iZXIoZSk6MDtpZihuIT1uJiYobj0wKSwhKG48MHx8cjw9bikpe3ZhciBvLGk9dC5jaGFyQ29kZUF0KG4pO3JldHVybiA1NTI5Njw9aSYmaTw9NTYzMTkmJm4rMTxyJiY1NjMyMDw9KG89dC5jaGFyQ29kZUF0KG4rMSkpJiZvPD01NzM0Mz8xMDI0KihpLTU1Mjk2KStvLTU2MzIwKzY1NTM2Oml9fXZhciB0O1N0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXR8fCgodD1mdW5jdGlvbigpe3RyeXt2YXIgZT17fSx0PU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxyPXQoZSxlLGUpJiZ0fWNhdGNoKGUpe31yZXR1cm4gcn0oKSk/dChTdHJpbmcucHJvdG90eXBlLFwiY29kZVBvaW50QXRcIix7dmFsdWU6ZSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTpTdHJpbmcucHJvdG90eXBlLmNvZGVQb2ludEF0PWUpO3ZhciBsPTAsaT0tMztmdW5jdGlvbiByKCl7dGhpcy50YWJsZT1uZXcgVWludDE2QXJyYXkoMTYpLHRoaXMudHJhbnM9bmV3IFVpbnQxNkFycmF5KDI4OCl9ZnVuY3Rpb24gYShlLHQpe3RoaXMuc291cmNlPWUsdGhpcy5zb3VyY2VJbmRleD0wLHRoaXMudGFnPTAsdGhpcy5iaXRjb3VudD0wLHRoaXMuZGVzdD10LHRoaXMuZGVzdExlbj0wLHRoaXMubHRyZWU9bmV3IHIsdGhpcy5kdHJlZT1uZXcgcn12YXIgcz1uZXcgcix1PW5ldyByLGM9bmV3IFVpbnQ4QXJyYXkoMzApLGQ9bmV3IFVpbnQxNkFycmF5KDMwKSxmPW5ldyBVaW50OEFycmF5KDMwKSxoPW5ldyBVaW50MTZBcnJheSgzMCkscD1uZXcgVWludDhBcnJheShbMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV0pLHk9bmV3IHIsbT1uZXcgVWludDhBcnJheSgzMjApO2Z1bmN0aW9uIG4oZSx0LHIsbil7dmFyIG8saTtmb3Iobz0wO288cjsrK28pZVtvXT0wO2ZvcihvPTA7bzwzMC1yOysrbyllW28rcl09by9yfDA7Zm9yKGk9bixvPTA7bzwzMDsrK28pdFtvXT1pLGkrPTE8PGVbb119dmFyIGc9bmV3IFVpbnQxNkFycmF5KDE2KTtmdW5jdGlvbiB2KGUsdCxyLG4pe3ZhciBvLGk7Zm9yKG89MDtvPDE2OysrbyllLnRhYmxlW29dPTA7Zm9yKG89MDtvPG47KytvKWUudGFibGVbdFtyK29dXSsrO2ZvcihvPWk9ZS50YWJsZVswXT0wO288MTY7KytvKWdbb109aSxpKz1lLnRhYmxlW29dO2ZvcihvPTA7bzxuOysrbyl0W3Irb10mJihlLnRyYW5zW2dbdFtyK29dXSsrXT1vKX1mdW5jdGlvbiBiKGUpe2UuYml0Y291bnQtLXx8KGUudGFnPWUuc291cmNlW2Uuc291cmNlSW5kZXgrK10sZS5iaXRjb3VudD03KTt2YXIgdD0xJmUudGFnO3JldHVybiBlLnRhZz4+Pj0xLHR9ZnVuY3Rpb24gXyhlLHQscil7aWYoIXQpcmV0dXJuIHI7Zm9yKDtlLmJpdGNvdW50PDI0OyllLnRhZ3w9ZS5zb3VyY2VbZS5zb3VyY2VJbmRleCsrXTw8ZS5iaXRjb3VudCxlLmJpdGNvdW50Kz04O3ZhciBuPWUudGFnJjY1NTM1Pj4+MTYtdDtyZXR1cm4gZS50YWc+Pj49dCxlLmJpdGNvdW50LT10LG4rcn1mdW5jdGlvbiB4KGUsdCl7Zm9yKDtlLmJpdGNvdW50PDI0OyllLnRhZ3w9ZS5zb3VyY2VbZS5zb3VyY2VJbmRleCsrXTw8ZS5iaXRjb3VudCxlLmJpdGNvdW50Kz04O2Zvcih2YXIgcj0wLG49MCxvPTAsaT1lLnRhZztuPTIqbisoMSZpKSxpPj4+PTEsKytvLHIrPXQudGFibGVbb10sMDw9KG4tPXQudGFibGVbb10pOyk7cmV0dXJuIGUudGFnPWksZS5iaXRjb3VudC09byx0LnRyYW5zW3Irbl19ZnVuY3Rpb24gdyhlLHQscil7dmFyIG4sbyxpLGEscyxsO2ZvcihuPV8oZSw1LDI1Nyksbz1fKGUsNSwxKSxpPV8oZSw0LDQpLGE9MDthPDE5OysrYSltW2FdPTA7Zm9yKGE9MDthPGk7KythKXt2YXIgdT1fKGUsMywwKTttW3BbYV1dPXV9Zm9yKHYoeSxtLDAsMTkpLHM9MDtzPG4rbzspe3ZhciBjPXgoZSx5KTtzd2l0Y2goYyl7Y2FzZSAxNjp2YXIgZD1tW3MtMV07Zm9yKGw9XyhlLDIsMyk7bDstLWwpbVtzKytdPWQ7YnJlYWs7Y2FzZSAxNzpmb3IobD1fKGUsMywzKTtsOy0tbCltW3MrK109MDticmVhaztjYXNlIDE4OmZvcihsPV8oZSw3LDExKTtsOy0tbCltW3MrK109MDticmVhaztkZWZhdWx0Om1bcysrXT1jfX12KHQsbSwwLG4pLHYocixtLG4sbyl9ZnVuY3Rpb24gaihlLHQscil7Zm9yKDs7KXt2YXIgbixvLGksYSxzPXgoZSx0KTtpZigyNTY9PT1zKXJldHVybiBsO2lmKHM8MjU2KWUuZGVzdFtlLmRlc3RMZW4rK109cztlbHNlIGZvcihuPV8oZSxjW3MtPTI1N10sZFtzXSksbz14KGUsciksYT1pPWUuZGVzdExlbi1fKGUsZltvXSxoW29dKTthPGkrbjsrK2EpZS5kZXN0W2UuZGVzdExlbisrXT1lLmRlc3RbYV19fWZ1bmN0aW9uIFMoZSl7Zm9yKHZhciB0LHI7ODxlLmJpdGNvdW50OyllLnNvdXJjZUluZGV4LS0sZS5iaXRjb3VudC09ODtpZigodD0yNTYqKHQ9ZS5zb3VyY2VbZS5zb3VyY2VJbmRleCsxXSkrZS5zb3VyY2VbZS5zb3VyY2VJbmRleF0pIT09KDY1NTM1Jn4oMjU2KmUuc291cmNlW2Uuc291cmNlSW5kZXgrM10rZS5zb3VyY2VbZS5zb3VyY2VJbmRleCsyXSkpKXJldHVybiBpO2ZvcihlLnNvdXJjZUluZGV4Kz00LHI9dDtyOy0tcillLmRlc3RbZS5kZXN0TGVuKytdPWUuc291cmNlW2Uuc291cmNlSW5kZXgrK107cmV0dXJuIGUuYml0Y291bnQ9MCxsfSFmdW5jdGlvbihlLHQpe3ZhciByO2ZvcihyPTA7cjw3OysrcillLnRhYmxlW3JdPTA7Zm9yKGUudGFibGVbN109MjQsZS50YWJsZVs4XT0xNTIsZS50YWJsZVs5XT0xMTIscj0wO3I8MjQ7KytyKWUudHJhbnNbcl09MjU2K3I7Zm9yKHI9MDtyPDE0NDsrK3IpZS50cmFuc1syNCtyXT1yO2ZvcihyPTA7cjw4OysrcillLnRyYW5zWzE2OCtyXT0yODArcjtmb3Iocj0wO3I8MTEyOysrcillLnRyYW5zWzE3NityXT0xNDQrcjtmb3Iocj0wO3I8NTsrK3IpdC50YWJsZVtyXT0wO2Zvcih0LnRhYmxlWzVdPTMyLHI9MDtyPDMyOysrcil0LnRyYW5zW3JdPXJ9KHMsdSksbihjLGQsNCwzKSxuKGYsaCwyLDEpLGNbMjhdPTAsZFsyOF09MjU4O3ZhciBvPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvPW5ldyBhKGUsdCk7ZG97c3dpdGNoKHI9YihvKSxfKG8sMiwwKSl7Y2FzZSAwOm49UyhvKTticmVhaztjYXNlIDE6bj1qKG8scyx1KTticmVhaztjYXNlIDI6dyhvLG8ubHRyZWUsby5kdHJlZSksbj1qKG8sby5sdHJlZSxvLmR0cmVlKTticmVhaztkZWZhdWx0Om49aX1pZihuIT09bCl0aHJvdyBuZXcgRXJyb3IoXCJEYXRhIGVycm9yXCIpfXdoaWxlKCFyKTtyZXR1cm4gby5kZXN0TGVuPG8uZGVzdC5sZW5ndGg/XCJmdW5jdGlvblwiPT10eXBlb2Ygby5kZXN0LnNsaWNlP28uZGVzdC5zbGljZSgwLG8uZGVzdExlbik6by5kZXN0LnN1YmFycmF5KDAsby5kZXN0TGVuKTpvLmRlc3R9O2Z1bmN0aW9uIEUoZSx0LHIsbixvKXtyZXR1cm4gTWF0aC5wb3coMS1vLDMpKmUrMypNYXRoLnBvdygxLW8sMikqbyp0KzMqKDEtbykqTWF0aC5wb3cobywyKSpyK01hdGgucG93KG8sMykqbn1mdW5jdGlvbiBUKCl7dGhpcy54MT1OdW1iZXIuTmFOLHRoaXMueTE9TnVtYmVyLk5hTix0aGlzLngyPU51bWJlci5OYU4sdGhpcy55Mj1OdW1iZXIuTmFOfWZ1bmN0aW9uIEQoKXt0aGlzLmNvbW1hbmRzPVtdLHRoaXMuZmlsbD1cImJsYWNrXCIsdGhpcy5zdHJva2U9bnVsbCx0aGlzLnN0cm9rZVdpZHRoPTF9ZnVuY3Rpb24gTyhlKXt0aHJvdyBuZXcgRXJyb3IoZSl9ZnVuY3Rpb24gQyhlLHQpe2V8fE8odCl9VC5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiBpc05hTih0aGlzLngxKXx8aXNOYU4odGhpcy55MSl8fGlzTmFOKHRoaXMueDIpfHxpc05hTih0aGlzLnkyKX0sVC5wcm90b3R5cGUuYWRkUG9pbnQ9ZnVuY3Rpb24oZSx0KXtcIm51bWJlclwiPT10eXBlb2YgZSYmKChpc05hTih0aGlzLngxKXx8aXNOYU4odGhpcy54MikpJiYodGhpcy54MT1lLHRoaXMueDI9ZSksZTx0aGlzLngxJiYodGhpcy54MT1lKSxlPnRoaXMueDImJih0aGlzLngyPWUpKSxcIm51bWJlclwiPT10eXBlb2YgdCYmKChpc05hTih0aGlzLnkxKXx8aXNOYU4odGhpcy55MikpJiYodGhpcy55MT10LHRoaXMueTI9dCksdDx0aGlzLnkxJiYodGhpcy55MT10KSx0PnRoaXMueTImJih0aGlzLnkyPXQpKX0sVC5wcm90b3R5cGUuYWRkWD1mdW5jdGlvbihlKXt0aGlzLmFkZFBvaW50KGUsbnVsbCl9LFQucHJvdG90eXBlLmFkZFk9ZnVuY3Rpb24oZSl7dGhpcy5hZGRQb2ludChudWxsLGUpfSxULnByb3RvdHlwZS5hZGRCZXppZXI9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSxzKXt2YXIgbD1bZSx0XSx1PVtyLG5dLGM9W28saV0sZD1bYSxzXTt0aGlzLmFkZFBvaW50KGUsdCksdGhpcy5hZGRQb2ludChhLHMpO2Zvcih2YXIgZj0wO2Y8PTE7ZisrKXt2YXIgaD02KmxbZl0tMTIqdVtmXSs2KmNbZl0scD0tMypsW2ZdKzkqdVtmXS05KmNbZl0rMypkW2ZdLHk9Myp1W2ZdLTMqbFtmXTtpZigwIT1wKXt2YXIgbT1NYXRoLnBvdyhoLDIpLTQqeSpwO2lmKCEobTwwKSl7dmFyIGc9KC1oK01hdGguc3FydChtKSkvKDIqcCk7MDxnJiZnPDEmJigwPT09ZiYmdGhpcy5hZGRYKEUobFtmXSx1W2ZdLGNbZl0sZFtmXSxnKSksMT09PWYmJnRoaXMuYWRkWShFKGxbZl0sdVtmXSxjW2ZdLGRbZl0sZykpKTt2YXIgdj0oLWgtTWF0aC5zcXJ0KG0pKS8oMipwKTswPHYmJnY8MSYmKDA9PT1mJiZ0aGlzLmFkZFgoRShsW2ZdLHVbZl0sY1tmXSxkW2ZdLHYpKSwxPT09ZiYmdGhpcy5hZGRZKEUobFtmXSx1W2ZdLGNbZl0sZFtmXSx2KSkpfX1lbHNle2lmKDA9PWgpY29udGludWU7dmFyIGI9LXkvaDswPGImJmI8MSYmKDA9PT1mJiZ0aGlzLmFkZFgoRShsW2ZdLHVbZl0sY1tmXSxkW2ZdLGIpKSwxPT09ZiYmdGhpcy5hZGRZKEUobFtmXSx1W2ZdLGNbZl0sZFtmXSxiKSkpfX19LFQucHJvdG90eXBlLmFkZFF1YWQ9ZnVuY3Rpb24oZSx0LHIsbixvLGkpe3ZhciBhPWUrMi8zKihyLWUpLHM9dCsyLzMqKG4tdCksbD1hKzEvMyooby1lKSx1PXMrMS8zKihpLXQpO3RoaXMuYWRkQmV6aWVyKGUsdCxhLHMsbCx1LG8saSl9LEQucHJvdG90eXBlLm1vdmVUbz1mdW5jdGlvbihlLHQpe3RoaXMuY29tbWFuZHMucHVzaCh7dHlwZTpcIk1cIix4OmUseTp0fSl9LEQucHJvdG90eXBlLmxpbmVUbz1mdW5jdGlvbihlLHQpe3RoaXMuY29tbWFuZHMucHVzaCh7dHlwZTpcIkxcIix4OmUseTp0fSl9LEQucHJvdG90eXBlLmN1cnZlVG89RC5wcm90b3R5cGUuYmV6aWVyQ3VydmVUbz1mdW5jdGlvbihlLHQscixuLG8saSl7dGhpcy5jb21tYW5kcy5wdXNoKHt0eXBlOlwiQ1wiLHgxOmUseTE6dCx4MjpyLHkyOm4seDpvLHk6aX0pfSxELnByb3RvdHlwZS5xdWFkVG89RC5wcm90b3R5cGUucXVhZHJhdGljQ3VydmVUbz1mdW5jdGlvbihlLHQscixuKXt0aGlzLmNvbW1hbmRzLnB1c2goe3R5cGU6XCJRXCIseDE6ZSx5MTp0LHg6cix5Om59KX0sRC5wcm90b3R5cGUuY2xvc2U9RC5wcm90b3R5cGUuY2xvc2VQYXRoPWZ1bmN0aW9uKCl7dGhpcy5jb21tYW5kcy5wdXNoKHt0eXBlOlwiWlwifSl9LEQucHJvdG90eXBlLmV4dGVuZD1mdW5jdGlvbihlKXtpZihlLmNvbW1hbmRzKWU9ZS5jb21tYW5kcztlbHNlIGlmKGUgaW5zdGFuY2VvZiBUKXt2YXIgdD1lO3JldHVybiB0aGlzLm1vdmVUbyh0LngxLHQueTEpLHRoaXMubGluZVRvKHQueDIsdC55MSksdGhpcy5saW5lVG8odC54Mix0LnkyKSx0aGlzLmxpbmVUbyh0LngxLHQueTIpLHZvaWQgdGhpcy5jbG9zZSgpfUFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuY29tbWFuZHMsZSl9LEQucHJvdG90eXBlLmdldEJvdW5kaW5nQm94PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPW5ldyBULHQ9MCxyPTAsbj0wLG89MCxpPTA7aTx0aGlzLmNvbW1hbmRzLmxlbmd0aDtpKyspe3ZhciBhPXRoaXMuY29tbWFuZHNbaV07c3dpdGNoKGEudHlwZSl7Y2FzZVwiTVwiOmUuYWRkUG9pbnQoYS54LGEueSksdD1uPWEueCxyPW89YS55O2JyZWFrO2Nhc2VcIkxcIjplLmFkZFBvaW50KGEueCxhLnkpLG49YS54LG89YS55O2JyZWFrO2Nhc2VcIlFcIjplLmFkZFF1YWQobixvLGEueDEsYS55MSxhLngsYS55KSxuPWEueCxvPWEueTticmVhaztjYXNlXCJDXCI6ZS5hZGRCZXppZXIobixvLGEueDEsYS55MSxhLngyLGEueTIsYS54LGEueSksbj1hLngsbz1hLnk7YnJlYWs7Y2FzZVwiWlwiOm49dCxvPXI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbmV4cGVjdGVkIHBhdGggY29tbWFuZCBcIithLnR5cGUpfX1yZXR1cm4gZS5pc0VtcHR5KCkmJmUuYWRkUG9pbnQoMCwwKSxlfSxELnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUpe2UuYmVnaW5QYXRoKCk7Zm9yKHZhciB0PTA7dDx0aGlzLmNvbW1hbmRzLmxlbmd0aDt0Kz0xKXt2YXIgcj10aGlzLmNvbW1hbmRzW3RdO1wiTVwiPT09ci50eXBlP2UubW92ZVRvKHIueCxyLnkpOlwiTFwiPT09ci50eXBlP2UubGluZVRvKHIueCxyLnkpOlwiQ1wiPT09ci50eXBlP2UuYmV6aWVyQ3VydmVUbyhyLngxLHIueTEsci54MixyLnkyLHIueCxyLnkpOlwiUVwiPT09ci50eXBlP2UucXVhZHJhdGljQ3VydmVUbyhyLngxLHIueTEsci54LHIueSk6XCJaXCI9PT1yLnR5cGUmJmUuY2xvc2VQYXRoKCl9dGhpcy5maWxsJiYoZS5maWxsU3R5bGU9dGhpcy5maWxsLGUuZmlsbCgpKSx0aGlzLnN0cm9rZSYmKGUuc3Ryb2tlU3R5bGU9dGhpcy5zdHJva2UsZS5saW5lV2lkdGg9dGhpcy5zdHJva2VXaWR0aCxlLnN0cm9rZSgpKX0sRC5wcm90b3R5cGUudG9QYXRoRGF0YT1mdW5jdGlvbihpKXtmdW5jdGlvbiBlKCl7Zm9yKHZhciBlLHQ9YXJndW1lbnRzLHI9XCJcIixuPTA7bjxhcmd1bWVudHMubGVuZ3RoO24rPTEpe3ZhciBvPXRbbl07MDw9byYmMDxuJiYocis9XCIgXCIpLHIrPShlPW8sTWF0aC5yb3VuZChlKT09PWU/XCJcIitNYXRoLnJvdW5kKGUpOmUudG9GaXhlZChpKSl9cmV0dXJuIHJ9aT12b2lkIDAhPT1pP2k6Mjtmb3IodmFyIHQ9XCJcIixyPTA7cjx0aGlzLmNvbW1hbmRzLmxlbmd0aDtyKz0xKXt2YXIgbj10aGlzLmNvbW1hbmRzW3JdO1wiTVwiPT09bi50eXBlP3QrPVwiTVwiK2Uobi54LG4ueSk6XCJMXCI9PT1uLnR5cGU/dCs9XCJMXCIrZShuLngsbi55KTpcIkNcIj09PW4udHlwZT90Kz1cIkNcIitlKG4ueDEsbi55MSxuLngyLG4ueTIsbi54LG4ueSk6XCJRXCI9PT1uLnR5cGU/dCs9XCJRXCIrZShuLngxLG4ueTEsbi54LG4ueSk6XCJaXCI9PT1uLnR5cGUmJih0Kz1cIlpcIil9cmV0dXJuIHR9LEQucHJvdG90eXBlLnRvU1ZHPWZ1bmN0aW9uKGUpe3ZhciB0PSc8cGF0aCBkPVwiJztyZXR1cm4gdCs9dGhpcy50b1BhdGhEYXRhKGUpLHQrPSdcIicsdGhpcy5maWxsJiZcImJsYWNrXCIhPT10aGlzLmZpbGwmJihudWxsPT09dGhpcy5maWxsP3QrPScgZmlsbD1cIm5vbmVcIic6dCs9JyBmaWxsPVwiJyt0aGlzLmZpbGwrJ1wiJyksdGhpcy5zdHJva2UmJih0Kz0nIHN0cm9rZT1cIicrdGhpcy5zdHJva2UrJ1wiIHN0cm9rZS13aWR0aD1cIicrdGhpcy5zdHJva2VXaWR0aCsnXCInKSx0Kz1cIi8+XCJ9LEQucHJvdG90eXBlLnRvRE9NRWxlbWVudD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnRvUGF0aERhdGEoZSkscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwicGF0aFwiKTtyZXR1cm4gci5zZXRBdHRyaWJ1dGUoXCJkXCIsdCkscn07dmFyIEw9e2ZhaWw6Tyxhcmd1bWVudDpDLGFzc2VydDpDfSxQPXt9LEE9e30saz17fTtmdW5jdGlvbiBSKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlfX1BLkJZVEU9ZnVuY3Rpb24oZSl7cmV0dXJuIEwuYXJndW1lbnQoMDw9ZSYmZTw9MjU1LFwiQnl0ZSB2YWx1ZSBzaG91bGQgYmUgYmV0d2VlbiAwIGFuZCAyNTUuXCIpLFtlXX0say5CWVRFPVIoMSksQS5DSEFSPWZ1bmN0aW9uKGUpe3JldHVybltlLmNoYXJDb2RlQXQoMCldfSxrLkNIQVI9UigxKSxBLkNIQVJBUlJBWT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0wO3I8ZS5sZW5ndGg7cis9MSl0W3JdPWUuY2hhckNvZGVBdChyKTtyZXR1cm4gdH0say5DSEFSQVJSQVk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGVuZ3RofSxBLlVTSE9SVD1mdW5jdGlvbihlKXtyZXR1cm5bZT4+OCYyNTUsMjU1JmVdfSxrLlVTSE9SVD1SKDIpLEEuU0hPUlQ9ZnVuY3Rpb24oZSl7cmV0dXJuIDMyNzY4PD1lJiYoZT0tKDY1NTM2LWUpKSxbZT4+OCYyNTUsMjU1JmVdfSxrLlNIT1JUPVIoMiksQS5VSU5UMjQ9ZnVuY3Rpb24oZSl7cmV0dXJuW2U+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV19LGsuVUlOVDI0PVIoMyksQS5VTE9ORz1mdW5jdGlvbihlKXtyZXR1cm5bZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV19LGsuVUxPTkc9Uig0KSxBLkxPTkc9ZnVuY3Rpb24oZSl7cmV0dXJuIDIxNDc0ODM2NDg8PWUmJihlPS0oNDI5NDk2NzI5Ni1lKSksW2U+PjI0JjI1NSxlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmVdfSxrLkxPTkc9Uig0KSxBLkZJWEVEPUEuVUxPTkcsay5GSVhFRD1rLlVMT05HLEEuRldPUkQ9QS5TSE9SVCxrLkZXT1JEPWsuU0hPUlQsQS5VRldPUkQ9QS5VU0hPUlQsay5VRldPUkQ9ay5VU0hPUlQsQS5MT05HREFURVRJTUU9ZnVuY3Rpb24oZSl7cmV0dXJuWzAsMCwwLDAsZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV19LGsuTE9OR0RBVEVUSU1FPVIoOCksQS5UQUc9ZnVuY3Rpb24oZSl7cmV0dXJuIEwuYXJndW1lbnQoND09PWUubGVuZ3RoLFwiVGFnIHNob3VsZCBiZSBleGFjdGx5IDQgQVNDSUkgY2hhcmFjdGVycy5cIiksW2UuY2hhckNvZGVBdCgwKSxlLmNoYXJDb2RlQXQoMSksZS5jaGFyQ29kZUF0KDIpLGUuY2hhckNvZGVBdCgzKV19LGsuVEFHPVIoNCksQS5DYXJkOD1BLkJZVEUsay5DYXJkOD1rLkJZVEUsQS5DYXJkMTY9QS5VU0hPUlQsay5DYXJkMTY9ay5VU0hPUlQsQS5PZmZTaXplPUEuQllURSxrLk9mZlNpemU9ay5CWVRFLEEuU0lEPUEuVVNIT1JULGsuU0lEPWsuVVNIT1JULEEuTlVNQkVSPWZ1bmN0aW9uKGUpe3JldHVybi0xMDc8PWUmJmU8PTEwNz9bZSsxMzldOjEwODw9ZSYmZTw9MTEzMT9bMjQ3KygoZS09MTA4KT4+OCksMjU1JmVdOi0xMTMxPD1lJiZlPD0tMTA4P1syNTErKChlPS1lLTEwOCk+PjgpLDI1NSZlXTotMzI3Njg8PWUmJmU8PTMyNzY3P0EuTlVNQkVSMTYoZSk6QS5OVU1CRVIzMihlKX0say5OVU1CRVI9ZnVuY3Rpb24oZSl7cmV0dXJuIEEuTlVNQkVSKGUpLmxlbmd0aH0sQS5OVU1CRVIxNj1mdW5jdGlvbihlKXtyZXR1cm5bMjgsZT4+OCYyNTUsMjU1JmVdfSxrLk5VTUJFUjE2PVIoMyksQS5OVU1CRVIzMj1mdW5jdGlvbihlKXtyZXR1cm5bMjksZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV19LGsuTlVNQkVSMzI9Uig1KSxBLlJFQUw9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS50b1N0cmluZygpLHI9L1xcLihcXGQqPykoPzo5ezUsMjB9fDB7NSwyMH0pXFxkezAsMn0oPzplKC4rKXwkKS8uZXhlYyh0KTtpZihyKXt2YXIgbj1wYXJzZUZsb2F0KFwiMWVcIisoKHJbMl0/K3JbMl06MCkrclsxXS5sZW5ndGgpKTt0PShNYXRoLnJvdW5kKGUqbikvbikudG9TdHJpbmcoKX1mb3IodmFyIG89XCJcIixpPTAsYT10Lmxlbmd0aDtpPGE7aSs9MSl7dmFyIHM9dFtpXTtvKz1cImVcIj09PXM/XCItXCI9PT10WysraV0/XCJjXCI6XCJiXCI6XCIuXCI9PT1zP1wiYVwiOlwiLVwiPT09cz9cImVcIjpzfWZvcih2YXIgbD1bMzBdLHU9MCxjPShvKz0xJm8ubGVuZ3RoP1wiZlwiOlwiZmZcIikubGVuZ3RoO3U8Yzt1Kz0yKWwucHVzaChwYXJzZUludChvLnN1YnN0cih1LDIpLDE2KSk7cmV0dXJuIGx9LGsuUkVBTD1mdW5jdGlvbihlKXtyZXR1cm4gQS5SRUFMKGUpLmxlbmd0aH0sQS5OQU1FPUEuQ0hBUkFSUkFZLGsuTkFNRT1rLkNIQVJBUlJBWSxBLlNUUklORz1BLkNIQVJBUlJBWSxrLlNUUklORz1rLkNIQVJBUlJBWSxQLlVURjg9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1bXSxvPXIsaT0wO2k8bztpKyssdCs9MSluW2ldPWUuZ2V0VWludDgodCk7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxuKX0sUC5VVEYxNj1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPVtdLG89ci8yLGk9MDtpPG87aSsrLHQrPTIpbltpXT1lLmdldFVpbnQxNih0KTtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG4pfSxBLlVURjE2PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTA7cjxlLmxlbmd0aDtyKz0xKXt2YXIgbj1lLmNoYXJDb2RlQXQocik7dFt0Lmxlbmd0aF09bj4+OCYyNTUsdFt0Lmxlbmd0aF09MjU1Jm59cmV0dXJuIHR9LGsuVVRGMTY9ZnVuY3Rpb24oZSl7cmV0dXJuIDIqZS5sZW5ndGh9O3ZhciBJPXtcIngtbWFjLWNyb2F0aWFuXCI6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7FoOKEosK0wqjiiaDFvcOY4oiewrHiiaTiiaXiiIbCteKIguKIkeKIj8Wh4oirwqrCus6pxb7DuMK/wqHCrOKImsaS4omIxIbCq8SM4oCmwqDDgMODw5XFksWTxJDigJTigJzigJ3igJjigJnDt+KXiu+jv8Kp4oGE4oKs4oC54oC6w4bCu+KAk8K34oCa4oCe4oCww4LEh8OBxI3DiMONw47Dj8OMw5PDlMSRw5LDmsObw5nEscuGy5zCr8+Aw4vLmsK4w4rDpsuHXCIsXCJ4LW1hYy1jeXJpbGxpY1wiOlwi0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr+KAoMKw0pDCo8Kn4oCiwrbQhsKuwqnihKLQgtGS4omg0IPRk+KInsKx4omk4oml0ZbCtdKR0IjQhNGU0IfRl9CJ0ZnQitGa0ZjQhcKs4oiaxpLiiYjiiIbCq8K74oCmwqDQi9Gb0IzRnNGV4oCT4oCU4oCc4oCd4oCY4oCZw7figJ7QjtGe0I/Rn+KEltCB0ZHRj9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGOXCIsXCJ4LW1hYy1nYWVsaWNcIjpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zigKDCsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMOGw5jhuILCseKJpOKJpeG4g8SKxIvhuIrhuIvhuJ7huJ/EoMSh4bmAw6bDuOG5geG5luG5l8m8xpLFv+G5oMKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnhuaHhupvDv8W44bmq4oKs4oC54oC6xbbFt+G5q8K34buy4buz4oGKw4LDisOBw4vDiMONw47Dj8OMw5PDlOKZo8OSw5rDm8OZxLHDncO9xbTFteG6hOG6heG6gOG6geG6guG6g1wiLFwieC1tYWMtZ3JlZWtcIjpcIsOEwrnCssOJwrPDlsOczoXDoMOiw6TOhMKow6fDqcOow6rDq8Kj4oSiw67Dr+KAosK94oCww7TDtsKm4oKsw7nDu8O84oCgzpPOlM6YzpvOns6gw5/CrsKpzqPOqsKn4omgwrDCt86RwrHiiaTiiaXCpc6SzpXOls6XzpnOms6czqbOq86ozqnOrM6dwqzOn86h4omIzqTCq8K74oCmwqDOpc6nzobOiMWT4oCT4oCV4oCc4oCd4oCY4oCZw7fOic6KzozOjs6tzq7Or8+Mzo/Pjc6xzrLPiM60zrXPhs6zzrfOuc6+zrrOu868zr3Ov8+Az47Pgc+Dz4TOuM+Jz4LPh8+FzrbPis+LzpDOsMKtXCIsXCJ4LW1hYy1pY2VsYW5kaWNcIjpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zDncKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgw4bDmOKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCus6pw6bDuMK/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhOKCrMOQw7DDnsO+w73Ct+KAmuKAnuKAsMOCw4rDgcOLw4jDjcOOw4/DjMOTw5Tvo7/DksOaw5vDmcSxy4bLnMKvy5jLmcuawrjLncuby4dcIixcIngtbWFjLWludWl0XCI6XCLhkIPhkIThkIXhkIbhkIrhkIvhkLHhkLLhkLPhkLThkLjhkLnhkYnhkY7hkY/hkZDhkZHhkZXhkZbhkabhka3hka7hka/hkbDhkbLhkbPhkoPhkovhkozhko3hko7hkpDhkpHCsOGSoeGSpeGSpuKAosK24ZKnwq7CqeKEouGSqOGSquGSq+GSu+GTguGTg+GThOGTheGTh+GTiOGTkOGTr+GTsOGTseGTsuGTtOGTteGUheGTleGTluGTl+GTmOGTmuGTm+GTquGUqOGUqeGUquGUq+GUreKApsKg4ZSu4ZS+4ZWV4ZWW4ZWX4oCT4oCU4oCc4oCd4oCY4oCZ4ZWY4ZWZ4ZWa4ZWd4ZWG4ZWH4ZWI4ZWJ4ZWL4ZWM4ZWQ4ZW/4ZaA4ZaB4ZaC4ZaD4ZaE4ZaF4ZaP4ZaQ4ZaR4ZaS4ZaT4ZaU4ZaV4Zmx4Zmy4Zmz4Zm04Zm14Zm24ZaW4Zag4Zah4Zai4Zaj4Zak4Zal4Zam4ZW8xYHFglwiLFwieC1tYWMtY2VcIjpcIsOExIDEgcOJxITDlsOcw6HEhcSMw6TEjcSGxIfDqcW5xbrEjsOtxI/EksSTxJbDs8SXw7TDtsO1w7rEmsSbw7zigKDCsMSYwqPCp+KAosK2w5/CrsKp4oSixJnCqOKJoMSjxK7Er8Sq4omk4omlxKvEtuKIguKIkcWCxLvEvMS9xL7EucS6xYXFhsWDwqziiJrFhMWH4oiGwqvCu+KApsKgxYjFkMOVxZHFjOKAk+KAlOKAnOKAneKAmOKAmcO34peKxY3FlMWVxZjigLnigLrFmcWWxZfFoOKAmuKAnsWhxZrFm8OBxaTFpcONxb3FvsWqw5PDlMWrxa7DmsWvxbDFscWyxbPDncO9xLfFu8WBxbzEosuHXCIsbWFjaW50b3NoOlwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgw4bDmOKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCus6pw6bDuMK/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhOKCrOKAueKAuu+sge+sguKAocK34oCa4oCe4oCww4LDisOBw4vDiMONw47Dj8OMw5PDlO+jv8OSw5rDm8OZxLHLhsucwq/LmMuZy5rCuMudy5vLh1wiLFwieC1tYWMtcm9tYW5pYW5cIjpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zigKDCsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMSCyJjiiJ7CseKJpOKJpcKlwrXiiILiiJHiiI/PgOKIq8KqwrrOqcSDyJnCv8KhwqziiJrGkuKJiOKIhsKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnDt+KXisO/xbjigYTigqzigLnigLrImsib4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU76O/w5LDmsObw5nEscuGy5zCr8uYy5nLmsK4y53Lm8uHXCIsXCJ4LW1hYy10dXJraXNoXCI6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7CqeKEosK0wqjiiaDDhsOY4oiewrHiiaTiiaXCpcK14oiC4oiR4oiPz4DiiKvCqsK6zqnDpsO4wr/CocKs4oiaxpLiiYjiiIbCq8K74oCmwqDDgMODw5XFksWT4oCT4oCU4oCc4oCd4oCY4oCZw7fil4rDv8W4xJ7En8SwxLHFnsWf4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU76O/w5LDmsObw5nvoqDLhsucwq/LmMuZy5rCuMudy5vLh1wifTtQLk1BQ1NUUklORz1mdW5jdGlvbihlLHQscixuKXt2YXIgbz1JW25dO2lmKHZvaWQgMCE9PW8pe2Zvcih2YXIgaT1cIlwiLGE9MDthPHI7YSsrKXt2YXIgcz1lLmdldFVpbnQ4KHQrYSk7aSs9czw9MTI3P1N0cmluZy5mcm9tQ2hhckNvZGUocyk6b1sxMjcmc119cmV0dXJuIGl9fTt2YXIgVSxOPVwiZnVuY3Rpb25cIj09dHlwZW9mIFdlYWtNYXAmJm5ldyBXZWFrTWFwO2Z1bmN0aW9uIEYoZSl7cmV0dXJuLTEyODw9ZSYmZTw9MTI3fWZ1bmN0aW9uIEIoZSx0LHIpe2Zvcih2YXIgbj0wLG89ZS5sZW5ndGg7dDxvJiZuPDY0JiYwPT09ZVt0XTspKyt0LCsrbjtyZXR1cm4gci5wdXNoKDEyOHxuLTEpLHR9ZnVuY3Rpb24gRyhlLHQscil7Zm9yKHZhciBuPTAsbz1lLmxlbmd0aCxpPXQ7aTxvJiZuPDY0Oyl7dmFyIGE9ZVtpXTtpZighRihhKSlicmVhaztpZigwPT09YSYmaSsxPG8mJjA9PT1lW2krMV0pYnJlYWs7KytpLCsrbn1yLnB1c2gobi0xKTtmb3IodmFyIHM9dDtzPGk7KytzKXIucHVzaChlW3NdKzI1NiYyNTUpO3JldHVybiBpfWZ1bmN0aW9uIFYoZSx0LHIpe2Zvcih2YXIgbj0wLG89ZS5sZW5ndGgsaT10O2k8byYmbjw2NDspe3ZhciBhPWVbaV07aWYoMD09PWEpYnJlYWs7aWYoRihhKSYmaSsxPG8mJkYoZVtpKzFdKSlicmVhazsrK2ksKytufXIucHVzaCg2NHxuLTEpO2Zvcih2YXIgcz10O3M8aTsrK3Mpe3ZhciBsPWVbc107ci5wdXNoKGwrNjU1MzY+PjgmMjU1LGwrMjU2JjI1NSl9cmV0dXJuIGl9QS5NQUNTVFJJTkc9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mdW5jdGlvbihlKXtpZighVSlmb3IodmFyIHQgaW4gVT17fSxJKVVbdF09bmV3IFN0cmluZyh0KTt2YXIgcj1VW2VdO2lmKHZvaWQgMCE9PXIpe2lmKE4pe3ZhciBuPU4uZ2V0KHIpO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG59dmFyIG89SVtlXTtpZih2b2lkIDAhPT1vKXtmb3IodmFyIGk9e30sYT0wO2E8by5sZW5ndGg7YSsrKWlbby5jaGFyQ29kZUF0KGEpXT1hKzEyODtyZXR1cm4gTiYmTi5zZXQocixpKSxpfX19KHQpO2lmKHZvaWQgMCE9PXIpe2Zvcih2YXIgbj1bXSxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBpPWUuY2hhckNvZGVBdChvKTtpZigxMjg8PWkmJnZvaWQgMD09PShpPXJbaV0pKXJldHVybjtuW29dPWl9cmV0dXJuIG59fSxrLk1BQ1NUUklORz1mdW5jdGlvbihlLHQpe3ZhciByPUEuTUFDU1RSSU5HKGUsdCk7cmV0dXJuIHZvaWQgMCE9PXI/ci5sZW5ndGg6MH0sQS5WQVJERUxUQVM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAscj1bXTt0PGUubGVuZ3RoOyl7dmFyIG49ZVt0XTt0PTA9PT1uP0IoZSx0LHIpOi0xMjg8PW4mJm48PTEyNz9HKGUsdCxyKTpWKGUsdCxyKX1yZXR1cm4gcn0sQS5JTkRFWD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MSxyPVt0XSxuPVtdLG89MDtvPGUubGVuZ3RoO28rPTEpe3ZhciBpPUEuT0JKRUNUKGVbb10pO0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KG4saSksdCs9aS5sZW5ndGgsci5wdXNoKHQpfWlmKDA9PT1uLmxlbmd0aClyZXR1cm5bMCwwXTtmb3IodmFyIGE9W10scz0xK01hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5sb2coMikpLzh8MCxsPVt2b2lkIDAsQS5CWVRFLEEuVVNIT1JULEEuVUlOVDI0LEEuVUxPTkddW3NdLHU9MDt1PHIubGVuZ3RoO3UrPTEpe3ZhciBjPWwoclt1XSk7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoYSxjKX1yZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdChBLkNhcmQxNihlLmxlbmd0aCksQS5PZmZTaXplKHMpLGEsbil9LGsuSU5ERVg9ZnVuY3Rpb24oZSl7cmV0dXJuIEEuSU5ERVgoZSkubGVuZ3RofSxBLkRJQ1Q9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9T2JqZWN0LmtleXMoZSksbj1yLmxlbmd0aCxvPTA7bzxuO28rPTEpe3ZhciBpPXBhcnNlSW50KHJbb10sMCksYT1lW2ldO3Q9KHQ9dC5jb25jYXQoQS5PUEVSQU5EKGEudmFsdWUsYS50eXBlKSkpLmNvbmNhdChBLk9QRVJBVE9SKGkpKX1yZXR1cm4gdH0say5ESUNUPWZ1bmN0aW9uKGUpe3JldHVybiBBLkRJQ1QoZSkubGVuZ3RofSxBLk9QRVJBVE9SPWZ1bmN0aW9uKGUpe3JldHVybiBlPDEyMDA/W2VdOlsxMixlLTEyMDBdfSxBLk9QRVJBTkQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtpZihBcnJheS5pc0FycmF5KHQpKWZvcih2YXIgbj0wO248dC5sZW5ndGg7bis9MSlMLmFyZ3VtZW50KGUubGVuZ3RoPT09dC5sZW5ndGgsXCJOb3QgZW5vdWdoIGFyZ3VtZW50cyBnaXZlbiBmb3IgdHlwZVwiK3QpLHI9ci5jb25jYXQoQS5PUEVSQU5EKGVbbl0sdFtuXSkpO2Vsc2UgaWYoXCJTSURcIj09PXQpcj1yLmNvbmNhdChBLk5VTUJFUihlKSk7ZWxzZSBpZihcIm9mZnNldFwiPT09dClyPXIuY29uY2F0KEEuTlVNQkVSMzIoZSkpO2Vsc2UgaWYoXCJudW1iZXJcIj09PXQpcj1yLmNvbmNhdChBLk5VTUJFUihlKSk7ZWxzZXtpZihcInJlYWxcIiE9PXQpdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBvcGVyYW5kIHR5cGUgXCIrdCk7cj1yLmNvbmNhdChBLlJFQUwoZSkpfXJldHVybiByfSxBLk9QPUEuQllURSxrLk9QPWsuQllURTt2YXIgej1cImZ1bmN0aW9uXCI9PXR5cGVvZiBXZWFrTWFwJiZuZXcgV2Vha01hcDtmdW5jdGlvbiBIKGUsdCxyKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rPTEpe3ZhciBvPXRbbl07dGhpc1tvLm5hbWVdPW8udmFsdWV9aWYodGhpcy50YWJsZU5hbWU9ZSx0aGlzLmZpZWxkcz10LHIpZm9yKHZhciBpPU9iamVjdC5rZXlzKHIpLGE9MDthPGkubGVuZ3RoO2ErPTEpe3ZhciBzPWlbYV0sbD1yW3NdO3ZvaWQgMCE9PXRoaXNbc10mJih0aGlzW3NdPWwpfX1mdW5jdGlvbiBXKGUsdCxyKXt2b2lkIDA9PT1yJiYocj10Lmxlbmd0aCk7dmFyIG49bmV3IEFycmF5KHQubGVuZ3RoKzEpO25bMF09e25hbWU6ZStcIkNvdW50XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnJ9O2Zvcih2YXIgbz0wO288dC5sZW5ndGg7bysrKW5bbysxXT17bmFtZTplK28sdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnRbb119O3JldHVybiBufWZ1bmN0aW9uIHEoZSx0LHIpe3ZhciBuPXQubGVuZ3RoLG89bmV3IEFycmF5KG4rMSk7b1swXT17bmFtZTplK1wiQ291bnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6bn07Zm9yKHZhciBpPTA7aTxuO2krKylvW2krMV09e25hbWU6ZStpLHR5cGU6XCJUQUJMRVwiLHZhbHVlOnIodFtpXSxpKX07cmV0dXJuIG99ZnVuY3Rpb24gWChlLHQscil7dmFyIG49dC5sZW5ndGgsbz1bXTtvWzBdPXtuYW1lOmUrXCJDb3VudFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpufTtmb3IodmFyIGk9MDtpPG47aSsrKW89by5jb25jYXQocih0W2ldLGkpKTtyZXR1cm4gb31mdW5jdGlvbiBZKGUpezE9PT1lLmZvcm1hdD9ILmNhbGwodGhpcyxcImNvdmVyYWdlVGFibGVcIixbe25hbWU6XCJjb3ZlcmFnZUZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxfV0uY29uY2F0KFcoXCJnbHlwaFwiLGUuZ2x5cGhzKSkpOkwuYXNzZXJ0KCExLFwiQ2FuJ3QgY3JlYXRlIGNvdmVyYWdlIHRhYmxlIGZvcm1hdCAyIHlldC5cIil9ZnVuY3Rpb24gWihlKXtILmNhbGwodGhpcyxcInNjcmlwdExpc3RUYWJsZVwiLFgoXCJzY3JpcHRSZWNvcmRcIixlLGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5zY3JpcHQsbj1yLmRlZmF1bHRMYW5nU3lzO3JldHVybiBMLmFzc2VydCghIW4sXCJVbmFibGUgdG8gd3JpdGUgR1NVQjogc2NyaXB0IFwiK2UudGFnK1wiIGhhcyBubyBkZWZhdWx0IGxhbmd1YWdlIHN5c3RlbS5cIiksW3tuYW1lOlwic2NyaXB0VGFnXCIrdCx0eXBlOlwiVEFHXCIsdmFsdWU6ZS50YWd9LHtuYW1lOlwic2NyaXB0XCIrdCx0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSChcInNjcmlwdFRhYmxlXCIsW3tuYW1lOlwiZGVmYXVsdExhbmdTeXNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSChcImRlZmF1bHRMYW5nU3lzXCIsW3tuYW1lOlwibG9va3VwT3JkZXJcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJyZXFGZWF0dXJlSW5kZXhcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6bi5yZXFGZWF0dXJlSW5kZXh9XS5jb25jYXQoVyhcImZlYXR1cmVJbmRleFwiLG4uZmVhdHVyZUluZGV4ZXMpKSl9XS5jb25jYXQoWChcImxhbmdTeXNcIixyLmxhbmdTeXNSZWNvcmRzLGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5sYW5nU3lzO3JldHVyblt7bmFtZTpcImxhbmdTeXNUYWdcIit0LHR5cGU6XCJUQUdcIix2YWx1ZTplLnRhZ30se25hbWU6XCJsYW5nU3lzXCIrdCx0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSChcImxhbmdTeXNcIixbe25hbWU6XCJsb29rdXBPcmRlclwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInJlcUZlYXR1cmVJbmRleFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpyLnJlcUZlYXR1cmVJbmRleH1dLmNvbmNhdChXKFwiZmVhdHVyZUluZGV4XCIsci5mZWF0dXJlSW5kZXhlcykpKX1dfSkpKX1dfSkpfWZ1bmN0aW9uIFEoZSl7SC5jYWxsKHRoaXMsXCJmZWF0dXJlTGlzdFRhYmxlXCIsWChcImZlYXR1cmVSZWNvcmRcIixlLGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5mZWF0dXJlO3JldHVyblt7bmFtZTpcImZlYXR1cmVUYWdcIit0LHR5cGU6XCJUQUdcIix2YWx1ZTplLnRhZ30se25hbWU6XCJmZWF0dXJlXCIrdCx0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSChcImZlYXR1cmVUYWJsZVwiLFt7bmFtZTpcImZlYXR1cmVQYXJhbXNcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ci5mZWF0dXJlUGFyYW1zfV0uY29uY2F0KFcoXCJsb29rdXBMaXN0SW5kZXhcIixyLmxvb2t1cExpc3RJbmRleGVzKSkpfV19KSl9ZnVuY3Rpb24gSyhlLHIpe0guY2FsbCh0aGlzLFwibG9va3VwTGlzdFRhYmxlXCIscShcImxvb2t1cFwiLGUsZnVuY3Rpb24oZSl7dmFyIHQ9cltlLmxvb2t1cFR5cGVdO3JldHVybiBMLmFzc2VydCghIXQsXCJVbmFibGUgdG8gd3JpdGUgR1NVQiBsb29rdXAgdHlwZSBcIitlLmxvb2t1cFR5cGUrXCIgdGFibGVzLlwiKSxuZXcgSChcImxvb2t1cFRhYmxlXCIsW3tuYW1lOlwibG9va3VwVHlwZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplLmxvb2t1cFR5cGV9LHtuYW1lOlwibG9va3VwRmxhZ1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplLmxvb2t1cEZsYWd9XS5jb25jYXQocShcInN1YnRhYmxlXCIsZS5zdWJ0YWJsZXMsdCkpKX0pKX1BLkNIQVJTVFJJTkc9ZnVuY3Rpb24oZSl7aWYoeil7dmFyIHQ9ei5nZXQoZSk7aWYodm9pZCAwIT09dClyZXR1cm4gdH1mb3IodmFyIHI9W10sbj1lLmxlbmd0aCxvPTA7bzxuO28rPTEpe3ZhciBpPWVbb107cj1yLmNvbmNhdChBW2kudHlwZV0oaS52YWx1ZSkpfXJldHVybiB6JiZ6LnNldChlLHIpLHJ9LGsuQ0hBUlNUUklORz1mdW5jdGlvbihlKXtyZXR1cm4gQS5DSEFSU1RSSU5HKGUpLmxlbmd0aH0sQS5PQkpFQ1Q9ZnVuY3Rpb24oZSl7dmFyIHQ9QVtlLnR5cGVdO3JldHVybiBMLmFyZ3VtZW50KHZvaWQgMCE9PXQsXCJObyBlbmNvZGluZyBmdW5jdGlvbiBmb3IgdHlwZSBcIitlLnR5cGUpLHQoZS52YWx1ZSl9LGsuT0JKRUNUPWZ1bmN0aW9uKGUpe3ZhciB0PWtbZS50eXBlXTtyZXR1cm4gTC5hcmd1bWVudCh2b2lkIDAhPT10LFwiTm8gc2l6ZU9mIGZ1bmN0aW9uIGZvciB0eXBlIFwiK2UudHlwZSksdChlLnZhbHVlKX0sQS5UQUJMRT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj1lLmZpZWxkcy5sZW5ndGgsbj1bXSxvPVtdLGk9MDtpPHI7aSs9MSl7dmFyIGE9ZS5maWVsZHNbaV0scz1BW2EudHlwZV07TC5hcmd1bWVudCh2b2lkIDAhPT1zLFwiTm8gZW5jb2RpbmcgZnVuY3Rpb24gZm9yIGZpZWxkIHR5cGUgXCIrYS50eXBlK1wiIChcIithLm5hbWUrXCIpXCIpO3ZhciBsPWVbYS5uYW1lXTt2b2lkIDA9PT1sJiYobD1hLnZhbHVlKTt2YXIgdT1zKGwpO1wiVEFCTEVcIj09PWEudHlwZT8oby5wdXNoKHQubGVuZ3RoKSx0PXQuY29uY2F0KFswLDBdKSxuLnB1c2godSkpOnQ9dC5jb25jYXQodSl9Zm9yKHZhciBjPTA7YzxuLmxlbmd0aDtjKz0xKXt2YXIgZD1vW2NdLGY9dC5sZW5ndGg7TC5hcmd1bWVudChmPDY1NTM2LFwiVGFibGUgXCIrZS50YWJsZU5hbWUrXCIgdG9vIGJpZy5cIiksdFtkXT1mPj44LHRbZCsxXT0yNTUmZix0PXQuY29uY2F0KG5bY10pfXJldHVybiB0fSxrLlRBQkxFPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLHI9ZS5maWVsZHMubGVuZ3RoLG49MDtuPHI7bis9MSl7dmFyIG89ZS5maWVsZHNbbl0saT1rW28udHlwZV07TC5hcmd1bWVudCh2b2lkIDAhPT1pLFwiTm8gc2l6ZU9mIGZ1bmN0aW9uIGZvciBmaWVsZCB0eXBlIFwiK28udHlwZStcIiAoXCIrby5uYW1lK1wiKVwiKTt2YXIgYT1lW28ubmFtZV07dm9pZCAwPT09YSYmKGE9by52YWx1ZSksdCs9aShhKSxcIlRBQkxFXCI9PT1vLnR5cGUmJih0Kz0yKX1yZXR1cm4gdH0sQS5SRUNPUkQ9QS5UQUJMRSxrLlJFQ09SRD1rLlRBQkxFLEEuTElURVJBTD1mdW5jdGlvbihlKXtyZXR1cm4gZX0say5MSVRFUkFMPWZ1bmN0aW9uKGUpe3JldHVybiBlLmxlbmd0aH0sSC5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEEuVEFCTEUodGhpcyl9LEgucHJvdG90eXBlLnNpemVPZj1mdW5jdGlvbigpe3JldHVybiBrLlRBQkxFKHRoaXMpfTt2YXIgSj17VGFibGU6SCxSZWNvcmQ6SCxDb3ZlcmFnZTooWS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShILnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVksU2NyaXB0TGlzdDooWi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShILnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVosRmVhdHVyZUxpc3Q6KFEucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoSC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1RLExvb2t1cExpc3Q6KEsucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoSC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1LLHVzaG9ydExpc3Q6Vyx0YWJsZUxpc3Q6cSxyZWNvcmRMaXN0Olh9O2Z1bmN0aW9uICQoZSx0KXtyZXR1cm4gZS5nZXRVaW50OCh0KX1mdW5jdGlvbiBlZShlLHQpe3JldHVybiBlLmdldFVpbnQxNih0LCExKX1mdW5jdGlvbiB0ZShlLHQpe3JldHVybiBlLmdldFVpbnQzMih0LCExKX1mdW5jdGlvbiByZShlLHQpe3JldHVybiBlLmdldEludDE2KHQsITEpK2UuZ2V0VWludDE2KHQrMiwhMSkvNjU1MzV9dmFyIG5lPXtieXRlOjEsdVNob3J0OjIsc2hvcnQ6Mix1TG9uZzo0LGZpeGVkOjQsbG9uZ0RhdGVUaW1lOjgsdGFnOjR9O2Z1bmN0aW9uIG9lKGUsdCl7dGhpcy5kYXRhPWUsdGhpcy5vZmZzZXQ9dCx0aGlzLnJlbGF0aXZlT2Zmc2V0PTB9b2UucHJvdG90eXBlLnBhcnNlQnl0ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZGF0YS5nZXRVaW50OCh0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9MSxlfSxvZS5wcm90b3R5cGUucGFyc2VDaGFyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5kYXRhLmdldEludDgodGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCk7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPTEsZX0sb2UucHJvdG90eXBlLnBhcnNlQ2FyZDg9b2UucHJvdG90eXBlLnBhcnNlQnl0ZSxvZS5wcm90b3R5cGUucGFyc2VDYXJkMTY9b2UucHJvdG90eXBlLnBhcnNlVVNob3J0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5kYXRhLmdldFVpbnQxNih0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9MixlfSxvZS5wcm90b3R5cGUucGFyc2VTSUQ9b2UucHJvdG90eXBlLnBhcnNlVVNob3J0LG9lLnByb3RvdHlwZS5wYXJzZU9mZnNldDE2PW9lLnByb3RvdHlwZS5wYXJzZVVTaG9ydCxvZS5wcm90b3R5cGUucGFyc2VTaG9ydD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZGF0YS5nZXRJbnQxNih0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9MixlfSxvZS5wcm90b3R5cGUucGFyc2VGMkRvdDE0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5kYXRhLmdldEludDE2KHRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQpLzE2Mzg0O3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz0yLGV9LG9lLnByb3RvdHlwZS5wYXJzZU9mZnNldDMyPW9lLnByb3RvdHlwZS5wYXJzZVVMb25nPWZ1bmN0aW9uKCl7dmFyIGU9dGUodGhpcy5kYXRhLHRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQpO3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz00LGV9LG9lLnByb3RvdHlwZS5wYXJzZUZpeGVkPWZ1bmN0aW9uKCl7dmFyIGU9cmUodGhpcy5kYXRhLHRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQpO3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz00LGV9LG9lLnByb3RvdHlwZS5wYXJzZVN0cmluZz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmRhdGEscj10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LG49XCJcIjt0aGlzLnJlbGF0aXZlT2Zmc2V0Kz1lO2Zvcih2YXIgbz0wO288ZTtvKyspbis9U3RyaW5nLmZyb21DaGFyQ29kZSh0LmdldFVpbnQ4KHIrbykpO3JldHVybiBufSxvZS5wcm90b3R5cGUucGFyc2VUYWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZVN0cmluZyg0KX0sb2UucHJvdG90eXBlLnBhcnNlTG9uZ0RhdGVUaW1lPWZ1bmN0aW9uKCl7dmFyIGU9dGUodGhpcy5kYXRhLHRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQrNCk7cmV0dXJuIGUtPTIwODI4NDQ4MDAsdGhpcy5yZWxhdGl2ZU9mZnNldCs9OCxlfSxvZS5wcm90b3R5cGUucGFyc2VWZXJzaW9uPWZ1bmN0aW9uKGUpe3ZhciB0PWVlKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KSxyPWVlKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KzIpO3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz00LHZvaWQgMD09PWUmJihlPTQwOTYpLHQrci9lLzEwfSxvZS5wcm90b3R5cGUuc2tpcD1mdW5jdGlvbihlLHQpe3ZvaWQgMD09PXQmJih0PTEpLHRoaXMucmVsYXRpdmVPZmZzZXQrPW5lW2VdKnR9LG9lLnByb3RvdHlwZS5wYXJzZVVMb25nTGlzdD1mdW5jdGlvbihlKXt2b2lkIDA9PT1lJiYoZT10aGlzLnBhcnNlVUxvbmcoKSk7Zm9yKHZhciB0PW5ldyBBcnJheShlKSxyPXRoaXMuZGF0YSxuPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsbz0wO288ZTtvKyspdFtvXT1yLmdldFVpbnQzMihuKSxuKz00O3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz00KmUsdH0sb2UucHJvdG90eXBlLnBhcnNlT2Zmc2V0MTZMaXN0PW9lLnByb3RvdHlwZS5wYXJzZVVTaG9ydExpc3Q9ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJzZVVTaG9ydCgpKTtmb3IodmFyIHQ9bmV3IEFycmF5KGUpLHI9dGhpcy5kYXRhLG49dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCxvPTA7bzxlO28rKyl0W29dPXIuZ2V0VWludDE2KG4pLG4rPTI7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPTIqZSx0fSxvZS5wcm90b3R5cGUucGFyc2VTaG9ydExpc3Q9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW5ldyBBcnJheShlKSxyPXRoaXMuZGF0YSxuPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsbz0wO288ZTtvKyspdFtvXT1yLmdldEludDE2KG4pLG4rPTI7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPTIqZSx0fSxvZS5wcm90b3R5cGUucGFyc2VCeXRlTGlzdD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3IEFycmF5KGUpLHI9dGhpcy5kYXRhLG49dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCxvPTA7bzxlO28rKyl0W29dPXIuZ2V0VWludDgobisrKTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9ZSx0fSxvZS5wcm90b3R5cGUucGFyc2VMaXN0PWZ1bmN0aW9uKGUsdCl7dHx8KHQ9ZSxlPXRoaXMucGFyc2VVU2hvcnQoKSk7Zm9yKHZhciByPW5ldyBBcnJheShlKSxuPTA7bjxlO24rKylyW25dPXQuY2FsbCh0aGlzKTtyZXR1cm4gcn0sb2UucHJvdG90eXBlLnBhcnNlTGlzdDMyPWZ1bmN0aW9uKGUsdCl7dHx8KHQ9ZSxlPXRoaXMucGFyc2VVTG9uZygpKTtmb3IodmFyIHI9bmV3IEFycmF5KGUpLG49MDtuPGU7bisrKXJbbl09dC5jYWxsKHRoaXMpO3JldHVybiByfSxvZS5wcm90b3R5cGUucGFyc2VSZWNvcmRMaXN0PWZ1bmN0aW9uKGUsdCl7dHx8KHQ9ZSxlPXRoaXMucGFyc2VVU2hvcnQoKSk7Zm9yKHZhciByPW5ldyBBcnJheShlKSxuPU9iamVjdC5rZXlzKHQpLG89MDtvPGU7bysrKXtmb3IodmFyIGk9e30sYT0wO2E8bi5sZW5ndGg7YSsrKXt2YXIgcz1uW2FdLGw9dFtzXTtpW3NdPWwuY2FsbCh0aGlzKX1yW29dPWl9cmV0dXJuIHJ9LG9lLnByb3RvdHlwZS5wYXJzZVJlY29yZExpc3QzMj1mdW5jdGlvbihlLHQpe3R8fCh0PWUsZT10aGlzLnBhcnNlVUxvbmcoKSk7Zm9yKHZhciByPW5ldyBBcnJheShlKSxuPU9iamVjdC5rZXlzKHQpLG89MDtvPGU7bysrKXtmb3IodmFyIGk9e30sYT0wO2E8bi5sZW5ndGg7YSsrKXt2YXIgcz1uW2FdLGw9dFtzXTtpW3NdPWwuY2FsbCh0aGlzKX1yW29dPWl9cmV0dXJuIHJ9LG9lLnByb3RvdHlwZS5wYXJzZVN0cnVjdD1mdW5jdGlvbihlKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlKXJldHVybiBlLmNhbGwodGhpcyk7Zm9yKHZhciB0PU9iamVjdC5rZXlzKGUpLHI9e30sbj0wO248dC5sZW5ndGg7bisrKXt2YXIgbz10W25dLGk9ZVtvXTtyW29dPWkuY2FsbCh0aGlzKX1yZXR1cm4gcn0sb2UucHJvdG90eXBlLnBhcnNlVmFsdWVSZWNvcmQ9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJzZVVTaG9ydCgpKSwwIT09ZSl7dmFyIHQ9e307cmV0dXJuIDEmZSYmKHQueFBsYWNlbWVudD10aGlzLnBhcnNlU2hvcnQoKSksMiZlJiYodC55UGxhY2VtZW50PXRoaXMucGFyc2VTaG9ydCgpKSw0JmUmJih0LnhBZHZhbmNlPXRoaXMucGFyc2VTaG9ydCgpKSw4JmUmJih0LnlBZHZhbmNlPXRoaXMucGFyc2VTaG9ydCgpKSwxNiZlJiYodC54UGxhRGV2aWNlPXZvaWQgMCx0aGlzLnBhcnNlU2hvcnQoKSksMzImZSYmKHQueVBsYURldmljZT12b2lkIDAsdGhpcy5wYXJzZVNob3J0KCkpLDY0JmUmJih0LnhBZHZEZXZpY2U9dm9pZCAwLHRoaXMucGFyc2VTaG9ydCgpKSwxMjgmZSYmKHQueUFkdkRldmljZT12b2lkIDAsdGhpcy5wYXJzZVNob3J0KCkpLHR9fSxvZS5wcm90b3R5cGUucGFyc2VWYWx1ZVJlY29yZExpc3Q9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpLHQ9dGhpcy5wYXJzZVVTaG9ydCgpLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09dGhpcy5wYXJzZVZhbHVlUmVjb3JkKGUpO3JldHVybiByfSxvZS5wcm90b3R5cGUucGFyc2VQb2ludGVyPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyc2VPZmZzZXQxNigpO2lmKDA8dClyZXR1cm4gbmV3IG9lKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0KS5wYXJzZVN0cnVjdChlKX0sb2UucHJvdG90eXBlLnBhcnNlUG9pbnRlcjMyPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyc2VPZmZzZXQzMigpO2lmKDA8dClyZXR1cm4gbmV3IG9lKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0KS5wYXJzZVN0cnVjdChlKX0sb2UucHJvdG90eXBlLnBhcnNlTGlzdE9mTGlzdHM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMucGFyc2VPZmZzZXQxNkxpc3QoKSxyPXQubGVuZ3RoLG49dGhpcy5yZWxhdGl2ZU9mZnNldCxvPW5ldyBBcnJheShyKSxpPTA7aTxyO2krKyl7dmFyIGE9dFtpXTtpZigwIT09YSlpZih0aGlzLnJlbGF0aXZlT2Zmc2V0PWEsZSl7Zm9yKHZhciBzPXRoaXMucGFyc2VPZmZzZXQxNkxpc3QoKSxsPW5ldyBBcnJheShzLmxlbmd0aCksdT0wO3U8cy5sZW5ndGg7dSsrKXRoaXMucmVsYXRpdmVPZmZzZXQ9YStzW3VdLGxbdV09ZS5jYWxsKHRoaXMpO29baV09bH1lbHNlIG9baV09dGhpcy5wYXJzZVVTaG9ydExpc3QoKTtlbHNlIG9baV09dm9pZCAwfXJldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0PW4sb30sb2UucHJvdG90eXBlLnBhcnNlQ292ZXJhZ2U9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LHQ9dGhpcy5wYXJzZVVTaG9ydCgpLHI9dGhpcy5wYXJzZVVTaG9ydCgpO2lmKDE9PT10KXJldHVybntmb3JtYXQ6MSxnbHlwaHM6dGhpcy5wYXJzZVVTaG9ydExpc3Qocil9O2lmKDIhPT10KXRocm93IG5ldyBFcnJvcihcIjB4XCIrZS50b1N0cmluZygxNikrXCI6IENvdmVyYWdlIGZvcm1hdCBtdXN0IGJlIDEgb3IgMi5cIik7Zm9yKHZhciBuPW5ldyBBcnJheShyKSxvPTA7bzxyO28rKyluW29dPXtzdGFydDp0aGlzLnBhcnNlVVNob3J0KCksZW5kOnRoaXMucGFyc2VVU2hvcnQoKSxpbmRleDp0aGlzLnBhcnNlVVNob3J0KCl9O3JldHVybntmb3JtYXQ6MixyYW5nZXM6bn19LG9lLnByb3RvdHlwZS5wYXJzZUNsYXNzRGVmPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCx0PXRoaXMucGFyc2VVU2hvcnQoKTtpZigxPT09dClyZXR1cm57Zm9ybWF0OjEsc3RhcnRHbHlwaDp0aGlzLnBhcnNlVVNob3J0KCksY2xhc3Nlczp0aGlzLnBhcnNlVVNob3J0TGlzdCgpfTtpZigyPT09dClyZXR1cm57Zm9ybWF0OjIscmFuZ2VzOnRoaXMucGFyc2VSZWNvcmRMaXN0KHtzdGFydDpvZS51U2hvcnQsZW5kOm9lLnVTaG9ydCxjbGFzc0lkOm9lLnVTaG9ydH0pfTt0aHJvdyBuZXcgRXJyb3IoXCIweFwiK2UudG9TdHJpbmcoMTYpK1wiOiBDbGFzc0RlZiBmb3JtYXQgbXVzdCBiZSAxIG9yIDIuXCIpfSxvZS5saXN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VMaXN0KGUsdCl9fSxvZS5saXN0MzI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZUxpc3QzMihlLHQpfX0sb2UucmVjb3JkTGlzdD1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcnNlUmVjb3JkTGlzdChlLHQpfX0sb2UucmVjb3JkTGlzdDMyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VSZWNvcmRMaXN0MzIoZSx0KX19LG9lLnBvaW50ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VQb2ludGVyKGUpfX0sb2UucG9pbnRlcjMyPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcnNlUG9pbnRlcjMyKGUpfX0sb2UudGFnPW9lLnByb3RvdHlwZS5wYXJzZVRhZyxvZS5ieXRlPW9lLnByb3RvdHlwZS5wYXJzZUJ5dGUsb2UudVNob3J0PW9lLm9mZnNldDE2PW9lLnByb3RvdHlwZS5wYXJzZVVTaG9ydCxvZS51U2hvcnRMaXN0PW9lLnByb3RvdHlwZS5wYXJzZVVTaG9ydExpc3Qsb2UudUxvbmc9b2Uub2Zmc2V0MzI9b2UucHJvdG90eXBlLnBhcnNlVUxvbmcsb2UudUxvbmdMaXN0PW9lLnByb3RvdHlwZS5wYXJzZVVMb25nTGlzdCxvZS5zdHJ1Y3Q9b2UucHJvdG90eXBlLnBhcnNlU3RydWN0LG9lLmNvdmVyYWdlPW9lLnByb3RvdHlwZS5wYXJzZUNvdmVyYWdlLG9lLmNsYXNzRGVmPW9lLnByb3RvdHlwZS5wYXJzZUNsYXNzRGVmO3ZhciBpZT17cmVzZXJ2ZWQ6b2UudVNob3J0LHJlcUZlYXR1cmVJbmRleDpvZS51U2hvcnQsZmVhdHVyZUluZGV4ZXM6b2UudVNob3J0TGlzdH07b2UucHJvdG90eXBlLnBhcnNlU2NyaXB0TGlzdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcnNlUG9pbnRlcihvZS5yZWNvcmRMaXN0KHt0YWc6b2UudGFnLHNjcmlwdDpvZS5wb2ludGVyKHtkZWZhdWx0TGFuZ1N5czpvZS5wb2ludGVyKGllKSxsYW5nU3lzUmVjb3JkczpvZS5yZWNvcmRMaXN0KHt0YWc6b2UudGFnLGxhbmdTeXM6b2UucG9pbnRlcihpZSl9KX0pfSkpfHxbXX0sb2UucHJvdG90eXBlLnBhcnNlRmVhdHVyZUxpc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZVBvaW50ZXIob2UucmVjb3JkTGlzdCh7dGFnOm9lLnRhZyxmZWF0dXJlOm9lLnBvaW50ZXIoe2ZlYXR1cmVQYXJhbXM6b2Uub2Zmc2V0MTYsbG9va3VwTGlzdEluZGV4ZXM6b2UudVNob3J0TGlzdH0pfSkpfHxbXX0sb2UucHJvdG90eXBlLnBhcnNlTG9va3VwTGlzdD1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5wYXJzZVBvaW50ZXIob2UubGlzdChvZS5wb2ludGVyKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpO0wuYXJndW1lbnQoMTw9ZSYmZTw9OSxcIkdQT1MvR1NVQiBsb29rdXAgdHlwZSBcIitlK1wiIHVua25vd24uXCIpO3ZhciB0PXRoaXMucGFyc2VVU2hvcnQoKSxyPTE2JnQ7cmV0dXJue2xvb2t1cFR5cGU6ZSxsb29rdXBGbGFnOnQsc3VidGFibGVzOnRoaXMucGFyc2VMaXN0KG9lLnBvaW50ZXIobltlXSkpLG1hcmtGaWx0ZXJpbmdTZXQ6cj90aGlzLnBhcnNlVVNob3J0KCk6dm9pZCAwfX0pKSl8fFtdfSxvZS5wcm90b3R5cGUucGFyc2VGZWF0dXJlVmFyaWF0aW9uc0xpc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZVBvaW50ZXIzMihmdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VVU2hvcnQoKSx0PXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm4gTC5hcmd1bWVudCgxPT09ZSYmdDwxLFwiR1BPUy9HU1VCIGZlYXR1cmUgdmFyaWF0aW9ucyB0YWJsZSB1bmtub3duLlwiKSx0aGlzLnBhcnNlUmVjb3JkTGlzdDMyKHtjb25kaXRpb25TZXRPZmZzZXQ6b2Uub2Zmc2V0MzIsZmVhdHVyZVRhYmxlU3Vic3RpdHV0aW9uT2Zmc2V0Om9lLm9mZnNldDMyfSl9KXx8W119O3ZhciBhZT17Z2V0Qnl0ZTokLGdldENhcmQ4OiQsZ2V0VVNob3J0OmVlLGdldENhcmQxNjplZSxnZXRTaG9ydDpmdW5jdGlvbihlLHQpe3JldHVybiBlLmdldEludDE2KHQsITEpfSxnZXRVTG9uZzp0ZSxnZXRGaXhlZDpyZSxnZXRUYWc6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9XCJcIixuPXQ7bjx0KzQ7bis9MSlyKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGUuZ2V0SW50OChuKSk7cmV0dXJuIHJ9LGdldE9mZnNldDpmdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPTAsbz0wO288cjtvKz0xKW48PD04LG4rPWUuZ2V0VWludDgodCtvKTtyZXR1cm4gbn0sZ2V0Qnl0ZXM6ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1bXSxvPXQ7bzxyO28rPTEpbi5wdXNoKGUuZ2V0VWludDgobykpO3JldHVybiBufSxieXRlc1RvU3RyaW5nOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1cIlwiLHI9MDtyPGUubGVuZ3RoO3IrPTEpdCs9U3RyaW5nLmZyb21DaGFyQ29kZShlW3JdKTtyZXR1cm4gdH0sUGFyc2VyOm9lfTt2YXIgc2U9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e307ci52ZXJzaW9uPWFlLmdldFVTaG9ydChlLHQpLEwuYXJndW1lbnQoMD09PXIudmVyc2lvbixcImNtYXAgdGFibGUgdmVyc2lvbiBzaG91bGQgYmUgMC5cIiksci5udW1UYWJsZXM9YWUuZ2V0VVNob3J0KGUsdCsyKTtmb3IodmFyIG49LTEsbz1yLm51bVRhYmxlcy0xOzA8PW87LS1vKXt2YXIgaT1hZS5nZXRVU2hvcnQoZSx0KzQrOCpvKSxhPWFlLmdldFVTaG9ydChlLHQrNCs4Km8rMik7aWYoMz09PWkmJigwPT09YXx8MT09PWF8fDEwPT09YSl8fDA9PT1pJiYoMD09PWF8fDE9PT1hfHwyPT09YXx8Mz09PWF8fDQ9PT1hKSl7bj1hZS5nZXRVTG9uZyhlLHQrNCs4Km8rNCk7YnJlYWt9fWlmKC0xPT09bil0aHJvdyBuZXcgRXJyb3IoXCJObyB2YWxpZCBjbWFwIHN1Yi10YWJsZXMgZm91bmQuXCIpO3ZhciBzPW5ldyBhZS5QYXJzZXIoZSx0K24pO2lmKHIuZm9ybWF0PXMucGFyc2VVU2hvcnQoKSwxMj09PXIuZm9ybWF0KSFmdW5jdGlvbihlLHQpe3ZhciByO3QucGFyc2VVU2hvcnQoKSxlLmxlbmd0aD10LnBhcnNlVUxvbmcoKSxlLmxhbmd1YWdlPXQucGFyc2VVTG9uZygpLGUuZ3JvdXBDb3VudD1yPXQucGFyc2VVTG9uZygpLGUuZ2x5cGhJbmRleE1hcD17fTtmb3IodmFyIG49MDtuPHI7bis9MSlmb3IodmFyIG89dC5wYXJzZVVMb25nKCksaT10LnBhcnNlVUxvbmcoKSxhPXQucGFyc2VVTG9uZygpLHM9bztzPD1pO3MrPTEpZS5nbHlwaEluZGV4TWFwW3NdPWEsYSsrfShyLHMpO2Vsc2V7aWYoNCE9PXIuZm9ybWF0KXRocm93IG5ldyBFcnJvcihcIk9ubHkgZm9ybWF0IDQgYW5kIDEyIGNtYXAgdGFibGVzIGFyZSBzdXBwb3J0ZWQgKGZvdW5kIGZvcm1hdCBcIityLmZvcm1hdCtcIikuXCIpOyFmdW5jdGlvbihlLHQscixuLG8pe3ZhciBpO2UubGVuZ3RoPXQucGFyc2VVU2hvcnQoKSxlLmxhbmd1YWdlPXQucGFyc2VVU2hvcnQoKSxlLnNlZ0NvdW50PWk9dC5wYXJzZVVTaG9ydCgpPj4xLHQuc2tpcChcInVTaG9ydFwiLDMpLGUuZ2x5cGhJbmRleE1hcD17fTtmb3IodmFyIGE9bmV3IGFlLlBhcnNlcihyLG4rbysxNCkscz1uZXcgYWUuUGFyc2VyKHIsbitvKzE2KzIqaSksbD1uZXcgYWUuUGFyc2VyKHIsbitvKzE2KzQqaSksdT1uZXcgYWUuUGFyc2VyKHIsbitvKzE2KzYqaSksYz1uK28rMTYrOCppLGQ9MDtkPGktMTtkKz0xKWZvcih2YXIgZj12b2lkIDAsaD1hLnBhcnNlVVNob3J0KCkscD1zLnBhcnNlVVNob3J0KCkseT1sLnBhcnNlU2hvcnQoKSxtPXUucGFyc2VVU2hvcnQoKSxnPXA7Zzw9aDtnKz0xKTAhPT1tPyhjPXUub2Zmc2V0K3UucmVsYXRpdmVPZmZzZXQtMixjKz1tLGMrPTIqKGctcCksMCE9PShmPWFlLmdldFVTaG9ydChyLGMpKSYmKGY9Zit5JjY1NTM1KSk6Zj1nK3kmNjU1MzUsZS5nbHlwaEluZGV4TWFwW2ddPWZ9KHIscyxlLHQsbil9cmV0dXJuIHJ9LG1ha2U6ZnVuY3Rpb24oZSl7dmFyIHQscj0hMDtmb3IodD1lLmxlbmd0aC0xOzA8dDstLXQpe2lmKDY1NTM1PGUuZ2V0KHQpLnVuaWNvZGUpe2NvbnNvbGUubG9nKFwiQWRkaW5nIENNQVAgZm9ybWF0IDEyIChuZWVkZWQhKVwiKSxyPSExO2JyZWFrfX12YXIgbj1be25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwibnVtVGFibGVzXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnI/MToyfSx7bmFtZTpcInBsYXRmb3JtSURcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6M30se25hbWU6XCJlbmNvZGluZ0lEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjF9LHtuYW1lOlwib2Zmc2V0XCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6cj8xMjoyMH1dO3J8fChuPW4uY29uY2F0KFt7bmFtZTpcImNtYXAxMlBsYXRmb3JtSURcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6M30se25hbWU6XCJjbWFwMTJFbmNvZGluZ0lEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjEwfSx7bmFtZTpcImNtYXAxMk9mZnNldFwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9XSkpLG49bi5jb25jYXQoW3tuYW1lOlwiZm9ybWF0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjR9LHtuYW1lOlwiY21hcDRMZW5ndGhcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJsYW5ndWFnZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInNlZ0NvdW50WDJcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJzZWFyY2hSYW5nZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcImVudHJ5U2VsZWN0b3JcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJyYW5nZVNoaWZ0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9XSk7dmFyIG8saSxhLHM9bmV3IEouVGFibGUoXCJjbWFwXCIsbik7Zm9yKHMuc2VnbWVudHM9W10sdD0wO3Q8ZS5sZW5ndGg7dCs9MSl7Zm9yKHZhciBsPWUuZ2V0KHQpLHU9MDt1PGwudW5pY29kZXMubGVuZ3RoO3UrPTEpbz1zLGk9bC51bmljb2Rlc1t1XSxhPXQsby5zZWdtZW50cy5wdXNoKHtlbmQ6aSxzdGFydDppLGRlbHRhOi0oaS1hKSxvZmZzZXQ6MCxnbHlwaEluZGV4OmF9KTtzLnNlZ21lbnRzPXMuc2VnbWVudHMuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiBlLnN0YXJ0LXQuc3RhcnR9KX1zLnNlZ21lbnRzLnB1c2goe2VuZDo2NTUzNSxzdGFydDo2NTUzNSxkZWx0YToxLG9mZnNldDowfSk7dmFyIGM9cy5zZWdtZW50cy5sZW5ndGgsZD0wLGY9W10saD1bXSxwPVtdLHk9W10sbT1bXSxnPVtdO2Zvcih0PTA7dDxjO3QrPTEpe3ZhciB2PXMuc2VnbWVudHNbdF07di5lbmQ8PTY1NTM1JiZ2LnN0YXJ0PD02NTUzNT8oZj1mLmNvbmNhdCh7bmFtZTpcImVuZF9cIit0LHR5cGU6XCJVU0hPUlRcIix2YWx1ZTp2LmVuZH0pLGg9aC5jb25jYXQoe25hbWU6XCJzdGFydF9cIit0LHR5cGU6XCJVU0hPUlRcIix2YWx1ZTp2LnN0YXJ0fSkscD1wLmNvbmNhdCh7bmFtZTpcImlkRGVsdGFfXCIrdCx0eXBlOlwiU0hPUlRcIix2YWx1ZTp2LmRlbHRhfSkseT15LmNvbmNhdCh7bmFtZTpcImlkUmFuZ2VPZmZzZXRfXCIrdCx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6di5vZmZzZXR9KSx2b2lkIDAhPT12LmdseXBoSWQmJihtPW0uY29uY2F0KHtuYW1lOlwiZ2x5cGhfXCIrdCx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6di5nbHlwaElkfSkpKTpkKz0xLHJ8fHZvaWQgMD09PXYuZ2x5cGhJbmRleHx8KGc9KGc9KGc9Zy5jb25jYXQoe25hbWU6XCJjbWFwMTJTdGFydF9cIit0LHR5cGU6XCJVTE9OR1wiLHZhbHVlOnYuc3RhcnR9KSkuY29uY2F0KHtuYW1lOlwiY21hcDEyRW5kX1wiK3QsdHlwZTpcIlVMT05HXCIsdmFsdWU6di5lbmR9KSkuY29uY2F0KHtuYW1lOlwiY21hcDEyR2x5cGhfXCIrdCx0eXBlOlwiVUxPTkdcIix2YWx1ZTp2LmdseXBoSW5kZXh9KSl9aWYocy5zZWdDb3VudFgyPTIqKGMtZCkscy5zZWFyY2hSYW5nZT0yKk1hdGgucG93KDIsTWF0aC5mbG9vcihNYXRoLmxvZyhjLWQpL01hdGgubG9nKDIpKSkscy5lbnRyeVNlbGVjdG9yPU1hdGgubG9nKHMuc2VhcmNoUmFuZ2UvMikvTWF0aC5sb2coMikscy5yYW5nZVNoaWZ0PXMuc2VnQ291bnRYMi1zLnNlYXJjaFJhbmdlLHMuZmllbGRzPXMuZmllbGRzLmNvbmNhdChmKSxzLmZpZWxkcy5wdXNoKHtuYW1lOlwicmVzZXJ2ZWRQYWRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0pLHMuZmllbGRzPXMuZmllbGRzLmNvbmNhdChoKSxzLmZpZWxkcz1zLmZpZWxkcy5jb25jYXQocCkscy5maWVsZHM9cy5maWVsZHMuY29uY2F0KHkpLHMuZmllbGRzPXMuZmllbGRzLmNvbmNhdChtKSxzLmNtYXA0TGVuZ3RoPTE0KzIqZi5sZW5ndGgrMisyKmgubGVuZ3RoKzIqcC5sZW5ndGgrMip5Lmxlbmd0aCsyKm0ubGVuZ3RoLCFyKXt2YXIgYj0xNis0KmcubGVuZ3RoO3MuY21hcDEyT2Zmc2V0PTIwK3MuY21hcDRMZW5ndGgscy5maWVsZHM9cy5maWVsZHMuY29uY2F0KFt7bmFtZTpcImNtYXAxMkZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxMn0se25hbWU6XCJjbWFwMTJSZXNlcnZlZFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcImNtYXAxMkxlbmd0aFwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOmJ9LHtuYW1lOlwiY21hcDEyTGFuZ3VhZ2VcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcImNtYXAxMm5Hcm91cHNcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTpnLmxlbmd0aC8zfV0pLHMuZmllbGRzPXMuZmllbGRzLmNvbmNhdChnKX1yZXR1cm4gc319LGxlPVtcIi5ub3RkZWZcIixcInNwYWNlXCIsXCJleGNsYW1cIixcInF1b3RlZGJsXCIsXCJudW1iZXJzaWduXCIsXCJkb2xsYXJcIixcInBlcmNlbnRcIixcImFtcGVyc2FuZFwiLFwicXVvdGVyaWdodFwiLFwicGFyZW5sZWZ0XCIsXCJwYXJlbnJpZ2h0XCIsXCJhc3Rlcmlza1wiLFwicGx1c1wiLFwiY29tbWFcIixcImh5cGhlblwiLFwicGVyaW9kXCIsXCJzbGFzaFwiLFwiemVyb1wiLFwib25lXCIsXCJ0d29cIixcInRocmVlXCIsXCJmb3VyXCIsXCJmaXZlXCIsXCJzaXhcIixcInNldmVuXCIsXCJlaWdodFwiLFwibmluZVwiLFwiY29sb25cIixcInNlbWljb2xvblwiLFwibGVzc1wiLFwiZXF1YWxcIixcImdyZWF0ZXJcIixcInF1ZXN0aW9uXCIsXCJhdFwiLFwiQVwiLFwiQlwiLFwiQ1wiLFwiRFwiLFwiRVwiLFwiRlwiLFwiR1wiLFwiSFwiLFwiSVwiLFwiSlwiLFwiS1wiLFwiTFwiLFwiTVwiLFwiTlwiLFwiT1wiLFwiUFwiLFwiUVwiLFwiUlwiLFwiU1wiLFwiVFwiLFwiVVwiLFwiVlwiLFwiV1wiLFwiWFwiLFwiWVwiLFwiWlwiLFwiYnJhY2tldGxlZnRcIixcImJhY2tzbGFzaFwiLFwiYnJhY2tldHJpZ2h0XCIsXCJhc2NpaWNpcmN1bVwiLFwidW5kZXJzY29yZVwiLFwicXVvdGVsZWZ0XCIsXCJhXCIsXCJiXCIsXCJjXCIsXCJkXCIsXCJlXCIsXCJmXCIsXCJnXCIsXCJoXCIsXCJpXCIsXCJqXCIsXCJrXCIsXCJsXCIsXCJtXCIsXCJuXCIsXCJvXCIsXCJwXCIsXCJxXCIsXCJyXCIsXCJzXCIsXCJ0XCIsXCJ1XCIsXCJ2XCIsXCJ3XCIsXCJ4XCIsXCJ5XCIsXCJ6XCIsXCJicmFjZWxlZnRcIixcImJhclwiLFwiYnJhY2VyaWdodFwiLFwiYXNjaWl0aWxkZVwiLFwiZXhjbGFtZG93blwiLFwiY2VudFwiLFwic3RlcmxpbmdcIixcImZyYWN0aW9uXCIsXCJ5ZW5cIixcImZsb3JpblwiLFwic2VjdGlvblwiLFwiY3VycmVuY3lcIixcInF1b3Rlc2luZ2xlXCIsXCJxdW90ZWRibGxlZnRcIixcImd1aWxsZW1vdGxlZnRcIixcImd1aWxzaW5nbGxlZnRcIixcImd1aWxzaW5nbHJpZ2h0XCIsXCJmaVwiLFwiZmxcIixcImVuZGFzaFwiLFwiZGFnZ2VyXCIsXCJkYWdnZXJkYmxcIixcInBlcmlvZGNlbnRlcmVkXCIsXCJwYXJhZ3JhcGhcIixcImJ1bGxldFwiLFwicXVvdGVzaW5nbGJhc2VcIixcInF1b3RlZGJsYmFzZVwiLFwicXVvdGVkYmxyaWdodFwiLFwiZ3VpbGxlbW90cmlnaHRcIixcImVsbGlwc2lzXCIsXCJwZXJ0aG91c2FuZFwiLFwicXVlc3Rpb25kb3duXCIsXCJncmF2ZVwiLFwiYWN1dGVcIixcImNpcmN1bWZsZXhcIixcInRpbGRlXCIsXCJtYWNyb25cIixcImJyZXZlXCIsXCJkb3RhY2NlbnRcIixcImRpZXJlc2lzXCIsXCJyaW5nXCIsXCJjZWRpbGxhXCIsXCJodW5nYXJ1bWxhdXRcIixcIm9nb25la1wiLFwiY2Fyb25cIixcImVtZGFzaFwiLFwiQUVcIixcIm9yZGZlbWluaW5lXCIsXCJMc2xhc2hcIixcIk9zbGFzaFwiLFwiT0VcIixcIm9yZG1hc2N1bGluZVwiLFwiYWVcIixcImRvdGxlc3NpXCIsXCJsc2xhc2hcIixcIm9zbGFzaFwiLFwib2VcIixcImdlcm1hbmRibHNcIixcIm9uZXN1cGVyaW9yXCIsXCJsb2dpY2Fsbm90XCIsXCJtdVwiLFwidHJhZGVtYXJrXCIsXCJFdGhcIixcIm9uZWhhbGZcIixcInBsdXNtaW51c1wiLFwiVGhvcm5cIixcIm9uZXF1YXJ0ZXJcIixcImRpdmlkZVwiLFwiYnJva2VuYmFyXCIsXCJkZWdyZWVcIixcInRob3JuXCIsXCJ0aHJlZXF1YXJ0ZXJzXCIsXCJ0d29zdXBlcmlvclwiLFwicmVnaXN0ZXJlZFwiLFwibWludXNcIixcImV0aFwiLFwibXVsdGlwbHlcIixcInRocmVlc3VwZXJpb3JcIixcImNvcHlyaWdodFwiLFwiQWFjdXRlXCIsXCJBY2lyY3VtZmxleFwiLFwiQWRpZXJlc2lzXCIsXCJBZ3JhdmVcIixcIkFyaW5nXCIsXCJBdGlsZGVcIixcIkNjZWRpbGxhXCIsXCJFYWN1dGVcIixcIkVjaXJjdW1mbGV4XCIsXCJFZGllcmVzaXNcIixcIkVncmF2ZVwiLFwiSWFjdXRlXCIsXCJJY2lyY3VtZmxleFwiLFwiSWRpZXJlc2lzXCIsXCJJZ3JhdmVcIixcIk50aWxkZVwiLFwiT2FjdXRlXCIsXCJPY2lyY3VtZmxleFwiLFwiT2RpZXJlc2lzXCIsXCJPZ3JhdmVcIixcIk90aWxkZVwiLFwiU2Nhcm9uXCIsXCJVYWN1dGVcIixcIlVjaXJjdW1mbGV4XCIsXCJVZGllcmVzaXNcIixcIlVncmF2ZVwiLFwiWWFjdXRlXCIsXCJZZGllcmVzaXNcIixcIlpjYXJvblwiLFwiYWFjdXRlXCIsXCJhY2lyY3VtZmxleFwiLFwiYWRpZXJlc2lzXCIsXCJhZ3JhdmVcIixcImFyaW5nXCIsXCJhdGlsZGVcIixcImNjZWRpbGxhXCIsXCJlYWN1dGVcIixcImVjaXJjdW1mbGV4XCIsXCJlZGllcmVzaXNcIixcImVncmF2ZVwiLFwiaWFjdXRlXCIsXCJpY2lyY3VtZmxleFwiLFwiaWRpZXJlc2lzXCIsXCJpZ3JhdmVcIixcIm50aWxkZVwiLFwib2FjdXRlXCIsXCJvY2lyY3VtZmxleFwiLFwib2RpZXJlc2lzXCIsXCJvZ3JhdmVcIixcIm90aWxkZVwiLFwic2Nhcm9uXCIsXCJ1YWN1dGVcIixcInVjaXJjdW1mbGV4XCIsXCJ1ZGllcmVzaXNcIixcInVncmF2ZVwiLFwieWFjdXRlXCIsXCJ5ZGllcmVzaXNcIixcInpjYXJvblwiLFwiZXhjbGFtc21hbGxcIixcIkh1bmdhcnVtbGF1dHNtYWxsXCIsXCJkb2xsYXJvbGRzdHlsZVwiLFwiZG9sbGFyc3VwZXJpb3JcIixcImFtcGVyc2FuZHNtYWxsXCIsXCJBY3V0ZXNtYWxsXCIsXCJwYXJlbmxlZnRzdXBlcmlvclwiLFwicGFyZW5yaWdodHN1cGVyaW9yXCIsXCIyNjYgZmZcIixcIm9uZWRvdGVubGVhZGVyXCIsXCJ6ZXJvb2xkc3R5bGVcIixcIm9uZW9sZHN0eWxlXCIsXCJ0d29vbGRzdHlsZVwiLFwidGhyZWVvbGRzdHlsZVwiLFwiZm91cm9sZHN0eWxlXCIsXCJmaXZlb2xkc3R5bGVcIixcInNpeG9sZHN0eWxlXCIsXCJzZXZlbm9sZHN0eWxlXCIsXCJlaWdodG9sZHN0eWxlXCIsXCJuaW5lb2xkc3R5bGVcIixcImNvbW1hc3VwZXJpb3JcIixcInRocmVlcXVhcnRlcnNlbWRhc2hcIixcInBlcmlvZHN1cGVyaW9yXCIsXCJxdWVzdGlvbnNtYWxsXCIsXCJhc3VwZXJpb3JcIixcImJzdXBlcmlvclwiLFwiY2VudHN1cGVyaW9yXCIsXCJkc3VwZXJpb3JcIixcImVzdXBlcmlvclwiLFwiaXN1cGVyaW9yXCIsXCJsc3VwZXJpb3JcIixcIm1zdXBlcmlvclwiLFwibnN1cGVyaW9yXCIsXCJvc3VwZXJpb3JcIixcInJzdXBlcmlvclwiLFwic3N1cGVyaW9yXCIsXCJ0c3VwZXJpb3JcIixcImZmXCIsXCJmZmlcIixcImZmbFwiLFwicGFyZW5sZWZ0aW5mZXJpb3JcIixcInBhcmVucmlnaHRpbmZlcmlvclwiLFwiQ2lyY3VtZmxleHNtYWxsXCIsXCJoeXBoZW5zdXBlcmlvclwiLFwiR3JhdmVzbWFsbFwiLFwiQXNtYWxsXCIsXCJCc21hbGxcIixcIkNzbWFsbFwiLFwiRHNtYWxsXCIsXCJFc21hbGxcIixcIkZzbWFsbFwiLFwiR3NtYWxsXCIsXCJIc21hbGxcIixcIklzbWFsbFwiLFwiSnNtYWxsXCIsXCJLc21hbGxcIixcIkxzbWFsbFwiLFwiTXNtYWxsXCIsXCJOc21hbGxcIixcIk9zbWFsbFwiLFwiUHNtYWxsXCIsXCJRc21hbGxcIixcIlJzbWFsbFwiLFwiU3NtYWxsXCIsXCJUc21hbGxcIixcIlVzbWFsbFwiLFwiVnNtYWxsXCIsXCJXc21hbGxcIixcIlhzbWFsbFwiLFwiWXNtYWxsXCIsXCJac21hbGxcIixcImNvbG9ubW9uZXRhcnlcIixcIm9uZWZpdHRlZFwiLFwicnVwaWFoXCIsXCJUaWxkZXNtYWxsXCIsXCJleGNsYW1kb3duc21hbGxcIixcImNlbnRvbGRzdHlsZVwiLFwiTHNsYXNoc21hbGxcIixcIlNjYXJvbnNtYWxsXCIsXCJaY2Fyb25zbWFsbFwiLFwiRGllcmVzaXNzbWFsbFwiLFwiQnJldmVzbWFsbFwiLFwiQ2Fyb25zbWFsbFwiLFwiRG90YWNjZW50c21hbGxcIixcIk1hY3JvbnNtYWxsXCIsXCJmaWd1cmVkYXNoXCIsXCJoeXBoZW5pbmZlcmlvclwiLFwiT2dvbmVrc21hbGxcIixcIlJpbmdzbWFsbFwiLFwiQ2VkaWxsYXNtYWxsXCIsXCJxdWVzdGlvbmRvd25zbWFsbFwiLFwib25lZWlnaHRoXCIsXCJ0aHJlZWVpZ2h0aHNcIixcImZpdmVlaWdodGhzXCIsXCJzZXZlbmVpZ2h0aHNcIixcIm9uZXRoaXJkXCIsXCJ0d290aGlyZHNcIixcInplcm9zdXBlcmlvclwiLFwiZm91cnN1cGVyaW9yXCIsXCJmaXZlc3VwZXJpb3JcIixcInNpeHN1cGVyaW9yXCIsXCJzZXZlbnN1cGVyaW9yXCIsXCJlaWdodHN1cGVyaW9yXCIsXCJuaW5lc3VwZXJpb3JcIixcInplcm9pbmZlcmlvclwiLFwib25laW5mZXJpb3JcIixcInR3b2luZmVyaW9yXCIsXCJ0aHJlZWluZmVyaW9yXCIsXCJmb3VyaW5mZXJpb3JcIixcImZpdmVpbmZlcmlvclwiLFwic2l4aW5mZXJpb3JcIixcInNldmVuaW5mZXJpb3JcIixcImVpZ2h0aW5mZXJpb3JcIixcIm5pbmVpbmZlcmlvclwiLFwiY2VudGluZmVyaW9yXCIsXCJkb2xsYXJpbmZlcmlvclwiLFwicGVyaW9kaW5mZXJpb3JcIixcImNvbW1haW5mZXJpb3JcIixcIkFncmF2ZXNtYWxsXCIsXCJBYWN1dGVzbWFsbFwiLFwiQWNpcmN1bWZsZXhzbWFsbFwiLFwiQXRpbGRlc21hbGxcIixcIkFkaWVyZXNpc3NtYWxsXCIsXCJBcmluZ3NtYWxsXCIsXCJBRXNtYWxsXCIsXCJDY2VkaWxsYXNtYWxsXCIsXCJFZ3JhdmVzbWFsbFwiLFwiRWFjdXRlc21hbGxcIixcIkVjaXJjdW1mbGV4c21hbGxcIixcIkVkaWVyZXNpc3NtYWxsXCIsXCJJZ3JhdmVzbWFsbFwiLFwiSWFjdXRlc21hbGxcIixcIkljaXJjdW1mbGV4c21hbGxcIixcIklkaWVyZXNpc3NtYWxsXCIsXCJFdGhzbWFsbFwiLFwiTnRpbGRlc21hbGxcIixcIk9ncmF2ZXNtYWxsXCIsXCJPYWN1dGVzbWFsbFwiLFwiT2NpcmN1bWZsZXhzbWFsbFwiLFwiT3RpbGRlc21hbGxcIixcIk9kaWVyZXNpc3NtYWxsXCIsXCJPRXNtYWxsXCIsXCJPc2xhc2hzbWFsbFwiLFwiVWdyYXZlc21hbGxcIixcIlVhY3V0ZXNtYWxsXCIsXCJVY2lyY3VtZmxleHNtYWxsXCIsXCJVZGllcmVzaXNzbWFsbFwiLFwiWWFjdXRlc21hbGxcIixcIlRob3Juc21hbGxcIixcIllkaWVyZXNpc3NtYWxsXCIsXCIwMDEuMDAwXCIsXCIwMDEuMDAxXCIsXCIwMDEuMDAyXCIsXCIwMDEuMDAzXCIsXCJCbGFja1wiLFwiQm9sZFwiLFwiQm9va1wiLFwiTGlnaHRcIixcIk1lZGl1bVwiLFwiUmVndWxhclwiLFwiUm9tYW5cIixcIlNlbWlib2xkXCJdLHVlPVtcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJzcGFjZVwiLFwiZXhjbGFtXCIsXCJxdW90ZWRibFwiLFwibnVtYmVyc2lnblwiLFwiZG9sbGFyXCIsXCJwZXJjZW50XCIsXCJhbXBlcnNhbmRcIixcInF1b3RlcmlnaHRcIixcInBhcmVubGVmdFwiLFwicGFyZW5yaWdodFwiLFwiYXN0ZXJpc2tcIixcInBsdXNcIixcImNvbW1hXCIsXCJoeXBoZW5cIixcInBlcmlvZFwiLFwic2xhc2hcIixcInplcm9cIixcIm9uZVwiLFwidHdvXCIsXCJ0aHJlZVwiLFwiZm91clwiLFwiZml2ZVwiLFwic2l4XCIsXCJzZXZlblwiLFwiZWlnaHRcIixcIm5pbmVcIixcImNvbG9uXCIsXCJzZW1pY29sb25cIixcImxlc3NcIixcImVxdWFsXCIsXCJncmVhdGVyXCIsXCJxdWVzdGlvblwiLFwiYXRcIixcIkFcIixcIkJcIixcIkNcIixcIkRcIixcIkVcIixcIkZcIixcIkdcIixcIkhcIixcIklcIixcIkpcIixcIktcIixcIkxcIixcIk1cIixcIk5cIixcIk9cIixcIlBcIixcIlFcIixcIlJcIixcIlNcIixcIlRcIixcIlVcIixcIlZcIixcIldcIixcIlhcIixcIllcIixcIlpcIixcImJyYWNrZXRsZWZ0XCIsXCJiYWNrc2xhc2hcIixcImJyYWNrZXRyaWdodFwiLFwiYXNjaWljaXJjdW1cIixcInVuZGVyc2NvcmVcIixcInF1b3RlbGVmdFwiLFwiYVwiLFwiYlwiLFwiY1wiLFwiZFwiLFwiZVwiLFwiZlwiLFwiZ1wiLFwiaFwiLFwiaVwiLFwialwiLFwia1wiLFwibFwiLFwibVwiLFwiblwiLFwib1wiLFwicFwiLFwicVwiLFwiclwiLFwic1wiLFwidFwiLFwidVwiLFwidlwiLFwid1wiLFwieFwiLFwieVwiLFwielwiLFwiYnJhY2VsZWZ0XCIsXCJiYXJcIixcImJyYWNlcmlnaHRcIixcImFzY2lpdGlsZGVcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiZXhjbGFtZG93blwiLFwiY2VudFwiLFwic3RlcmxpbmdcIixcImZyYWN0aW9uXCIsXCJ5ZW5cIixcImZsb3JpblwiLFwic2VjdGlvblwiLFwiY3VycmVuY3lcIixcInF1b3Rlc2luZ2xlXCIsXCJxdW90ZWRibGxlZnRcIixcImd1aWxsZW1vdGxlZnRcIixcImd1aWxzaW5nbGxlZnRcIixcImd1aWxzaW5nbHJpZ2h0XCIsXCJmaVwiLFwiZmxcIixcIlwiLFwiZW5kYXNoXCIsXCJkYWdnZXJcIixcImRhZ2dlcmRibFwiLFwicGVyaW9kY2VudGVyZWRcIixcIlwiLFwicGFyYWdyYXBoXCIsXCJidWxsZXRcIixcInF1b3Rlc2luZ2xiYXNlXCIsXCJxdW90ZWRibGJhc2VcIixcInF1b3RlZGJscmlnaHRcIixcImd1aWxsZW1vdHJpZ2h0XCIsXCJlbGxpcHNpc1wiLFwicGVydGhvdXNhbmRcIixcIlwiLFwicXVlc3Rpb25kb3duXCIsXCJcIixcImdyYXZlXCIsXCJhY3V0ZVwiLFwiY2lyY3VtZmxleFwiLFwidGlsZGVcIixcIm1hY3JvblwiLFwiYnJldmVcIixcImRvdGFjY2VudFwiLFwiZGllcmVzaXNcIixcIlwiLFwicmluZ1wiLFwiY2VkaWxsYVwiLFwiXCIsXCJodW5nYXJ1bWxhdXRcIixcIm9nb25la1wiLFwiY2Fyb25cIixcImVtZGFzaFwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJBRVwiLFwiXCIsXCJvcmRmZW1pbmluZVwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJMc2xhc2hcIixcIk9zbGFzaFwiLFwiT0VcIixcIm9yZG1hc2N1bGluZVwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcImFlXCIsXCJcIixcIlwiLFwiXCIsXCJkb3RsZXNzaVwiLFwiXCIsXCJcIixcImxzbGFzaFwiLFwib3NsYXNoXCIsXCJvZVwiLFwiZ2VybWFuZGJsc1wiXSxjZT1bXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwic3BhY2VcIixcImV4Y2xhbXNtYWxsXCIsXCJIdW5nYXJ1bWxhdXRzbWFsbFwiLFwiXCIsXCJkb2xsYXJvbGRzdHlsZVwiLFwiZG9sbGFyc3VwZXJpb3JcIixcImFtcGVyc2FuZHNtYWxsXCIsXCJBY3V0ZXNtYWxsXCIsXCJwYXJlbmxlZnRzdXBlcmlvclwiLFwicGFyZW5yaWdodHN1cGVyaW9yXCIsXCJ0d29kb3RlbmxlYWRlclwiLFwib25lZG90ZW5sZWFkZXJcIixcImNvbW1hXCIsXCJoeXBoZW5cIixcInBlcmlvZFwiLFwiZnJhY3Rpb25cIixcInplcm9vbGRzdHlsZVwiLFwib25lb2xkc3R5bGVcIixcInR3b29sZHN0eWxlXCIsXCJ0aHJlZW9sZHN0eWxlXCIsXCJmb3Vyb2xkc3R5bGVcIixcImZpdmVvbGRzdHlsZVwiLFwic2l4b2xkc3R5bGVcIixcInNldmVub2xkc3R5bGVcIixcImVpZ2h0b2xkc3R5bGVcIixcIm5pbmVvbGRzdHlsZVwiLFwiY29sb25cIixcInNlbWljb2xvblwiLFwiY29tbWFzdXBlcmlvclwiLFwidGhyZWVxdWFydGVyc2VtZGFzaFwiLFwicGVyaW9kc3VwZXJpb3JcIixcInF1ZXN0aW9uc21hbGxcIixcIlwiLFwiYXN1cGVyaW9yXCIsXCJic3VwZXJpb3JcIixcImNlbnRzdXBlcmlvclwiLFwiZHN1cGVyaW9yXCIsXCJlc3VwZXJpb3JcIixcIlwiLFwiXCIsXCJpc3VwZXJpb3JcIixcIlwiLFwiXCIsXCJsc3VwZXJpb3JcIixcIm1zdXBlcmlvclwiLFwibnN1cGVyaW9yXCIsXCJvc3VwZXJpb3JcIixcIlwiLFwiXCIsXCJyc3VwZXJpb3JcIixcInNzdXBlcmlvclwiLFwidHN1cGVyaW9yXCIsXCJcIixcImZmXCIsXCJmaVwiLFwiZmxcIixcImZmaVwiLFwiZmZsXCIsXCJwYXJlbmxlZnRpbmZlcmlvclwiLFwiXCIsXCJwYXJlbnJpZ2h0aW5mZXJpb3JcIixcIkNpcmN1bWZsZXhzbWFsbFwiLFwiaHlwaGVuc3VwZXJpb3JcIixcIkdyYXZlc21hbGxcIixcIkFzbWFsbFwiLFwiQnNtYWxsXCIsXCJDc21hbGxcIixcIkRzbWFsbFwiLFwiRXNtYWxsXCIsXCJGc21hbGxcIixcIkdzbWFsbFwiLFwiSHNtYWxsXCIsXCJJc21hbGxcIixcIkpzbWFsbFwiLFwiS3NtYWxsXCIsXCJMc21hbGxcIixcIk1zbWFsbFwiLFwiTnNtYWxsXCIsXCJPc21hbGxcIixcIlBzbWFsbFwiLFwiUXNtYWxsXCIsXCJSc21hbGxcIixcIlNzbWFsbFwiLFwiVHNtYWxsXCIsXCJVc21hbGxcIixcIlZzbWFsbFwiLFwiV3NtYWxsXCIsXCJYc21hbGxcIixcIllzbWFsbFwiLFwiWnNtYWxsXCIsXCJjb2xvbm1vbmV0YXJ5XCIsXCJvbmVmaXR0ZWRcIixcInJ1cGlhaFwiLFwiVGlsZGVzbWFsbFwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJleGNsYW1kb3duc21hbGxcIixcImNlbnRvbGRzdHlsZVwiLFwiTHNsYXNoc21hbGxcIixcIlwiLFwiXCIsXCJTY2Fyb25zbWFsbFwiLFwiWmNhcm9uc21hbGxcIixcIkRpZXJlc2lzc21hbGxcIixcIkJyZXZlc21hbGxcIixcIkNhcm9uc21hbGxcIixcIlwiLFwiRG90YWNjZW50c21hbGxcIixcIlwiLFwiXCIsXCJNYWNyb25zbWFsbFwiLFwiXCIsXCJcIixcImZpZ3VyZWRhc2hcIixcImh5cGhlbmluZmVyaW9yXCIsXCJcIixcIlwiLFwiT2dvbmVrc21hbGxcIixcIlJpbmdzbWFsbFwiLFwiQ2VkaWxsYXNtYWxsXCIsXCJcIixcIlwiLFwiXCIsXCJvbmVxdWFydGVyXCIsXCJvbmVoYWxmXCIsXCJ0aHJlZXF1YXJ0ZXJzXCIsXCJxdWVzdGlvbmRvd25zbWFsbFwiLFwib25lZWlnaHRoXCIsXCJ0aHJlZWVpZ2h0aHNcIixcImZpdmVlaWdodGhzXCIsXCJzZXZlbmVpZ2h0aHNcIixcIm9uZXRoaXJkXCIsXCJ0d290aGlyZHNcIixcIlwiLFwiXCIsXCJ6ZXJvc3VwZXJpb3JcIixcIm9uZXN1cGVyaW9yXCIsXCJ0d29zdXBlcmlvclwiLFwidGhyZWVzdXBlcmlvclwiLFwiZm91cnN1cGVyaW9yXCIsXCJmaXZlc3VwZXJpb3JcIixcInNpeHN1cGVyaW9yXCIsXCJzZXZlbnN1cGVyaW9yXCIsXCJlaWdodHN1cGVyaW9yXCIsXCJuaW5lc3VwZXJpb3JcIixcInplcm9pbmZlcmlvclwiLFwib25laW5mZXJpb3JcIixcInR3b2luZmVyaW9yXCIsXCJ0aHJlZWluZmVyaW9yXCIsXCJmb3VyaW5mZXJpb3JcIixcImZpdmVpbmZlcmlvclwiLFwic2l4aW5mZXJpb3JcIixcInNldmVuaW5mZXJpb3JcIixcImVpZ2h0aW5mZXJpb3JcIixcIm5pbmVpbmZlcmlvclwiLFwiY2VudGluZmVyaW9yXCIsXCJkb2xsYXJpbmZlcmlvclwiLFwicGVyaW9kaW5mZXJpb3JcIixcImNvbW1haW5mZXJpb3JcIixcIkFncmF2ZXNtYWxsXCIsXCJBYWN1dGVzbWFsbFwiLFwiQWNpcmN1bWZsZXhzbWFsbFwiLFwiQXRpbGRlc21hbGxcIixcIkFkaWVyZXNpc3NtYWxsXCIsXCJBcmluZ3NtYWxsXCIsXCJBRXNtYWxsXCIsXCJDY2VkaWxsYXNtYWxsXCIsXCJFZ3JhdmVzbWFsbFwiLFwiRWFjdXRlc21hbGxcIixcIkVjaXJjdW1mbGV4c21hbGxcIixcIkVkaWVyZXNpc3NtYWxsXCIsXCJJZ3JhdmVzbWFsbFwiLFwiSWFjdXRlc21hbGxcIixcIkljaXJjdW1mbGV4c21hbGxcIixcIklkaWVyZXNpc3NtYWxsXCIsXCJFdGhzbWFsbFwiLFwiTnRpbGRlc21hbGxcIixcIk9ncmF2ZXNtYWxsXCIsXCJPYWN1dGVzbWFsbFwiLFwiT2NpcmN1bWZsZXhzbWFsbFwiLFwiT3RpbGRlc21hbGxcIixcIk9kaWVyZXNpc3NtYWxsXCIsXCJPRXNtYWxsXCIsXCJPc2xhc2hzbWFsbFwiLFwiVWdyYXZlc21hbGxcIixcIlVhY3V0ZXNtYWxsXCIsXCJVY2lyY3VtZmxleHNtYWxsXCIsXCJVZGllcmVzaXNzbWFsbFwiLFwiWWFjdXRlc21hbGxcIixcIlRob3Juc21hbGxcIixcIllkaWVyZXNpc3NtYWxsXCJdLGRlPVtcIi5ub3RkZWZcIixcIi5udWxsXCIsXCJub25tYXJraW5ncmV0dXJuXCIsXCJzcGFjZVwiLFwiZXhjbGFtXCIsXCJxdW90ZWRibFwiLFwibnVtYmVyc2lnblwiLFwiZG9sbGFyXCIsXCJwZXJjZW50XCIsXCJhbXBlcnNhbmRcIixcInF1b3Rlc2luZ2xlXCIsXCJwYXJlbmxlZnRcIixcInBhcmVucmlnaHRcIixcImFzdGVyaXNrXCIsXCJwbHVzXCIsXCJjb21tYVwiLFwiaHlwaGVuXCIsXCJwZXJpb2RcIixcInNsYXNoXCIsXCJ6ZXJvXCIsXCJvbmVcIixcInR3b1wiLFwidGhyZWVcIixcImZvdXJcIixcImZpdmVcIixcInNpeFwiLFwic2V2ZW5cIixcImVpZ2h0XCIsXCJuaW5lXCIsXCJjb2xvblwiLFwic2VtaWNvbG9uXCIsXCJsZXNzXCIsXCJlcXVhbFwiLFwiZ3JlYXRlclwiLFwicXVlc3Rpb25cIixcImF0XCIsXCJBXCIsXCJCXCIsXCJDXCIsXCJEXCIsXCJFXCIsXCJGXCIsXCJHXCIsXCJIXCIsXCJJXCIsXCJKXCIsXCJLXCIsXCJMXCIsXCJNXCIsXCJOXCIsXCJPXCIsXCJQXCIsXCJRXCIsXCJSXCIsXCJTXCIsXCJUXCIsXCJVXCIsXCJWXCIsXCJXXCIsXCJYXCIsXCJZXCIsXCJaXCIsXCJicmFja2V0bGVmdFwiLFwiYmFja3NsYXNoXCIsXCJicmFja2V0cmlnaHRcIixcImFzY2lpY2lyY3VtXCIsXCJ1bmRlcnNjb3JlXCIsXCJncmF2ZVwiLFwiYVwiLFwiYlwiLFwiY1wiLFwiZFwiLFwiZVwiLFwiZlwiLFwiZ1wiLFwiaFwiLFwiaVwiLFwialwiLFwia1wiLFwibFwiLFwibVwiLFwiblwiLFwib1wiLFwicFwiLFwicVwiLFwiclwiLFwic1wiLFwidFwiLFwidVwiLFwidlwiLFwid1wiLFwieFwiLFwieVwiLFwielwiLFwiYnJhY2VsZWZ0XCIsXCJiYXJcIixcImJyYWNlcmlnaHRcIixcImFzY2lpdGlsZGVcIixcIkFkaWVyZXNpc1wiLFwiQXJpbmdcIixcIkNjZWRpbGxhXCIsXCJFYWN1dGVcIixcIk50aWxkZVwiLFwiT2RpZXJlc2lzXCIsXCJVZGllcmVzaXNcIixcImFhY3V0ZVwiLFwiYWdyYXZlXCIsXCJhY2lyY3VtZmxleFwiLFwiYWRpZXJlc2lzXCIsXCJhdGlsZGVcIixcImFyaW5nXCIsXCJjY2VkaWxsYVwiLFwiZWFjdXRlXCIsXCJlZ3JhdmVcIixcImVjaXJjdW1mbGV4XCIsXCJlZGllcmVzaXNcIixcImlhY3V0ZVwiLFwiaWdyYXZlXCIsXCJpY2lyY3VtZmxleFwiLFwiaWRpZXJlc2lzXCIsXCJudGlsZGVcIixcIm9hY3V0ZVwiLFwib2dyYXZlXCIsXCJvY2lyY3VtZmxleFwiLFwib2RpZXJlc2lzXCIsXCJvdGlsZGVcIixcInVhY3V0ZVwiLFwidWdyYXZlXCIsXCJ1Y2lyY3VtZmxleFwiLFwidWRpZXJlc2lzXCIsXCJkYWdnZXJcIixcImRlZ3JlZVwiLFwiY2VudFwiLFwic3RlcmxpbmdcIixcInNlY3Rpb25cIixcImJ1bGxldFwiLFwicGFyYWdyYXBoXCIsXCJnZXJtYW5kYmxzXCIsXCJyZWdpc3RlcmVkXCIsXCJjb3B5cmlnaHRcIixcInRyYWRlbWFya1wiLFwiYWN1dGVcIixcImRpZXJlc2lzXCIsXCJub3RlcXVhbFwiLFwiQUVcIixcIk9zbGFzaFwiLFwiaW5maW5pdHlcIixcInBsdXNtaW51c1wiLFwibGVzc2VxdWFsXCIsXCJncmVhdGVyZXF1YWxcIixcInllblwiLFwibXVcIixcInBhcnRpYWxkaWZmXCIsXCJzdW1tYXRpb25cIixcInByb2R1Y3RcIixcInBpXCIsXCJpbnRlZ3JhbFwiLFwib3JkZmVtaW5pbmVcIixcIm9yZG1hc2N1bGluZVwiLFwiT21lZ2FcIixcImFlXCIsXCJvc2xhc2hcIixcInF1ZXN0aW9uZG93blwiLFwiZXhjbGFtZG93blwiLFwibG9naWNhbG5vdFwiLFwicmFkaWNhbFwiLFwiZmxvcmluXCIsXCJhcHByb3hlcXVhbFwiLFwiRGVsdGFcIixcImd1aWxsZW1vdGxlZnRcIixcImd1aWxsZW1vdHJpZ2h0XCIsXCJlbGxpcHNpc1wiLFwibm9uYnJlYWtpbmdzcGFjZVwiLFwiQWdyYXZlXCIsXCJBdGlsZGVcIixcIk90aWxkZVwiLFwiT0VcIixcIm9lXCIsXCJlbmRhc2hcIixcImVtZGFzaFwiLFwicXVvdGVkYmxsZWZ0XCIsXCJxdW90ZWRibHJpZ2h0XCIsXCJxdW90ZWxlZnRcIixcInF1b3RlcmlnaHRcIixcImRpdmlkZVwiLFwibG96ZW5nZVwiLFwieWRpZXJlc2lzXCIsXCJZZGllcmVzaXNcIixcImZyYWN0aW9uXCIsXCJjdXJyZW5jeVwiLFwiZ3VpbHNpbmdsbGVmdFwiLFwiZ3VpbHNpbmdscmlnaHRcIixcImZpXCIsXCJmbFwiLFwiZGFnZ2VyZGJsXCIsXCJwZXJpb2RjZW50ZXJlZFwiLFwicXVvdGVzaW5nbGJhc2VcIixcInF1b3RlZGJsYmFzZVwiLFwicGVydGhvdXNhbmRcIixcIkFjaXJjdW1mbGV4XCIsXCJFY2lyY3VtZmxleFwiLFwiQWFjdXRlXCIsXCJFZGllcmVzaXNcIixcIkVncmF2ZVwiLFwiSWFjdXRlXCIsXCJJY2lyY3VtZmxleFwiLFwiSWRpZXJlc2lzXCIsXCJJZ3JhdmVcIixcIk9hY3V0ZVwiLFwiT2NpcmN1bWZsZXhcIixcImFwcGxlXCIsXCJPZ3JhdmVcIixcIlVhY3V0ZVwiLFwiVWNpcmN1bWZsZXhcIixcIlVncmF2ZVwiLFwiZG90bGVzc2lcIixcImNpcmN1bWZsZXhcIixcInRpbGRlXCIsXCJtYWNyb25cIixcImJyZXZlXCIsXCJkb3RhY2NlbnRcIixcInJpbmdcIixcImNlZGlsbGFcIixcImh1bmdhcnVtbGF1dFwiLFwib2dvbmVrXCIsXCJjYXJvblwiLFwiTHNsYXNoXCIsXCJsc2xhc2hcIixcIlNjYXJvblwiLFwic2Nhcm9uXCIsXCJaY2Fyb25cIixcInpjYXJvblwiLFwiYnJva2VuYmFyXCIsXCJFdGhcIixcImV0aFwiLFwiWWFjdXRlXCIsXCJ5YWN1dGVcIixcIlRob3JuXCIsXCJ0aG9yblwiLFwibWludXNcIixcIm11bHRpcGx5XCIsXCJvbmVzdXBlcmlvclwiLFwidHdvc3VwZXJpb3JcIixcInRocmVlc3VwZXJpb3JcIixcIm9uZWhhbGZcIixcIm9uZXF1YXJ0ZXJcIixcInRocmVlcXVhcnRlcnNcIixcImZyYW5jXCIsXCJHYnJldmVcIixcImdicmV2ZVwiLFwiSWRvdGFjY2VudFwiLFwiU2NlZGlsbGFcIixcInNjZWRpbGxhXCIsXCJDYWN1dGVcIixcImNhY3V0ZVwiLFwiQ2Nhcm9uXCIsXCJjY2Fyb25cIixcImRjcm9hdFwiXTtmdW5jdGlvbiBmZShlKXt0aGlzLmZvbnQ9ZX1mdW5jdGlvbiBoZShlKXt0aGlzLmNtYXA9ZX1mdW5jdGlvbiBwZShlLHQpe3RoaXMuZW5jb2Rpbmc9ZSx0aGlzLmNoYXJzZXQ9dH1mdW5jdGlvbiB5ZShlKXtzd2l0Y2goZS52ZXJzaW9uKXtjYXNlIDE6dGhpcy5uYW1lcz1kZS5zbGljZSgpO2JyZWFrO2Nhc2UgMjp0aGlzLm5hbWVzPW5ldyBBcnJheShlLm51bWJlck9mR2x5cGhzKTtmb3IodmFyIHQ9MDt0PGUubnVtYmVyT2ZHbHlwaHM7dCsrKWUuZ2x5cGhOYW1lSW5kZXhbdF08ZGUubGVuZ3RoP3RoaXMubmFtZXNbdF09ZGVbZS5nbHlwaE5hbWVJbmRleFt0XV06dGhpcy5uYW1lc1t0XT1lLm5hbWVzW2UuZ2x5cGhOYW1lSW5kZXhbdF0tZGUubGVuZ3RoXTticmVhaztjYXNlIDIuNTp0aGlzLm5hbWVzPW5ldyBBcnJheShlLm51bWJlck9mR2x5cGhzKTtmb3IodmFyIHI9MDtyPGUubnVtYmVyT2ZHbHlwaHM7cisrKXRoaXMubmFtZXNbcl09ZGVbcitlLmdseXBoTmFtZUluZGV4W3JdXTticmVhaztjYXNlIDM6ZGVmYXVsdDp0aGlzLm5hbWVzPVtdfX1mZS5wcm90b3R5cGUuY2hhclRvR2x5cGhJbmRleD1mdW5jdGlvbihlKXt2YXIgdD1lLmNvZGVQb2ludEF0KDApLHI9dGhpcy5mb250LmdseXBocztpZihyKWZvcih2YXIgbj0wO248ci5sZW5ndGg7bis9MSlmb3IodmFyIG89ci5nZXQobiksaT0wO2k8by51bmljb2Rlcy5sZW5ndGg7aSs9MSlpZihvLnVuaWNvZGVzW2ldPT09dClyZXR1cm4gbjtyZXR1cm4gbnVsbH0saGUucHJvdG90eXBlLmNoYXJUb0dseXBoSW5kZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuY21hcC5nbHlwaEluZGV4TWFwW2UuY29kZVBvaW50QXQoMCldfHwwfSxwZS5wcm90b3R5cGUuY2hhclRvR2x5cGhJbmRleD1mdW5jdGlvbihlKXt2YXIgdD1lLmNvZGVQb2ludEF0KDApLHI9dGhpcy5lbmNvZGluZ1t0XTtyZXR1cm4gdGhpcy5jaGFyc2V0LmluZGV4T2Yocil9LHllLnByb3RvdHlwZS5uYW1lVG9HbHlwaEluZGV4PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm5hbWVzLmluZGV4T2YoZSl9LHllLnByb3RvdHlwZS5nbHlwaEluZGV4VG9OYW1lPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm5hbWVzW2VdfTt2YXIgbWU9e2xpbmU6ZnVuY3Rpb24oZSx0LHIsbixvKXtlLmJlZ2luUGF0aCgpLGUubW92ZVRvKHQsciksZS5saW5lVG8obixvKSxlLnN0cm9rZSgpfX07ZnVuY3Rpb24gZ2UoZSl7dGhpcy5iaW5kQ29uc3RydWN0b3JWYWx1ZXMoZSl9ZnVuY3Rpb24gdmUodCxlLHIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2dldDpmdW5jdGlvbigpe3JldHVybiB0LnBhdGgsdFtyXX0sc2V0OmZ1bmN0aW9uKGUpe3Rbcl09ZX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KX1mdW5jdGlvbiBiZShlLHQpe2lmKHRoaXMuZm9udD1lLHRoaXMuZ2x5cGhzPXt9LEFycmF5LmlzQXJyYXkodCkpZm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspdGhpcy5nbHlwaHNbcl09dFtyXTt0aGlzLmxlbmd0aD10JiZ0Lmxlbmd0aHx8MH1nZS5wcm90b3R5cGUuYmluZENvbnN0cnVjdG9yVmFsdWVzPWZ1bmN0aW9uKGUpe3ZhciB0LHI7dGhpcy5pbmRleD1lLmluZGV4fHwwLHRoaXMubmFtZT1lLm5hbWV8fG51bGwsdGhpcy51bmljb2RlPWUudW5pY29kZXx8dm9pZCAwLHRoaXMudW5pY29kZXM9ZS51bmljb2Rlc3x8dm9pZCAwIT09ZS51bmljb2RlP1tlLnVuaWNvZGVdOltdLGUueE1pbiYmKHRoaXMueE1pbj1lLnhNaW4pLGUueU1pbiYmKHRoaXMueU1pbj1lLnlNaW4pLGUueE1heCYmKHRoaXMueE1heD1lLnhNYXgpLGUueU1heCYmKHRoaXMueU1heD1lLnlNYXgpLGUuYWR2YW5jZVdpZHRoJiYodGhpcy5hZHZhbmNlV2lkdGg9ZS5hZHZhbmNlV2lkdGgpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicGF0aFwiLCh0PWUucGF0aCxyPXR8fG5ldyBELHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgciYmKHI9cigpKSxyfSxzZXQ6ZnVuY3Rpb24oZSl7cj1lfX0pKX0sZ2UucHJvdG90eXBlLmFkZFVuaWNvZGU9ZnVuY3Rpb24oZSl7MD09PXRoaXMudW5pY29kZXMubGVuZ3RoJiYodGhpcy51bmljb2RlPWUpLHRoaXMudW5pY29kZXMucHVzaChlKX0sZ2UucHJvdG90eXBlLmdldEJvdW5kaW5nQm94PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGF0aC5nZXRCb3VuZGluZ0JveCgpfSxnZS5wcm90b3R5cGUuZ2V0UGF0aD1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpLGE7ZT12b2lkIDAhPT1lP2U6MCx0PXZvaWQgMCE9PXQ/dDowLHI9dm9pZCAwIT09cj9yOjcyO3ZhciBzPShuPW58fHt9KS54U2NhbGUsbD1uLnlTY2FsZTtpZihuLmhpbnRpbmcmJm8mJm8uaGludGluZyYmKGE9dGhpcy5wYXRoJiZvLmhpbnRpbmcuZXhlYyh0aGlzLHIpKSxhKWk9by5oaW50aW5nLmdldENvbW1hbmRzKGEpLGU9TWF0aC5yb3VuZChlKSx0PU1hdGgucm91bmQodCkscz1sPTE7ZWxzZXtpPXRoaXMucGF0aC5jb21tYW5kczt2YXIgdT0xL3RoaXMucGF0aC51bml0c1BlckVtKnI7dm9pZCAwPT09cyYmKHM9dSksdm9pZCAwPT09bCYmKGw9dSl9Zm9yKHZhciBjPW5ldyBELGQ9MDtkPGkubGVuZ3RoO2QrPTEpe3ZhciBmPWlbZF07XCJNXCI9PT1mLnR5cGU/Yy5tb3ZlVG8oZStmLngqcyx0Ky1mLnkqbCk6XCJMXCI9PT1mLnR5cGU/Yy5saW5lVG8oZStmLngqcyx0Ky1mLnkqbCk6XCJRXCI9PT1mLnR5cGU/Yy5xdWFkcmF0aWNDdXJ2ZVRvKGUrZi54MSpzLHQrLWYueTEqbCxlK2YueCpzLHQrLWYueSpsKTpcIkNcIj09PWYudHlwZT9jLmN1cnZlVG8oZStmLngxKnMsdCstZi55MSpsLGUrZi54MipzLHQrLWYueTIqbCxlK2YueCpzLHQrLWYueSpsKTpcIlpcIj09PWYudHlwZSYmYy5jbG9zZVBhdGgoKX1yZXR1cm4gY30sZ2UucHJvdG90eXBlLmdldENvbnRvdXJzPWZ1bmN0aW9uKCl7aWYodm9pZCAwPT09dGhpcy5wb2ludHMpcmV0dXJuW107Zm9yKHZhciBlPVtdLHQ9W10scj0wO3I8dGhpcy5wb2ludHMubGVuZ3RoO3IrPTEpe3ZhciBuPXRoaXMucG9pbnRzW3JdO3QucHVzaChuKSxuLmxhc3RQb2ludE9mQ29udG91ciYmKGUucHVzaCh0KSx0PVtdKX1yZXR1cm4gTC5hcmd1bWVudCgwPT09dC5sZW5ndGgsXCJUaGVyZSBhcmUgc3RpbGwgcG9pbnRzIGxlZnQgaW4gdGhlIGN1cnJlbnQgY29udG91ci5cIiksZX0sZ2UucHJvdG90eXBlLmdldE1ldHJpY3M9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5wYXRoLmNvbW1hbmRzLHQ9W10scj1bXSxuPTA7bjxlLmxlbmd0aDtuKz0xKXt2YXIgbz1lW25dO1wiWlwiIT09by50eXBlJiYodC5wdXNoKG8ueCksci5wdXNoKG8ueSkpLFwiUVwiIT09by50eXBlJiZcIkNcIiE9PW8udHlwZXx8KHQucHVzaChvLngxKSxyLnB1c2goby55MSkpLFwiQ1wiPT09by50eXBlJiYodC5wdXNoKG8ueDIpLHIucHVzaChvLnkyKSl9dmFyIGk9e3hNaW46TWF0aC5taW4uYXBwbHkobnVsbCx0KSx5TWluOk1hdGgubWluLmFwcGx5KG51bGwscikseE1heDpNYXRoLm1heC5hcHBseShudWxsLHQpLHlNYXg6TWF0aC5tYXguYXBwbHkobnVsbCxyKSxsZWZ0U2lkZUJlYXJpbmc6dGhpcy5sZWZ0U2lkZUJlYXJpbmd9O3JldHVybiBpc0Zpbml0ZShpLnhNaW4pfHwoaS54TWluPTApLGlzRmluaXRlKGkueE1heCl8fChpLnhNYXg9dGhpcy5hZHZhbmNlV2lkdGgpLGlzRmluaXRlKGkueU1pbil8fChpLnlNaW49MCksaXNGaW5pdGUoaS55TWF4KXx8KGkueU1heD0wKSxpLnJpZ2h0U2lkZUJlYXJpbmc9dGhpcy5hZHZhbmNlV2lkdGgtaS5sZWZ0U2lkZUJlYXJpbmctKGkueE1heC1pLnhNaW4pLGl9LGdlLnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUsdCxyLG4sbyl7dGhpcy5nZXRQYXRoKHQscixuLG8pLmRyYXcoZSl9LGdlLnByb3RvdHlwZS5kcmF3UG9pbnRzPWZ1bmN0aW9uKGEsZSx0LHIpe2Z1bmN0aW9uIG4oZSx0LHIsbil7dmFyIG89MipNYXRoLlBJO2EuYmVnaW5QYXRoKCk7Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKz0xKWEubW92ZVRvKHQrZVtpXS54Km4scitlW2ldLnkqbiksYS5hcmModCtlW2ldLngqbixyK2VbaV0ueSpuLDIsMCxvLCExKTthLmNsb3NlUGF0aCgpLGEuZmlsbCgpfWU9dm9pZCAwIT09ZT9lOjAsdD12b2lkIDAhPT10P3Q6MCxyPXZvaWQgMCE9PXI/cjoyNDtmb3IodmFyIG89MS90aGlzLnBhdGgudW5pdHNQZXJFbSpyLGk9W10scz1bXSxsPXRoaXMucGF0aCx1PTA7dTxsLmNvbW1hbmRzLmxlbmd0aDt1Kz0xKXt2YXIgYz1sLmNvbW1hbmRzW3VdO3ZvaWQgMCE9PWMueCYmaS5wdXNoKHt4OmMueCx5Oi1jLnl9KSx2b2lkIDAhPT1jLngxJiZzLnB1c2goe3g6Yy54MSx5Oi1jLnkxfSksdm9pZCAwIT09Yy54MiYmcy5wdXNoKHt4OmMueDIseTotYy55Mn0pfWEuZmlsbFN0eWxlPVwiYmx1ZVwiLG4oaSxlLHQsbyksYS5maWxsU3R5bGU9XCJyZWRcIixuKHMsZSx0LG8pfSxnZS5wcm90b3R5cGUuZHJhd01ldHJpY3M9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG87dD12b2lkIDAhPT10P3Q6MCxyPXZvaWQgMCE9PXI/cjowLG49dm9pZCAwIT09bj9uOjI0LG89MS90aGlzLnBhdGgudW5pdHNQZXJFbSpuLGUubGluZVdpZHRoPTEsZS5zdHJva2VTdHlsZT1cImJsYWNrXCIsbWUubGluZShlLHQsLTFlNCx0LDFlNCksbWUubGluZShlLC0xZTQsciwxZTQscik7dmFyIGk9dGhpcy54TWlufHwwLGE9dGhpcy55TWlufHwwLHM9dGhpcy54TWF4fHwwLGw9dGhpcy55TWF4fHwwLHU9dGhpcy5hZHZhbmNlV2lkdGh8fDA7ZS5zdHJva2VTdHlsZT1cImJsdWVcIixtZS5saW5lKGUsdCtpKm8sLTFlNCx0K2kqbywxZTQpLG1lLmxpbmUoZSx0K3MqbywtMWU0LHQrcypvLDFlNCksbWUubGluZShlLC0xZTQscistYSpvLDFlNCxyKy1hKm8pLG1lLmxpbmUoZSwtMWU0LHIrLWwqbywxZTQscistbCpvKSxlLnN0cm9rZVN0eWxlPVwiZ3JlZW5cIixtZS5saW5lKGUsdCt1Km8sLTFlNCx0K3UqbywxZTQpfSxiZS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuZ2x5cGhzW2VdJiYodGhpcy5nbHlwaHNbZV09dGhpcy5nbHlwaHNbZV0oKSksdGhpcy5nbHlwaHNbZV19LGJlLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKGUsdCl7dGhpcy5nbHlwaHNbZV09dCx0aGlzLmxlbmd0aCsrfTt2YXIgX2U9e0dseXBoU2V0OmJlLGdseXBoTG9hZGVyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG5ldyBnZSh7aW5kZXg6dCxmb250OmV9KX0sdHRmR2x5cGhMb2FkZXI6ZnVuY3Rpb24ocixlLG4sbyxpLGEpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PW5ldyBnZSh7aW5kZXg6ZSxmb250OnJ9KTtyZXR1cm4gdC5wYXRoPWZ1bmN0aW9uKCl7bih0LG8saSk7dmFyIGU9YShyLmdseXBocyx0KTtyZXR1cm4gZS51bml0c1BlckVtPXIudW5pdHNQZXJFbSxlfSx2ZSh0LFwieE1pblwiLFwiX3hNaW5cIiksdmUodCxcInhNYXhcIixcIl94TWF4XCIpLHZlKHQsXCJ5TWluXCIsXCJfeU1pblwiKSx2ZSh0LFwieU1heFwiLFwiX3lNYXhcIiksdH19LGNmZkdseXBoTG9hZGVyOmZ1bmN0aW9uKHIsZSxuLG8pe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PW5ldyBnZSh7aW5kZXg6ZSxmb250OnJ9KTtyZXR1cm4gdC5wYXRoPWZ1bmN0aW9uKCl7dmFyIGU9bihyLHQsbyk7cmV0dXJuIGUudW5pdHNQZXJFbT1yLnVuaXRzUGVyRW0sZX0sdH19fTtmdW5jdGlvbiB4ZShlLHQpe2lmKGU9PT10KXJldHVybiEwO2lmKEFycmF5LmlzQXJyYXkoZSkmJkFycmF5LmlzQXJyYXkodCkpe2lmKGUubGVuZ3RoIT09dC5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKz0xKWlmKCF4ZShlW3JdLHRbcl0pKXJldHVybiExO3JldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIHdlKGUpe3JldHVybiBlLmxlbmd0aDwxMjQwPzEwNzplLmxlbmd0aDwzMzkwMD8xMTMxOjMyNzY4fWZ1bmN0aW9uIGplKGUsdCxyKXt2YXIgbixvLGk9W10sYT1bXSxzPWFlLmdldENhcmQxNihlLHQpO2lmKDAhPT1zKXt2YXIgbD1hZS5nZXRCeXRlKGUsdCsyKTtuPXQrKHMrMSkqbCsyO2Zvcih2YXIgdT10KzMsYz0wO2M8cysxO2MrPTEpaS5wdXNoKGFlLmdldE9mZnNldChlLHUsbCkpLHUrPWw7bz1uK2lbc119ZWxzZSBvPXQrMjtmb3IodmFyIGQ9MDtkPGkubGVuZ3RoLTE7ZCs9MSl7dmFyIGY9YWUuZ2V0Qnl0ZXMoZSxuK2lbZF0sbitpW2QrMV0pO3ImJihmPXIoZikpLGEucHVzaChmKX1yZXR1cm57b2JqZWN0czphLHN0YXJ0T2Zmc2V0OnQsZW5kT2Zmc2V0Om99fWZ1bmN0aW9uIFNlKGUsdCl7aWYoMjg9PT10KXJldHVybiBlLnBhcnNlQnl0ZSgpPDw4fGUucGFyc2VCeXRlKCk7aWYoMjk9PT10KXJldHVybiBlLnBhcnNlQnl0ZSgpPDwyNHxlLnBhcnNlQnl0ZSgpPDwxNnxlLnBhcnNlQnl0ZSgpPDw4fGUucGFyc2VCeXRlKCk7aWYoMzA9PT10KXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQ9XCJcIixyPVtcIjBcIixcIjFcIixcIjJcIixcIjNcIixcIjRcIixcIjVcIixcIjZcIixcIjdcIixcIjhcIixcIjlcIixcIi5cIixcIkVcIixcIkUtXCIsbnVsbCxcIi1cIl07Oyl7dmFyIG49ZS5wYXJzZUJ5dGUoKSxvPW4+PjQsaT0xNSZuO2lmKDE1PT1vKWJyZWFrO2lmKHQrPXJbb10sMTU9PWkpYnJlYWs7dCs9cltpXX1yZXR1cm4gcGFyc2VGbG9hdCh0KX0oZSk7aWYoMzI8PXQmJnQ8PTI0NilyZXR1cm4gdC0xMzk7aWYoMjQ3PD10JiZ0PD0yNTApcmV0dXJuIDI1NioodC0yNDcpK2UucGFyc2VCeXRlKCkrMTA4O2lmKDI1MTw9dCYmdDw9MjU0KXJldHVybiAyNTYqLSh0LTI1MSktZS5wYXJzZUJ5dGUoKS0xMDg7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiMCBcIit0KX1mdW5jdGlvbiBNZShlLHQscil7dD12b2lkIDAhPT10P3Q6MDt2YXIgbj1uZXcgYWUuUGFyc2VyKGUsdCksbz1bXSxpPVtdO2ZvcihyPXZvaWQgMCE9PXI/cjplLmxlbmd0aDtuLnJlbGF0aXZlT2Zmc2V0PHI7KXt2YXIgYT1uLnBhcnNlQnl0ZSgpO2E8PTIxPygxMj09PWEmJihhPTEyMDArbi5wYXJzZUJ5dGUoKSksby5wdXNoKFthLGldKSxpPVtdKTppLnB1c2goU2UobixhKSl9cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD17fSxyPTA7cjxlLmxlbmd0aDtyKz0xKXt2YXIgbj1lW3JdWzBdLG89ZVtyXVsxXSxpPXZvaWQgMDtpZihpPTE9PT1vLmxlbmd0aD9vWzBdOm8sdC5oYXNPd25Qcm9wZXJ0eShuKSYmIWlzTmFOKHRbbl0pKXRocm93IG5ldyBFcnJvcihcIk9iamVjdCBcIit0K1wiIGFscmVhZHkgaGFzIGtleSBcIituKTt0W25dPWl9cmV0dXJuIHR9KG8pfWZ1bmN0aW9uIEVlKGUsdCl7cmV0dXJuIHQ9dDw9MzkwP2xlW3RdOmVbdC0zOTFdfWZ1bmN0aW9uIFRlKGUsdCxyKXtmb3IodmFyIG4sbz17fSxpPTA7aTx0Lmxlbmd0aDtpKz0xKXt2YXIgYT10W2ldO2lmKEFycmF5LmlzQXJyYXkoYS50eXBlKSl7dmFyIHM9W107cy5sZW5ndGg9YS50eXBlLmxlbmd0aDtmb3IodmFyIGw9MDtsPGEudHlwZS5sZW5ndGg7bCsrKXZvaWQgMD09PShuPXZvaWQgMCE9PWVbYS5vcF0/ZVthLm9wXVtsXTp2b2lkIDApJiYobj12b2lkIDAhPT1hLnZhbHVlJiZ2b2lkIDAhPT1hLnZhbHVlW2xdP2EudmFsdWVbbF06bnVsbCksXCJTSURcIj09PWEudHlwZVtsXSYmKG49RWUocixuKSksc1tsXT1uO29bYS5uYW1lXT1zfWVsc2Ugdm9pZCAwPT09KG49ZVthLm9wXSkmJihuPXZvaWQgMCE9PWEudmFsdWU/YS52YWx1ZTpudWxsKSxcIlNJRFwiPT09YS50eXBlJiYobj1FZShyLG4pKSxvW2EubmFtZV09bn1yZXR1cm4gb312YXIgT2U9W3tuYW1lOlwidmVyc2lvblwiLG9wOjAsdHlwZTpcIlNJRFwifSx7bmFtZTpcIm5vdGljZVwiLG9wOjEsdHlwZTpcIlNJRFwifSx7bmFtZTpcImNvcHlyaWdodFwiLG9wOjEyMDAsdHlwZTpcIlNJRFwifSx7bmFtZTpcImZ1bGxOYW1lXCIsb3A6Mix0eXBlOlwiU0lEXCJ9LHtuYW1lOlwiZmFtaWx5TmFtZVwiLG9wOjMsdHlwZTpcIlNJRFwifSx7bmFtZTpcIndlaWdodFwiLG9wOjQsdHlwZTpcIlNJRFwifSx7bmFtZTpcImlzRml4ZWRQaXRjaFwiLG9wOjEyMDEsdHlwZTpcIm51bWJlclwiLHZhbHVlOjB9LHtuYW1lOlwiaXRhbGljQW5nbGVcIixvcDoxMjAyLHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcInVuZGVybGluZVBvc2l0aW9uXCIsb3A6MTIwMyx0eXBlOlwibnVtYmVyXCIsdmFsdWU6LTEwMH0se25hbWU6XCJ1bmRlcmxpbmVUaGlja25lc3NcIixvcDoxMjA0LHR5cGU6XCJudW1iZXJcIix2YWx1ZTo1MH0se25hbWU6XCJwYWludFR5cGVcIixvcDoxMjA1LHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcImNoYXJzdHJpbmdUeXBlXCIsb3A6MTIwNix0eXBlOlwibnVtYmVyXCIsdmFsdWU6Mn0se25hbWU6XCJmb250TWF0cml4XCIsb3A6MTIwNyx0eXBlOltcInJlYWxcIixcInJlYWxcIixcInJlYWxcIixcInJlYWxcIixcInJlYWxcIixcInJlYWxcIl0sdmFsdWU6Wy4wMDEsMCwwLC4wMDEsMCwwXX0se25hbWU6XCJ1bmlxdWVJZFwiLG9wOjEzLHR5cGU6XCJudW1iZXJcIn0se25hbWU6XCJmb250QkJveFwiLG9wOjUsdHlwZTpbXCJudW1iZXJcIixcIm51bWJlclwiLFwibnVtYmVyXCIsXCJudW1iZXJcIl0sdmFsdWU6WzAsMCwwLDBdfSx7bmFtZTpcInN0cm9rZVdpZHRoXCIsb3A6MTIwOCx0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH0se25hbWU6XCJ4dWlkXCIsb3A6MTQsdHlwZTpbXSx2YWx1ZTpudWxsfSx7bmFtZTpcImNoYXJzZXRcIixvcDoxNSx0eXBlOlwib2Zmc2V0XCIsdmFsdWU6MH0se25hbWU6XCJlbmNvZGluZ1wiLG9wOjE2LHR5cGU6XCJvZmZzZXRcIix2YWx1ZTowfSx7bmFtZTpcImNoYXJTdHJpbmdzXCIsb3A6MTcsdHlwZTpcIm9mZnNldFwiLHZhbHVlOjB9LHtuYW1lOlwicHJpdmF0ZVwiLG9wOjE4LHR5cGU6W1wibnVtYmVyXCIsXCJvZmZzZXRcIl0sdmFsdWU6WzAsMF19LHtuYW1lOlwicm9zXCIsb3A6MTIzMCx0eXBlOltcIlNJRFwiLFwiU0lEXCIsXCJudW1iZXJcIl19LHtuYW1lOlwiY2lkRm9udFZlcnNpb25cIixvcDoxMjMxLHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcImNpZEZvbnRSZXZpc2lvblwiLG9wOjEyMzIsdHlwZTpcIm51bWJlclwiLHZhbHVlOjB9LHtuYW1lOlwiY2lkRm9udFR5cGVcIixvcDoxMjMzLHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcImNpZENvdW50XCIsb3A6MTIzNCx0eXBlOlwibnVtYmVyXCIsdmFsdWU6ODcyMH0se25hbWU6XCJ1aWRCYXNlXCIsb3A6MTIzNSx0eXBlOlwibnVtYmVyXCJ9LHtuYW1lOlwiZmRBcnJheVwiLG9wOjEyMzYsdHlwZTpcIm9mZnNldFwifSx7bmFtZTpcImZkU2VsZWN0XCIsb3A6MTIzNyx0eXBlOlwib2Zmc2V0XCJ9LHtuYW1lOlwiZm9udE5hbWVcIixvcDoxMjM4LHR5cGU6XCJTSURcIn1dLENlPVt7bmFtZTpcInN1YnJzXCIsb3A6MTksdHlwZTpcIm9mZnNldFwiLHZhbHVlOjB9LHtuYW1lOlwiZGVmYXVsdFdpZHRoWFwiLG9wOjIwLHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcIm5vbWluYWxXaWR0aFhcIixvcDoyMSx0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH1dO2Z1bmN0aW9uIExlKGUsdCxyLG4pe3JldHVybiBUZShNZShlLHQsciksQ2Usbil9ZnVuY3Rpb24gUGUoZSx0LHIsbil7Zm9yKHZhciBvLGksYT1bXSxzPTA7czxyLmxlbmd0aDtzKz0xKXt2YXIgbD1uZXcgRGF0YVZpZXcobmV3IFVpbnQ4QXJyYXkocltzXSkuYnVmZmVyKSx1PShpPW4sVGUoTWUobz1sLDAsby5ieXRlTGVuZ3RoKSxPZSxpKSk7dS5fc3VicnM9W10sdS5fc3VicnNCaWFzPTA7dmFyIGM9dS5wcml2YXRlWzBdLGQ9dS5wcml2YXRlWzFdO2lmKDAhPT1jJiYwIT09ZCl7dmFyIGY9TGUoZSxkK3QsYyxuKTtpZih1Ll9kZWZhdWx0V2lkdGhYPWYuZGVmYXVsdFdpZHRoWCx1Ll9ub21pbmFsV2lkdGhYPWYubm9taW5hbFdpZHRoWCwwIT09Zi5zdWJycyl7dmFyIGg9amUoZSxkK2Yuc3VicnMrdCk7dS5fc3VicnM9aC5vYmplY3RzLHUuX3N1YnJzQmlhcz13ZSh1Ll9zdWJycyl9dS5fcHJpdmF0ZURpY3Q9Zn1hLnB1c2godSl9cmV0dXJuIGF9ZnVuY3Rpb24gQWUobSxnLGUpe3ZhciB2LGIsXyx4LHcsaix0LFMsTT1uZXcgRCxFPVtdLFQ9MCxPPSExLEM9ITEsTD0wLFA9MDtpZihtLmlzQ0lERm9udCl7dmFyIHI9bS50YWJsZXMuY2ZmLnRvcERpY3QuX2ZkU2VsZWN0W2cuaW5kZXhdLG49bS50YWJsZXMuY2ZmLnRvcERpY3QuX2ZkQXJyYXlbcl07dz1uLl9zdWJycyxqPW4uX3N1YnJzQmlhcyx0PW4uX2RlZmF1bHRXaWR0aFgsUz1uLl9ub21pbmFsV2lkdGhYfWVsc2Ugdz1tLnRhYmxlcy5jZmYudG9wRGljdC5fc3VicnMsaj1tLnRhYmxlcy5jZmYudG9wRGljdC5fc3VicnNCaWFzLHQ9bS50YWJsZXMuY2ZmLnRvcERpY3QuX2RlZmF1bHRXaWR0aFgsUz1tLnRhYmxlcy5jZmYudG9wRGljdC5fbm9taW5hbFdpZHRoWDt2YXIgQT10O2Z1bmN0aW9uIGsoZSx0KXtDJiZNLmNsb3NlUGF0aCgpLE0ubW92ZVRvKGUsdCksQz0hMH1mdW5jdGlvbiBSKCl7RS5sZW5ndGglMj09MHx8T3x8KEE9RS5zaGlmdCgpK1MpLFQrPUUubGVuZ3RoPj4xLEUubGVuZ3RoPTAsTz0hMH1yZXR1cm4gZnVuY3Rpb24gZSh0KXtmb3IodmFyIHIsbixvLGksYSxzLGwsdSxjLGQsZixoLHA9MDtwPHQubGVuZ3RoOyl7dmFyIHk9dFtwXTtzd2l0Y2gocCs9MSx5KXtjYXNlIDE6Y2FzZSAzOlIoKTticmVhaztjYXNlIDQ6MTxFLmxlbmd0aCYmIU8mJihBPUUuc2hpZnQoKStTLE89ITApLFArPUUucG9wKCksayhMLFApO2JyZWFrO2Nhc2UgNTpmb3IoOzA8RS5sZW5ndGg7KUwrPUUuc2hpZnQoKSxQKz1FLnNoaWZ0KCksTS5saW5lVG8oTCxQKTticmVhaztjYXNlIDY6Zm9yKDswPEUubGVuZ3RoJiYoTCs9RS5zaGlmdCgpLE0ubGluZVRvKEwsUCksMCE9PUUubGVuZ3RoKTspUCs9RS5zaGlmdCgpLE0ubGluZVRvKEwsUCk7YnJlYWs7Y2FzZSA3OmZvcig7MDxFLmxlbmd0aCYmKFArPUUuc2hpZnQoKSxNLmxpbmVUbyhMLFApLDAhPT1FLmxlbmd0aCk7KUwrPUUuc2hpZnQoKSxNLmxpbmVUbyhMLFApO2JyZWFrO2Nhc2UgODpmb3IoOzA8RS5sZW5ndGg7KXY9TCtFLnNoaWZ0KCksYj1QK0Uuc2hpZnQoKSxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksTD1fK0Uuc2hpZnQoKSxQPXgrRS5zaGlmdCgpLE0uY3VydmVUbyh2LGIsXyx4LEwsUCk7YnJlYWs7Y2FzZSAxMDphPUUucG9wKCkraiwocz13W2FdKSYmZShzKTticmVhaztjYXNlIDExOnJldHVybjtjYXNlIDEyOnN3aXRjaCh5PXRbcF0scCs9MSx5KXtjYXNlIDM1OnY9TCtFLnNoaWZ0KCksYj1QK0Uuc2hpZnQoKSxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksbD1fK0Uuc2hpZnQoKSx1PXgrRS5zaGlmdCgpLGM9bCtFLnNoaWZ0KCksZD11K0Uuc2hpZnQoKSxmPWMrRS5zaGlmdCgpLGg9ZCtFLnNoaWZ0KCksTD1mK0Uuc2hpZnQoKSxQPWgrRS5zaGlmdCgpLEUuc2hpZnQoKSxNLmN1cnZlVG8odixiLF8seCxsLHUpLE0uY3VydmVUbyhjLGQsZixoLEwsUCk7YnJlYWs7Y2FzZSAzNDp2PUwrRS5zaGlmdCgpLGI9UCxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksbD1fK0Uuc2hpZnQoKSx1PXgsYz1sK0Uuc2hpZnQoKSxkPXgsZj1jK0Uuc2hpZnQoKSxoPVAsTD1mK0Uuc2hpZnQoKSxNLmN1cnZlVG8odixiLF8seCxsLHUpLE0uY3VydmVUbyhjLGQsZixoLEwsUCk7YnJlYWs7Y2FzZSAzNjp2PUwrRS5zaGlmdCgpLGI9UCtFLnNoaWZ0KCksXz12K0Uuc2hpZnQoKSx4PWIrRS5zaGlmdCgpLGw9XytFLnNoaWZ0KCksdT14LGM9bCtFLnNoaWZ0KCksZD14LGY9YytFLnNoaWZ0KCksaD1kK0Uuc2hpZnQoKSxMPWYrRS5zaGlmdCgpLE0uY3VydmVUbyh2LGIsXyx4LGwsdSksTS5jdXJ2ZVRvKGMsZCxmLGgsTCxQKTticmVhaztjYXNlIDM3OnY9TCtFLnNoaWZ0KCksYj1QK0Uuc2hpZnQoKSxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksbD1fK0Uuc2hpZnQoKSx1PXgrRS5zaGlmdCgpLGM9bCtFLnNoaWZ0KCksZD11K0Uuc2hpZnQoKSxmPWMrRS5zaGlmdCgpLGg9ZCtFLnNoaWZ0KCksTWF0aC5hYnMoZi1MKT5NYXRoLmFicyhoLVApP0w9ZitFLnNoaWZ0KCk6UD1oK0Uuc2hpZnQoKSxNLmN1cnZlVG8odixiLF8seCxsLHUpLE0uY3VydmVUbyhjLGQsZixoLEwsUCk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhcIkdseXBoIFwiK2cuaW5kZXgrXCI6IHVua25vd24gb3BlcmF0b3IgMTIwMFwiK3kpLEUubGVuZ3RoPTB9YnJlYWs7Y2FzZSAxNDowPEUubGVuZ3RoJiYhTyYmKEE9RS5zaGlmdCgpK1MsTz0hMCksQyYmKE0uY2xvc2VQYXRoKCksQz0hMSk7YnJlYWs7Y2FzZSAxODpSKCk7YnJlYWs7Y2FzZSAxOTpjYXNlIDIwOlIoKSxwKz1UKzc+PjM7YnJlYWs7Y2FzZSAyMToyPEUubGVuZ3RoJiYhTyYmKEE9RS5zaGlmdCgpK1MsTz0hMCksUCs9RS5wb3AoKSxrKEwrPUUucG9wKCksUCk7YnJlYWs7Y2FzZSAyMjoxPEUubGVuZ3RoJiYhTyYmKEE9RS5zaGlmdCgpK1MsTz0hMCksayhMKz1FLnBvcCgpLFApO2JyZWFrO2Nhc2UgMjM6UigpO2JyZWFrO2Nhc2UgMjQ6Zm9yKDsyPEUubGVuZ3RoOyl2PUwrRS5zaGlmdCgpLGI9UCtFLnNoaWZ0KCksXz12K0Uuc2hpZnQoKSx4PWIrRS5zaGlmdCgpLEw9XytFLnNoaWZ0KCksUD14K0Uuc2hpZnQoKSxNLmN1cnZlVG8odixiLF8seCxMLFApO0wrPUUuc2hpZnQoKSxQKz1FLnNoaWZ0KCksTS5saW5lVG8oTCxQKTticmVhaztjYXNlIDI1OmZvcig7NjxFLmxlbmd0aDspTCs9RS5zaGlmdCgpLFArPUUuc2hpZnQoKSxNLmxpbmVUbyhMLFApO3Y9TCtFLnNoaWZ0KCksYj1QK0Uuc2hpZnQoKSxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksTD1fK0Uuc2hpZnQoKSxQPXgrRS5zaGlmdCgpLE0uY3VydmVUbyh2LGIsXyx4LEwsUCk7YnJlYWs7Y2FzZSAyNjpmb3IoRS5sZW5ndGglMiYmKEwrPUUuc2hpZnQoKSk7MDxFLmxlbmd0aDspdj1MLGI9UCtFLnNoaWZ0KCksXz12K0Uuc2hpZnQoKSx4PWIrRS5zaGlmdCgpLEw9XyxQPXgrRS5zaGlmdCgpLE0uY3VydmVUbyh2LGIsXyx4LEwsUCk7YnJlYWs7Y2FzZSAyNzpmb3IoRS5sZW5ndGglMiYmKFArPUUuc2hpZnQoKSk7MDxFLmxlbmd0aDspdj1MK0Uuc2hpZnQoKSxiPVAsXz12K0Uuc2hpZnQoKSx4PWIrRS5zaGlmdCgpLEw9XytFLnNoaWZ0KCksUD14LE0uY3VydmVUbyh2LGIsXyx4LEwsUCk7YnJlYWs7Y2FzZSAyODpyPXRbcF0sbj10W3ArMV0sRS5wdXNoKChyPDwyNHxuPDwxNik+PjE2KSxwKz0yO2JyZWFrO2Nhc2UgMjk6YT1FLnBvcCgpK20uZ3N1YnJzQmlhcywocz1tLmdzdWJyc1thXSkmJmUocyk7YnJlYWs7Y2FzZSAzMDpmb3IoOzA8RS5sZW5ndGgmJih2PUwsYj1QK0Uuc2hpZnQoKSxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksTD1fK0Uuc2hpZnQoKSxQPXgrKDE9PT1FLmxlbmd0aD9FLnNoaWZ0KCk6MCksTS5jdXJ2ZVRvKHYsYixfLHgsTCxQKSwwIT09RS5sZW5ndGgpOyl2PUwrRS5zaGlmdCgpLGI9UCxfPXYrRS5zaGlmdCgpLHg9YitFLnNoaWZ0KCksUD14K0Uuc2hpZnQoKSxMPV8rKDE9PT1FLmxlbmd0aD9FLnNoaWZ0KCk6MCksTS5jdXJ2ZVRvKHYsYixfLHgsTCxQKTticmVhaztjYXNlIDMxOmZvcig7MDxFLmxlbmd0aCYmKHY9TCtFLnNoaWZ0KCksYj1QLF89ditFLnNoaWZ0KCkseD1iK0Uuc2hpZnQoKSxQPXgrRS5zaGlmdCgpLEw9XysoMT09PUUubGVuZ3RoP0Uuc2hpZnQoKTowKSxNLmN1cnZlVG8odixiLF8seCxMLFApLDAhPT1FLmxlbmd0aCk7KXY9TCxiPVArRS5zaGlmdCgpLF89ditFLnNoaWZ0KCkseD1iK0Uuc2hpZnQoKSxMPV8rRS5zaGlmdCgpLFA9eCsoMT09PUUubGVuZ3RoP0Uuc2hpZnQoKTowKSxNLmN1cnZlVG8odixiLF8seCxMLFApO2JyZWFrO2RlZmF1bHQ6eTwzMj9jb25zb2xlLmxvZyhcIkdseXBoIFwiK2cuaW5kZXgrXCI6IHVua25vd24gb3BlcmF0b3IgXCIreSk6eTwyNDc/RS5wdXNoKHktMTM5KTp5PDI1MT8ocj10W3BdLHArPTEsRS5wdXNoKDI1NiooeS0yNDcpK3IrMTA4KSk6eTwyNTU/KHI9dFtwXSxwKz0xLEUucHVzaCgyNTYqLSh5LTI1MSktci0xMDgpKToocj10W3BdLG49dFtwKzFdLG89dFtwKzJdLGk9dFtwKzNdLHArPTQsRS5wdXNoKChyPDwyNHxuPDwxNnxvPDw4fGkpLzY1NTM2KSl9fX0oZSksZy5hZHZhbmNlV2lkdGg9QSxNfWZ1bmN0aW9uIGtlKGUsdCl7dmFyIHIsbj1sZS5pbmRleE9mKGUpO3JldHVybiAwPD1uJiYocj1uKSwwPD0obj10LmluZGV4T2YoZSkpP3I9bitsZS5sZW5ndGg6KHI9bGUubGVuZ3RoK3QubGVuZ3RoLHQucHVzaChlKSkscn1mdW5jdGlvbiBSZShlLHQscil7Zm9yKHZhciBuPXt9LG89MDtvPGUubGVuZ3RoO28rPTEpe3ZhciBpPWVbb10sYT10W2kubmFtZV07dm9pZCAwPT09YXx8eGUoYSxpLnZhbHVlKXx8KFwiU0lEXCI9PT1pLnR5cGUmJihhPWtlKGEscikpLG5baS5vcF09e25hbWU6aS5uYW1lLHR5cGU6aS50eXBlLHZhbHVlOmF9KX1yZXR1cm4gbn1mdW5jdGlvbiBEZShlLHQpe3ZhciByPW5ldyBKLlJlY29yZChcIlRvcCBESUNUXCIsW3tuYW1lOlwiZGljdFwiLHR5cGU6XCJESUNUXCIsdmFsdWU6e319XSk7cmV0dXJuIHIuZGljdD1SZShPZSxlLHQpLHJ9ZnVuY3Rpb24gSWUoZSl7dmFyIHQ9bmV3IEouUmVjb3JkKFwiVG9wIERJQ1QgSU5ERVhcIixbe25hbWU6XCJ0b3BEaWN0c1wiLHR5cGU6XCJJTkRFWFwiLHZhbHVlOltdfV0pO3JldHVybiB0LnRvcERpY3RzPVt7bmFtZTpcInRvcERpY3RfMFwiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOmV9XSx0fWZ1bmN0aW9uIFVlKGUpe3ZhciB0PVtdLHI9ZS5wYXRoO3QucHVzaCh7bmFtZTpcIndpZHRoXCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOmUuYWR2YW5jZVdpZHRofSk7Zm9yKHZhciBuPTAsbz0wLGk9MDtpPHIuY29tbWFuZHMubGVuZ3RoO2krPTEpe3ZhciBhPXZvaWQgMCxzPXZvaWQgMCxsPXIuY29tbWFuZHNbaV07aWYoXCJRXCI9PT1sLnR5cGUpe2w9e3R5cGU6XCJDXCIseDpsLngseTpsLnkseDE6MS8zKm4rMi8zKmwueDEseTE6MS8zKm8rMi8zKmwueTEseDI6MS8zKmwueCsyLzMqbC54MSx5MjoxLzMqbC55KzIvMypsLnkxfX1pZihcIk1cIj09PWwudHlwZSlhPU1hdGgucm91bmQobC54LW4pLHM9TWF0aC5yb3VuZChsLnktbyksdC5wdXNoKHtuYW1lOlwiZHhcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6YX0pLHQucHVzaCh7bmFtZTpcImR5XCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOnN9KSx0LnB1c2goe25hbWU6XCJybW92ZXRvXCIsdHlwZTpcIk9QXCIsdmFsdWU6MjF9KSxuPU1hdGgucm91bmQobC54KSxvPU1hdGgucm91bmQobC55KTtlbHNlIGlmKFwiTFwiPT09bC50eXBlKWE9TWF0aC5yb3VuZChsLngtbikscz1NYXRoLnJvdW5kKGwueS1vKSx0LnB1c2goe25hbWU6XCJkeFwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTphfSksdC5wdXNoKHtuYW1lOlwiZHlcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6c30pLHQucHVzaCh7bmFtZTpcInJsaW5ldG9cIix0eXBlOlwiT1BcIix2YWx1ZTo1fSksbj1NYXRoLnJvdW5kKGwueCksbz1NYXRoLnJvdW5kKGwueSk7ZWxzZSBpZihcIkNcIj09PWwudHlwZSl7dmFyIHU9TWF0aC5yb3VuZChsLngxLW4pLGM9TWF0aC5yb3VuZChsLnkxLW8pLGQ9TWF0aC5yb3VuZChsLngyLWwueDEpLGY9TWF0aC5yb3VuZChsLnkyLWwueTEpO2E9TWF0aC5yb3VuZChsLngtbC54Mikscz1NYXRoLnJvdW5kKGwueS1sLnkyKSx0LnB1c2goe25hbWU6XCJkeDFcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6dX0pLHQucHVzaCh7bmFtZTpcImR5MVwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTpjfSksdC5wdXNoKHtuYW1lOlwiZHgyXCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOmR9KSx0LnB1c2goe25hbWU6XCJkeTJcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6Zn0pLHQucHVzaCh7bmFtZTpcImR4XCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOmF9KSx0LnB1c2goe25hbWU6XCJkeVwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTpzfSksdC5wdXNoKHtuYW1lOlwicnJjdXJ2ZXRvXCIsdHlwZTpcIk9QXCIsdmFsdWU6OH0pLG49TWF0aC5yb3VuZChsLngpLG89TWF0aC5yb3VuZChsLnkpfX1yZXR1cm4gdC5wdXNoKHtuYW1lOlwiZW5kY2hhclwiLHR5cGU6XCJPUFwiLHZhbHVlOjE0fSksdH12YXIgTmU9e3BhcnNlOmZ1bmN0aW9uKGUsdCxyKXtyLnRhYmxlcy5jZmY9e307dmFyIG4sbyxpLGE9amUoZSwobj1lLG89dCwoaT17fSkuZm9ybWF0TWFqb3I9YWUuZ2V0Q2FyZDgobixvKSxpLmZvcm1hdE1pbm9yPWFlLmdldENhcmQ4KG4sbysxKSxpLnNpemU9YWUuZ2V0Q2FyZDgobixvKzIpLGkub2Zmc2V0U2l6ZT1hZS5nZXRDYXJkOChuLG8rMyksaS5zdGFydE9mZnNldD1vLGkuZW5kT2Zmc2V0PW8rNCxpKS5lbmRPZmZzZXQsYWUuYnl0ZXNUb1N0cmluZykscz1qZShlLGEuZW5kT2Zmc2V0KSxsPWplKGUscy5lbmRPZmZzZXQsYWUuYnl0ZXNUb1N0cmluZyksdT1qZShlLGwuZW5kT2Zmc2V0KTtyLmdzdWJycz11Lm9iamVjdHMsci5nc3VicnNCaWFzPXdlKHIuZ3N1YnJzKTt2YXIgYz1QZShlLHQscy5vYmplY3RzLGwub2JqZWN0cyk7aWYoMSE9PWMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNGRiB0YWJsZSBoYXMgdG9vIG1hbnkgZm9udHMgaW4gJ0ZvbnRTZXQnIC0gY291bnQgb2YgZm9udHMgTmFtZUluZGV4Lmxlbmd0aCA9IFwiK2MubGVuZ3RoKTt2YXIgZD1jWzBdO2lmKChyLnRhYmxlcy5jZmYudG9wRGljdD1kKS5fcHJpdmF0ZURpY3QmJihyLmRlZmF1bHRXaWR0aFg9ZC5fcHJpdmF0ZURpY3QuZGVmYXVsdFdpZHRoWCxyLm5vbWluYWxXaWR0aFg9ZC5fcHJpdmF0ZURpY3Qubm9taW5hbFdpZHRoWCksdm9pZCAwIT09ZC5yb3NbMF0mJnZvaWQgMCE9PWQucm9zWzFdJiYoci5pc0NJREZvbnQ9ITApLHIuaXNDSURGb250KXt2YXIgZj1kLmZkQXJyYXksaD1kLmZkU2VsZWN0O2lmKDA9PT1mfHwwPT09aCl0aHJvdyBuZXcgRXJyb3IoXCJGb250IGlzIG1hcmtlZCBhcyBhIENJRCBmb250LCBidXQgRkRBcnJheSBhbmQvb3IgRkRTZWxlY3QgaW5mb3JtYXRpb24gaXMgbWlzc2luZ1wiKTt2YXIgcD1QZShlLHQsamUoZSxmKz10KS5vYmplY3RzLGwub2JqZWN0cyk7ZC5fZmRBcnJheT1wLGgrPXQsZC5fZmRTZWxlY3Q9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG8saT1bXSxhPW5ldyBhZS5QYXJzZXIoZSx0KSxzPWEucGFyc2VDYXJkOCgpO2lmKDA9PT1zKWZvcih2YXIgbD0wO2w8cjtsKyspe2lmKG48PShvPWEucGFyc2VDYXJkOCgpKSl0aHJvdyBuZXcgRXJyb3IoXCJDRkYgdGFibGUgQ0lEIEZvbnQgRkRTZWxlY3QgaGFzIGJhZCBGRCBpbmRleCB2YWx1ZSBcIitvK1wiIChGRCBjb3VudCBcIituK1wiKVwiKTtpLnB1c2gobyl9ZWxzZXtpZigzIT09cyl0aHJvdyBuZXcgRXJyb3IoXCJDRkYgVGFibGUgQ0lEIEZvbnQgRkRTZWxlY3QgdGFibGUgaGFzIHVuc3VwcG9ydGVkIGZvcm1hdCBcIitzKTt2YXIgdSxjPWEucGFyc2VDYXJkMTYoKSxkPWEucGFyc2VDYXJkMTYoKTtpZigwIT09ZCl0aHJvdyBuZXcgRXJyb3IoXCJDRkYgVGFibGUgQ0lEIEZvbnQgRkRTZWxlY3QgZm9ybWF0IDMgcmFuZ2UgaGFzIGJhZCBpbml0aWFsIEdJRCBcIitkKTtmb3IodmFyIGY9MDtmPGM7ZisrKXtpZihvPWEucGFyc2VDYXJkOCgpLHU9YS5wYXJzZUNhcmQxNigpLG48PW8pdGhyb3cgbmV3IEVycm9yKFwiQ0ZGIHRhYmxlIENJRCBGb250IEZEU2VsZWN0IGhhcyBiYWQgRkQgaW5kZXggdmFsdWUgXCIrbytcIiAoRkQgY291bnQgXCIrbitcIilcIik7aWYocjx1KXRocm93IG5ldyBFcnJvcihcIkNGRiBUYWJsZSBDSUQgRm9udCBGRFNlbGVjdCBmb3JtYXQgMyByYW5nZSBoYXMgYmFkIEdJRCBcIit1KTtmb3IoO2Q8dTtkKyspaS5wdXNoKG8pO2Q9dX1pZih1IT09cil0aHJvdyBuZXcgRXJyb3IoXCJDRkYgVGFibGUgQ0lEIEZvbnQgRkRTZWxlY3QgZm9ybWF0IDMgcmFuZ2UgaGFzIGJhZCBmaW5hbCBHSUQgXCIrdSl9cmV0dXJuIGl9KGUsaCxyLm51bUdseXBocyxwLmxlbmd0aCl9dmFyIHk9dCtkLnByaXZhdGVbMV0sbT1MZShlLHksZC5wcml2YXRlWzBdLGwub2JqZWN0cyk7aWYoci5kZWZhdWx0V2lkdGhYPW0uZGVmYXVsdFdpZHRoWCxyLm5vbWluYWxXaWR0aFg9bS5ub21pbmFsV2lkdGhYLDAhPT1tLnN1YnJzKXt2YXIgZz1qZShlLHkrbS5zdWJycyk7ci5zdWJycz1nLm9iamVjdHMsci5zdWJyc0JpYXM9d2Uoci5zdWJycyl9ZWxzZSByLnN1YnJzPVtdLHIuc3VicnNCaWFzPTA7dmFyIHY9amUoZSx0K2QuY2hhclN0cmluZ3MpO3IubkdseXBocz12Lm9iamVjdHMubGVuZ3RoO3ZhciBiPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvLGksYT1uZXcgYWUuUGFyc2VyKGUsdCk7LS1yO3ZhciBzPVtcIi5ub3RkZWZcIl0sbD1hLnBhcnNlQ2FyZDgoKTtpZigwPT09bClmb3IodmFyIHU9MDt1PHI7dSs9MSlvPWEucGFyc2VTSUQoKSxzLnB1c2goRWUobixvKSk7ZWxzZSBpZigxPT09bClmb3IoO3MubGVuZ3RoPD1yOyl7bz1hLnBhcnNlU0lEKCksaT1hLnBhcnNlQ2FyZDgoKTtmb3IodmFyIGM9MDtjPD1pO2MrPTEpcy5wdXNoKEVlKG4sbykpLG8rPTF9ZWxzZXtpZigyIT09bCl0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGNoYXJzZXQgZm9ybWF0IFwiK2wpO2Zvcig7cy5sZW5ndGg8PXI7KXtvPWEucGFyc2VTSUQoKSxpPWEucGFyc2VDYXJkMTYoKTtmb3IodmFyIGQ9MDtkPD1pO2QrPTEpcy5wdXNoKEVlKG4sbykpLG8rPTF9fXJldHVybiBzfShlLHQrZC5jaGFyc2V0LHIubkdseXBocyxsLm9iamVjdHMpOzA9PT1kLmVuY29kaW5nP3IuY2ZmRW5jb2Rpbmc9bmV3IHBlKHVlLGIpOjE9PT1kLmVuY29kaW5nP3IuY2ZmRW5jb2Rpbmc9bmV3IHBlKGNlLGIpOnIuY2ZmRW5jb2Rpbmc9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG89e30saT1uZXcgYWUuUGFyc2VyKGUsdCksYT1pLnBhcnNlQ2FyZDgoKTtpZigwPT09YSlmb3IodmFyIHM9aS5wYXJzZUNhcmQ4KCksbD0wO2w8cztsKz0xKW9bbj1pLnBhcnNlQ2FyZDgoKV09bDtlbHNle2lmKDEhPT1hKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2RpbmcgZm9ybWF0IFwiK2EpO3ZhciB1PWkucGFyc2VDYXJkOCgpO249MTtmb3IodmFyIGM9MDtjPHU7Yys9MSlmb3IodmFyIGQ9aS5wYXJzZUNhcmQ4KCksZj1pLnBhcnNlQ2FyZDgoKSxoPWQ7aDw9ZCtmO2grPTEpb1toXT1uLG4rPTF9cmV0dXJuIG5ldyBwZShvLHIpfShlLHQrZC5lbmNvZGluZyxiKSxyLmVuY29kaW5nPXIuZW5jb2Rpbmd8fHIuY2ZmRW5jb2Rpbmcsci5nbHlwaHM9bmV3IF9lLkdseXBoU2V0KHIpO2Zvcih2YXIgXz0wO188ci5uR2x5cGhzO18rPTEpe3ZhciB4PXYub2JqZWN0c1tfXTtyLmdseXBocy5wdXNoKF8sX2UuY2ZmR2x5cGhMb2FkZXIocixfLEFlLHgpKX19LG1ha2U6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsbj1uZXcgSi5UYWJsZShcIkNGRiBcIixbe25hbWU6XCJoZWFkZXJcIix0eXBlOlwiUkVDT1JEXCJ9LHtuYW1lOlwibmFtZUluZGV4XCIsdHlwZTpcIlJFQ09SRFwifSx7bmFtZTpcInRvcERpY3RJbmRleFwiLHR5cGU6XCJSRUNPUkRcIn0se25hbWU6XCJzdHJpbmdJbmRleFwiLHR5cGU6XCJSRUNPUkRcIn0se25hbWU6XCJnbG9iYWxTdWJySW5kZXhcIix0eXBlOlwiUkVDT1JEXCJ9LHtuYW1lOlwiY2hhcnNldHNcIix0eXBlOlwiUkVDT1JEXCJ9LHtuYW1lOlwiY2hhclN0cmluZ3NJbmRleFwiLHR5cGU6XCJSRUNPUkRcIn0se25hbWU6XCJwcml2YXRlRGljdFwiLHR5cGU6XCJSRUNPUkRcIn1dKSxvPTEvdC51bml0c1BlckVtLGk9e3ZlcnNpb246dC52ZXJzaW9uLGZ1bGxOYW1lOnQuZnVsbE5hbWUsZmFtaWx5TmFtZTp0LmZhbWlseU5hbWUsd2VpZ2h0OnQud2VpZ2h0TmFtZSxmb250QkJveDp0LmZvbnRCQm94fHxbMCwwLDAsMF0sZm9udE1hdHJpeDpbbywwLDAsbywwLDBdLGNoYXJzZXQ6OTk5LGVuY29kaW5nOjAsY2hhclN0cmluZ3M6OTk5LHByaXZhdGU6WzAsOTk5XX0sYT1bXSxzPTE7czxlLmxlbmd0aDtzKz0xKXI9ZS5nZXQocyksYS5wdXNoKHIubmFtZSk7dmFyIGw9W107bi5oZWFkZXI9bmV3IEouUmVjb3JkKFwiSGVhZGVyXCIsW3tuYW1lOlwibWFqb3JcIix0eXBlOlwiQ2FyZDhcIix2YWx1ZToxfSx7bmFtZTpcIm1pbm9yXCIsdHlwZTpcIkNhcmQ4XCIsdmFsdWU6MH0se25hbWU6XCJoZHJTaXplXCIsdHlwZTpcIkNhcmQ4XCIsdmFsdWU6NH0se25hbWU6XCJtYWpvclwiLHR5cGU6XCJDYXJkOFwiLHZhbHVlOjF9XSksbi5uYW1lSW5kZXg9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEouUmVjb3JkKFwiTmFtZSBJTkRFWFwiLFt7bmFtZTpcIm5hbWVzXCIsdHlwZTpcIklOREVYXCIsdmFsdWU6W119XSk7dC5uYW1lcz1bXTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrPTEpdC5uYW1lcy5wdXNoKHtuYW1lOlwibmFtZV9cIityLHR5cGU6XCJOQU1FXCIsdmFsdWU6ZVtyXX0pO3JldHVybiB0fShbdC5wb3N0U2NyaXB0TmFtZV0pO3ZhciB1LGMsZCxmPURlKGksbCk7bi50b3BEaWN0SW5kZXg9SWUoZiksbi5nbG9iYWxTdWJySW5kZXg9bmV3IEouUmVjb3JkKFwiR2xvYmFsIFN1YnIgSU5ERVhcIixbe25hbWU6XCJzdWJyc1wiLHR5cGU6XCJJTkRFWFwiLHZhbHVlOltdfV0pLG4uY2hhcnNldHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9bmV3IEouUmVjb3JkKFwiQ2hhcnNldHNcIixbe25hbWU6XCJmb3JtYXRcIix0eXBlOlwiQ2FyZDhcIix2YWx1ZTowfV0pLG49MDtuPGUubGVuZ3RoO24rPTEpe3ZhciBvPWtlKGVbbl0sdCk7ci5maWVsZHMucHVzaCh7bmFtZTpcImdseXBoX1wiK24sdHlwZTpcIlNJRFwiLHZhbHVlOm99KX1yZXR1cm4gcn0oYSxsKSxuLmNoYXJTdHJpbmdzSW5kZXg9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW5ldyBKLlJlY29yZChcIkNoYXJTdHJpbmdzIElOREVYXCIsW3tuYW1lOlwiY2hhclN0cmluZ3NcIix0eXBlOlwiSU5ERVhcIix2YWx1ZTpbXX1dKSxyPTA7cjxlLmxlbmd0aDtyKz0xKXt2YXIgbj1lLmdldChyKSxvPVVlKG4pO3QuY2hhclN0cmluZ3MucHVzaCh7bmFtZTpuLm5hbWUsdHlwZTpcIkNIQVJTVFJJTkdcIix2YWx1ZTpvfSl9cmV0dXJuIHR9KGUpLG4ucHJpdmF0ZURpY3Q9KHU9e30sYz1sLChkPW5ldyBKLlJlY29yZChcIlByaXZhdGUgRElDVFwiLFt7bmFtZTpcImRpY3RcIix0eXBlOlwiRElDVFwiLHZhbHVlOnt9fV0pKS5kaWN0PVJlKENlLHUsYyksZCksbi5zdHJpbmdJbmRleD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgSi5SZWNvcmQoXCJTdHJpbmcgSU5ERVhcIixbe25hbWU6XCJzdHJpbmdzXCIsdHlwZTpcIklOREVYXCIsdmFsdWU6W119XSk7dC5zdHJpbmdzPVtdO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cis9MSl0LnN0cmluZ3MucHVzaCh7bmFtZTpcInN0cmluZ19cIityLHR5cGU6XCJTVFJJTkdcIix2YWx1ZTplW3JdfSk7cmV0dXJuIHR9KGwpO3ZhciBoPW4uaGVhZGVyLnNpemVPZigpK24ubmFtZUluZGV4LnNpemVPZigpK24udG9wRGljdEluZGV4LnNpemVPZigpK24uc3RyaW5nSW5kZXguc2l6ZU9mKCkrbi5nbG9iYWxTdWJySW5kZXguc2l6ZU9mKCk7cmV0dXJuIGkuY2hhcnNldD1oLGkuZW5jb2Rpbmc9MCxpLmNoYXJTdHJpbmdzPWkuY2hhcnNldCtuLmNoYXJzZXRzLnNpemVPZigpLGkucHJpdmF0ZVsxXT1pLmNoYXJTdHJpbmdzK24uY2hhclN0cmluZ3NJbmRleC5zaXplT2YoKSxmPURlKGksbCksbi50b3BEaWN0SW5kZXg9SWUoZiksbn19O3ZhciBGZT17cGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj17fSxuPW5ldyBhZS5QYXJzZXIoZSx0KTtyZXR1cm4gci52ZXJzaW9uPW4ucGFyc2VWZXJzaW9uKCksci5mb250UmV2aXNpb249TWF0aC5yb3VuZCgxZTMqbi5wYXJzZUZpeGVkKCkpLzFlMyxyLmNoZWNrU3VtQWRqdXN0bWVudD1uLnBhcnNlVUxvbmcoKSxyLm1hZ2ljTnVtYmVyPW4ucGFyc2VVTG9uZygpLEwuYXJndW1lbnQoMTU5NDgzNDE2NT09PXIubWFnaWNOdW1iZXIsXCJGb250IGhlYWRlciBoYXMgd3JvbmcgbWFnaWMgbnVtYmVyLlwiKSxyLmZsYWdzPW4ucGFyc2VVU2hvcnQoKSxyLnVuaXRzUGVyRW09bi5wYXJzZVVTaG9ydCgpLHIuY3JlYXRlZD1uLnBhcnNlTG9uZ0RhdGVUaW1lKCksci5tb2RpZmllZD1uLnBhcnNlTG9uZ0RhdGVUaW1lKCksci54TWluPW4ucGFyc2VTaG9ydCgpLHIueU1pbj1uLnBhcnNlU2hvcnQoKSxyLnhNYXg9bi5wYXJzZVNob3J0KCksci55TWF4PW4ucGFyc2VTaG9ydCgpLHIubWFjU3R5bGU9bi5wYXJzZVVTaG9ydCgpLHIubG93ZXN0UmVjUFBFTT1uLnBhcnNlVVNob3J0KCksci5mb250RGlyZWN0aW9uSGludD1uLnBhcnNlU2hvcnQoKSxyLmluZGV4VG9Mb2NGb3JtYXQ9bi5wYXJzZVNob3J0KCksci5nbHlwaERhdGFGb3JtYXQ9bi5wYXJzZVNob3J0KCkscn0sbWFrZTpmdW5jdGlvbihlKXt2YXIgdD1NYXRoLnJvdW5kKChuZXcgRGF0ZSkuZ2V0VGltZSgpLzFlMykrMjA4Mjg0NDgwMCxyPXQ7cmV0dXJuIGUuY3JlYXRlZFRpbWVzdGFtcCYmKHI9ZS5jcmVhdGVkVGltZXN0YW1wKzIwODI4NDQ4MDApLG5ldyBKLlRhYmxlKFwiaGVhZFwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiRklYRURcIix2YWx1ZTo2NTUzNn0se25hbWU6XCJmb250UmV2aXNpb25cIix0eXBlOlwiRklYRURcIix2YWx1ZTo2NTUzNn0se25hbWU6XCJjaGVja1N1bUFkanVzdG1lbnRcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcIm1hZ2ljTnVtYmVyXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MTU5NDgzNDE2NX0se25hbWU6XCJmbGFnc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVuaXRzUGVyRW1cIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MWUzfSx7bmFtZTpcImNyZWF0ZWRcIix0eXBlOlwiTE9OR0RBVEVUSU1FXCIsdmFsdWU6cn0se25hbWU6XCJtb2RpZmllZFwiLHR5cGU6XCJMT05HREFURVRJTUVcIix2YWx1ZTp0fSx7bmFtZTpcInhNaW5cIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInlNaW5cIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInhNYXhcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInlNYXhcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcIm1hY1N0eWxlXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwibG93ZXN0UmVjUFBFTVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcImZvbnREaXJlY3Rpb25IaW50XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6Mn0se25hbWU6XCJpbmRleFRvTG9jRm9ybWF0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJnbHlwaERhdGFGb3JtYXRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfV0sZSl9fTt2YXIgQmU9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e30sbj1uZXcgYWUuUGFyc2VyKGUsdCk7cmV0dXJuIHIudmVyc2lvbj1uLnBhcnNlVmVyc2lvbigpLHIuYXNjZW5kZXI9bi5wYXJzZVNob3J0KCksci5kZXNjZW5kZXI9bi5wYXJzZVNob3J0KCksci5saW5lR2FwPW4ucGFyc2VTaG9ydCgpLHIuYWR2YW5jZVdpZHRoTWF4PW4ucGFyc2VVU2hvcnQoKSxyLm1pbkxlZnRTaWRlQmVhcmluZz1uLnBhcnNlU2hvcnQoKSxyLm1pblJpZ2h0U2lkZUJlYXJpbmc9bi5wYXJzZVNob3J0KCksci54TWF4RXh0ZW50PW4ucGFyc2VTaG9ydCgpLHIuY2FyZXRTbG9wZVJpc2U9bi5wYXJzZVNob3J0KCksci5jYXJldFNsb3BlUnVuPW4ucGFyc2VTaG9ydCgpLHIuY2FyZXRPZmZzZXQ9bi5wYXJzZVNob3J0KCksbi5yZWxhdGl2ZU9mZnNldCs9OCxyLm1ldHJpY0RhdGFGb3JtYXQ9bi5wYXJzZVNob3J0KCksci5udW1iZXJPZkhNZXRyaWNzPW4ucGFyc2VVU2hvcnQoKSxyfSxtYWtlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgSi5UYWJsZShcImhoZWFcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIkZJWEVEXCIsdmFsdWU6NjU1MzZ9LHtuYW1lOlwiYXNjZW5kZXJcIix0eXBlOlwiRldPUkRcIix2YWx1ZTowfSx7bmFtZTpcImRlc2NlbmRlclwiLHR5cGU6XCJGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwibGluZUdhcFwiLHR5cGU6XCJGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwiYWR2YW5jZVdpZHRoTWF4XCIsdHlwZTpcIlVGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwibWluTGVmdFNpZGVCZWFyaW5nXCIsdHlwZTpcIkZXT1JEXCIsdmFsdWU6MH0se25hbWU6XCJtaW5SaWdodFNpZGVCZWFyaW5nXCIsdHlwZTpcIkZXT1JEXCIsdmFsdWU6MH0se25hbWU6XCJ4TWF4RXh0ZW50XCIsdHlwZTpcIkZXT1JEXCIsdmFsdWU6MH0se25hbWU6XCJjYXJldFNsb3BlUmlzZVwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjF9LHtuYW1lOlwiY2FyZXRTbG9wZVJ1blwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwiY2FyZXRPZmZzZXRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInJlc2VydmVkMVwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwicmVzZXJ2ZWQyXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJyZXNlcnZlZDNcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInJlc2VydmVkNFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwibWV0cmljRGF0YUZvcm1hdFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwibnVtYmVyT2ZITWV0cmljc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfV0sZSl9fTt2YXIgR2U9e3BhcnNlOmZ1bmN0aW9uKGUsdCxyLG4sbyl7Zm9yKHZhciBpLGEscz1uZXcgYWUuUGFyc2VyKGUsdCksbD0wO2w8bjtsKz0xKXtsPHImJihpPXMucGFyc2VVU2hvcnQoKSxhPXMucGFyc2VTaG9ydCgpKTt2YXIgdT1vLmdldChsKTt1LmFkdmFuY2VXaWR0aD1pLHUubGVmdFNpZGVCZWFyaW5nPWF9fSxtYWtlOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgSi5UYWJsZShcImhtdHhcIixbXSkscj0wO3I8ZS5sZW5ndGg7cis9MSl7dmFyIG49ZS5nZXQociksbz1uLmFkdmFuY2VXaWR0aHx8MCxpPW4ubGVmdFNpZGVCZWFyaW5nfHwwO3QuZmllbGRzLnB1c2goe25hbWU6XCJhZHZhbmNlV2lkdGhfXCIrcix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6b30pLHQuZmllbGRzLnB1c2goe25hbWU6XCJsZWZ0U2lkZUJlYXJpbmdfXCIrcix0eXBlOlwiU0hPUlRcIix2YWx1ZTppfSl9cmV0dXJuIHR9fTt2YXIgVmU9e21ha2U6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW5ldyBKLlRhYmxlKFwibHRhZ1wiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiVUxPTkdcIix2YWx1ZToxfSx7bmFtZTpcImZsYWdzXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJudW1UYWdzXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6ZS5sZW5ndGh9XSkscj1cIlwiLG49MTIrNCplLmxlbmd0aCxvPTA7bzxlLmxlbmd0aDsrK28pe3ZhciBpPXIuaW5kZXhPZihlW29dKTtpPDAmJihpPXIubGVuZ3RoLHIrPWVbb10pLHQuZmllbGRzLnB1c2goe25hbWU6XCJvZmZzZXQgXCIrbyx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6bitpfSksdC5maWVsZHMucHVzaCh7bmFtZTpcImxlbmd0aCBcIitvLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplW29dLmxlbmd0aH0pfXJldHVybiB0LmZpZWxkcy5wdXNoKHtuYW1lOlwic3RyaW5nUG9vbFwiLHR5cGU6XCJDSEFSQVJSQVlcIix2YWx1ZTpyfSksdH0scGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgYWUuUGFyc2VyKGUsdCksbj1yLnBhcnNlVUxvbmcoKTtMLmFyZ3VtZW50KDE9PT1uLFwiVW5zdXBwb3J0ZWQgbHRhZyB0YWJsZSB2ZXJzaW9uLlwiKSxyLnNraXAoXCJ1TG9uZ1wiLDEpO2Zvcih2YXIgbz1yLnBhcnNlVUxvbmcoKSxpPVtdLGE9MDthPG87YSsrKXtmb3IodmFyIHM9XCJcIixsPXQrci5wYXJzZVVTaG9ydCgpLHU9ci5wYXJzZVVTaG9ydCgpLGM9bDtjPGwrdTsrK2Mpcys9U3RyaW5nLmZyb21DaGFyQ29kZShlLmdldEludDgoYykpO2kucHVzaChzKX1yZXR1cm4gaX19O3ZhciB6ZT17cGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj17fSxuPW5ldyBhZS5QYXJzZXIoZSx0KTtyZXR1cm4gci52ZXJzaW9uPW4ucGFyc2VWZXJzaW9uKCksci5udW1HbHlwaHM9bi5wYXJzZVVTaG9ydCgpLDE9PT1yLnZlcnNpb24mJihyLm1heFBvaW50cz1uLnBhcnNlVVNob3J0KCksci5tYXhDb250b3Vycz1uLnBhcnNlVVNob3J0KCksci5tYXhDb21wb3NpdGVQb2ludHM9bi5wYXJzZVVTaG9ydCgpLHIubWF4Q29tcG9zaXRlQ29udG91cnM9bi5wYXJzZVVTaG9ydCgpLHIubWF4Wm9uZXM9bi5wYXJzZVVTaG9ydCgpLHIubWF4VHdpbGlnaHRQb2ludHM9bi5wYXJzZVVTaG9ydCgpLHIubWF4U3RvcmFnZT1uLnBhcnNlVVNob3J0KCksci5tYXhGdW5jdGlvbkRlZnM9bi5wYXJzZVVTaG9ydCgpLHIubWF4SW5zdHJ1Y3Rpb25EZWZzPW4ucGFyc2VVU2hvcnQoKSxyLm1heFN0YWNrRWxlbWVudHM9bi5wYXJzZVVTaG9ydCgpLHIubWF4U2l6ZU9mSW5zdHJ1Y3Rpb25zPW4ucGFyc2VVU2hvcnQoKSxyLm1heENvbXBvbmVudEVsZW1lbnRzPW4ucGFyc2VVU2hvcnQoKSxyLm1heENvbXBvbmVudERlcHRoPW4ucGFyc2VVU2hvcnQoKSkscn0sbWFrZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3IEouVGFibGUoXCJtYXhwXCIsW3tuYW1lOlwidmVyc2lvblwiLHR5cGU6XCJGSVhFRFwiLHZhbHVlOjIwNDgwfSx7bmFtZTpcIm51bUdseXBoc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplfV0pfX0sSGU9W1wiY29weXJpZ2h0XCIsXCJmb250RmFtaWx5XCIsXCJmb250U3ViZmFtaWx5XCIsXCJ1bmlxdWVJRFwiLFwiZnVsbE5hbWVcIixcInZlcnNpb25cIixcInBvc3RTY3JpcHROYW1lXCIsXCJ0cmFkZW1hcmtcIixcIm1hbnVmYWN0dXJlclwiLFwiZGVzaWduZXJcIixcImRlc2NyaXB0aW9uXCIsXCJtYW51ZmFjdHVyZXJVUkxcIixcImRlc2lnbmVyVVJMXCIsXCJsaWNlbnNlXCIsXCJsaWNlbnNlVVJMXCIsXCJyZXNlcnZlZFwiLFwicHJlZmVycmVkRmFtaWx5XCIsXCJwcmVmZXJyZWRTdWJmYW1pbHlcIixcImNvbXBhdGlibGVGdWxsTmFtZVwiLFwic2FtcGxlVGV4dFwiLFwicG9zdFNjcmlwdEZpbmRGb250TmFtZVwiLFwid3dzRmFtaWx5XCIsXCJ3d3NTdWJmYW1pbHlcIl0sV2U9ezA6XCJlblwiLDE6XCJmclwiLDI6XCJkZVwiLDM6XCJpdFwiLDQ6XCJubFwiLDU6XCJzdlwiLDY6XCJlc1wiLDc6XCJkYVwiLDg6XCJwdFwiLDk6XCJub1wiLDEwOlwiaGVcIiwxMTpcImphXCIsMTI6XCJhclwiLDEzOlwiZmlcIiwxNDpcImVsXCIsMTU6XCJpc1wiLDE2OlwibXRcIiwxNzpcInRyXCIsMTg6XCJoclwiLDE5OlwiemgtSGFudFwiLDIwOlwidXJcIiwyMTpcImhpXCIsMjI6XCJ0aFwiLDIzOlwia29cIiwyNDpcImx0XCIsMjU6XCJwbFwiLDI2OlwiaHVcIiwyNzpcImVzXCIsMjg6XCJsdlwiLDI5Olwic2VcIiwzMDpcImZvXCIsMzE6XCJmYVwiLDMyOlwicnVcIiwzMzpcInpoXCIsMzQ6XCJubC1CRVwiLDM1OlwiZ2FcIiwzNjpcInNxXCIsMzc6XCJyb1wiLDM4OlwiY3pcIiwzOTpcInNrXCIsNDA6XCJzaVwiLDQxOlwieWlcIiw0MjpcInNyXCIsNDM6XCJta1wiLDQ0OlwiYmdcIiw0NTpcInVrXCIsNDY6XCJiZVwiLDQ3OlwidXpcIiw0ODpcImtrXCIsNDk6XCJhei1DeXJsXCIsNTA6XCJhei1BcmFiXCIsNTE6XCJoeVwiLDUyOlwia2FcIiw1MzpcIm1vXCIsNTQ6XCJreVwiLDU1OlwidGdcIiw1NjpcInRrXCIsNTc6XCJtbi1DTlwiLDU4OlwibW5cIiw1OTpcInBzXCIsNjA6XCJrc1wiLDYxOlwia3VcIiw2MjpcInNkXCIsNjM6XCJib1wiLDY0OlwibmVcIiw2NTpcInNhXCIsNjY6XCJtclwiLDY3OlwiYm5cIiw2ODpcImFzXCIsNjk6XCJndVwiLDcwOlwicGFcIiw3MTpcIm9yXCIsNzI6XCJtbFwiLDczOlwia25cIiw3NDpcInRhXCIsNzU6XCJ0ZVwiLDc2Olwic2lcIiw3NzpcIm15XCIsNzg6XCJrbVwiLDc5OlwibG9cIiw4MDpcInZpXCIsODE6XCJpZFwiLDgyOlwidGxcIiw4MzpcIm1zXCIsODQ6XCJtcy1BcmFiXCIsODU6XCJhbVwiLDg2OlwidGlcIiw4NzpcIm9tXCIsODg6XCJzb1wiLDg5Olwic3dcIiw5MDpcInJ3XCIsOTE6XCJyblwiLDkyOlwibnlcIiw5MzpcIm1nXCIsOTQ6XCJlb1wiLDEyODpcImN5XCIsMTI5OlwiZXVcIiwxMzA6XCJjYVwiLDEzMTpcImxhXCIsMTMyOlwicXVcIiwxMzM6XCJnblwiLDEzNDpcImF5XCIsMTM1OlwidHRcIiwxMzY6XCJ1Z1wiLDEzNzpcImR6XCIsMTM4OlwianZcIiwxMzk6XCJzdVwiLDE0MDpcImdsXCIsMTQxOlwiYWZcIiwxNDI6XCJiclwiLDE0MzpcIml1XCIsMTQ0OlwiZ2RcIiwxNDU6XCJndlwiLDE0NjpcImdhXCIsMTQ3OlwidG9cIiwxNDg6XCJlbC1wb2x5dG9uXCIsMTQ5Olwia2xcIiwxNTA6XCJhelwiLDE1MTpcIm5uXCJ9LHFlPXswOjAsMTowLDI6MCwzOjAsNDowLDU6MCw2OjAsNzowLDg6MCw5OjAsMTA6NSwxMToxLDEyOjQsMTM6MCwxNDo2LDE1OjAsMTY6MCwxNzowLDE4OjAsMTk6MiwyMDo0LDIxOjksMjI6MjEsMjM6MywyNDoyOSwyNToyOSwyNjoyOSwyNzoyOSwyODoyOSwyOTowLDMwOjAsMzE6NCwzMjo3LDMzOjI1LDM0OjAsMzU6MCwzNjowLDM3OjAsMzg6MjksMzk6MjksNDA6MCw0MTo1LDQyOjcsNDM6Nyw0NDo3LDQ1OjcsNDY6Nyw0Nzo3LDQ4OjcsNDk6Nyw1MDo0LDUxOjI0LDUyOjIzLDUzOjcsNTQ6Nyw1NTo3LDU2OjcsNTc6MjcsNTg6Nyw1OTo0LDYwOjQsNjE6NCw2Mjo0LDYzOjI2LDY0OjksNjU6OSw2Njo5LDY3OjEzLDY4OjEzLDY5OjExLDcwOjEwLDcxOjEyLDcyOjE3LDczOjE2LDc0OjE0LDc1OjE1LDc2OjE4LDc3OjE5LDc4OjIwLDc5OjIyLDgwOjMwLDgxOjAsODI6MCw4MzowLDg0OjQsODU6MjgsODY6MjgsODc6MjgsODg6MCw4OTowLDkwOjAsOTE6MCw5MjowLDkzOjAsOTQ6MCwxMjg6MCwxMjk6MCwxMzA6MCwxMzE6MCwxMzI6MCwxMzM6MCwxMzQ6MCwxMzU6NywxMzY6NCwxMzc6MjYsMTM4OjAsMTM5OjAsMTQwOjAsMTQxOjAsMTQyOjAsMTQzOjI4LDE0NDowLDE0NTowLDE0NjowLDE0NzowLDE0ODo2LDE0OTowLDE1MDowLDE1MTowfSxYZT17MTA3ODpcImFmXCIsMTA1MjpcInNxXCIsMTE1NjpcImdzd1wiLDExMTg6XCJhbVwiLDUxMjE6XCJhci1EWlwiLDE1MzYxOlwiYXItQkhcIiwzMDczOlwiYXJcIiwyMDQ5OlwiYXItSVFcIiwxMTI2NTpcImFyLUpPXCIsMTMzMTM6XCJhci1LV1wiLDEyMjg5OlwiYXItTEJcIiw0MDk3OlwiYXItTFlcIiw2MTQ1OlwiYXJ5XCIsODE5MzpcImFyLU9NXCIsMTYzODU6XCJhci1RQVwiLDEwMjU6XCJhci1TQVwiLDEwMjQxOlwiYXItU1lcIiw3MTY5OlwiYWViXCIsMTQzMzc6XCJhci1BRVwiLDkyMTc6XCJhci1ZRVwiLDEwNjc6XCJoeVwiLDExMDE6XCJhc1wiLDIwOTI6XCJhei1DeXJsXCIsMTA2ODpcImF6XCIsMTEzMzpcImJhXCIsMTA2OTpcImV1XCIsMTA1OTpcImJlXCIsMjExNzpcImJuXCIsMTA5MzpcImJuLUlOXCIsODIxODpcImJzLUN5cmxcIiw1MTQ2OlwiYnNcIiwxMTUwOlwiYnJcIiwxMDI2OlwiYmdcIiwxMDI3OlwiY2FcIiwzMDc2OlwiemgtSEtcIiw1MTI0OlwiemgtTU9cIiwyMDUyOlwiemhcIiw0MTAwOlwiemgtU0dcIiwxMDI4OlwiemgtVFdcIiwxMTU1OlwiY29cIiwxMDUwOlwiaHJcIiw0MTIyOlwiaHItQkFcIiwxMDI5OlwiY3NcIiwxMDMwOlwiZGFcIiwxMTY0OlwicHJzXCIsMTEyNTpcImR2XCIsMjA2NzpcIm5sLUJFXCIsMTA0MzpcIm5sXCIsMzA4MTpcImVuLUFVXCIsMTAyNDk6XCJlbi1CWlwiLDQxMDU6XCJlbi1DQVwiLDkyMjU6XCJlbi0wMjlcIiwxNjM5MzpcImVuLUlOXCIsNjE1MzpcImVuLUlFXCIsODIwMTpcImVuLUpNXCIsMTc0MTc6XCJlbi1NWVwiLDUxMjk6XCJlbi1OWlwiLDEzMzIxOlwiZW4tUEhcIiwxODQ0MTpcImVuLVNHXCIsNzE3NzpcImVuLVpBXCIsMTEyNzM6XCJlbi1UVFwiLDIwNTc6XCJlbi1HQlwiLDEwMzM6XCJlblwiLDEyMjk3OlwiZW4tWldcIiwxMDYxOlwiZXRcIiwxMDgwOlwiZm9cIiwxMTI0OlwiZmlsXCIsMTAzNTpcImZpXCIsMjA2MDpcImZyLUJFXCIsMzA4NDpcImZyLUNBXCIsMTAzNjpcImZyXCIsNTEzMjpcImZyLUxVXCIsNjE1NjpcImZyLU1DXCIsNDEwODpcImZyLUNIXCIsMTEyMjpcImZ5XCIsMTExMDpcImdsXCIsMTA3OTpcImthXCIsMzA3OTpcImRlLUFUXCIsMTAzMTpcImRlXCIsNTEyNzpcImRlLUxJXCIsNDEwMzpcImRlLUxVXCIsMjA1NTpcImRlLUNIXCIsMTAzMjpcImVsXCIsMTEzNTpcImtsXCIsMTA5NTpcImd1XCIsMTEyODpcImhhXCIsMTAzNzpcImhlXCIsMTA4MTpcImhpXCIsMTAzODpcImh1XCIsMTAzOTpcImlzXCIsMTEzNjpcImlnXCIsMTA1NzpcImlkXCIsMTExNzpcIml1XCIsMjE0MTpcIml1LUxhdG5cIiwyMTA4OlwiZ2FcIiwxMDc2OlwieGhcIiwxMDc3OlwienVcIiwxMDQwOlwiaXRcIiwyMDY0OlwiaXQtQ0hcIiwxMDQxOlwiamFcIiwxMDk5Olwia25cIiwxMDg3Olwia2tcIiwxMTA3Olwia21cIiwxMTU4OlwicXVjXCIsMTE1OTpcInJ3XCIsMTA4OTpcInN3XCIsMTExMTpcImtva1wiLDEwNDI6XCJrb1wiLDEwODg6XCJreVwiLDExMDg6XCJsb1wiLDEwNjI6XCJsdlwiLDEwNjM6XCJsdFwiLDIwOTQ6XCJkc2JcIiwxMTM0OlwibGJcIiwxMDcxOlwibWtcIiwyMTEwOlwibXMtQk5cIiwxMDg2OlwibXNcIiwxMTAwOlwibWxcIiwxMDgyOlwibXRcIiwxMTUzOlwibWlcIiwxMTQ2OlwiYXJuXCIsMTEwMjpcIm1yXCIsMTE0ODpcIm1vaFwiLDExMDQ6XCJtblwiLDIxMjg6XCJtbi1DTlwiLDExMjE6XCJuZVwiLDEwNDQ6XCJuYlwiLDIwNjg6XCJublwiLDExNTQ6XCJvY1wiLDEwOTY6XCJvclwiLDExMjM6XCJwc1wiLDEwNDU6XCJwbFwiLDEwNDY6XCJwdFwiLDIwNzA6XCJwdC1QVFwiLDEwOTQ6XCJwYVwiLDExMzE6XCJxdS1CT1wiLDIxNTU6XCJxdS1FQ1wiLDMxNzk6XCJxdVwiLDEwNDg6XCJyb1wiLDEwNDc6XCJybVwiLDEwNDk6XCJydVwiLDkyNzU6XCJzbW5cIiw0MTU1Olwic21qLU5PXCIsNTE3OTpcInNtalwiLDMxMzE6XCJzZS1GSVwiLDEwODM6XCJzZVwiLDIxMDc6XCJzZS1TRVwiLDgyNTE6XCJzbXNcIiw2MjAzOlwic21hLU5PXCIsNzIyNzpcInNtc1wiLDExMDM6XCJzYVwiLDcxOTQ6XCJzci1DeXJsLUJBXCIsMzA5ODpcInNyXCIsNjE3MDpcInNyLUxhdG4tQkFcIiwyMDc0Olwic3ItTGF0blwiLDExMzI6XCJuc29cIiwxMDc0OlwidG5cIiwxMTE1Olwic2lcIiwxMDUxOlwic2tcIiwxMDYwOlwic2xcIiwxMTI3NDpcImVzLUFSXCIsMTYzOTQ6XCJlcy1CT1wiLDEzMzIyOlwiZXMtQ0xcIiw5MjI2OlwiZXMtQ09cIiw1MTMwOlwiZXMtQ1JcIiw3MTc4OlwiZXMtRE9cIiwxMjI5ODpcImVzLUVDXCIsMTc0MTg6XCJlcy1TVlwiLDQxMDY6XCJlcy1HVFwiLDE4NDQyOlwiZXMtSE5cIiwyMDU4OlwiZXMtTVhcIiwxOTQ2NjpcImVzLU5JXCIsNjE1NDpcImVzLVBBXCIsMTUzNzA6XCJlcy1QWVwiLDEwMjUwOlwiZXMtUEVcIiwyMDQ5MDpcImVzLVBSXCIsMzA4MjpcImVzXCIsMTAzNDpcImVzXCIsMjE1MTQ6XCJlcy1VU1wiLDE0MzQ2OlwiZXMtVVlcIiw4MjAyOlwiZXMtVkVcIiwyMDc3Olwic3YtRklcIiwxMDUzOlwic3ZcIiwxMTE0Olwic3lyXCIsMTA2NDpcInRnXCIsMjE0MzpcInR6bVwiLDEwOTc6XCJ0YVwiLDEwOTI6XCJ0dFwiLDEwOTg6XCJ0ZVwiLDEwNTQ6XCJ0aFwiLDExMDU6XCJib1wiLDEwNTU6XCJ0clwiLDEwOTA6XCJ0a1wiLDExNTI6XCJ1Z1wiLDEwNTg6XCJ1a1wiLDEwNzA6XCJoc2JcIiwxMDU2OlwidXJcIiwyMTE1OlwidXotQ3lybFwiLDEwOTE6XCJ1elwiLDEwNjY6XCJ2aVwiLDExMDY6XCJjeVwiLDExNjA6XCJ3b1wiLDExNTc6XCJzYWhcIiwxMTQ0OlwiaWlcIiwxMTMwOlwieW9cIn07ZnVuY3Rpb24gWWUoZSx0LHIpe3N3aXRjaChlKXtjYXNlIDA6aWYoNjU1MzU9PT10KXJldHVyblwidW5kXCI7aWYocilyZXR1cm4gclt0XTticmVhaztjYXNlIDE6cmV0dXJuIFdlW3RdO2Nhc2UgMzpyZXR1cm4gWGVbdF19fXZhciBaZT1cInV0Zi0xNlwiLFFlPXswOlwibWFjaW50b3NoXCIsMTpcIngtbWFjLWphcGFuZXNlXCIsMjpcIngtbWFjLWNoaW5lc2V0cmFkXCIsMzpcIngtbWFjLWtvcmVhblwiLDY6XCJ4LW1hYy1ncmVla1wiLDc6XCJ4LW1hYy1jeXJpbGxpY1wiLDk6XCJ4LW1hYy1kZXZhbmFnYWlcIiwxMDpcIngtbWFjLWd1cm11a2hpXCIsMTE6XCJ4LW1hYy1ndWphcmF0aVwiLDEyOlwieC1tYWMtb3JpeWFcIiwxMzpcIngtbWFjLWJlbmdhbGlcIiwxNDpcIngtbWFjLXRhbWlsXCIsMTU6XCJ4LW1hYy10ZWx1Z3VcIiwxNjpcIngtbWFjLWthbm5hZGFcIiwxNzpcIngtbWFjLW1hbGF5YWxhbVwiLDE4OlwieC1tYWMtc2luaGFsZXNlXCIsMTk6XCJ4LW1hYy1idXJtZXNlXCIsMjA6XCJ4LW1hYy1raG1lclwiLDIxOlwieC1tYWMtdGhhaVwiLDIyOlwieC1tYWMtbGFvXCIsMjM6XCJ4LW1hYy1nZW9yZ2lhblwiLDI0OlwieC1tYWMtYXJtZW5pYW5cIiwyNTpcIngtbWFjLWNoaW5lc2VzaW1wXCIsMjY6XCJ4LW1hYy10aWJldGFuXCIsMjc6XCJ4LW1hYy1tb25nb2xpYW5cIiwyODpcIngtbWFjLWV0aGlvcGljXCIsMjk6XCJ4LW1hYy1jZVwiLDMwOlwieC1tYWMtdmlldG5hbWVzZVwiLDMxOlwieC1tYWMtZXh0YXJhYmljXCJ9LEtlPXsxNTpcIngtbWFjLWljZWxhbmRpY1wiLDE3OlwieC1tYWMtdHVya2lzaFwiLDE4OlwieC1tYWMtY3JvYXRpYW5cIiwyNDpcIngtbWFjLWNlXCIsMjU6XCJ4LW1hYy1jZVwiLDI2OlwieC1tYWMtY2VcIiwyNzpcIngtbWFjLWNlXCIsMjg6XCJ4LW1hYy1jZVwiLDMwOlwieC1tYWMtaWNlbGFuZGljXCIsMzc6XCJ4LW1hYy1yb21hbmlhblwiLDM4OlwieC1tYWMtY2VcIiwzOTpcIngtbWFjLWNlXCIsNDA6XCJ4LW1hYy1jZVwiLDE0MzpcIngtbWFjLWludWl0XCIsMTQ2OlwieC1tYWMtZ2FlbGljXCJ9O2Z1bmN0aW9uIEplKGUsdCxyKXtzd2l0Y2goZSl7Y2FzZSAwOnJldHVybiBaZTtjYXNlIDE6cmV0dXJuIEtlW3JdfHxRZVt0XTtjYXNlIDM6aWYoMT09PXR8fDEwPT09dClyZXR1cm4gWmV9fWZ1bmN0aW9uICRlKGUpe3ZhciB0PXt9O2Zvcih2YXIgciBpbiBlKXRbZVtyXV09cGFyc2VJbnQocik7cmV0dXJuIHR9ZnVuY3Rpb24gZXQoZSx0LHIsbixvLGkpe3JldHVybiBuZXcgSi5SZWNvcmQoXCJOYW1lUmVjb3JkXCIsW3tuYW1lOlwicGxhdGZvcm1JRFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplfSx7bmFtZTpcImVuY29kaW5nSURcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6dH0se25hbWU6XCJsYW5ndWFnZUlEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnJ9LHtuYW1lOlwibmFtZUlEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOm59LHtuYW1lOlwibGVuZ3RoXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOm99LHtuYW1lOlwib2Zmc2V0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOml9XSl9ZnVuY3Rpb24gdHQoZSx0KXt2YXIgcj1mdW5jdGlvbihlLHQpe3ZhciByPWUubGVuZ3RoLG49dC5sZW5ndGgtcisxO2U6Zm9yKHZhciBvPTA7bzxuO28rKylmb3IoO288bjtvKyspe2Zvcih2YXIgaT0wO2k8cjtpKyspaWYodFtvK2ldIT09ZVtpXSljb250aW51ZSBlO3JldHVybiBvfXJldHVybi0xfShlLHQpO2lmKHI8MCl7cj10Lmxlbmd0aDtmb3IodmFyIG49MCxvPWUubGVuZ3RoO248bzsrK24pdC5wdXNoKGVbbl0pfXJldHVybiByfXZhciBydD17cGFyc2U6ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj17fSxvPW5ldyBhZS5QYXJzZXIoZSx0KSxpPW8ucGFyc2VVU2hvcnQoKSxhPW8ucGFyc2VVU2hvcnQoKSxzPW8ub2Zmc2V0K28ucGFyc2VVU2hvcnQoKSxsPTA7bDxhO2wrKyl7dmFyIHU9by5wYXJzZVVTaG9ydCgpLGM9by5wYXJzZVVTaG9ydCgpLGQ9by5wYXJzZVVTaG9ydCgpLGY9by5wYXJzZVVTaG9ydCgpLGg9SGVbZl18fGYscD1vLnBhcnNlVVNob3J0KCkseT1vLnBhcnNlVVNob3J0KCksbT1ZZSh1LGQsciksZz1KZSh1LGMsZCk7aWYodm9pZCAwIT09ZyYmdm9pZCAwIT09bSl7dmFyIHY9dm9pZCAwO2lmKHY9Zz09PVplP1AuVVRGMTYoZSxzK3kscCk6UC5NQUNTVFJJTkcoZSxzK3kscCxnKSl7dmFyIGI9bltoXTt2b2lkIDA9PT1iJiYoYj1uW2hdPXt9KSxiW21dPXZ9fX1yZXR1cm4gMT09PWkmJm8ucGFyc2VVU2hvcnQoKSxufSxtYWtlOmZ1bmN0aW9uKGUsdCl7dmFyIHIsbj1bXSxvPXt9LGk9JGUoSGUpO2Zvcih2YXIgYSBpbiBlKXt2YXIgcz1pW2FdO2lmKHZvaWQgMD09PXMmJihzPWEpLHI9cGFyc2VJbnQocyksaXNOYU4ocikpdGhyb3cgbmV3IEVycm9yKCdOYW1lIHRhYmxlIGVudHJ5IFwiJythKydcIiBkb2VzIG5vdCBleGlzdCwgc2VlIG5hbWVUYWJsZU5hbWVzIGZvciBjb21wbGV0ZSBsaXN0LicpO29bcl09ZVthXSxuLnB1c2gocil9Zm9yKHZhciBsPSRlKFdlKSx1PSRlKFhlKSxjPVtdLGQ9W10sZj0wO2Y8bi5sZW5ndGg7ZisrKXt2YXIgaD1vW3I9bltmXV07Zm9yKHZhciBwIGluIGgpe3ZhciB5PWhbcF0sbT0xLGc9bFtwXSx2PXFlW2ddLGI9SmUobSx2LGcpLF89QS5NQUNTVFJJTkcoeSxiKTt2b2lkIDA9PT1fJiYobT0wLChnPXQuaW5kZXhPZihwKSk8MCYmKGc9dC5sZW5ndGgsdC5wdXNoKHApKSx2PTQsXz1BLlVURjE2KHkpKTt2YXIgeD10dChfLGQpO2MucHVzaChldChtLHYsZyxyLF8ubGVuZ3RoLHgpKTt2YXIgdz11W3BdO2lmKHZvaWQgMCE9PXcpe3ZhciBqPUEuVVRGMTYoeSksUz10dChqLGQpO2MucHVzaChldCgzLDEsdyxyLGoubGVuZ3RoLFMpKX19fWMuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiBlLnBsYXRmb3JtSUQtdC5wbGF0Zm9ybUlEfHxlLmVuY29kaW5nSUQtdC5lbmNvZGluZ0lEfHxlLmxhbmd1YWdlSUQtdC5sYW5ndWFnZUlEfHxlLm5hbWVJRC10Lm5hbWVJRH0pO2Zvcih2YXIgTT1uZXcgSi5UYWJsZShcIm5hbWVcIixbe25hbWU6XCJmb3JtYXRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJjb3VudFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpjLmxlbmd0aH0se25hbWU6XCJzdHJpbmdPZmZzZXRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6NisxMipjLmxlbmd0aH1dKSxFPTA7RTxjLmxlbmd0aDtFKyspTS5maWVsZHMucHVzaCh7bmFtZTpcInJlY29yZF9cIitFLHR5cGU6XCJSRUNPUkRcIix2YWx1ZTpjW0VdfSk7cmV0dXJuIE0uZmllbGRzLnB1c2goe25hbWU6XCJzdHJpbmdzXCIsdHlwZTpcIkxJVEVSQUxcIix2YWx1ZTpkfSksTX19LG50PVt7YmVnaW46MCxlbmQ6MTI3fSx7YmVnaW46MTI4LGVuZDoyNTV9LHtiZWdpbjoyNTYsZW5kOjM4M30se2JlZ2luOjM4NCxlbmQ6NTkxfSx7YmVnaW46NTkyLGVuZDo2ODd9LHtiZWdpbjo2ODgsZW5kOjc2N30se2JlZ2luOjc2OCxlbmQ6ODc5fSx7YmVnaW46ODgwLGVuZDoxMDIzfSx7YmVnaW46MTEzOTIsZW5kOjExNTE5fSx7YmVnaW46MTAyNCxlbmQ6MTI3OX0se2JlZ2luOjEzMjgsZW5kOjE0MjN9LHtiZWdpbjoxNDI0LGVuZDoxNTM1fSx7YmVnaW46NDIyNDAsZW5kOjQyNTU5fSx7YmVnaW46MTUzNixlbmQ6MTc5MX0se2JlZ2luOjE5ODQsZW5kOjIwNDd9LHtiZWdpbjoyMzA0LGVuZDoyNDMxfSx7YmVnaW46MjQzMixlbmQ6MjU1OX0se2JlZ2luOjI1NjAsZW5kOjI2ODd9LHtiZWdpbjoyNjg4LGVuZDoyODE1fSx7YmVnaW46MjgxNixlbmQ6Mjk0M30se2JlZ2luOjI5NDQsZW5kOjMwNzF9LHtiZWdpbjozMDcyLGVuZDozMTk5fSx7YmVnaW46MzIwMCxlbmQ6MzMyN30se2JlZ2luOjMzMjgsZW5kOjM0NTV9LHtiZWdpbjozNTg0LGVuZDozNzExfSx7YmVnaW46MzcxMixlbmQ6MzgzOX0se2JlZ2luOjQyNTYsZW5kOjQzNTF9LHtiZWdpbjo2OTEyLGVuZDo3MDM5fSx7YmVnaW46NDM1MixlbmQ6NDYwN30se2JlZ2luOjc2ODAsZW5kOjc5MzV9LHtiZWdpbjo3OTM2LGVuZDo4MTkxfSx7YmVnaW46ODE5MixlbmQ6ODMwM30se2JlZ2luOjgzMDQsZW5kOjgzNTF9LHtiZWdpbjo4MzUyLGVuZDo4Mzk5fSx7YmVnaW46ODQwMCxlbmQ6ODQ0N30se2JlZ2luOjg0NDgsZW5kOjg1Mjd9LHtiZWdpbjo4NTI4LGVuZDo4NTkxfSx7YmVnaW46ODU5MixlbmQ6ODcwM30se2JlZ2luOjg3MDQsZW5kOjg5NTl9LHtiZWdpbjo4OTYwLGVuZDo5MjE1fSx7YmVnaW46OTIxNixlbmQ6OTI3OX0se2JlZ2luOjkyODAsZW5kOjkzMTF9LHtiZWdpbjo5MzEyLGVuZDo5NDcxfSx7YmVnaW46OTQ3MixlbmQ6OTU5OX0se2JlZ2luOjk2MDAsZW5kOjk2MzF9LHtiZWdpbjo5NjMyLGVuZDo5NzI3fSx7YmVnaW46OTcyOCxlbmQ6OTk4M30se2JlZ2luOjk5ODQsZW5kOjEwMTc1fSx7YmVnaW46MTIyODgsZW5kOjEyMzUxfSx7YmVnaW46MTIzNTIsZW5kOjEyNDQ3fSx7YmVnaW46MTI0NDgsZW5kOjEyNTQzfSx7YmVnaW46MTI1NDQsZW5kOjEyNTkxfSx7YmVnaW46MTI1OTIsZW5kOjEyNjg3fSx7YmVnaW46NDMwNzIsZW5kOjQzMTM1fSx7YmVnaW46MTI4MDAsZW5kOjEzMDU1fSx7YmVnaW46MTMwNTYsZW5kOjEzMzExfSx7YmVnaW46NDQwMzIsZW5kOjU1MjE1fSx7YmVnaW46NTUyOTYsZW5kOjU3MzQzfSx7YmVnaW46Njc4NDAsZW5kOjY3ODcxfSx7YmVnaW46MTk5NjgsZW5kOjQwOTU5fSx7YmVnaW46NTczNDQsZW5kOjYzNzQzfSx7YmVnaW46MTI3MzYsZW5kOjEyNzgzfSx7YmVnaW46NjQyNTYsZW5kOjY0MzM1fSx7YmVnaW46NjQzMzYsZW5kOjY1MDIzfSx7YmVnaW46NjUwNTYsZW5kOjY1MDcxfSx7YmVnaW46NjUwNDAsZW5kOjY1MDU1fSx7YmVnaW46NjUxMDQsZW5kOjY1MTM1fSx7YmVnaW46NjUxMzYsZW5kOjY1Mjc5fSx7YmVnaW46NjUyODAsZW5kOjY1NTE5fSx7YmVnaW46NjU1MjAsZW5kOjY1NTM1fSx7YmVnaW46Mzg0MCxlbmQ6NDA5NX0se2JlZ2luOjE3OTIsZW5kOjE4NzF9LHtiZWdpbjoxOTIwLGVuZDoxOTgzfSx7YmVnaW46MzQ1NixlbmQ6MzU4M30se2JlZ2luOjQwOTYsZW5kOjQyNTV9LHtiZWdpbjo0NjA4LGVuZDo0OTkxfSx7YmVnaW46NTAyNCxlbmQ6NTExOX0se2JlZ2luOjUxMjAsZW5kOjU3NTl9LHtiZWdpbjo1NzYwLGVuZDo1NzkxfSx7YmVnaW46NTc5MixlbmQ6NTg4N30se2JlZ2luOjYwMTYsZW5kOjYxNDN9LHtiZWdpbjo2MTQ0LGVuZDo2MzE5fSx7YmVnaW46MTAyNDAsZW5kOjEwNDk1fSx7YmVnaW46NDA5NjAsZW5kOjQyMTI3fSx7YmVnaW46NTg4OCxlbmQ6NTkxOX0se2JlZ2luOjY2MzA0LGVuZDo2NjM1MX0se2JlZ2luOjY2MzUyLGVuZDo2NjM4M30se2JlZ2luOjY2NTYwLGVuZDo2NjYzOX0se2JlZ2luOjExODc4NCxlbmQ6MTE5MDM5fSx7YmVnaW46MTE5ODA4LGVuZDoxMjA4MzF9LHtiZWdpbjoxMDQ0NDgwLGVuZDoxMDQ4NTczfSx7YmVnaW46NjUwMjQsZW5kOjY1MDM5fSx7YmVnaW46OTE3NTA0LGVuZDo5MTc2MzF9LHtiZWdpbjo2NDAwLGVuZDo2NDc5fSx7YmVnaW46NjQ4MCxlbmQ6NjUyN30se2JlZ2luOjY1MjgsZW5kOjY2MjN9LHtiZWdpbjo2NjU2LGVuZDo2Njg3fSx7YmVnaW46MTEyNjQsZW5kOjExMzU5fSx7YmVnaW46MTE1NjgsZW5kOjExNjQ3fSx7YmVnaW46MTk5MDQsZW5kOjE5OTY3fSx7YmVnaW46NDMwMDgsZW5kOjQzMDU1fSx7YmVnaW46NjU1MzYsZW5kOjY1NjYzfSx7YmVnaW46NjU4NTYsZW5kOjY1OTM1fSx7YmVnaW46NjY0MzIsZW5kOjY2NDYzfSx7YmVnaW46NjY0NjQsZW5kOjY2NTI3fSx7YmVnaW46NjY2NDAsZW5kOjY2Njg3fSx7YmVnaW46NjY2ODgsZW5kOjY2NzM1fSx7YmVnaW46Njc1ODQsZW5kOjY3NjQ3fSx7YmVnaW46NjgwOTYsZW5kOjY4MTkxfSx7YmVnaW46MTE5NTUyLGVuZDoxMTk2NDd9LHtiZWdpbjo3MzcyOCxlbmQ6NzQ3NTF9LHtiZWdpbjoxMTk2NDgsZW5kOjExOTY3OX0se2JlZ2luOjcwNDAsZW5kOjcxMDN9LHtiZWdpbjo3MTY4LGVuZDo3MjQ3fSx7YmVnaW46NzI0OCxlbmQ6NzI5NX0se2JlZ2luOjQzMTM2LGVuZDo0MzIzMX0se2JlZ2luOjQzMjY0LGVuZDo0MzMxMX0se2JlZ2luOjQzMzEyLGVuZDo0MzM1OX0se2JlZ2luOjQzNTIwLGVuZDo0MzYxNX0se2JlZ2luOjY1OTM2LGVuZDo2NTk5OX0se2JlZ2luOjY2ZTMsZW5kOjY2MDQ3fSx7YmVnaW46NjYyMDgsZW5kOjY2MjcxfSx7YmVnaW46MTI3MDI0LGVuZDoxMjcxMzV9XTt2YXIgb3Q9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e30sbj1uZXcgYWUuUGFyc2VyKGUsdCk7ci52ZXJzaW9uPW4ucGFyc2VVU2hvcnQoKSxyLnhBdmdDaGFyV2lkdGg9bi5wYXJzZVNob3J0KCksci51c1dlaWdodENsYXNzPW4ucGFyc2VVU2hvcnQoKSxyLnVzV2lkdGhDbGFzcz1uLnBhcnNlVVNob3J0KCksci5mc1R5cGU9bi5wYXJzZVVTaG9ydCgpLHIueVN1YnNjcmlwdFhTaXplPW4ucGFyc2VTaG9ydCgpLHIueVN1YnNjcmlwdFlTaXplPW4ucGFyc2VTaG9ydCgpLHIueVN1YnNjcmlwdFhPZmZzZXQ9bi5wYXJzZVNob3J0KCksci55U3Vic2NyaXB0WU9mZnNldD1uLnBhcnNlU2hvcnQoKSxyLnlTdXBlcnNjcmlwdFhTaXplPW4ucGFyc2VTaG9ydCgpLHIueVN1cGVyc2NyaXB0WVNpemU9bi5wYXJzZVNob3J0KCksci55U3VwZXJzY3JpcHRYT2Zmc2V0PW4ucGFyc2VTaG9ydCgpLHIueVN1cGVyc2NyaXB0WU9mZnNldD1uLnBhcnNlU2hvcnQoKSxyLnlTdHJpa2VvdXRTaXplPW4ucGFyc2VTaG9ydCgpLHIueVN0cmlrZW91dFBvc2l0aW9uPW4ucGFyc2VTaG9ydCgpLHIuc0ZhbWlseUNsYXNzPW4ucGFyc2VTaG9ydCgpLHIucGFub3NlPVtdO2Zvcih2YXIgbz0wO288MTA7bysrKXIucGFub3NlW29dPW4ucGFyc2VCeXRlKCk7cmV0dXJuIHIudWxVbmljb2RlUmFuZ2UxPW4ucGFyc2VVTG9uZygpLHIudWxVbmljb2RlUmFuZ2UyPW4ucGFyc2VVTG9uZygpLHIudWxVbmljb2RlUmFuZ2UzPW4ucGFyc2VVTG9uZygpLHIudWxVbmljb2RlUmFuZ2U0PW4ucGFyc2VVTG9uZygpLHIuYWNoVmVuZElEPVN0cmluZy5mcm9tQ2hhckNvZGUobi5wYXJzZUJ5dGUoKSxuLnBhcnNlQnl0ZSgpLG4ucGFyc2VCeXRlKCksbi5wYXJzZUJ5dGUoKSksci5mc1NlbGVjdGlvbj1uLnBhcnNlVVNob3J0KCksci51c0ZpcnN0Q2hhckluZGV4PW4ucGFyc2VVU2hvcnQoKSxyLnVzTGFzdENoYXJJbmRleD1uLnBhcnNlVVNob3J0KCksci5zVHlwb0FzY2VuZGVyPW4ucGFyc2VTaG9ydCgpLHIuc1R5cG9EZXNjZW5kZXI9bi5wYXJzZVNob3J0KCksci5zVHlwb0xpbmVHYXA9bi5wYXJzZVNob3J0KCksci51c1dpbkFzY2VudD1uLnBhcnNlVVNob3J0KCksci51c1dpbkRlc2NlbnQ9bi5wYXJzZVVTaG9ydCgpLDE8PXIudmVyc2lvbiYmKHIudWxDb2RlUGFnZVJhbmdlMT1uLnBhcnNlVUxvbmcoKSxyLnVsQ29kZVBhZ2VSYW5nZTI9bi5wYXJzZVVMb25nKCkpLDI8PXIudmVyc2lvbiYmKHIuc3hIZWlnaHQ9bi5wYXJzZVNob3J0KCksci5zQ2FwSGVpZ2h0PW4ucGFyc2VTaG9ydCgpLHIudXNEZWZhdWx0Q2hhcj1uLnBhcnNlVVNob3J0KCksci51c0JyZWFrQ2hhcj1uLnBhcnNlVVNob3J0KCksci51c01heENvbnRlbnQ9bi5wYXJzZVVTaG9ydCgpKSxyfSxtYWtlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgSi5UYWJsZShcIk9TLzJcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjN9LHtuYW1lOlwieEF2Z0NoYXJXaWR0aFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwidXNXZWlnaHRDbGFzc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVzV2lkdGhDbGFzc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcImZzVHlwZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInlTdWJzY3JpcHRYU2l6ZVwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjY1MH0se25hbWU6XCJ5U3Vic2NyaXB0WVNpemVcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTo2OTl9LHtuYW1lOlwieVN1YnNjcmlwdFhPZmZzZXRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInlTdWJzY3JpcHRZT2Zmc2V0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MTQwfSx7bmFtZTpcInlTdXBlcnNjcmlwdFhTaXplXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6NjUwfSx7bmFtZTpcInlTdXBlcnNjcmlwdFlTaXplXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6Njk5fSx7bmFtZTpcInlTdXBlcnNjcmlwdFhPZmZzZXRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInlTdXBlcnNjcmlwdFlPZmZzZXRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTo0Nzl9LHtuYW1lOlwieVN0cmlrZW91dFNpemVcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTo0OX0se25hbWU6XCJ5U3RyaWtlb3V0UG9zaXRpb25cIix0eXBlOlwiU0hPUlRcIix2YWx1ZToyNTh9LHtuYW1lOlwic0ZhbWlseUNsYXNzXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJiRmFtaWx5VHlwZVwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiU2VyaWZTdHlsZVwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiV2VpZ2h0XCIsdHlwZTpcIkJZVEVcIix2YWx1ZTowfSx7bmFtZTpcImJQcm9wb3J0aW9uXCIsdHlwZTpcIkJZVEVcIix2YWx1ZTowfSx7bmFtZTpcImJDb250cmFzdFwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiU3Ryb2tlVmFyaWF0aW9uXCIsdHlwZTpcIkJZVEVcIix2YWx1ZTowfSx7bmFtZTpcImJBcm1TdHlsZVwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiTGV0dGVyZm9ybVwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiTWlkbGluZVwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiWEhlaWdodFwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJ1bFVuaWNvZGVSYW5nZTFcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcInVsVW5pY29kZVJhbmdlMlwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwidWxVbmljb2RlUmFuZ2UzXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJ1bFVuaWNvZGVSYW5nZTRcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcImFjaFZlbmRJRFwiLHR5cGU6XCJDSEFSQVJSQVlcIix2YWx1ZTpcIlhYWFhcIn0se25hbWU6XCJmc1NlbGVjdGlvblwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVzRmlyc3RDaGFySW5kZXhcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c0xhc3RDaGFySW5kZXhcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJzVHlwb0FzY2VuZGVyXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJzVHlwb0Rlc2NlbmRlclwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwic1R5cG9MaW5lR2FwXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c1dpbkFzY2VudFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVzV2luRGVzY2VudFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVsQ29kZVBhZ2VSYW5nZTFcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcInVsQ29kZVBhZ2VSYW5nZTJcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcInN4SGVpZ2h0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJzQ2FwSGVpZ2h0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c0RlZmF1bHRDaGFyXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwidXNCcmVha0NoYXJcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c01heENvbnRleHRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH1dLGUpfSx1bmljb2RlUmFuZ2VzOm50LGdldFVuaWNvZGVSYW5nZTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MDt0PG50Lmxlbmd0aDt0Kz0xKXt2YXIgcj1udFt0XTtpZihlPj1yLmJlZ2luJiZlPHIuZW5kKXJldHVybiB0fXJldHVybi0xfX07dmFyIGl0PXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPXt9LG49bmV3IGFlLlBhcnNlcihlLHQpO3N3aXRjaChyLnZlcnNpb249bi5wYXJzZVZlcnNpb24oKSxyLml0YWxpY0FuZ2xlPW4ucGFyc2VGaXhlZCgpLHIudW5kZXJsaW5lUG9zaXRpb249bi5wYXJzZVNob3J0KCksci51bmRlcmxpbmVUaGlja25lc3M9bi5wYXJzZVNob3J0KCksci5pc0ZpeGVkUGl0Y2g9bi5wYXJzZVVMb25nKCksci5taW5NZW1UeXBlNDI9bi5wYXJzZVVMb25nKCksci5tYXhNZW1UeXBlNDI9bi5wYXJzZVVMb25nKCksci5taW5NZW1UeXBlMT1uLnBhcnNlVUxvbmcoKSxyLm1heE1lbVR5cGUxPW4ucGFyc2VVTG9uZygpLHIudmVyc2lvbil7Y2FzZSAxOnIubmFtZXM9ZGUuc2xpY2UoKTticmVhaztjYXNlIDI6ci5udW1iZXJPZkdseXBocz1uLnBhcnNlVVNob3J0KCksci5nbHlwaE5hbWVJbmRleD1uZXcgQXJyYXkoci5udW1iZXJPZkdseXBocyk7Zm9yKHZhciBvPTA7bzxyLm51bWJlck9mR2x5cGhzO28rKylyLmdseXBoTmFtZUluZGV4W29dPW4ucGFyc2VVU2hvcnQoKTtyLm5hbWVzPVtdO2Zvcih2YXIgaT0wO2k8ci5udW1iZXJPZkdseXBocztpKyspaWYoci5nbHlwaE5hbWVJbmRleFtpXT49ZGUubGVuZ3RoKXt2YXIgYT1uLnBhcnNlQ2hhcigpO3IubmFtZXMucHVzaChuLnBhcnNlU3RyaW5nKGEpKX1icmVhaztjYXNlIDIuNTpyLm51bWJlck9mR2x5cGhzPW4ucGFyc2VVU2hvcnQoKSxyLm9mZnNldD1uZXcgQXJyYXkoci5udW1iZXJPZkdseXBocyk7Zm9yKHZhciBzPTA7czxyLm51bWJlck9mR2x5cGhzO3MrKylyLm9mZnNldFtzXT1uLnBhcnNlQ2hhcigpfXJldHVybiByfSxtYWtlOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBKLlRhYmxlKFwicG9zdFwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiRklYRURcIix2YWx1ZToxOTY2MDh9LHtuYW1lOlwiaXRhbGljQW5nbGVcIix0eXBlOlwiRklYRURcIix2YWx1ZTowfSx7bmFtZTpcInVuZGVybGluZVBvc2l0aW9uXCIsdHlwZTpcIkZXT1JEXCIsdmFsdWU6MH0se25hbWU6XCJ1bmRlcmxpbmVUaGlja25lc3NcIix0eXBlOlwiRldPUkRcIix2YWx1ZTowfSx7bmFtZTpcImlzRml4ZWRQaXRjaFwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwibWluTWVtVHlwZTQyXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJtYXhNZW1UeXBlNDJcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcIm1pbk1lbVR5cGUxXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJtYXhNZW1UeXBlMVwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9XSl9fSxhdD1uZXcgQXJyYXkoOSk7YXRbMV09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LHQ9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiAxPT09dD97c3Vic3RGb3JtYXQ6MSxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksZGVsdGFHbHlwaElkOnRoaXMucGFyc2VVU2hvcnQoKX06Mj09PXQ/e3N1YnN0Rm9ybWF0OjIsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLHN1YnN0aXR1dGU6dGhpcy5wYXJzZU9mZnNldDE2TGlzdCgpfTp2b2lkIEwuYXNzZXJ0KCExLFwiMHhcIitlLnRvU3RyaW5nKDE2KStcIjogbG9va3VwIHR5cGUgMSBmb3JtYXQgbXVzdCBiZSAxIG9yIDIuXCIpfSxhdFsyXT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm4gTC5hcmd1bWVudCgxPT09ZSxcIkdTVUIgTXVsdGlwbGUgU3Vic3RpdHV0aW9uIFN1YnRhYmxlIGlkZW50aWZpZXItZm9ybWF0IG11c3QgYmUgMVwiKSx7c3Vic3RGb3JtYXQ6ZSxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksc2VxdWVuY2VzOnRoaXMucGFyc2VMaXN0T2ZMaXN0cygpfX0sYXRbM109ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlVVNob3J0KCk7cmV0dXJuIEwuYXJndW1lbnQoMT09PWUsXCJHU1VCIEFsdGVybmF0ZSBTdWJzdGl0dXRpb24gU3VidGFibGUgaWRlbnRpZmllci1mb3JtYXQgbXVzdCBiZSAxXCIpLHtzdWJzdEZvcm1hdDplLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxhbHRlcm5hdGVTZXRzOnRoaXMucGFyc2VMaXN0T2ZMaXN0cygpfX0sYXRbNF09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlVVNob3J0KCk7cmV0dXJuIEwuYXJndW1lbnQoMT09PWUsXCJHU1VCIGxpZ2F0dXJlIHRhYmxlIGlkZW50aWZpZXItZm9ybWF0IG11c3QgYmUgMVwiKSx7c3Vic3RGb3JtYXQ6ZSxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksbGlnYXR1cmVTZXRzOnRoaXMucGFyc2VMaXN0T2ZMaXN0cyhmdW5jdGlvbigpe3JldHVybntsaWdHbHlwaDp0aGlzLnBhcnNlVVNob3J0KCksY29tcG9uZW50czp0aGlzLnBhcnNlVVNob3J0TGlzdCh0aGlzLnBhcnNlVVNob3J0KCktMSl9fSl9fTt2YXIgc3Q9e3NlcXVlbmNlSW5kZXg6b2UudVNob3J0LGxvb2t1cExpc3RJbmRleDpvZS51U2hvcnR9O2F0WzVdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCx0PXRoaXMucGFyc2VVU2hvcnQoKTtpZigxPT09dClyZXR1cm57c3Vic3RGb3JtYXQ6dCxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSkscnVsZVNldHM6dGhpcy5wYXJzZUxpc3RPZkxpc3RzKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpLHQ9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybntpbnB1dDp0aGlzLnBhcnNlVVNob3J0TGlzdChlLTEpLGxvb2t1cFJlY29yZHM6dGhpcy5wYXJzZVJlY29yZExpc3QodCxzdCl9fSl9O2lmKDI9PT10KXJldHVybntzdWJzdEZvcm1hdDp0LGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxjbGFzc0RlZjp0aGlzLnBhcnNlUG9pbnRlcihvZS5jbGFzc0RlZiksY2xhc3NTZXRzOnRoaXMucGFyc2VMaXN0T2ZMaXN0cyhmdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VVU2hvcnQoKSx0PXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm57Y2xhc3Nlczp0aGlzLnBhcnNlVVNob3J0TGlzdChlLTEpLGxvb2t1cFJlY29yZHM6dGhpcy5wYXJzZVJlY29yZExpc3QodCxzdCl9fSl9O2lmKDM9PT10KXt2YXIgcj10aGlzLnBhcnNlVVNob3J0KCksbj10aGlzLnBhcnNlVVNob3J0KCk7cmV0dXJue3N1YnN0Rm9ybWF0OnQsY292ZXJhZ2VzOnRoaXMucGFyc2VMaXN0KHIsb2UucG9pbnRlcihvZS5jb3ZlcmFnZSkpLGxvb2t1cFJlY29yZHM6dGhpcy5wYXJzZVJlY29yZExpc3QobixzdCl9fUwuYXNzZXJ0KCExLFwiMHhcIitlLnRvU3RyaW5nKDE2KStcIjogbG9va3VwIHR5cGUgNSBmb3JtYXQgbXVzdCBiZSAxLCAyIG9yIDMuXCIpfSxhdFs2XT1mdW5jdGlvbigpe3ZhciBlPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsdD10aGlzLnBhcnNlVVNob3J0KCk7cmV0dXJuIDE9PT10P3tzdWJzdEZvcm1hdDoxLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxjaGFpblJ1bGVTZXRzOnRoaXMucGFyc2VMaXN0T2ZMaXN0cyhmdW5jdGlvbigpe3JldHVybntiYWNrdHJhY2s6dGhpcy5wYXJzZVVTaG9ydExpc3QoKSxpbnB1dDp0aGlzLnBhcnNlVVNob3J0TGlzdCh0aGlzLnBhcnNlU2hvcnQoKS0xKSxsb29rYWhlYWQ6dGhpcy5wYXJzZVVTaG9ydExpc3QoKSxsb29rdXBSZWNvcmRzOnRoaXMucGFyc2VSZWNvcmRMaXN0KHN0KX19KX06Mj09PXQ/e3N1YnN0Rm9ybWF0OjIsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLGJhY2t0cmFja0NsYXNzRGVmOnRoaXMucGFyc2VQb2ludGVyKG9lLmNsYXNzRGVmKSxpbnB1dENsYXNzRGVmOnRoaXMucGFyc2VQb2ludGVyKG9lLmNsYXNzRGVmKSxsb29rYWhlYWRDbGFzc0RlZjp0aGlzLnBhcnNlUG9pbnRlcihvZS5jbGFzc0RlZiksY2hhaW5DbGFzc1NldDp0aGlzLnBhcnNlTGlzdE9mTGlzdHMoZnVuY3Rpb24oKXtyZXR1cm57YmFja3RyYWNrOnRoaXMucGFyc2VVU2hvcnRMaXN0KCksaW5wdXQ6dGhpcy5wYXJzZVVTaG9ydExpc3QodGhpcy5wYXJzZVNob3J0KCktMSksbG9va2FoZWFkOnRoaXMucGFyc2VVU2hvcnRMaXN0KCksbG9va3VwUmVjb3Jkczp0aGlzLnBhcnNlUmVjb3JkTGlzdChzdCl9fSl9OjM9PT10P3tzdWJzdEZvcm1hdDozLGJhY2t0cmFja0NvdmVyYWdlOnRoaXMucGFyc2VMaXN0KG9lLnBvaW50ZXIob2UuY292ZXJhZ2UpKSxpbnB1dENvdmVyYWdlOnRoaXMucGFyc2VMaXN0KG9lLnBvaW50ZXIob2UuY292ZXJhZ2UpKSxsb29rYWhlYWRDb3ZlcmFnZTp0aGlzLnBhcnNlTGlzdChvZS5wb2ludGVyKG9lLmNvdmVyYWdlKSksbG9va3VwUmVjb3Jkczp0aGlzLnBhcnNlUmVjb3JkTGlzdChzdCl9OnZvaWQgTC5hc3NlcnQoITEsXCIweFwiK2UudG9TdHJpbmcoMTYpK1wiOiBsb29rdXAgdHlwZSA2IGZvcm1hdCBtdXN0IGJlIDEsIDIgb3IgMy5cIil9LGF0WzddPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpO0wuYXJndW1lbnQoMT09PWUsXCJHU1VCIEV4dGVuc2lvbiBTdWJzdGl0dXRpb24gc3VidGFibGUgaWRlbnRpZmllci1mb3JtYXQgbXVzdCBiZSAxXCIpO3ZhciB0PXRoaXMucGFyc2VVU2hvcnQoKSxyPW5ldyBvZSh0aGlzLmRhdGEsdGhpcy5vZmZzZXQrdGhpcy5wYXJzZVVMb25nKCkpO3JldHVybntzdWJzdEZvcm1hdDoxLGxvb2t1cFR5cGU6dCxleHRlbnNpb246YXRbdF0uY2FsbChyKX19LGF0WzhdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiBMLmFyZ3VtZW50KDE9PT1lLFwiR1NVQiBSZXZlcnNlIENoYWluaW5nIENvbnRleHR1YWwgU2luZ2xlIFN1YnN0aXR1dGlvbiBTdWJ0YWJsZSBpZGVudGlmaWVyLWZvcm1hdCBtdXN0IGJlIDFcIikse3N1YnN0Rm9ybWF0OmUsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLGJhY2t0cmFja0NvdmVyYWdlOnRoaXMucGFyc2VMaXN0KG9lLnBvaW50ZXIob2UuY292ZXJhZ2UpKSxsb29rYWhlYWRDb3ZlcmFnZTp0aGlzLnBhcnNlTGlzdChvZS5wb2ludGVyKG9lLmNvdmVyYWdlKSksc3Vic3RpdHV0ZXM6dGhpcy5wYXJzZVVTaG9ydExpc3QoKX19O3ZhciBsdD1uZXcgQXJyYXkoOSk7bHRbMV09ZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT1lLnN1YnN0Rm9ybWF0P25ldyBKLlRhYmxlKFwic3Vic3RpdHV0aW9uVGFibGVcIixbe25hbWU6XCJzdWJzdEZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxfSx7bmFtZTpcImNvdmVyYWdlXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3IEouQ292ZXJhZ2UoZS5jb3ZlcmFnZSl9LHtuYW1lOlwiZGVsdGFHbHlwaElEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOmUuZGVsdGFHbHlwaElkfV0pOm5ldyBKLlRhYmxlKFwic3Vic3RpdHV0aW9uVGFibGVcIixbe25hbWU6XCJzdWJzdEZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToyfSx7bmFtZTpcImNvdmVyYWdlXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3IEouQ292ZXJhZ2UoZS5jb3ZlcmFnZSl9XS5jb25jYXQoSi51c2hvcnRMaXN0KFwic3Vic3RpdHV0ZVwiLGUuc3Vic3RpdHV0ZSkpKX0sbHRbM109ZnVuY3Rpb24oZSl7cmV0dXJuIEwuYXNzZXJ0KDE9PT1lLnN1YnN0Rm9ybWF0LFwiTG9va3VwIHR5cGUgMyBzdWJzdEZvcm1hdCBtdXN0IGJlIDEuXCIpLG5ldyBKLlRhYmxlKFwic3Vic3RpdHV0aW9uVGFibGVcIixbe25hbWU6XCJzdWJzdEZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxfSx7bmFtZTpcImNvdmVyYWdlXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3IEouQ292ZXJhZ2UoZS5jb3ZlcmFnZSl9XS5jb25jYXQoSi50YWJsZUxpc3QoXCJhbHRTZXRcIixlLmFsdGVybmF0ZVNldHMsZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBKLlRhYmxlKFwiYWx0ZXJuYXRlU2V0VGFibGVcIixKLnVzaG9ydExpc3QoXCJhbHRlcm5hdGVcIixlKSl9KSkpfSxsdFs0XT1mdW5jdGlvbihlKXtyZXR1cm4gTC5hc3NlcnQoMT09PWUuc3Vic3RGb3JtYXQsXCJMb29rdXAgdHlwZSA0IHN1YnN0Rm9ybWF0IG11c3QgYmUgMS5cIiksbmV3IEouVGFibGUoXCJzdWJzdGl0dXRpb25UYWJsZVwiLFt7bmFtZTpcInN1YnN0Rm9ybWF0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjF9LHtuYW1lOlwiY292ZXJhZ2VcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSi5Db3ZlcmFnZShlLmNvdmVyYWdlKX1dLmNvbmNhdChKLnRhYmxlTGlzdChcImxpZ1NldFwiLGUubGlnYXR1cmVTZXRzLGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgSi5UYWJsZShcImxpZ2F0dXJlU2V0VGFibGVcIixKLnRhYmxlTGlzdChcImxpZ2F0dXJlXCIsZSxmdW5jdGlvbihlKXtyZXR1cm4gbmV3IEouVGFibGUoXCJsaWdhdHVyZVRhYmxlXCIsW3tuYW1lOlwibGlnR2x5cGhcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ZS5saWdHbHlwaH1dLmNvbmNhdChKLnVzaG9ydExpc3QoXCJjb21wb25lbnRcIixlLmNvbXBvbmVudHMsZS5jb21wb25lbnRzLmxlbmd0aCsxKSkpfSkpfSkpKX07dmFyIHV0PXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPW5ldyBvZShlLHQ9dHx8MCksbj1yLnBhcnNlVmVyc2lvbigxKTtyZXR1cm4gTC5hcmd1bWVudCgxPT09bnx8MS4xPT09bixcIlVuc3VwcG9ydGVkIEdTVUIgdGFibGUgdmVyc2lvbi5cIiksMT09PW4/e3ZlcnNpb246bixzY3JpcHRzOnIucGFyc2VTY3JpcHRMaXN0KCksZmVhdHVyZXM6ci5wYXJzZUZlYXR1cmVMaXN0KCksbG9va3VwczpyLnBhcnNlTG9va3VwTGlzdChhdCl9Ont2ZXJzaW9uOm4sc2NyaXB0czpyLnBhcnNlU2NyaXB0TGlzdCgpLGZlYXR1cmVzOnIucGFyc2VGZWF0dXJlTGlzdCgpLGxvb2t1cHM6ci5wYXJzZUxvb2t1cExpc3QoYXQpLHZhcmlhdGlvbnM6ci5wYXJzZUZlYXR1cmVWYXJpYXRpb25zTGlzdCgpfX0sbWFrZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3IEouVGFibGUoXCJHU1VCXCIsW3tuYW1lOlwidmVyc2lvblwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjY1NTM2fSx7bmFtZTpcInNjcmlwdHNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSi5TY3JpcHRMaXN0KGUuc2NyaXB0cyl9LHtuYW1lOlwiZmVhdHVyZXNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSi5GZWF0dXJlTGlzdChlLmZlYXR1cmVzKX0se25hbWU6XCJsb29rdXBzXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3IEouTG9va3VwTGlzdChlLmxvb2t1cHMsbHQpfV0pfX07dmFyIGN0PXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPW5ldyBhZS5QYXJzZXIoZSx0KSxuPXIucGFyc2VVTG9uZygpO0wuYXJndW1lbnQoMT09PW4sXCJVbnN1cHBvcnRlZCBNRVRBIHRhYmxlIHZlcnNpb24uXCIpLHIucGFyc2VVTG9uZygpLHIucGFyc2VVTG9uZygpO2Zvcih2YXIgbz1yLnBhcnNlVUxvbmcoKSxpPXt9LGE9MDthPG87YSsrKXt2YXIgcz1yLnBhcnNlVGFnKCksbD1yLnBhcnNlVUxvbmcoKSx1PXIucGFyc2VVTG9uZygpLGM9UC5VVEY4KGUsdCtsLHUpO2lbc109Y31yZXR1cm4gaX0sbWFrZTpmdW5jdGlvbihlKXt2YXIgdD1PYmplY3Qua2V5cyhlKS5sZW5ndGgscj1cIlwiLG49MTYrMTIqdCxvPW5ldyBKLlRhYmxlKFwibWV0YVwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiVUxPTkdcIix2YWx1ZToxfSx7bmFtZTpcImZsYWdzXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJvZmZzZXRcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTpufSx7bmFtZTpcIm51bVRhZ3NcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTp0fV0pO2Zvcih2YXIgaSBpbiBlKXt2YXIgYT1yLmxlbmd0aDtyKz1lW2ldLG8uZmllbGRzLnB1c2goe25hbWU6XCJ0YWcgXCIraSx0eXBlOlwiVEFHXCIsdmFsdWU6aX0pLG8uZmllbGRzLnB1c2goe25hbWU6XCJvZmZzZXQgXCIraSx0eXBlOlwiVUxPTkdcIix2YWx1ZTpuK2F9KSxvLmZpZWxkcy5wdXNoKHtuYW1lOlwibGVuZ3RoIFwiK2ksdHlwZTpcIlVMT05HXCIsdmFsdWU6ZVtpXS5sZW5ndGh9KX1yZXR1cm4gby5maWVsZHMucHVzaCh7bmFtZTpcInN0cmluZ1Bvb2xcIix0eXBlOlwiQ0hBUkFSUkFZXCIsdmFsdWU6cn0pLG99fTtmdW5jdGlvbiBkdChlKXtyZXR1cm4gTWF0aC5sb2coZSkvTWF0aC5sb2coMil8MH1mdW5jdGlvbiBmdChlKXtmb3IoO2UubGVuZ3RoJTQhPTA7KWUucHVzaCgwKTtmb3IodmFyIHQ9MCxyPTA7cjxlLmxlbmd0aDtyKz00KXQrPShlW3JdPDwyNCkrKGVbcisxXTw8MTYpKyhlW3IrMl08PDgpK2VbciszXTtyZXR1cm4gdCU9TWF0aC5wb3coMiwzMil9ZnVuY3Rpb24gaHQoZSx0LHIsbil7cmV0dXJuIG5ldyBKLlJlY29yZChcIlRhYmxlIFJlY29yZFwiLFt7bmFtZTpcInRhZ1wiLHR5cGU6XCJUQUdcIix2YWx1ZTp2b2lkIDAhPT1lP2U6XCJcIn0se25hbWU6XCJjaGVja1N1bVwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOnZvaWQgMCE9PXQ/dDowfSx7bmFtZTpcIm9mZnNldFwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOnZvaWQgMCE9PXI/cjowfSx7bmFtZTpcImxlbmd0aFwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOnZvaWQgMCE9PW4/bjowfV0pfWZ1bmN0aW9uIHB0KGUpe3ZhciB0PW5ldyBKLlRhYmxlKFwic2ZudFwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiVEFHXCIsdmFsdWU6XCJPVFRPXCJ9LHtuYW1lOlwibnVtVGFibGVzXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwic2VhcmNoUmFuZ2VcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJlbnRyeVNlbGVjdG9yXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwicmFuZ2VTaGlmdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfV0pO3QudGFibGVzPWUsdC5udW1UYWJsZXM9ZS5sZW5ndGg7dmFyIHI9TWF0aC5wb3coMixkdCh0Lm51bVRhYmxlcykpO3Quc2VhcmNoUmFuZ2U9MTYqcix0LmVudHJ5U2VsZWN0b3I9ZHQociksdC5yYW5nZVNoaWZ0PTE2KnQubnVtVGFibGVzLXQuc2VhcmNoUmFuZ2U7Zm9yKHZhciBuPVtdLG89W10saT10LnNpemVPZigpK2h0KCkuc2l6ZU9mKCkqdC5udW1UYWJsZXM7aSU0IT0wOylpKz0xLG8ucHVzaCh7bmFtZTpcInBhZGRpbmdcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9KTtmb3IodmFyIGE9MDthPGUubGVuZ3RoO2ErPTEpe3ZhciBzPWVbYV07TC5hcmd1bWVudCg0PT09cy50YWJsZU5hbWUubGVuZ3RoLFwiVGFibGUgbmFtZVwiK3MudGFibGVOYW1lK1wiIGlzIGludmFsaWQuXCIpO3ZhciBsPXMuc2l6ZU9mKCksdT1odChzLnRhYmxlTmFtZSxmdChzLmVuY29kZSgpKSxpLGwpO2ZvcihuLnB1c2goe25hbWU6dS50YWcrXCIgVGFibGUgUmVjb3JkXCIsdHlwZTpcIlJFQ09SRFwiLHZhbHVlOnV9KSxvLnB1c2goe25hbWU6cy50YWJsZU5hbWUrXCIgdGFibGVcIix0eXBlOlwiUkVDT1JEXCIsdmFsdWU6c30pLGkrPWwsTC5hcmd1bWVudCghaXNOYU4oaSksXCJTb21ldGhpbmcgd2VudCB3cm9uZyBjYWxjdWxhdGluZyB0aGUgb2Zmc2V0LlwiKTtpJTQhPTA7KWkrPTEsby5wdXNoKHtuYW1lOlwicGFkZGluZ1wiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0pfXJldHVybiBuLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS52YWx1ZS50YWc+dC52YWx1ZS50YWc/MTotMX0pLHQuZmllbGRzPXQuZmllbGRzLmNvbmNhdChuKSx0LmZpZWxkcz10LmZpZWxkcy5jb25jYXQobyksdH1mdW5jdGlvbiB5dChlLHQscil7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKz0xKXt2YXIgbz1lLmNoYXJUb0dseXBoSW5kZXgodFtuXSk7aWYoMDxvKXJldHVybiBlLmdseXBocy5nZXQobykuZ2V0TWV0cmljcygpfXJldHVybiByfXZhciBtdD17bWFrZTpwdCxmb250VG9UYWJsZTpmdW5jdGlvbihlKXtmb3IodmFyIHQscj1bXSxuPVtdLG89W10saT1bXSxhPVtdLHM9W10sbD1bXSx1PTAsYz0wLGQ9MCxmPTAsaD0wLHA9MDtwPGUuZ2x5cGhzLmxlbmd0aDtwKz0xKXt2YXIgeT1lLmdseXBocy5nZXQocCksbT0wfHkudW5pY29kZTtpZihpc05hTih5LmFkdmFuY2VXaWR0aCkpdGhyb3cgbmV3IEVycm9yKFwiR2x5cGggXCIreS5uYW1lK1wiIChcIitwK1wiKTogYWR2YW5jZVdpZHRoIGlzIG5vdCBhIG51bWJlci5cIik7KG08dHx8dm9pZCAwPT09dCkmJjA8bSYmKHQ9bSksdTxtJiYodT1tKTt2YXIgZz1vdC5nZXRVbmljb2RlUmFuZ2UobSk7aWYoZzwzMiljfD0xPDxnO2Vsc2UgaWYoZzw2NClkfD0xPDxnLTMyO2Vsc2UgaWYoZzw5NilmfD0xPDxnLTY0O2Vsc2V7aWYoIShnPDEyMykpdGhyb3cgbmV3IEVycm9yKFwiVW5pY29kZSByYW5nZXMgYml0cyA+IDEyMyBhcmUgcmVzZXJ2ZWQgZm9yIGludGVybmFsIHVzYWdlXCIpO2h8PTE8PGctOTZ9aWYoXCIubm90ZGVmXCIhPT15Lm5hbWUpe3ZhciB2PXkuZ2V0TWV0cmljcygpO3IucHVzaCh2LnhNaW4pLG4ucHVzaCh2LnlNaW4pLG8ucHVzaCh2LnhNYXgpLGkucHVzaCh2LnlNYXgpLHMucHVzaCh2LmxlZnRTaWRlQmVhcmluZyksbC5wdXNoKHYucmlnaHRTaWRlQmVhcmluZyksYS5wdXNoKHkuYWR2YW5jZVdpZHRoKX19dmFyIGI9e3hNaW46TWF0aC5taW4uYXBwbHkobnVsbCxyKSx5TWluOk1hdGgubWluLmFwcGx5KG51bGwsbikseE1heDpNYXRoLm1heC5hcHBseShudWxsLG8pLHlNYXg6TWF0aC5tYXguYXBwbHkobnVsbCxpKSxhZHZhbmNlV2lkdGhNYXg6TWF0aC5tYXguYXBwbHkobnVsbCxhKSxhZHZhbmNlV2lkdGhBdmc6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAscj0wO3I8ZS5sZW5ndGg7cis9MSl0Kz1lW3JdO3JldHVybiB0L2UubGVuZ3RofShhKSxtaW5MZWZ0U2lkZUJlYXJpbmc6TWF0aC5taW4uYXBwbHkobnVsbCxzKSxtYXhMZWZ0U2lkZUJlYXJpbmc6TWF0aC5tYXguYXBwbHkobnVsbCxzKSxtaW5SaWdodFNpZGVCZWFyaW5nOk1hdGgubWluLmFwcGx5KG51bGwsbCl9O2IuYXNjZW5kZXI9ZS5hc2NlbmRlcixiLmRlc2NlbmRlcj1lLmRlc2NlbmRlcjt2YXIgXz1GZS5tYWtlKHtmbGFnczozLHVuaXRzUGVyRW06ZS51bml0c1BlckVtLHhNaW46Yi54TWluLHlNaW46Yi55TWluLHhNYXg6Yi54TWF4LHlNYXg6Yi55TWF4LGxvd2VzdFJlY1BQRU06MyxjcmVhdGVkVGltZXN0YW1wOmUuY3JlYXRlZFRpbWVzdGFtcH0pLHg9QmUubWFrZSh7YXNjZW5kZXI6Yi5hc2NlbmRlcixkZXNjZW5kZXI6Yi5kZXNjZW5kZXIsYWR2YW5jZVdpZHRoTWF4OmIuYWR2YW5jZVdpZHRoTWF4LG1pbkxlZnRTaWRlQmVhcmluZzpiLm1pbkxlZnRTaWRlQmVhcmluZyxtaW5SaWdodFNpZGVCZWFyaW5nOmIubWluUmlnaHRTaWRlQmVhcmluZyx4TWF4RXh0ZW50OmIubWF4TGVmdFNpZGVCZWFyaW5nKyhiLnhNYXgtYi54TWluKSxudW1iZXJPZkhNZXRyaWNzOmUuZ2x5cGhzLmxlbmd0aH0pLHc9emUubWFrZShlLmdseXBocy5sZW5ndGgpLGo9b3QubWFrZSh7eEF2Z0NoYXJXaWR0aDpNYXRoLnJvdW5kKGIuYWR2YW5jZVdpZHRoQXZnKSx1c1dlaWdodENsYXNzOmUudGFibGVzLm9zMi51c1dlaWdodENsYXNzLHVzV2lkdGhDbGFzczplLnRhYmxlcy5vczIudXNXaWR0aENsYXNzLHVzRmlyc3RDaGFySW5kZXg6dCx1c0xhc3RDaGFySW5kZXg6dSx1bFVuaWNvZGVSYW5nZTE6Yyx1bFVuaWNvZGVSYW5nZTI6ZCx1bFVuaWNvZGVSYW5nZTM6Zix1bFVuaWNvZGVSYW5nZTQ6aCxmc1NlbGVjdGlvbjplLnRhYmxlcy5vczIuZnNTZWxlY3Rpb24sc1R5cG9Bc2NlbmRlcjpiLmFzY2VuZGVyLHNUeXBvRGVzY2VuZGVyOmIuZGVzY2VuZGVyLHNUeXBvTGluZUdhcDowLHVzV2luQXNjZW50OmIueU1heCx1c1dpbkRlc2NlbnQ6TWF0aC5hYnMoYi55TWluKSx1bENvZGVQYWdlUmFuZ2UxOjEsc3hIZWlnaHQ6eXQoZSxcInh5dndcIix7eU1heDpNYXRoLnJvdW5kKGIuYXNjZW5kZXIvMil9KS55TWF4LHNDYXBIZWlnaHQ6eXQoZSxcIkhJS0xFRkpNTlRaQkRQUkFHT1FTVVZXWFlcIixiKS55TWF4LHVzRGVmYXVsdENoYXI6ZS5oYXNDaGFyKFwiIFwiKT8zMjowLHVzQnJlYWtDaGFyOmUuaGFzQ2hhcihcIiBcIik/MzI6MH0pLFM9R2UubWFrZShlLmdseXBocyksTT1zZS5tYWtlKGUuZ2x5cGhzKSxFPWUuZ2V0RW5nbGlzaE5hbWUoXCJmb250RmFtaWx5XCIpLFQ9ZS5nZXRFbmdsaXNoTmFtZShcImZvbnRTdWJmYW1pbHlcIiksTz1FK1wiIFwiK1QsQz1lLmdldEVuZ2xpc2hOYW1lKFwicG9zdFNjcmlwdE5hbWVcIik7Qz1DfHxFLnJlcGxhY2UoL1xccy9nLFwiXCIpK1wiLVwiK1Q7dmFyIEw9e307Zm9yKHZhciBQIGluIGUubmFtZXMpTFtQXT1lLm5hbWVzW1BdO0wudW5pcXVlSUR8fChMLnVuaXF1ZUlEPXtlbjplLmdldEVuZ2xpc2hOYW1lKFwibWFudWZhY3R1cmVyXCIpK1wiOlwiK099KSxMLnBvc3RTY3JpcHROYW1lfHwoTC5wb3N0U2NyaXB0TmFtZT17ZW46Q30pLEwucHJlZmVycmVkRmFtaWx5fHwoTC5wcmVmZXJyZWRGYW1pbHk9ZS5uYW1lcy5mb250RmFtaWx5KSxMLnByZWZlcnJlZFN1YmZhbWlseXx8KEwucHJlZmVycmVkU3ViZmFtaWx5PWUubmFtZXMuZm9udFN1YmZhbWlseSk7dmFyIEE9W10saz1ydC5tYWtlKEwsQSksUj0wPEEubGVuZ3RoP1ZlLm1ha2UoQSk6dm9pZCAwLEQ9aXQubWFrZSgpLEk9TmUubWFrZShlLmdseXBocyx7dmVyc2lvbjplLmdldEVuZ2xpc2hOYW1lKFwidmVyc2lvblwiKSxmdWxsTmFtZTpPLGZhbWlseU5hbWU6RSx3ZWlnaHROYW1lOlQscG9zdFNjcmlwdE5hbWU6Qyx1bml0c1BlckVtOmUudW5pdHNQZXJFbSxmb250QkJveDpbMCxiLnlNaW4sYi5hc2NlbmRlcixiLmFkdmFuY2VXaWR0aE1heF19KSxVPWUubWV0YXMmJjA8T2JqZWN0LmtleXMoZS5tZXRhcykubGVuZ3RoP2N0Lm1ha2UoZS5tZXRhcyk6dm9pZCAwLE49W18seCx3LGosayxNLEQsSSxTXTtSJiZOLnB1c2goUiksZS50YWJsZXMuZ3N1YiYmTi5wdXNoKHV0Lm1ha2UoZS50YWJsZXMuZ3N1YikpLFUmJk4ucHVzaChVKTtmb3IodmFyIEY9cHQoTiksQj1mdChGLmVuY29kZSgpKSxHPUYuZmllbGRzLFY9ITEsej0wO3o8Ry5sZW5ndGg7eis9MSlpZihcImhlYWQgdGFibGVcIj09PUdbel0ubmFtZSl7R1t6XS52YWx1ZS5jaGVja1N1bUFkanVzdG1lbnQ9Mjk4MTE0NjU1NC1CLFY9ITA7YnJlYWt9aWYoIVYpdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGZpbmQgaGVhZCB0YWJsZSB3aXRoIGNoZWNrU3VtIHRvIGFkanVzdC5cIik7cmV0dXJuIEZ9LGNvbXB1dGVDaGVja1N1bTpmdH07ZnVuY3Rpb24gZ3QoZSx0KXtmb3IodmFyIHI9MCxuPWUubGVuZ3RoLTE7cjw9bjspe3ZhciBvPXIrbj4+PjEsaT1lW29dLnRhZztpZihpPT09dClyZXR1cm4gbztpPHQ/cj0xK286bj1vLTF9cmV0dXJuLXItMX1mdW5jdGlvbiB2dChlLHQpe2Zvcih2YXIgcj0wLG49ZS5sZW5ndGgtMTtyPD1uOyl7dmFyIG89cituPj4+MSxpPWVbb107aWYoaT09PXQpcmV0dXJuIG87aTx0P3I9MStvOm49by0xfXJldHVybi1yLTF9ZnVuY3Rpb24gYnQoZSx0KXtmb3IodmFyIHIsbj0wLG89ZS5sZW5ndGgtMTtuPD1vOyl7dmFyIGk9bitvPj4+MSxhPShyPWVbaV0pLnN0YXJ0O2lmKGE9PT10KXJldHVybiByO2E8dD9uPTEraTpvPWktMX1pZigwPG4pcmV0dXJuIHQ+KHI9ZVtuLTFdKS5lbmQ/MDpyfWZ1bmN0aW9uIF90KGUsdCl7dGhpcy5mb250PWUsdGhpcy50YWJsZU5hbWU9dH1mdW5jdGlvbiB4dChlKXtfdC5jYWxsKHRoaXMsZSxcImdwb3NcIil9ZnVuY3Rpb24gd3QoZSl7X3QuY2FsbCh0aGlzLGUsXCJnc3ViXCIpfWZ1bmN0aW9uIGp0KGUsdCl7dmFyIHI9ZS5sZW5ndGg7aWYociE9PXQubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgbj0wO248cjtuKyspaWYoZVtuXSE9PXRbbl0pcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gU3QoZSx0LHIpe2Zvcih2YXIgbj1lLnN1YnRhYmxlcyxvPTA7bzxuLmxlbmd0aDtvKyspe3ZhciBpPW5bb107aWYoaS5zdWJzdEZvcm1hdD09PXQpcmV0dXJuIGl9aWYocilyZXR1cm4gbi5wdXNoKHIpLHJ9ZnVuY3Rpb24gTXQoZSl7Zm9yKHZhciB0PW5ldyBBcnJheUJ1ZmZlcihlLmxlbmd0aCkscj1uZXcgVWludDhBcnJheSh0KSxuPTA7bjxlLmxlbmd0aDsrK24pcltuXT1lW25dO3JldHVybiB0fWZ1bmN0aW9uIEV0KGUsdCl7aWYoIWUpdGhyb3cgdH1mdW5jdGlvbiBUdChlLHQscixuLG8pe3ZhciBpO3JldHVybiBpPTA8KHQmbik/KGk9ZS5wYXJzZUJ5dGUoKSwwPT0odCZvKSYmKGk9LWkpLHIraSk6MDwodCZvKT9yOnIrZS5wYXJzZVNob3J0KCl9ZnVuY3Rpb24gT3QoZSx0LHIpe3ZhciBuLG8saT1uZXcgYWUuUGFyc2VyKHQscik7aWYoZS5udW1iZXJPZkNvbnRvdXJzPWkucGFyc2VTaG9ydCgpLGUuX3hNaW49aS5wYXJzZVNob3J0KCksZS5feU1pbj1pLnBhcnNlU2hvcnQoKSxlLl94TWF4PWkucGFyc2VTaG9ydCgpLGUuX3lNYXg9aS5wYXJzZVNob3J0KCksMDxlLm51bWJlck9mQ29udG91cnMpe2Zvcih2YXIgYT1lLmVuZFBvaW50SW5kaWNlcz1bXSxzPTA7czxlLm51bWJlck9mQ29udG91cnM7cys9MSlhLnB1c2goaS5wYXJzZVVTaG9ydCgpKTtlLmluc3RydWN0aW9uTGVuZ3RoPWkucGFyc2VVU2hvcnQoKSxlLmluc3RydWN0aW9ucz1bXTtmb3IodmFyIGw9MDtsPGUuaW5zdHJ1Y3Rpb25MZW5ndGg7bCs9MSllLmluc3RydWN0aW9ucy5wdXNoKGkucGFyc2VCeXRlKCkpO3ZhciB1PWFbYS5sZW5ndGgtMV0rMTtuPVtdO2Zvcih2YXIgYz0wO2M8dTtjKz0xKWlmKG89aS5wYXJzZUJ5dGUoKSxuLnB1c2gobyksMDwoOCZvKSlmb3IodmFyIGQ9aS5wYXJzZUJ5dGUoKSxmPTA7ZjxkO2YrPTEpbi5wdXNoKG8pLGMrPTE7aWYoTC5hcmd1bWVudChuLmxlbmd0aD09PXUsXCJCYWQgZmxhZ3MuXCIpLDA8YS5sZW5ndGgpe3ZhciBoLHA9W107aWYoMDx1KXtmb3IodmFyIHk9MDt5PHU7eSs9MSlvPW5beV0sKGg9e30pLm9uQ3VydmU9ISEoMSZvKSxoLmxhc3RQb2ludE9mQ29udG91cj0wPD1hLmluZGV4T2YoeSkscC5wdXNoKGgpO2Zvcih2YXIgbT0wLGc9MDtnPHU7Zys9MSlvPW5bZ10sKGg9cFtnXSkueD1UdChpLG8sbSwyLDE2KSxtPWgueDtmb3IodmFyIHY9MCxiPTA7Yjx1O2IrPTEpbz1uW2JdLChoPXBbYl0pLnk9VHQoaSxvLHYsNCwzMiksdj1oLnl9ZS5wb2ludHM9cH1lbHNlIGUucG9pbnRzPVtdfWVsc2UgaWYoMD09PWUubnVtYmVyT2ZDb250b3VycyllLnBvaW50cz1bXTtlbHNle2UuaXNDb21wb3NpdGU9ITAsZS5wb2ludHM9W10sZS5jb21wb25lbnRzPVtdO2Zvcih2YXIgXz0hMDtfOyl7bj1pLnBhcnNlVVNob3J0KCk7dmFyIHg9e2dseXBoSW5kZXg6aS5wYXJzZVVTaG9ydCgpLHhTY2FsZToxLHNjYWxlMDE6MCxzY2FsZTEwOjAseVNjYWxlOjEsZHg6MCxkeTowfTswPCgxJm4pPzA8KDImbik/KHguZHg9aS5wYXJzZVNob3J0KCkseC5keT1pLnBhcnNlU2hvcnQoKSk6eC5tYXRjaGVkUG9pbnRzPVtpLnBhcnNlVVNob3J0KCksaS5wYXJzZVVTaG9ydCgpXTowPCgyJm4pPyh4LmR4PWkucGFyc2VDaGFyKCkseC5keT1pLnBhcnNlQ2hhcigpKTp4Lm1hdGNoZWRQb2ludHM9W2kucGFyc2VCeXRlKCksaS5wYXJzZUJ5dGUoKV0sMDwoOCZuKT94LnhTY2FsZT14LnlTY2FsZT1pLnBhcnNlRjJEb3QxNCgpOjA8KDY0Jm4pPyh4LnhTY2FsZT1pLnBhcnNlRjJEb3QxNCgpLHgueVNjYWxlPWkucGFyc2VGMkRvdDE0KCkpOjA8KDEyOCZuKSYmKHgueFNjYWxlPWkucGFyc2VGMkRvdDE0KCkseC5zY2FsZTAxPWkucGFyc2VGMkRvdDE0KCkseC5zY2FsZTEwPWkucGFyc2VGMkRvdDE0KCkseC55U2NhbGU9aS5wYXJzZUYyRG90MTQoKSksZS5jb21wb25lbnRzLnB1c2goeCksXz0hISgzMiZuKX1pZigyNTYmbil7ZS5pbnN0cnVjdGlvbkxlbmd0aD1pLnBhcnNlVVNob3J0KCksZS5pbnN0cnVjdGlvbnM9W107Zm9yKHZhciB3PTA7dzxlLmluc3RydWN0aW9uTGVuZ3RoO3crPTEpZS5pbnN0cnVjdGlvbnMucHVzaChpLnBhcnNlQnl0ZSgpKX19fWZ1bmN0aW9uIEN0KGUsdCl7Zm9yKHZhciByPVtdLG49MDtuPGUubGVuZ3RoO24rPTEpe3ZhciBvPWVbbl0saT17eDp0LnhTY2FsZSpvLngrdC5zY2FsZTAxKm8ueSt0LmR4LHk6dC5zY2FsZTEwKm8ueCt0LnlTY2FsZSpvLnkrdC5keSxvbkN1cnZlOm8ub25DdXJ2ZSxsYXN0UG9pbnRPZkNvbnRvdXI6by5sYXN0UG9pbnRPZkNvbnRvdXJ9O3IucHVzaChpKX1yZXR1cm4gcn1mdW5jdGlvbiBMdChlKXt2YXIgdD1uZXcgRDtpZighZSlyZXR1cm4gdDtmb3IodmFyIHI9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9W10sbj0wO248ZS5sZW5ndGg7bis9MSl7dmFyIG89ZVtuXTtyLnB1c2gobyksby5sYXN0UG9pbnRPZkNvbnRvdXImJih0LnB1c2gocikscj1bXSl9cmV0dXJuIEwuYXJndW1lbnQoMD09PXIubGVuZ3RoLFwiVGhlcmUgYXJlIHN0aWxsIHBvaW50cyBsZWZ0IGluIHRoZSBjdXJyZW50IGNvbnRvdXIuXCIpLHR9KGUpLG49MDtuPHIubGVuZ3RoOysrbil7dmFyIG89cltuXSxpPW51bGwsYT1vW28ubGVuZ3RoLTFdLHM9b1swXTtpZihhLm9uQ3VydmUpdC5tb3ZlVG8oYS54LGEueSk7ZWxzZSBpZihzLm9uQ3VydmUpdC5tb3ZlVG8ocy54LHMueSk7ZWxzZXt2YXIgbD17eDouNSooYS54K3MueCkseTouNSooYS55K3MueSl9O3QubW92ZVRvKGwueCxsLnkpfWZvcih2YXIgdT0wO3U8by5sZW5ndGg7Kyt1KWlmKGk9YSxhPXMscz1vWyh1KzEpJW8ubGVuZ3RoXSxhLm9uQ3VydmUpdC5saW5lVG8oYS54LGEueSk7ZWxzZXt2YXIgYz1zO2kub25DdXJ2ZXx8e3g6LjUqKGEueCtpLngpLHk6LjUqKGEueStpLnkpfSxzLm9uQ3VydmV8fChjPXt4Oi41KihhLngrcy54KSx5Oi41KihhLnkrcy55KX0pLHQucXVhZHJhdGljQ3VydmVUbyhhLngsYS55LGMueCxjLnkpfXQuY2xvc2VQYXRoKCl9cmV0dXJuIHR9ZnVuY3Rpb24gUHQoZSx0KXtpZih0LmlzQ29tcG9zaXRlKWZvcih2YXIgcj0wO3I8dC5jb21wb25lbnRzLmxlbmd0aDtyKz0xKXt2YXIgbj10LmNvbXBvbmVudHNbcl0sbz1lLmdldChuLmdseXBoSW5kZXgpO2lmKG8uZ2V0UGF0aCgpLG8ucG9pbnRzKXt2YXIgaT12b2lkIDA7aWYodm9pZCAwPT09bi5tYXRjaGVkUG9pbnRzKWk9Q3Qoby5wb2ludHMsbik7ZWxzZXtpZihuLm1hdGNoZWRQb2ludHNbMF0+dC5wb2ludHMubGVuZ3RoLTF8fG4ubWF0Y2hlZFBvaW50c1sxXT5vLnBvaW50cy5sZW5ndGgtMSl0aHJvdyBFcnJvcihcIk1hdGNoZWQgcG9pbnRzIG91dCBvZiByYW5nZSBpbiBcIit0Lm5hbWUpO3ZhciBhPXQucG9pbnRzW24ubWF0Y2hlZFBvaW50c1swXV0scz1vLnBvaW50c1tuLm1hdGNoZWRQb2ludHNbMV1dLGw9e3hTY2FsZTpuLnhTY2FsZSxzY2FsZTAxOm4uc2NhbGUwMSxzY2FsZTEwOm4uc2NhbGUxMCx5U2NhbGU6bi55U2NhbGUsZHg6MCxkeTowfTtzPUN0KFtzXSxsKVswXSxsLmR4PWEueC1zLngsbC5keT1hLnktcy55LGk9Q3Qoby5wb2ludHMsbCl9dC5wb2ludHM9dC5wb2ludHMuY29uY2F0KGkpfX1yZXR1cm4gTHQodC5wb2ludHMpfSh4dC5wcm90b3R5cGU9X3QucHJvdG90eXBlPXtzZWFyY2hUYWc6Z3QsYmluU2VhcmNoOnZ0LGdldFRhYmxlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZm9udC50YWJsZXNbdGhpcy50YWJsZU5hbWVdO3JldHVybiF0JiZlJiYodD10aGlzLmZvbnQudGFibGVzW3RoaXMudGFibGVOYW1lXT10aGlzLmNyZWF0ZURlZmF1bHRUYWJsZSgpKSx0fSxnZXRTY3JpcHROYW1lczpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZ2V0VGFibGUoKTtyZXR1cm4gZT9lLnNjcmlwdHMubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnRhZ30pOltdfSxnZXREZWZhdWx0U2NyaXB0TmFtZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZ2V0VGFibGUoKTtpZihlKXtmb3IodmFyIHQ9ITEscj0wO3I8ZS5zY3JpcHRzLmxlbmd0aDtyKyspe3ZhciBuPWUuc2NyaXB0c1tyXS50YWc7aWYoXCJERkxUXCI9PT1uKXJldHVybiBuO1wibGF0blwiPT09biYmKHQ9ITApfXJldHVybiB0P1wibGF0blwiOnZvaWQgMH19LGdldFNjcmlwdFRhYmxlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5nZXRUYWJsZSh0KTtpZihyKXtlPWV8fFwiREZMVFwiO3ZhciBuPXIuc2NyaXB0cyxvPWd0KHIuc2NyaXB0cyxlKTtpZigwPD1vKXJldHVybiBuW29dLnNjcmlwdDtpZih0KXt2YXIgaT17dGFnOmUsc2NyaXB0OntkZWZhdWx0TGFuZ1N5czp7cmVzZXJ2ZWQ6MCxyZXFGZWF0dXJlSW5kZXg6NjU1MzUsZmVhdHVyZUluZGV4ZXM6W119LGxhbmdTeXNSZWNvcmRzOltdfX07cmV0dXJuIG4uc3BsaWNlKC0xLW8sMCxpKSxpLnNjcmlwdH19fSxnZXRMYW5nU3lzVGFibGU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMuZ2V0U2NyaXB0VGFibGUoZSxyKTtpZihuKXtpZighdHx8XCJkZmx0XCI9PT10fHxcIkRGTFRcIj09PXQpcmV0dXJuIG4uZGVmYXVsdExhbmdTeXM7dmFyIG89Z3Qobi5sYW5nU3lzUmVjb3Jkcyx0KTtpZigwPD1vKXJldHVybiBuLmxhbmdTeXNSZWNvcmRzW29dLmxhbmdTeXM7aWYocil7dmFyIGk9e3RhZzp0LGxhbmdTeXM6e3Jlc2VydmVkOjAscmVxRmVhdHVyZUluZGV4OjY1NTM1LGZlYXR1cmVJbmRleGVzOltdfX07cmV0dXJuIG4ubGFuZ1N5c1JlY29yZHMuc3BsaWNlKC0xLW8sMCxpKSxpLmxhbmdTeXN9fX0sZ2V0RmVhdHVyZVRhYmxlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPXRoaXMuZ2V0TGFuZ1N5c1RhYmxlKGUsdCxuKTtpZihvKXtmb3IodmFyIGksYT1vLmZlYXR1cmVJbmRleGVzLHM9dGhpcy5mb250LnRhYmxlc1t0aGlzLnRhYmxlTmFtZV0uZmVhdHVyZXMsbD0wO2w8YS5sZW5ndGg7bCsrKWlmKChpPXNbYVtsXV0pLnRhZz09PXIpcmV0dXJuIGkuZmVhdHVyZTtpZihuKXt2YXIgdT1zLmxlbmd0aDtyZXR1cm4gTC5hc3NlcnQoMD09PXV8fHI+PXNbdS0xXS50YWcsXCJGZWF0dXJlcyBtdXN0IGJlIGFkZGVkIGluIGFscGhhYmV0aWNhbCBvcmRlci5cIiksaT17dGFnOnIsZmVhdHVyZTp7cGFyYW1zOjAsbG9va3VwTGlzdEluZGV4ZXM6W119fSxzLnB1c2goaSksYS5wdXNoKHUpLGkuZmVhdHVyZX19fSxnZXRMb29rdXBUYWJsZXM6ZnVuY3Rpb24oZSx0LHIsbixvKXt2YXIgaT10aGlzLmdldEZlYXR1cmVUYWJsZShlLHQscixvKSxhPVtdO2lmKGkpe2Zvcih2YXIgcyxsPWkubG9va3VwTGlzdEluZGV4ZXMsdT10aGlzLmZvbnQudGFibGVzW3RoaXMudGFibGVOYW1lXS5sb29rdXBzLGM9MDtjPGwubGVuZ3RoO2MrKykocz11W2xbY11dKS5sb29rdXBUeXBlPT09biYmYS5wdXNoKHMpO2lmKDA9PT1hLmxlbmd0aCYmbyl7cz17bG9va3VwVHlwZTpuLGxvb2t1cEZsYWc6MCxzdWJ0YWJsZXM6W10sbWFya0ZpbHRlcmluZ1NldDp2b2lkIDB9O3ZhciBkPXUubGVuZ3RoO3JldHVybiB1LnB1c2gocyksbC5wdXNoKGQpLFtzXX19cmV0dXJuIGF9LGdldEdseXBoQ2xhc3M6ZnVuY3Rpb24oZSx0KXtzd2l0Y2goZS5mb3JtYXQpe2Nhc2UgMTpyZXR1cm4gZS5zdGFydEdseXBoPD10JiZ0PGUuc3RhcnRHbHlwaCtlLmNsYXNzZXMubGVuZ3RoP2UuY2xhc3Nlc1t0LWUuc3RhcnRHbHlwaF06MDtjYXNlIDI6dmFyIHI9YnQoZS5yYW5nZXMsdCk7cmV0dXJuIHI/ci5jbGFzc0lkOjB9fSxnZXRDb3ZlcmFnZUluZGV4OmZ1bmN0aW9uKGUsdCl7c3dpdGNoKGUuZm9ybWF0KXtjYXNlIDE6dmFyIHI9dnQoZS5nbHlwaHMsdCk7cmV0dXJuIDA8PXI/cjotMTtjYXNlIDI6dmFyIG49YnQoZS5yYW5nZXMsdCk7cmV0dXJuIG4/bi5pbmRleCt0LW4uc3RhcnQ6LTF9fSxleHBhbmRDb3ZlcmFnZTpmdW5jdGlvbihlKXtpZigxPT09ZS5mb3JtYXQpcmV0dXJuIGUuZ2x5cGhzO2Zvcih2YXIgdD1bXSxyPWUucmFuZ2VzLG49MDtuPHIubGVuZ3RoO24rKylmb3IodmFyIG89cltuXSxpPW8uc3RhcnQsYT1vLmVuZCxzPWk7czw9YTtzKyspdC5wdXNoKHMpO3JldHVybiB0fX0pLmluaXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldERlZmF1bHRTY3JpcHROYW1lKCk7dGhpcy5kZWZhdWx0S2VybmluZ1RhYmxlcz10aGlzLmdldEtlcm5pbmdUYWJsZXMoZSl9LHh0LnByb3RvdHlwZS5nZXRLZXJuaW5nVmFsdWU9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKWZvcih2YXIgbz1lW25dLnN1YnRhYmxlcyxpPTA7aTxvLmxlbmd0aDtpKyspe3ZhciBhPW9baV0scz10aGlzLmdldENvdmVyYWdlSW5kZXgoYS5jb3ZlcmFnZSx0KTtpZighKHM8MCkpc3dpdGNoKGEucG9zRm9ybWF0KXtjYXNlIDE6Zm9yKHZhciBsPWEucGFpclNldHNbc10sdT0wO3U8bC5sZW5ndGg7dSsrKXt2YXIgYz1sW3VdO2lmKGMuc2Vjb25kR2x5cGg9PT1yKXJldHVybiBjLnZhbHVlMSYmYy52YWx1ZTEueEFkdmFuY2V8fDB9YnJlYWs7Y2FzZSAyOnZhciBkPXRoaXMuZ2V0R2x5cGhDbGFzcyhhLmNsYXNzRGVmMSx0KSxmPXRoaXMuZ2V0R2x5cGhDbGFzcyhhLmNsYXNzRGVmMixyKSxoPWEuY2xhc3NSZWNvcmRzW2RdW2ZdO3JldHVybiBoLnZhbHVlMSYmaC52YWx1ZTEueEFkdmFuY2V8fDB9fXJldHVybiAwfSx4dC5wcm90b3R5cGUuZ2V0S2VybmluZ1RhYmxlcz1mdW5jdGlvbihlLHQpe2lmKHRoaXMuZm9udC50YWJsZXMuZ3BvcylyZXR1cm4gdGhpcy5nZXRMb29rdXBUYWJsZXMoZSx0LFwia2VyblwiLDIpfSwod3QucHJvdG90eXBlPV90LnByb3RvdHlwZSkuY3JlYXRlRGVmYXVsdFRhYmxlPWZ1bmN0aW9uKCl7cmV0dXJue3ZlcnNpb246MSxzY3JpcHRzOlt7dGFnOlwiREZMVFwiLHNjcmlwdDp7ZGVmYXVsdExhbmdTeXM6e3Jlc2VydmVkOjAscmVxRmVhdHVyZUluZGV4OjY1NTM1LGZlYXR1cmVJbmRleGVzOltdfSxsYW5nU3lzUmVjb3JkczpbXX19XSxmZWF0dXJlczpbXSxsb29rdXBzOltdfX0sd3QucHJvdG90eXBlLmdldFNpbmdsZT1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPVtdLG89dGhpcy5nZXRMb29rdXBUYWJsZXModCxyLGUsMSksaT0wO2k8by5sZW5ndGg7aSsrKWZvcih2YXIgYT1vW2ldLnN1YnRhYmxlcyxzPTA7czxhLmxlbmd0aDtzKyspe3ZhciBsPWFbc10sdT10aGlzLmV4cGFuZENvdmVyYWdlKGwuY292ZXJhZ2UpLGM9dm9pZCAwO2lmKDE9PT1sLnN1YnN0Rm9ybWF0KXt2YXIgZD1sLmRlbHRhR2x5cGhJZDtmb3IoYz0wO2M8dS5sZW5ndGg7YysrKXt2YXIgZj11W2NdO24ucHVzaCh7c3ViOmYsYnk6ZitkfSl9fWVsc2V7dmFyIGg9bC5zdWJzdGl0dXRlO2ZvcihjPTA7Yzx1Lmxlbmd0aDtjKyspbi5wdXNoKHtzdWI6dVtjXSxieTpoW2NdfSl9fXJldHVybiBufSx3dC5wcm90b3R5cGUuZ2V0QWx0ZXJuYXRlcz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPVtdLG89dGhpcy5nZXRMb29rdXBUYWJsZXModCxyLGUsMyksaT0wO2k8by5sZW5ndGg7aSsrKWZvcih2YXIgYT1vW2ldLnN1YnRhYmxlcyxzPTA7czxhLmxlbmd0aDtzKyspZm9yKHZhciBsPWFbc10sdT10aGlzLmV4cGFuZENvdmVyYWdlKGwuY292ZXJhZ2UpLGM9bC5hbHRlcm5hdGVTZXRzLGQ9MDtkPHUubGVuZ3RoO2QrKyluLnB1c2goe3N1Yjp1W2RdLGJ5OmNbZF19KTtyZXR1cm4gbn0sd3QucHJvdG90eXBlLmdldExpZ2F0dXJlcz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPVtdLG89dGhpcy5nZXRMb29rdXBUYWJsZXModCxyLGUsNCksaT0wO2k8by5sZW5ndGg7aSsrKWZvcih2YXIgYT1vW2ldLnN1YnRhYmxlcyxzPTA7czxhLmxlbmd0aDtzKyspZm9yKHZhciBsPWFbc10sdT10aGlzLmV4cGFuZENvdmVyYWdlKGwuY292ZXJhZ2UpLGM9bC5saWdhdHVyZVNldHMsZD0wO2Q8dS5sZW5ndGg7ZCsrKWZvcih2YXIgZj11W2RdLGg9Y1tkXSxwPTA7cDxoLmxlbmd0aDtwKyspe3ZhciB5PWhbcF07bi5wdXNoKHtzdWI6W2ZdLmNvbmNhdCh5LmNvbXBvbmVudHMpLGJ5OnkubGlnR2x5cGh9KX1yZXR1cm4gbn0sd3QucHJvdG90eXBlLmFkZFNpbmdsZT1mdW5jdGlvbihlLHQscixuKXt2YXIgbz1TdCh0aGlzLmdldExvb2t1cFRhYmxlcyhyLG4sZSwxLCEwKVswXSwyLHtzdWJzdEZvcm1hdDoyLGNvdmVyYWdlOntmb3JtYXQ6MSxnbHlwaHM6W119LHN1YnN0aXR1dGU6W119KTtMLmFzc2VydCgxPT09by5jb3ZlcmFnZS5mb3JtYXQsXCJMaWdhdHVyZTogdW5hYmxlIHRvIG1vZGlmeSBjb3ZlcmFnZSB0YWJsZSBmb3JtYXQgXCIrby5jb3ZlcmFnZS5mb3JtYXQpO3ZhciBpPXQuc3ViLGE9dGhpcy5iaW5TZWFyY2goby5jb3ZlcmFnZS5nbHlwaHMsaSk7YTwwJiYoYT0tMS1hLG8uY292ZXJhZ2UuZ2x5cGhzLnNwbGljZShhLDAsaSksby5zdWJzdGl0dXRlLnNwbGljZShhLDAsMCkpLG8uc3Vic3RpdHV0ZVthXT10LmJ5fSx3dC5wcm90b3R5cGUuYWRkQWx0ZXJuYXRlPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPVN0KHRoaXMuZ2V0TG9va3VwVGFibGVzKHIsbixlLDMsITApWzBdLDEse3N1YnN0Rm9ybWF0OjEsY292ZXJhZ2U6e2Zvcm1hdDoxLGdseXBoczpbXX0sYWx0ZXJuYXRlU2V0czpbXX0pO0wuYXNzZXJ0KDE9PT1vLmNvdmVyYWdlLmZvcm1hdCxcIkxpZ2F0dXJlOiB1bmFibGUgdG8gbW9kaWZ5IGNvdmVyYWdlIHRhYmxlIGZvcm1hdCBcIitvLmNvdmVyYWdlLmZvcm1hdCk7dmFyIGk9dC5zdWIsYT10aGlzLmJpblNlYXJjaChvLmNvdmVyYWdlLmdseXBocyxpKTthPDAmJihhPS0xLWEsby5jb3ZlcmFnZS5nbHlwaHMuc3BsaWNlKGEsMCxpKSxvLmFsdGVybmF0ZVNldHMuc3BsaWNlKGEsMCwwKSksby5hbHRlcm5hdGVTZXRzW2FdPXQuYnl9LHd0LnByb3RvdHlwZS5hZGRMaWdhdHVyZT1mdW5jdGlvbihlLHQscixuKXt2YXIgbz10aGlzLmdldExvb2t1cFRhYmxlcyhyLG4sZSw0LCEwKVswXSxpPW8uc3VidGFibGVzWzBdO2l8fChpPXtzdWJzdEZvcm1hdDoxLGNvdmVyYWdlOntmb3JtYXQ6MSxnbHlwaHM6W119LGxpZ2F0dXJlU2V0czpbXX0sby5zdWJ0YWJsZXNbMF09aSksTC5hc3NlcnQoMT09PWkuY292ZXJhZ2UuZm9ybWF0LFwiTGlnYXR1cmU6IHVuYWJsZSB0byBtb2RpZnkgY292ZXJhZ2UgdGFibGUgZm9ybWF0IFwiK2kuY292ZXJhZ2UuZm9ybWF0KTt2YXIgYT10LnN1YlswXSxzPXQuc3ViLnNsaWNlKDEpLGw9e2xpZ0dseXBoOnQuYnksY29tcG9uZW50czpzfSx1PXRoaXMuYmluU2VhcmNoKGkuY292ZXJhZ2UuZ2x5cGhzLGEpO2lmKDA8PXUpe2Zvcih2YXIgYz1pLmxpZ2F0dXJlU2V0c1t1XSxkPTA7ZDxjLmxlbmd0aDtkKyspaWYoanQoY1tkXS5jb21wb25lbnRzLHMpKXJldHVybjtjLnB1c2gobCl9ZWxzZSB1PS0xLXUsaS5jb3ZlcmFnZS5nbHlwaHMuc3BsaWNlKHUsMCxhKSxpLmxpZ2F0dXJlU2V0cy5zcGxpY2UodSwwLFtsXSl9LHd0LnByb3RvdHlwZS5nZXRGZWF0dXJlPWZ1bmN0aW9uKGUsdCxyKXtpZigvc3NcXGRcXGQvLnRlc3QoZSkpcmV0dXJuIHRoaXMuZ2V0U2luZ2xlKGUsdCxyKTtzd2l0Y2goZSl7Y2FzZVwiYWFsdFwiOmNhc2VcInNhbHRcIjpyZXR1cm4gdGhpcy5nZXRTaW5nbGUoZSx0LHIpLmNvbmNhdCh0aGlzLmdldEFsdGVybmF0ZXMoZSx0LHIpKTtjYXNlXCJkbGlnXCI6Y2FzZVwibGlnYVwiOmNhc2VcInJsaWdcIjpyZXR1cm4gdGhpcy5nZXRMaWdhdHVyZXMoZSx0LHIpfX0sd3QucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlLHQscixuKXtpZigvc3NcXGRcXGQvLnRlc3QoZSkpcmV0dXJuIHRoaXMuYWRkU2luZ2xlKGUsdCxyLG4pO3N3aXRjaChlKXtjYXNlXCJhYWx0XCI6Y2FzZVwic2FsdFwiOnJldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0LmJ5P3RoaXMuYWRkU2luZ2xlKGUsdCxyLG4pOnRoaXMuYWRkQWx0ZXJuYXRlKGUsdCxyLG4pO2Nhc2VcImRsaWdcIjpjYXNlXCJsaWdhXCI6Y2FzZVwicmxpZ1wiOnJldHVybiB0aGlzLmFkZExpZ2F0dXJlKGUsdCxyLG4pfX07dmFyIEF0LGt0LFJ0LER0LEl0PXtnZXRQYXRoOkx0LHBhcnNlOmZ1bmN0aW9uKGUsdCxyLG4pe2Zvcih2YXIgbz1uZXcgX2UuR2x5cGhTZXQobiksaT0wO2k8ci5sZW5ndGgtMTtpKz0xKXt2YXIgYT1yW2ldO2EhPT1yW2krMV0/by5wdXNoKGksX2UudHRmR2x5cGhMb2FkZXIobixpLE90LGUsdCthLFB0KSk6by5wdXNoKGksX2UuZ2x5cGhMb2FkZXIobixpKSl9cmV0dXJuIG99fTtmdW5jdGlvbiBVdChlKXt0aGlzLmZvbnQ9ZSx0aGlzLmdldENvbW1hbmRzPWZ1bmN0aW9uKGUpe3JldHVybiBJdC5nZXRQYXRoKGUpLmNvbW1hbmRzfSx0aGlzLl9mcGdtU3RhdGU9dGhpcy5fcHJlcFN0YXRlPXZvaWQgMCx0aGlzLl9lcnJvclN0YXRlPTB9ZnVuY3Rpb24gTnQoZSl7cmV0dXJuIGV9ZnVuY3Rpb24gRnQoZSl7cmV0dXJuIE1hdGguc2lnbihlKSpNYXRoLnJvdW5kKE1hdGguYWJzKGUpKX1mdW5jdGlvbiBCdChlKXtyZXR1cm4gTWF0aC5zaWduKGUpKk1hdGgucm91bmQoTWF0aC5hYnMoMiplKSkvMn1mdW5jdGlvbiBHdChlKXtyZXR1cm4gTWF0aC5zaWduKGUpKihNYXRoLnJvdW5kKE1hdGguYWJzKGUpKy41KS0uNSl9ZnVuY3Rpb24gVnQoZSl7cmV0dXJuIE1hdGguc2lnbihlKSpNYXRoLmNlaWwoTWF0aC5hYnMoZSkpfWZ1bmN0aW9uIHp0KGUpe3JldHVybiBNYXRoLnNpZ24oZSkqTWF0aC5mbG9vcihNYXRoLmFicyhlKSl9ZnVuY3Rpb24gSHQoZSl7dmFyIHQ9dGhpcy5zclBlcmlvZCxyPXRoaXMuc3JQaGFzZSxuPTE7cmV0dXJuIGU8MCYmKGU9LWUsbj0tMSksZSs9dGhpcy5zclRocmVzaG9sZC1yLGU9TWF0aC50cnVuYyhlL3QpKnQsKGUrPXIpPDA/cipuOmUqbn12YXIgV3Q9e3g6MSx5OjAsYXhpczpcInhcIixkaXN0YW5jZTpmdW5jdGlvbihlLHQscixuKXtyZXR1cm4ocj9lLnhvOmUueCktKG4/dC54bzp0LngpfSxpbnRlcnBvbGF0ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgbyxpLGEscyxsLHUsYztpZighbnx8bj09PXRoaXMpcmV0dXJuIG89ZS54by10LnhvLGk9ZS54by1yLnhvLGw9dC54LXQueG8sdT1yLngtci54bywwPT09KGM9KGE9TWF0aC5hYnMobykpKyhzPU1hdGguYWJzKGkpKSk/dm9pZChlLng9ZS54bysobCt1KS8yKTp2b2lkKGUueD1lLnhvKyhsKnMrdSphKS9jKTtvPW4uZGlzdGFuY2UoZSx0LCEwLCEwKSxpPW4uZGlzdGFuY2UoZSxyLCEwLCEwKSxsPW4uZGlzdGFuY2UodCx0LCExLCEwKSx1PW4uZGlzdGFuY2UocixyLCExLCEwKSwwIT09KGM9KGE9TWF0aC5hYnMobykpKyhzPU1hdGguYWJzKGkpKSk/V3Quc2V0UmVsYXRpdmUoZSxlLChsKnMrdSphKS9jLG4sITApOld0LnNldFJlbGF0aXZlKGUsZSwobCt1KS8yLG4sITApfSxub3JtYWxTbG9wZTpOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFksc2V0UmVsYXRpdmU6ZnVuY3Rpb24oZSx0LHIsbixvKXtpZihuJiZuIT09dGhpcyl7dmFyIGk9bz90LnhvOnQueCxhPW8/dC55bzp0Lnkscz1pK3Iqbi54LGw9YStyKm4ueTtlLng9cysoZS55LWwpL24ubm9ybWFsU2xvcGV9ZWxzZSBlLng9KG8/dC54bzp0LngpK3J9LHNsb3BlOjAsdG91Y2g6ZnVuY3Rpb24oZSl7ZS54VG91Y2hlZD0hMH0sdG91Y2hlZDpmdW5jdGlvbihlKXtyZXR1cm4gZS54VG91Y2hlZH0sdW50b3VjaDpmdW5jdGlvbihlKXtlLnhUb3VjaGVkPSExfX0scXQ9e3g6MCx5OjEsYXhpczpcInlcIixkaXN0YW5jZTpmdW5jdGlvbihlLHQscixuKXtyZXR1cm4ocj9lLnlvOmUueSktKG4/dC55bzp0LnkpfSxpbnRlcnBvbGF0ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgbyxpLGEscyxsLHUsYztpZighbnx8bj09PXRoaXMpcmV0dXJuIG89ZS55by10LnlvLGk9ZS55by1yLnlvLGw9dC55LXQueW8sdT1yLnktci55bywwPT09KGM9KGE9TWF0aC5hYnMobykpKyhzPU1hdGguYWJzKGkpKSk/dm9pZChlLnk9ZS55bysobCt1KS8yKTp2b2lkKGUueT1lLnlvKyhsKnMrdSphKS9jKTtvPW4uZGlzdGFuY2UoZSx0LCEwLCEwKSxpPW4uZGlzdGFuY2UoZSxyLCEwLCEwKSxsPW4uZGlzdGFuY2UodCx0LCExLCEwKSx1PW4uZGlzdGFuY2UocixyLCExLCEwKSwwIT09KGM9KGE9TWF0aC5hYnMobykpKyhzPU1hdGguYWJzKGkpKSk/cXQuc2V0UmVsYXRpdmUoZSxlLChsKnMrdSphKS9jLG4sITApOnF0LnNldFJlbGF0aXZlKGUsZSwobCt1KS8yLG4sITApfSxub3JtYWxTbG9wZTowLHNldFJlbGF0aXZlOmZ1bmN0aW9uKGUsdCxyLG4sbyl7aWYobiYmbiE9PXRoaXMpe3ZhciBpPW8/dC54bzp0LngsYT1vP3QueW86dC55LHM9aStyKm4ueCxsPWErcipuLnk7ZS55PWwrbi5ub3JtYWxTbG9wZSooZS54LXMpfWVsc2UgZS55PShvP3QueW86dC55KStyfSxzbG9wZTpOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksdG91Y2g6ZnVuY3Rpb24oZSl7ZS55VG91Y2hlZD0hMH0sdG91Y2hlZDpmdW5jdGlvbihlKXtyZXR1cm4gZS55VG91Y2hlZH0sdW50b3VjaDpmdW5jdGlvbihlKXtlLnlUb3VjaGVkPSExfX07ZnVuY3Rpb24gWHQoZSx0KXt0aGlzLng9ZSx0aGlzLnk9dCx0aGlzLmF4aXM9dm9pZCAwLHRoaXMuc2xvcGU9dC9lLHRoaXMubm9ybWFsU2xvcGU9LWUvdCxPYmplY3QuZnJlZXplKHRoaXMpfWZ1bmN0aW9uIFl0KGUsdCl7dmFyIHI9TWF0aC5zcXJ0KGUqZSt0KnQpO3JldHVybiB0Lz1yLDE9PT0oZS89cikmJjA9PT10P1d0OjA9PT1lJiYxPT09dD9xdDpuZXcgWHQoZSx0KX1mdW5jdGlvbiBadChlLHQscixuKXt0aGlzLng9dGhpcy54bz1NYXRoLnJvdW5kKDY0KmUpLzY0LHRoaXMueT10aGlzLnlvPU1hdGgucm91bmQoNjQqdCkvNjQsdGhpcy5sYXN0UG9pbnRPZkNvbnRvdXI9cix0aGlzLm9uQ3VydmU9bix0aGlzLnByZXZQb2ludE9uQ29udG91cj12b2lkIDAsdGhpcy5uZXh0UG9pbnRPbkNvbnRvdXI9dm9pZCAwLHRoaXMueFRvdWNoZWQ9ITEsdGhpcy55VG91Y2hlZD0hMSxPYmplY3QucHJldmVudEV4dGVuc2lvbnModGhpcyl9T2JqZWN0LmZyZWV6ZShXdCksT2JqZWN0LmZyZWV6ZShxdCksWHQucHJvdG90eXBlLmRpc3RhbmNlPWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiB0aGlzLngqV3QuZGlzdGFuY2UoZSx0LHIsbikrdGhpcy55KnF0LmRpc3RhbmNlKGUsdCxyLG4pfSxYdC5wcm90b3R5cGUuaW50ZXJwb2xhdGU9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG8saSxhLHMsbCx1LGM7YT1uLmRpc3RhbmNlKGUsdCwhMCwhMCkscz1uLmRpc3RhbmNlKGUsciwhMCwhMCksbz1uLmRpc3RhbmNlKHQsdCwhMSwhMCksaT1uLmRpc3RhbmNlKHIsciwhMSwhMCksMCE9PShjPShsPU1hdGguYWJzKGEpKSsodT1NYXRoLmFicyhzKSkpP3RoaXMuc2V0UmVsYXRpdmUoZSxlLChvKnUraSpsKS9jLG4sITApOnRoaXMuc2V0UmVsYXRpdmUoZSxlLChvK2kpLzIsbiwhMCl9LFh0LnByb3RvdHlwZS5zZXRSZWxhdGl2ZT1mdW5jdGlvbihlLHQscixuLG8pe249bnx8dGhpczt2YXIgaT1vP3QueG86dC54LGE9bz90LnlvOnQueSxzPWkrcipuLngsbD1hK3Iqbi55LHU9bi5ub3JtYWxTbG9wZSxjPXRoaXMuc2xvcGUsZD1lLngsZj1lLnk7ZS54PShjKmQtdSpzK2wtZikvKGMtdSksZS55PWMqKGUueC1kKStmfSxYdC5wcm90b3R5cGUudG91Y2g9ZnVuY3Rpb24oZSl7ZS54VG91Y2hlZD0hMCxlLnlUb3VjaGVkPSEwfSxadC5wcm90b3R5cGUubmV4dFRvdWNoZWQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMubmV4dFBvaW50T25Db250b3VyOyFlLnRvdWNoZWQodCkmJnQhPT10aGlzOyl0PXQubmV4dFBvaW50T25Db250b3VyO3JldHVybiB0fSxadC5wcm90b3R5cGUucHJldlRvdWNoZWQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMucHJldlBvaW50T25Db250b3VyOyFlLnRvdWNoZWQodCkmJnQhPT10aGlzOyl0PXQucHJldlBvaW50T25Db250b3VyO3JldHVybiB0fTt2YXIgUXQ9T2JqZWN0LmZyZWV6ZShuZXcgWnQoMCwwKSksS3Q9e2N2Q3V0SW46MTcvMTYsZGVsdGFCYXNlOjksZGVsdGFTaGlmdDouMTI1LGxvb3A6MSxtaW5EaXM6MSxhdXRvRmxpcDohMH07ZnVuY3Rpb24gSnQoZSx0KXtzd2l0Y2godGhpcy5lbnY9ZSx0aGlzLnN0YWNrPVtdLHRoaXMucHJvZz10LGUpe2Nhc2VcImdseWZcIjp0aGlzLnpwMD10aGlzLnpwMT10aGlzLnpwMj0xLHRoaXMucnAwPXRoaXMucnAxPXRoaXMucnAyPTA7Y2FzZVwicHJlcFwiOnRoaXMuZnY9dGhpcy5wdj10aGlzLmRwdj1XdCx0aGlzLnJvdW5kPUZ0fX1mdW5jdGlvbiAkdChlKXtmb3IodmFyIHQ9ZS50Wm9uZT1uZXcgQXJyYXkoZS5nWm9uZS5sZW5ndGgpLHI9MDtyPHQubGVuZ3RoO3IrKyl0W3JdPW5ldyBadCgwLDApfWZ1bmN0aW9uIGVyKGUsdCl7dmFyIHIsbj1lLnByb2csbz1lLmlwLGk9MTtkb3tpZig4OD09PShyPW5bKytvXSkpaSsrO2Vsc2UgaWYoODk9PT1yKWktLTtlbHNlIGlmKDY0PT09cilvKz1uW28rMV0rMTtlbHNlIGlmKDY1PT09cilvKz0yKm5bbysxXSsxO2Vsc2UgaWYoMTc2PD1yJiZyPD0xODMpbys9ci0xNzYrMTtlbHNlIGlmKDE4NDw9ciYmcjw9MTkxKW8rPTIqKHItMTg0KzEpO2Vsc2UgaWYodCYmMT09PWkmJjI3PT09cilicmVha313aGlsZSgwPGkpO2UuaXA9b31mdW5jdGlvbiB0cihlLHQpe00uREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIlNWVENBW1wiK2UuYXhpcytcIl1cIiksdC5mdj10LnB2PXQuZHB2PWV9ZnVuY3Rpb24gcnIoZSx0KXtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJTUFZUQ0FbXCIrZS5heGlzK1wiXVwiKSx0LnB2PXQuZHB2PWV9ZnVuY3Rpb24gbnIoZSx0KXtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJTRlZUQ0FbXCIrZS5heGlzK1wiXVwiKSx0LmZ2PWV9ZnVuY3Rpb24gb3IoZSx0KXt2YXIgcixuLG89dC5zdGFjayxpPW8ucG9wKCksYT1vLnBvcCgpLHM9dC56MltpXSxsPXQuejFbYV07TS5ERUJVRyYmY29uc29sZS5sb2coXCJTUFZUTFtcIitlK1wiXVwiLGksYSksbj1lPyhyPXMueS1sLnksbC54LXMueCk6KHI9bC54LXMueCxsLnktcy55KSx0LnB2PXQuZHB2PVl0KHIsbil9ZnVuY3Rpb24gaXIoZSx0KXt2YXIgcixuLG89dC5zdGFjayxpPW8ucG9wKCksYT1vLnBvcCgpLHM9dC56MltpXSxsPXQuejFbYV07TS5ERUJVRyYmY29uc29sZS5sb2coXCJTRlZUTFtcIitlK1wiXVwiLGksYSksbj1lPyhyPXMueS1sLnksbC54LXMueCk6KHI9bC54LXMueCxsLnktcy55KSx0LmZ2PVl0KHIsbil9ZnVuY3Rpb24gYXIoZSl7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUE9QW11cIiksZS5zdGFjay5wb3AoKX1mdW5jdGlvbiBzcihlLHQpe3ZhciByPXQuc3RhY2sucG9wKCksbj10LnowW3JdLG89dC5mdixpPXQucHY7TS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiTURBUFtcIitlK1wiXVwiLHIpO3ZhciBhPWkuZGlzdGFuY2UobixRdCk7ZSYmKGE9dC5yb3VuZChhKSksby5zZXRSZWxhdGl2ZShuLFF0LGEsaSksby50b3VjaChuKSx0LnJwMD10LnJwMT1yfWZ1bmN0aW9uIGxyKGUsdCl7dmFyIHIsbixvLGk9dC56MixhPWkubGVuZ3RoLTI7TS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiSVVQW1wiK2UuYXhpcytcIl1cIik7Zm9yKHZhciBzPTA7czxhO3MrKylyPWlbc10sZS50b3VjaGVkKHIpfHwobj1yLnByZXZUb3VjaGVkKGUpKSE9PXImJihuPT09KG89ci5uZXh0VG91Y2hlZChlKSkmJmUuc2V0UmVsYXRpdmUocixyLGUuZGlzdGFuY2UobixuLCExLCEwKSxlLCEwKSxlLmludGVycG9sYXRlKHIsbixvLGUpKX1mdW5jdGlvbiB1cihlLHQpe2Zvcih2YXIgcj10LnN0YWNrLG49ZT90LnJwMTp0LnJwMixvPShlP3QuejA6dC56MSlbbl0saT10LmZ2LGE9dC5wdixzPXQubG9vcCxsPXQuejI7cy0tOyl7dmFyIHU9ci5wb3AoKSxjPWxbdV0sZD1hLmRpc3RhbmNlKG8sbywhMSwhMCk7aS5zZXRSZWxhdGl2ZShjLGMsZCxhKSxpLnRvdWNoKGMpLE0uREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCwoMTx0Lmxvb3A/XCJsb29wIFwiKyh0Lmxvb3AtcykrXCI6IFwiOlwiXCIpK1wiU0hQW1wiKyhlP1wicnAxXCI6XCJycDJcIikrXCJdXCIsdSl9dC5sb29wPTF9ZnVuY3Rpb24gY3IoZSx0KXt2YXIgcj10LnN0YWNrLG49ZT90LnJwMTp0LnJwMixvPShlP3QuejA6dC56MSlbbl0saT10LmZ2LGE9dC5wdixzPXIucG9wKCksbD10LnoyW3QuY29udG91cnNbc11dLHU9bDtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJTSENbXCIrZStcIl1cIixzKTtmb3IodmFyIGM9YS5kaXN0YW5jZShvLG8sITEsITApO3UhPT1vJiZpLnNldFJlbGF0aXZlKHUsdSxjLGEpLCh1PXUubmV4dFBvaW50T25Db250b3VyKSE9PWw7KTt9ZnVuY3Rpb24gZHIoZSx0KXt2YXIgcixuLG89dC5zdGFjayxpPWU/dC5ycDE6dC5ycDIsYT0oZT90LnowOnQuejEpW2ldLHM9dC5mdixsPXQucHYsdT1vLnBvcCgpO3N3aXRjaChNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJTSFpbXCIrZStcIl1cIix1KSx1KXtjYXNlIDA6cj10LnRab25lO2JyZWFrO2Nhc2UgMTpyPXQuZ1pvbmU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHpvbmVcIil9Zm9yKHZhciBjPWwuZGlzdGFuY2UoYSxhLCExLCEwKSxkPXIubGVuZ3RoLTIsZj0wO2Y8ZDtmKyspbj1yW2ZdLHMuc2V0UmVsYXRpdmUobixuLGMsbCl9ZnVuY3Rpb24gZnIoZSx0KXt2YXIgcj10LnN0YWNrLG49ci5wb3AoKS82NCxvPXIucG9wKCksaT10LnoxW29dLGE9dC56MFt0LnJwMF0scz10LmZ2LGw9dC5wdjtzLnNldFJlbGF0aXZlKGksYSxuLGwpLHMudG91Y2goaSksTS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiTVNJUlBbXCIrZStcIl1cIixuLG8pLHQucnAxPXQucnAwLHQucnAyPW8sZSYmKHQucnAwPW8pfWZ1bmN0aW9uIGhyKGUsdCl7dmFyIHI9dC5zdGFjayxuPXIucG9wKCksbz1yLnBvcCgpLGk9dC56MFtvXSxhPXQuZnYscz10LnB2LGw9dC5jdnRbbl07TS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiTUlBUFtcIitlK1wiXVwiLG4sXCIoXCIsbCxcIilcIixvKTt2YXIgdT1zLmRpc3RhbmNlKGksUXQpO2UmJihNYXRoLmFicyh1LWwpPHQuY3ZDdXRJbiYmKHU9bCksdT10LnJvdW5kKHUpKSxhLnNldFJlbGF0aXZlKGksUXQsdSxzKSwwPT09dC56cDAmJihpLnhvPWkueCxpLnlvPWkueSksYS50b3VjaChpKSx0LnJwMD10LnJwMT1vfWZ1bmN0aW9uIHByKGUsdCl7dmFyIHI9dC5zdGFjayxuPXIucG9wKCksbz10LnoyW25dO00uREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIkdDW1wiK2UrXCJdXCIsbiksci5wdXNoKDY0KnQuZHB2LmRpc3RhbmNlKG8sUXQsZSwhMSkpfWZ1bmN0aW9uIHlyKGUsdCl7dmFyIHI9dC5zdGFjayxuPXIucG9wKCksbz1yLnBvcCgpLGk9dC56MVtuXSxhPXQuejBbb10scz10LmRwdi5kaXN0YW5jZShhLGksZSxlKTtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJNRFtcIitlK1wiXVwiLG4sbyxcIi0+XCIscyksdC5zdGFjay5wdXNoKE1hdGgucm91bmQoNjQqcykpfWZ1bmN0aW9uIG1yKGUsdCl7dmFyIHI9dC5zdGFjayxuPXIucG9wKCksbz10LmZ2LGk9dC5wdixhPXQucHBlbSxzPXQuZGVsdGFCYXNlKzE2KihlLTEpLGw9dC5kZWx0YVNoaWZ0LHU9dC56MDtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJERUxUQVBbXCIrZStcIl1cIixuLHIpO2Zvcih2YXIgYz0wO2M8bjtjKyspe3ZhciBkPXIucG9wKCksZj1yLnBvcCgpO2lmKHMrKCgyNDAmZik+PjQpPT09YSl7dmFyIGg9KDE1JmYpLTg7MDw9aCYmaCsrLE0uREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIkRFTFRBUEZJWFwiLGQsXCJieVwiLGgqbCk7dmFyIHA9dVtkXTtvLnNldFJlbGF0aXZlKHAscCxoKmwsaSl9fX1mdW5jdGlvbiBncihlLHQpe3ZhciByPXQuc3RhY2ssbj1yLnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIlJPVU5EW11cIiksci5wdXNoKDY0KnQucm91bmQobi82NCkpfWZ1bmN0aW9uIHZyKGUsdCl7dmFyIHI9dC5zdGFjayxuPXIucG9wKCksbz10LnBwZW0saT10LmRlbHRhQmFzZSsxNiooZS0xKSxhPXQuZGVsdGFTaGlmdDtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJERUxUQUNbXCIrZStcIl1cIixuLHIpO2Zvcih2YXIgcz0wO3M8bjtzKyspe3ZhciBsPXIucG9wKCksdT1yLnBvcCgpO2lmKGkrKCgyNDAmdSk+PjQpPT09byl7dmFyIGM9KDE1JnUpLTg7MDw9YyYmYysrO3ZhciBkPWMqYTtNLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJERUxUQUNGSVhcIixsLFwiYnlcIixkKSx0LmN2dFtsXSs9ZH19fWZ1bmN0aW9uIGJyKGUsdCl7dmFyIHIsbixvPXQuc3RhY2ssaT1vLnBvcCgpLGE9by5wb3AoKSxzPXQuejJbaV0sbD10LnoxW2FdO00uREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIlNEUFZUTFtcIitlK1wiXVwiLGksYSksbj1lPyhyPXMueS1sLnksbC54LXMueCk6KHI9bC54LXMueCxsLnktcy55KSx0LmRwdj1ZdChyLG4pfWZ1bmN0aW9uIF9yKGUsdCl7dmFyIHI9dC5zdGFjayxuPXQucHJvZyxvPXQuaXA7TS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiUFVTSEJbXCIrZStcIl1cIik7Zm9yKHZhciBpPTA7aTxlO2krKylyLnB1c2goblsrK29dKTt0LmlwPW99ZnVuY3Rpb24geHIoZSx0KXt2YXIgcj10LmlwLG49dC5wcm9nLG89dC5zdGFjaztNLkRFQlVHJiZjb25zb2xlLmxvZyh0LmlwLFwiUFVTSFdbXCIrZStcIl1cIik7Zm9yKHZhciBpPTA7aTxlO2krKyl7dmFyIGE9blsrK3JdPDw4fG5bKytyXTszMjc2OCZhJiYoYT0tKDErKDY1NTM1XmEpKSksby5wdXNoKGEpfXQuaXA9cn1mdW5jdGlvbiB3cihlLHQscixuLG8saSl7dmFyIGEscyxsLHUsYz1pLnN0YWNrLGQ9ZSYmYy5wb3AoKSxmPWMucG9wKCksaD1pLnJwMCxwPWkuejBbaF0seT1pLnoxW2ZdLG09aS5taW5EaXMsZz1pLmZ2LHY9aS5kcHY7bD0wPD0ocz1hPXYuZGlzdGFuY2UoeSxwLCEwLCEwKSk/MTotMSxzPU1hdGguYWJzKHMpLGUmJih1PWkuY3Z0W2RdLG4mJk1hdGguYWJzKHMtdSk8aS5jdkN1dEluJiYocz11KSksciYmczxtJiYocz1tKSxuJiYocz1pLnJvdW5kKHMpKSxnLnNldFJlbGF0aXZlKHkscCxsKnMsdiksZy50b3VjaCh5KSxNLkRFQlVHJiZjb25zb2xlLmxvZyhpLnN0ZXAsKGU/XCJNSVJQW1wiOlwiTURSUFtcIikrKHQ/XCJNXCI6XCJtXCIpKyhyP1wiPlwiOlwiX1wiKSsobj9cIlJcIjpcIl9cIikrKDA9PT1vP1wiR3JcIjoxPT09bz9cIkJsXCI6Mj09PW8/XCJXaFwiOlwiXCIpK1wiXVwiLGU/ZCtcIihcIitpLmN2dFtkXStcIixcIit1K1wiKVwiOlwiXCIsZixcIihkID1cIixhLFwiLT5cIixsKnMsXCIpXCIpLGkucnAxPWkucnAwLGkucnAyPWYsdCYmKGkucnAwPWYpfVV0LnByb3RvdHlwZS5leGVjPWZ1bmN0aW9uKGUsdCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yKFwiUG9pbnQgc2l6ZSBpcyBub3QgYSBudW1iZXIhXCIpO2lmKCEoMjx0aGlzLl9lcnJvclN0YXRlKSl7dmFyIHI9dGhpcy5mb250LG49dGhpcy5fcHJlcFN0YXRlO2lmKCFufHxuLnBwZW0hPT10KXt2YXIgbz10aGlzLl9mcGdtU3RhdGU7aWYoIW8pe0p0LnByb3RvdHlwZT1LdCwobz10aGlzLl9mcGdtU3RhdGU9bmV3IEp0KFwiZnBnbVwiLHIudGFibGVzLmZwZ20pKS5mdW5jcz1bXSxvLmZvbnQ9cixNLkRFQlVHJiYoY29uc29sZS5sb2coXCItLS1FWEVDIEZQR00tLS1cIiksby5zdGVwPS0xKTt0cnl7a3Qobyl9Y2F0Y2goZSl7cmV0dXJuIGNvbnNvbGUubG9nKFwiSGludGluZyBlcnJvciBpbiBGUEdNOlwiK2UpLHZvaWQodGhpcy5fZXJyb3JTdGF0ZT0zKX19SnQucHJvdG90eXBlPW8sKG49dGhpcy5fcHJlcFN0YXRlPW5ldyBKdChcInByZXBcIixyLnRhYmxlcy5wcmVwKSkucHBlbT10O3ZhciBpPXIudGFibGVzLmN2dDtpZihpKWZvcih2YXIgYT1uLmN2dD1uZXcgQXJyYXkoaS5sZW5ndGgpLHM9dC9yLnVuaXRzUGVyRW0sbD0wO2w8aS5sZW5ndGg7bCsrKWFbbF09aVtsXSpzO2Vsc2Ugbi5jdnQ9W107TS5ERUJVRyYmKGNvbnNvbGUubG9nKFwiLS0tRVhFQyBQUkVQLS0tXCIpLG4uc3RlcD0tMSk7dHJ5e2t0KG4pfWNhdGNoKGUpe3RoaXMuX2Vycm9yU3RhdGU8MiYmY29uc29sZS5sb2coXCJIaW50aW5nIGVycm9yIGluIFBSRVA6XCIrZSksdGhpcy5fZXJyb3JTdGF0ZT0yfX1pZighKDE8dGhpcy5fZXJyb3JTdGF0ZSkpdHJ5e3JldHVybiBSdChlLG4pfWNhdGNoKGUpe3JldHVybiB0aGlzLl9lcnJvclN0YXRlPDEmJihjb25zb2xlLmxvZyhcIkhpbnRpbmcgZXJyb3I6XCIrZSksY29uc29sZS5sb2coXCJOb3RlOiBmdXJ0aGVyIGhpbnRpbmcgZXJyb3JzIGFyZSBzaWxlbmNlZFwiKSksdm9pZCh0aGlzLl9lcnJvclN0YXRlPTEpfX19LFJ0PWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLGk9dC5wcGVtL3QuZm9udC51bml0c1BlckVtLGE9aSxzPWUuY29tcG9uZW50cztpZihKdC5wcm90b3R5cGU9dCxzKXt2YXIgbD10LmZvbnQ7bj1bXSxyPVtdO2Zvcih2YXIgdT0wO3U8cy5sZW5ndGg7dSsrKXt2YXIgYz1zW3VdLGQ9bC5nbHlwaHMuZ2V0KGMuZ2x5cGhJbmRleCk7bz1uZXcgSnQoXCJnbHlmXCIsZC5pbnN0cnVjdGlvbnMpLE0uREVCVUcmJihjb25zb2xlLmxvZyhcIi0tLUVYRUMgQ09NUCBcIit1K1wiLS0tXCIpLG8uc3RlcD0tMSksRHQoZCxvLGksYSk7Zm9yKHZhciBmPU1hdGgucm91bmQoYy5keCppKSxoPU1hdGgucm91bmQoYy5keSphKSxwPW8uZ1pvbmUseT1vLmNvbnRvdXJzLG09MDttPHAubGVuZ3RoO20rKyl7dmFyIGc9cFttXTtnLnhUb3VjaGVkPWcueVRvdWNoZWQ9ITEsZy54bz1nLng9Zy54K2YsZy55bz1nLnk9Zy55K2h9dmFyIHY9bi5sZW5ndGg7bi5wdXNoLmFwcGx5KG4scCk7Zm9yKHZhciBiPTA7Yjx5Lmxlbmd0aDtiKyspci5wdXNoKHlbYl0rdil9ZS5pbnN0cnVjdGlvbnMmJiFvLmluaGliaXRHcmlkRml0JiYoKG89bmV3IEp0KFwiZ2x5ZlwiLGUuaW5zdHJ1Y3Rpb25zKSkuZ1pvbmU9by56MD1vLnoxPW8uejI9bixvLmNvbnRvdXJzPXIsbi5wdXNoKG5ldyBadCgwLDApLG5ldyBadChNYXRoLnJvdW5kKGUuYWR2YW5jZVdpZHRoKmkpLDApKSxNLkRFQlVHJiYoY29uc29sZS5sb2coXCItLS1FWEVDIENPTVBPU0lURS0tLVwiKSxvLnN0ZXA9LTEpLGt0KG8pLG4ubGVuZ3RoLT0yKX1lbHNlIG89bmV3IEp0KFwiZ2x5ZlwiLGUuaW5zdHJ1Y3Rpb25zKSxNLkRFQlVHJiYoY29uc29sZS5sb2coXCItLS1FWEVDIEdMWVBILS0tXCIpLG8uc3RlcD0tMSksRHQoZSxvLGksYSksbj1vLmdab25lO3JldHVybiBufSxEdD1mdW5jdGlvbihlLHQscixuKXtmb3IodmFyIG8saSxhLHM9ZS5wb2ludHN8fFtdLGw9cy5sZW5ndGgsdT10Lmdab25lPXQuejA9dC56MT10LnoyPVtdLGM9dC5jb250b3Vycz1bXSxkPTA7ZDxsO2QrKylvPXNbZF0sdVtkXT1uZXcgWnQoby54KnIsby55Km4sby5sYXN0UG9pbnRPZkNvbnRvdXIsby5vbkN1cnZlKTtmb3IodmFyIGY9MDtmPGw7ZisrKW89dVtmXSxpfHwoaT1vLGMucHVzaChmKSksby5sYXN0UG9pbnRPZkNvbnRvdXI/KChvLm5leHRQb2ludE9uQ29udG91cj1pKS5wcmV2UG9pbnRPbkNvbnRvdXI9byxpPXZvaWQgMCk6KGE9dVtmKzFdLChvLm5leHRQb2ludE9uQ29udG91cj1hKS5wcmV2UG9pbnRPbkNvbnRvdXI9byk7aWYoIXQuaW5oaWJpdEdyaWRGaXQpe2lmKE0uREVCVUcpe2NvbnNvbGUubG9nKFwiUFJPQ0VTU0lORyBHTFlQSFwiLHQuc3RhY2spO2Zvcih2YXIgaD0wO2g8bDtoKyspY29uc29sZS5sb2coaCx1W2hdLngsdVtoXS55KX1pZih1LnB1c2gobmV3IFp0KDAsMCksbmV3IFp0KE1hdGgucm91bmQoZS5hZHZhbmNlV2lkdGgqciksMCkpLGt0KHQpLHUubGVuZ3RoLT0yLE0uREVCVUcpe2NvbnNvbGUubG9nKFwiRklOSVNIRUQgR0xZUEhcIix0LnN0YWNrKTtmb3IodmFyIHA9MDtwPGw7cCsrKWNvbnNvbGUubG9nKHAsdVtwXS54LHVbcF0ueSl9fX0sa3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5wcm9nO2lmKHQpe3ZhciByLG49dC5sZW5ndGg7Zm9yKGUuaXA9MDtlLmlwPG47ZS5pcCsrKXtpZihNLkRFQlVHJiZlLnN0ZXArKywhKHI9QXRbdFtlLmlwXV0pKXRocm93IG5ldyBFcnJvcihcInVua25vd24gaW5zdHJ1Y3Rpb246IDB4XCIrTnVtYmVyKHRbZS5pcF0pLnRvU3RyaW5nKDE2KSk7cihlKX19fSxBdD1bdHIuYmluZCh2b2lkIDAscXQpLHRyLmJpbmQodm9pZCAwLFd0KSxyci5iaW5kKHZvaWQgMCxxdCkscnIuYmluZCh2b2lkIDAsV3QpLG5yLmJpbmQodm9pZCAwLHF0KSxuci5iaW5kKHZvaWQgMCxXdCksb3IuYmluZCh2b2lkIDAsMCksb3IuYmluZCh2b2lkIDAsMSksaXIuYmluZCh2b2lkIDAsMCksaXIuYmluZCh2b2lkIDAsMSksZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNQVkZTW11cIixyLG4pLGUucHY9ZS5kcHY9WXQobixyKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNQVkZTW11cIixyLG4pLGUuZnY9WXQobixyKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPWUucHY7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiR1BWW11cIiksdC5wdXNoKDE2Mzg0KnIueCksdC5wdXNoKDE2Mzg0KnIueSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj1lLmZ2O00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkdGVltdXCIpLHQucHVzaCgxNjM4NCpyLngpLHQucHVzaCgxNjM4NCpyLnkpfSxmdW5jdGlvbihlKXtlLmZ2PWUucHYsTS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU0ZWVFBWW11cIil9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKSxvPXQucG9wKCksaT10LnBvcCgpLGE9dC5wb3AoKSxzPWUuejAsbD1lLnoxLHU9c1tyXSxjPXNbbl0sZD1sW29dLGY9bFtpXSxoPWUuejJbYV07TS5ERUJVRyYmY29uc29sZS5sb2coXCJJU0VDVFtdLCBcIixyLG4sbyxpLGEpO3ZhciBwPXUueCx5PXUueSxtPWMueCxnPWMueSx2PWQueCxiPWQueSxfPWYueCx4PWYueSx3PShwLW0pKihiLXgpLSh5LWcpKih2LV8pLGo9cCpnLXkqbSxTPXYqeC1iKl87aC54PShqKih2LV8pLVMqKHAtbSkpL3csaC55PShqKihiLXgpLVMqKHktZykpL3d9LGZ1bmN0aW9uKGUpe2UucnAwPWUuc3RhY2sucG9wKCksTS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1JQMFtdXCIsZS5ycDApfSxmdW5jdGlvbihlKXtlLnJwMT1lLnN0YWNrLnBvcCgpLE0uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNSUDFbXVwiLGUucnAxKX0sZnVuY3Rpb24oZSl7ZS5ycDI9ZS5zdGFjay5wb3AoKSxNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTUlAyW11cIixlLnJwMil9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7c3dpdGNoKE0uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNaUDBbXVwiLHQpLGUuenAwPXQpe2Nhc2UgMDplLnRab25lfHwkdChlKSxlLnowPWUudFpvbmU7YnJlYWs7Y2FzZSAxOmUuejA9ZS5nWm9uZTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIkludmFsaWQgem9uZSBwb2ludGVyXCIpfX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtzd2l0Y2goTS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1pQMVtdXCIsdCksZS56cDE9dCl7Y2FzZSAwOmUudFpvbmV8fCR0KGUpLGUuejE9ZS50Wm9uZTticmVhaztjYXNlIDE6ZS56MT1lLmdab25lO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB6b25lIHBvaW50ZXJcIil9fSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO3N3aXRjaChNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTWlAyW11cIix0KSxlLnpwMj10KXtjYXNlIDA6ZS50Wm9uZXx8JHQoZSksZS56Mj1lLnRab25lO2JyZWFrO2Nhc2UgMTplLnoyPWUuZ1pvbmU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHpvbmUgcG9pbnRlclwiKX19LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7c3dpdGNoKE0uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNaUFNbXVwiLHQpLGUuenAwPWUuenAxPWUuenAyPXQsdCl7Y2FzZSAwOmUudFpvbmV8fCR0KGUpLGUuejA9ZS56MT1lLnoyPWUudFpvbmU7YnJlYWs7Y2FzZSAxOmUuejA9ZS56MT1lLnoyPWUuZ1pvbmU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHpvbmUgcG9pbnRlclwiKX19LGZ1bmN0aW9uKGUpe2UubG9vcD1lLnN0YWNrLnBvcCgpLE0uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNMT09QW11cIixlLmxvb3ApfSxmdW5jdGlvbihlKXtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJSVEdbXVwiKSxlLnJvdW5kPUZ0fSxmdW5jdGlvbihlKXtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJSVEhHW11cIiksZS5yb3VuZD1HdH0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTTURbXVwiLHQpLGUubWluRGlzPXQvNjR9LGZ1bmN0aW9uKGUpe00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkVMU0VbXVwiKSxlcihlLCExKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJKTVBSW11cIix0KSxlLmlwKz10LTF9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU0NWVENJW11cIix0KSxlLmN2Q3V0SW49dC82NH0sdm9pZCAwLHZvaWQgMCxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkRVUFtdXCIpLHQucHVzaCh0W3QubGVuZ3RoLTFdKX0sYXIsZnVuY3Rpb24oZSl7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiQ0xFQVJbXVwiKSxlLnN0YWNrLmxlbmd0aD0wfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1dBUFtdXCIpLHQucHVzaChyKSx0LnB1c2gobil9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2s7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiREVQVEhbXVwiKSx0LnB1c2godC5sZW5ndGgpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJDSU5ERVhbXVwiLHIpLHQucHVzaCh0W3QubGVuZ3RoLXJdKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTUlOREVYW11cIixyKSx0LnB1c2godC5zcGxpY2UodC5sZW5ndGgtciwxKVswXSl9LHZvaWQgMCx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJMT09QQ0FMTFtdXCIscixuKTt2YXIgbz1lLmlwLGk9ZS5wcm9nO2UucHJvZz1lLmZ1bmNzW3JdO2Zvcih2YXIgYT0wO2E8bjthKyspa3QoZSksTS5ERUJVRyYmY29uc29sZS5sb2coKytlLnN0ZXAsYSsxPG4/XCJuZXh0IGxvb3BjYWxsXCI6XCJkb25lIGxvb3BjYWxsXCIsYSk7ZS5pcD1vLGUucHJvZz1pfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkNBTExbXVwiLHQpO3ZhciByPWUuaXAsbj1lLnByb2c7ZS5wcm9nPWUuZnVuY3NbdF0sa3QoZSksZS5pcD1yLGUucHJvZz1uLE0uREVCVUcmJmNvbnNvbGUubG9nKCsrZS5zdGVwLFwicmV0dXJuaW5nIGZyb21cIix0KX0sZnVuY3Rpb24oZSl7aWYoXCJmcGdtXCIhPT1lLmVudil0aHJvdyBuZXcgRXJyb3IoXCJGREVGIG5vdCBhbGxvd2VkIGhlcmVcIik7dmFyIHQ9ZS5zdGFjayxyPWUucHJvZyxuPWUuaXAsbz10LnBvcCgpLGk9bjtmb3IoTS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRkRFRltdXCIsbyk7NDUhPT1yWysrbl07KTtlLmlwPW4sZS5mdW5jc1tvXT1yLnNsaWNlKGkrMSxuKX0sdm9pZCAwLHNyLmJpbmQodm9pZCAwLDApLHNyLmJpbmQodm9pZCAwLDEpLGxyLmJpbmQodm9pZCAwLHF0KSxsci5iaW5kKHZvaWQgMCxXdCksdXIuYmluZCh2b2lkIDAsMCksdXIuYmluZCh2b2lkIDAsMSksY3IuYmluZCh2b2lkIDAsMCksY3IuYmluZCh2b2lkIDAsMSksZHIuYmluZCh2b2lkIDAsMCksZHIuYmluZCh2b2lkIDAsMSksZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuc3RhY2sscj1lLmxvb3Asbj1lLmZ2LG89dC5wb3AoKS82NCxpPWUuejI7ci0tOyl7dmFyIGE9dC5wb3AoKSxzPWlbYV07TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLCgxPGUubG9vcD9cImxvb3AgXCIrKGUubG9vcC1yKStcIjogXCI6XCJcIikrXCJTSFBJWFtdXCIsYSxvKSxuLnNldFJlbGF0aXZlKHMscyxvKSxuLnRvdWNoKHMpfWUubG9vcD0xfSxmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5zdGFjayxyPWUucnAxLG49ZS5ycDIsbz1lLmxvb3AsaT1lLnowW3JdLGE9ZS56MVtuXSxzPWUuZnYsbD1lLmRwdix1PWUuejI7by0tOyl7dmFyIGM9dC5wb3AoKSxkPXVbY107TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLCgxPGUubG9vcD9cImxvb3AgXCIrKGUubG9vcC1vKStcIjogXCI6XCJcIikrXCJJUFtdXCIsYyxyLFwiPC0+XCIsbikscy5pbnRlcnBvbGF0ZShkLGksYSxsKSxzLnRvdWNoKGQpfWUubG9vcD0xfSxmci5iaW5kKHZvaWQgMCwwKSxmci5iaW5kKHZvaWQgMCwxKSxmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5zdGFjayxyPWUucnAwLG49ZS56MFtyXSxvPWUubG9vcCxpPWUuZnYsYT1lLnB2LHM9ZS56MTtvLS07KXt2YXIgbD10LnBvcCgpLHU9c1tsXTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsKDE8ZS5sb29wP1wibG9vcCBcIisoZS5sb29wLW8pK1wiOiBcIjpcIlwiKStcIkFMSUdOUlBbXVwiLGwpLGkuc2V0UmVsYXRpdmUodSxuLDAsYSksaS50b3VjaCh1KX1lLmxvb3A9MX0sZnVuY3Rpb24oZSl7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUlRER1tdXCIpLGUucm91bmQ9QnR9LGhyLmJpbmQodm9pZCAwLDApLGhyLmJpbmQodm9pZCAwLDEpLGZ1bmN0aW9uKGUpe3ZhciB0PWUucHJvZyxyPWUuaXAsbj1lLnN0YWNrLG89dFsrK3JdO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk5QVVNIQltdXCIsbyk7Zm9yKHZhciBpPTA7aTxvO2krKyluLnB1c2godFsrK3JdKTtlLmlwPXJ9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuaXAscj1lLnByb2csbj1lLnN0YWNrLG89clsrK3RdO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk5QVVNIV1tdXCIsbyk7Zm9yKHZhciBpPTA7aTxvO2krKyl7dmFyIGE9clsrK3RdPDw4fHJbKyt0XTszMjc2OCZhJiYoYT0tKDErKDY1NTM1XmEpKSksbi5wdXNoKGEpfWUuaXA9dH0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPWUuc3RvcmU7cj1yfHwoZS5zdG9yZT1bXSk7dmFyIG49dC5wb3AoKSxvPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiV1NcIixuLG8pLHJbb109bn0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPWUuc3RvcmUsbj10LnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlJTXCIsbik7dmFyIG89ciYmcltuXXx8MDt0LnB1c2gobyl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJXQ1ZUUFwiLHIsbiksZS5jdnRbbl09ci82NH0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUkNWVFwiLHIpLHQucHVzaCg2NCplLmN2dFtyXSl9LHByLmJpbmQodm9pZCAwLDApLHByLmJpbmQodm9pZCAwLDEpLHZvaWQgMCx5ci5iaW5kKHZvaWQgMCwwKSx5ci5iaW5kKHZvaWQgMCwxKSxmdW5jdGlvbihlKXtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJNUFBFTVtdXCIpLGUuc3RhY2sucHVzaChlLnBwZW0pfSx2b2lkIDAsZnVuY3Rpb24oZSl7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRkxJUE9OW11cIiksZS5hdXRvRmxpcD0hMH0sdm9pZCAwLHZvaWQgMCxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTFRbXVwiLHIsbiksdC5wdXNoKG48cj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTFRFUVtdXCIscixuKSx0LnB1c2gobjw9cj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiR1RbXVwiLHIsbiksdC5wdXNoKHI8bj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiR1RFUVtdXCIscixuKSx0LnB1c2gocjw9bj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRVFbXVwiLHIsbiksdC5wdXNoKHI9PT1uPzE6MCl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJORVFbXVwiLHIsbiksdC5wdXNoKHIhPT1uPzE6MCl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk9ERFtdXCIsciksdC5wdXNoKE1hdGgudHJ1bmMociklMj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJFVkVOW11cIixyKSx0LnB1c2goTWF0aC50cnVuYyhyKSUyPzA6MSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiSUZbXVwiLHQpLHR8fChlcihlLCEwKSxNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJFSUZbXVwiKSl9LGZ1bmN0aW9uKGUpe00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkVJRltdXCIpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiQU5EW11cIixyLG4pLHQucHVzaChyJiZuPzE6MCl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJPUltdXCIscixuKSx0LnB1c2gocnx8bj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJOT1RbXVwiLHIpLHQucHVzaChyPzA6MSl9LG1yLmJpbmQodm9pZCAwLDEpLGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU0RCW11cIix0KSxlLmRlbHRhQmFzZT10fSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNEU1tdXCIsdCksZS5kZWx0YVNoaWZ0PU1hdGgucG93KC41LHQpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiQUREW11cIixyLG4pLHQucHVzaChuK3IpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1VCW11cIixyLG4pLHQucHVzaChuLXIpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRElWW11cIixyLG4pLHQucHVzaCg2NCpuL3IpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTVVMW11cIixyLG4pLHQucHVzaChuKnIvNjQpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJBQlNbXVwiLHIpLHQucHVzaChNYXRoLmFicyhyKSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpO00uREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk5FR1tdXCIsciksdC5wdXNoKC1yKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRkxPT1JbXVwiLHIpLHQucHVzaCg2NCpNYXRoLmZsb29yKHIvNjQpKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiQ0VJTElOR1tdXCIsciksdC5wdXNoKDY0Kk1hdGguY2VpbChyLzY0KSl9LGdyLmJpbmQodm9pZCAwLDApLGdyLmJpbmQodm9pZCAwLDEpLGdyLmJpbmQodm9pZCAwLDIpLGdyLmJpbmQodm9pZCAwLDMpLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiV0NWVEZbXVwiLHIsbiksZS5jdnRbbl09ciplLnBwZW0vZS5mb250LnVuaXRzUGVyRW19LG1yLmJpbmQodm9pZCAwLDIpLG1yLmJpbmQodm9pZCAwLDMpLHZyLmJpbmQodm9pZCAwLDEpLHZyLmJpbmQodm9pZCAwLDIpLHZyLmJpbmQodm9pZCAwLDMpLGZ1bmN0aW9uKGUpe3ZhciB0LHI9ZS5zdGFjay5wb3AoKTtzd2l0Y2goTS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1JPVU5EW11cIixyKSxlLnJvdW5kPUh0LDE5MiZyKXtjYXNlIDA6dD0uNTticmVhaztjYXNlIDY0OnQ9MTticmVhaztjYXNlIDEyODp0PTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIFNST1VORCB2YWx1ZVwiKX1zd2l0Y2goZS5zclBlcmlvZD10LDQ4JnIpe2Nhc2UgMDplLnNyUGhhc2U9MDticmVhaztjYXNlIDE2OmUuc3JQaGFzZT0uMjUqdDticmVhaztjYXNlIDMyOmUuc3JQaGFzZT0uNSp0O2JyZWFrO2Nhc2UgNDg6ZS5zclBoYXNlPS43NSp0O2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBTUk9VTkQgdmFsdWVcIil9ciY9MTUsZS5zclRocmVzaG9sZD0wPT09cj8wOihyLzgtLjUpKnR9LGZ1bmN0aW9uKGUpe3ZhciB0LHI9ZS5zdGFjay5wb3AoKTtzd2l0Y2goTS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUzQ1Uk9VTkRbXVwiLHIpLGUucm91bmQ9SHQsMTkyJnIpe2Nhc2UgMDp0PU1hdGguc3FydCgyKS8yO2JyZWFrO2Nhc2UgNjQ6dD1NYXRoLnNxcnQoMik7YnJlYWs7Y2FzZSAxMjg6dD0yKk1hdGguc3FydCgyKTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcImludmFsaWQgUzQ1Uk9VTkQgdmFsdWVcIil9c3dpdGNoKGUuc3JQZXJpb2Q9dCw0OCZyKXtjYXNlIDA6ZS5zclBoYXNlPTA7YnJlYWs7Y2FzZSAxNjplLnNyUGhhc2U9LjI1KnQ7YnJlYWs7Y2FzZSAzMjplLnNyUGhhc2U9LjUqdDticmVhaztjYXNlIDQ4OmUuc3JQaGFzZT0uNzUqdDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcImludmFsaWQgUzQ1Uk9VTkQgdmFsdWVcIil9ciY9MTUsZS5zclRocmVzaG9sZD0wPT09cj8wOihyLzgtLjUpKnR9LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oZSl7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUk9GRltdXCIpLGUucm91bmQ9TnR9LHZvaWQgMCxmdW5jdGlvbihlKXtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJSVVRHW11cIiksZS5yb3VuZD1WdH0sZnVuY3Rpb24oZSl7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUkRUR1tdXCIpLGUucm91bmQ9enR9LGFyLGFyLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTQ0FOQ1RSTFtdXCIsdCl9LGJyLmJpbmQodm9pZCAwLDApLGJyLmJpbmQodm9pZCAwLDEpLGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49MDtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJHRVRJTkZPW11cIixyKSwxJnImJihuPTM1KSwzMiZyJiYobnw9NDA5NiksdC5wdXNoKG4pfSx2b2lkIDAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpLG89dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJST0xMW11cIiksdC5wdXNoKG4pLHQucHVzaChyKSx0LnB1c2gobyl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJNQVhbXVwiLHIsbiksdC5wdXNoKE1hdGgubWF4KG4scikpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7TS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTUlOW11cIixyLG4pLHQucHVzaChNYXRoLm1pbihuLHIpKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTQ0FOVFlQRVtdXCIsdCl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCkscj1lLnN0YWNrLnBvcCgpO3N3aXRjaChNLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJJTlNUQ1RSTFtdXCIsdCxyKSx0KXtjYXNlIDE6cmV0dXJuIHZvaWQoZS5pbmhpYml0R3JpZEZpdD0hIXIpO2Nhc2UgMjpyZXR1cm4gdm9pZChlLmlnbm9yZUN2dD0hIXIpO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBJTlNUQ1RSTFtdIHNlbGVjdG9yXCIpfX0sdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsX3IuYmluZCh2b2lkIDAsMSksX3IuYmluZCh2b2lkIDAsMiksX3IuYmluZCh2b2lkIDAsMyksX3IuYmluZCh2b2lkIDAsNCksX3IuYmluZCh2b2lkIDAsNSksX3IuYmluZCh2b2lkIDAsNiksX3IuYmluZCh2b2lkIDAsNyksX3IuYmluZCh2b2lkIDAsOCkseHIuYmluZCh2b2lkIDAsMSkseHIuYmluZCh2b2lkIDAsMikseHIuYmluZCh2b2lkIDAsMykseHIuYmluZCh2b2lkIDAsNCkseHIuYmluZCh2b2lkIDAsNSkseHIuYmluZCh2b2lkIDAsNikseHIuYmluZCh2b2lkIDAsNykseHIuYmluZCh2b2lkIDAsOCksd3IuYmluZCh2b2lkIDAsMCwwLDAsMCwwKSx3ci5iaW5kKHZvaWQgMCwwLDAsMCwwLDEpLHdyLmJpbmQodm9pZCAwLDAsMCwwLDAsMiksd3IuYmluZCh2b2lkIDAsMCwwLDAsMCwzKSx3ci5iaW5kKHZvaWQgMCwwLDAsMCwxLDApLHdyLmJpbmQodm9pZCAwLDAsMCwwLDEsMSksd3IuYmluZCh2b2lkIDAsMCwwLDAsMSwyKSx3ci5iaW5kKHZvaWQgMCwwLDAsMCwxLDMpLHdyLmJpbmQodm9pZCAwLDAsMCwxLDAsMCksd3IuYmluZCh2b2lkIDAsMCwwLDEsMCwxKSx3ci5iaW5kKHZvaWQgMCwwLDAsMSwwLDIpLHdyLmJpbmQodm9pZCAwLDAsMCwxLDAsMyksd3IuYmluZCh2b2lkIDAsMCwwLDEsMSwwKSx3ci5iaW5kKHZvaWQgMCwwLDAsMSwxLDEpLHdyLmJpbmQodm9pZCAwLDAsMCwxLDEsMiksd3IuYmluZCh2b2lkIDAsMCwwLDEsMSwzKSx3ci5iaW5kKHZvaWQgMCwwLDEsMCwwLDApLHdyLmJpbmQodm9pZCAwLDAsMSwwLDAsMSksd3IuYmluZCh2b2lkIDAsMCwxLDAsMCwyKSx3ci5iaW5kKHZvaWQgMCwwLDEsMCwwLDMpLHdyLmJpbmQodm9pZCAwLDAsMSwwLDEsMCksd3IuYmluZCh2b2lkIDAsMCwxLDAsMSwxKSx3ci5iaW5kKHZvaWQgMCwwLDEsMCwxLDIpLHdyLmJpbmQodm9pZCAwLDAsMSwwLDEsMyksd3IuYmluZCh2b2lkIDAsMCwxLDEsMCwwKSx3ci5iaW5kKHZvaWQgMCwwLDEsMSwwLDEpLHdyLmJpbmQodm9pZCAwLDAsMSwxLDAsMiksd3IuYmluZCh2b2lkIDAsMCwxLDEsMCwzKSx3ci5iaW5kKHZvaWQgMCwwLDEsMSwxLDApLHdyLmJpbmQodm9pZCAwLDAsMSwxLDEsMSksd3IuYmluZCh2b2lkIDAsMCwxLDEsMSwyKSx3ci5iaW5kKHZvaWQgMCwwLDEsMSwxLDMpLHdyLmJpbmQodm9pZCAwLDEsMCwwLDAsMCksd3IuYmluZCh2b2lkIDAsMSwwLDAsMCwxKSx3ci5iaW5kKHZvaWQgMCwxLDAsMCwwLDIpLHdyLmJpbmQodm9pZCAwLDEsMCwwLDAsMyksd3IuYmluZCh2b2lkIDAsMSwwLDAsMSwwKSx3ci5iaW5kKHZvaWQgMCwxLDAsMCwxLDEpLHdyLmJpbmQodm9pZCAwLDEsMCwwLDEsMiksd3IuYmluZCh2b2lkIDAsMSwwLDAsMSwzKSx3ci5iaW5kKHZvaWQgMCwxLDAsMSwwLDApLHdyLmJpbmQodm9pZCAwLDEsMCwxLDAsMSksd3IuYmluZCh2b2lkIDAsMSwwLDEsMCwyKSx3ci5iaW5kKHZvaWQgMCwxLDAsMSwwLDMpLHdyLmJpbmQodm9pZCAwLDEsMCwxLDEsMCksd3IuYmluZCh2b2lkIDAsMSwwLDEsMSwxKSx3ci5iaW5kKHZvaWQgMCwxLDAsMSwxLDIpLHdyLmJpbmQodm9pZCAwLDEsMCwxLDEsMyksd3IuYmluZCh2b2lkIDAsMSwxLDAsMCwwKSx3ci5iaW5kKHZvaWQgMCwxLDEsMCwwLDEpLHdyLmJpbmQodm9pZCAwLDEsMSwwLDAsMiksd3IuYmluZCh2b2lkIDAsMSwxLDAsMCwzKSx3ci5iaW5kKHZvaWQgMCwxLDEsMCwxLDApLHdyLmJpbmQodm9pZCAwLDEsMSwwLDEsMSksd3IuYmluZCh2b2lkIDAsMSwxLDAsMSwyKSx3ci5iaW5kKHZvaWQgMCwxLDEsMCwxLDMpLHdyLmJpbmQodm9pZCAwLDEsMSwxLDAsMCksd3IuYmluZCh2b2lkIDAsMSwxLDEsMCwxKSx3ci5iaW5kKHZvaWQgMCwxLDEsMSwwLDIpLHdyLmJpbmQodm9pZCAwLDEsMSwxLDAsMyksd3IuYmluZCh2b2lkIDAsMSwxLDEsMSwwKSx3ci5iaW5kKHZvaWQgMCwxLDEsMSwxLDEpLHdyLmJpbmQodm9pZCAwLDEsMSwxLDEsMiksd3IuYmluZCh2b2lkIDAsMSwxLDEsMSwzKV07dmFyIGpyPUFycmF5LmZyb218fGZ1bmN0aW9uKGUpe3JldHVybiBlLm1hdGNoKC9bXFx1RDgwMC1cXHVEQkZGXVtcXHVEQzAwLVxcdURGRkZdP3xbXlxcdUQ4MDAtXFx1REZGRl18Li9nKXx8W119O2Z1bmN0aW9uIFNyKGUpeyhlPWV8fHt9KS5lbXB0eXx8KEV0KGUuZmFtaWx5TmFtZSxcIldoZW4gY3JlYXRpbmcgYSBuZXcgRm9udCBvYmplY3QsIGZhbWlseU5hbWUgaXMgcmVxdWlyZWQuXCIpLEV0KGUuc3R5bGVOYW1lLFwiV2hlbiBjcmVhdGluZyBhIG5ldyBGb250IG9iamVjdCwgc3R5bGVOYW1lIGlzIHJlcXVpcmVkLlwiKSxFdChlLnVuaXRzUGVyRW0sXCJXaGVuIGNyZWF0aW5nIGEgbmV3IEZvbnQgb2JqZWN0LCB1bml0c1BlckVtIGlzIHJlcXVpcmVkLlwiKSxFdChlLmFzY2VuZGVyLFwiV2hlbiBjcmVhdGluZyBhIG5ldyBGb250IG9iamVjdCwgYXNjZW5kZXIgaXMgcmVxdWlyZWQuXCIpLEV0KGUuZGVzY2VuZGVyLFwiV2hlbiBjcmVhdGluZyBhIG5ldyBGb250IG9iamVjdCwgZGVzY2VuZGVyIGlzIHJlcXVpcmVkLlwiKSxFdChlLmRlc2NlbmRlcjwwLFwiRGVzY2VuZGVyIHNob3VsZCBiZSBuZWdhdGl2ZSAoZS5nLiAtNTEyKS5cIiksdGhpcy5uYW1lcz17Zm9udEZhbWlseTp7ZW46ZS5mYW1pbHlOYW1lfHxcIiBcIn0sZm9udFN1YmZhbWlseTp7ZW46ZS5zdHlsZU5hbWV8fFwiIFwifSxmdWxsTmFtZTp7ZW46ZS5mdWxsTmFtZXx8ZS5mYW1pbHlOYW1lK1wiIFwiK2Uuc3R5bGVOYW1lfSxwb3N0U2NyaXB0TmFtZTp7ZW46ZS5wb3N0U2NyaXB0TmFtZXx8KGUuZmFtaWx5TmFtZStlLnN0eWxlTmFtZSkucmVwbGFjZSgvXFxzL2csXCJcIil9LGRlc2lnbmVyOntlbjplLmRlc2lnbmVyfHxcIiBcIn0sZGVzaWduZXJVUkw6e2VuOmUuZGVzaWduZXJVUkx8fFwiIFwifSxtYW51ZmFjdHVyZXI6e2VuOmUubWFudWZhY3R1cmVyfHxcIiBcIn0sbWFudWZhY3R1cmVyVVJMOntlbjplLm1hbnVmYWN0dXJlclVSTHx8XCIgXCJ9LGxpY2Vuc2U6e2VuOmUubGljZW5zZXx8XCIgXCJ9LGxpY2Vuc2VVUkw6e2VuOmUubGljZW5zZVVSTHx8XCIgXCJ9LHZlcnNpb246e2VuOmUudmVyc2lvbnx8XCJWZXJzaW9uIDAuMVwifSxkZXNjcmlwdGlvbjp7ZW46ZS5kZXNjcmlwdGlvbnx8XCIgXCJ9LGNvcHlyaWdodDp7ZW46ZS5jb3B5cmlnaHR8fFwiIFwifSx0cmFkZW1hcms6e2VuOmUudHJhZGVtYXJrfHxcIiBcIn19LHRoaXMudW5pdHNQZXJFbT1lLnVuaXRzUGVyRW18fDFlMyx0aGlzLmFzY2VuZGVyPWUuYXNjZW5kZXIsdGhpcy5kZXNjZW5kZXI9ZS5kZXNjZW5kZXIsdGhpcy5jcmVhdGVkVGltZXN0YW1wPWUuY3JlYXRlZFRpbWVzdGFtcCx0aGlzLnRhYmxlcz17b3MyOnt1c1dlaWdodENsYXNzOmUud2VpZ2h0Q2xhc3N8fHRoaXMudXNXZWlnaHRDbGFzc2VzLk1FRElVTSx1c1dpZHRoQ2xhc3M6ZS53aWR0aENsYXNzfHx0aGlzLnVzV2lkdGhDbGFzc2VzLk1FRElVTSxmc1NlbGVjdGlvbjplLmZzU2VsZWN0aW9ufHx0aGlzLmZzU2VsZWN0aW9uVmFsdWVzLlJFR1VMQVJ9fSksdGhpcy5zdXBwb3J0ZWQ9ITAsdGhpcy5nbHlwaHM9bmV3IF9lLkdseXBoU2V0KHRoaXMsZS5nbHlwaHN8fFtdKSx0aGlzLmVuY29kaW5nPW5ldyBmZSh0aGlzKSx0aGlzLnBvc2l0aW9uPW5ldyB4dCh0aGlzKSx0aGlzLnN1YnN0aXR1dGlvbj1uZXcgd3QodGhpcyksdGhpcy50YWJsZXM9dGhpcy50YWJsZXN8fHt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaGludGluZ1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGludGluZz90aGlzLl9oaW50aW5nOlwidHJ1ZXR5cGVcIj09PXRoaXMub3V0bGluZXNGb3JtYXQ/dGhpcy5faGludGluZz1uZXcgVXQodGhpcyk6dm9pZCAwfX0pfWZ1bmN0aW9uIE1yKGUsdCl7dmFyIHI9SlNPTi5zdHJpbmdpZnkoZSksbj0yNTY7Zm9yKHZhciBvIGluIHQpe3ZhciBpPXBhcnNlSW50KG8pO2lmKGkmJiEoaTwyNTYpKXtpZihKU09OLnN0cmluZ2lmeSh0W29dKT09PXIpcmV0dXJuIGk7bjw9aSYmKG49aSsxKX19cmV0dXJuIHRbbl09ZSxufWZ1bmN0aW9uIEVyKGUsdCxyLG4pe2Zvcih2YXIgbz1be25hbWU6XCJuYW1lSURfXCIrZSx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6TXIodC5uYW1lLG4pfSx7bmFtZTpcImZsYWdzX1wiK2UsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9XSxpPTA7aTxyLmxlbmd0aDsrK2kpe3ZhciBhPXJbaV0udGFnO28ucHVzaCh7bmFtZTpcImF4aXNfXCIrZStcIiBcIithLHR5cGU6XCJGSVhFRFwiLHZhbHVlOnQuY29vcmRpbmF0ZXNbYV08PDE2fSl9cmV0dXJuIG99ZnVuY3Rpb24gVHIoZSx0LHIsbil7dmFyIG89e30saT1uZXcgYWUuUGFyc2VyKGUsdCk7by5uYW1lPW5baS5wYXJzZVVTaG9ydCgpXXx8e30saS5za2lwKFwidVNob3J0XCIsMSksby5jb29yZGluYXRlcz17fTtmb3IodmFyIGE9MDthPHIubGVuZ3RoOysrYSlvLmNvb3JkaW5hdGVzW3JbYV0udGFnXT1pLnBhcnNlRml4ZWQoKTtyZXR1cm4gb31Tci5wcm90b3R5cGUuaGFzQ2hhcj1mdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9PXRoaXMuZW5jb2RpbmcuY2hhclRvR2x5cGhJbmRleChlKX0sU3IucHJvdG90eXBlLmNoYXJUb0dseXBoSW5kZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZW5jb2RpbmcuY2hhclRvR2x5cGhJbmRleChlKX0sU3IucHJvdG90eXBlLmNoYXJUb0dseXBoPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuY2hhclRvR2x5cGhJbmRleChlKSxyPXRoaXMuZ2x5cGhzLmdldCh0KTtyZXR1cm4gcj1yfHx0aGlzLmdseXBocy5nZXQoMCl9LFNyLnByb3RvdHlwZS5zdHJpbmdUb0dseXBocz1mdW5jdGlvbihlLHQpe3Q9dHx8dGhpcy5kZWZhdWx0UmVuZGVyT3B0aW9ucztmb3IodmFyIHI9anIoZSksbj1bXSxvPTA7bzxyLmxlbmd0aDtvKz0xKXt2YXIgaT1yW29dO24ucHVzaCh0aGlzLmNoYXJUb0dseXBoSW5kZXgoaSkpfXZhciBhPW4ubGVuZ3RoO2lmKHQuZmVhdHVyZXMpe3ZhciBzPXQuc2NyaXB0fHx0aGlzLnN1YnN0aXR1dGlvbi5nZXREZWZhdWx0U2NyaXB0TmFtZSgpLGw9W107dC5mZWF0dXJlcy5saWdhJiYobD1sLmNvbmNhdCh0aGlzLnN1YnN0aXR1dGlvbi5nZXRGZWF0dXJlKFwibGlnYVwiLHMsdC5sYW5ndWFnZSkpKSx0LmZlYXR1cmVzLnJsaWcmJihsPWwuY29uY2F0KHRoaXMuc3Vic3RpdHV0aW9uLmdldEZlYXR1cmUoXCJybGlnXCIscyx0Lmxhbmd1YWdlKSkpO2Zvcih2YXIgdT0wO3U8YTt1Kz0xKWZvcih2YXIgYz0wO2M8bC5sZW5ndGg7YysrKXtmb3IodmFyIGQ9bFtjXSxmPWQuc3ViLGg9Zi5sZW5ndGgscD0wO3A8aCYmZltwXT09PW5bdStwXTspcCsrO3A9PT1oJiYobi5zcGxpY2UodSxoLGQuYnkpLGE9YS1oKzEpfX1mb3IodmFyIHk9bmV3IEFycmF5KGEpLG09dGhpcy5nbHlwaHMuZ2V0KDApLGc9MDtnPGE7Zys9MSl5W2ddPXRoaXMuZ2x5cGhzLmdldChuW2ddKXx8bTtyZXR1cm4geX0sU3IucHJvdG90eXBlLm5hbWVUb0dseXBoSW5kZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ2x5cGhOYW1lcy5uYW1lVG9HbHlwaEluZGV4KGUpfSxTci5wcm90b3R5cGUubmFtZVRvR2x5cGg9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5uYW1lVG9HbHlwaEluZGV4KGUpLHI9dGhpcy5nbHlwaHMuZ2V0KHQpO3JldHVybiByPXJ8fHRoaXMuZ2x5cGhzLmdldCgwKX0sU3IucHJvdG90eXBlLmdseXBoSW5kZXhUb05hbWU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ2x5cGhOYW1lcy5nbHlwaEluZGV4VG9OYW1lP3RoaXMuZ2x5cGhOYW1lcy5nbHlwaEluZGV4VG9OYW1lKGUpOlwiXCJ9LFNyLnByb3RvdHlwZS5nZXRLZXJuaW5nVmFsdWU9ZnVuY3Rpb24oZSx0KXtlPWUuaW5kZXh8fGUsdD10LmluZGV4fHx0O3ZhciByPXRoaXMucG9zaXRpb24uZGVmYXVsdEtlcm5pbmdUYWJsZXM7cmV0dXJuIHI/dGhpcy5wb3NpdGlvbi5nZXRLZXJuaW5nVmFsdWUocixlLHQpOnRoaXMua2VybmluZ1BhaXJzW2UrXCIsXCIrdF18fDB9LFNyLnByb3RvdHlwZS5kZWZhdWx0UmVuZGVyT3B0aW9ucz17a2VybmluZzohMCxmZWF0dXJlczp7bGlnYTohMCxybGlnOiEwfX0sU3IucHJvdG90eXBlLmZvckVhY2hHbHlwaD1mdW5jdGlvbihlLHQscixuLG8saSl7dD12b2lkIDAhPT10P3Q6MCxyPXZvaWQgMCE9PXI/cjowLG49dm9pZCAwIT09bj9uOjcyLG89b3x8dGhpcy5kZWZhdWx0UmVuZGVyT3B0aW9uczt2YXIgYSxzPTEvdGhpcy51bml0c1BlckVtKm4sbD10aGlzLnN0cmluZ1RvR2x5cGhzKGUsbyk7aWYoby5rZXJuaW5nKXt2YXIgdT1vLnNjcmlwdHx8dGhpcy5wb3NpdGlvbi5nZXREZWZhdWx0U2NyaXB0TmFtZSgpO2E9dGhpcy5wb3NpdGlvbi5nZXRLZXJuaW5nVGFibGVzKHUsby5sYW5ndWFnZSl9Zm9yKHZhciBjPTA7YzxsLmxlbmd0aDtjKz0xKXt2YXIgZD1sW2NdO2lmKGkuY2FsbCh0aGlzLGQsdCxyLG4sbyksZC5hZHZhbmNlV2lkdGgmJih0Kz1kLmFkdmFuY2VXaWR0aCpzKSxvLmtlcm5pbmcmJmM8bC5sZW5ndGgtMSl0Kz0oYT90aGlzLnBvc2l0aW9uLmdldEtlcm5pbmdWYWx1ZShhLGQuaW5kZXgsbFtjKzFdLmluZGV4KTp0aGlzLmdldEtlcm5pbmdWYWx1ZShkLGxbYysxXSkpKnM7by5sZXR0ZXJTcGFjaW5nP3QrPW8ubGV0dGVyU3BhY2luZypuOm8udHJhY2tpbmcmJih0Kz1vLnRyYWNraW5nLzFlMypuKX1yZXR1cm4gdH0sU3IucHJvdG90eXBlLmdldFBhdGg9ZnVuY3Rpb24oZSx0LHIsbixpKXt2YXIgYT1uZXcgRDtyZXR1cm4gdGhpcy5mb3JFYWNoR2x5cGgoZSx0LHIsbixpLGZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPWUuZ2V0UGF0aCh0LHIsbixpLHRoaXMpO2EuZXh0ZW5kKG8pfSksYX0sU3IucHJvdG90eXBlLmdldFBhdGhzPWZ1bmN0aW9uKGUsdCxyLG4saSl7dmFyIGE9W107cmV0dXJuIHRoaXMuZm9yRWFjaEdseXBoKGUsdCxyLG4saSxmdW5jdGlvbihlLHQscixuKXt2YXIgbz1lLmdldFBhdGgodCxyLG4saSx0aGlzKTthLnB1c2gobyl9KSxhfSxTci5wcm90b3R5cGUuZ2V0QWR2YW5jZVdpZHRoPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcy5mb3JFYWNoR2x5cGgoZSwwLDAsdCxyLGZ1bmN0aW9uKCl7fSl9LFNyLnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUsdCxyLG4sbyxpKXt0aGlzLmdldFBhdGgodCxyLG4sbyxpKS5kcmF3KGUpfSxTci5wcm90b3R5cGUuZHJhd1BvaW50cz1mdW5jdGlvbihvLGUsdCxyLG4saSl7dGhpcy5mb3JFYWNoR2x5cGgoZSx0LHIsbixpLGZ1bmN0aW9uKGUsdCxyLG4pe2UuZHJhd1BvaW50cyhvLHQscixuKX0pfSxTci5wcm90b3R5cGUuZHJhd01ldHJpY3M9ZnVuY3Rpb24obyxlLHQscixuLGkpe3RoaXMuZm9yRWFjaEdseXBoKGUsdCxyLG4saSxmdW5jdGlvbihlLHQscixuKXtlLmRyYXdNZXRyaWNzKG8sdCxyLG4pfSl9LFNyLnByb3RvdHlwZS5nZXRFbmdsaXNoTmFtZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm5hbWVzW2VdO2lmKHQpcmV0dXJuIHQuZW59LFNyLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbigpe3ZhciByPXRoaXM7ZnVuY3Rpb24gZShlKXt2YXIgdD1yLmdldEVuZ2xpc2hOYW1lKGUpO3QmJnQudHJpbSgpLmxlbmd0aH1lKFwiZm9udEZhbWlseVwiKSxlKFwid2VpZ2h0TmFtZVwiKSxlKFwibWFudWZhY3R1cmVyXCIpLGUoXCJjb3B5cmlnaHRcIiksZShcInZlcnNpb25cIiksdGhpcy51bml0c1BlckVtfSxTci5wcm90b3R5cGUudG9UYWJsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gbXQuZm9udFRvVGFibGUodGhpcyl9LFNyLnByb3RvdHlwZS50b0J1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oXCJGb250LnRvQnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBGb250LnRvQXJyYXlCdWZmZXIgaW5zdGVhZC5cIiksdGhpcy50b0FycmF5QnVmZmVyKCl9LFNyLnByb3RvdHlwZS50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMudG9UYWJsZXMoKS5lbmNvZGUoKSx0PW5ldyBBcnJheUJ1ZmZlcihlLmxlbmd0aCkscj1uZXcgVWludDhBcnJheSh0KSxuPTA7bjxlLmxlbmd0aDtuKyspcltuXT1lW25dO3JldHVybiB0fSxTci5wcm90b3R5cGUuZG93bmxvYWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRFbmdsaXNoTmFtZShcImZvbnRGYW1pbHlcIikscj10aGlzLmdldEVuZ2xpc2hOYW1lKFwiZm9udFN1YmZhbWlseVwiKTt0PXR8fGUucmVwbGFjZSgvXFxzL2csXCJcIikrXCItXCIrcitcIi5vdGZcIjt2YXIgbz10aGlzLnRvQXJyYXlCdWZmZXIoKTtpZihcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93KXdpbmRvdy5yZXF1ZXN0RmlsZVN5c3RlbT13aW5kb3cucmVxdWVzdEZpbGVTeXN0ZW18fHdpbmRvdy53ZWJraXRSZXF1ZXN0RmlsZVN5c3RlbSx3aW5kb3cucmVxdWVzdEZpbGVTeXN0ZW0od2luZG93LlRFTVBPUkFSWSxvLmJ5dGVMZW5ndGgsZnVuY3Rpb24oZSl7ZS5yb290LmdldEZpbGUodCx7Y3JlYXRlOiEwfSxmdW5jdGlvbihuKXtuLmNyZWF0ZVdyaXRlcihmdW5jdGlvbihlKXt2YXIgdD1uZXcgRGF0YVZpZXcobykscj1uZXcgQmxvYihbdF0se3R5cGU6XCJmb250L29wZW50eXBlXCJ9KTtlLndyaXRlKHIpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIndyaXRlZW5kXCIsZnVuY3Rpb24oKXtsb2NhdGlvbi5ocmVmPW4udG9VUkwoKX0sITEpfSl9KX0sZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKGUubmFtZStcIjogXCIrZS5tZXNzYWdlKX0pO2Vsc2V7dmFyIG49QnIoXCJmc1wiKSxpPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgRnIoZS5ieXRlTGVuZ3RoKSxyPW5ldyBVaW50OEFycmF5KGUpLG49MDtuPHQubGVuZ3RoOysrbil0W25dPXJbbl07cmV0dXJuIHR9KG8pO24ud3JpdGVGaWxlU3luYyh0LGkpfX0sU3IucHJvdG90eXBlLmZzU2VsZWN0aW9uVmFsdWVzPXtJVEFMSUM6MSxVTkRFUlNDT1JFOjIsTkVHQVRJVkU6NCxPVVRMSU5FRDo4LFNUUklLRU9VVDoxNixCT0xEOjMyLFJFR1VMQVI6NjQsVVNFUl9UWVBPX01FVFJJQ1M6MTI4LFdXUzoyNTYsT0JMSVFVRTo1MTJ9LFNyLnByb3RvdHlwZS51c1dpZHRoQ2xhc3Nlcz17VUxUUkFfQ09OREVOU0VEOjEsRVhUUkFfQ09OREVOU0VEOjIsQ09OREVOU0VEOjMsU0VNSV9DT05ERU5TRUQ6NCxNRURJVU06NSxTRU1JX0VYUEFOREVEOjYsRVhQQU5ERUQ6NyxFWFRSQV9FWFBBTkRFRDo4LFVMVFJBX0VYUEFOREVEOjl9LFNyLnByb3RvdHlwZS51c1dlaWdodENsYXNzZXM9e1RISU46MTAwLEVYVFJBX0xJR0hUOjIwMCxMSUdIVDozMDAsTk9STUFMOjQwMCxNRURJVU06NTAwLFNFTUlfQk9MRDo2MDAsQk9MRDo3MDAsRVhUUkFfQk9MRDo4MDAsQkxBQ0s6OTAwfTt2YXIgT3I9e21ha2U6ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8saSxhPW5ldyBKLlRhYmxlKFwiZnZhclwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiVUxPTkdcIix2YWx1ZTo2NTUzNn0se25hbWU6XCJvZmZzZXRUb0RhdGFcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJjb3VudFNpemVQYWlyc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToyfSx7bmFtZTpcImF4aXNDb3VudFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplLmF4ZXMubGVuZ3RofSx7bmFtZTpcImF4aXNTaXplXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjIwfSx7bmFtZTpcImluc3RhbmNlQ291bnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ZS5pbnN0YW5jZXMubGVuZ3RofSx7bmFtZTpcImluc3RhbmNlU2l6ZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTo0KzQqZS5heGVzLmxlbmd0aH1dKTthLm9mZnNldFRvRGF0YT1hLnNpemVPZigpO2Zvcih2YXIgcz0wO3M8ZS5heGVzLmxlbmd0aDtzKyspYS5maWVsZHM9YS5maWVsZHMuY29uY2F0KChyPXMsbj1lLmF4ZXNbc10sbz10LGk9TXIobi5uYW1lLG8pLFt7bmFtZTpcInRhZ19cIityLHR5cGU6XCJUQUdcIix2YWx1ZTpuLnRhZ30se25hbWU6XCJtaW5WYWx1ZV9cIityLHR5cGU6XCJGSVhFRFwiLHZhbHVlOm4ubWluVmFsdWU8PDE2fSx7bmFtZTpcImRlZmF1bHRWYWx1ZV9cIityLHR5cGU6XCJGSVhFRFwiLHZhbHVlOm4uZGVmYXVsdFZhbHVlPDwxNn0se25hbWU6XCJtYXhWYWx1ZV9cIityLHR5cGU6XCJGSVhFRFwiLHZhbHVlOm4ubWF4VmFsdWU8PDE2fSx7bmFtZTpcImZsYWdzX1wiK3IsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwibmFtZUlEX1wiK3IsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOml9XSkpO2Zvcih2YXIgbD0wO2w8ZS5pbnN0YW5jZXMubGVuZ3RoO2wrKylhLmZpZWxkcz1hLmZpZWxkcy5jb25jYXQoRXIobCxlLmluc3RhbmNlc1tsXSxlLmF4ZXMsdCkpO3JldHVybiBhfSxwYXJzZTpmdW5jdGlvbihlLHQscil7dmFyIG49bmV3IGFlLlBhcnNlcihlLHQpLG89bi5wYXJzZVVMb25nKCk7TC5hcmd1bWVudCg2NTUzNj09PW8sXCJVbnN1cHBvcnRlZCBmdmFyIHRhYmxlIHZlcnNpb24uXCIpO3ZhciBpPW4ucGFyc2VPZmZzZXQxNigpO24uc2tpcChcInVTaG9ydFwiLDEpO2Zvcih2YXIgYSxzLGwsdSxjLGQ9bi5wYXJzZVVTaG9ydCgpLGY9bi5wYXJzZVVTaG9ydCgpLGg9bi5wYXJzZVVTaG9ydCgpLHA9bi5wYXJzZVVTaG9ydCgpLHk9W10sbT0wO208ZDttKyspeS5wdXNoKChhPWUscz10K2krbSpmLGw9cixjPXU9dm9pZCAwLHU9e30sYz1uZXcgYWUuUGFyc2VyKGEscyksdS50YWc9Yy5wYXJzZVRhZygpLHUubWluVmFsdWU9Yy5wYXJzZUZpeGVkKCksdS5kZWZhdWx0VmFsdWU9Yy5wYXJzZUZpeGVkKCksdS5tYXhWYWx1ZT1jLnBhcnNlRml4ZWQoKSxjLnNraXAoXCJ1U2hvcnRcIiwxKSx1Lm5hbWU9bFtjLnBhcnNlVVNob3J0KCldfHx7fSx1KSk7Zm9yKHZhciBnPVtdLHY9dCtpK2QqZixiPTA7YjxoO2IrKylnLnB1c2goVHIoZSx2K2IqcCx5LHIpKTtyZXR1cm57YXhlczp5LGluc3RhbmNlczpnfX19LENyPW5ldyBBcnJheSgxMCk7Q3JbMV09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LHQ9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiAxPT09dD97cG9zRm9ybWF0OjEsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLHZhbHVlOnRoaXMucGFyc2VWYWx1ZVJlY29yZCgpfToyPT09dD97cG9zRm9ybWF0OjIsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLHZhbHVlczp0aGlzLnBhcnNlVmFsdWVSZWNvcmRMaXN0KCl9OnZvaWQgTC5hc3NlcnQoITEsXCIweFwiK2UudG9TdHJpbmcoMTYpK1wiOiBHUE9TIGxvb2t1cCB0eXBlIDEgZm9ybWF0IG11c3QgYmUgMSBvciAyLlwiKX0sQ3JbMl09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LHQ9dGhpcy5wYXJzZVVTaG9ydCgpO0wuYXNzZXJ0KDE9PT10fHwyPT09dCxcIjB4XCIrZS50b1N0cmluZygxNikrXCI6IEdQT1MgbG9va3VwIHR5cGUgMiBmb3JtYXQgbXVzdCBiZSAxIG9yIDIuXCIpO3ZhciByPXRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxuPXRoaXMucGFyc2VVU2hvcnQoKSxvPXRoaXMucGFyc2VVU2hvcnQoKTtpZigxPT09dClyZXR1cm57cG9zRm9ybWF0OnQsY292ZXJhZ2U6cix2YWx1ZUZvcm1hdDE6bix2YWx1ZUZvcm1hdDI6byxwYWlyU2V0czp0aGlzLnBhcnNlTGlzdChvZS5wb2ludGVyKG9lLmxpc3QoZnVuY3Rpb24oKXtyZXR1cm57c2Vjb25kR2x5cGg6dGhpcy5wYXJzZVVTaG9ydCgpLHZhbHVlMTp0aGlzLnBhcnNlVmFsdWVSZWNvcmQobiksdmFsdWUyOnRoaXMucGFyc2VWYWx1ZVJlY29yZChvKX19KSkpfTtpZigyPT09dCl7dmFyIGk9dGhpcy5wYXJzZVBvaW50ZXIob2UuY2xhc3NEZWYpLGE9dGhpcy5wYXJzZVBvaW50ZXIob2UuY2xhc3NEZWYpLHM9dGhpcy5wYXJzZVVTaG9ydCgpLGw9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybntwb3NGb3JtYXQ6dCxjb3ZlcmFnZTpyLHZhbHVlRm9ybWF0MTpuLHZhbHVlRm9ybWF0MjpvLGNsYXNzRGVmMTppLGNsYXNzRGVmMjphLGNsYXNzMUNvdW50OnMsY2xhc3MyQ291bnQ6bCxjbGFzc1JlY29yZHM6dGhpcy5wYXJzZUxpc3QocyxvZS5saXN0KGwsZnVuY3Rpb24oKXtyZXR1cm57dmFsdWUxOnRoaXMucGFyc2VWYWx1ZVJlY29yZChuKSx2YWx1ZTI6dGhpcy5wYXJzZVZhbHVlUmVjb3JkKG8pfX0pKX19fSxDclszXT1mdW5jdGlvbigpe3JldHVybntlcnJvcjpcIkdQT1MgTG9va3VwIDMgbm90IHN1cHBvcnRlZFwifX0sQ3JbNF09ZnVuY3Rpb24oKXtyZXR1cm57ZXJyb3I6XCJHUE9TIExvb2t1cCA0IG5vdCBzdXBwb3J0ZWRcIn19LENyWzVdPWZ1bmN0aW9uKCl7cmV0dXJue2Vycm9yOlwiR1BPUyBMb29rdXAgNSBub3Qgc3VwcG9ydGVkXCJ9fSxDcls2XT1mdW5jdGlvbigpe3JldHVybntlcnJvcjpcIkdQT1MgTG9va3VwIDYgbm90IHN1cHBvcnRlZFwifX0sQ3JbN109ZnVuY3Rpb24oKXtyZXR1cm57ZXJyb3I6XCJHUE9TIExvb2t1cCA3IG5vdCBzdXBwb3J0ZWRcIn19LENyWzhdPWZ1bmN0aW9uKCl7cmV0dXJue2Vycm9yOlwiR1BPUyBMb29rdXAgOCBub3Qgc3VwcG9ydGVkXCJ9fSxDcls5XT1mdW5jdGlvbigpe3JldHVybntlcnJvcjpcIkdQT1MgTG9va3VwIDkgbm90IHN1cHBvcnRlZFwifX07dmFyIExyPW5ldyBBcnJheSgxMCk7dmFyIFByPXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPW5ldyBvZShlLHQ9dHx8MCksbj1yLnBhcnNlVmVyc2lvbigxKTtyZXR1cm4gTC5hcmd1bWVudCgxPT09bnx8MS4xPT09bixcIlVuc3VwcG9ydGVkIEdQT1MgdGFibGUgdmVyc2lvbiBcIituKSwxPT09bj97dmVyc2lvbjpuLHNjcmlwdHM6ci5wYXJzZVNjcmlwdExpc3QoKSxmZWF0dXJlczpyLnBhcnNlRmVhdHVyZUxpc3QoKSxsb29rdXBzOnIucGFyc2VMb29rdXBMaXN0KENyKX06e3ZlcnNpb246bixzY3JpcHRzOnIucGFyc2VTY3JpcHRMaXN0KCksZmVhdHVyZXM6ci5wYXJzZUZlYXR1cmVMaXN0KCksbG9va3VwczpyLnBhcnNlTG9va3VwTGlzdChDciksdmFyaWF0aW9uczpyLnBhcnNlRmVhdHVyZVZhcmlhdGlvbnNMaXN0KCl9fSxtYWtlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgSi5UYWJsZShcIkdQT1NcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6NjU1MzZ9LHtuYW1lOlwic2NyaXB0c1wiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOm5ldyBKLlNjcmlwdExpc3QoZS5zY3JpcHRzKX0se25hbWU6XCJmZWF0dXJlc1wiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOm5ldyBKLkZlYXR1cmVMaXN0KGUuZmVhdHVyZXMpfSx7bmFtZTpcImxvb2t1cHNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgSi5Mb29rdXBMaXN0KGUubG9va3VwcyxMcil9XSl9fTt2YXIgQXI9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IGFlLlBhcnNlcihlLHQpLG49ci5wYXJzZVVTaG9ydCgpO2lmKDA9PT1uKXJldHVybiBmdW5jdGlvbihlKXt2YXIgdD17fTtlLnNraXAoXCJ1U2hvcnRcIik7dmFyIHI9ZS5wYXJzZVVTaG9ydCgpO0wuYXJndW1lbnQoMD09PXIsXCJVbnN1cHBvcnRlZCBrZXJuIHN1Yi10YWJsZSB2ZXJzaW9uLlwiKSxlLnNraXAoXCJ1U2hvcnRcIiwyKTt2YXIgbj1lLnBhcnNlVVNob3J0KCk7ZS5za2lwKFwidVNob3J0XCIsMyk7Zm9yKHZhciBvPTA7bzxuO28rPTEpe3ZhciBpPWUucGFyc2VVU2hvcnQoKSxhPWUucGFyc2VVU2hvcnQoKSxzPWUucGFyc2VTaG9ydCgpO3RbaStcIixcIithXT1zfXJldHVybiB0fShyKTtpZigxPT09bilyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZS5za2lwKFwidVNob3J0XCIpLDE8ZS5wYXJzZVVMb25nKCkmJmNvbnNvbGUud2FybihcIk9ubHkgdGhlIGZpcnN0IGtlcm4gc3VidGFibGUgaXMgc3VwcG9ydGVkLlwiKSxlLnNraXAoXCJ1TG9uZ1wiKTt2YXIgcj0yNTUmZS5wYXJzZVVTaG9ydCgpO2lmKGUuc2tpcChcInVTaG9ydFwiKSwwPT1yKXt2YXIgbj1lLnBhcnNlVVNob3J0KCk7ZS5za2lwKFwidVNob3J0XCIsMyk7Zm9yKHZhciBvPTA7bzxuO28rPTEpe3ZhciBpPWUucGFyc2VVU2hvcnQoKSxhPWUucGFyc2VVU2hvcnQoKSxzPWUucGFyc2VTaG9ydCgpO3RbaStcIixcIithXT1zfX1yZXR1cm4gdH0ocik7dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQga2VybiB0YWJsZSB2ZXJzaW9uIChcIituK1wiKS5cIil9fTt2YXIga3I9e3BhcnNlOmZ1bmN0aW9uKGUsdCxyLG4pe2Zvcih2YXIgbz1uZXcgYWUuUGFyc2VyKGUsdCksaT1uP28ucGFyc2VVU2hvcnQ6by5wYXJzZVVMb25nLGE9W10scz0wO3M8cisxO3MrPTEpe3ZhciBsPWkuY2FsbChvKTtuJiYobCo9MiksYS5wdXNoKGwpfXJldHVybiBhfX07ZnVuY3Rpb24gUnIoZSxyKXtCcihcImZzXCIpLnJlYWRGaWxlKGUsZnVuY3Rpb24oZSx0KXtpZihlKXJldHVybiByKGUubWVzc2FnZSk7cihudWxsLE10KHQpKX0pfWZ1bmN0aW9uIERyKGUsdCl7dmFyIHI9bmV3IFhNTEh0dHBSZXF1ZXN0O3Iub3BlbihcImdldFwiLGUsITApLHIucmVzcG9uc2VUeXBlPVwiYXJyYXlidWZmZXJcIixyLm9ubG9hZD1mdW5jdGlvbigpe3JldHVybiByLnJlc3BvbnNlP3QobnVsbCxyLnJlc3BvbnNlKTp0KFwiRm9udCBjb3VsZCBub3QgYmUgbG9hZGVkOiBcIityLnN0YXR1c1RleHQpfSxyLm9uZXJyb3I9ZnVuY3Rpb24oKXt0KFwiRm9udCBjb3VsZCBub3QgYmUgbG9hZGVkXCIpfSxyLnNlbmQoKX1mdW5jdGlvbiBJcihlLHQpe2Zvcih2YXIgcj1bXSxuPTEyLG89MDtvPHQ7bys9MSl7dmFyIGk9YWUuZ2V0VGFnKGUsbiksYT1hZS5nZXRVTG9uZyhlLG4rNCkscz1hZS5nZXRVTG9uZyhlLG4rOCksbD1hZS5nZXRVTG9uZyhlLG4rMTIpO3IucHVzaCh7dGFnOmksY2hlY2tzdW06YSxvZmZzZXQ6cyxsZW5ndGg6bCxjb21wcmVzc2lvbjohMX0pLG4rPTE2fXJldHVybiByfWZ1bmN0aW9uIFVyKGUsdCl7aWYoXCJXT0ZGXCIhPT10LmNvbXByZXNzaW9uKXJldHVybntkYXRhOmUsb2Zmc2V0OnQub2Zmc2V0fTt2YXIgcj1uZXcgVWludDhBcnJheShlLmJ1ZmZlcix0Lm9mZnNldCsyLHQuY29tcHJlc3NlZExlbmd0aC0yKSxuPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoKTtpZihvKHIsbiksbi5ieXRlTGVuZ3RoIT09dC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiRGVjb21wcmVzc2lvbiBlcnJvcjogXCIrdC50YWcrXCIgZGVjb21wcmVzc2VkIGxlbmd0aCBkb2Vzbid0IG1hdGNoIHJlY29yZGVkIGxlbmd0aFwiKTtyZXR1cm57ZGF0YTpuZXcgRGF0YVZpZXcobi5idWZmZXIsMCksb2Zmc2V0OjB9fWZ1bmN0aW9uIE5yKGUpe3ZhciB0LHIsbixvLGksYSxzLGwsdSxjLGQsZixoLHAseT1uZXcgU3Ioe2VtcHR5OiEwfSksbT1uZXcgRGF0YVZpZXcoZSwwKSxnPVtdLHY9YWUuZ2V0VGFnKG0sMCk7aWYodj09PVN0cmluZy5mcm9tQ2hhckNvZGUoMCwxLDAsMCl8fFwidHJ1ZVwiPT09dnx8XCJ0eXAxXCI9PT12KXkub3V0bGluZXNGb3JtYXQ9XCJ0cnVldHlwZVwiLGc9SXIobSxuPWFlLmdldFVTaG9ydChtLDQpKTtlbHNlIGlmKFwiT1RUT1wiPT09dil5Lm91dGxpbmVzRm9ybWF0PVwiY2ZmXCIsZz1JcihtLG49YWUuZ2V0VVNob3J0KG0sNCkpO2Vsc2V7aWYoXCJ3T0ZGXCIhPT12KXRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIE9wZW5UeXBlIHNpZ25hdHVyZSBcIit2KTt2YXIgYj1hZS5nZXRUYWcobSw0KTtpZihiPT09U3RyaW5nLmZyb21DaGFyQ29kZSgwLDEsMCwwKSl5Lm91dGxpbmVzRm9ybWF0PVwidHJ1ZXR5cGVcIjtlbHNle2lmKFwiT1RUT1wiIT09Yil0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBPcGVuVHlwZSBmbGF2b3IgXCIrdik7eS5vdXRsaW5lc0Zvcm1hdD1cImNmZlwifWc9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9W10sbj00NCxvPTA7bzx0O28rPTEpe3ZhciBpPWFlLmdldFRhZyhlLG4pLGE9YWUuZ2V0VUxvbmcoZSxuKzQpLHM9YWUuZ2V0VUxvbmcoZSxuKzgpLGw9YWUuZ2V0VUxvbmcoZSxuKzEyKSx1PXZvaWQgMDt1PXM8bCYmXCJXT0ZGXCIsci5wdXNoKHt0YWc6aSxvZmZzZXQ6YSxjb21wcmVzc2lvbjp1LGNvbXByZXNzZWRMZW5ndGg6cyxsZW5ndGg6bH0pLG4rPTIwfXJldHVybiByfShtLG49YWUuZ2V0VVNob3J0KG0sMTIpKX1mb3IodmFyIF89MDtfPG47Xys9MSl7dmFyIHg9Z1tfXSx3PXZvaWQgMDtzd2l0Y2goeC50YWcpe2Nhc2VcImNtYXBcIjp3PVVyKG0seCkseS50YWJsZXMuY21hcD1zZS5wYXJzZSh3LmRhdGEsdy5vZmZzZXQpLHkuZW5jb2Rpbmc9bmV3IGhlKHkudGFibGVzLmNtYXApO2JyZWFrO2Nhc2VcImN2dCBcIjp3PVVyKG0seCkscD1uZXcgYWUuUGFyc2VyKHcuZGF0YSx3Lm9mZnNldCkseS50YWJsZXMuY3Z0PXAucGFyc2VTaG9ydExpc3QoeC5sZW5ndGgvMik7YnJlYWs7Y2FzZVwiZnZhclwiOmk9eDticmVhaztjYXNlXCJmcGdtXCI6dz1VcihtLHgpLHA9bmV3IGFlLlBhcnNlcih3LmRhdGEsdy5vZmZzZXQpLHkudGFibGVzLmZwZ209cC5wYXJzZUJ5dGVMaXN0KHgubGVuZ3RoKTticmVhaztjYXNlXCJoZWFkXCI6dz1VcihtLHgpLHkudGFibGVzLmhlYWQ9RmUucGFyc2Uody5kYXRhLHcub2Zmc2V0KSx5LnVuaXRzUGVyRW09eS50YWJsZXMuaGVhZC51bml0c1BlckVtLHQ9eS50YWJsZXMuaGVhZC5pbmRleFRvTG9jRm9ybWF0O2JyZWFrO2Nhc2VcImhoZWFcIjp3PVVyKG0seCkseS50YWJsZXMuaGhlYT1CZS5wYXJzZSh3LmRhdGEsdy5vZmZzZXQpLHkuYXNjZW5kZXI9eS50YWJsZXMuaGhlYS5hc2NlbmRlcix5LmRlc2NlbmRlcj15LnRhYmxlcy5oaGVhLmRlc2NlbmRlcix5Lm51bWJlck9mSE1ldHJpY3M9eS50YWJsZXMuaGhlYS5udW1iZXJPZkhNZXRyaWNzO2JyZWFrO2Nhc2VcImhtdHhcIjp1PXg7YnJlYWs7Y2FzZVwibHRhZ1wiOnc9VXIobSx4KSxyPVZlLnBhcnNlKHcuZGF0YSx3Lm9mZnNldCk7YnJlYWs7Y2FzZVwibWF4cFwiOnc9VXIobSx4KSx5LnRhYmxlcy5tYXhwPXplLnBhcnNlKHcuZGF0YSx3Lm9mZnNldCkseS5udW1HbHlwaHM9eS50YWJsZXMubWF4cC5udW1HbHlwaHM7YnJlYWs7Y2FzZVwibmFtZVwiOmY9eDticmVhaztjYXNlXCJPUy8yXCI6dz1VcihtLHgpLHkudGFibGVzLm9zMj1vdC5wYXJzZSh3LmRhdGEsdy5vZmZzZXQpO2JyZWFrO2Nhc2VcInBvc3RcIjp3PVVyKG0seCkseS50YWJsZXMucG9zdD1pdC5wYXJzZSh3LmRhdGEsdy5vZmZzZXQpLHkuZ2x5cGhOYW1lcz1uZXcgeWUoeS50YWJsZXMucG9zdCk7YnJlYWs7Y2FzZVwicHJlcFwiOnc9VXIobSx4KSxwPW5ldyBhZS5QYXJzZXIody5kYXRhLHcub2Zmc2V0KSx5LnRhYmxlcy5wcmVwPXAucGFyc2VCeXRlTGlzdCh4Lmxlbmd0aCk7YnJlYWs7Y2FzZVwiZ2x5ZlwiOmE9eDticmVhaztjYXNlXCJsb2NhXCI6ZD14O2JyZWFrO2Nhc2VcIkNGRiBcIjpvPXg7YnJlYWs7Y2FzZVwia2VyblwiOmM9eDticmVhaztjYXNlXCJHUE9TXCI6cz14O2JyZWFrO2Nhc2VcIkdTVUJcIjpsPXg7YnJlYWs7Y2FzZVwibWV0YVwiOmg9eH19dmFyIGo9VXIobSxmKTtpZih5LnRhYmxlcy5uYW1lPXJ0LnBhcnNlKGouZGF0YSxqLm9mZnNldCxyKSx5Lm5hbWVzPXkudGFibGVzLm5hbWUsYSYmZCl7dmFyIFM9MD09PXQsTT1VcihtLGQpLEU9a3IucGFyc2UoTS5kYXRhLE0ub2Zmc2V0LHkubnVtR2x5cGhzLFMpLFQ9VXIobSxhKTt5LmdseXBocz1JdC5wYXJzZShULmRhdGEsVC5vZmZzZXQsRSx5KX1lbHNle2lmKCFvKXRocm93IG5ldyBFcnJvcihcIkZvbnQgZG9lc24ndCBjb250YWluIFRydWVUeXBlIG9yIENGRiBvdXRsaW5lcy5cIik7dmFyIE89VXIobSxvKTtOZS5wYXJzZShPLmRhdGEsTy5vZmZzZXQseSl9dmFyIEM9VXIobSx1KTtpZihHZS5wYXJzZShDLmRhdGEsQy5vZmZzZXQseS5udW1iZXJPZkhNZXRyaWNzLHkubnVtR2x5cGhzLHkuZ2x5cGhzKSxmdW5jdGlvbihlKXtmb3IodmFyIHQscj1lLnRhYmxlcy5jbWFwLmdseXBoSW5kZXhNYXAsbj1PYmplY3Qua2V5cyhyKSxvPTA7bzxuLmxlbmd0aDtvKz0xKXt2YXIgaT1uW29dLGE9cltpXTsodD1lLmdseXBocy5nZXQoYSkpLmFkZFVuaWNvZGUocGFyc2VJbnQoaSkpfWZvcih2YXIgcz0wO3M8ZS5nbHlwaHMubGVuZ3RoO3MrPTEpdD1lLmdseXBocy5nZXQocyksZS5jZmZFbmNvZGluZz9lLmlzQ0lERm9udD90Lm5hbWU9XCJnaWRcIitzOnQubmFtZT1lLmNmZkVuY29kaW5nLmNoYXJzZXRbc106ZS5nbHlwaE5hbWVzLm5hbWVzJiYodC5uYW1lPWUuZ2x5cGhOYW1lcy5nbHlwaEluZGV4VG9OYW1lKHMpKX0oeSksYyl7dmFyIEw9VXIobSxjKTt5Lmtlcm5pbmdQYWlycz1Bci5wYXJzZShMLmRhdGEsTC5vZmZzZXQpfWVsc2UgeS5rZXJuaW5nUGFpcnM9e307aWYocyl7dmFyIFA9VXIobSxzKTt5LnRhYmxlcy5ncG9zPVByLnBhcnNlKFAuZGF0YSxQLm9mZnNldCkseS5wb3NpdGlvbi5pbml0KCl9aWYobCl7dmFyIEE9VXIobSxsKTt5LnRhYmxlcy5nc3ViPXV0LnBhcnNlKEEuZGF0YSxBLm9mZnNldCl9aWYoaSl7dmFyIGs9VXIobSxpKTt5LnRhYmxlcy5mdmFyPU9yLnBhcnNlKGsuZGF0YSxrLm9mZnNldCx5Lm5hbWVzKX1pZihoKXt2YXIgUj1VcihtLGgpO3kudGFibGVzLm1ldGE9Y3QucGFyc2UoUi5kYXRhLFIub2Zmc2V0KSx5Lm1ldGFzPXkudGFibGVzLm1ldGF9cmV0dXJuIHl9TS5Gb250PVNyLE0uR2x5cGg9Z2UsTS5QYXRoPUQsTS5Cb3VuZGluZ0JveD1ULE0uX3BhcnNlPWFlLE0ucGFyc2U9TnIsTS5sb2FkPWZ1bmN0aW9uKGUsbil7KFwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/UnI6RHIpKGUsZnVuY3Rpb24oZSx0KXtpZihlKXJldHVybiBuKGUpO3ZhciByO3RyeXtyPU5yKHQpfWNhdGNoKGUpe3JldHVybiBuKGUsbnVsbCl9cmV0dXJuIG4obnVsbCxyKX0pfSxNLmxvYWRTeW5jPWZ1bmN0aW9uKGUpe3JldHVybiBOcihNdChCcihcImZzXCIpLnJlYWRGaWxlU3luYyhlKSkpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoTSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KX0sXCJvYmplY3RcIj09dHlwZW9mIG4mJnZvaWQgMCE9PXI/dChuKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBpJiZpLmFtZD9pKFtcImV4cG9ydHNcIl0sdCk6dChlLm9wZW50eXBlPXt9KX0pLmNhbGwodGhpcyxCcihcImJ1ZmZlclwiKS5CdWZmZXIpfSx7YnVmZmVyOjQsZnM6Mn1dLDI0MDpbZnVuY3Rpb24oZSx0LHUpeyhmdW5jdGlvbihvKXtmdW5jdGlvbiBpKGUsdCl7Zm9yKHZhciByPTAsbj1lLmxlbmd0aC0xOzA8PW47bi0tKXt2YXIgbz1lW25dO1wiLlwiPT09bz9lLnNwbGljZShuLDEpOlwiLi5cIj09PW8/KGUuc3BsaWNlKG4sMSkscisrKTpyJiYoZS5zcGxpY2UobiwxKSxyLS0pfWlmKHQpZm9yKDtyLS07KWUudW5zaGlmdChcIi4uXCIpO3JldHVybiBlfWZ1bmN0aW9uIGEoZSx0KXtpZihlLmZpbHRlcilyZXR1cm4gZS5maWx0ZXIodCk7Zm9yKHZhciByPVtdLG49MDtuPGUubGVuZ3RoO24rKyl0KGVbbl0sbixlKSYmci5wdXNoKGVbbl0pO3JldHVybiByfXUucmVzb2x2ZT1mdW5jdGlvbigpe2Zvcih2YXIgZT1cIlwiLHQ9ITEscj1hcmd1bWVudHMubGVuZ3RoLTE7LTE8PXImJiF0O3ItLSl7dmFyIG49MDw9cj9hcmd1bWVudHNbcl06by5jd2QoKTtpZihcInN0cmluZ1wiIT10eXBlb2Ygbil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnRzIHRvIHBhdGgucmVzb2x2ZSBtdXN0IGJlIHN0cmluZ3NcIik7biYmKGU9bitcIi9cIitlLHQ9XCIvXCI9PT1uLmNoYXJBdCgwKSl9cmV0dXJuKHQ/XCIvXCI6XCJcIikrKGU9aShhKGUuc3BsaXQoXCIvXCIpLGZ1bmN0aW9uKGUpe3JldHVybiEhZX0pLCF0KS5qb2luKFwiL1wiKSl8fFwiLlwifSx1Lm5vcm1hbGl6ZT1mdW5jdGlvbihlKXt2YXIgdD11LmlzQWJzb2x1dGUoZSkscj1cIi9cIj09PW4oZSwtMSk7cmV0dXJuKGU9aShhKGUuc3BsaXQoXCIvXCIpLGZ1bmN0aW9uKGUpe3JldHVybiEhZX0pLCF0KS5qb2luKFwiL1wiKSl8fHR8fChlPVwiLlwiKSxlJiZyJiYoZSs9XCIvXCIpLCh0P1wiL1wiOlwiXCIpK2V9LHUuaXNBYnNvbHV0ZT1mdW5jdGlvbihlKXtyZXR1cm5cIi9cIj09PWUuY2hhckF0KDApfSx1LmpvaW49ZnVuY3Rpb24oKXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCk7cmV0dXJuIHUubm9ybWFsaXplKGEoZSxmdW5jdGlvbihlLHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudHMgdG8gcGF0aC5qb2luIG11c3QgYmUgc3RyaW5nc1wiKTtyZXR1cm4gZX0pLmpvaW4oXCIvXCIpKX0sdS5yZWxhdGl2ZT1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIHIoZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aCYmXCJcIj09PWVbdF07dCsrKTtmb3IodmFyIHI9ZS5sZW5ndGgtMTswPD1yJiZcIlwiPT09ZVtyXTtyLS0pO3JldHVybiByPHQ/W106ZS5zbGljZSh0LHItdCsxKX1lPXUucmVzb2x2ZShlKS5zdWJzdHIoMSksdD11LnJlc29sdmUodCkuc3Vic3RyKDEpO2Zvcih2YXIgbj1yKGUuc3BsaXQoXCIvXCIpKSxvPXIodC5zcGxpdChcIi9cIikpLGk9TWF0aC5taW4obi5sZW5ndGgsby5sZW5ndGgpLGE9aSxzPTA7czxpO3MrKylpZihuW3NdIT09b1tzXSl7YT1zO2JyZWFrfXZhciBsPVtdO2ZvcihzPWE7czxuLmxlbmd0aDtzKyspbC5wdXNoKFwiLi5cIik7cmV0dXJuKGw9bC5jb25jYXQoby5zbGljZShhKSkpLmpvaW4oXCIvXCIpfSx1LnNlcD1cIi9cIix1LmRlbGltaXRlcj1cIjpcIix1LmRpcm5hbWU9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUmJihlKz1cIlwiKSwwPT09ZS5sZW5ndGgpcmV0dXJuXCIuXCI7Zm9yKHZhciB0PWUuY2hhckNvZGVBdCgwKSxyPTQ3PT09dCxuPS0xLG89ITAsaT1lLmxlbmd0aC0xOzE8PWk7LS1pKWlmKDQ3PT09KHQ9ZS5jaGFyQ29kZUF0KGkpKSl7aWYoIW8pe249aTticmVha319ZWxzZSBvPSExO3JldHVybi0xPT09bj9yP1wiL1wiOlwiLlwiOnImJjE9PT1uP1wiL1wiOmUuc2xpY2UoMCxuKX0sdS5iYXNlbmFtZT1mdW5jdGlvbihlLHQpe3ZhciByPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZSs9XCJcIik7dmFyIHQscj0wLG49LTEsbz0hMDtmb3IodD1lLmxlbmd0aC0xOzA8PXQ7LS10KWlmKDQ3PT09ZS5jaGFyQ29kZUF0KHQpKXtpZighbyl7cj10KzE7YnJlYWt9fWVsc2UtMT09PW4mJihvPSExLG49dCsxKTtyZXR1cm4tMT09PW4/XCJcIjplLnNsaWNlKHIsbil9KGUpO3JldHVybiB0JiZyLnN1YnN0cigtMSp0Lmxlbmd0aCk9PT10JiYocj1yLnN1YnN0cigwLHIubGVuZ3RoLXQubGVuZ3RoKSkscn0sdS5leHRuYW1lPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZSs9XCJcIik7Zm9yKHZhciB0PS0xLHI9MCxuPS0xLG89ITAsaT0wLGE9ZS5sZW5ndGgtMTswPD1hOy0tYSl7dmFyIHM9ZS5jaGFyQ29kZUF0KGEpO2lmKDQ3PT09cyl7aWYobyljb250aW51ZTtyPWErMTticmVha30tMT09PW4mJihvPSExLG49YSsxKSw0Nj09PXM/LTE9PT10P3Q9YToxIT09aSYmKGk9MSk6LTEhPT10JiYoaT0tMSl9cmV0dXJuLTE9PT10fHwtMT09PW58fDA9PT1pfHwxPT09aSYmdD09PW4tMSYmdD09PXIrMT9cIlwiOmUuc2xpY2UodCxuKX07dmFyIG49XCJiXCI9PT1cImFiXCIuc3Vic3RyKC0xKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIGUuc3Vic3RyKHQscil9OmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdDwwJiYodD1lLmxlbmd0aCt0KSxlLnN1YnN0cih0LHIpfX0pLmNhbGwodGhpcyxlKFwiX3Byb2Nlc3NcIikpfSx7X3Byb2Nlc3M6MjQxfV0sMjQxOltmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpPXQuZXhwb3J0cz17fTtmdW5jdGlvbiBhKCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBzKCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGwodCl7aWYobj09PXNldFRpbWVvdXQpcmV0dXJuIHNldFRpbWVvdXQodCwwKTtpZigobj09PWF8fCFuKSYmc2V0VGltZW91dClyZXR1cm4gbj1zZXRUaW1lb3V0LHNldFRpbWVvdXQodCwwKTt0cnl7cmV0dXJuIG4odCwwKX1jYXRjaChlKXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLHQsMCl9Y2F0Y2goZSl7cmV0dXJuIG4uY2FsbCh0aGlzLHQsMCl9fX0hZnVuY3Rpb24oKXt0cnl7bj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6YX1jYXRjaChlKXtuPWF9dHJ5e289XCJmdW5jdGlvblwiPT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpzfWNhdGNoKGUpe289c319KCk7dmFyIHUsYz1bXSxkPSExLGY9LTE7ZnVuY3Rpb24gaCgpe2QmJnUmJihkPSExLHUubGVuZ3RoP2M9dS5jb25jYXQoYyk6Zj0tMSxjLmxlbmd0aCYmcCgpKX1mdW5jdGlvbiBwKCl7aWYoIWQpe3ZhciBlPWwoaCk7ZD0hMDtmb3IodmFyIHQ9Yy5sZW5ndGg7dDspe2Zvcih1PWMsYz1bXTsrK2Y8dDspdSYmdVtmXS5ydW4oKTtmPS0xLHQ9Yy5sZW5ndGh9dT1udWxsLGQ9ITEsZnVuY3Rpb24odCl7aWYobz09PWNsZWFyVGltZW91dClyZXR1cm4gY2xlYXJUaW1lb3V0KHQpO2lmKChvPT09c3x8IW8pJiZjbGVhclRpbWVvdXQpcmV0dXJuIG89Y2xlYXJUaW1lb3V0LGNsZWFyVGltZW91dCh0KTt0cnl7byh0KX1jYXRjaChlKXt0cnl7cmV0dXJuIG8uY2FsbChudWxsLHQpfWNhdGNoKGUpe3JldHVybiBvLmNhbGwodGhpcyx0KX19fShlKX19ZnVuY3Rpb24geShlLHQpe3RoaXMuZnVuPWUsdGhpcy5hcnJheT10fWZ1bmN0aW9uIG0oKXt9aS5uZXh0VGljaz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZigxPGFyZ3VtZW50cy5sZW5ndGgpZm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl0W3ItMV09YXJndW1lbnRzW3JdO2MucHVzaChuZXcgeShlLHQpKSwxIT09Yy5sZW5ndGh8fGR8fGwocCl9LHkucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9LGkudGl0bGU9XCJicm93c2VyXCIsaS5icm93c2VyPSEwLGkuZW52PXt9LGkuYXJndj1bXSxpLnZlcnNpb249XCJcIixpLnZlcnNpb25zPXt9LGkub249bSxpLmFkZExpc3RlbmVyPW0saS5vbmNlPW0saS5vZmY9bSxpLnJlbW92ZUxpc3RlbmVyPW0saS5yZW1vdmVBbGxMaXN0ZW5lcnM9bSxpLmVtaXQ9bSxpLnByZXBlbmRMaXN0ZW5lcj1tLGkucHJlcGVuZE9uY2VMaXN0ZW5lcj1tLGkubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfSxpLmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9LGkuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9LGkuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfSxpLnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fSx7fV0sMjQyOltmdW5jdGlvbihlLHQscil7IWZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2lmKCFlLmZldGNoKXt2YXIgdD1cIlVSTFNlYXJjaFBhcmFtc1wiaW4gZSxyPVwiU3ltYm9sXCJpbiBlJiZcIml0ZXJhdG9yXCJpbiBTeW1ib2wsYT1cIkZpbGVSZWFkZXJcImluIGUmJlwiQmxvYlwiaW4gZSYmZnVuY3Rpb24oKXt0cnl7cmV0dXJuIG5ldyBCbG9iLCEwfWNhdGNoKGUpe3JldHVybiExfX0oKSxuPVwiRm9ybURhdGFcImluIGUsbz1cIkFycmF5QnVmZmVyXCJpbiBlO2lmKG8pdmFyIGk9W1wiW29iamVjdCBJbnQ4QXJyYXldXCIsXCJbb2JqZWN0IFVpbnQ4QXJyYXldXCIsXCJbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XVwiLFwiW29iamVjdCBJbnQxNkFycmF5XVwiLFwiW29iamVjdCBVaW50MTZBcnJheV1cIixcIltvYmplY3QgSW50MzJBcnJheV1cIixcIltvYmplY3QgVWludDMyQXJyYXldXCIsXCJbb2JqZWN0IEZsb2F0MzJBcnJheV1cIixcIltvYmplY3QgRmxvYXQ2NEFycmF5XVwiXSxzPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZEYXRhVmlldy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihlKX0sbD1BcnJheUJ1ZmZlci5pc1ZpZXd8fGZ1bmN0aW9uKGUpe3JldHVybiBlJiYtMTxpLmluZGV4T2YoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKX07cC5wcm90b3R5cGUuYXBwZW5kPWZ1bmN0aW9uKGUsdCl7ZT1kKGUpLHQ9Zih0KTt2YXIgcj10aGlzLm1hcFtlXTt0aGlzLm1hcFtlXT1yP3IrXCIsXCIrdDp0fSxwLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24oZSl7ZGVsZXRlIHRoaXMubWFwW2QoZSldfSxwLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZChlKSx0aGlzLmhhcyhlKT90aGlzLm1hcFtlXTpudWxsfSxwLnByb3RvdHlwZS5oYXM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubWFwLmhhc093blByb3BlcnR5KGQoZSkpfSxwLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0KXt0aGlzLm1hcFtkKGUpXT1mKHQpfSxwLnByb3RvdHlwZS5mb3JFYWNoPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByIGluIHRoaXMubWFwKXRoaXMubWFwLmhhc093blByb3BlcnR5KHIpJiZlLmNhbGwodCx0aGlzLm1hcFtyXSxyLHRoaXMpfSxwLnByb3RvdHlwZS5rZXlzPWZ1bmN0aW9uKCl7dmFyIHI9W107cmV0dXJuIHRoaXMuZm9yRWFjaChmdW5jdGlvbihlLHQpe3IucHVzaCh0KX0pLGgocil9LHAucHJvdG90eXBlLnZhbHVlcz1mdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24oZSl7dC5wdXNoKGUpfSksaCh0KX0scC5wcm90b3R5cGUuZW50cmllcz1mdW5jdGlvbigpe3ZhciByPVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24oZSx0KXtyLnB1c2goW3QsZV0pfSksaChyKX0sciYmKHAucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl09cC5wcm90b3R5cGUuZW50cmllcyk7dmFyIHU9W1wiREVMRVRFXCIsXCJHRVRcIixcIkhFQURcIixcIk9QVElPTlNcIixcIlBPU1RcIixcIlBVVFwiXTtfLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgXyh0aGlzLHtib2R5OnRoaXMuX2JvZHlJbml0fSl9LGIuY2FsbChfLnByb3RvdHlwZSksYi5jYWxsKHcucHJvdG90eXBlKSx3LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgdyh0aGlzLl9ib2R5SW5pdCx7c3RhdHVzOnRoaXMuc3RhdHVzLHN0YXR1c1RleHQ6dGhpcy5zdGF0dXNUZXh0LGhlYWRlcnM6bmV3IHAodGhpcy5oZWFkZXJzKSx1cmw6dGhpcy51cmx9KX0sdy5lcnJvcj1mdW5jdGlvbigpe3ZhciBlPW5ldyB3KG51bGwse3N0YXR1czowLHN0YXR1c1RleHQ6XCJcIn0pO3JldHVybiBlLnR5cGU9XCJlcnJvclwiLGV9O3ZhciBjPVszMDEsMzAyLDMwMywzMDcsMzA4XTt3LnJlZGlyZWN0PWZ1bmN0aW9uKGUsdCl7aWYoLTE9PT1jLmluZGV4T2YodCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbnZhbGlkIHN0YXR1cyBjb2RlXCIpO3JldHVybiBuZXcgdyhudWxsLHtzdGF0dXM6dCxoZWFkZXJzOntsb2NhdGlvbjplfX0pfSxlLkhlYWRlcnM9cCxlLlJlcXVlc3Q9XyxlLlJlc3BvbnNlPXcsZS5mZXRjaD1mdW5jdGlvbihyLG8pe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihuLGUpe3ZhciB0PW5ldyBfKHIsbyksaT1uZXcgWE1MSHR0cFJlcXVlc3Q7aS5vbmxvYWQ9ZnVuY3Rpb24oKXt2YXIgZSxvLHQ9e3N0YXR1czppLnN0YXR1cyxzdGF0dXNUZXh0Omkuc3RhdHVzVGV4dCxoZWFkZXJzOihlPWkuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCl8fFwiXCIsbz1uZXcgcCxlLnJlcGxhY2UoL1xccj9cXG5bXFx0IF0rL2csXCIgXCIpLnNwbGl0KC9cXHI/XFxuLykuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1lLnNwbGl0KFwiOlwiKSxyPXQuc2hpZnQoKS50cmltKCk7aWYocil7dmFyIG49dC5qb2luKFwiOlwiKS50cmltKCk7by5hcHBlbmQocixuKX19KSxvKX07dC51cmw9XCJyZXNwb25zZVVSTFwiaW4gaT9pLnJlc3BvbnNlVVJMOnQuaGVhZGVycy5nZXQoXCJYLVJlcXVlc3QtVVJMXCIpO3ZhciByPVwicmVzcG9uc2VcImluIGk/aS5yZXNwb25zZTppLnJlc3BvbnNlVGV4dDtuKG5ldyB3KHIsdCkpfSxpLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKG5ldyBUeXBlRXJyb3IoXCJOZXR3b3JrIHJlcXVlc3QgZmFpbGVkXCIpKX0saS5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXtlKG5ldyBUeXBlRXJyb3IoXCJOZXR3b3JrIHJlcXVlc3QgZmFpbGVkXCIpKX0saS5vcGVuKHQubWV0aG9kLHQudXJsLCEwKSxcImluY2x1ZGVcIj09PXQuY3JlZGVudGlhbHM/aS53aXRoQ3JlZGVudGlhbHM9ITA6XCJvbWl0XCI9PT10LmNyZWRlbnRpYWxzJiYoaS53aXRoQ3JlZGVudGlhbHM9ITEpLFwicmVzcG9uc2VUeXBlXCJpbiBpJiZhJiYoaS5yZXNwb25zZVR5cGU9XCJibG9iXCIpLHQuaGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uKGUsdCl7aS5zZXRSZXF1ZXN0SGVhZGVyKHQsZSl9KSxpLnNlbmQodm9pZCAwPT09dC5fYm9keUluaXQ/bnVsbDp0Ll9ib2R5SW5pdCl9KX0sZS5mZXRjaC5wb2x5ZmlsbD0hMH1mdW5jdGlvbiBkKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlJiYoZT1TdHJpbmcoZSkpLC9bXmEtejAtOVxcLSMkJSYnKisuXFxeX2B8fl0vaS50ZXN0KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBoZWFkZXIgZmllbGQgbmFtZVwiKTtyZXR1cm4gZS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIGYoZSl7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGUmJihlPVN0cmluZyhlKSksZX1mdW5jdGlvbiBoKHQpe3ZhciBlPXtuZXh0OmZ1bmN0aW9uKCl7dmFyIGU9dC5zaGlmdCgpO3JldHVybntkb25lOnZvaWQgMD09PWUsdmFsdWU6ZX19fTtyZXR1cm4gciYmKGVbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiBlfSksZX1mdW5jdGlvbiBwKHQpe3RoaXMubWFwPXt9LHQgaW5zdGFuY2VvZiBwP3QuZm9yRWFjaChmdW5jdGlvbihlLHQpe3RoaXMuYXBwZW5kKHQsZSl9LHRoaXMpOkFycmF5LmlzQXJyYXkodCk/dC5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RoaXMuYXBwZW5kKGVbMF0sZVsxXSl9LHRoaXMpOnQmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpLmZvckVhY2goZnVuY3Rpb24oZSl7dGhpcy5hcHBlbmQoZSx0W2VdKX0sdGhpcyl9ZnVuY3Rpb24geShlKXtpZihlLmJvZHlVc2VkKXJldHVybiBQcm9taXNlLnJlamVjdChuZXcgVHlwZUVycm9yKFwiQWxyZWFkeSByZWFkXCIpKTtlLmJvZHlVc2VkPSEwfWZ1bmN0aW9uIG0ocil7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7ci5vbmxvYWQ9ZnVuY3Rpb24oKXtlKHIucmVzdWx0KX0sci5vbmVycm9yPWZ1bmN0aW9uKCl7dChyLmVycm9yKX19KX1mdW5jdGlvbiBnKGUpe3ZhciB0PW5ldyBGaWxlUmVhZGVyLHI9bSh0KTtyZXR1cm4gdC5yZWFkQXNBcnJheUJ1ZmZlcihlKSxyfWZ1bmN0aW9uIHYoZSl7aWYoZS5zbGljZSlyZXR1cm4gZS5zbGljZSgwKTt2YXIgdD1uZXcgVWludDhBcnJheShlLmJ5dGVMZW5ndGgpO3JldHVybiB0LnNldChuZXcgVWludDhBcnJheShlKSksdC5idWZmZXJ9ZnVuY3Rpb24gYigpe3JldHVybiB0aGlzLmJvZHlVc2VkPSExLHRoaXMuX2luaXRCb2R5PWZ1bmN0aW9uKGUpe2lmKHRoaXMuX2JvZHlJbml0PWUpaWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpdGhpcy5fYm9keVRleHQ9ZTtlbHNlIGlmKGEmJkJsb2IucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoZSkpdGhpcy5fYm9keUJsb2I9ZTtlbHNlIGlmKG4mJkZvcm1EYXRhLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGUpKXRoaXMuX2JvZHlGb3JtRGF0YT1lO2Vsc2UgaWYodCYmVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGUpKXRoaXMuX2JvZHlUZXh0PWUudG9TdHJpbmcoKTtlbHNlIGlmKG8mJmEmJnMoZSkpdGhpcy5fYm9keUFycmF5QnVmZmVyPXYoZS5idWZmZXIpLHRoaXMuX2JvZHlJbml0PW5ldyBCbG9iKFt0aGlzLl9ib2R5QXJyYXlCdWZmZXJdKTtlbHNle2lmKCFvfHwhQXJyYXlCdWZmZXIucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoZSkmJiFsKGUpKXRocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkIEJvZHlJbml0IHR5cGVcIik7dGhpcy5fYm9keUFycmF5QnVmZmVyPXYoZSl9ZWxzZSB0aGlzLl9ib2R5VGV4dD1cIlwiO3RoaXMuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIil8fChcInN0cmluZ1wiPT10eXBlb2YgZT90aGlzLmhlYWRlcnMuc2V0KFwiY29udGVudC10eXBlXCIsXCJ0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLThcIik6dGhpcy5fYm9keUJsb2ImJnRoaXMuX2JvZHlCbG9iLnR5cGU/dGhpcy5oZWFkZXJzLnNldChcImNvbnRlbnQtdHlwZVwiLHRoaXMuX2JvZHlCbG9iLnR5cGUpOnQmJlVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihlKSYmdGhpcy5oZWFkZXJzLnNldChcImNvbnRlbnQtdHlwZVwiLFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9VVRGLThcIikpfSxhJiYodGhpcy5ibG9iPWZ1bmN0aW9uKCl7dmFyIGU9eSh0aGlzKTtpZihlKXJldHVybiBlO2lmKHRoaXMuX2JvZHlCbG9iKXJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5fYm9keUJsb2IpO2lmKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBCbG9iKFt0aGlzLl9ib2R5QXJyYXlCdWZmZXJdKSk7aWYodGhpcy5fYm9keUZvcm1EYXRhKXRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCByZWFkIEZvcm1EYXRhIGJvZHkgYXMgYmxvYlwiKTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBCbG9iKFt0aGlzLl9ib2R5VGV4dF0pKX0sdGhpcy5hcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ib2R5QXJyYXlCdWZmZXI/eSh0aGlzKXx8UHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcik6dGhpcy5ibG9iKCkudGhlbihnKX0pLHRoaXMudGV4dD1mdW5jdGlvbigpe3ZhciBlLHQscixuPXkodGhpcyk7aWYobilyZXR1cm4gbjtpZih0aGlzLl9ib2R5QmxvYilyZXR1cm4gZT10aGlzLl9ib2R5QmxvYix0PW5ldyBGaWxlUmVhZGVyLHI9bSh0KSx0LnJlYWRBc1RleHQoZSkscjtpZih0aGlzLl9ib2R5QXJyYXlCdWZmZXIpcmV0dXJuIFByb21pc2UucmVzb2x2ZShmdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3IFVpbnQ4QXJyYXkoZSkscj1uZXcgQXJyYXkodC5sZW5ndGgpLG49MDtuPHQubGVuZ3RoO24rKylyW25dPVN0cmluZy5mcm9tQ2hhckNvZGUodFtuXSk7cmV0dXJuIHIuam9pbihcIlwiKX0odGhpcy5fYm9keUFycmF5QnVmZmVyKSk7aWYodGhpcy5fYm9keUZvcm1EYXRhKXRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCByZWFkIEZvcm1EYXRhIGJvZHkgYXMgdGV4dFwiKTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlUZXh0KX0sbiYmKHRoaXMuZm9ybURhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50ZXh0KCkudGhlbih4KX0pLHRoaXMuanNvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRleHQoKS50aGVuKEpTT04ucGFyc2UpfSx0aGlzfWZ1bmN0aW9uIF8oZSx0KXt2YXIgcixuLG89KHQ9dHx8e30pLmJvZHk7aWYoZSBpbnN0YW5jZW9mIF8pe2lmKGUuYm9keVVzZWQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFscmVhZHkgcmVhZFwiKTt0aGlzLnVybD1lLnVybCx0aGlzLmNyZWRlbnRpYWxzPWUuY3JlZGVudGlhbHMsdC5oZWFkZXJzfHwodGhpcy5oZWFkZXJzPW5ldyBwKGUuaGVhZGVycykpLHRoaXMubWV0aG9kPWUubWV0aG9kLHRoaXMubW9kZT1lLm1vZGUsb3x8bnVsbD09ZS5fYm9keUluaXR8fChvPWUuX2JvZHlJbml0LGUuYm9keVVzZWQ9ITApfWVsc2UgdGhpcy51cmw9U3RyaW5nKGUpO2lmKHRoaXMuY3JlZGVudGlhbHM9dC5jcmVkZW50aWFsc3x8dGhpcy5jcmVkZW50aWFsc3x8XCJvbWl0XCIsIXQuaGVhZGVycyYmdGhpcy5oZWFkZXJzfHwodGhpcy5oZWFkZXJzPW5ldyBwKHQuaGVhZGVycykpLHRoaXMubWV0aG9kPShyPXQubWV0aG9kfHx0aGlzLm1ldGhvZHx8XCJHRVRcIixuPXIudG9VcHBlckNhc2UoKSwtMTx1LmluZGV4T2Yobik/bjpyKSx0aGlzLm1vZGU9dC5tb2RlfHx0aGlzLm1vZGV8fG51bGwsdGhpcy5yZWZlcnJlcj1udWxsLChcIkdFVFwiPT09dGhpcy5tZXRob2R8fFwiSEVBRFwiPT09dGhpcy5tZXRob2QpJiZvKXRocm93IG5ldyBUeXBlRXJyb3IoXCJCb2R5IG5vdCBhbGxvd2VkIGZvciBHRVQgb3IgSEVBRCByZXF1ZXN0c1wiKTt0aGlzLl9pbml0Qm9keShvKX1mdW5jdGlvbiB4KGUpe3ZhciBvPW5ldyBGb3JtRGF0YTtyZXR1cm4gZS50cmltKCkuc3BsaXQoXCImXCIpLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoZSl7dmFyIHQ9ZS5zcGxpdChcIj1cIikscj10LnNoaWZ0KCkucmVwbGFjZSgvXFwrL2csXCIgXCIpLG49dC5qb2luKFwiPVwiKS5yZXBsYWNlKC9cXCsvZyxcIiBcIik7by5hcHBlbmQoZGVjb2RlVVJJQ29tcG9uZW50KHIpLGRlY29kZVVSSUNvbXBvbmVudChuKSl9fSksb31mdW5jdGlvbiB3KGUsdCl7dD10fHx7fSx0aGlzLnR5cGU9XCJkZWZhdWx0XCIsdGhpcy5zdGF0dXM9dm9pZCAwPT09dC5zdGF0dXM/MjAwOnQuc3RhdHVzLHRoaXMub2s9MjAwPD10aGlzLnN0YXR1cyYmdGhpcy5zdGF0dXM8MzAwLHRoaXMuc3RhdHVzVGV4dD1cInN0YXR1c1RleHRcImluIHQ/dC5zdGF0dXNUZXh0OlwiT0tcIix0aGlzLmhlYWRlcnM9bmV3IHAodC5oZWFkZXJzKSx0aGlzLnVybD10LnVybHx8XCJcIix0aGlzLl9pbml0Qm9keShlKX19KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcyl9LHt9XSwyNDM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIGwsbj1pKGUoXCIuLi9jb3JlL21haW5cIikpLG89aShlKFwiLi4vY29sb3IvY29sb3JfY29udmVyc2lvblwiKSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHU9W3toOjAsczowLGI6LjgyNzUsbmFtZTpcImdyYXlcIn0se2g6MCxzOjAsYjouODYyNyxuYW1lOlwiZ3JheVwifSx7aDowLHM6MCxiOi43NTI5LG5hbWU6XCJncmF5XCJ9LHtoOi4wMTY3LHM6LjExNzYsYjoxLG5hbWU6XCJsaWdodCBwaW5rXCJ9XSxjPVt7aDowLHM6MCxiOjAsbmFtZTpcImJsYWNrXCJ9LHtoOjAsczowLGI6LjUsbmFtZTpcImdyYXlcIn0se2g6MCxzOjAsYjoxLG5hbWU6XCJ3aGl0ZVwifSx7aDowLHM6LjUsYjouNSxuYW1lOlwiZGFyayBtYXJvb25cIn0se2g6MCxzOi41LGI6MSxuYW1lOlwic2FsbW9uIHBpbmtcIn0se2g6MCxzOjEsYjowLG5hbWU6XCJibGFja1wifSx7aDowLHM6MSxiOi41LG5hbWU6XCJkYXJrIHJlZFwifSx7aDowLHM6MSxiOjEsbmFtZTpcInJlZFwifSx7aDo1LHM6MCxiOjEsbmFtZTpcInZlcnkgbGlnaHQgcGVhY2hcIn0se2g6NSxzOi41LGI6LjUsbmFtZTpcImJyb3duXCJ9LHtoOjUsczouNSxiOjEsbmFtZTpcInBlYWNoXCJ9LHtoOjUsczoxLGI6LjUsbmFtZTpcImJyaWNrIHJlZFwifSx7aDo1LHM6MSxiOjEsbmFtZTpcImNyaW1zb25cIn0se2g6MTAsczowLGI6MSxuYW1lOlwibGlnaHQgcGVhY2hcIn0se2g6MTAsczouNSxiOi41LG5hbWU6XCJicm93blwifSx7aDoxMCxzOi41LGI6MSxuYW1lOlwibGlnaHQgb3JhbmdlXCJ9LHtoOjEwLHM6MSxiOi41LG5hbWU6XCJicm93blwifSx7aDoxMCxzOjEsYjoxLG5hbWU6XCJvcmFuZ2VcIn0se2g6MTUsczowLGI6MSxuYW1lOlwidmVyeSBsaWdodCB5ZWxsb3dcIn0se2g6MTUsczouNSxiOi41LG5hbWU6XCJvbGl2ZSBncmVlblwifSx7aDoxNSxzOi41LGI6MSxuYW1lOlwibGlnaHQgeWVsbG93XCJ9LHtoOjE1LHM6MSxiOjAsbmFtZTpcImRhcmsgb2xpdmUgZ3JlZW5cIn0se2g6MTUsczoxLGI6LjUsbmFtZTpcIm9saXZlIGdyZWVuXCJ9LHtoOjE1LHM6MSxiOjEsbmFtZTpcInllbGxvd1wifSx7aDoyMCxzOjAsYjoxLG5hbWU6XCJ2ZXJ5IGxpZ2h0IHllbGxvd1wifSx7aDoyMCxzOi41LGI6LjUsbmFtZTpcIm9saXZlIGdyZWVuXCJ9LHtoOjIwLHM6LjUsYjoxLG5hbWU6XCJsaWdodCB5ZWxsb3cgZ3JlZW5cIn0se2g6MjAsczoxLGI6MCxuYW1lOlwiZGFyayBvbGl2ZSBncmVlblwifSx7aDoyMCxzOjEsYjouNSxuYW1lOlwiZGFyayB5ZWxsb3cgZ3JlZW5cIn0se2g6MjAsczoxLGI6MSxuYW1lOlwieWVsbG93IGdyZWVuXCJ9LHtoOjI1LHM6LjUsYjouNSxuYW1lOlwiZGFyayB5ZWxsb3cgZ3JlZW5cIn0se2g6MjUsczouNSxiOjEsbmFtZTpcImxpZ2h0IGdyZWVuXCJ9LHtoOjI1LHM6MSxiOi41LG5hbWU6XCJkYXJrIGdyZWVuXCJ9LHtoOjI1LHM6MSxiOjEsbmFtZTpcImdyZWVuXCJ9LHtoOjMwLHM6LjUsYjoxLG5hbWU6XCJsaWdodCBncmVlblwifSx7aDozMCxzOjEsYjouNSxuYW1lOlwiZGFyayBncmVlblwifSx7aDozMCxzOjEsYjoxLG5hbWU6XCJncmVlblwifSx7aDozNSxzOjAsYjouNSxuYW1lOlwibGlnaHQgZ3JlZW5cIn0se2g6MzUsczowLGI6MSxuYW1lOlwidmVyeSBsaWdodCBncmVlblwifSx7aDozNSxzOi41LGI6LjUsbmFtZTpcImRhcmsgZ3JlZW5cIn0se2g6MzUsczouNSxiOjEsbmFtZTpcImxpZ2h0IGdyZWVuXCJ9LHtoOjM1LHM6MSxiOjAsbmFtZTpcInZlcnkgZGFyayBncmVlblwifSx7aDozNSxzOjEsYjouNSxuYW1lOlwiZGFyayBncmVlblwifSx7aDozNSxzOjEsYjoxLG5hbWU6XCJncmVlblwifSx7aDo0MCxzOjAsYjoxLG5hbWU6XCJ2ZXJ5IGxpZ2h0IGdyZWVuXCJ9LHtoOjQwLHM6LjUsYjouNSxuYW1lOlwiZGFyayBncmVlblwifSx7aDo0MCxzOi41LGI6MSxuYW1lOlwibGlnaHQgZ3JlZW5cIn0se2g6NDAsczoxLGI6LjUsbmFtZTpcImRhcmsgZ3JlZW5cIn0se2g6NDAsczoxLGI6MSxuYW1lOlwiZ3JlZW5cIn0se2g6NDUsczouNSxiOjEsbmFtZTpcImxpZ2h0IHR1cnF1b2lzZVwifSx7aDo0NSxzOjEsYjouNSxuYW1lOlwiZGFyayB0dXJxdW9pc2VcIn0se2g6NDUsczoxLGI6MSxuYW1lOlwidHVycXVvaXNlXCJ9LHtoOjUwLHM6MCxiOjEsbmFtZTpcImxpZ2h0IHNreSBibHVlXCJ9LHtoOjUwLHM6LjUsYjouNSxuYW1lOlwiZGFyayBjeWFuXCJ9LHtoOjUwLHM6LjUsYjoxLG5hbWU6XCJsaWdodCBjeWFuXCJ9LHtoOjUwLHM6MSxiOi41LG5hbWU6XCJkYXJrIGN5YW5cIn0se2g6NTAsczoxLGI6MSxuYW1lOlwiY3lhblwifSx7aDo1NSxzOjAsYjoxLG5hbWU6XCJsaWdodCBza3kgYmx1ZVwifSx7aDo1NSxzOi41LGI6MSxuYW1lOlwibGlnaHQgc2t5IGJsdWVcIn0se2g6NTUsczoxLGI6LjUsbmFtZTpcImRhcmsgYmx1ZVwifSx7aDo1NSxzOjEsYjoxLG5hbWU6XCJza3kgYmx1ZVwifSx7aDo2MCxzOjAsYjouNSxuYW1lOlwiZ3JheVwifSx7aDo2MCxzOjAsYjoxLG5hbWU6XCJ2ZXJ5IGxpZ2h0IGJsdWVcIn0se2g6NjAsczouNSxiOi41LG5hbWU6XCJibHVlXCJ9LHtoOjYwLHM6LjUsYjoxLG5hbWU6XCJsaWdodCBibHVlXCJ9LHtoOjYwLHM6MSxiOi41LG5hbWU6XCJuYXZ5IGJsdWVcIn0se2g6NjAsczoxLGI6MSxuYW1lOlwiYmx1ZVwifSx7aDo2NSxzOjAsYjoxLG5hbWU6XCJsYXZlbmRlclwifSx7aDo2NSxzOi41LGI6LjUsbmFtZTpcIm5hdnkgYmx1ZVwifSx7aDo2NSxzOi41LGI6MSxuYW1lOlwibGlnaHQgcHVycGxlXCJ9LHtoOjY1LHM6MSxiOi41LG5hbWU6XCJkYXJrIG5hdnkgYmx1ZVwifSx7aDo2NSxzOjEsYjoxLG5hbWU6XCJibHVlXCJ9LHtoOjcwLHM6MCxiOjEsbmFtZTpcImxhdmVuZGVyXCJ9LHtoOjcwLHM6LjUsYjouNSxuYW1lOlwibmF2eSBibHVlXCJ9LHtoOjcwLHM6LjUsYjoxLG5hbWU6XCJsYXZlbmRlciBibHVlXCJ9LHtoOjcwLHM6MSxiOi41LG5hbWU6XCJkYXJrIG5hdnkgYmx1ZVwifSx7aDo3MCxzOjEsYjoxLG5hbWU6XCJibHVlXCJ9LHtoOjc1LHM6LjUsYjoxLG5hbWU6XCJsYXZlbmRlclwifSx7aDo3NSxzOjEsYjouNSxuYW1lOlwiZGFyayBwdXJwbGVcIn0se2g6NzUsczoxLGI6MSxuYW1lOlwicHVycGxlXCJ9LHtoOjgwLHM6LjUsYjoxLG5hbWU6XCJwaW5raXNoIHB1cnBsZVwifSx7aDo4MCxzOjEsYjouNSxuYW1lOlwiZGFyayBwdXJwbGVcIn0se2g6ODAsczoxLGI6MSxuYW1lOlwicHVycGxlXCJ9LHtoOjg1LHM6MCxiOjEsbmFtZTpcImxpZ2h0IHBpbmtcIn0se2g6ODUsczouNSxiOi41LG5hbWU6XCJwdXJwbGVcIn0se2g6ODUsczouNSxiOjEsbmFtZTpcImxpZ2h0IGZ1Y2hzaWFcIn0se2g6ODUsczoxLGI6LjUsbmFtZTpcImRhcmsgZnVjaHNpYVwifSx7aDo4NSxzOjEsYjoxLG5hbWU6XCJmdWNoc2lhXCJ9LHtoOjkwLHM6LjUsYjouNSxuYW1lOlwiZGFyayBmdWNoc2lhXCJ9LHtoOjkwLHM6LjUsYjoxLG5hbWU6XCJob3QgcGlua1wifSx7aDo5MCxzOjEsYjouNSxuYW1lOlwiZGFyayBmdWNoc2lhXCJ9LHtoOjkwLHM6MSxiOjEsbmFtZTpcImZ1Y2hzaWFcIn0se2g6OTUsczowLGI6MSxuYW1lOlwicGlua1wifSx7aDo5NSxzOi41LGI6MSxuYW1lOlwibGlnaHQgcGlua1wifSx7aDo5NSxzOjEsYjouNSxuYW1lOlwiZGFyayBtYWdlbnRhXCJ9LHtoOjk1LHM6MSxiOjEsbmFtZTpcIm1hZ2VudGFcIn1dO24uZGVmYXVsdC5wcm90b3R5cGUuX3JnYkNvbG9yTmFtZT1mdW5jdGlvbihlKXt2YXIgdD1vLmRlZmF1bHQuX3JnYmFUb0hTQkEoZSk7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0O2lmKDAhPT1lWzBdKXtlWzBdPU1hdGgucm91bmQoMTAwKmVbMF0pO3ZhciByPWVbMF0udG9TdHJpbmcoKS5zcGxpdChcIlwiKSxuPXIubGVuZ3RoLTE7cltuXT1wYXJzZUludChyW25dKSxyW25dPDIuNT9yW25dPTA6Mi41PD1yW25dJiZyW25dPDcuNSYmKHJbbl09NSksMj09PXIubGVuZ3RoPyhyWzBdPXBhcnNlSW50KHJbMF0pLDcuNTw9cltuXSYmKHJbbl09MCxyWzBdPXJbMF0rMSksZVswXT0xMCpyWzBdK3JbMV0pOjcuNTw9cltuXT9lWzBdPTEwOmVbMF09cltuXX1lWzJdPWVbMl0vMjU1O2Zvcih2YXIgbz1lLmxlbmd0aC0xOzE8PW87by0tKWVbb108PS4yNT9lW29dPTA6LjI1PGVbb10mJmVbb108Ljc1P2Vbb109LjU6ZVtvXT0xO2lmKDA9PT1lWzBdJiYwPT09ZVsxXSYmMT09PWVbMl0pe2Zvcih2YXIgaT0yOzA8PWk7aS0tKWxbaV09TWF0aC5yb3VuZCgxZTQqbFtpXSkvMWU0O2Zvcih2YXIgYT0wO2E8dS5sZW5ndGg7YSsrKXtpZih1W2FdLmg9PT1sWzBdJiZ1W2FdLnM9PT1sWzFdJiZ1W2FdLmI9PT1sWzJdKXt0PXVbYV0ubmFtZTticmVha310PVwid2hpdGVcIn19ZWxzZSBmb3IodmFyIHM9MDtzPGMubGVuZ3RoO3MrKylpZihjW3NdLmg9PT1lWzBdJiZjW3NdLnM9PT1lWzFdJiZjW3NdLmI9PT1lWzJdKXt0PWNbc10ubmFtZTticmVha31yZXR1cm4gdH0oWyhsPXQpWzBdLHRbMV0sdFsyXV0pfTt2YXIgYT1uLmRlZmF1bHQ7ci5kZWZhdWx0PWF9LHtcIi4uL2NvbG9yL2NvbG9yX2NvbnZlcnNpb25cIjoyNDksXCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiOjE2NixcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxfV0sMjQ0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGhcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZVwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O3ZhciBsPVwiX0Rlc2NyaXB0aW9uXCIsdT1cIl9mYWxsYmFja0Rlc2NcIixjPVwiX2ZhbGxiYWNrVGFibGVcIixkPVwiX0xhYmVsXCIsZj1cIl9sYWJlbERlc2NcIixoPVwiX2xhYmVsVGFibGVcIjtmdW5jdGlvbiBzKGUpe2lmKFwibGFiZWxcIj09PWV8fFwiZmFsbGJhY2tcIj09PWUpdGhyb3cgbmV3IEVycm9yKFwiZGVzY3JpcHRpb24gc2hvdWxkIG5vdCBiZSBMQUJFTCBvciBGQUxMQkFDS1wiKTtyZXR1cm4gZS5lbmRzV2l0aChcIi5cIil8fGUuZW5kc1dpdGgoXCI7XCIpfHxlLmVuZHNXaXRoKFwiLFwiKXx8ZS5lbmRzV2l0aChcIj9cIil8fGUuZW5kc1dpdGgoXCIhXCIpfHwoZSs9XCIuXCIpLGV9YS5kZWZhdWx0LnByb3RvdHlwZS5kZXNjcmliZT1mdW5jdGlvbihlLHQpe2lmKGEuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZGVzY3JpYmVcIixhcmd1bWVudHMpLFwic3RyaW5nXCI9PXR5cGVvZiBlKXt2YXIgcj10aGlzLmNhbnZhcy5pZDtlPXMoZSksdGhpcy5kdW1teURPTXx8KHRoaXMuZHVtbXlET009ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocikucGFyZW50Tm9kZSksdGhpcy5kZXNjcmlwdGlvbnN8fCh0aGlzLmRlc2NyaXB0aW9ucz17fSksdGhpcy5kZXNjcmlwdGlvbnMuZmFsbGJhY2s/dGhpcy5kZXNjcmlwdGlvbnMuZmFsbGJhY2suaW5uZXJIVE1MIT09ZSYmKHRoaXMuZGVzY3JpcHRpb25zLmZhbGxiYWNrLmlubmVySFRNTD1lKTp0aGlzLl9kZXNjcmliZUhUTUwoXCJmYWxsYmFja1wiLGUpLHQ9PT10aGlzLkxBQkVMJiYodGhpcy5kZXNjcmlwdGlvbnMubGFiZWw/dGhpcy5kZXNjcmlwdGlvbnMubGFiZWwuaW5uZXJIVE1MIT09ZSYmKHRoaXMuZGVzY3JpcHRpb25zLmxhYmVsLmlubmVySFRNTD1lKTp0aGlzLl9kZXNjcmliZUhUTUwoXCJsYWJlbFwiLGUpKX19LGEuZGVmYXVsdC5wcm90b3R5cGUuZGVzY3JpYmVFbGVtZW50PWZ1bmN0aW9uKGUsdCxyKXtpZihhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImRlc2NyaWJlRWxlbWVudFwiLGFyZ3VtZW50cyksXCJzdHJpbmdcIj09dHlwZW9mIHQmJlwic3RyaW5nXCI9PXR5cGVvZiBlKXt2YXIgbj10aGlzLmNhbnZhcy5pZDt0PXModCk7dmFyIG89ZnVuY3Rpb24oZSl7aWYoXCJsYWJlbFwiPT09ZXx8XCJmYWxsYmFja1wiPT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJlbGVtZW50IG5hbWUgc2hvdWxkIG5vdCBiZSBMQUJFTCBvciBGQUxMQkFDS1wiKTtlLmVuZHNXaXRoKFwiLlwiKXx8ZS5lbmRzV2l0aChcIjtcIil8fGUuZW5kc1dpdGgoXCIsXCIpP2U9ZS5yZXBsYWNlKC8uJC8sXCI6XCIpOmUuZW5kc1dpdGgoXCI6XCIpfHwoZSs9XCI6XCIpO3JldHVybiBlfShlKTtlPWUucmVwbGFjZSgvW15hLXpBLVowLTldL2csXCJcIik7dmFyIGk9Jzx0aCBzY29wZT1cInJvd1wiPicuY29uY2F0KG8sXCI8L3RoPjx0ZD5cIikuY29uY2F0KHQsXCI8L3RkPlwiKTt0aGlzLmR1bW15RE9NfHwodGhpcy5kdW1teURPTT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChuKS5wYXJlbnROb2RlKSx0aGlzLmRlc2NyaXB0aW9ucz90aGlzLmRlc2NyaXB0aW9ucy5mYWxsYmFja0VsZW1lbnRzfHwodGhpcy5kZXNjcmlwdGlvbnMuZmFsbGJhY2tFbGVtZW50cz17fSk6dGhpcy5kZXNjcmlwdGlvbnM9e2ZhbGxiYWNrRWxlbWVudHM6e319LHRoaXMuZGVzY3JpcHRpb25zLmZhbGxiYWNrRWxlbWVudHNbZV0/dGhpcy5kZXNjcmlwdGlvbnMuZmFsbGJhY2tFbGVtZW50c1tlXS5pbm5lckhUTUwhPT1pJiYodGhpcy5kZXNjcmlwdGlvbnMuZmFsbGJhY2tFbGVtZW50c1tlXS5pbm5lckhUTUw9aSk6dGhpcy5fZGVzY3JpYmVFbGVtZW50SFRNTChcImZhbGxiYWNrXCIsZSxpKSxyPT09dGhpcy5MQUJFTCYmKHRoaXMuZGVzY3JpcHRpb25zLmxhYmVsRWxlbWVudHN8fCh0aGlzLmRlc2NyaXB0aW9ucy5sYWJlbEVsZW1lbnRzPXt9KSx0aGlzLmRlc2NyaXB0aW9ucy5sYWJlbEVsZW1lbnRzW2VdP3RoaXMuZGVzY3JpcHRpb25zLmxhYmVsRWxlbWVudHNbZV0uaW5uZXJIVE1MIT09aSYmKHRoaXMuZGVzY3JpcHRpb25zLmxhYmVsRWxlbWVudHNbZV0uaW5uZXJIVE1MPWkpOnRoaXMuX2Rlc2NyaWJlRWxlbWVudEhUTUwoXCJsYWJlbFwiLGUsaSkpfX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fZGVzY3JpYmVIVE1MPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5jYW52YXMuaWQ7aWYoXCJmYWxsYmFja1wiPT09ZSl7aWYodGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChyK2wpKSl0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcitjKS5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmViZWdpblwiLCc8cCBpZD1cIicuY29uY2F0KHIrdSwnXCI+PC9wPicpKTtlbHNle3ZhciBuPSc8ZGl2IGlkPVwiJy5jb25jYXQocikuY29uY2F0KGwsJ1wiIHJvbGU9XCJyZWdpb25cIiBhcmlhLWxhYmVsPVwiQ2FudmFzIERlc2NyaXB0aW9uXCI+PHAgaWQ9XCInKS5jb25jYXQocikuY29uY2F0KHUsJ1wiPjwvcD48L2Rpdj4nKTt0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIsXCJhY2Nlc3NpYmxlT3V0cHV0XCIpKT90aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIsXCJhY2Nlc3NpYmxlT3V0cHV0XCIpKS5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmViZWdpblwiLG4pOnRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQocikpLmlubmVySFRNTD1ufXJldHVybiB0aGlzLmRlc2NyaXB0aW9ucy5mYWxsYmFjaz10aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIpLmNvbmNhdCh1KSksdm9pZCh0aGlzLmRlc2NyaXB0aW9ucy5mYWxsYmFjay5pbm5lckhUTUw9dCl9aWYoXCJsYWJlbFwiPT09ZSl7aWYodGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChyK2QpKSl0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIraCkpJiZ0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIraCkpLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWJlZ2luXCIsJzxwIGlkPVwiJy5jb25jYXQocikuY29uY2F0KGYsJ1wiPjwvcD4nKSk7ZWxzZXt2YXIgbz0nPGRpdiBpZD1cIicuY29uY2F0KHIpLmNvbmNhdChkLCdcIiBjbGFzcz1cInA1TGFiZWxcIj48cCBpZD1cIicpLmNvbmNhdChyKS5jb25jYXQoZiwnXCI+PC9wPjwvZGl2PicpO3RoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQocixcImFjY2Vzc2libGVPdXRwdXRMYWJlbFwiKSk/dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChyLFwiYWNjZXNzaWJsZU91dHB1dExhYmVsXCIpKS5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmViZWdpblwiLG8pOnRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIityKS5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmVuZFwiLG8pfXJldHVybiB0aGlzLmRlc2NyaXB0aW9ucy5sYWJlbD10aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcitmKSx2b2lkKHRoaXMuZGVzY3JpcHRpb25zLmxhYmVsLmlubmVySFRNTD10KX19LGEuZGVmYXVsdC5wcm90b3R5cGUuX2Rlc2NyaWJlRWxlbWVudEhUTUw9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMuY2FudmFzLmlkO2lmKFwiZmFsbGJhY2tcIj09PWUpe2lmKHRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQobitsKSkpdGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiK24rYyl8fHRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIituK3UpLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyZW5kXCIsJzx0YWJsZSBpZD1cIicuY29uY2F0KG4pLmNvbmNhdChjLCdcIj48Y2FwdGlvbj5DYW52YXMgZWxlbWVudHMgYW5kIHRoZWlyIGRlc2NyaXB0aW9uczwvY2FwdGlvbj48L3RhYmxlPicpKTtlbHNle3ZhciBvPSc8ZGl2IGlkPVwiJy5jb25jYXQobikuY29uY2F0KGwsJ1wiIHJvbGU9XCJyZWdpb25cIiBhcmlhLWxhYmVsPVwiQ2FudmFzIERlc2NyaXB0aW9uXCI+PHRhYmxlIGlkPVwiJykuY29uY2F0KG4pLmNvbmNhdChjLCdcIj48Y2FwdGlvbj5DYW52YXMgZWxlbWVudHMgYW5kIHRoZWlyIGRlc2NyaXB0aW9uczwvY2FwdGlvbj48L3RhYmxlPjwvZGl2PicpO3RoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQobixcImFjY2Vzc2libGVPdXRwdXRcIikpP3RoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQobixcImFjY2Vzc2libGVPdXRwdXRcIikpLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWJlZ2luXCIsbyk6dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiK24pLmlubmVySFRNTD1vfXZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtyZXR1cm4gaS5pZD1uK1wiX2Z0ZV9cIit0LHRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIituK2MpLmFwcGVuZENoaWxkKGkpLHRoaXMuZGVzY3JpcHRpb25zLmZhbGxiYWNrRWxlbWVudHNbdF09dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChuKS5jb25jYXQoXCJfZnRlX1wiKS5jb25jYXQodCkpLHZvaWQodGhpcy5kZXNjcmlwdGlvbnMuZmFsbGJhY2tFbGVtZW50c1t0XS5pbm5lckhUTUw9cil9aWYoXCJsYWJlbFwiPT09ZSl7aWYodGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChuK2QpKSl0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KG4raCkpfHx0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIrbitmKS5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmVuZFwiLCc8dGFibGUgaWQ9XCInLmNvbmNhdChuK2gsJ1wiPjwvdGFibGU+JykpO2Vsc2V7dmFyIGE9JzxkaXYgaWQ9XCInLmNvbmNhdChuKS5jb25jYXQoZCwnXCIgY2xhc3M9XCJwNUxhYmVsXCI+PHRhYmxlIGlkPVwiJykuY29uY2F0KG4pLmNvbmNhdChoLCdcIj48L3RhYmxlPjwvZGl2PicpO3RoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQobixcImFjY2Vzc2libGVPdXRwdXRMYWJlbFwiKSk/dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChuLFwiYWNjZXNzaWJsZU91dHB1dExhYmVsXCIpKS5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmViZWdpblwiLGEpOnRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIituKS5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmVuZFwiLGEpfXZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtzLmlkPW4rXCJfbHRlX1wiK3QsdGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiK24raCkuYXBwZW5kQ2hpbGQocyksdGhpcy5kZXNjcmlwdGlvbnMubGFiZWxFbGVtZW50c1t0XT10aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KG4pLmNvbmNhdChcIl9sdGVfXCIpLmNvbmNhdCh0KSksdGhpcy5kZXNjcmlwdGlvbnMubGFiZWxFbGVtZW50c1t0XS5pbm5lckhUTUw9cn19O3ZhciBvPWEuZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiOjE4MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuZW5kcy13aXRoXCI6MTg0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5fV0sMjQ1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtvLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVHcmlkT3V0cHV0PWZ1bmN0aW9uKGUpe2lmKHRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQoZSxcIl9zdW1tYXJ5XCIpKSl7dmFyIHQ9dGhpcy5fYWNjZXNzaWJsZU91dHB1dHNbZV0scj1mdW5jdGlvbihlLHQpe3ZhciByPVwiXCIsbj1cIlwiLG89MDtmb3IodmFyIGkgaW4gdCl7dmFyIGE9MDtmb3IodmFyIHMgaW4gdFtpXSl7dmFyIGw9JzxsaSBpZD1cIicuY29uY2F0KGUsXCJzaGFwZVwiKS5jb25jYXQobywnXCI+JykuY29uY2F0KHRbaV1bc10uY29sb3IsXCIgXCIpLmNvbmNhdChpLFwiLFwiKTtcImxpbmVcIj09PWk/bCs9XCIgbG9jYXRpb24gPSBcIi5jb25jYXQodFtpXVtzXS5wb3MsXCIsIGxlbmd0aCA9IFwiKS5jb25jYXQodFtpXVtzXS5sZW5ndGgsXCIgcGl4ZWxzXCIpOihsKz1cIiBsb2NhdGlvbiA9IFwiLmNvbmNhdCh0W2ldW3NdLnBvcyksXCJwb2ludFwiIT09aSYmKGwrPVwiLCBhcmVhID0gXCIuY29uY2F0KHRbaV1bc10uYXJlYSxcIiAlXCIpKSxsKz1cIjwvbGk+XCIpLHIrPWwsYSsrLG8rK31uPTE8YT9cIlwiLmNvbmNhdChuLFwiIFwiKS5jb25jYXQoYSxcIiBcIikuY29uY2F0KGksXCJzXCIpOlwiXCIuY29uY2F0KG4sXCIgXCIpLmNvbmNhdChhLFwiIFwiKS5jb25jYXQoaSl9cmV0dXJue251bVNoYXBlczpbbyxuXSxkZXRhaWxzOnJ9fShlLHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzKSxuPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPVwiXCIuY29uY2F0KHQsXCIgY2FudmFzLCBcIikuY29uY2F0KHIsXCIgYnkgXCIpLmNvbmNhdChuLFwiIHBpeGVscywgY29udGFpbnMgXCIpLmNvbmNhdChlWzBdKTtvPTE9PT1lWzBdP1wiXCIuY29uY2F0KG8sXCIgc2hhcGU6IFwiKS5jb25jYXQoZVsxXSk6XCJcIi5jb25jYXQobyxcIiBzaGFwZXM6IFwiKS5jb25jYXQoZVsxXSk7cmV0dXJuIG99KHIubnVtU2hhcGVzLHRoaXMuaW5ncmVkaWVudHMuY29sb3JzLmJhY2tncm91bmQsdGhpcy53aWR0aCx0aGlzLmhlaWdodCksbz1mdW5jdGlvbihlLHQpe3ZhciByPTAsbj1cIlwiLG89QXJyYXkuYXBwbHkobnVsbCxBcnJheSgxMCkpLm1hcChmdW5jdGlvbigpe30pO2Zvcih2YXIgaSBpbiBvKW9baV09QXJyYXkuYXBwbHkobnVsbCxBcnJheSgxMCkpLm1hcChmdW5jdGlvbigpe30pO2Zvcih2YXIgYSBpbiB0KWZvcih2YXIgcyBpbiB0W2FdKXt2YXIgbD12b2lkIDA7bD1cImxpbmVcIiE9PWE/JzxhIGhyZWY9XCIjJy5jb25jYXQoZSxcInNoYXBlXCIpLmNvbmNhdChyLCdcIj4nKS5jb25jYXQodFthXVtzXS5jb2xvcixcIiBcIikuY29uY2F0KGEsXCI8L2E+XCIpOic8YSBocmVmPVwiIycuY29uY2F0KGUsXCJzaGFwZVwiKS5jb25jYXQociwnXCI+JykuY29uY2F0KHRbYV1bc10uY29sb3IsXCIgXCIpLmNvbmNhdChhLFwiIG1pZHBvaW50PC9hPlwiKSxvW3RbYV1bc10ubG9jLmxvY1ldW3RbYV1bc10ubG9jLmxvY1hdP29bdFthXVtzXS5sb2MubG9jWV1bdFthXVtzXS5sb2MubG9jWF09b1t0W2FdW3NdLmxvYy5sb2NZXVt0W2FdW3NdLmxvYy5sb2NYXStcIiAgXCIrbDpvW3RbYV1bc10ubG9jLmxvY1ldW3RbYV1bc10ubG9jLmxvY1hdPWwscisrfWZvcih2YXIgdSBpbiBvKXt2YXIgYz1cIjx0cj5cIjtmb3IodmFyIGQgaW4gb1t1XSljKz1cIjx0ZD5cIix2b2lkIDAhPT1vW3VdW2RdJiYoYys9b1t1XVtkXSksYys9XCI8L3RkPlwiO249bitjK1wiPC90cj5cIn1yZXR1cm4gbn0oZSx0aGlzLmluZ3JlZGllbnRzLnNoYXBlcyk7biE9PXQuc3VtbWFyeS5pbm5lckhUTUwmJih0LnN1bW1hcnkuaW5uZXJIVE1MPW4pLG8hPT10Lm1hcC5pbm5lckhUTUwmJih0Lm1hcC5pbm5lckhUTUw9byksci5kZXRhaWxzIT09dC5zaGFwZURldGFpbHMuaW5uZXJIVE1MJiYodC5zaGFwZURldGFpbHMuaW5uZXJIVE1MPXIuZGV0YWlscyksdGhpcy5fYWNjZXNzaWJsZU91dHB1dHNbZV09dH19O3ZhciBpPW8uZGVmYXVsdDtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIjoxNjF9XSwyNDY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGxcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWRcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBsKGUsdCxyKXtyZXR1cm4gZVswXTwuNCp0P2VbMV08LjQqcj9cInRvcCBsZWZ0XCI6ZVsxXT4uNipyP1wiYm90dG9tIGxlZnRcIjpcIm1pZCBsZWZ0XCI6ZVswXT4uNip0P2VbMV08LjQqcj9cInRvcCByaWdodFwiOmVbMV0+LjYqcj9cImJvdHRvbSByaWdodFwiOlwibWlkIHJpZ2h0XCI6ZVsxXTwuNCpyP1widG9wIG1pZGRsZVwiOmVbMV0+LjYqcj9cImJvdHRvbSBtaWRkbGVcIjpcIm1pZGRsZVwifWZ1bmN0aW9uIHUoZSx0LHIpe3ZhciBuPU1hdGguZmxvb3IoZVswXS90KjEwKSxvPU1hdGguZmxvb3IoZVsxXS9yKjEwKTtyZXR1cm4gMTA9PT1uJiYtLW4sMTA9PT1vJiYtLW8se2xvY1g6bixsb2NZOm99fW8uZGVmYXVsdC5wcm90b3R5cGUudGV4dE91dHB1dD1mdW5jdGlvbihlKXtvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRPdXRwdXRcIixhcmd1bWVudHMpLHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLnRleHR8fCh0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy50ZXh0PSEwLHRoaXMuX2NyZWF0ZU91dHB1dChcInRleHRPdXRwdXRcIixcIkZhbGxiYWNrXCIpLGU9PT10aGlzLkxBQkVMJiYodGhpcy5fYWNjZXNzaWJsZU91dHB1dHMudGV4dExhYmVsPSEwLHRoaXMuX2NyZWF0ZU91dHB1dChcInRleHRPdXRwdXRcIixcIkxhYmVsXCIpKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuZ3JpZE91dHB1dD1mdW5jdGlvbihlKXtvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImdyaWRPdXRwdXRcIixhcmd1bWVudHMpLHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLmdyaWR8fCh0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy5ncmlkPSEwLHRoaXMuX2NyZWF0ZU91dHB1dChcImdyaWRPdXRwdXRcIixcIkZhbGxiYWNrXCIpLGU9PT10aGlzLkxBQkVMJiYodGhpcy5fYWNjZXNzaWJsZU91dHB1dHMuZ3JpZExhYmVsPSEwLHRoaXMuX2NyZWF0ZU91dHB1dChcImdyaWRPdXRwdXRcIixcIkxhYmVsXCIpKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuX2FkZEFjY3NPdXRwdXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWNjZXNzaWJsZU91dHB1dHN8fCh0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cz17dGV4dDohMSxncmlkOiExLHRleHRMYWJlbDohMSxncmlkTGFiZWw6ITF9KSx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy5ncmlkfHx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy50ZXh0fSxvLmRlZmF1bHQucHJvdG90eXBlLl9jcmVhdGVPdXRwdXQ9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8saT10aGlzLmNhbnZhcy5pZDt0aGlzLmluZ3JlZGllbnRzfHwodGhpcy5pbmdyZWRpZW50cz17c2hhcGVzOnt9LGNvbG9yczp7YmFja2dyb3VuZDpcIndoaXRlXCIsZmlsbDpcIndoaXRlXCIsc3Ryb2tlOlwiYmxhY2tcIn0scFNoYXBlczpcIlwifSksdGhpcy5kdW1teURPTXx8KHRoaXMuZHVtbXlET009ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaSkucGFyZW50Tm9kZSk7dmFyIGE9XCJcIjtcIkZhbGxiYWNrXCI9PT10PyhyPWkrZSxuPWkrXCJhY2Nlc3NpYmxlT3V0cHV0XCIsdGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChuKSl8fCh0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KGksXCJfRGVzY3JpcHRpb25cIikpP3RoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQoaSxcIl9EZXNjcmlwdGlvblwiKSkuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJlbmRcIiwnPGRpdiBpZD1cIicuY29uY2F0KG4sJ1wiIHJvbGU9XCJyZWdpb25cIiBhcmlhLWxhYmVsPVwiQ2FudmFzIE91dHB1dHNcIj48L2Rpdj4nKSk6dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChpKSkuaW5uZXJIVE1MPSc8ZGl2IGlkPVwiJy5jb25jYXQobiwnXCIgcm9sZT1cInJlZ2lvblwiIGFyaWEtbGFiZWw9XCJDYW52YXMgT3V0cHV0c1wiPjwvZGl2PicpKSk6XCJMYWJlbFwiPT09dCYmKHI9aStlKyhhPXQpLG49aStcImFjY2Vzc2libGVPdXRwdXRcIit0LHRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQobikpfHwodGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChpLFwiX0xhYmVsXCIpKT90aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KGksXCJfTGFiZWxcIikpLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyZW5kXCIsJzxkaXYgaWQ9XCInLmNvbmNhdChuLCdcIj48L2Rpdj4nKSk6dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChpKSkuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJlbmRcIiwnPGRpdiBpZD1cIicuY29uY2F0KG4sJ1wiPjwvZGl2PicpKSkpLHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzW3JdPXt9LFwidGV4dE91dHB1dFwiPT09ZT8oYT1cIiNcIi5jb25jYXQoaSxcImdyaWRPdXRwdXRcIikuY29uY2F0KGEpLG89JzxkaXYgaWQ9XCInLmNvbmNhdChyLCdcIj5UZXh0IE91dHB1dDxkaXYgaWQ9XCInKS5jb25jYXQociwnU3VtbWFyeVwiIGFyaWEtbGFiZWw9XCJ0ZXh0IG91dHB1dCBzdW1tYXJ5XCI+PHAgaWQ9XCInKS5jb25jYXQociwnX3N1bW1hcnlcIj48L3A+PHVsIGlkPVwiJykuY29uY2F0KHIsJ19saXN0XCI+PC91bD48L2Rpdj48dGFibGUgaWQ9XCInKS5jb25jYXQociwnX3NoYXBlRGV0YWlsc1wiIHN1bW1hcnk9XCJ0ZXh0IG91dHB1dCBzaGFwZSBkZXRhaWxzXCI+PC90YWJsZT48L2Rpdj4nKSx0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoYSk/dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKGEpLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWJlZ2luXCIsbyk6dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChuKSkuaW5uZXJIVE1MPW8sdGhpcy5fYWNjZXNzaWJsZU91dHB1dHNbcl0ubGlzdD10aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIsXCJfbGlzdFwiKSkpOlwiZ3JpZE91dHB1dFwiPT09ZSYmKGE9XCIjXCIuY29uY2F0KGksXCJ0ZXh0T3V0cHV0XCIpLmNvbmNhdChhKSxvPSc8ZGl2IGlkPVwiJy5jb25jYXQociwnXCI+R3JpZCBPdXRwdXQ8cCBpZD1cIicpLmNvbmNhdChyLCdfc3VtbWFyeVwiIGFyaWEtbGFiZWw9XCJncmlkIG91dHB1dCBzdW1tYXJ5XCI+PHRhYmxlIGlkPVwiJykuY29uY2F0KHIsJ19tYXBcIiBzdW1tYXJ5PVwiZ3JpZCBvdXRwdXQgY29udGVudFwiPjwvdGFibGU+PHVsIGlkPVwiJykuY29uY2F0KHIsJ19zaGFwZURldGFpbHNcIiBhcmlhLWxhYmVsPVwiZ3JpZCBvdXRwdXQgc2hhcGUgZGV0YWlsc1wiPjwvdWw+PC9kaXY+JyksdGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKGEpP3RoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihhKS5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmVuZFwiLG8pOnRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQobikpLmlubmVySFRNTD1vLHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzW3JdLm1hcD10aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHIsXCJfbWFwXCIpKSksdGhpcy5fYWNjZXNzaWJsZU91dHB1dHNbcl0uc2hhcGVEZXRhaWxzPXRoaXMuZHVtbXlET00ucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQocixcIl9zaGFwZURldGFpbHNcIikpLHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzW3JdLnN1bW1hcnk9dGhpcy5kdW1teURPTS5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChyLFwiX3N1bW1hcnlcIikpfSxvLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVBY2NzT3V0cHV0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5jYW52YXMuaWQ7SlNPTi5zdHJpbmdpZnkodGhpcy5pbmdyZWRpZW50cy5zaGFwZXMpIT09dGhpcy5pbmdyZWRpZW50cy5wU2hhcGVzJiYodGhpcy5pbmdyZWRpZW50cy5wU2hhcGVzPUpTT04uc3RyaW5naWZ5KHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzKSx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy50ZXh0JiZ0aGlzLl91cGRhdGVUZXh0T3V0cHV0KGUrXCJ0ZXh0T3V0cHV0XCIpLHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLmdyaWQmJnRoaXMuX3VwZGF0ZUdyaWRPdXRwdXQoZStcImdyaWRPdXRwdXRcIiksdGhpcy5fYWNjZXNzaWJsZU91dHB1dHMudGV4dExhYmVsJiZ0aGlzLl91cGRhdGVUZXh0T3V0cHV0KGUrXCJ0ZXh0T3V0cHV0TGFiZWxcIiksdGhpcy5fYWNjZXNzaWJsZU91dHB1dHMuZ3JpZExhYmVsJiZ0aGlzLl91cGRhdGVHcmlkT3V0cHV0KGUrXCJncmlkT3V0cHV0TGFiZWxcIikpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9hY2NzQmFja2dyb3VuZD1mdW5jdGlvbihlKXt0aGlzLmluZ3JlZGllbnRzLnBTaGFwZXM9SlNPTi5zdHJpbmdpZnkodGhpcy5pbmdyZWRpZW50cy5zaGFwZXMpLHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzPXt9LHRoaXMuaW5ncmVkaWVudHMuY29sb3JzLmJhY2tncm91bmRSR0JBIT09ZSYmKHRoaXMuaW5ncmVkaWVudHMuY29sb3JzLmJhY2tncm91bmRSR0JBPWUsdGhpcy5pbmdyZWRpZW50cy5jb2xvcnMuYmFja2dyb3VuZD10aGlzLl9yZ2JDb2xvck5hbWUoZSkpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9hY2NzQ2FudmFzQ29sb3JzPWZ1bmN0aW9uKGUsdCl7XCJmaWxsXCI9PT1lP3RoaXMuaW5ncmVkaWVudHMuY29sb3JzLmZpbGxSR0JBIT09dCYmKHRoaXMuaW5ncmVkaWVudHMuY29sb3JzLmZpbGxSR0JBPXQsdGhpcy5pbmdyZWRpZW50cy5jb2xvcnMuZmlsbD10aGlzLl9yZ2JDb2xvck5hbWUodCkpOlwic3Ryb2tlXCI9PT1lJiZ0aGlzLmluZ3JlZGllbnRzLmNvbG9ycy5zdHJva2VSR0JBIT09dCYmKHRoaXMuaW5ncmVkaWVudHMuY29sb3JzLnN0cm9rZVJHQkE9dCx0aGlzLmluZ3JlZGllbnRzLmNvbG9ycy5zdHJva2U9dGhpcy5fcmdiQ29sb3JOYW1lKHQpKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fYWNjc091dHB1dD1mdW5jdGlvbihlLHQpe1wiZWxsaXBzZVwiPT09ZSYmdFsyXT09PXRbM10/ZT1cImNpcmNsZVwiOlwicmVjdGFuZ2xlXCI9PT1lJiZ0WzJdPT09dFszXSYmKGU9XCJzcXVhcmVcIik7dmFyIHI9e30sbj0hMCxvPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbjtuPVwicmVjdGFuZ2xlXCI9PT1lfHxcImVsbGlwc2VcIj09PWV8fFwiYXJjXCI9PT1lfHxcImNpcmNsZVwiPT09ZXx8XCJzcXVhcmVcIj09PWU/KHI9TWF0aC5yb3VuZCh0WzBdK3RbMl0vMiksTWF0aC5yb3VuZCh0WzFdK3RbM10vMikpOlwidHJpYW5nbGVcIj09PWU/KHI9KHRbMF0rdFsyXSt0WzRdKS8zLCh0WzFdK3RbM10rdFs1XSkvMyk6XCJxdWFkcmlsYXRlcmFsXCI9PT1lPyhyPSh0WzBdK3RbMl0rdFs0XSt0WzZdKS80LCh0WzFdK3RbM10rdFs1XSt0WzddKS80KTpcImxpbmVcIj09PWU/KHI9KHRbMF0rdFsyXSkvMiwodFsxXSt0WzNdKS8yKToocj10WzBdLHRbMV0pO3JldHVybltyLG5dfShlLHQpO2lmKFwibGluZVwiPT09ZSl7ci5jb2xvcj10aGlzLmluZ3JlZGllbnRzLmNvbG9ycy5zdHJva2Usci5sZW5ndGg9TWF0aC5yb3VuZCh0aGlzLmRpc3QodFswXSx0WzFdLHRbMl0sdFszXSkpO3ZhciBpPWwoW3RbMF0sWzFdXSx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSxhPWwoW3RbMl0sWzNdXSx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KTtyLmxvYz11KG8sdGhpcy53aWR0aCx0aGlzLmhlaWdodCksci5wb3M9aT09PWE/XCJhdCBcIi5jb25jYXQoaSk6XCJmcm9tIFwiLmNvbmNhdChpLFwiIHRvIFwiKS5jb25jYXQoYSl9ZWxzZVwicG9pbnRcIj09PWU/ci5jb2xvcj10aGlzLmluZ3JlZGllbnRzLmNvbG9ycy5zdHJva2U6KHIuY29sb3I9dGhpcy5pbmdyZWRpZW50cy5jb2xvcnMuZmlsbCxyLmFyZWE9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89MDtpZihcImFyY1wiPT09ZSl7dmFyIGk9KCh0WzVdLXRbNF0pJSgyKk1hdGguUEkpKzIqTWF0aC5QSSklKDIqTWF0aC5QSSk7aWYobz1pKnRbMl0qdFszXS84LFwib3BlblwiPT09dFs2XXx8XCJjaG9yZFwiPT09dFs2XSl7dmFyIGE9dFswXSxzPXRbMV0sbD10WzBdK3RbMl0vMipNYXRoLmNvcyh0WzRdKS50b0ZpeGVkKDIpLHU9dFsxXSt0WzNdLzIqTWF0aC5zaW4odFs0XSkudG9GaXhlZCgyKSxjPXRbMF0rdFsyXS8yKk1hdGguY29zKHRbNV0pLnRvRml4ZWQoMiksZD10WzFdK3RbM10vMipNYXRoLnNpbih0WzVdKS50b0ZpeGVkKDIpLGY9TWF0aC5hYnMoYSoodS1kKStsKihkLXMpK2MqKHMtdSkpLzI7aT5NYXRoLlBJP28rPWY6by09Zn19ZWxzZVwiZWxsaXBzZVwiPT09ZXx8XCJjaXJjbGVcIj09PWU/bz0zLjE0KnRbMl0vMip0WzNdLzI6XCJsaW5lXCI9PT1lP289MDpcInBvaW50XCI9PT1lP289MDpcInF1YWRyaWxhdGVyYWxcIj09PWU/bz1NYXRoLmFicygodFs2XSt0WzBdKSoodFs3XS10WzFdKSsodFswXSt0WzJdKSoodFsxXS10WzNdKSsodFsyXSt0WzRdKSoodFszXS10WzVdKSsodFs0XSt0WzZdKSoodFs1XS10WzddKSkvMjpcInJlY3RhbmdsZVwiPT09ZXx8XCJzcXVhcmVcIj09PWU/bz10WzJdKnRbM106XCJ0cmlhbmdsZVwiPT09ZSYmKG89TWF0aC5hYnModFswXSoodFszXS10WzVdKSt0WzJdKih0WzVdLXRbMV0pK3RbNF0qKHRbMV0tdFszXSkpLzIpO3JldHVybiBNYXRoLnJvdW5kKDEwMCpvLyhyKm4pKX0oZSx0LHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpKSxyLnBvcz1sKG8sdGhpcy53aWR0aCx0aGlzLmhlaWdodCksci5sb2M9dShvLHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpO2lmKHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzW2VdKXtpZih0aGlzLmluZ3JlZGllbnRzLnNoYXBlc1tlXSE9PVtyXSl7Zm9yKHZhciBzIGluIHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzW2VdKUpTT04uc3RyaW5naWZ5KHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzW2VdW3NdKT09PUpTT04uc3RyaW5naWZ5KHIpJiYobj0hMSk7ITA9PT1uJiZ0aGlzLmluZ3JlZGllbnRzLnNoYXBlc1tlXS5wdXNoKHIpfX1lbHNlIHRoaXMuaW5ncmVkaWVudHMuc2hhcGVzW2VdPVtyXX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCI6MTQ5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGxcIjoxNTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZFwiOjE3Mn1dLDI0NzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LnByb3RvdHlwZS5fdXBkYXRlVGV4dE91dHB1dD1mdW5jdGlvbihlKXtpZih0aGlzLmR1bW15RE9NLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KGUsXCJfc3VtbWFyeVwiKSkpe3ZhciB0PXRoaXMuX2FjY2Vzc2libGVPdXRwdXRzW2VdLHI9ZnVuY3Rpb24oZSx0KXt2YXIgcj1cIlwiLG49MDtmb3IodmFyIG8gaW4gdClmb3IodmFyIGkgaW4gdFtvXSl7dmFyIGE9JzxsaT48YSBocmVmPVwiIycuY29uY2F0KGUsXCJzaGFwZVwiKS5jb25jYXQobiwnXCI+JykuY29uY2F0KHRbb11baV0uY29sb3IsXCIgXCIpLmNvbmNhdChvLFwiPC9hPlwiKTtcImxpbmVcIj09PW8/YSs9XCIsIFwiLmNvbmNhdCh0W29dW2ldLnBvcyxcIiwgXCIpLmNvbmNhdCh0W29dW2ldLmxlbmd0aCxcIiBwaXhlbHMgbG9uZy48L2xpPlwiKTooYSs9XCIsIGF0IFwiLmNvbmNhdCh0W29dW2ldLnBvcyksXCJwb2ludFwiIT09byYmKGErPVwiLCBjb3ZlcmluZyBcIi5jb25jYXQodFtvXVtpXS5hcmVhLFwiJSBvZiB0aGUgY2FudmFzXCIpKSxhKz1cIi48L2xpPlwiKSxyKz1hLG4rK31yZXR1cm57bnVtU2hhcGVzOm4sbGlzdFNoYXBlczpyfX0oZSx0aGlzLmluZ3JlZGllbnRzLnNoYXBlcyksbj1mdW5jdGlvbihlLHQscixuKXt2YXIgbz1cIllvdXIgb3V0cHV0IGlzIGEsIFwiLmNvbmNhdChyLFwiIGJ5IFwiKS5jb25jYXQobixcIiBwaXhlbHMsIFwiKS5jb25jYXQodCxcIiBjYW52YXMgY29udGFpbmluZyB0aGUgZm9sbG93aW5nXCIpO289MT09PWU/XCJcIi5jb25jYXQobyxcIiBzaGFwZTpcIik6XCJcIi5jb25jYXQobyxcIiBcIikuY29uY2F0KGUsXCIgc2hhcGVzOlwiKTtyZXR1cm4gb30oci5udW1TaGFwZXMsdGhpcy5pbmdyZWRpZW50cy5jb2xvcnMuYmFja2dyb3VuZCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSxvPWZ1bmN0aW9uKGUsdCl7dmFyIHI9XCJcIixuPTA7Zm9yKHZhciBvIGluIHQpZm9yKHZhciBpIGluIHRbb10pe3ZhciBhPSc8dHIgaWQ9XCInLmNvbmNhdChlLFwic2hhcGVcIikuY29uY2F0KG4sJ1wiPjx0aD4nKS5jb25jYXQodFtvXVtpXS5jb2xvcixcIiBcIikuY29uY2F0KG8sXCI8L3RoPlwiKTtcImxpbmVcIj09PW8/YSs9XCI8dGQ+bG9jYXRpb24gPSBcIi5jb25jYXQodFtvXVtpXS5wb3MsXCI8L3RkPjx0ZD5sZW5ndGggPSBcIikuY29uY2F0KHRbb11baV0ubGVuZ3RoLFwiIHBpeGVsczwvdGQ+PC90cj5cIik6KGErPVwiPHRkPmxvY2F0aW9uID0gXCIuY29uY2F0KHRbb11baV0ucG9zLFwiPC90ZD5cIiksXCJwb2ludFwiIT09byYmKGErPVwiPHRkPiBhcmVhID0gXCIuY29uY2F0KHRbb11baV0uYXJlYSxcIiU8L3RkPlwiKSksYSs9XCI8L3RyPlwiKSxyKz1hLG4rK31yZXR1cm4gcn0oZSx0aGlzLmluZ3JlZGllbnRzLnNoYXBlcyk7biE9PXQuc3VtbWFyeS5pbm5lckhUTUwmJih0LnN1bW1hcnkuaW5uZXJIVE1MPW4pLHIubGlzdFNoYXBlcyE9PXQubGlzdC5pbm5lckhUTUwmJih0Lmxpc3QuaW5uZXJIVE1MPXIubGlzdFNoYXBlcyksbyE9PXQuc2hhcGVEZXRhaWxzLmlubmVySFRNTCYmKHQuc2hhcGVEZXRhaWxzLmlubmVySFRNTD1vKSx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0c1tlXT10fX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCI6MTQ5fV0sMjQ4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG4sbz0obj1lKFwiLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtlKFwiLi9jb3JlL2NvbnN0YW50c1wiKSxlKFwiLi9jb3JlL2Vudmlyb25tZW50XCIpLGUoXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3N0YWNrdHJhY2VcIiksZShcIi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCIpLGUoXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCIpLGUoXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3NrZXRjaF9yZWFkZXJcIiksZShcIi4vY29yZS9oZWxwZXJzXCIpLGUoXCIuL2NvcmUvbGVnYWN5XCIpLGUoXCIuL2NvcmUvcHJlbG9hZFwiKSxlKFwiLi9jb3JlL3A1LkVsZW1lbnRcIiksZShcIi4vY29yZS9wNS5HcmFwaGljc1wiKSxlKFwiLi9jb3JlL3A1LlJlbmRlcmVyXCIpLGUoXCIuL2NvcmUvcDUuUmVuZGVyZXIyRFwiKSxlKFwiLi9jb3JlL3JlbmRlcmluZ1wiKSxlKFwiLi9jb3JlL3NoaW1cIiksZShcIi4vY29yZS9zdHJ1Y3R1cmVcIiksZShcIi4vY29yZS90cmFuc2Zvcm1cIiksZShcIi4vY29yZS9zaGFwZS8yZF9wcmltaXRpdmVzXCIpLGUoXCIuL2NvcmUvc2hhcGUvYXR0cmlidXRlc1wiKSxlKFwiLi9jb3JlL3NoYXBlL2N1cnZlc1wiKSxlKFwiLi9jb3JlL3NoYXBlL3ZlcnRleFwiKSxlKFwiLi9hY2Nlc3NpYmlsaXR5L291dHB1dHNcIiksZShcIi4vYWNjZXNzaWJpbGl0eS90ZXh0T3V0cHV0XCIpLGUoXCIuL2FjY2Vzc2liaWxpdHkvZ3JpZE91dHB1dFwiKSxlKFwiLi9hY2Nlc3NpYmlsaXR5L2NvbG9yX25hbWVyXCIpLGUoXCIuL2NvbG9yL2NvbG9yX2NvbnZlcnNpb25cIiksZShcIi4vY29sb3IvY3JlYXRpbmdfcmVhZGluZ1wiKSxlKFwiLi9jb2xvci9wNS5Db2xvclwiKSxlKFwiLi9jb2xvci9zZXR0aW5nXCIpLGUoXCIuL2RhdGEvcDUuVHlwZWREaWN0XCIpLGUoXCIuL2RhdGEvbG9jYWxfc3RvcmFnZS5qc1wiKSxlKFwiLi9kb20vZG9tXCIpLGUoXCIuL2FjY2Vzc2liaWxpdHkvZGVzY3JpYmVcIiksZShcIi4vZXZlbnRzL2FjY2VsZXJhdGlvblwiKSxlKFwiLi9ldmVudHMva2V5Ym9hcmRcIiksZShcIi4vZXZlbnRzL21vdXNlXCIpLGUoXCIuL2V2ZW50cy90b3VjaFwiKSxlKFwiLi9pbWFnZS9maWx0ZXJzXCIpLGUoXCIuL2ltYWdlL2ltYWdlXCIpLGUoXCIuL2ltYWdlL2xvYWRpbmdfZGlzcGxheWluZ1wiKSxlKFwiLi9pbWFnZS9wNS5JbWFnZVwiKSxlKFwiLi9pbWFnZS9waXhlbHNcIiksZShcIi4vaW8vZmlsZXNcIiksZShcIi4vaW8vcDUuVGFibGVcIiksZShcIi4vaW8vcDUuVGFibGVSb3dcIiksZShcIi4vaW8vcDUuWE1MXCIpLGUoXCIuL21hdGgvY2FsY3VsYXRpb25cIiksZShcIi4vbWF0aC9tYXRoXCIpLGUoXCIuL21hdGgvbm9pc2VcIiksZShcIi4vbWF0aC9wNS5WZWN0b3JcIiksZShcIi4vbWF0aC9yYW5kb21cIiksZShcIi4vbWF0aC90cmlnb25vbWV0cnlcIiksZShcIi4vdHlwb2dyYXBoeS9hdHRyaWJ1dGVzXCIpLGUoXCIuL3R5cG9ncmFwaHkvbG9hZGluZ19kaXNwbGF5aW5nXCIpLGUoXCIuL3R5cG9ncmFwaHkvcDUuRm9udFwiKSxlKFwiLi91dGlsaXRpZXMvYXJyYXlfZnVuY3Rpb25zXCIpLGUoXCIuL3V0aWxpdGllcy9jb252ZXJzaW9uXCIpLGUoXCIuL3V0aWxpdGllcy9zdHJpbmdfZnVuY3Rpb25zXCIpLGUoXCIuL3V0aWxpdGllcy90aW1lX2RhdGVcIiksZShcIi4vd2ViZ2wvM2RfcHJpbWl0aXZlc1wiKSxlKFwiLi93ZWJnbC9pbnRlcmFjdGlvblwiKSxlKFwiLi93ZWJnbC9saWdodFwiKSxlKFwiLi93ZWJnbC9sb2FkaW5nXCIpLGUoXCIuL3dlYmdsL21hdGVyaWFsXCIpLGUoXCIuL3dlYmdsL3A1LkNhbWVyYVwiKSxlKFwiLi93ZWJnbC9wNS5HZW9tZXRyeVwiKSxlKFwiLi93ZWJnbC9wNS5NYXRyaXhcIiksZShcIi4vd2ViZ2wvcDUuUmVuZGVyZXJHTC5JbW1lZGlhdGVcIiksZShcIi4vd2ViZ2wvcDUuUmVuZGVyZXJHTFwiKSxlKFwiLi93ZWJnbC9wNS5SZW5kZXJlckdMLlJldGFpbmVkXCIpLGUoXCIuL3dlYmdsL3A1LlNoYWRlclwiKSxlKFwiLi93ZWJnbC9wNS5SZW5kZXJCdWZmZXJcIiksZShcIi4vd2ViZ2wvcDUuVGV4dHVyZVwiKSxlKFwiLi93ZWJnbC90ZXh0XCIpLGUoXCIuL2NvcmUvaW5pdFwiKSx0LmV4cG9ydHM9by5kZWZhdWx0fSx7XCIuL2FjY2Vzc2liaWxpdHkvY29sb3JfbmFtZXJcIjoyNDMsXCIuL2FjY2Vzc2liaWxpdHkvZGVzY3JpYmVcIjoyNDQsXCIuL2FjY2Vzc2liaWxpdHkvZ3JpZE91dHB1dFwiOjI0NSxcIi4vYWNjZXNzaWJpbGl0eS9vdXRwdXRzXCI6MjQ2LFwiLi9hY2Nlc3NpYmlsaXR5L3RleHRPdXRwdXRcIjoyNDcsXCIuL2NvbG9yL2NvbG9yX2NvbnZlcnNpb25cIjoyNDksXCIuL2NvbG9yL2NyZWF0aW5nX3JlYWRpbmdcIjoyNTAsXCIuL2NvbG9yL3A1LkNvbG9yXCI6MjUxLFwiLi9jb2xvci9zZXR0aW5nXCI6MjUyLFwiLi9jb3JlL2NvbnN0YW50c1wiOjI1MyxcIi4vY29yZS9lbnZpcm9ubWVudFwiOjI1NCxcIi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIjoyNTUsXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjU2LFwiLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9za2V0Y2hfcmVhZGVyXCI6MjU3LFwiLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9zdGFja3RyYWNlXCI6MjU4LFwiLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIjoyNTksXCIuL2NvcmUvaGVscGVyc1wiOjI2MCxcIi4vY29yZS9pbml0XCI6MjYxLFwiLi9jb3JlL2xlZ2FjeVwiOjI2MyxcIi4vY29yZS9tYWluXCI6MjY0LFwiLi9jb3JlL3A1LkVsZW1lbnRcIjoyNjUsXCIuL2NvcmUvcDUuR3JhcGhpY3NcIjoyNjYsXCIuL2NvcmUvcDUuUmVuZGVyZXJcIjoyNjcsXCIuL2NvcmUvcDUuUmVuZGVyZXIyRFwiOjI2OCxcIi4vY29yZS9wcmVsb2FkXCI6MjY5LFwiLi9jb3JlL3JlbmRlcmluZ1wiOjI3MCxcIi4vY29yZS9zaGFwZS8yZF9wcmltaXRpdmVzXCI6MjcxLFwiLi9jb3JlL3NoYXBlL2F0dHJpYnV0ZXNcIjoyNzIsXCIuL2NvcmUvc2hhcGUvY3VydmVzXCI6MjczLFwiLi9jb3JlL3NoYXBlL3ZlcnRleFwiOjI3NCxcIi4vY29yZS9zaGltXCI6Mjc1LFwiLi9jb3JlL3N0cnVjdHVyZVwiOjI3NixcIi4vY29yZS90cmFuc2Zvcm1cIjoyNzcsXCIuL2RhdGEvbG9jYWxfc3RvcmFnZS5qc1wiOjI3OCxcIi4vZGF0YS9wNS5UeXBlZERpY3RcIjoyNzksXCIuL2RvbS9kb21cIjoyODAsXCIuL2V2ZW50cy9hY2NlbGVyYXRpb25cIjoyODEsXCIuL2V2ZW50cy9rZXlib2FyZFwiOjI4MixcIi4vZXZlbnRzL21vdXNlXCI6MjgzLFwiLi9ldmVudHMvdG91Y2hcIjoyODQsXCIuL2ltYWdlL2ZpbHRlcnNcIjoyODUsXCIuL2ltYWdlL2ltYWdlXCI6Mjg2LFwiLi9pbWFnZS9sb2FkaW5nX2Rpc3BsYXlpbmdcIjoyODcsXCIuL2ltYWdlL3A1LkltYWdlXCI6Mjg4LFwiLi9pbWFnZS9waXhlbHNcIjoyODksXCIuL2lvL2ZpbGVzXCI6MjkwLFwiLi9pby9wNS5UYWJsZVwiOjI5MSxcIi4vaW8vcDUuVGFibGVSb3dcIjoyOTIsXCIuL2lvL3A1LlhNTFwiOjI5MyxcIi4vbWF0aC9jYWxjdWxhdGlvblwiOjI5NCxcIi4vbWF0aC9tYXRoXCI6Mjk1LFwiLi9tYXRoL25vaXNlXCI6Mjk2LFwiLi9tYXRoL3A1LlZlY3RvclwiOjI5NyxcIi4vbWF0aC9yYW5kb21cIjoyOTgsXCIuL21hdGgvdHJpZ29ub21ldHJ5XCI6Mjk5LFwiLi90eXBvZ3JhcGh5L2F0dHJpYnV0ZXNcIjozMDAsXCIuL3R5cG9ncmFwaHkvbG9hZGluZ19kaXNwbGF5aW5nXCI6MzAxLFwiLi90eXBvZ3JhcGh5L3A1LkZvbnRcIjozMDIsXCIuL3V0aWxpdGllcy9hcnJheV9mdW5jdGlvbnNcIjozMDMsXCIuL3V0aWxpdGllcy9jb252ZXJzaW9uXCI6MzA0LFwiLi91dGlsaXRpZXMvc3RyaW5nX2Z1bmN0aW9uc1wiOjMwNSxcIi4vdXRpbGl0aWVzL3RpbWVfZGF0ZVwiOjMwNixcIi4vd2ViZ2wvM2RfcHJpbWl0aXZlc1wiOjMwNyxcIi4vd2ViZ2wvaW50ZXJhY3Rpb25cIjozMDgsXCIuL3dlYmdsL2xpZ2h0XCI6MzA5LFwiLi93ZWJnbC9sb2FkaW5nXCI6MzEwLFwiLi93ZWJnbC9tYXRlcmlhbFwiOjMxMSxcIi4vd2ViZ2wvcDUuQ2FtZXJhXCI6MzEyLFwiLi93ZWJnbC9wNS5HZW9tZXRyeVwiOjMxMyxcIi4vd2ViZ2wvcDUuTWF0cml4XCI6MzE0LFwiLi93ZWJnbC9wNS5SZW5kZXJCdWZmZXJcIjozMTUsXCIuL3dlYmdsL3A1LlJlbmRlcmVyR0xcIjozMTgsXCIuL3dlYmdsL3A1LlJlbmRlcmVyR0wuSW1tZWRpYXRlXCI6MzE2LFwiLi93ZWJnbC9wNS5SZW5kZXJlckdMLlJldGFpbmVkXCI6MzE3LFwiLi93ZWJnbC9wNS5TaGFkZXJcIjozMTksXCIuL3dlYmdsL3A1LlRleHR1cmVcIjozMjAsXCIuL3dlYmdsL3RleHRcIjozMjF9XSwyNDk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O28uZGVmYXVsdC5Db2xvckNvbnZlcnNpb249e30sby5kZWZhdWx0LkNvbG9yQ29udmVyc2lvbi5faHNiYVRvSFNMQT1mdW5jdGlvbihlKXt2YXIgdD1lWzBdLHI9ZVsxXSxuPWVbMl0sbz0oMi1yKSpuLzI7cmV0dXJuIDAhPW8mJigxPT1vP3I9MDpvPC41P3IvPTItcjpyPXIqbi8oMi0yKm8pKSxbdCxyLG8sZVszXV19LG8uZGVmYXVsdC5Db2xvckNvbnZlcnNpb24uX2hzYmFUb1JHQkE9ZnVuY3Rpb24oZSl7dmFyIHQ9NiplWzBdLHI9ZVsxXSxuPWVbMl0sbz1bXTtpZigwPT09cilvPVtuLG4sbixlWzNdXTtlbHNle3ZhciBpLGEscyxsPU1hdGguZmxvb3IodCksdT1uKigxLXIpLGM9biooMS1yKih0LWwpKSxkPW4qKDEtciooMStsLXQpKTtzPTE9PT1sPyhpPWMsYT1uLHUpOjI9PT1sPyhpPXUsYT1uLGQpOjM9PT1sPyhpPXUsYT1jLG4pOjQ9PT1sPyhpPWQsYT11LG4pOjU9PT1sPyhpPW4sYT11LGMpOihpPW4sYT1kLHUpLG89W2ksYSxzLGVbM11dfXJldHVybiBvfSxvLmRlZmF1bHQuQ29sb3JDb252ZXJzaW9uLl9oc2xhVG9IU0JBPWZ1bmN0aW9uKGUpe3ZhciB0LHI9ZVswXSxuPWVbMV0sbz1lWzJdO3JldHVybltyLG49MiooKHQ9bzwuNT8oMStuKSpvOm8rbi1vKm4pLW8pL3QsdCxlWzNdXX0sby5kZWZhdWx0LkNvbG9yQ29udmVyc2lvbi5faHNsYVRvUkdCQT1mdW5jdGlvbihlKXt2YXIgdD02KmVbMF0scj1lWzFdLG49ZVsyXSxvPVtdO2lmKDA9PT1yKW89W24sbixuLGVbM11dO2Vsc2V7dmFyIGksYT0yKm4tKGk9bjwuNT8oMStyKSpuOm4rci1uKnIpLHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPDA/ZSs9Njo2PD1lJiYoZS09NiksZTwxP3QrKHItdCkqZTplPDM/cjplPDQ/dCsoci10KSooNC1lKTp0fTtvPVtzKDIrdCxhLGkpLHModCxhLGkpLHModC0yLGEsaSksZVszXV19cmV0dXJuIG99LG8uZGVmYXVsdC5Db2xvckNvbnZlcnNpb24uX3JnYmFUb0hTQkE9ZnVuY3Rpb24oZSl7dmFyIHQscixuPWVbMF0sbz1lWzFdLGk9ZVsyXSxhPU1hdGgubWF4KG4sbyxpKSxzPWEtTWF0aC5taW4obixvLGkpO3JldHVybiAwPT1zP3I9dD0wOihyPXMvYSxuPT09YT90PShvLWkpL3M6bz09PWE/dD0yKyhpLW4pL3M6aT09PWEmJih0PTQrKG4tbykvcyksdDwwP3QrPTY6Njw9dCYmKHQtPTYpKSxbdC82LHIsYSxlWzNdXX0sby5kZWZhdWx0LkNvbG9yQ29udmVyc2lvbi5fcmdiYVRvSFNMQT1mdW5jdGlvbihlKXt2YXIgdCxyLG49ZVswXSxvPWVbMV0saT1lWzJdLGE9TWF0aC5tYXgobixvLGkpLHM9TWF0aC5taW4obixvLGkpLGw9YStzLHU9YS1zO3JldHVybiAwPT11P3I9dD0wOihyPWw8MT91L2w6dS8oMi1sKSxuPT09YT90PShvLWkpL3U6bz09PWE/dD0yKyhpLW4pL3U6aT09PWEmJih0PTQrKG4tbykvdSksdDwwP3QrPTY6Njw9dCYmKHQtPTYpKSxbdC82LHIsbC8yLGVbM11dfTt2YXIgaT1vLmRlZmF1bHQuQ29sb3JDb252ZXJzaW9uO3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjR9XSwyNTA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcFwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGQ9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGY9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1lKFwiLi9wNS5Db2xvclwiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIiksZC5kZWZhdWx0LnByb3RvdHlwZS5hbHBoYT1mdW5jdGlvbihlKXtyZXR1cm4gZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJhbHBoYVwiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0QWxwaGEoKX0sZC5kZWZhdWx0LnByb3RvdHlwZS5ibHVlPWZ1bmN0aW9uKGUpe3JldHVybiBkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJsdWVcIixhcmd1bWVudHMpLHRoaXMuY29sb3IoZSkuX2dldEJsdWUoKX0sZC5kZWZhdWx0LnByb3RvdHlwZS5icmlnaHRuZXNzPWZ1bmN0aW9uKGUpe3JldHVybiBkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJyaWdodG5lc3NcIixhcmd1bWVudHMpLHRoaXMuY29sb3IoZSkuX2dldEJyaWdodG5lc3MoKX0sZC5kZWZhdWx0LnByb3RvdHlwZS5jb2xvcj1mdW5jdGlvbigpe2lmKGQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY29sb3JcIixhcmd1bWVudHMpLGFyZ3VtZW50c1swXWluc3RhbmNlb2YgZC5kZWZhdWx0LkNvbG9yKXJldHVybiBhcmd1bWVudHNbMF07dmFyIGU9YXJndW1lbnRzWzBdaW5zdGFuY2VvZiBBcnJheT9hcmd1bWVudHNbMF06YXJndW1lbnRzO3JldHVybiBuZXcgZC5kZWZhdWx0LkNvbG9yKHRoaXMsZSl9LGQuZGVmYXVsdC5wcm90b3R5cGUuZ3JlZW49ZnVuY3Rpb24oZSl7cmV0dXJuIGQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZ3JlZW5cIixhcmd1bWVudHMpLHRoaXMuY29sb3IoZSkuX2dldEdyZWVuKCl9LGQuZGVmYXVsdC5wcm90b3R5cGUuaHVlPWZ1bmN0aW9uKGUpe3JldHVybiBkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImh1ZVwiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0SHVlKCl9LGQuZGVmYXVsdC5wcm90b3R5cGUubGVycENvbG9yPWZ1bmN0aW9uKGUsdCxyKXtkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImxlcnBDb2xvclwiLGFyZ3VtZW50cyk7dmFyIG4sbyxpLGEscyxsLHU9dGhpcy5fY29sb3JNb2RlLGM9dGhpcy5fY29sb3JNYXhlcztpZih1PT09Zi5SR0Ipcz1lLmxldmVscy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUvMjU1fSksbD10LmxldmVscy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUvMjU1fSk7ZWxzZSBpZih1PT09Zi5IU0IpZS5fZ2V0QnJpZ2h0bmVzcygpLHQuX2dldEJyaWdodG5lc3MoKSxzPWUuaHNiYSxsPXQuaHNiYTtlbHNle2lmKHUhPT1mLkhTTCl0aHJvdyBuZXcgRXJyb3IoXCJcIi5jb25jYXQodSxcImNhbm5vdCBiZSB1c2VkIGZvciBpbnRlcnBvbGF0aW9uLlwiKSk7ZS5fZ2V0TGlnaHRuZXNzKCksdC5fZ2V0TGlnaHRuZXNzKCkscz1lLmhzbGEsbD10LmhzbGF9cmV0dXJuIHI9TWF0aC5tYXgoTWF0aC5taW4ociwxKSwwKSx2b2lkIDA9PT10aGlzLmxlcnAmJih0aGlzLmxlcnA9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiByKih0LWUpK2V9KSxuPXRoaXMubGVycChzWzBdLGxbMF0sciksbz10aGlzLmxlcnAoc1sxXSxsWzFdLHIpLGk9dGhpcy5sZXJwKHNbMl0sbFsyXSxyKSxhPXRoaXMubGVycChzWzNdLGxbM10sciksbio9Y1t1XVswXSxvKj1jW3VdWzFdLGkqPWNbdV1bMl0sYSo9Y1t1XVszXSx0aGlzLmNvbG9yKG4sbyxpLGEpfSxkLmRlZmF1bHQucHJvdG90eXBlLmxpZ2h0bmVzcz1mdW5jdGlvbihlKXtyZXR1cm4gZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsaWdodG5lc3NcIixhcmd1bWVudHMpLHRoaXMuY29sb3IoZSkuX2dldExpZ2h0bmVzcygpfSxkLmRlZmF1bHQucHJvdG90eXBlLnJlZD1mdW5jdGlvbihlKXtyZXR1cm4gZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJyZWRcIixhcmd1bWVudHMpLHRoaXMuY29sb3IoZSkuX2dldFJlZCgpfSxkLmRlZmF1bHQucHJvdG90eXBlLnNhdHVyYXRpb249ZnVuY3Rpb24oZSl7cmV0dXJuIGQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2F0dXJhdGlvblwiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0U2F0dXJhdGlvbigpfTt2YXIgbz1kLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIjoyNTUsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiOjI1NixcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiOjI1OSxcIi4uL2NvcmUvbWFpblwiOjI2NCxcIi4vcDUuQ29sb3JcIjoyNTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxfV0sMjUxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgZD1uKGUoXCIuLi9jb3JlL21haW5cIikpLGY9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSksaD1uKGUoXCIuL2NvbG9yX2NvbnZlcnNpb25cIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZC5kZWZhdWx0LkNvbG9yPWZ1bmN0aW9uKGUsdCl7aWYodGhpcy5fc3RvcmVNb2RlQW5kTWF4ZXMoZS5fY29sb3JNb2RlLGUuX2NvbG9yTWF4ZXMpLHRoaXMubW9kZSE9PWYuUkdCJiZ0aGlzLm1vZGUhPT1mLkhTTCYmdGhpcy5tb2RlIT09Zi5IU0IpdGhyb3cgbmV3IEVycm9yKFwiXCIuY29uY2F0KHRoaXMubW9kZSxcIiBpcyBhbiBpbnZhbGlkIGNvbG9yTW9kZS5cIikpO3JldHVybiB0aGlzLl9hcnJheT1kLmRlZmF1bHQuQ29sb3IuX3BhcnNlSW5wdXRzLmFwcGx5KHRoaXMsdCksdGhpcy5fY2FsY3VsYXRlTGV2ZWxzKCksdGhpc30sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmxldmVscyxyPXRoaXMuX2FycmF5LG49clszXTtzd2l0Y2goZSl7Y2FzZVwiI3JyZ2diYlwiOnJldHVyblwiI1wiLmNvbmNhdCh0WzBdPDE2P1wiMFwiLmNvbmNhdCh0WzBdLnRvU3RyaW5nKDE2KSk6dFswXS50b1N0cmluZygxNiksdFsxXTwxNj9cIjBcIi5jb25jYXQodFsxXS50b1N0cmluZygxNikpOnRbMV0udG9TdHJpbmcoMTYpLHRbMl08MTY/XCIwXCIuY29uY2F0KHRbMl0udG9TdHJpbmcoMTYpKTp0WzJdLnRvU3RyaW5nKDE2KSk7Y2FzZVwiI3JyZ2diYmFhXCI6cmV0dXJuXCIjXCIuY29uY2F0KHRbMF08MTY/XCIwXCIuY29uY2F0KHRbMF0udG9TdHJpbmcoMTYpKTp0WzBdLnRvU3RyaW5nKDE2KSx0WzFdPDE2P1wiMFwiLmNvbmNhdCh0WzFdLnRvU3RyaW5nKDE2KSk6dFsxXS50b1N0cmluZygxNiksdFsyXTwxNj9cIjBcIi5jb25jYXQodFsyXS50b1N0cmluZygxNikpOnRbMl0udG9TdHJpbmcoMTYpLHRbM108MTY/XCIwXCIuY29uY2F0KHRbM10udG9TdHJpbmcoMTYpKTp0WzNdLnRvU3RyaW5nKDE2KSk7Y2FzZVwiI3JnYlwiOnJldHVyblwiI1wiLmNvbmNhdChNYXRoLnJvdW5kKDE1KnJbMF0pLnRvU3RyaW5nKDE2KSxNYXRoLnJvdW5kKDE1KnJbMV0pLnRvU3RyaW5nKDE2KSxNYXRoLnJvdW5kKDE1KnJbMl0pLnRvU3RyaW5nKDE2KSk7Y2FzZVwiI3JnYmFcIjpyZXR1cm5cIiNcIi5jb25jYXQoTWF0aC5yb3VuZCgxNSpyWzBdKS50b1N0cmluZygxNiksTWF0aC5yb3VuZCgxNSpyWzFdKS50b1N0cmluZygxNiksTWF0aC5yb3VuZCgxNSpyWzJdKS50b1N0cmluZygxNiksTWF0aC5yb3VuZCgxNSpyWzNdKS50b1N0cmluZygxNikpO2Nhc2VcInJnYlwiOnJldHVyblwicmdiKFwiLmNvbmNhdCh0WzBdLFwiLCBcIix0WzFdLFwiLCBcIix0WzJdLFwiKVwiKTtjYXNlXCJyZ2IlXCI6cmV0dXJuXCJyZ2IoXCIuY29uY2F0KCgxMDAqclswXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnJbMV0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCpyWzJdKS50b1ByZWNpc2lvbigzKSxcIiUpXCIpO2Nhc2VcInJnYmElXCI6cmV0dXJuXCJyZ2JhKFwiLmNvbmNhdCgoMTAwKnJbMF0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCpyWzFdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqclsyXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnJbM10pLnRvUHJlY2lzaW9uKDMpLFwiJSlcIik7Y2FzZVwiaHNiXCI6Y2FzZVwiaHN2XCI6cmV0dXJuIHRoaXMuaHNiYXx8KHRoaXMuaHNiYT1oLmRlZmF1bHQuX3JnYmFUb0hTQkEodGhpcy5fYXJyYXkpKSxcImhzYihcIi5jb25jYXQodGhpcy5oc2JhWzBdKnRoaXMubWF4ZXNbZi5IU0JdWzBdLFwiLCBcIix0aGlzLmhzYmFbMV0qdGhpcy5tYXhlc1tmLkhTQl1bMV0sXCIsIFwiLHRoaXMuaHNiYVsyXSp0aGlzLm1heGVzW2YuSFNCXVsyXSxcIilcIik7Y2FzZVwiaHNiJVwiOmNhc2VcImhzdiVcIjpyZXR1cm4gdGhpcy5oc2JhfHwodGhpcy5oc2JhPWguZGVmYXVsdC5fcmdiYVRvSFNCQSh0aGlzLl9hcnJheSkpLFwiaHNiKFwiLmNvbmNhdCgoMTAwKnRoaXMuaHNiYVswXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnRoaXMuaHNiYVsxXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnRoaXMuaHNiYVsyXSkudG9QcmVjaXNpb24oMyksXCIlKVwiKTtjYXNlXCJoc2JhXCI6Y2FzZVwiaHN2YVwiOnJldHVybiB0aGlzLmhzYmF8fCh0aGlzLmhzYmE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0JBKHRoaXMuX2FycmF5KSksXCJoc2JhKFwiLmNvbmNhdCh0aGlzLmhzYmFbMF0qdGhpcy5tYXhlc1tmLkhTQl1bMF0sXCIsIFwiLHRoaXMuaHNiYVsxXSp0aGlzLm1heGVzW2YuSFNCXVsxXSxcIiwgXCIsdGhpcy5oc2JhWzJdKnRoaXMubWF4ZXNbZi5IU0JdWzJdLFwiLCBcIixuLFwiKVwiKTtjYXNlXCJoc2JhJVwiOmNhc2VcImhzdmElXCI6cmV0dXJuIHRoaXMuaHNiYXx8KHRoaXMuaHNiYT1oLmRlZmF1bHQuX3JnYmFUb0hTQkEodGhpcy5fYXJyYXkpKSxcImhzYmEoXCIuY29uY2F0KCgxMDAqdGhpcy5oc2JhWzBdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2JhWzFdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2JhWzJdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqbikudG9QcmVjaXNpb24oMyksXCIlKVwiKTtjYXNlXCJoc2xcIjpyZXR1cm4gdGhpcy5oc2xhfHwodGhpcy5oc2xhPWguZGVmYXVsdC5fcmdiYVRvSFNMQSh0aGlzLl9hcnJheSkpLFwiaHNsKFwiLmNvbmNhdCh0aGlzLmhzbGFbMF0qdGhpcy5tYXhlc1tmLkhTTF1bMF0sXCIsIFwiLHRoaXMuaHNsYVsxXSp0aGlzLm1heGVzW2YuSFNMXVsxXSxcIiwgXCIsdGhpcy5oc2xhWzJdKnRoaXMubWF4ZXNbZi5IU0xdWzJdLFwiKVwiKTtjYXNlXCJoc2wlXCI6cmV0dXJuIHRoaXMuaHNsYXx8KHRoaXMuaHNsYT1oLmRlZmF1bHQuX3JnYmFUb0hTTEEodGhpcy5fYXJyYXkpKSxcImhzbChcIi5jb25jYXQoKDEwMCp0aGlzLmhzbGFbMF0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCp0aGlzLmhzbGFbMV0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCp0aGlzLmhzbGFbMl0pLnRvUHJlY2lzaW9uKDMpLFwiJSlcIik7Y2FzZVwiaHNsYVwiOnJldHVybiB0aGlzLmhzbGF8fCh0aGlzLmhzbGE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0xBKHRoaXMuX2FycmF5KSksXCJoc2xhKFwiLmNvbmNhdCh0aGlzLmhzbGFbMF0qdGhpcy5tYXhlc1tmLkhTTF1bMF0sXCIsIFwiLHRoaXMuaHNsYVsxXSp0aGlzLm1heGVzW2YuSFNMXVsxXSxcIiwgXCIsdGhpcy5oc2xhWzJdKnRoaXMubWF4ZXNbZi5IU0xdWzJdLFwiLCBcIixuLFwiKVwiKTtjYXNlXCJoc2xhJVwiOnJldHVybiB0aGlzLmhzbGF8fCh0aGlzLmhzbGE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0xBKHRoaXMuX2FycmF5KSksXCJoc2woXCIuY29uY2F0KCgxMDAqdGhpcy5oc2xhWzBdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2xhWzFdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2xhWzJdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqbikudG9QcmVjaXNpb24oMyksXCIlKVwiKTtjYXNlXCJyZ2JhXCI6ZGVmYXVsdDpyZXR1cm5cInJnYmEoXCIuY29uY2F0KHRbMF0sXCIsXCIsdFsxXSxcIixcIix0WzJdLFwiLFwiLG4sXCIpXCIpfX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5zZXRSZWQ9ZnVuY3Rpb24oZSl7dGhpcy5fYXJyYXlbMF09ZS90aGlzLm1heGVzW2YuUkdCXVswXSx0aGlzLl9jYWxjdWxhdGVMZXZlbHMoKX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5zZXRHcmVlbj1mdW5jdGlvbihlKXt0aGlzLl9hcnJheVsxXT1lL3RoaXMubWF4ZXNbZi5SR0JdWzFdLHRoaXMuX2NhbGN1bGF0ZUxldmVscygpfSxkLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLnNldEJsdWU9ZnVuY3Rpb24oZSl7dGhpcy5fYXJyYXlbMl09ZS90aGlzLm1heGVzW2YuUkdCXVsyXSx0aGlzLl9jYWxjdWxhdGVMZXZlbHMoKX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5zZXRBbHBoYT1mdW5jdGlvbihlKXt0aGlzLl9hcnJheVszXT1lL3RoaXMubWF4ZXNbdGhpcy5tb2RlXVszXSx0aGlzLl9jYWxjdWxhdGVMZXZlbHMoKX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fY2FsY3VsYXRlTGV2ZWxzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuX2FycmF5LHQ9dGhpcy5sZXZlbHM9bmV3IEFycmF5KGUubGVuZ3RoKSxyPWUubGVuZ3RoLTE7MDw9cjstLXIpdFtyXT1NYXRoLnJvdW5kKDI1NSplW3JdKX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0QWxwaGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXlbM10qdGhpcy5tYXhlc1t0aGlzLm1vZGVdWzNdfSxkLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLl9zdG9yZU1vZGVBbmRNYXhlcz1mdW5jdGlvbihlLHQpe3RoaXMubW9kZT1lLHRoaXMubWF4ZXM9dH0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0TW9kZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGV9LGQuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldE1heGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWF4ZXN9LGQuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldEJsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXlbMl0qdGhpcy5tYXhlc1tmLlJHQl1bMl19LGQuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldEJyaWdodG5lc3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oc2JhfHwodGhpcy5oc2JhPWguZGVmYXVsdC5fcmdiYVRvSFNCQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNiYVsyXSp0aGlzLm1heGVzW2YuSFNCXVsyXX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0R3JlZW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXlbMV0qdGhpcy5tYXhlc1tmLlJHQl1bMV19LGQuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldEh1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGU9PT1mLkhTQj8odGhpcy5oc2JhfHwodGhpcy5oc2JhPWguZGVmYXVsdC5fcmdiYVRvSFNCQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNiYVswXSp0aGlzLm1heGVzW2YuSFNCXVswXSk6KHRoaXMuaHNsYXx8KHRoaXMuaHNsYT1oLmRlZmF1bHQuX3JnYmFUb0hTTEEodGhpcy5fYXJyYXkpKSx0aGlzLmhzbGFbMF0qdGhpcy5tYXhlc1tmLkhTTF1bMF0pfSxkLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLl9nZXRMaWdodG5lc3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oc2xhfHwodGhpcy5oc2xhPWguZGVmYXVsdC5fcmdiYVRvSFNMQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNsYVsyXSp0aGlzLm1heGVzW2YuSFNMXVsyXX0sZC5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0UmVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FycmF5WzBdKnRoaXMubWF4ZXNbZi5SR0JdWzBdfSxkLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLl9nZXRTYXR1cmF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubW9kZT09PWYuSFNCPyh0aGlzLmhzYmF8fCh0aGlzLmhzYmE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0JBKHRoaXMuX2FycmF5KSksdGhpcy5oc2JhWzFdKnRoaXMubWF4ZXNbZi5IU0JdWzFdKToodGhpcy5oc2xhfHwodGhpcy5oc2xhPWguZGVmYXVsdC5fcmdiYVRvSFNMQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNsYVsxXSp0aGlzLm1heGVzW2YuSFNMXVsxXSl9O3ZhciBwPXthbGljZWJsdWU6XCIjZjBmOGZmXCIsYW50aXF1ZXdoaXRlOlwiI2ZhZWJkN1wiLGFxdWE6XCIjMDBmZmZmXCIsYXF1YW1hcmluZTpcIiM3ZmZmZDRcIixhenVyZTpcIiNmMGZmZmZcIixiZWlnZTpcIiNmNWY1ZGNcIixiaXNxdWU6XCIjZmZlNGM0XCIsYmxhY2s6XCIjMDAwMDAwXCIsYmxhbmNoZWRhbG1vbmQ6XCIjZmZlYmNkXCIsYmx1ZTpcIiMwMDAwZmZcIixibHVldmlvbGV0OlwiIzhhMmJlMlwiLGJyb3duOlwiI2E1MmEyYVwiLGJ1cmx5d29vZDpcIiNkZWI4ODdcIixjYWRldGJsdWU6XCIjNWY5ZWEwXCIsY2hhcnRyZXVzZTpcIiM3ZmZmMDBcIixjaG9jb2xhdGU6XCIjZDI2OTFlXCIsY29yYWw6XCIjZmY3ZjUwXCIsY29ybmZsb3dlcmJsdWU6XCIjNjQ5NWVkXCIsY29ybnNpbGs6XCIjZmZmOGRjXCIsY3JpbXNvbjpcIiNkYzE0M2NcIixjeWFuOlwiIzAwZmZmZlwiLGRhcmtibHVlOlwiIzAwMDA4YlwiLGRhcmtjeWFuOlwiIzAwOGI4YlwiLGRhcmtnb2xkZW5yb2Q6XCIjYjg4NjBiXCIsZGFya2dyYXk6XCIjYTlhOWE5XCIsZGFya2dyZWVuOlwiIzAwNjQwMFwiLGRhcmtncmV5OlwiI2E5YTlhOVwiLGRhcmtraGFraTpcIiNiZGI3NmJcIixkYXJrbWFnZW50YTpcIiM4YjAwOGJcIixkYXJrb2xpdmVncmVlbjpcIiM1NTZiMmZcIixkYXJrb3JhbmdlOlwiI2ZmOGMwMFwiLGRhcmtvcmNoaWQ6XCIjOTkzMmNjXCIsZGFya3JlZDpcIiM4YjAwMDBcIixkYXJrc2FsbW9uOlwiI2U5OTY3YVwiLGRhcmtzZWFncmVlbjpcIiM4ZmJjOGZcIixkYXJrc2xhdGVibHVlOlwiIzQ4M2Q4YlwiLGRhcmtzbGF0ZWdyYXk6XCIjMmY0ZjRmXCIsZGFya3NsYXRlZ3JleTpcIiMyZjRmNGZcIixkYXJrdHVycXVvaXNlOlwiIzAwY2VkMVwiLGRhcmt2aW9sZXQ6XCIjOTQwMGQzXCIsZGVlcHBpbms6XCIjZmYxNDkzXCIsZGVlcHNreWJsdWU6XCIjMDBiZmZmXCIsZGltZ3JheTpcIiM2OTY5NjlcIixkaW1ncmV5OlwiIzY5Njk2OVwiLGRvZGdlcmJsdWU6XCIjMWU5MGZmXCIsZmlyZWJyaWNrOlwiI2IyMjIyMlwiLGZsb3JhbHdoaXRlOlwiI2ZmZmFmMFwiLGZvcmVzdGdyZWVuOlwiIzIyOGIyMlwiLGZ1Y2hzaWE6XCIjZmYwMGZmXCIsZ2FpbnNib3JvOlwiI2RjZGNkY1wiLGdob3N0d2hpdGU6XCIjZjhmOGZmXCIsZ29sZDpcIiNmZmQ3MDBcIixnb2xkZW5yb2Q6XCIjZGFhNTIwXCIsZ3JheTpcIiM4MDgwODBcIixncmVlbjpcIiMwMDgwMDBcIixncmVlbnllbGxvdzpcIiNhZGZmMmZcIixncmV5OlwiIzgwODA4MFwiLGhvbmV5ZGV3OlwiI2YwZmZmMFwiLGhvdHBpbms6XCIjZmY2OWI0XCIsaW5kaWFucmVkOlwiI2NkNWM1Y1wiLGluZGlnbzpcIiM0YjAwODJcIixpdm9yeTpcIiNmZmZmZjBcIixraGFraTpcIiNmMGU2OGNcIixsYXZlbmRlcjpcIiNlNmU2ZmFcIixsYXZlbmRlcmJsdXNoOlwiI2ZmZjBmNVwiLGxhd25ncmVlbjpcIiM3Y2ZjMDBcIixsZW1vbmNoaWZmb246XCIjZmZmYWNkXCIsbGlnaHRibHVlOlwiI2FkZDhlNlwiLGxpZ2h0Y29yYWw6XCIjZjA4MDgwXCIsbGlnaHRjeWFuOlwiI2UwZmZmZlwiLGxpZ2h0Z29sZGVucm9keWVsbG93OlwiI2ZhZmFkMlwiLGxpZ2h0Z3JheTpcIiNkM2QzZDNcIixsaWdodGdyZWVuOlwiIzkwZWU5MFwiLGxpZ2h0Z3JleTpcIiNkM2QzZDNcIixsaWdodHBpbms6XCIjZmZiNmMxXCIsbGlnaHRzYWxtb246XCIjZmZhMDdhXCIsbGlnaHRzZWFncmVlbjpcIiMyMGIyYWFcIixsaWdodHNreWJsdWU6XCIjODdjZWZhXCIsbGlnaHRzbGF0ZWdyYXk6XCIjNzc4ODk5XCIsbGlnaHRzbGF0ZWdyZXk6XCIjNzc4ODk5XCIsbGlnaHRzdGVlbGJsdWU6XCIjYjBjNGRlXCIsbGlnaHR5ZWxsb3c6XCIjZmZmZmUwXCIsbGltZTpcIiMwMGZmMDBcIixsaW1lZ3JlZW46XCIjMzJjZDMyXCIsbGluZW46XCIjZmFmMGU2XCIsbWFnZW50YTpcIiNmZjAwZmZcIixtYXJvb246XCIjODAwMDAwXCIsbWVkaXVtYXF1YW1hcmluZTpcIiM2NmNkYWFcIixtZWRpdW1ibHVlOlwiIzAwMDBjZFwiLG1lZGl1bW9yY2hpZDpcIiNiYTU1ZDNcIixtZWRpdW1wdXJwbGU6XCIjOTM3MGRiXCIsbWVkaXVtc2VhZ3JlZW46XCIjM2NiMzcxXCIsbWVkaXVtc2xhdGVibHVlOlwiIzdiNjhlZVwiLG1lZGl1bXNwcmluZ2dyZWVuOlwiIzAwZmE5YVwiLG1lZGl1bXR1cnF1b2lzZTpcIiM0OGQxY2NcIixtZWRpdW12aW9sZXRyZWQ6XCIjYzcxNTg1XCIsbWlkbmlnaHRibHVlOlwiIzE5MTk3MFwiLG1pbnRjcmVhbTpcIiNmNWZmZmFcIixtaXN0eXJvc2U6XCIjZmZlNGUxXCIsbW9jY2FzaW46XCIjZmZlNGI1XCIsbmF2YWpvd2hpdGU6XCIjZmZkZWFkXCIsbmF2eTpcIiMwMDAwODBcIixvbGRsYWNlOlwiI2ZkZjVlNlwiLG9saXZlOlwiIzgwODAwMFwiLG9saXZlZHJhYjpcIiM2YjhlMjNcIixvcmFuZ2U6XCIjZmZhNTAwXCIsb3JhbmdlcmVkOlwiI2ZmNDUwMFwiLG9yY2hpZDpcIiNkYTcwZDZcIixwYWxlZ29sZGVucm9kOlwiI2VlZThhYVwiLHBhbGVncmVlbjpcIiM5OGZiOThcIixwYWxldHVycXVvaXNlOlwiI2FmZWVlZVwiLHBhbGV2aW9sZXRyZWQ6XCIjZGI3MDkzXCIscGFwYXlhd2hpcDpcIiNmZmVmZDVcIixwZWFjaHB1ZmY6XCIjZmZkYWI5XCIscGVydTpcIiNjZDg1M2ZcIixwaW5rOlwiI2ZmYzBjYlwiLHBsdW06XCIjZGRhMGRkXCIscG93ZGVyYmx1ZTpcIiNiMGUwZTZcIixwdXJwbGU6XCIjODAwMDgwXCIscmViZWNjYXB1cnBsZTpcIiM2NjMzOTlcIixyZWQ6XCIjZmYwMDAwXCIscm9zeWJyb3duOlwiI2JjOGY4ZlwiLHJveWFsYmx1ZTpcIiM0MTY5ZTFcIixzYWRkbGVicm93bjpcIiM4YjQ1MTNcIixzYWxtb246XCIjZmE4MDcyXCIsc2FuZHlicm93bjpcIiNmNGE0NjBcIixzZWFncmVlbjpcIiMyZThiNTdcIixzZWFzaGVsbDpcIiNmZmY1ZWVcIixzaWVubmE6XCIjYTA1MjJkXCIsc2lsdmVyOlwiI2MwYzBjMFwiLHNreWJsdWU6XCIjODdjZWViXCIsc2xhdGVibHVlOlwiIzZhNWFjZFwiLHNsYXRlZ3JheTpcIiM3MDgwOTBcIixzbGF0ZWdyZXk6XCIjNzA4MDkwXCIsc25vdzpcIiNmZmZhZmFcIixzcHJpbmdncmVlbjpcIiMwMGZmN2ZcIixzdGVlbGJsdWU6XCIjNDY4MmI0XCIsdGFuOlwiI2QyYjQ4Y1wiLHRlYWw6XCIjMDA4MDgwXCIsdGhpc3RsZTpcIiNkOGJmZDhcIix0b21hdG86XCIjZmY2MzQ3XCIsdHVycXVvaXNlOlwiIzQwZTBkMFwiLHZpb2xldDpcIiNlZTgyZWVcIix3aGVhdDpcIiNmNWRlYjNcIix3aGl0ZTpcIiNmZmZmZmZcIix3aGl0ZXNtb2tlOlwiI2Y1ZjVmNVwiLHllbGxvdzpcIiNmZmZmMDBcIix5ZWxsb3dncmVlbjpcIiM5YWNkMzJcIn0sbz0vXFxzKi8saT0vKFxcZHsxLDN9KS8sbD0vKCg/OlxcZCsoPzpcXC5cXGQrKT8pfCg/OlxcLlxcZCspKS8sdT1uZXcgUmVnRXhwKFwiXCIuY29uY2F0KGwuc291cmNlLFwiJVwiKSkseT17SEVYMzovXiMoW2EtZjAtOV0pKFthLWYwLTldKShbYS1mMC05XSkkL2ksSEVYNDovXiMoW2EtZjAtOV0pKFthLWYwLTldKShbYS1mMC05XSkoW2EtZjAtOV0pJC9pLEhFWDY6L14jKFthLWYwLTldezJ9KShbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pJC9pLEhFWDg6L14jKFthLWYwLTldezJ9KShbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pKFthLWYwLTldezJ9KSQvaSxSR0I6bmV3IFJlZ0V4cChbXCJecmdiXFxcXChcIixpLnNvdXJjZSxcIixcIixpLnNvdXJjZSxcIixcIixpLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKG8uc291cmNlKSxcImlcIiksUkdCX1BFUkNFTlQ6bmV3IFJlZ0V4cChbXCJecmdiXFxcXChcIix1LnNvdXJjZSxcIixcIix1LnNvdXJjZSxcIixcIix1LnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKG8uc291cmNlKSxcImlcIiksUkdCQTpuZXcgUmVnRXhwKFtcIl5yZ2JhXFxcXChcIixpLnNvdXJjZSxcIixcIixpLnNvdXJjZSxcIixcIixpLnNvdXJjZSxcIixcIixsLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKG8uc291cmNlKSxcImlcIiksUkdCQV9QRVJDRU5UOm5ldyBSZWdFeHAoW1wiXnJnYmFcXFxcKFwiLHUuc291cmNlLFwiLFwiLHUuc291cmNlLFwiLFwiLHUuc291cmNlLFwiLFwiLGwuc291cmNlLFwiXFxcXCkkXCJdLmpvaW4oby5zb3VyY2UpLFwiaVwiKSxIU0w6bmV3IFJlZ0V4cChbXCJeaHNsXFxcXChcIixpLnNvdXJjZSxcIixcIix1LnNvdXJjZSxcIixcIix1LnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKG8uc291cmNlKSxcImlcIiksSFNMQTpuZXcgUmVnRXhwKFtcIl5oc2xhXFxcXChcIixpLnNvdXJjZSxcIixcIix1LnNvdXJjZSxcIixcIix1LnNvdXJjZSxcIixcIixsLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKG8uc291cmNlKSxcImlcIiksSFNCOm5ldyBSZWdFeHAoW1wiXmhzYlxcXFwoXCIsaS5zb3VyY2UsXCIsXCIsdS5zb3VyY2UsXCIsXCIsdS5zb3VyY2UsXCJcXFxcKSRcIl0uam9pbihvLnNvdXJjZSksXCJpXCIpLEhTQkE6bmV3IFJlZ0V4cChbXCJeaHNiYVxcXFwoXCIsaS5zb3VyY2UsXCIsXCIsdS5zb3VyY2UsXCIsXCIsdS5zb3VyY2UsXCIsXCIsbC5zb3VyY2UsXCJcXFxcKSRcIl0uam9pbihvLnNvdXJjZSksXCJpXCIpfTtkLmRlZmF1bHQuQ29sb3IuX3BhcnNlSW5wdXRzPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvLGk9YXJndW1lbnRzLmxlbmd0aCxhPXRoaXMubW9kZSxzPXRoaXMubWF4ZXNbYV0sbD1bXTtpZigzPD1pKXtmb3IobFswXT1lL3NbMF0sbFsxXT10L3NbMV0sbFsyXT1yL3NbMl0sbFszXT1cIm51bWJlclwiPT10eXBlb2Ygbj9uL3NbM106MSxvPWwubGVuZ3RoLTE7MDw9bzstLW8pe3ZhciB1PWxbb107dTwwP2xbb109MDoxPHUmJihsW29dPTEpfXJldHVybiBhPT09Zi5IU0w/aC5kZWZhdWx0Ll9oc2xhVG9SR0JBKGwpOmE9PT1mLkhTQj9oLmRlZmF1bHQuX2hzYmFUb1JHQkEobCk6bH1pZigxPT09aSYmXCJzdHJpbmdcIj09dHlwZW9mIGUpe3ZhciBjPWUudHJpbSgpLnRvTG93ZXJDYXNlKCk7aWYocFtjXSlyZXR1cm4gZC5kZWZhdWx0LkNvbG9yLl9wYXJzZUlucHV0cy5jYWxsKHRoaXMscFtjXSk7aWYoeS5IRVgzLnRlc3QoYykpcmV0dXJuKGw9eS5IRVgzLmV4ZWMoYykuc2xpY2UoMSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBwYXJzZUludChlK2UsMTYpLzI1NX0pKVszXT0xLGw7aWYoeS5IRVg2LnRlc3QoYykpcmV0dXJuKGw9eS5IRVg2LmV4ZWMoYykuc2xpY2UoMSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBwYXJzZUludChlLDE2KS8yNTV9KSlbM109MSxsO2lmKHkuSEVYNC50ZXN0KGMpKXJldHVybiBsPXkuSEVYNC5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZStlLDE2KS8yNTV9KTtpZih5LkhFWDgudGVzdChjKSlyZXR1cm4gbD15LkhFWDguZXhlYyhjKS5zbGljZSgxKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUsMTYpLzI1NX0pO2lmKHkuUkdCLnRlc3QoYykpcmV0dXJuKGw9eS5SR0IuZXhlYyhjKS5zbGljZSgxKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUvMjU1fSkpWzNdPTEsbDtpZih5LlJHQl9QRVJDRU5ULnRlc3QoYykpcmV0dXJuKGw9eS5SR0JfUEVSQ0VOVC5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VGbG9hdChlKS8xMDB9KSlbM109MSxsO2lmKHkuUkdCQS50ZXN0KGMpKXJldHVybiBsPXkuUkdCQS5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAzPT09dD9wYXJzZUZsb2F0KGUpOmUvMjU1fSk7aWYoeS5SR0JBX1BFUkNFTlQudGVzdChjKSlyZXR1cm4gbD15LlJHQkFfUEVSQ0VOVC5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAzPT09dD9wYXJzZUZsb2F0KGUpOnBhcnNlRmxvYXQoZSkvMTAwfSk7aWYoeS5IU0wudGVzdChjKT8obD15LkhTTC5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6cGFyc2VJbnQoZSwxMCkvMTAwfSkpWzNdPTE6eS5IU0xBLnRlc3QoYykmJihsPXkuSFNMQS5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6Mz09PXQ/cGFyc2VGbG9hdChlKTpwYXJzZUludChlLDEwKS8xMDB9KSksKGw9bC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgubWF4KE1hdGgubWluKGUsMSksMCl9KSkubGVuZ3RoKXJldHVybiBoLmRlZmF1bHQuX2hzbGFUb1JHQkEobCk7aWYoeS5IU0IudGVzdChjKT8obD15LkhTQi5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6cGFyc2VJbnQoZSwxMCkvMTAwfSkpWzNdPTE6eS5IU0JBLnRlc3QoYykmJihsPXkuSFNCQS5leGVjKGMpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6Mz09PXQ/cGFyc2VGbG9hdChlKTpwYXJzZUludChlLDEwKS8xMDB9KSksbC5sZW5ndGgpe2ZvcihvPWwubGVuZ3RoLTE7MDw9bzstLW8pbFtvXT1NYXRoLm1heChNYXRoLm1pbihsW29dLDEpLDApO3JldHVybiBoLmRlZmF1bHQuX2hzYmFUb1JHQkEobCl9bD1bMSwxLDEsMV19ZWxzZXtpZigxIT09aSYmMiE9PWl8fFwibnVtYmVyXCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcihcIlwiLmNvbmNhdChhcmd1bWVudHMsXCJpcyBub3QgYSB2YWxpZCBjb2xvciByZXByZXNlbnRhdGlvbi5cIikpO2xbMF09ZS9zWzJdLGxbMV09ZS9zWzJdLGxbMl09ZS9zWzJdLGxbM109XCJudW1iZXJcIj09dHlwZW9mIHQ/dC9zWzNdOjEsbD1sLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5tYXgoTWF0aC5taW4oZSwxKSwwKX0pfXJldHVybiBsfTt2YXIgYz1kLmRlZmF1bHQuQ29sb3I7ci5kZWZhdWx0PWN9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9tYWluXCI6MjY0LFwiLi9jb2xvcl9jb252ZXJzaW9uXCI6MjQ5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW5cIjoxNTksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yXCI6MTgwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIjoxOTN9XSwyNTI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGxcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxsPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9dSgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHUoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiB1PWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZShcIi4vcDUuQ29sb3JcIikscy5kZWZhdWx0LnByb3RvdHlwZS5iYWNrZ3JvdW5kPWZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuKGU9dGhpcy5fcmVuZGVyZXIpLmJhY2tncm91bmQuYXBwbHkoZSxhcmd1bWVudHMpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt2YXIgZT0oYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdKXx8MCx0PShhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pfHwwLHI9KGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSl8fDAsbj0oYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdKXx8MDtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuY2xlYXIoZSx0LHIsbiksdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5jb2xvck1vZGU9ZnVuY3Rpb24oZSx0LHIsbixvKXtpZihzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNvbG9yTW9kZVwiLGFyZ3VtZW50cyksZT09PWwuUkdCfHxlPT09bC5IU0J8fGU9PT1sLkhTTCl7dGhpcy5fY29sb3JNb2RlPWU7dmFyIGk9dGhpcy5fY29sb3JNYXhlc1tlXTsyPT09YXJndW1lbnRzLmxlbmd0aD8oaVswXT10LGlbMV09dCxpWzJdPXQsaVszXT10KTo0PT09YXJndW1lbnRzLmxlbmd0aD8oaVswXT10LGlbMV09cixpWzJdPW4pOjU9PT1hcmd1bWVudHMubGVuZ3RoJiYoaVswXT10LGlbMV09cixpWzJdPW4saVszXT1vKX1yZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9maWxsU2V0XCIsITApLHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9kb0ZpbGxcIiwhMCksKGU9dGhpcy5fcmVuZGVyZXIpLmZpbGwuYXBwbHkoZSxhcmd1bWVudHMpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUubm9GaWxsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9kb0ZpbGxcIiwhMSksdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5ub1N0cm9rZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJlci5fc2V0UHJvcGVydHkoXCJfZG9TdHJva2VcIiwhMSksdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2U9ZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX3N0cm9rZVNldFwiLCEwKSx0aGlzLl9yZW5kZXJlci5fc2V0UHJvcGVydHkoXCJfZG9TdHJva2VcIiwhMCksKGU9dGhpcy5fcmVuZGVyZXIpLnN0cm9rZS5hcHBseShlLGFyZ3VtZW50cyksdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5lcmFzZT1mdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXToyNTUsdD0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MjU1O3JldHVybiB0aGlzLl9yZW5kZXJlci5lcmFzZShlLHQpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUubm9FcmFzZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJlci5ub0VyYXNlKCksdGhpc307dmFyIG89cy5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjI1MyxcIi4uL2NvcmUvbWFpblwiOjI2NCxcIi4vcDUuQ29sb3JcIjoyNTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbFwiOjE1MX1dLDI1MzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuQkVaSUVSPXIuUVVBRFJBVElDPXIuTElORUFSPXIuX0NUWF9NSURETEU9ci5fREVGQVVMVF9MRUFETVVMVD1yLl9ERUZBVUxUX1RFWFRfRklMTD1yLldPUkQ9ci5DSEFSPXIuQk9MRElUQUxJQz1yLkJPTEQ9ci5JVEFMSUM9ci5OT1JNQUw9ci5CTFVSPXIuRVJPREU9ci5ESUxBVEU9ci5QT1NURVJJWkU9ci5JTlZFUlQ9ci5PUEFRVUU9ci5HUkFZPXIuVEhSRVNIT0xEPXIuQlVSTj1yLkRPREdFPXIuU09GVF9MSUdIVD1yLkhBUkRfTElHSFQ9ci5PVkVSTEFZPXIuUkVQTEFDRT1yLlNDUkVFTj1yLk1VTFRJUExZPXIuRVhDTFVTSU9OPXIuU1VCVFJBQ1Q9ci5ESUZGRVJFTkNFPXIuTElHSFRFU1Q9ci5EQVJLRVNUPXIuQUREPXIuUkVNT1ZFPXIuQkxFTkQ9ci5VUF9BUlJPVz1yLlRBQj1yLlNISUZUPXIuUklHSFRfQVJST1c9ci5SRVRVUk49ci5PUFRJT049ci5MRUZUX0FSUk9XPXIuRVNDQVBFPXIuRU5URVI9ci5ET1dOX0FSUk9XPXIuREVMRVRFPXIuQ09OVFJPTD1yLkJBQ0tTUEFDRT1yLkFMVD1yLkFVVE89ci5IU0w9ci5IU0I9ci5SR0I9ci5NSVRFUj1yLkJFVkVMPXIuUk9VTkQ9ci5TUVVBUkU9ci5QUk9KRUNUPXIuUElFPXIuQ0hPUkQ9ci5PUEVOPXIuQ0xPU0U9ci5URVNTPXIuUVVBRF9TVFJJUD1yLlFVQURTPXIuVFJJQU5HTEVfU1RSSVA9ci5UUklBTkdMRV9GQU49ci5UUklBTkdMRVM9ci5MSU5FX0xPT1A9ci5MSU5FX1NUUklQPXIuTElORVM9ci5QT0lOVFM9ci5CQVNFTElORT1yLkJPVFRPTT1yLlRPUD1yLkNFTlRFUj1yLkxFRlQ9ci5SSUdIVD1yLlJBRElVUz1yLkNPUk5FUlM9ci5DT1JORVI9ci5SQURfVE9fREVHPXIuREVHX1RPX1JBRD1yLlJBRElBTlM9ci5ERUdSRUVTPXIuVFdPX1BJPXIuVEFVPXIuUVVBUlRFUl9QST1yLlBJPXIuSEFMRl9QST1yLldBSVQ9ci5URVhUPXIuTU9WRT1yLkhBTkQ9ci5DUk9TUz1yLkFSUk9XPXIuV0VCR0w9ci5QMkQ9ci5WRVJTSU9OPXZvaWQgMCxyLkZBTExCQUNLPXIuTEFCRUw9ci5BWEVTPXIuR1JJRD1yLl9ERUZBVUxUX0ZJTEw9ci5fREVGQVVMVF9TVFJPS0U9ci5QT1JUUkFJVD1yLkxBTkRTQ0FQRT1yLk1JUlJPUj1yLkNMQU1QPXIuUkVQRUFUPXIuTkVBUkVTVD1yLklNQUdFPXIuSU1NRURJQVRFPXIuVEVYVFVSRT1yLkZJTEw9ci5TVFJPS0U9ci5DVVJWRT12b2lkIDA7dmFyIG49TWF0aC5QSTtyLlZFUlNJT049XCIxLjQuMVwiO3IuUDJEPVwicDJkXCI7ci5XRUJHTD1cIndlYmdsXCI7ci5BUlJPVz1cImRlZmF1bHRcIjtyLkNST1NTPVwiY3Jvc3NoYWlyXCI7ci5IQU5EPVwicG9pbnRlclwiO3IuTU9WRT1cIm1vdmVcIjtyLlRFWFQ9XCJ0ZXh0XCI7ci5XQUlUPVwid2FpdFwiO3ZhciBvPW4vMjtyLkhBTEZfUEk9bzt2YXIgaT1uO3IuUEk9aTt2YXIgYT1uLzQ7ci5RVUFSVEVSX1BJPWE7dmFyIHM9MipuO3IuVEFVPXM7dmFyIGw9MipuO3IuVFdPX1BJPWw7ci5ERUdSRUVTPVwiZGVncmVlc1wiO3IuUkFESUFOUz1cInJhZGlhbnNcIjt2YXIgdT1uLzE4MDtyLkRFR19UT19SQUQ9dTt2YXIgYz0xODAvbjtyLlJBRF9UT19ERUc9YztyLkNPUk5FUj1cImNvcm5lclwiO3IuQ09STkVSUz1cImNvcm5lcnNcIjtyLlJBRElVUz1cInJhZGl1c1wiO3IuUklHSFQ9XCJyaWdodFwiO3IuTEVGVD1cImxlZnRcIjtyLkNFTlRFUj1cImNlbnRlclwiO3IuVE9QPVwidG9wXCI7ci5CT1RUT009XCJib3R0b21cIjtyLkJBU0VMSU5FPVwiYWxwaGFiZXRpY1wiO3IuUE9JTlRTPTA7ci5MSU5FUz0xO3IuTElORV9TVFJJUD0zO3IuTElORV9MT09QPTI7ci5UUklBTkdMRVM9NDtyLlRSSUFOR0xFX0ZBTj02O3IuVFJJQU5HTEVfU1RSSVA9NTtyLlFVQURTPVwicXVhZHNcIjtyLlFVQURfU1RSSVA9XCJxdWFkX3N0cmlwXCI7ci5URVNTPVwidGVzc1wiO3IuQ0xPU0U9XCJjbG9zZVwiO3IuT1BFTj1cIm9wZW5cIjtyLkNIT1JEPVwiY2hvcmRcIjtyLlBJRT1cInBpZVwiO3IuUFJPSkVDVD1cInNxdWFyZVwiO3IuU1FVQVJFPVwiYnV0dFwiO3IuUk9VTkQ9XCJyb3VuZFwiO3IuQkVWRUw9XCJiZXZlbFwiO3IuTUlURVI9XCJtaXRlclwiO3IuUkdCPVwicmdiXCI7ci5IU0I9XCJoc2JcIjtyLkhTTD1cImhzbFwiO3IuQVVUTz1cImF1dG9cIjtyLkFMVD0xODtyLkJBQ0tTUEFDRT04O3IuQ09OVFJPTD0xNztyLkRFTEVURT00NjtyLkRPV05fQVJST1c9NDA7ci5FTlRFUj0xMztyLkVTQ0FQRT0yNztyLkxFRlRfQVJST1c9Mzc7ci5PUFRJT049MTg7ci5SRVRVUk49MTM7ci5SSUdIVF9BUlJPVz0zOTtyLlNISUZUPTE2O3IuVEFCPTk7ci5VUF9BUlJPVz0zODtyLkJMRU5EPVwic291cmNlLW92ZXJcIjtyLlJFTU9WRT1cImRlc3RpbmF0aW9uLW91dFwiO3IuQUREPVwibGlnaHRlclwiO3IuREFSS0VTVD1cImRhcmtlblwiO3IuTElHSFRFU1Q9XCJsaWdodGVuXCI7ci5ESUZGRVJFTkNFPVwiZGlmZmVyZW5jZVwiO3IuU1VCVFJBQ1Q9XCJzdWJ0cmFjdFwiO3IuRVhDTFVTSU9OPVwiZXhjbHVzaW9uXCI7ci5NVUxUSVBMWT1cIm11bHRpcGx5XCI7ci5TQ1JFRU49XCJzY3JlZW5cIjtyLlJFUExBQ0U9XCJjb3B5XCI7ci5PVkVSTEFZPVwib3ZlcmxheVwiO3IuSEFSRF9MSUdIVD1cImhhcmQtbGlnaHRcIjtyLlNPRlRfTElHSFQ9XCJzb2Z0LWxpZ2h0XCI7ci5ET0RHRT1cImNvbG9yLWRvZGdlXCI7ci5CVVJOPVwiY29sb3ItYnVyblwiO3IuVEhSRVNIT0xEPVwidGhyZXNob2xkXCI7ci5HUkFZPVwiZ3JheVwiO3IuT1BBUVVFPVwib3BhcXVlXCI7ci5JTlZFUlQ9XCJpbnZlcnRcIjtyLlBPU1RFUklaRT1cInBvc3Rlcml6ZVwiO3IuRElMQVRFPVwiZGlsYXRlXCI7ci5FUk9ERT1cImVyb2RlXCI7ci5CTFVSPVwiYmx1clwiO3IuTk9STUFMPVwibm9ybWFsXCI7ci5JVEFMSUM9XCJpdGFsaWNcIjtyLkJPTEQ9XCJib2xkXCI7ci5CT0xESVRBTElDPVwiYm9sZCBpdGFsaWNcIjtyLkNIQVI9XCJDSEFSXCI7ci5XT1JEPVwiV09SRFwiO3IuX0RFRkFVTFRfVEVYVF9GSUxMPVwiIzAwMDAwMFwiO3IuX0RFRkFVTFRfTEVBRE1VTFQ9MS4yNTtyLl9DVFhfTUlERExFPVwibWlkZGxlXCI7ci5MSU5FQVI9XCJsaW5lYXJcIjtyLlFVQURSQVRJQz1cInF1YWRyYXRpY1wiO3IuQkVaSUVSPVwiYmV6aWVyXCI7ci5DVVJWRT1cImN1cnZlXCI7ci5TVFJPS0U9XCJzdHJva2VcIjtyLkZJTEw9XCJmaWxsXCI7ci5URVhUVVJFPVwidGV4dHVyZVwiO3IuSU1NRURJQVRFPVwiaW1tZWRpYXRlXCI7ci5JTUFHRT1cImltYWdlXCI7ci5ORUFSRVNUPVwibmVhcmVzdFwiO3IuUkVQRUFUPVwicmVwZWF0XCI7ci5DTEFNUD1cImNsYW1wXCI7ci5NSVJST1I9XCJtaXJyb3JcIjtyLkxBTkRTQ0FQRT1cImxhbmRzY2FwZVwiO3IuUE9SVFJBSVQ9XCJwb3J0cmFpdFwiO3IuX0RFRkFVTFRfU1RST0tFPVwiIzAwMDAwMFwiO3IuX0RFRkFVTFRfRklMTD1cIiNGRkZGRkZcIjtyLkdSSUQ9XCJncmlkXCI7ci5BWEVTPVwiYXhlc1wiO3IuTEFCRUw9XCJsYWJlbFwiO3IuRkFMTEJBQ0s9XCJmYWxsYmFja1wifSx7fV0sMjU0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGk9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX12YXIgbD1baS5BUlJPVyxpLkNST1NTLGkuSEFORCxpLk1PVkUsaS5URVhULGkuV0FJVF07by5kZWZhdWx0LnByb3RvdHlwZS5fZnJhbWVSYXRlPTAsby5kZWZhdWx0LnByb3RvdHlwZS5fbGFzdEZyYW1lVGltZT13aW5kb3cucGVyZm9ybWFuY2Uubm93KCksby5kZWZhdWx0LnByb3RvdHlwZS5fdGFyZ2V0RnJhbWVSYXRlPTYwO3ZhciB1PXdpbmRvdy5wcmludDtmdW5jdGlvbiBjKCl7cmV0dXJuIHdpbmRvdy5pbm5lcldpZHRofHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aHx8ZG9jdW1lbnQuYm9keSYmZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aHx8MH1mdW5jdGlvbiBkKCl7cmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodHx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0fHxkb2N1bWVudC5ib2R5JiZkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodHx8MH1vLmRlZmF1bHQucHJvdG90eXBlLnByaW50PWZ1bmN0aW9uKCl7dmFyIGU7YXJndW1lbnRzLmxlbmd0aD8oZT1jb25zb2xlKS5sb2cuYXBwbHkoZSxhcmd1bWVudHMpOnUoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5mcmFtZUNvdW50PTAsby5kZWZhdWx0LnByb3RvdHlwZS5kZWx0YVRpbWU9MCxvLmRlZmF1bHQucHJvdG90eXBlLmZvY3VzZWQ9ZG9jdW1lbnQuaGFzRm9jdXMoKSxvLmRlZmF1bHQucHJvdG90eXBlLmN1cnNvcj1mdW5jdGlvbihlLHQscil7dmFyIG49XCJhdXRvXCIsbz10aGlzLl9jdXJFbGVtZW50LmVsdDtpZihsLmluY2x1ZGVzKGUpKW49ZTtlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXt2YXIgaT1cIlwiO3QmJnImJlwibnVtYmVyXCI9PXR5cGVvZiB0JiZcIm51bWJlclwiPT10eXBlb2YgciYmKGk9XCJcIi5jb25jYXQodCxcIiBcIikuY29uY2F0KHIpKSxuPVwiaHR0cDovL1wiPT09ZS5zdWJzdHJpbmcoMCw3KXx8XCJodHRwczovL1wiPT09ZS5zdWJzdHJpbmcoMCw4KT9cInVybChcIi5jb25jYXQoZSxcIikgXCIpLmNvbmNhdChpLFwiLCBhdXRvXCIpOi9cXC4oY3VyfGpwZ3xqcGVnfGdpZnxwbmd8Q1VSfEpQR3xKUEVHfEdJRnxQTkcpJC8udGVzdChlKT9cInVybChcIi5jb25jYXQoZSxcIikgXCIpLmNvbmNhdChpLFwiLCBhdXRvXCIpOmV9by5zdHlsZS5jdXJzb3I9bn0sby5kZWZhdWx0LnByb3RvdHlwZS5mcmFtZVJhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZnJhbWVSYXRlXCIsYXJndW1lbnRzKSxcIm51bWJlclwiIT10eXBlb2YgZXx8ZTwwP3RoaXMuX2ZyYW1lUmF0ZToodGhpcy5fc2V0UHJvcGVydHkoXCJfdGFyZ2V0RnJhbWVSYXRlXCIsZSksMD09PWUmJnRoaXMuX3NldFByb3BlcnR5KFwiX2ZyYW1lUmF0ZVwiLGUpLHRoaXMpfSxvLmRlZmF1bHQucHJvdG90eXBlLmdldEZyYW1lUmF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZyYW1lUmF0ZSgpfSxvLmRlZmF1bHQucHJvdG90eXBlLnNldEZyYW1lUmF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5mcmFtZVJhdGUoZSl9LG8uZGVmYXVsdC5wcm90b3R5cGUubm9DdXJzb3I9ZnVuY3Rpb24oKXt0aGlzLl9jdXJFbGVtZW50LmVsdC5zdHlsZS5jdXJzb3I9XCJub25lXCJ9LG8uZGVmYXVsdC5wcm90b3R5cGUuZGlzcGxheVdpZHRoPXNjcmVlbi53aWR0aCxvLmRlZmF1bHQucHJvdG90eXBlLmRpc3BsYXlIZWlnaHQ9c2NyZWVuLmhlaWdodCxvLmRlZmF1bHQucHJvdG90eXBlLndpbmRvd1dpZHRoPWMoKSxvLmRlZmF1bHQucHJvdG90eXBlLndpbmRvd0hlaWdodD1kKCksby5kZWZhdWx0LnByb3RvdHlwZS5fb25yZXNpemU9ZnVuY3Rpb24oZSl7dGhpcy5fc2V0UHJvcGVydHkoXCJ3aW5kb3dXaWR0aFwiLGMoKSksdGhpcy5fc2V0UHJvcGVydHkoXCJ3aW5kb3dIZWlnaHRcIixkKCkpO3ZhciB0LHI9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7XCJmdW5jdGlvblwiPT10eXBlb2Ygci53aW5kb3dSZXNpemVkJiYodm9pZCAwPT09KHQ9ci53aW5kb3dSZXNpemVkKGUpKXx8dHx8ZS5wcmV2ZW50RGVmYXVsdCgpKX0sby5kZWZhdWx0LnByb3RvdHlwZS53aWR0aD0wLG8uZGVmYXVsdC5wcm90b3R5cGUuaGVpZ2h0PTAsby5kZWZhdWx0LnByb3RvdHlwZS5mdWxsc2NyZWVuPWZ1bmN0aW9uKGUpe2lmKG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZnVsbHNjcmVlblwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSlyZXR1cm4gZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnR8fGRvY3VtZW50LndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50fHxkb2N1bWVudC5tb3pGdWxsU2NyZWVuRWxlbWVudHx8ZG9jdW1lbnQubXNGdWxsc2NyZWVuRWxlbWVudDtlP2Z1bmN0aW9uKGUpe2lmKCEoZG9jdW1lbnQuZnVsbHNjcmVlbkVuYWJsZWR8fGRvY3VtZW50LndlYmtpdEZ1bGxzY3JlZW5FbmFibGVkfHxkb2N1bWVudC5tb3pGdWxsU2NyZWVuRW5hYmxlZHx8ZG9jdW1lbnQubXNGdWxsc2NyZWVuRW5hYmxlZCkpdGhyb3cgbmV3IEVycm9yKFwiRnVsbHNjcmVlbiBub3QgZW5hYmxlZCBpbiB0aGlzIGJyb3dzZXIuXCIpO2UucmVxdWVzdEZ1bGxzY3JlZW4/ZS5yZXF1ZXN0RnVsbHNjcmVlbigpOmUubW96UmVxdWVzdEZ1bGxTY3JlZW4/ZS5tb3pSZXF1ZXN0RnVsbFNjcmVlbigpOmUud2Via2l0UmVxdWVzdEZ1bGxzY3JlZW4/ZS53ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbigpOmUubXNSZXF1ZXN0RnVsbHNjcmVlbiYmZS5tc1JlcXVlc3RGdWxsc2NyZWVuKCl9KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCk6ZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4/ZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4oKTpkb2N1bWVudC5tb3pDYW5jZWxGdWxsU2NyZWVuP2RvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW4oKTpkb2N1bWVudC53ZWJraXRFeGl0RnVsbHNjcmVlbj9kb2N1bWVudC53ZWJraXRFeGl0RnVsbHNjcmVlbigpOmRvY3VtZW50Lm1zRXhpdEZ1bGxzY3JlZW4mJmRvY3VtZW50Lm1zRXhpdEZ1bGxzY3JlZW4oKX0sby5kZWZhdWx0LnByb3RvdHlwZS5waXhlbERlbnNpdHk9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicGl4ZWxEZW5zaXR5XCIsYXJndW1lbnRzKSxcIm51bWJlclwiPT10eXBlb2YgZT8oZSE9PXRoaXMuX3BpeGVsRGVuc2l0eSYmKHRoaXMuX3BpeGVsRGVuc2l0eT1lKSwodD10aGlzKS5yZXNpemVDYW52YXModGhpcy53aWR0aCx0aGlzLmhlaWdodCwhMCkpOnQ9dGhpcy5fcGl4ZWxEZW5zaXR5LHR9LG8uZGVmYXVsdC5wcm90b3R5cGUuZGlzcGxheURlbnNpdHk9ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LmRldmljZVBpeGVsUmF0aW99LG8uZGVmYXVsdC5wcm90b3R5cGUuZ2V0VVJMPWZ1bmN0aW9uKCl7cmV0dXJuIGxvY2F0aW9uLmhyZWZ9LG8uZGVmYXVsdC5wcm90b3R5cGUuZ2V0VVJMUGF0aD1mdW5jdGlvbigpe3JldHVybiBsb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVyblwiXCIhPT1lfSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuZ2V0VVJMUGFyYW1zPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9L1s/Jl0oW14mPV0rKSg/OlsmPV0pKFteJj1dKykvZ2ltLHI9e307bnVsbCE9KGU9dC5leGVjKGxvY2F0aW9uLnNlYXJjaCkpOyllLmluZGV4PT09dC5sYXN0SW5kZXgmJnQubGFzdEluZGV4KysscltlWzFdXT1lWzJdO3JldHVybiByfTt2YXIgZj1vLmRlZmF1bHQ7ci5kZWZhdWx0PWZ9LHtcIi4vY29uc3RhbnRzXCI6MjUzLFwiLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIjoxNTIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIjoxNTYsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzXCI6MTg1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2hcIjoxOTAsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxfV0sMjU1OltmdW5jdGlvbihyLGUsdCl7XCJ1c2Ugc3RyaWN0XCI7cihcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaFwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIikscihcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lc1wiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvclwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaFwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCIpLHIoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaFwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiKSxyKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2hcIikscihcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1yKFwiLi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O3IoXCIuLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiKTt2YXIgaT1udWxsLGE9bnVsbDtvLmRlZmF1bHQuX2ZyaWVuZGx5RXJyb3I9by5kZWZhdWx0Ll9jaGVja0ZvclVzZXJEZWZpbmVkRnVuY3Rpb25zPW8uZGVmYXVsdC5fZmVzRXJyb3JNb25pdG9yPWZ1bmN0aW9uKCl7fSxpPW51bGw7dmFyIHM9XCJodHRwczovL2dpdGh1Yi5jb20vcHJvY2Vzc2luZy9wNS5qcy93aWtpL3A1LmpzLW92ZXJ2aWV3I3doeS1jYW50LWktYXNzaWduLXZhcmlhYmxlcy11c2luZy1wNS1mdW5jdGlvbnMtYW5kLXZhcmlhYmxlcy1iZWZvcmUtc2V0dXBcIjthPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShyKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVyblwiX1wiIT09ZVswXSYmKCEoZSBpbiB0KSYmKHRbZV09ITApKX0pLm1hcChmdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiByW2VdP1wiZnVuY3Rpb25cIjplPT09ZS50b1VwcGVyQ2FzZSgpP1wiY29uc3RhbnRcIjpcInZhcmlhYmxlXCIse25hbWU6ZSx0eXBlOnR9fSl9dmFyIHQ9e307KGk9W10uY29uY2F0KGUoby5kZWZhdWx0LnByb3RvdHlwZSksZShyKFwiLi4vY29uc3RhbnRzXCIpKSkpLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5uYW1lLmxlbmd0aC1lLm5hbWUubGVuZ3RofSl9O2Z1bmN0aW9uIGwocixuKXtuPW58fGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSksaXx8YSgpLGkuc29tZShmdW5jdGlvbihlKXtpZihyLm1lc3NhZ2UmJm51bGwhPT1yLm1lc3NhZ2UubWF0Y2goXCJcXFxcVz9cIi5jb25jYXQoZS5uYW1lLFwiXFxcXFdcIikpKXt2YXIgdD1cImZ1bmN0aW9uXCI9PT1lLnR5cGU/XCJcIi5jb25jYXQoZS5uYW1lLFwiKClcIik6ZS5uYW1lO3JldHVybiBuKFwiRGlkIHlvdSBqdXN0IHRyeSB0byB1c2UgcDUuanMncyBcIi5jb25jYXQodCxcIiBcIikuY29uY2F0KGUudHlwZSxcIj8gSWYgc28sIHlvdSBtYXkgd2FudCB0byBtb3ZlIGl0IGludG8geW91ciBza2V0Y2gncyBzZXR1cCgpIGZ1bmN0aW9uLlxcblxcbkZvciBtb3JlIGRldGFpbHMsIHNlZTogXCIpLmNvbmNhdChzKSksITB9fSl9by5kZWZhdWx0LnByb3RvdHlwZS5faGVscEZvck1pc3VzZWRBdFRvcExldmVsQ29kZT1sLFwiY29tcGxldGVcIiE9PWRvY3VtZW50LnJlYWR5U3RhdGUmJih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsbCwhMSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsbCwhMSl9KSk7dmFyIHU9by5kZWZhdWx0O3QuZGVmYXVsdD11fSx7XCIuLi9jb25zdGFudHNcIjoyNTMsXCIuLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiOjI2MixcIi4uL21haW5cIjoyNjQsXCIuL2Jyb3dzZXJfZXJyb3JzXCI6dm9pZCAwLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIjoxNTIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2hcIjoxNTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIjoxNTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pblwiOjE1OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIjoxNjEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZVwiOjE2MyxcImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lXCI6MTY2LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIjoxNzMsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXNcIjoxNzQsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIjoxNzYsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3JcIjoxODAsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoXCI6MTg3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2hcIjoxOTAsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2hcIjoyMjgsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiOjIyOX1dLDI1NjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2UoXCIuLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiKTtvLmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcj1mdW5jdGlvbigpe307dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiOjI2MixcIi4uL21haW5cIjoyNjR9XSwyNTc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZsYXQtbWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zY29wYWJsZXMuZmxhdC1tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5c1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG49XyhlKFwiLi4vbWFpblwiKSksbz1lKFwiLi4vaW50ZXJuYXRpb25hbGl6YXRpb25cIiksaT1iKGUoXCIuLi9jb25zdGFudHNcIikpLHMsbCx1LGMsZCxmLGgscCx5LG0sZztmdW5jdGlvbiB2KCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gdj1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIGIoZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD12KCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXJldHVybiByLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpLHJ9ZnVuY3Rpb24gXyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24geChlKXtyZXR1cm4gUyhlKXx8aihlKXx8dygpfWZ1bmN0aW9uIHcoKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIil9ZnVuY3Rpb24gaihlKXtpZihTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGUpfHxcIltvYmplY3QgQXJndW1lbnRzXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKXJldHVybiBBcnJheS5mcm9tKGUpfWZ1bmN0aW9uIFMoZSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciB0PTAscj1uZXcgQXJyYXkoZS5sZW5ndGgpO3Q8ZS5sZW5ndGg7dCsrKXJbdF09ZVt0XTtyZXR1cm4gcn19bi5kZWZhdWx0Ll9mZXNDb2RlUmVhZGVyPWZ1bmN0aW9uKCl7fTt2YXIgTT1uLmRlZmF1bHQ7ci5kZWZhdWx0PU19LHtcIi4uL2NvbnN0YW50c1wiOjI1MyxcIi4uL2ludGVybmF0aW9uYWxpemF0aW9uXCI6MjYyLFwiLi4vbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIjoxNTIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmxhdC1tYXBcIjoxNTMsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2hcIjoxNTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbVwiOjE1NSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlc1wiOjE1NixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiOjE1NyxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIjoxNjEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zY29wYWJsZXMuZmxhdC1tYXBcIjoxNjUsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIjoxNzYsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3JcIjoxODAsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIjoxODUsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaFwiOjE4NyxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIjoxOTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIjoxOTMsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCI6MTk2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvblwiOjE5NCxcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIjoxOTUsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaFwiOjIyOCxcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5fV0sMjU4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gaSgpe3ZhciB0PS8oXnxAKVxcUys6XFxkKy8scj0vXlxccyphdCAuKihcXFMrOlxcZCt8XFwobmF0aXZlXFwpKS9tLG49L14oZXZhbEApPyhcXFtuYXRpdmUgY29kZV0pPyQvO3JldHVybntwYXJzZTpmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZS5zdGFja3RyYWNlfHx2b2lkIDAhPT1lW1wib3BlcmEjc291cmNlbG9jXCJdP3RoaXMucGFyc2VPcGVyYShlKTplLnN0YWNrJiZlLnN0YWNrLm1hdGNoKHIpP3RoaXMucGFyc2VWOE9ySUUoZSk6ZS5zdGFjaz90aGlzLnBhcnNlRkZPclNhZmFyaShlKTp2b2lkIDB9LGV4dHJhY3RMb2NhdGlvbjpmdW5jdGlvbihlKXtpZigtMT09PWUuaW5kZXhPZihcIjpcIikpcmV0dXJuW2VdO3ZhciB0PS8oLis/KSg/OjooXFxkKykpPyg/OjooXFxkKykpPyQvLmV4ZWMoZS5yZXBsYWNlKC9bKCldL2csXCJcIikpO3JldHVyblt0WzFdLHRbMl18fHZvaWQgMCx0WzNdfHx2b2lkIDBdfSxwYXJzZVY4T3JJRTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zdGFjay5zcGxpdChcIlxcblwiKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuISFlLm1hdGNoKHIpfSx0aGlzKS5tYXAoZnVuY3Rpb24oZSl7LTE8ZS5pbmRleE9mKFwiKGV2YWwgXCIpJiYoZT1lLnJlcGxhY2UoL2V2YWwgY29kZS9nLFwiZXZhbFwiKS5yZXBsYWNlKC8oXFwoZXZhbCBhdCBbXigpXSopfChcXCksLiokKS9nLFwiXCIpKTt2YXIgdD1lLnJlcGxhY2UoL15cXHMrLyxcIlwiKS5yZXBsYWNlKC9cXChldmFsIGNvZGUvZyxcIihcIikscj10Lm1hdGNoKC8gKFxcKCguKyk6KFxcZCspOihcXGQrKVxcKSQpLyksbj0odD1yP3QucmVwbGFjZShyWzBdLFwiXCIpOnQpLnNwbGl0KC9cXHMrLykuc2xpY2UoMSksbz10aGlzLmV4dHJhY3RMb2NhdGlvbihyP3JbMV06bi5wb3AoKSk7cmV0dXJue2Z1bmN0aW9uTmFtZTpuLmpvaW4oXCIgXCIpfHx2b2lkIDAsZmlsZU5hbWU6LTE8W1wiZXZhbFwiLFwiPGFub255bW91cz5cIl0uaW5kZXhPZihvWzBdKT92b2lkIDA6b1swXSxsaW5lTnVtYmVyOm9bMV0sY29sdW1uTnVtYmVyOm9bMl0sc291cmNlOmV9fSx0aGlzKX0scGFyc2VGRk9yU2FmYXJpOmZ1bmN0aW9uKGUpe3JldHVybiBlLnN0YWNrLnNwbGl0KFwiXFxuXCIpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hZS5tYXRjaChuKX0sdGhpcykubWFwKGZ1bmN0aW9uKGUpe2lmKC0xPGUuaW5kZXhPZihcIiA+IGV2YWxcIikmJihlPWUucmVwbGFjZSgvIGxpbmUgKFxcZCspKD86ID4gZXZhbCBsaW5lIFxcZCspKiA+IGV2YWw6XFxkKzpcXGQrL2csXCI6JDFcIikpLC0xPT09ZS5pbmRleE9mKFwiQFwiKSYmLTE9PT1lLmluZGV4T2YoXCI6XCIpKXJldHVybntmdW5jdGlvbk5hbWU6ZX07dmFyIHQ9LygoLipcIi4rXCJbXkBdKik/W15AXSopKD86QCkvLHI9ZS5tYXRjaCh0KSxuPXImJnJbMV0/clsxXTp2b2lkIDAsbz10aGlzLmV4dHJhY3RMb2NhdGlvbihlLnJlcGxhY2UodCxcIlwiKSk7cmV0dXJue2Z1bmN0aW9uTmFtZTpuLGZpbGVOYW1lOm9bMF0sbGluZU51bWJlcjpvWzFdLGNvbHVtbk51bWJlcjpvWzJdLHNvdXJjZTplfX0sdGhpcyl9LHBhcnNlT3BlcmE6ZnVuY3Rpb24oZSl7cmV0dXJuIWUuc3RhY2t0cmFjZXx8LTE8ZS5tZXNzYWdlLmluZGV4T2YoXCJcXG5cIikmJmUubWVzc2FnZS5zcGxpdChcIlxcblwiKS5sZW5ndGg+ZS5zdGFja3RyYWNlLnNwbGl0KFwiXFxuXCIpLmxlbmd0aD90aGlzLnBhcnNlT3BlcmE5KGUpOmUuc3RhY2s/dGhpcy5wYXJzZU9wZXJhMTEoZSk6dGhpcy5wYXJzZU9wZXJhMTAoZSl9LHBhcnNlT3BlcmE5OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0vTGluZSAoXFxkKykuKnNjcmlwdCAoPzppbiApPyhcXFMrKS9pLHI9ZS5tZXNzYWdlLnNwbGl0KFwiXFxuXCIpLG49W10sbz0yLGk9ci5sZW5ndGg7bzxpO28rPTIpe3ZhciBhPXQuZXhlYyhyW29dKTthJiZuLnB1c2goe2ZpbGVOYW1lOmFbMl0sbGluZU51bWJlcjphWzFdLHNvdXJjZTpyW29dfSl9cmV0dXJuIG59LHBhcnNlT3BlcmExMDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9L0xpbmUgKFxcZCspLipzY3JpcHQgKD86aW4gKT8oXFxTKykoPzo6IEluIGZ1bmN0aW9uIChcXFMrKSk/JC9pLHI9ZS5zdGFja3RyYWNlLnNwbGl0KFwiXFxuXCIpLG49W10sbz0wLGk9ci5sZW5ndGg7bzxpO28rPTIpe3ZhciBhPXQuZXhlYyhyW29dKTthJiZuLnB1c2goe2Z1bmN0aW9uTmFtZTphWzNdfHx2b2lkIDAsZmlsZU5hbWU6YVsyXSxsaW5lTnVtYmVyOmFbMV0sc291cmNlOnJbb119KX1yZXR1cm4gbn0scGFyc2VPcGVyYTExOmZ1bmN0aW9uKGUpe3JldHVybiBlLnN0YWNrLnNwbGl0KFwiXFxuXCIpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hIWUubWF0Y2godCkmJiFlLm1hdGNoKC9eRXJyb3IgY3JlYXRlZCBhdC8pfSx0aGlzKS5tYXAoZnVuY3Rpb24oZSl7dmFyIHQscj1lLnNwbGl0KFwiQFwiKSxuPXRoaXMuZXh0cmFjdExvY2F0aW9uKHIucG9wKCkpLG89ci5zaGlmdCgpfHxcIlwiLGk9by5yZXBsYWNlKC88YW5vbnltb3VzIGZ1bmN0aW9uKDogKFxcdyspKT8+LyxcIiQyXCIpLnJlcGxhY2UoL1xcKFteKV0qXFwpL2csXCJcIil8fHZvaWQgMDtyZXR1cm4gby5tYXRjaCgvXFwoKFteKV0qKVxcKS8pJiYodD1vLnJlcGxhY2UoL15bXihdK1xcKChbXildKilcXCkkLyxcIiQxXCIpKSx7ZnVuY3Rpb25OYW1lOmksYXJnczp2b2lkIDA9PT10fHxcIlthcmd1bWVudHMgbm90IGF2YWlsYWJsZV1cIj09PXQ/dm9pZCAwOnQuc3BsaXQoXCIsXCIpLGZpbGVOYW1lOm5bMF0sbGluZU51bWJlcjpuWzFdLGNvbHVtbk51bWJlcjpuWzJdLHNvdXJjZTplfX0sdGhpcyl9fX1vLmRlZmF1bHQuX2dldEVycm9yU3RhY2tQYXJzZXI9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGl9O3ZhciBhPW8uZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIjoxNTIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIjoxNTcsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pblwiOjE1OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIjoxNjEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoXCI6MTg3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MX1dLDI1OTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtcHJvdG90eXBlLW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5jb25zdHJ1Y3RcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zZXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4uL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTsoZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybjtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PXMoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJuO3ZhciB0PWEoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKX0pKGUoXCIuLi9jb25zdGFudHNcIikpLGUoXCIuLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiKTtmdW5jdGlvbiBhKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gYT1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIHMoZSl7cmV0dXJuKHM9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfW8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzPW8uZGVmYXVsdC5fY2xlYXJWYWxpZGF0ZVBhcmFtc0NhY2hlPWZ1bmN0aW9uKCl7fTt2YXIgaT1vLmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uLy4uLy4uL2RvY3MvcGFyYW1ldGVyRGF0YS5qc29uXCI6dm9pZCAwLFwiLi4vY29uc3RhbnRzXCI6MjUzLFwiLi4vaW50ZXJuYXRpb25hbGl6YXRpb25cIjoyNjIsXCIuLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaFwiOjE1NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlc1wiOjE1NixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiOjE1NyxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCI6MTU5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lmxhc3QtaW5kZXgtb2ZcIjoxNjAsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWVcIjoxNjYsXCJjb3JlLWpzL21vZHVsZXMvZXMubWFwXCI6MTY3LFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvclwiOjE3MCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZlwiOjE3NSxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5c1wiOjE3NixcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZmxlY3QuY29uc3RydWN0XCI6MTc5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc2V0XCI6MTgzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlc1wiOjE4NSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2hcIjoyMjgsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiOjIyOX1dLDI2MDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIGk9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX12YXIgbj17bW9kZUFkanVzdDpmdW5jdGlvbihlLHQscixuLG8pe3JldHVybiBvPT09aS5DT1JORVI/e3g6ZSx5OnQsdzpyLGg6bn06bz09PWkuQ09STkVSUz97eDplLHk6dCx3OnItZSxoOm4tdH06bz09PWkuUkFESVVTP3t4OmUtcix5OnQtbix3OjIqcixoOjIqbn06bz09PWkuQ0VOVEVSP3t4OmUtLjUqcix5OnQtLjUqbix3OnIsaDpufTp2b2lkIDB9fTtyLmRlZmF1bHQ9bn0se1wiLi9jb25zdGFudHNcIjoyNTN9XSwyNjE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2UoXCIuL2ludGVybmF0aW9uYWxpemF0aW9uXCIpO3ZhciBpPVByb21pc2UucmVzb2x2ZSgpO1Byb21pc2UuYWxsKFtuZXcgUHJvbWlzZShmdW5jdGlvbihlLHQpe1wiY29tcGxldGVcIj09PWRvY3VtZW50LnJlYWR5U3RhdGU/ZSgpOndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGUsITEpfSksaV0pLnRoZW4oZnVuY3Rpb24oKXt2b2lkIDA9PT13aW5kb3cuX3NldHVwRG9uZT93aW5kb3cubW9jaGF8fCh3aW5kb3cuc2V0dXAmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHdpbmRvdy5zZXR1cHx8d2luZG93LmRyYXcmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHdpbmRvdy5kcmF3KSYmIW8uZGVmYXVsdC5pbnN0YW5jZSYmbmV3IG8uZGVmYXVsdDpjb25zb2xlLndhcm4oXCJwNS5qcyBzZWVtcyB0byBoYXZlIGJlZW4gaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMuIFBsZWFzZSByZW1vdmUgdGhlIGR1cGxpY2F0ZSBpbXBvcnRcIil9KX0se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiOjI2MixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2VcIjoxNzgsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XSwyNjI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5c1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuc2V0VHJhbnNsYXRvckxhbmd1YWdlPXIuY3VycmVudFRyYW5zbGF0b3JMYW5ndWFnZT1yLmF2YWlsYWJsZVRyYW5zbGF0b3JMYW5ndWFnZXM9ci5pbml0aWFsaXplPXIudHJhbnNsYXRvcj12b2lkIDA7dmFyIGksYSxuPXMoZShcImkxOG5leHRcIikpLG89cyhlKFwiaTE4bmV4dC1icm93c2VyLWxhbmd1YWdlZGV0ZWN0b3JcIikpO2Z1bmN0aW9uIHMoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGwoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG49dFtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbi5rZXksbil9fXZhciB1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLHQpeyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsciksdGhpcy5pbml0KGUsdCl9dmFyIGUsdCxuO3JldHVybiBlPXIsKHQ9W3trZXk6XCJmZXRjaFdpdGhUaW1lb3V0XCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09cj9yOjJlMztyZXR1cm4gUHJvbWlzZS5yYWNlKFtmZXRjaChlLHQpLG5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gdChuZXcgRXJyb3IoXCJ0aW1lb3V0XCIpKX0sbil9KV0pfX0se2tleTpcImluaXRcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09dD90Ont9O3RoaXMuc2VydmljZXM9ZSx0aGlzLm9wdGlvbnM9cn19LHtrZXk6XCJyZWFkXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMub3B0aW9ucy5sb2FkUGF0aDtpZihlPT09dGhpcy5vcHRpb25zLmZhbGxiYWNrKXIobnVsbCxpW2VdW3RdKTtlbHNlIGlmKGEuaW5jbHVkZXMoZSkpe3ZhciBvPXRoaXMuc2VydmljZXMuaW50ZXJwb2xhdG9yLmludGVycG9sYXRlKG4se2xuZzplLG5zOnR9KTt0aGlzLmxvYWRVcmwobyxyKX1lbHNlIHIoXCJOb3QgZm91bmRcIiwhMSl9fSx7a2V5OlwibG9hZFVybFwiLHZhbHVlOmZ1bmN0aW9uKHQscil7dGhpcy5mZXRjaFdpdGhUaW1lb3V0KHQpLnRoZW4oZnVuY3Rpb24oZSl7aWYoIWUub2spdGhyb3cgbmV3IEVycm9yKFwiZmFpbGVkIGxvYWRpbmcgXCIuY29uY2F0KHQpKTtyZXR1cm4gZS5qc29uKCl9LGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiZmFpbGVkIGxvYWRpbmcgXCIuY29uY2F0KHQpKX0pLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHIobnVsbCxlKX0pLmNhdGNoKHIpfX1dKSYmbChlLnByb3RvdHlwZSx0KSxuJiZsKGUsbikscn0oKTt1LnR5cGU9XCJiYWNrZW5kXCI7dmFyIGM9ZnVuY3Rpb24oZSx0KXtjb25zb2xlLmRlYnVnKFwicDUuanMgdHJhbnNsYXRvciBjYWxsZWQgYmVmb3JlIHRyYW5zbGF0aW9ucyB3ZXJlIGxvYWRlZFwiKSxuLmRlZmF1bHQudChlLHQpfTtyLnRyYW5zbGF0b3I9YztyLmluaXRpYWxpemU9ZnVuY3Rpb24oKXtyZXR1cm4gbi5kZWZhdWx0LnVzZShvLmRlZmF1bHQpLnVzZSh1KS5pbml0KHtmYWxsYmFja0xuZzpcImVuXCIsbmVzdGluZ1ByZWZpeDpcIiR0cihcIixuZXN0aW5nU3VmZml4OlwiKVwiLGRlZmF1bHROUzpcInRyYW5zbGF0aW9uXCIscmV0dXJuRW1wdHlTdHJpbmc6ITEsaW50ZXJwb2xhdGlvbjp7ZXNjYXBlVmFsdWU6ITF9LGRldGVjdGlvbjp7Y2hlY2tXaGl0ZWxpc3Q6ITEsb3JkZXI6W1wicXVlcnlzdHJpbmdcIixcIm5hdmlnYXRvclwiLFwiaHRtbFRhZ1wiLFwicGF0aFwiLFwic3ViZG9tYWluXCJdLGNhY2hlczpbXX0sYmFja2VuZDp7ZmFsbGJhY2s6XCJlblwiLGxvYWRQYXRoOlwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9wNS90cmFuc2xhdGlvbnMve3tsbmd9fS97e25zfX0uanNvblwifSxwYXJ0aWFsQnVuZGxlZExhbmd1YWdlczohMCxyZXNvdXJjZXM6aX0pLnRoZW4oZnVuY3Rpb24oZSl7ci50cmFuc2xhdG9yPWM9ZX0sZnVuY3Rpb24oZSl7cmV0dXJuIGNvbnNvbGUuZGVidWcoXCJUcmFuc2xhdGlvbnMgZmFpbGVkIHRvIGxvYWQgKFwiLmNvbmNhdChlLFwiKVwiKSl9KX07ci5hdmFpbGFibGVUcmFuc2xhdG9yTGFuZ3VhZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIG4uZGVmYXVsdC5sYW5ndWFnZXN9O3IuY3VycmVudFRyYW5zbGF0b3JMYW5ndWFnZT1mdW5jdGlvbigpe3JldHVybiBuLmRlZmF1bHQubGFuZ3VhZ2V9O3Iuc2V0VHJhbnNsYXRvckxhbmd1YWdlPWZ1bmN0aW9uKGUpe3JldHVybiBuLmRlZmF1bHQuY2hhbmdlTGFuZ3VhZ2UoZXx8dm9pZCAwLGZ1bmN0aW9uKGUpe3JldHVybiBjb25zb2xlLmRlYnVnKFwiVHJhbnNsYXRpb25zIGZhaWxlZCB0byBsb2FkIChcIi5jb25jYXQoZSxcIilcIikpfSl9fSx7XCIuLi8uLi90cmFuc2xhdGlvbnNcIjp2b2lkIDAsXCIuLi8uLi90cmFuc2xhdGlvbnMvZGV2XCI6dm9pZCAwLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCI6MTU2LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW5cIjoxNTksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIjoxNzYsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlXCI6MTc4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlc1wiOjE4NSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxLFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjksaTE4bmV4dDozLFwiaTE4bmV4dC1icm93c2VyLWxhbmd1YWdlZGV0ZWN0b3JcIjozfV0sMjYzOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtvLmRlZmF1bHQucHJvdG90eXBlLnB1c2hTdHlsZT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInB1c2hTdHlsZSgpIG5vdCB1c2VkLCBzZWUgcHVzaCgpXCIpfSxvLmRlZmF1bHQucHJvdG90eXBlLnBvcFN0eWxlPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwicG9wU3R5bGUoKSBub3QgdXNlZCwgc2VlIHBvcCgpXCIpfSxvLmRlZmF1bHQucHJvdG90eXBlLnBvcE1hdHJpeD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInBvcE1hdHJpeCgpIG5vdCB1c2VkLCBzZWUgcG9wKClcIil9LG8uZGVmYXVsdC5wcm90b3R5cGUucHVzaE1hdHJpeD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInB1c2hNYXRyaXgoKSBub3QgdXNlZCwgc2VlIHB1c2goKVwiKX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuL21haW5cIjoyNjR9XSwyNjQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDAsZShcIi4vc2hpbVwiKTt2YXIgbj1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4vY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIG8oZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG49dFtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbi5rZXksbil9fXZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXyhlLHQscil7dmFyIGY9dGhpczshZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLF8pLHRoaXMuX3NldHVwRG9uZT0hMSx0aGlzLl9waXhlbERlbnNpdHk9TWF0aC5jZWlsKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvKXx8MSx0aGlzLl91c2VyTm9kZT10LHRoaXMuX2N1ckVsZW1lbnQ9bnVsbCx0aGlzLl9lbGVtZW50cz1bXSx0aGlzLl9nbEF0dHJpYnV0ZXM9bnVsbCx0aGlzLl9yZXF1ZXN0QW5pbUlkPTAsdGhpcy5fcHJlbG9hZENvdW50PTAsdGhpcy5faXNHbG9iYWw9ITEsdGhpcy5fbG9vcD0hMCx0aGlzLl9pbml0aWFsaXplSW5zdGFuY2VWYXJpYWJsZXMoKSx0aGlzLl9kZWZhdWx0Q2FudmFzU2l6ZT17d2lkdGg6MTAwLGhlaWdodDoxMDB9LHRoaXMuX2V2ZW50cz17bW91c2Vtb3ZlOm51bGwsbW91c2Vkb3duOm51bGwsbW91c2V1cDpudWxsLGRyYWdlbmQ6bnVsbCxkcmFnb3ZlcjpudWxsLGNsaWNrOm51bGwsZGJsY2xpY2s6bnVsbCxtb3VzZW92ZXI6bnVsbCxtb3VzZW91dDpudWxsLGtleWRvd246bnVsbCxrZXl1cDpudWxsLGtleXByZXNzOm51bGwsdG91Y2hzdGFydDpudWxsLHRvdWNobW92ZTpudWxsLHRvdWNoZW5kOm51bGwscmVzaXplOm51bGwsYmx1cjpudWxsfSx0aGlzLl9taWxsaXNTdGFydD0tMSx0aGlzLl9sY2dfcmFuZG9tX3N0YXRlPW51bGwsdGhpcy5fZ2F1c3NpYW5fcHJldmlvdXM9ITEsdGhpcy5fZXZlbnRzLndoZWVsPW51bGwsdGhpcy5fbG9hZGluZ1NjcmVlbklkPVwicDVfbG9hZGluZ1wiLHRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzPXt9O3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKF8ucHJvdG90eXBlLl9yZWdpc3RlcmVkTWV0aG9kcyksbz0hMCxpPSExLGE9dm9pZCAwO3RyeXtmb3IodmFyIHMsbD1uW1N5bWJvbC5pdGVyYXRvcl0oKTshKG89KHM9bC5uZXh0KCkpLmRvbmUpO289ITApe3ZhciB1PXMudmFsdWU7dGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHNbdV09Xy5wcm90b3R5cGUuX3JlZ2lzdGVyZWRNZXRob2RzW3VdLnNsaWNlKCl9fWNhdGNoKGUpe2k9ITAsYT1lfWZpbmFsbHl7dHJ5e298fG51bGw9PWwucmV0dXJufHxsLnJldHVybigpfWZpbmFsbHl7aWYoaSl0aHJvdyBhfX13aW5kb3cuRGV2aWNlT3JpZW50YXRpb25FdmVudCYmKHRoaXMuX2V2ZW50cy5kZXZpY2VvcmllbnRhdGlvbj1udWxsKSx3aW5kb3cuRGV2aWNlTW90aW9uRXZlbnQmJiF3aW5kb3cuX2lzTm9kZVdlYmtpdCYmKHRoaXMuX2V2ZW50cy5kZXZpY2Vtb3Rpb249bnVsbCksdGhpcy5fc3RhcnQ9ZnVuY3Rpb24oKXtmLl91c2VyTm9kZSYmXCJzdHJpbmdcIj09dHlwZW9mIGYuX3VzZXJOb2RlJiYoZi5fdXNlck5vZGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZi5fdXNlck5vZGUpKTt2YXIgZT1mLl9pc0dsb2JhbD93aW5kb3c6ZjtpZihlLnByZWxvYWQpe3ZhciB0PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGYuX2xvYWRpbmdTY3JlZW5JZCk7aWYoIXQpKHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSkuaW5uZXJIVE1MPVwiTG9hZGluZy4uLlwiLHQuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiLHQuaWQ9Zi5fbG9hZGluZ1NjcmVlbklkLChmLl91c2VyTm9kZXx8ZG9jdW1lbnQuYm9keSkuYXBwZW5kQ2hpbGQodCk7dmFyIHI9Zi5fcHJlbG9hZE1ldGhvZHM7Zm9yKHZhciBuIGluIHIpe3Jbbl09cltuXXx8Xzt2YXIgbz1yW25dO28hPT1fLnByb3RvdHlwZSYmbyE9PV98fChmLl9pc0dsb2JhbCYmKHdpbmRvd1tuXT1mLl93cmFwUHJlbG9hZChmLG4pKSxvPWYpLGYuX3JlZ2lzdGVyZWRQcmVsb2FkTWV0aG9kc1tuXT1vW25dLG9bbl09Zi5fd3JhcFByZWxvYWQobyxuKX1lLnByZWxvYWQoKSxmLl9ydW5JZlByZWxvYWRzQXJlRG9uZSgpfWVsc2UgZi5fc2V0dXAoKSxmLl9kcmF3KCl9LHRoaXMuX3J1bklmUHJlbG9hZHNBcmVEb25lPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7aWYoMD09PWUuX3ByZWxvYWRDb3VudCl7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZS5fbG9hZGluZ1NjcmVlbklkKTt0JiZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCksdGhpcy5fc2V0dXBEb25lfHwodGhpcy5fbGFzdEZyYW1lVGltZT13aW5kb3cucGVyZm9ybWFuY2Uubm93KCksZS5fc2V0dXAoKSxlLl9kcmF3KCkpfX0sdGhpcy5fZGVjcmVtZW50UHJlbG9hZD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO1wiZnVuY3Rpb25cIj09dHlwZW9mIGUucHJlbG9hZCYmKGUuX3NldFByb3BlcnR5KFwiX3ByZWxvYWRDb3VudFwiLGUuX3ByZWxvYWRDb3VudC0xKSxlLl9ydW5JZlByZWxvYWRzQXJlRG9uZSgpKX0sdGhpcy5fd3JhcFByZWxvYWQ9ZnVuY3Rpb24obixvKXt2YXIgaT10aGlzO3JldHVybiBmdW5jdGlvbigpe2kuX2luY3JlbWVudFByZWxvYWQoKTtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gaS5fcmVnaXN0ZXJlZFByZWxvYWRNZXRob2RzW29dLmFwcGx5KG4sdCl9fSx0aGlzLl9pbmNyZW1lbnRQcmVsb2FkPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7ZS5fc2V0UHJvcGVydHkoXCJfcHJlbG9hZENvdW50XCIsZS5fcHJlbG9hZENvdW50KzEpfSx0aGlzLl9zZXR1cD1mdW5jdGlvbigpe2YuY3JlYXRlQ2FudmFzKGYuX2RlZmF1bHRDYW52YXNTaXplLndpZHRoLGYuX2RlZmF1bHRDYW52YXNTaXplLmhlaWdodCxcInAyZFwiKTt2YXIgZT1mLl9pc0dsb2JhbD93aW5kb3c6ZjtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnByZWxvYWQpZm9yKHZhciB0IGluIGYuX3ByZWxvYWRNZXRob2RzKWVbdF09Zi5fcHJlbG9hZE1ldGhvZHNbdF1bdF0sZVt0XSYmZiYmKGVbdF09ZVt0XS5iaW5kKGYpKTtmLl9taWxsaXNTdGFydD13aW5kb3cucGVyZm9ybWFuY2Uubm93KCksXCJmdW5jdGlvblwiPT10eXBlb2YgZS5zZXR1cCYmZS5zZXR1cCgpO3ZhciByPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiY2FudmFzXCIpLG49ITAsbz0hMSxpPXZvaWQgMDt0cnl7Zm9yKHZhciBhLHM9cltTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShhPXMubmV4dCgpKS5kb25lKTtuPSEwKXt2YXIgbD1hLnZhbHVlO1widHJ1ZVwiPT09bC5kYXRhc2V0LmhpZGRlbiYmKGwuc3R5bGUudmlzaWJpbGl0eT1cIlwiLGRlbGV0ZSBsLmRhdGFzZXQuaGlkZGVuKX19Y2F0Y2goZSl7bz0hMCxpPWV9ZmluYWxseXt0cnl7bnx8bnVsbD09cy5yZXR1cm58fHMucmV0dXJuKCl9ZmluYWxseXtpZihvKXRocm93IGl9fWYuX2xhc3RGcmFtZVRpbWU9d2luZG93LnBlcmZvcm1hbmNlLm5vdygpLGYuX3NldHVwRG9uZT0hMCwoZi5fYWNjZXNzaWJsZU91dHB1dHMuZ3JpZHx8Zi5fYWNjZXNzaWJsZU91dHB1dHMudGV4dCkmJmYuX3VwZGF0ZUFjY3NPdXRwdXQoKX0sdGhpcy5fZHJhdz1mdW5jdGlvbigpe3ZhciBlPXdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSx0PWUtZi5fbGFzdEZyYW1lVGltZSxyPTFlMy9mLl90YXJnZXRGcmFtZVJhdGU7KCFmLl9sb29wfHxyLTU8PXQpJiYoZi5yZWRyYXcoKSxmLl9mcmFtZVJhdGU9MWUzLyhlLWYuX2xhc3RGcmFtZVRpbWUpLGYuZGVsdGFUaW1lPWUtZi5fbGFzdEZyYW1lVGltZSxmLl9zZXRQcm9wZXJ0eShcImRlbHRhVGltZVwiLGYuZGVsdGFUaW1lKSxmLl9sYXN0RnJhbWVUaW1lPWUsdm9pZCAwIT09Zi5fdXBkYXRlTW91c2VDb29yZHMmJihmLl91cGRhdGVNb3VzZUNvb3JkcygpLGYuX3NldFByb3BlcnR5KFwibW92ZWRYXCIsMCksZi5fc2V0UHJvcGVydHkoXCJtb3ZlZFlcIiwwKSkpLGYuX2xvb3AmJihmLl9yZXF1ZXN0QW5pbUlkPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZi5fZHJhdykpfSx0aGlzLl9zZXRQcm9wZXJ0eT1mdW5jdGlvbihlLHQpe2ZbZV09dCxmLl9pc0dsb2JhbCYmKHdpbmRvd1tlXT10KX0sdGhpcy5yZW1vdmU9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChmLl9sb2FkaW5nU2NyZWVuSWQpO2lmKGUmJihlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSksZi5faW5jcmVtZW50UHJlbG9hZCgpKSxmLl9jdXJFbGVtZW50KXtmb3IodmFyIHQgaW4gZi5fbG9vcD0hMSxmLl9yZXF1ZXN0QW5pbUlkJiZ3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUoZi5fcmVxdWVzdEFuaW1JZCksZi5fZXZlbnRzKXdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKHQsZi5fZXZlbnRzW3RdKTt2YXIgcj0hMCxuPSExLG89dm9pZCAwO3RyeXtmb3IodmFyIGksYT1mLl9lbGVtZW50c1tTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShpPWEubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1pLnZhbHVlO2Zvcih2YXIgbCBpbiBzLmVsdCYmcy5lbHQucGFyZW50Tm9kZSYmcy5lbHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzLmVsdCkscy5fZXZlbnRzKXMuZWx0LnJlbW92ZUV2ZW50TGlzdGVuZXIobCxzLl9ldmVudHNbbF0pfX1jYXRjaChlKXtuPSEwLG89ZX1maW5hbGx5e3RyeXtyfHxudWxsPT1hLnJldHVybnx8YS5yZXR1cm4oKX1maW5hbGx5e2lmKG4pdGhyb3cgb319dmFyIHU9ZjtmLl9yZWdpc3RlcmVkTWV0aG9kcy5yZW1vdmUuZm9yRWFjaChmdW5jdGlvbihlKXt2b2lkIDAhPT1lJiZlLmNhbGwodSl9KX1pZihmLl9pc0dsb2JhbCl7Zm9yKHZhciBjIGluIF8ucHJvdG90eXBlKXRyeXtkZWxldGUgd2luZG93W2NdfWNhdGNoKGUpe3dpbmRvd1tjXT12b2lkIDB9Zm9yKHZhciBkIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShkKSl0cnl7ZGVsZXRlIHdpbmRvd1tkXX1jYXRjaChlKXt3aW5kb3dbZF09dm9pZCAwfV8uaW5zdGFuY2U9bnVsbH19LHRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLmluaXQuZm9yRWFjaChmdW5jdGlvbihlKXt2b2lkIDAhPT1lJiZlLmNhbGwodGhpcyl9LHRoaXMpLHRoaXMuX3NldHVwUHJvbWlzZVByZWxvYWRzKCk7dmFyIGM9dGhpcy5fY3JlYXRlRnJpZW5kbHlHbG9iYWxGdW5jdGlvbkJpbmRlcigpO2lmKGUpZSh0aGlzKSxfLl9jaGVja0ZvclVzZXJEZWZpbmVkRnVuY3Rpb25zKHRoaXMpO2Vsc2V7Zm9yKHZhciBkIGluIHRoaXMuX2lzR2xvYmFsPSEwLF8uaW5zdGFuY2U9dGhpcyxfLnByb3RvdHlwZSlpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBfLnByb3RvdHlwZVtkXSl7dmFyIGg9ZC5zdWJzdHJpbmcoMik7dGhpcy5fZXZlbnRzLmhhc093blByb3BlcnR5KGgpfHwoTWF0aC5oYXNPd25Qcm9wZXJ0eShkKSYmTWF0aFtkXT09PV8ucHJvdG90eXBlW2RdP2MoZCxfLnByb3RvdHlwZVtkXSk6YyhkLF8ucHJvdG90eXBlW2RdLmJpbmQodGhpcykpKX1lbHNlIGMoZCxfLnByb3RvdHlwZVtkXSk7Zm9yKHZhciBwIGluIHRoaXMpdGhpcy5oYXNPd25Qcm9wZXJ0eShwKSYmYyhwLHRoaXNbcF0pfWZvcih2YXIgeSBpbiB0aGlzLl9ldmVudHMpe3ZhciBtPXRoaXNbXCJfb25cIi5jb25jYXQoeSldO2lmKG0pe3ZhciBnPW0uYmluZCh0aGlzKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcih5LGcse3Bhc3NpdmU6ITF9KSx0aGlzLl9ldmVudHNbeV09Z319ZnVuY3Rpb24gdigpe2YuX3NldFByb3BlcnR5KFwiZm9jdXNlZFwiLCEwKX1mdW5jdGlvbiBiKCl7Zi5fc2V0UHJvcGVydHkoXCJmb2N1c2VkXCIsITEpfXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIix2KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIixiKSx0aGlzLnJlZ2lzdGVyTWV0aG9kKFwicmVtb3ZlXCIsZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsdiksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJibHVyXCIsYil9KSxcImNvbXBsZXRlXCI9PT1kb2N1bWVudC5yZWFkeVN0YXRlP3RoaXMuX3N0YXJ0KCk6d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsdGhpcy5fc3RhcnQuYmluZCh0aGlzKSwhMSl9dmFyIGUsdCxyO3JldHVybiBlPV8sKHQ9W3trZXk6XCJfaW5pdGlhbGl6ZUluc3RhbmNlVmFyaWFibGVzXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cz17dGV4dDohMSxncmlkOiExLHRleHRMYWJlbDohMSxncmlkTGFiZWw6ITF9LHRoaXMuX3N0eWxlcz1bXSx0aGlzLl9iZXppZXJEZXRhaWw9MjAsdGhpcy5fY3VydmVEZXRhaWw9MjAsdGhpcy5fY29sb3JNb2RlPW4uUkdCLHRoaXMuX2NvbG9yTWF4ZXM9e3JnYjpbMjU1LDI1NSwyNTUsMjU1XSxoc2I6WzM2MCwxMDAsMTAwLDFdLGhzbDpbMzYwLDEwMCwxMDAsMV19LHRoaXMuX2Rvd25LZXlzPXt9fX0se2tleTpcInJlZ2lzdGVyUHJlbG9hZE1ldGhvZFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Xy5wcm90b3R5cGUuX3ByZWxvYWRNZXRob2RzLmhhc093blByb3BlcnR5KGUpfHwoXy5wcm90b3R5cGUuX3ByZWxvYWRNZXRob2RzW2VdPXQpfX0se2tleTpcInJlZ2lzdGVyTWV0aG9kXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzfHxfLnByb3RvdHlwZTtyLl9yZWdpc3RlcmVkTWV0aG9kcy5oYXNPd25Qcm9wZXJ0eShlKXx8KHIuX3JlZ2lzdGVyZWRNZXRob2RzW2VdPVtdKSxyLl9yZWdpc3RlcmVkTWV0aG9kc1tlXS5wdXNoKHQpfX0se2tleTpcIl9jcmVhdGVGcmllbmRseUdsb2JhbEZ1bmN0aW9uQmluZGVyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1lP2U6e30scj10Lmdsb2JhbE9iamVjdHx8d2luZG93O3QubG9nfHxjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO3JldHVybiBmdW5jdGlvbihlLHQpe3JbZV09dH19fV0pJiZvKGUucHJvdG90eXBlLHQpLHImJm8oZSxyKSxffSgpO2Zvcih2YXIgbCBpbiBpLmluc3RhbmNlPW51bGwsaS5kaXNhYmxlRnJpZW5kbHlFcnJvcnM9ITEsbilpLnByb3RvdHlwZVtsXT1uW2xdO2kuVkVSU0lPTj1uLlZFUlNJT04saS5wcm90b3R5cGUuX3ByZWxvYWRNZXRob2RzPXtsb2FkSlNPTjppLnByb3RvdHlwZSxsb2FkSW1hZ2U6aS5wcm90b3R5cGUsbG9hZFN0cmluZ3M6aS5wcm90b3R5cGUsbG9hZFhNTDppLnByb3RvdHlwZSxsb2FkQnl0ZXM6aS5wcm90b3R5cGUsbG9hZFRhYmxlOmkucHJvdG90eXBlLGxvYWRGb250OmkucHJvdG90eXBlLGxvYWRNb2RlbDppLnByb3RvdHlwZSxsb2FkU2hhZGVyOmkucHJvdG90eXBlfSxpLnByb3RvdHlwZS5fcmVnaXN0ZXJlZE1ldGhvZHM9e2luaXQ6W10scHJlOltdLHBvc3Q6W10scmVtb3ZlOltdfSxpLnByb3RvdHlwZS5fcmVnaXN0ZXJlZFByZWxvYWRNZXRob2RzPXt9O3ZhciB1PWk7ci5kZWZhdWx0PXV9LHtcIi4vY29uc3RhbnRzXCI6MjUzLFwiLi9zaGltXCI6Mjc1LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoXCI6MTU0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzXCI6MTc0LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2hcIjoyMjgsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiOjIyOX1dLDI2NTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LkVsZW1lbnQ9ZnVuY3Rpb24oZSx0KXt0aGlzLmVsdD1lLHRoaXMuX3BJbnN0PXRoaXMuX3BpeGVsc1N0YXRlPXQsdGhpcy5fZXZlbnRzPXt9LHRoaXMud2lkdGg9dGhpcy5lbHQub2Zmc2V0V2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5lbHQub2Zmc2V0SGVpZ2h0fSxvLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUucGFyZW50PWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP3RoaXMuZWx0LnBhcmVudE5vZGU6KFwic3RyaW5nXCI9PXR5cGVvZiBlPyhcIiNcIj09PWVbMF0mJihlPWUuc3Vic3RyaW5nKDEpKSxlPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUpKTplIGluc3RhbmNlb2Ygby5kZWZhdWx0LkVsZW1lbnQmJihlPWUuZWx0KSxlLmFwcGVuZENoaWxkKHRoaXMuZWx0KSx0aGlzKX0sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmlkPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP3RoaXMuZWx0LmlkOih0aGlzLmVsdC5pZD1lLHRoaXMud2lkdGg9dGhpcy5lbHQub2Zmc2V0V2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5lbHQub2Zmc2V0SGVpZ2h0LHRoaXMpfSxvLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuY2xhc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/dGhpcy5lbHQuY2xhc3NOYW1lOih0aGlzLmVsdC5jbGFzc05hbWU9ZSx0aGlzKX0sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlUHJlc3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gby5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwibW91c2Vkb3duXCIsZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcIm1vdXNlSXNQcmVzc2VkXCIsITApLHRoaXMuX3BJbnN0Ll9zZXRNb3VzZUJ1dHRvbihlKSx0LmNhbGwodGhpcyl9LHRoaXMpLHRoaXN9LG8uZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5kb3VibGVDbGlja2VkPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJkYmxjbGlja1wiLGUsdGhpcyksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlV2hlZWw9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcIndoZWVsXCIsZSx0aGlzKSx0aGlzfSxvLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUubW91c2VSZWxlYXNlZD1mdW5jdGlvbihlKXtyZXR1cm4gby5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwibW91c2V1cFwiLGUsdGhpcyksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlQ2xpY2tlZD1mdW5jdGlvbihlKXtyZXR1cm4gby5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwiY2xpY2tcIixlLHRoaXMpLHRoaXN9LG8uZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5tb3VzZU1vdmVkPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixlLHRoaXMpLHRoaXN9LG8uZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5tb3VzZU92ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLGUsdGhpcyksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlT3V0PWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJtb3VzZW91dFwiLGUsdGhpcyksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvdWNoU3RhcnRlZD1mdW5jdGlvbihlKXtyZXR1cm4gby5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwidG91Y2hzdGFydFwiLGUsdGhpcyksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvdWNoTW92ZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcInRvdWNobW92ZVwiLGUsdGhpcyksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvdWNoRW5kZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcInRvdWNoZW5kXCIsZSx0aGlzKSx0aGlzfSxvLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuZHJhZ092ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcImRyYWdvdmVyXCIsZSx0aGlzKSx0aGlzfSxvLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuZHJhZ0xlYXZlPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJkcmFnbGVhdmVcIixlLHRoaXMpLHRoaXN9LG8uZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcj1mdW5jdGlvbihlLHQscil7cmV0dXJuITE9PT10P28uZGVmYXVsdC5FbGVtZW50Ll9kZXRhY2hMaXN0ZW5lcihlLHIpOm8uZGVmYXVsdC5FbGVtZW50Ll9hdHRhY2hMaXN0ZW5lcihlLHQsciksdGhpc30sby5kZWZhdWx0LkVsZW1lbnQuX2F0dGFjaExpc3RlbmVyPWZ1bmN0aW9uKGUsdCxyKXtyLl9ldmVudHNbZV0mJm8uZGVmYXVsdC5FbGVtZW50Ll9kZXRhY2hMaXN0ZW5lcihlLHIpO3ZhciBuPXQuYmluZChyKTtyLmVsdC5hZGRFdmVudExpc3RlbmVyKGUsbiwhMSksci5fZXZlbnRzW2VdPW59LG8uZGVmYXVsdC5FbGVtZW50Ll9kZXRhY2hMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe3ZhciByPXQuX2V2ZW50c1tlXTt0LmVsdC5yZW1vdmVFdmVudExpc3RlbmVyKGUsciwhMSksdC5fZXZlbnRzW2VdPW51bGx9LG8uZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5fc2V0UHJvcGVydHk9ZnVuY3Rpb24oZSx0KXt0aGlzW2VdPXR9O3ZhciBpPW8uZGVmYXVsdC5FbGVtZW50O3IuZGVmYXVsdD1pfSx7XCIuL21haW5cIjoyNjR9XSwyNjY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4scz0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sbD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXUoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4vY29uc3RhbnRzXCIpKTtmdW5jdGlvbiB1KCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gdT1mdW5jdGlvbigpe3JldHVybiBlfSxlfXMuZGVmYXVsdC5HcmFwaGljcz1mdW5jdGlvbihlLHQscixuKXt2YXIgbz1yfHxsLlAyRDt0aGlzLmNhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3ZhciBpPW4uX3VzZXJOb2RlfHxkb2N1bWVudC5ib2R5O2Zvcih2YXIgYSBpbiBpLmFwcGVuZENoaWxkKHRoaXMuY2FudmFzKSxzLmRlZmF1bHQuRWxlbWVudC5jYWxsKHRoaXMsdGhpcy5jYW52YXMsbikscy5kZWZhdWx0LnByb3RvdHlwZSl0aGlzW2FdfHwoXCJmdW5jdGlvblwiPT10eXBlb2Ygcy5kZWZhdWx0LnByb3RvdHlwZVthXT90aGlzW2FdPXMuZGVmYXVsdC5wcm90b3R5cGVbYV0uYmluZCh0aGlzKTp0aGlzW2FdPXMuZGVmYXVsdC5wcm90b3R5cGVbYV0pO3JldHVybiBzLmRlZmF1bHQucHJvdG90eXBlLl9pbml0aWFsaXplSW5zdGFuY2VWYXJpYWJsZXMuYXBwbHkodGhpcyksdGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQsdGhpcy5fcGl4ZWxEZW5zaXR5PW4uX3BpeGVsRGVuc2l0eSxvPT09bC5XRUJHTD90aGlzLl9yZW5kZXJlcj1uZXcgcy5kZWZhdWx0LlJlbmRlcmVyR0wodGhpcy5jYW52YXMsdGhpcywhMSk6dGhpcy5fcmVuZGVyZXI9bmV3IHMuZGVmYXVsdC5SZW5kZXJlcjJEKHRoaXMuY2FudmFzLHRoaXMsITEpLG4uX2VsZW1lbnRzLnB1c2godGhpcyksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJkZWx0YVRpbWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BJbnN0LmRlbHRhVGltZX19KSx0aGlzLl9yZW5kZXJlci5yZXNpemUoZSx0KSx0aGlzLl9yZW5kZXJlci5fYXBwbHlEZWZhdWx0cygpLHRoaXN9LHMuZGVmYXVsdC5HcmFwaGljcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUpLHMuZGVmYXVsdC5HcmFwaGljcy5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLl9yZW5kZXJlci5yZXNldE1hdHJpeCgpLHRoaXMuX3JlbmRlcmVyLmlzUDNEJiZ0aGlzLl9yZW5kZXJlci5fdXBkYXRlKCl9LHMuZGVmYXVsdC5HcmFwaGljcy5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKCl7dGhpcy5lbHQucGFyZW50Tm9kZSYmdGhpcy5lbHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsdCk7dmFyIGU9dGhpcy5fcEluc3QuX2VsZW1lbnRzLmluZGV4T2YodGhpcyk7Zm9yKHZhciB0IGluLTEhPT1lJiZ0aGlzLl9wSW5zdC5fZWxlbWVudHMuc3BsaWNlKGUsMSksdGhpcy5fZXZlbnRzKXRoaXMuZWx0LnJlbW92ZUV2ZW50TGlzdGVuZXIodCx0aGlzLl9ldmVudHNbdF0pfTt2YXIgbz1zLmRlZmF1bHQuR3JhcGhpY3M7ci5kZWZhdWx0PW99LHtcIi4vY29uc3RhbnRzXCI6MjUzLFwiLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCI6MTU3LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZVwiOjE2NH1dLDI2NzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbD0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0saz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1zKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PWEoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBhKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gYT1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIHMoZSl7cmV0dXJuKHM9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWZ1bmN0aW9uIHUoZSl7dmFyIHQ9MCxyPTA7aWYoZS5vZmZzZXRQYXJlbnQpZm9yKDt0Kz1lLm9mZnNldExlZnQscis9ZS5vZmZzZXRUb3AsZT1lLm9mZnNldFBhcmVudDspO2Vsc2UgdCs9ZS5vZmZzZXRMZWZ0LHIrPWUub2Zmc2V0VG9wO3JldHVyblt0LHJdfWwuZGVmYXVsdC5SZW5kZXJlcj1mdW5jdGlvbihlLHQscil7bC5kZWZhdWx0LkVsZW1lbnQuY2FsbCh0aGlzLGUsdCksdGhpcy5jYW52YXM9ZSx0aGlzLl9waXhlbHNTdGF0ZT10LHI/KHRoaXMuX2lzTWFpbkNhbnZhcz0hMCx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJfY3VyRWxlbWVudFwiLHRoaXMpLHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcImNhbnZhc1wiLHRoaXMuY2FudmFzKSx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJ3aWR0aFwiLHRoaXMud2lkdGgpLHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcImhlaWdodFwiLHRoaXMuaGVpZ2h0KSk6KHRoaXMuY2FudmFzLnN0eWxlLmRpc3BsYXk9XCJub25lXCIsdGhpcy5fc3R5bGVzPVtdKSx0aGlzLl90ZXh0U2l6ZT0xMix0aGlzLl90ZXh0TGVhZGluZz0xNSx0aGlzLl90ZXh0Rm9udD1cInNhbnMtc2VyaWZcIix0aGlzLl90ZXh0U3R5bGU9ay5OT1JNQUwsdGhpcy5fdGV4dEFzY2VudD1udWxsLHRoaXMuX3RleHREZXNjZW50PW51bGwsdGhpcy5fdGV4dEFsaWduPWsuTEVGVCx0aGlzLl90ZXh0QmFzZWxpbmU9ay5CQVNFTElORSx0aGlzLl90ZXh0V3JhcD1rLldPUkQsdGhpcy5fcmVjdE1vZGU9ay5DT1JORVIsdGhpcy5fZWxsaXBzZU1vZGU9ay5DRU5URVIsdGhpcy5fY3VydmVUaWdodG5lc3M9MCx0aGlzLl9pbWFnZU1vZGU9ay5DT1JORVIsdGhpcy5fdGludD1udWxsLHRoaXMuX2RvU3Ryb2tlPSEwLHRoaXMuX2RvRmlsbD0hMCx0aGlzLl9zdHJva2VTZXQ9ITEsdGhpcy5fZmlsbFNldD0hMSx0aGlzLl9sZWFkaW5nU2V0PSExfSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUobC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlKSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oKXtyZXR1cm57cHJvcGVydGllczp7X2RvU3Ryb2tlOnRoaXMuX2RvU3Ryb2tlLF9zdHJva2VTZXQ6dGhpcy5fc3Ryb2tlU2V0LF9kb0ZpbGw6dGhpcy5fZG9GaWxsLF9maWxsU2V0OnRoaXMuX2ZpbGxTZXQsX3RpbnQ6dGhpcy5fdGludCxfaW1hZ2VNb2RlOnRoaXMuX2ltYWdlTW9kZSxfcmVjdE1vZGU6dGhpcy5fcmVjdE1vZGUsX2VsbGlwc2VNb2RlOnRoaXMuX2VsbGlwc2VNb2RlLF90ZXh0Rm9udDp0aGlzLl90ZXh0Rm9udCxfdGV4dExlYWRpbmc6dGhpcy5fdGV4dExlYWRpbmcsX2xlYWRpbmdTZXQ6dGhpcy5fbGVhZGluZ1NldCxfdGV4dFNpemU6dGhpcy5fdGV4dFNpemUsX3RleHRBbGlnbjp0aGlzLl90ZXh0QWxpZ24sX3RleHRCYXNlbGluZTp0aGlzLl90ZXh0QmFzZWxpbmUsX3RleHRTdHlsZTp0aGlzLl90ZXh0U3R5bGUsX3RleHRXcmFwOnRoaXMuX3RleHRXcmFwfX19LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUucG9wPWZ1bmN0aW9uKGUpe2UucHJvcGVydGllcyYmT2JqZWN0LmFzc2lnbih0aGlzLGUucHJvcGVydGllcyl9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKGUsdCl7dGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQsdGhpcy5lbHQud2lkdGg9ZSp0aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5LHRoaXMuZWx0LmhlaWdodD10KnRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHksdGhpcy5lbHQuc3R5bGUud2lkdGg9XCJcIi5jb25jYXQoZSxcInB4XCIpLHRoaXMuZWx0LnN0eWxlLmhlaWdodD1cIlwiLmNvbmNhdCh0LFwicHhcIiksdGhpcy5faXNNYWluQ2FudmFzJiYodGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwid2lkdGhcIix0aGlzLndpZHRoKSx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJoZWlnaHRcIix0aGlzLmhlaWdodCkpfSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLmdldD1mdW5jdGlvbihlLHQscixuKXt2YXIgbz10aGlzLl9waXhlbHNTdGF0ZSxpPW8uX3BpeGVsRGVuc2l0eSxhPXRoaXMuY2FudmFzO2lmKHZvaWQgMD09PWUmJnZvaWQgMD09PXQpZT10PTAscj1vLndpZHRoLG49by5oZWlnaHQ7ZWxzZSBpZihlKj1pLHQqPWksdm9pZCAwPT09ciYmdm9pZCAwPT09bilyZXR1cm4gZTwwfHx0PDB8fGU+PWEud2lkdGh8fHQ+PWEuaGVpZ2h0P1swLDAsMCwwXTp0aGlzLl9nZXRQaXhlbChlLHQpO3ZhciBzPW5ldyBsLmRlZmF1bHQuSW1hZ2UocixuKTtyZXR1cm4gcy5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpLmRyYXdJbWFnZShhLGUsdCxyKmksbippLDAsMCxyLG4pLHN9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUudGV4dExlYWRpbmc9ZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGU/KHRoaXMuX3NldFByb3BlcnR5KFwiX2xlYWRpbmdTZXRcIiwhMCksdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dExlYWRpbmdcIixlKSx0aGlzLl9wSW5zdCk6dGhpcy5fdGV4dExlYWRpbmd9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUudGV4dFNpemU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGU/KHRoaXMuX3NldFByb3BlcnR5KFwiX3RleHRTaXplXCIsZSksdGhpcy5fbGVhZGluZ1NldHx8dGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dExlYWRpbmdcIixlKmsuX0RFRkFVTFRfTEVBRE1VTFQpLHRoaXMuX2FwcGx5VGV4dFByb3BlcnRpZXMoKSk6dGhpcy5fdGV4dFNpemV9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUudGV4dFN0eWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPyhlIT09ay5OT1JNQUwmJmUhPT1rLklUQUxJQyYmZSE9PWsuQk9MRCYmZSE9PWsuQk9MRElUQUxJQ3x8dGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dFN0eWxlXCIsZSksdGhpcy5fYXBwbHlUZXh0UHJvcGVydGllcygpKTp0aGlzLl90ZXh0U3R5bGV9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUudGV4dEFzY2VudD1mdW5jdGlvbigpe3JldHVybiBudWxsPT09dGhpcy5fdGV4dEFzY2VudCYmdGhpcy5fdXBkYXRlVGV4dE1ldHJpY3MoKSx0aGlzLl90ZXh0QXNjZW50fSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnRleHREZXNjZW50PWZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PT10aGlzLl90ZXh0RGVzY2VudCYmdGhpcy5fdXBkYXRlVGV4dE1ldHJpY3MoKSx0aGlzLl90ZXh0RGVzY2VudH0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS50ZXh0QWxpZ249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwIT09ZT8odGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dEFsaWduXCIsZSksdm9pZCAwIT09dCYmdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dEJhc2VsaW5lXCIsdCksdGhpcy5fYXBwbHlUZXh0UHJvcGVydGllcygpKTp7aG9yaXpvbnRhbDp0aGlzLl90ZXh0QWxpZ24sdmVydGljYWw6dGhpcy5fdGV4dEJhc2VsaW5lfX0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS50ZXh0V3JhcD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dFdyYXBcIixlKSx0aGlzLl90ZXh0V3JhcH0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS50ZXh0PWZ1bmN0aW9uKGUsdCxyLG4sbyl7dmFyIGksYSxzLGwsdSxjLGQsZj10aGlzLl9wSW5zdCxoPXRoaXMuX3RleHRXcmFwLHA9TnVtYmVyLk1BWF9WQUxVRTtpZigodGhpcy5fZG9GaWxsfHx0aGlzLl9kb1N0cm9rZSkmJnZvaWQgMCE9PWUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlJiYoZT1lLnRvU3RyaW5nKCkpLGk9KGU9ZS5yZXBsYWNlKC8oXFx0KS9nLFwiICBcIikpLnNwbGl0KFwiXFxuXCIpLHZvaWQgMCE9PW4pe3N3aXRjaCh0aGlzLl9yZWN0TW9kZT09PWsuQ0VOVEVSJiYodC09bi8yKSx0aGlzLl90ZXh0QWxpZ24pe2Nhc2Ugay5DRU5URVI6dCs9bi8yO2JyZWFrO2Nhc2Ugay5SSUdIVDp0Kz1ufXZhciB5PSExO2lmKHZvaWQgMCE9PW8pe3N3aXRjaCh0aGlzLl9yZWN0TW9kZT09PWsuQ0VOVEVSJiYoci09by8yKSx0aGlzLl90ZXh0QmFzZWxpbmUpe2Nhc2Ugay5CT1RUT006ZD1yK28scj1NYXRoLm1heChkLHIpO2JyZWFrO2Nhc2Ugay5DRU5URVI6ZD1yK28vMixyPU1hdGgubWF4KGQscik7YnJlYWs7Y2FzZSBrLkJBU0VMSU5FOnk9ITAsdGhpcy5fdGV4dEJhc2VsaW5lPWsuVE9QfXA9citvLWYudGV4dEFzY2VudCgpfWlmKGg9PT1rLldPUkQpe2Zvcih2YXIgbT1bXSxnPTA7ZzxpLmxlbmd0aDtnKyspe2E9XCJcIix1PWlbZ10uc3BsaXQoXCIgXCIpO2Zvcih2YXIgdj0wO3Y8dS5sZW5ndGg7disrKXM9XCJcIi5jb25jYXQoYSt1W3ZdKStcIiBcIixhPW48KGw9dGhpcy50ZXh0V2lkdGgocykpJiYwPGEubGVuZ3RoPyhtLnB1c2goYSksXCJcIi5jb25jYXQodVt2XSkrXCIgXCIpOnM7bS5wdXNoKGEpfXZhciBiPTAsXz1mLnRleHRBbGlnbigpLnZlcnRpY2FsO189PT1rLkNFTlRFUj9iPShtLmxlbmd0aC0xKSpmLnRleHRMZWFkaW5nKCkvMjpfPT09ay5CT1RUT00mJihiPShtLmxlbmd0aC0xKSpmLnRleHRMZWFkaW5nKCkpO2Zvcih2YXIgeD0wO3g8aS5sZW5ndGg7eCsrKXthPVwiXCIsdT1pW3hdLnNwbGl0KFwiIFwiKTtmb3IodmFyIHc9MDt3PHUubGVuZ3RoO3crKylzPVwiXCIuY29uY2F0KGErdVt3XSkrXCIgXCIsbjwobD10aGlzLnRleHRXaWR0aChzKSkmJjA8YS5sZW5ndGg/KHRoaXMuX3JlbmRlclRleHQoZixhLnRyaW0oKSx0LHItYixwKSxhPVwiXCIuY29uY2F0KHVbd10pK1wiIFwiLHIrPWYudGV4dExlYWRpbmcoKSk6YT1zO3RoaXMuX3JlbmRlclRleHQoZixhLnRyaW0oKSx0LHItYixwKSxyKz1mLnRleHRMZWFkaW5nKCkseSYmKHRoaXMuX3RleHRCYXNlbGluZT1rLkJBU0VMSU5FKX19ZWxzZXtmb3IodmFyIGo9W10sUz0wO1M8aS5sZW5ndGg7UysrKXthPVwiXCIsYz1pW1NdLnNwbGl0KFwiXCIpO2Zvcih2YXIgTT0wO008Yy5sZW5ndGg7TSsrKXM9XCJcIi5jb25jYXQoYStjW01dKSwobD10aGlzLnRleHRXaWR0aChzKSk8PW4/YSs9Y1tNXTpuPGwmJjA8YS5sZW5ndGgmJihqLnB1c2goYSksYT1cIlwiLmNvbmNhdChjW01dKSl9ai5wdXNoKGEpO3ZhciBFPTAsVD1mLnRleHRBbGlnbigpLnZlcnRpY2FsO1Q9PT1rLkNFTlRFUj9FPShqLmxlbmd0aC0xKSpmLnRleHRMZWFkaW5nKCkvMjpUPT09ay5CT1RUT00mJihFPShqLmxlbmd0aC0xKSpmLnRleHRMZWFkaW5nKCkpO2Zvcih2YXIgTz0wO088aS5sZW5ndGg7TysrKXthPVwiXCIsYz1pW09dLnNwbGl0KFwiXCIpO2Zvcih2YXIgQz0wO0M8Yy5sZW5ndGg7QysrKXM9XCJcIi5jb25jYXQoYStjW0NdKSwobD10aGlzLnRleHRXaWR0aChzKSk8PW4/YSs9Y1tDXTpuPGwmJjA8YS5sZW5ndGgmJih0aGlzLl9yZW5kZXJUZXh0KGYsYS50cmltKCksdCxyLUUscCkscis9Zi50ZXh0TGVhZGluZygpLGE9XCJcIi5jb25jYXQoY1tDXSkpfXRoaXMuX3JlbmRlclRleHQoZixhLnRyaW0oKSx0LHItRSxwKSxyKz1mLnRleHRMZWFkaW5nKCkseSYmKHRoaXMuX3RleHRCYXNlbGluZT1rLkJBU0VMSU5FKX19ZWxzZXt2YXIgTD0wLFA9Zi50ZXh0QWxpZ24oKS52ZXJ0aWNhbDtQPT09ay5DRU5URVI/TD0oaS5sZW5ndGgtMSkqZi50ZXh0TGVhZGluZygpLzI6UD09PWsuQk9UVE9NJiYoTD0oaS5sZW5ndGgtMSkqZi50ZXh0TGVhZGluZygpKTtmb3IodmFyIEE9MDtBPGkubGVuZ3RoO0ErKyl0aGlzLl9yZW5kZXJUZXh0KGYsaVtBXSx0LHItTCxwKSxyKz1mLnRleHRMZWFkaW5nKCl9cmV0dXJuIGZ9fSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLl9hcHBseURlZmF1bHRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUuX2lzT3BlblR5cGU9ZnVuY3Rpb24oKXt2YXIgZT0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06dGhpcy5fdGV4dEZvbnQ7cmV0dXJuXCJvYmplY3RcIj09PXMoZSkmJmUuZm9udCYmZS5mb250LnN1cHBvcnRlZH0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5fdXBkYXRlVGV4dE1ldHJpY3M9ZnVuY3Rpb24oKXtpZih0aGlzLl9pc09wZW5UeXBlKCkpcmV0dXJuIHRoaXMuX3NldFByb3BlcnR5KFwiX3RleHRBc2NlbnRcIix0aGlzLl90ZXh0Rm9udC5fdGV4dEFzY2VudCgpKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0RGVzY2VudFwiLHRoaXMuX3RleHRGb250Ll90ZXh0RGVzY2VudCgpKSx0aGlzO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO2Uuc3R5bGUuZm9udEZhbWlseT10aGlzLl90ZXh0Rm9udCxlLnN0eWxlLmZvbnRTaXplPVwiXCIuY29uY2F0KHRoaXMuX3RleHRTaXplLFwicHhcIiksZS5pbm5lckhUTUw9XCJBQkNqZ3F8XCI7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt0LnN0eWxlLmRpc3BsYXk9XCJpbmxpbmUtYmxvY2tcIix0LnN0eWxlLndpZHRoPVwiMXB4XCIsdC5zdHlsZS5oZWlnaHQ9XCIwcHhcIjt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3IuYXBwZW5kQ2hpbGQoZSksci5hcHBlbmRDaGlsZCh0KSxyLnN0eWxlLmhlaWdodD1cIjBweFwiLHIuc3R5bGUub3ZlcmZsb3c9XCJoaWRkZW5cIixkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHIpLHQuc3R5bGUudmVydGljYWxBbGlnbj1cImJhc2VsaW5lXCI7dmFyIG49dSh0KSxvPXUoZSksaT1uWzFdLW9bMV07dC5zdHlsZS52ZXJ0aWNhbEFsaWduPVwiYm90dG9tXCIsbj11KHQpLG89dShlKTt2YXIgYT1uWzFdLW9bMV0taTtyZXR1cm4gZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChyKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0QXNjZW50XCIsaSksdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dERlc2NlbnRcIixhKSx0aGlzfTt2YXIgbz1sLmRlZmF1bHQuUmVuZGVyZXI7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvclwiOjE3MCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduXCI6MTczLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2VcIjoxODksXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltXCI6MTkzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XSwyNjg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGxcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIGQ9bihlKFwiLi9tYWluXCIpKSxwPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi9jb25zdGFudHNcIikpLGY9bihlKFwiLi4vaW1hZ2UvZmlsdGVyc1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1lKFwiLi9wNS5SZW5kZXJlclwiKTt2YXIgbT1cInJnYmEoMCwwLDAsMClcIjtkLmRlZmF1bHQuUmVuZGVyZXIyRD1mdW5jdGlvbihlLHQscil7cmV0dXJuIGQuZGVmYXVsdC5SZW5kZXJlci5jYWxsKHRoaXMsZSx0LHIpLHRoaXMuZHJhd2luZ0NvbnRleHQ9dGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpLHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcImRyYXdpbmdDb250ZXh0XCIsdGhpcy5kcmF3aW5nQ29udGV4dCksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZSksZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9hcHBseURlZmF1bHRzPWZ1bmN0aW9uKCl7dGhpcy5fY2FjaGVkRmlsbFN0eWxlPXRoaXMuX2NhY2hlZFN0cm9rZVN0eWxlPXZvaWQgMCx0aGlzLl9jYWNoZWRCbGVuZE1vZGU9cC5CTEVORCx0aGlzLl9zZXRGaWxsKHAuX0RFRkFVTFRfRklMTCksdGhpcy5fc2V0U3Ryb2tlKHAuX0RFRkFVTFRfU1RST0tFKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVDYXA9cC5ST1VORCx0aGlzLmRyYXdpbmdDb250ZXh0LmZvbnQ9XCJub3JtYWwgMTJweCBzYW5zLXNlcmlmXCJ9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oZSx0KXtkLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnJlc2l6ZS5jYWxsKHRoaXMsZSx0KSx0aGlzLmRyYXdpbmdDb250ZXh0LnNjYWxlKHRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHksdGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eSl9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5iYWNrZ3JvdW5kPWZ1bmN0aW9uKCl7aWYodGhpcy5kcmF3aW5nQ29udGV4dC5zYXZlKCksdGhpcy5yZXNldE1hdHJpeCgpLChhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0paW5zdGFuY2VvZiBkLmRlZmF1bHQuSW1hZ2UpdGhpcy5fcEluc3QuaW1hZ2UoYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KTtlbHNle3ZhciBlLHQ9dGhpcy5fZ2V0RmlsbCgpLHI9KGU9dGhpcy5fcEluc3QpLmNvbG9yLmFwcGx5KGUsYXJndW1lbnRzKTt0aGlzLl9wSW5zdC5fYWRkQWNjc091dHB1dCgpJiZ0aGlzLl9wSW5zdC5fYWNjc0JhY2tncm91bmQoci5sZXZlbHMpO3ZhciBuPXIudG9TdHJpbmcoKTt0aGlzLl9zZXRGaWxsKG4pLHRoaXMuX2lzRXJhc2luZyYmdGhpcy5ibGVuZE1vZGUodGhpcy5fY2FjaGVkQmxlbmRNb2RlKSx0aGlzLmRyYXdpbmdDb250ZXh0LmZpbGxSZWN0KDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSx0aGlzLl9zZXRGaWxsKHQpLHRoaXMuX2lzRXJhc2luZyYmdGhpcy5fcEluc3QuZXJhc2UoKX10aGlzLmRyYXdpbmdDb250ZXh0LnJlc3RvcmUoKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5kcmF3aW5nQ29udGV4dC5zYXZlKCksdGhpcy5yZXNldE1hdHJpeCgpLHRoaXMuZHJhd2luZ0NvbnRleHQuY2xlYXJSZWN0KDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSx0aGlzLmRyYXdpbmdDb250ZXh0LnJlc3RvcmUoKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24oKXt2YXIgZSx0PShlPXRoaXMuX3BJbnN0KS5jb2xvci5hcHBseShlLGFyZ3VtZW50cyk7dGhpcy5fc2V0RmlsbCh0LnRvU3RyaW5nKCkpLHRoaXMuX3BJbnN0Ll9hZGRBY2NzT3V0cHV0KCkmJnRoaXMuX3BJbnN0Ll9hY2NzQ2FudmFzQ29sb3JzKFwiZmlsbFwiLHQubGV2ZWxzKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnN0cm9rZT1mdW5jdGlvbigpe3ZhciBlLHQ9KGU9dGhpcy5fcEluc3QpLmNvbG9yLmFwcGx5KGUsYXJndW1lbnRzKTt0aGlzLl9zZXRTdHJva2UodC50b1N0cmluZygpKSx0aGlzLl9wSW5zdC5fYWRkQWNjc091dHB1dCgpJiZ0aGlzLl9wSW5zdC5fYWNjc0NhbnZhc0NvbG9ycyhcInN0cm9rZVwiLHQubGV2ZWxzKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmVyYXNlPWZ1bmN0aW9uKGUsdCl7aWYoIXRoaXMuX2lzRXJhc2luZyl7dGhpcy5fY2FjaGVkRmlsbFN0eWxlPXRoaXMuZHJhd2luZ0NvbnRleHQuZmlsbFN0eWxlO3ZhciByPXRoaXMuX3BJbnN0LmNvbG9yKDI1NSxlKS50b1N0cmluZygpO3RoaXMuZHJhd2luZ0NvbnRleHQuZmlsbFN0eWxlPXIsdGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGU9dGhpcy5kcmF3aW5nQ29udGV4dC5zdHJva2VTdHlsZTt2YXIgbj10aGlzLl9wSW5zdC5jb2xvcigyNTUsdCkudG9TdHJpbmcoKTt0aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZVN0eWxlPW47dmFyIG89dGhpcy5fY2FjaGVkQmxlbmRNb2RlO3RoaXMuYmxlbmRNb2RlKHAuUkVNT1ZFKSx0aGlzLl9jYWNoZWRCbGVuZE1vZGU9byx0aGlzLl9pc0VyYXNpbmc9ITB9fSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUubm9FcmFzZT1mdW5jdGlvbigpe3RoaXMuX2lzRXJhc2luZyYmKHRoaXMuZHJhd2luZ0NvbnRleHQuZmlsbFN0eWxlPXRoaXMuX2NhY2hlZEZpbGxTdHlsZSx0aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZVN0eWxlPXRoaXMuX2NhY2hlZFN0cm9rZVN0eWxlLHRoaXMuYmxlbmRNb2RlKHRoaXMuX2NhY2hlZEJsZW5kTW9kZSksdGhpcy5faXNFcmFzaW5nPSExKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmltYWdlPWZ1bmN0aW9uKGUsdCxyLG4sbyxpLGEscyxsKXt2YXIgdTtlLmdpZlByb3BlcnRpZXMmJmUuX2FuaW1hdGVHaWYodGhpcy5fcEluc3QpO3RyeXt0aGlzLl90aW50JiYoZC5kZWZhdWx0Lk1lZGlhRWxlbWVudCYmZSBpbnN0YW5jZW9mIGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQmJmUubG9hZFBpeGVscygpLGUuY2FudmFzJiYodT10aGlzLl9nZXRUaW50ZWRJbWFnZUNhbnZhcyhlKSkpLHU9dXx8KGUuY2FudmFzfHxlLmVsdCk7dmFyIGM9MTtlLndpZHRoJiYwPGUud2lkdGgmJihjPXUud2lkdGgvZS53aWR0aCksdGhpcy5faXNFcmFzaW5nJiZ0aGlzLmJsZW5kTW9kZSh0aGlzLl9jYWNoZWRCbGVuZE1vZGUpLHRoaXMuZHJhd2luZ0NvbnRleHQuZHJhd0ltYWdlKHUsYyp0LGMqcixjKm4sYypvLGksYSxzLGwpLHRoaXMuX2lzRXJhc2luZyYmdGhpcy5fcEluc3QuZXJhc2UoKX1jYXRjaChlKXtpZihcIk5TX0VSUk9SX05PVF9BVkFJTEFCTEVcIiE9PWUubmFtZSl0aHJvdyBlfX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9nZXRUaW50ZWRJbWFnZUNhbnZhcz1mdW5jdGlvbihlKXtpZighZS5jYW52YXMpcmV0dXJuIGU7dmFyIHQ9Zi5kZWZhdWx0Ll90b1BpeGVscyhlLmNhbnZhcykscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3Iud2lkdGg9ZS5jYW52YXMud2lkdGgsci5oZWlnaHQ9ZS5jYW52YXMuaGVpZ2h0O2Zvcih2YXIgbj1yLmdldENvbnRleHQoXCIyZFwiKSxvPW4uY3JlYXRlSW1hZ2VEYXRhKGUuY2FudmFzLndpZHRoLGUuY2FudmFzLmhlaWdodCksaT1vLmRhdGEsYT0wO2E8dC5sZW5ndGg7YSs9NCl7dmFyIHM9dFthXSxsPXRbYSsxXSx1PXRbYSsyXSxjPXRbYSszXTtpW2FdPXMqdGhpcy5fdGludFswXS8yNTUsaVthKzFdPWwqdGhpcy5fdGludFsxXS8yNTUsaVthKzJdPXUqdGhpcy5fdGludFsyXS8yNTUsaVthKzNdPWMqdGhpcy5fdGludFszXS8yNTV9cmV0dXJuIG4ucHV0SW1hZ2VEYXRhKG8sMCwwKSxyfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYmxlbmRNb2RlPWZ1bmN0aW9uKGUpe2lmKGU9PT1wLlNVQlRSQUNUKWNvbnNvbGUud2FybihcImJsZW5kTW9kZShTVUJUUkFDVCkgb25seSB3b3JrcyBpbiBXRUJHTCBtb2RlLlwiKTtlbHNle2lmKGUhPT1wLkJMRU5EJiZlIT09cC5SRU1PVkUmJmUhPT1wLkRBUktFU1QmJmUhPT1wLkxJR0hURVNUJiZlIT09cC5ESUZGRVJFTkNFJiZlIT09cC5NVUxUSVBMWSYmZSE9PXAuRVhDTFVTSU9OJiZlIT09cC5TQ1JFRU4mJmUhPT1wLlJFUExBQ0UmJmUhPT1wLk9WRVJMQVkmJmUhPT1wLkhBUkRfTElHSFQmJmUhPT1wLlNPRlRfTElHSFQmJmUhPT1wLkRPREdFJiZlIT09cC5CVVJOJiZlIT09cC5BREQpdGhyb3cgbmV3IEVycm9yKFwiTW9kZSBcIi5jb25jYXQoZSxcIiBub3QgcmVjb2duaXplZC5cIikpO3RoaXMuX2NhY2hlZEJsZW5kTW9kZT1lLHRoaXMuZHJhd2luZ0NvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPWV9fSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYmxlbmQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5kcmF3aW5nQ29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24sdD1hcmd1bWVudHMubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09YXJndW1lbnRzW25dO3ZhciBvPXJbci5sZW5ndGgtMV0saT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChyLDAsci5sZW5ndGgtMSk7dGhpcy5kcmF3aW5nQ29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249byxkLmRlZmF1bHQucHJvdG90eXBlLmNvcHkuYXBwbHkodGhpcyxpKSx0aGlzLmRyYXdpbmdDb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj1lfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuX2dldFBpeGVsPWZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuWyhyPXRoaXMuZHJhd2luZ0NvbnRleHQuZ2V0SW1hZ2VEYXRhKGUsdCwxLDEpLmRhdGEpWzBdLHJbMV0sclsyXSxyWzNdXX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmxvYWRQaXhlbHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9waXhlbHNTdGF0ZSx0PWUuX3BpeGVsRGVuc2l0eSxyPXRoaXMud2lkdGgqdCxuPXRoaXMuaGVpZ2h0KnQsbz10aGlzLmRyYXdpbmdDb250ZXh0LmdldEltYWdlRGF0YSgwLDAscixuKTtlLl9zZXRQcm9wZXJ0eShcImltYWdlRGF0YVwiLG8pLGUuX3NldFByb3BlcnR5KFwicGl4ZWxzXCIsby5kYXRhKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQscil7ZT1NYXRoLmZsb29yKGUpLHQ9TWF0aC5mbG9vcih0KTt2YXIgbj10aGlzLl9waXhlbHNTdGF0ZTtpZihyIGluc3RhbmNlb2YgZC5kZWZhdWx0LkltYWdlKXRoaXMuZHJhd2luZ0NvbnRleHQuc2F2ZSgpLHRoaXMuZHJhd2luZ0NvbnRleHQuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSx0aGlzLmRyYXdpbmdDb250ZXh0LnNjYWxlKG4uX3BpeGVsRGVuc2l0eSxuLl9waXhlbERlbnNpdHkpLHRoaXMuZHJhd2luZ0NvbnRleHQuY2xlYXJSZWN0KGUsdCxyLndpZHRoLHIuaGVpZ2h0KSx0aGlzLmRyYXdpbmdDb250ZXh0LmRyYXdJbWFnZShyLmNhbnZhcyxlLHQpLHRoaXMuZHJhd2luZ0NvbnRleHQucmVzdG9yZSgpO2Vsc2V7dmFyIG89MCxpPTAsYT0wLHM9MCxsPTQqKHQqbi5fcGl4ZWxEZW5zaXR5Kih0aGlzLndpZHRoKm4uX3BpeGVsRGVuc2l0eSkrZSpuLl9waXhlbERlbnNpdHkpO2lmKG4uaW1hZ2VEYXRhfHxuLmxvYWRQaXhlbHMuY2FsbChuKSxcIm51bWJlclwiPT10eXBlb2YgcilsPG4ucGl4ZWxzLmxlbmd0aCYmKGE9aT1vPXIscz0yNTUpO2Vsc2UgaWYociBpbnN0YW5jZW9mIEFycmF5KXtpZihyLmxlbmd0aDw0KXRocm93IG5ldyBFcnJvcihcInBpeGVsIGFycmF5IG11c3QgYmUgb2YgdGhlIGZvcm0gW1IsIEcsIEIsIEFdXCIpO2w8bi5waXhlbHMubGVuZ3RoJiYobz1yWzBdLGk9clsxXSxhPXJbMl0scz1yWzNdKX1lbHNlIHIgaW5zdGFuY2VvZiBkLmRlZmF1bHQuQ29sb3ImJmw8bi5waXhlbHMubGVuZ3RoJiYobz1yLmxldmVsc1swXSxpPXIubGV2ZWxzWzFdLGE9ci5sZXZlbHNbMl0scz1yLmxldmVsc1szXSk7Zm9yKHZhciB1PTA7dTxuLl9waXhlbERlbnNpdHk7dSsrKWZvcih2YXIgYz0wO2M8bi5fcGl4ZWxEZW5zaXR5O2MrKylsPTQqKCh0Km4uX3BpeGVsRGVuc2l0eStjKSp0aGlzLndpZHRoKm4uX3BpeGVsRGVuc2l0eSsoZSpuLl9waXhlbERlbnNpdHkrdSkpLG4ucGl4ZWxzW2xdPW8sbi5waXhlbHNbbCsxXT1pLG4ucGl4ZWxzW2wrMl09YSxuLnBpeGVsc1tsKzNdPXN9fSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUudXBkYXRlUGl4ZWxzPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPXRoaXMuX3BpeGVsc1N0YXRlLGk9by5fcGl4ZWxEZW5zaXR5O3ZvaWQgMD09PWUmJnZvaWQgMD09PXQmJnZvaWQgMD09PXImJnZvaWQgMD09PW4mJih0PWU9MCxyPXRoaXMud2lkdGgsbj10aGlzLmhlaWdodCksZSo9aSx0Kj1pLHIqPWksbio9aSx0aGlzLmdpZlByb3BlcnRpZXMmJih0aGlzLmdpZlByb3BlcnRpZXMuZnJhbWVzW3RoaXMuZ2lmUHJvcGVydGllcy5kaXNwbGF5SW5kZXhdLmltYWdlPW8uaW1hZ2VEYXRhKSx0aGlzLmRyYXdpbmdDb250ZXh0LnB1dEltYWdlRGF0YShvLmltYWdlRGF0YSxlLHQsMCwwLHIsbil9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fYWN1dGVBcmNUb0Jlemllcj1mdW5jdGlvbihlLHQpe3ZhciByPXQvMixuPU1hdGguY29zKHIpLG89TWF0aC5zaW4ociksaT0xL01hdGgudGFuKHIpLGE9ZStyLHM9TWF0aC5jb3MoYSksbD1NYXRoLnNpbihhKSx1PSg0LW4pLzMsYz1vKyhuLXUpKmk7cmV0dXJue2F4Ok1hdGguY29zKGUpLnRvRml4ZWQoNyksYXk6TWF0aC5zaW4oZSkudG9GaXhlZCg3KSxieDoodSpzK2MqbCkudG9GaXhlZCg3KSxieToodSpsLWMqcykudG9GaXhlZCg3KSxjeDoodSpzLWMqbCkudG9GaXhlZCg3KSxjeToodSpsK2MqcykudG9GaXhlZCg3KSxkeDpNYXRoLmNvcyhlK3QpLnRvRml4ZWQoNyksZHk6TWF0aC5zaW4oZSt0KS50b0ZpeGVkKDcpfX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmFyYz1mdW5jdGlvbihyLG4sZSx0LG8saSxhKXt2YXIgcz10aGlzLmRyYXdpbmdDb250ZXh0LGw9ZS8yLHU9dC8yLGM9MCxkPVtdO2ZvcihyKz1sLG4rPXU7MWUtNTw9aS1vOyljPU1hdGgubWluKGktbyxwLkhBTEZfUEkpLGQucHVzaCh0aGlzLl9hY3V0ZUFyY1RvQmV6aWVyKG8sYykpLG8rPWM7cmV0dXJuIHRoaXMuX2RvRmlsbCYmKHMuYmVnaW5QYXRoKCksZC5mb3JFYWNoKGZ1bmN0aW9uKGUsdCl7MD09PXQmJnMubW92ZVRvKHIrZS5heCpsLG4rZS5heSp1KSxzLmJlemllckN1cnZlVG8ocitlLmJ4KmwsbitlLmJ5KnUscitlLmN4KmwsbitlLmN5KnUscitlLmR4KmwsbitlLmR5KnUpfSksYSE9PXAuUElFJiZudWxsIT1hfHxzLmxpbmVUbyhyLG4pLHMuY2xvc2VQYXRoKCkscy5maWxsKCkpLHRoaXMuX2RvU3Ryb2tlJiYocy5iZWdpblBhdGgoKSxkLmZvckVhY2goZnVuY3Rpb24oZSx0KXswPT09dCYmcy5tb3ZlVG8ocitlLmF4KmwsbitlLmF5KnUpLHMuYmV6aWVyQ3VydmVUbyhyK2UuYngqbCxuK2UuYnkqdSxyK2UuY3gqbCxuK2UuY3kqdSxyK2UuZHgqbCxuK2UuZHkqdSl9KSxhPT09cC5QSUU/KHMubGluZVRvKHIsbikscy5jbG9zZVBhdGgoKSk6YT09PXAuQ0hPUkQmJnMuY2xvc2VQYXRoKCkscy5zdHJva2UoKSksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmVsbGlwc2U9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5kcmF3aW5nQ29udGV4dCxyPXRoaXMuX2RvRmlsbCxuPXRoaXMuX2RvU3Ryb2tlLG89cGFyc2VGbG9hdChlWzBdKSxpPXBhcnNlRmxvYXQoZVsxXSksYT1wYXJzZUZsb2F0KGVbMl0pLHM9cGFyc2VGbG9hdChlWzNdKTtpZihyJiYhbil7aWYodGhpcy5fZ2V0RmlsbCgpPT09bSlyZXR1cm4gdGhpc31lbHNlIGlmKCFyJiZuJiZ0aGlzLl9nZXRTdHJva2UoKT09PW0pcmV0dXJuIHRoaXM7dmFyIGw9YS8yKi41NTIyODQ3NDk4LHU9cy8yKi41NTIyODQ3NDk4LGM9bythLGQ9aStzLGY9bythLzIsaD1pK3MvMjt0LmJlZ2luUGF0aCgpLHQubW92ZVRvKG8saCksdC5iZXppZXJDdXJ2ZVRvKG8saC11LGYtbCxpLGYsaSksdC5iZXppZXJDdXJ2ZVRvKGYrbCxpLGMsaC11LGMsaCksdC5iZXppZXJDdXJ2ZVRvKGMsaCt1LGYrbCxkLGYsZCksdC5iZXppZXJDdXJ2ZVRvKGYtbCxkLG8saCt1LG8saCksciYmdC5maWxsKCksbiYmdC5zdHJva2UoKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmxpbmU9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89dGhpcy5kcmF3aW5nQ29udGV4dDtyZXR1cm4gdGhpcy5fZG9TdHJva2UmJih0aGlzLl9nZXRTdHJva2UoKT09PW18fChvLmJlZ2luUGF0aCgpLG8ubW92ZVRvKGUsdCksby5saW5lVG8ocixuKSxvLnN0cm9rZSgpKSksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5kcmF3aW5nQ29udGV4dDtpZighdGhpcy5fZG9TdHJva2UpcmV0dXJuIHRoaXM7aWYodGhpcy5fZ2V0U3Ryb2tlKCk9PT1tKXJldHVybiB0aGlzO3ZhciBuPXRoaXMuX2dldFN0cm9rZSgpLG89dGhpcy5fZ2V0RmlsbCgpO3RoaXMuX3NldEZpbGwobiksci5iZWdpblBhdGgoKSxyLmFyYyhlLHQsci5saW5lV2lkdGgvMiwwLHAuVFdPX1BJLCExKSxyLmZpbGwoKSx0aGlzLl9zZXRGaWxsKG8pfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUucXVhZD1mdW5jdGlvbihlLHQscixuLG8saSxhLHMpe3ZhciBsPXRoaXMuZHJhd2luZ0NvbnRleHQsdT10aGlzLl9kb0ZpbGwsYz10aGlzLl9kb1N0cm9rZTtpZih1JiYhYyl7aWYodGhpcy5fZ2V0RmlsbCgpPT09bSlyZXR1cm4gdGhpc31lbHNlIGlmKCF1JiZjJiZ0aGlzLl9nZXRTdHJva2UoKT09PW0pcmV0dXJuIHRoaXM7cmV0dXJuIGwuYmVnaW5QYXRoKCksbC5tb3ZlVG8oZSx0KSxsLmxpbmVUbyhyLG4pLGwubGluZVRvKG8saSksbC5saW5lVG8oYSxzKSxsLmNsb3NlUGF0aCgpLHUmJmwuZmlsbCgpLGMmJmwuc3Ryb2tlKCksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnJlY3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXSxyPWVbMV0sbj1lWzJdLG89ZVszXSxpPWVbNF0sYT1lWzVdLHM9ZVs2XSxsPWVbN10sdT10aGlzLmRyYXdpbmdDb250ZXh0LGM9dGhpcy5fZG9GaWxsLGQ9dGhpcy5fZG9TdHJva2U7aWYoYyYmIWQpe2lmKHRoaXMuX2dldEZpbGwoKT09PW0pcmV0dXJuIHRoaXN9ZWxzZSBpZighYyYmZCYmdGhpcy5fZ2V0U3Ryb2tlKCk9PT1tKXJldHVybiB0aGlzO2lmKHUuYmVnaW5QYXRoKCksdm9pZCAwPT09aSl1LnJlY3QodCxyLG4sbyk7ZWxzZXt2b2lkIDA9PT1hJiYoYT1pKSx2b2lkIDA9PT1zJiYocz1hKSx2b2lkIDA9PT1sJiYobD1zKTt2YXIgZj1NYXRoLmFicyhuKSxoPU1hdGguYWJzKG8pLHA9Zi8yLHk9aC8yO2Y8MippJiYoaT1wKSxoPDIqaSYmKGk9eSksZjwyKmEmJihhPXApLGg8MiphJiYoYT15KSxmPDIqcyYmKHM9cCksaDwyKnMmJihzPXkpLGY8MipsJiYobD1wKSxoPDIqbCYmKGw9eSksdS5iZWdpblBhdGgoKSx1Lm1vdmVUbyh0K2ksciksdS5hcmNUbyh0K24scix0K24scitvLGEpLHUuYXJjVG8odCtuLHIrbyx0LHIrbyxzKSx1LmFyY1RvKHQscitvLHQscixsKSx1LmFyY1RvKHQscix0K24scixpKSx1LmNsb3NlUGF0aCgpfXJldHVybiB0aGlzLl9kb0ZpbGwmJnUuZmlsbCgpLHRoaXMuX2RvU3Ryb2tlJiZ1LnN0cm9rZSgpLHRoaXN9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS50cmlhbmdsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmRyYXdpbmdDb250ZXh0LHI9dGhpcy5fZG9GaWxsLG49dGhpcy5fZG9TdHJva2Usbz1lWzBdLGk9ZVsxXSxhPWVbMl0scz1lWzNdLGw9ZVs0XSx1PWVbNV07aWYociYmIW4pe2lmKHRoaXMuX2dldEZpbGwoKT09PW0pcmV0dXJuIHRoaXN9ZWxzZSBpZighciYmbiYmdGhpcy5fZ2V0U3Ryb2tlKCk9PT1tKXJldHVybiB0aGlzO3QuYmVnaW5QYXRoKCksdC5tb3ZlVG8obyxpKSx0LmxpbmVUbyhhLHMpLHQubGluZVRvKGwsdSksdC5jbG9zZVBhdGgoKSxyJiZ0LmZpbGwoKSxuJiZ0LnN0cm9rZSgpfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuZW5kU2hhcGU9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSl7aWYoMD09PXQubGVuZ3RoKXJldHVybiB0aGlzO2lmKCF0aGlzLl9kb1N0cm9rZSYmIXRoaXMuX2RvRmlsbClyZXR1cm4gdGhpczt2YXIgcyxsLHUsYz1lPT09cC5DTE9TRTtjJiYhaSYmdC5wdXNoKHRbMF0pO3ZhciBkPXQubGVuZ3RoO2lmKCFyfHxhIT09cC5QT0xZR09OJiZudWxsIT09YSlpZighbnx8YSE9PXAuUE9MWUdPTiYmbnVsbCE9PWEpaWYoIW98fGEhPT1wLlBPTFlHT04mJm51bGwhPT1hKWlmKGE9PT1wLlBPSU5UUylmb3IobD0wO2w8ZDtsKyspcz10W2xdLHRoaXMuX2RvU3Ryb2tlJiZ0aGlzLl9wSW5zdC5zdHJva2Uoc1s2XSksdGhpcy5fcEluc3QucG9pbnQoc1swXSxzWzFdKTtlbHNlIGlmKGE9PT1wLkxJTkVTKWZvcihsPTA7bCsxPGQ7bCs9MilzPXRbbF0sdGhpcy5fZG9TdHJva2UmJnRoaXMuX3BJbnN0LnN0cm9rZSh0W2wrMV1bNl0pLHRoaXMuX3BJbnN0LmxpbmUoc1swXSxzWzFdLHRbbCsxXVswXSx0W2wrMV1bMV0pO2Vsc2UgaWYoYT09PXAuVFJJQU5HTEVTKWZvcihsPTA7bCsyPGQ7bCs9MylzPXRbbF0sdGhpcy5kcmF3aW5nQ29udGV4dC5iZWdpblBhdGgoKSx0aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyhzWzBdLHNbMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbCsxXVswXSx0W2wrMV1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbCsyXVswXSx0W2wrMl1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5fZG9GaWxsJiYodGhpcy5fcEluc3QuZmlsbCh0W2wrMl1bNV0pLHRoaXMuZHJhd2luZ0NvbnRleHQuZmlsbCgpKSx0aGlzLl9kb1N0cm9rZSYmKHRoaXMuX3BJbnN0LnN0cm9rZSh0W2wrMl1bNl0pLHRoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlKCkpO2Vsc2UgaWYoYT09PXAuVFJJQU5HTEVfU1RSSVApZm9yKGw9MDtsKzE8ZDtsKyspcz10W2xdLHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksdGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8odFtsKzFdWzBdLHRbbCsxXVsxXSksdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8oc1swXSxzWzFdKSx0aGlzLl9kb1N0cm9rZSYmdGhpcy5fcEluc3Quc3Ryb2tlKHRbbCsxXVs2XSksdGhpcy5fZG9GaWxsJiZ0aGlzLl9wSW5zdC5maWxsKHRbbCsxXVs1XSksbCsyPGQmJih0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wrMl1bMF0sdFtsKzJdWzFdKSx0aGlzLl9kb1N0cm9rZSYmdGhpcy5fcEluc3Quc3Ryb2tlKHRbbCsyXVs2XSksdGhpcy5fZG9GaWxsJiZ0aGlzLl9wSW5zdC5maWxsKHRbbCsyXVs1XSkpLHRoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKGMpO2Vsc2UgaWYoYT09PXAuVFJJQU5HTEVfRkFOKXtpZigyPGQpe2Zvcih0aGlzLmRyYXdpbmdDb250ZXh0LmJlZ2luUGF0aCgpLGw9MjtsPGQ7bCsrKXM9dFtsXSx0aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyh0WzBdWzBdLHRbMF1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbC0xXVswXSx0W2wtMV1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHNbMF0sc1sxXSksdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFswXVswXSx0WzBdWzFdKSxsPGQtMSYmKHRoaXMuX2RvRmlsbCYmc1s1XSE9PXRbbCsxXVs1XXx8dGhpcy5fZG9TdHJva2UmJnNbNl0hPT10W2wrMV1bNl0pJiYodGhpcy5fZG9GaWxsJiYodGhpcy5fcEluc3QuZmlsbChzWzVdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmZpbGwoKSx0aGlzLl9wSW5zdC5maWxsKHRbbCsxXVs1XSkpLHRoaXMuX2RvU3Ryb2tlJiYodGhpcy5fcEluc3Quc3Ryb2tlKHNbNl0pLHRoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlKCksdGhpcy5fcEluc3Quc3Ryb2tlKHRbbCsxXVs2XSkpLHRoaXMuZHJhd2luZ0NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5kcmF3aW5nQ29udGV4dC5iZWdpblBhdGgoKSk7dGhpcy5fZG9GaWxsU3Ryb2tlQ2xvc2UoYyl9fWVsc2UgaWYoYT09PXAuUVVBRFMpZm9yKGw9MDtsKzM8ZDtsKz00KXtmb3Iocz10W2xdLHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksdGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8oc1swXSxzWzFdKSx1PTE7dTw0O3UrKyl0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wrdV1bMF0sdFtsK3VdWzFdKTt0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyhzWzBdLHNbMV0pLHRoaXMuX2RvRmlsbCYmdGhpcy5fcEluc3QuZmlsbCh0W2wrM11bNV0pLHRoaXMuX2RvU3Ryb2tlJiZ0aGlzLl9wSW5zdC5zdHJva2UodFtsKzNdWzZdKSx0aGlzLl9kb0ZpbGxTdHJva2VDbG9zZShjKX1lbHNlIGlmKGE9PT1wLlFVQURfU1RSSVApe2lmKDM8ZClmb3IobD0wO2wrMTxkO2wrPTIpcz10W2xdLHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksbCszPGQ/KHRoaXMuZHJhd2luZ0NvbnRleHQubW92ZVRvKHRbbCsyXVswXSx0W2wrMl1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHNbMF0sc1sxXSksdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFtsKzFdWzBdLHRbbCsxXVsxXSksdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFtsKzNdWzBdLHRbbCszXVsxXSksdGhpcy5fZG9GaWxsJiZ0aGlzLl9wSW5zdC5maWxsKHRbbCszXVs1XSksdGhpcy5fZG9TdHJva2UmJnRoaXMuX3BJbnN0LnN0cm9rZSh0W2wrM11bNl0pKToodGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8oc1swXSxzWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wrMV1bMF0sdFtsKzFdWzFdKSksdGhpcy5fZG9GaWxsU3Ryb2tlQ2xvc2UoYyl9ZWxzZXtmb3IodGhpcy5kcmF3aW5nQ29udGV4dC5iZWdpblBhdGgoKSx0aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyh0WzBdWzBdLHRbMF1bMV0pLGw9MTtsPGQ7bCsrKShzPXRbbF0pLmlzVmVydCYmKHMubW92ZVRvP3RoaXMuZHJhd2luZ0NvbnRleHQubW92ZVRvKHNbMF0sc1sxXSk6dGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8oc1swXSxzWzFdKSk7dGhpcy5fZG9GaWxsU3Ryb2tlQ2xvc2UoYyl9ZWxzZXtmb3IodGhpcy5kcmF3aW5nQ29udGV4dC5iZWdpblBhdGgoKSxsPTA7bDxkO2wrKyl0W2xdLmlzVmVydD90W2xdLm1vdmVUbz90aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyh0W2xdWzBdLHRbbF1bMV0pOnRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbF1bMF0sdFtsXVsxXSk6dGhpcy5kcmF3aW5nQ29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKHRbbF1bMF0sdFtsXVsxXSx0W2xdWzJdLHRbbF1bM10pO3RoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKGMpfWVsc2V7Zm9yKHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksbD0wO2w8ZDtsKyspdFtsXS5pc1ZlcnQ/dFtsXS5tb3ZlVG8/dGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8odFtsXVswXSx0W2xdWzFdKTp0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2xdWzBdLHRbbF1bMV0pOnRoaXMuZHJhd2luZ0NvbnRleHQuYmV6aWVyQ3VydmVUbyh0W2xdWzBdLHRbbF1bMV0sdFtsXVsyXSx0W2xdWzNdLHRbbF1bNF0sdFtsXVs1XSk7dGhpcy5fZG9GaWxsU3Ryb2tlQ2xvc2UoYyl9ZWxzZSBpZigzPGQpe3ZhciBmPVtdLGg9MS10aGlzLl9jdXJ2ZVRpZ2h0bmVzcztmb3IodGhpcy5kcmF3aW5nQ29udGV4dC5iZWdpblBhdGgoKSx0aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyh0WzFdWzBdLHRbMV1bMV0pLGw9MTtsKzI8ZDtsKyspcz10W2xdLGZbMF09W3NbMF0sc1sxXV0sZlsxXT1bc1swXSsoaCp0W2wrMV1bMF0taCp0W2wtMV1bMF0pLzYsc1sxXSsoaCp0W2wrMV1bMV0taCp0W2wtMV1bMV0pLzZdLGZbMl09W3RbbCsxXVswXSsoaCp0W2xdWzBdLWgqdFtsKzJdWzBdKS82LHRbbCsxXVsxXSsoaCp0W2xdWzFdLWgqdFtsKzJdWzFdKS82XSxmWzNdPVt0W2wrMV1bMF0sdFtsKzFdWzFdXSx0aGlzLmRyYXdpbmdDb250ZXh0LmJlemllckN1cnZlVG8oZlsxXVswXSxmWzFdWzFdLGZbMl1bMF0sZlsyXVsxXSxmWzNdWzBdLGZbM11bMV0pO2MmJnRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbCsxXVswXSx0W2wrMV1bMV0pLHRoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKGMpfXJldHVybiBpPW89bj1yPSExLGMmJnQucG9wKCksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnN0cm9rZUNhcD1mdW5jdGlvbihlKXtyZXR1cm4gZSE9PXAuUk9VTkQmJmUhPT1wLlNRVUFSRSYmZSE9PXAuUFJPSkVDVHx8KHRoaXMuZHJhd2luZ0NvbnRleHQubGluZUNhcD1lKSx0aGlzfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuc3Ryb2tlSm9pbj1mdW5jdGlvbihlKXtyZXR1cm4gZSE9PXAuUk9VTkQmJmUhPT1wLkJFVkVMJiZlIT09cC5NSVRFUnx8KHRoaXMuZHJhd2luZ0NvbnRleHQubGluZUpvaW49ZSksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnN0cm9rZVdlaWdodD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lV2lkdGg9dm9pZCAwPT09ZXx8MD09PWU/MWUtNDplLHRoaXN9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fZ2V0RmlsbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jYWNoZWRGaWxsU3R5bGV8fCh0aGlzLl9jYWNoZWRGaWxsU3R5bGU9dGhpcy5kcmF3aW5nQ29udGV4dC5maWxsU3R5bGUpLHRoaXMuX2NhY2hlZEZpbGxTdHlsZX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9zZXRGaWxsPWZ1bmN0aW9uKGUpe2UhPT10aGlzLl9jYWNoZWRGaWxsU3R5bGUmJih0aGlzLmRyYXdpbmdDb250ZXh0LmZpbGxTdHlsZT1lLHRoaXMuX2NhY2hlZEZpbGxTdHlsZT1lKX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9nZXRTdHJva2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGV8fCh0aGlzLl9jYWNoZWRTdHJva2VTdHlsZT10aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZVN0eWxlKSx0aGlzLl9jYWNoZWRTdHJva2VTdHlsZX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9zZXRTdHJva2U9ZnVuY3Rpb24oZSl7ZSE9PXRoaXMuX2NhY2hlZFN0cm9rZVN0eWxlJiYodGhpcy5kcmF3aW5nQ29udGV4dC5zdHJva2VTdHlsZT1lLHRoaXMuX2NhY2hlZFN0cm9rZVN0eWxlPWUpfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYmV6aWVyPWZ1bmN0aW9uKGUsdCxyLG4sbyxpLGEscyl7cmV0dXJuIHRoaXMuX3BJbnN0LmJlZ2luU2hhcGUoKSx0aGlzLl9wSW5zdC52ZXJ0ZXgoZSx0KSx0aGlzLl9wSW5zdC5iZXppZXJWZXJ0ZXgocixuLG8saSxhLHMpLHRoaXMuX3BJbnN0LmVuZFNoYXBlKCksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmN1cnZlPWZ1bmN0aW9uKGUsdCxyLG4sbyxpLGEscyl7cmV0dXJuIHRoaXMuX3BJbnN0LmJlZ2luU2hhcGUoKSx0aGlzLl9wSW5zdC5jdXJ2ZVZlcnRleChlLHQpLHRoaXMuX3BJbnN0LmN1cnZlVmVydGV4KHIsbiksdGhpcy5fcEluc3QuY3VydmVWZXJ0ZXgobyxpKSx0aGlzLl9wSW5zdC5jdXJ2ZVZlcnRleChhLHMpLHRoaXMuX3BJbnN0LmVuZFNoYXBlKCksdGhpc30sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9kb0ZpbGxTdHJva2VDbG9zZT1mdW5jdGlvbihlKXtlJiZ0aGlzLmRyYXdpbmdDb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2RvRmlsbCYmdGhpcy5kcmF3aW5nQ29udGV4dC5maWxsKCksdGhpcy5fZG9TdHJva2UmJnRoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlKCl9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5hcHBseU1hdHJpeD1mdW5jdGlvbihlLHQscixuLG8saSl7dGhpcy5kcmF3aW5nQ29udGV4dC50cmFuc2Zvcm0oZSx0LHIsbixvLGkpfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUucmVzZXRNYXRyaXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kcmF3aW5nQ29udGV4dC5zZXRUcmFuc2Zvcm0oMSwwLDAsMSwwLDApLHRoaXMuZHJhd2luZ0NvbnRleHQuc2NhbGUodGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eSx0aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5KSx0aGlzfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUucm90YXRlPWZ1bmN0aW9uKGUpe3RoaXMuZHJhd2luZ0NvbnRleHQucm90YXRlKGUpfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuc2NhbGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5kcmF3aW5nQ29udGV4dC5zY2FsZShlLHQpLHRoaXN9LGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS50cmFuc2xhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSBpbnN0YW5jZW9mIGQuZGVmYXVsdC5WZWN0b3ImJih0PWUueSxlPWUueCksdGhpcy5kcmF3aW5nQ29udGV4dC50cmFuc2xhdGUoZSx0KSx0aGlzfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUudGV4dD1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpO3ZvaWQgMCE9PW4mJnRoaXMuZHJhd2luZ0NvbnRleHQudGV4dEJhc2VsaW5lPT09cC5CQVNFTElORSYmKGk9ITAsdGhpcy5kcmF3aW5nQ29udGV4dC50ZXh0QmFzZWxpbmU9cC5UT1ApO3ZhciBhPWQuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUudGV4dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGkmJih0aGlzLmRyYXdpbmdDb250ZXh0LnRleHRCYXNlbGluZT1wLkJBU0VMSU5FKSxhfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuX3JlbmRlclRleHQ9ZnVuY3Rpb24oZSx0LHIsbixvKXtpZighKG88PW4pKXJldHVybiBlLnB1c2goKSx0aGlzLl9pc09wZW5UeXBlKCk/dGhpcy5fdGV4dEZvbnQuX3JlbmRlclBhdGgodCxyLG4se3JlbmRlcmVyOnRoaXN9KToodGhpcy5fZG9TdHJva2UmJnRoaXMuX3N0cm9rZVNldCYmdGhpcy5kcmF3aW5nQ29udGV4dC5zdHJva2VUZXh0KHQscixuKSx0aGlzLl9kb0ZpbGwmJih0aGlzLl9maWxsU2V0fHx0aGlzLl9zZXRGaWxsKHAuX0RFRkFVTFRfVEVYVF9GSUxMKSx0aGlzLmRyYXdpbmdDb250ZXh0LmZpbGxUZXh0KHQscixuKSkpLGUucG9wKCksZX0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnRleHRXaWR0aD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5faXNPcGVuVHlwZSgpP3RoaXMuX3RleHRGb250Ll90ZXh0V2lkdGgoZSx0aGlzLl90ZXh0U2l6ZSk6dGhpcy5kcmF3aW5nQ29udGV4dC5tZWFzdXJlVGV4dChlKS53aWR0aH0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9hcHBseVRleHRQcm9wZXJ0aWVzPWZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl9wSW5zdDtyZXR1cm4gdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dEFzY2VudFwiLG51bGwpLHRoaXMuX3NldFByb3BlcnR5KFwiX3RleHREZXNjZW50XCIsbnVsbCksZT10aGlzLl90ZXh0Rm9udCx0aGlzLl9pc09wZW5UeXBlKCkmJihlPXRoaXMuX3RleHRGb250LmZvbnQuZmFtaWx5TmFtZSx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0U3R5bGVcIix0aGlzLl90ZXh0Rm9udC5mb250LnN0eWxlTmFtZSkpLHRoaXMuZHJhd2luZ0NvbnRleHQuZm9udD1cIlwiLmNvbmNhdCh0aGlzLl90ZXh0U3R5bGV8fFwibm9ybWFsXCIsXCIgXCIpLmNvbmNhdCh0aGlzLl90ZXh0U2l6ZXx8MTIsXCJweCBcIikuY29uY2F0KGV8fFwic2Fucy1zZXJpZlwiKSx0aGlzLmRyYXdpbmdDb250ZXh0LnRleHRBbGlnbj10aGlzLl90ZXh0QWxpZ24sdGhpcy5fdGV4dEJhc2VsaW5lPT09cC5DRU5URVI/dGhpcy5kcmF3aW5nQ29udGV4dC50ZXh0QmFzZWxpbmU9cC5fQ1RYX01JRERMRTp0aGlzLmRyYXdpbmdDb250ZXh0LnRleHRCYXNlbGluZT10aGlzLl90ZXh0QmFzZWxpbmUsdH0sZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kcmF3aW5nQ29udGV4dC5zYXZlKCksZC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMpfSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUucG9wPWZ1bmN0aW9uKGUpe3RoaXMuZHJhd2luZ0NvbnRleHQucmVzdG9yZSgpLHRoaXMuX2NhY2hlZEZpbGxTdHlsZT10aGlzLmRyYXdpbmdDb250ZXh0LmZpbGxTdHlsZSx0aGlzLl9jYWNoZWRTdHJva2VTdHlsZT10aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZVN0eWxlLGQuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUucG9wLmNhbGwodGhpcyxlKX07dmFyIG89ZC5kZWZhdWx0LlJlbmRlcmVyMkQ7ci5kZWZhdWx0PW99LHtcIi4uL2ltYWdlL2ZpbHRlcnNcIjoyODUsXCIuL2NvbnN0YW50c1wiOjI1MyxcIi4vbWFpblwiOjI2NCxcIi4vcDUuUmVuZGVyZXJcIjoyNjcsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCI6MTQ5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGxcIjoxNTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2hcIjoxNTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiOjE2NixcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWRcIjoxNzIsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCI6MTgyfV0sMjY5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIik7dmFyIG4sZj0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07Zi5kZWZhdWx0LnByb3RvdHlwZS5fcHJvbWlzZVByZWxvYWRzPVtdO3ZhciBoPSEoZi5kZWZhdWx0LnByb3RvdHlwZS5yZWdpc3RlclByb21pc2VQcmVsb2FkPWZ1bmN0aW9uKGUpe2YuZGVmYXVsdC5wcm90b3R5cGUuX3Byb21pc2VQcmVsb2Fkcy5wdXNoKGUpfSk7Zi5kZWZhdWx0LnByb3RvdHlwZS5fc2V0dXBQcm9taXNlUHJlbG9hZHM9ZnVuY3Rpb24oKXt2YXIgZT0hMCx0PSExLHI9dm9pZCAwO3RyeXtmb3IodmFyIG4sbz10aGlzLl9wcm9taXNlUHJlbG9hZHNbU3ltYm9sLml0ZXJhdG9yXSgpOyEoZT0obj1vLm5leHQoKSkuZG9uZSk7ZT0hMCl7dmFyIGk9bi52YWx1ZSxhPXRoaXMscz1pLm1ldGhvZCxsPWkuYWRkQ2FsbGJhY2tzLHU9aS5sZWdhY3lQcmVsb2FkU2V0dXAsYz1pLnRhcmdldHx8dGhpcyxkPWNbc10uYmluZChjKTtpZihjPT09Zi5kZWZhdWx0LnByb3RvdHlwZSl7aWYoaCljb250aW51ZTthPW51bGwsZD1jW3NdfWlmKGNbc109dGhpcy5fd3JhcFByb21pc2VQcmVsb2FkKGEsZCxsKSx1KWNbdS5tZXRob2RdPXRoaXMuX2xlZ2FjeVByZWxvYWRHZW5lcmF0b3IoYSx1LGNbc10pfX1jYXRjaChlKXt0PSEwLHI9ZX1maW5hbGx5e3RyeXtlfHxudWxsPT1vLnJldHVybnx8by5yZXR1cm4oKX1maW5hbGx5e2lmKHQpdGhyb3cgcn19aD0hMH0sZi5kZWZhdWx0LnByb3RvdHlwZS5fd3JhcFByb21pc2VQcmVsb2FkPWZ1bmN0aW9uKGUsbCx1KXt2YXIgdD1mdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy5faW5jcmVtZW50UHJlbG9hZCgpO2Zvcih2YXIgdD1udWxsLHI9bnVsbCxuPWFyZ3VtZW50cy5sZW5ndGgsbz1uZXcgQXJyYXkobiksaT0wO2k8bjtpKyspb1tpXT1hcmd1bWVudHNbaV07aWYodSlmb3IodmFyIGE9by5sZW5ndGgtMTswPD1hJiYhciYmXCJmdW5jdGlvblwiPT10eXBlb2Ygb1thXTthLS0pcj10LHQ9by5wb3AoKTt2YXIgcz1Qcm9taXNlLnJlc29sdmUobC5hcHBseSh0aGlzLG8pKTtyZXR1cm4gdCYmcy50aGVuKHQpLHImJnMuY2F0Y2gocikscy50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGUuX2RlY3JlbWVudFByZWxvYWQoKX0pLHN9O3JldHVybiBlJiYodD10LmJpbmQoZSkpLHR9O2Z1bmN0aW9uIGkoKXtyZXR1cm57fX1mLmRlZmF1bHQucHJvdG90eXBlLl9sZWdhY3lQcmVsb2FkR2VuZXJhdG9yPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbz10LmNyZWF0ZUJhc2VPYmplY3R8fGkscj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5faW5jcmVtZW50UHJlbG9hZCgpO3ZhciByPW8uYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKS50aGVuKGZ1bmN0aW9uKGUpe09iamVjdC5hc3NpZ24ocixlKSx0Ll9kZWNyZW1lbnRQcmVsb2FkKCl9KSxyfTtyZXR1cm4gZSYmKHI9ci5iaW5kKGUpKSxyfX0se1wiLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIjoxNzMsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlXCI6MTc4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiOjE4NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIjoxOTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCI6MTk0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiOjE5NSxcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5fV0sMjcwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbD0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sdT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1zKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PWEoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4vY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBhKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gYT1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIHMoZSl7cmV0dXJuKHM9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWUoXCIuL3A1LkdyYXBoaWNzXCIpLGUoXCIuL3A1LlJlbmRlcmVyMkRcIiksZShcIi4uL3dlYmdsL3A1LlJlbmRlcmVyR0xcIik7dmFyIGM9XCJkZWZhdWx0Q2FudmFzMFwiO2wuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlQ2FudmFzPWZ1bmN0aW9uKGUsdCxyKXtsLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUNhbnZhc1wiLGFyZ3VtZW50cyk7dmFyIG4sbz1yfHx1LlAyRDtpZihvPT09dS5XRUJHTCl7aWYobj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChjKSl7bi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG4pO3ZhciBpPXRoaXMuX3JlbmRlcmVyO3RoaXMuX2VsZW1lbnRzPXRoaXMuX2VsZW1lbnRzLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZSE9PWl9KX0obj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpKS5pZD1jLG4uY2xhc3NMaXN0LmFkZChcInA1Q2FudmFzXCIpfWVsc2UgaWYodGhpcy5fZGVmYXVsdEdyYXBoaWNzQ3JlYXRlZCluPXRoaXMuY2FudmFzO2Vsc2V7bj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2Zvcih2YXIgYT0wO2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVmYXVsdENhbnZhc1wiLmNvbmNhdChhKSk7KWErKztjPVwiZGVmYXVsdENhbnZhc1wiLmNvbmNhdChhKSxuLmlkPWMsbi5jbGFzc0xpc3QuYWRkKFwicDVDYW52YXNcIil9aWYodGhpcy5fc2V0dXBEb25lfHwobi5kYXRhc2V0LmhpZGRlbj0hMCxuLnN0eWxlLnZpc2liaWxpdHk9XCJoaWRkZW5cIiksdGhpcy5fdXNlck5vZGUpdGhpcy5fdXNlck5vZGUuYXBwZW5kQ2hpbGQobik7ZWxzZXtpZigwPT09ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJtYWluXCIpLmxlbmd0aCl7dmFyIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm1haW5cIik7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKX1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIm1haW5cIilbMF0uYXBwZW5kQ2hpbGQobil9cmV0dXJuIG89PT11LldFQkdMPyh0aGlzLl9zZXRQcm9wZXJ0eShcIl9yZW5kZXJlclwiLG5ldyBsLmRlZmF1bHQuUmVuZGVyZXJHTChuLHRoaXMsITApKSx0aGlzLl9lbGVtZW50cy5wdXNoKHRoaXMuX3JlbmRlcmVyKSk6dGhpcy5fZGVmYXVsdEdyYXBoaWNzQ3JlYXRlZHx8KHRoaXMuX3NldFByb3BlcnR5KFwiX3JlbmRlcmVyXCIsbmV3IGwuZGVmYXVsdC5SZW5kZXJlcjJEKG4sdGhpcywhMCkpLHRoaXMuX2RlZmF1bHRHcmFwaGljc0NyZWF0ZWQ9ITAsdGhpcy5fZWxlbWVudHMucHVzaCh0aGlzLl9yZW5kZXJlcikpLHRoaXMuX3JlbmRlcmVyLnJlc2l6ZShlLHQpLHRoaXMuX3JlbmRlcmVyLl9hcHBseURlZmF1bHRzKCksdGhpcy5fcmVuZGVyZXJ9LGwuZGVmYXVsdC5wcm90b3R5cGUucmVzaXplQ2FudmFzPWZ1bmN0aW9uKGUsdCxyKXtpZihsLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlc2l6ZUNhbnZhc1wiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIpe3ZhciBuPXt9O2Zvcih2YXIgbyBpbiB0aGlzLmRyYXdpbmdDb250ZXh0KXt2YXIgaT10aGlzLmRyYXdpbmdDb250ZXh0W29dO1wib2JqZWN0XCIhPT1zKGkpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBpJiYobltvXT1pKX1mb3IodmFyIGEgaW4gdGhpcy5fcmVuZGVyZXIucmVzaXplKGUsdCksdGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQsbil0cnl7dGhpcy5kcmF3aW5nQ29udGV4dFthXT1uW2FdfWNhdGNoKGUpe31yfHx0aGlzLnJlZHJhdygpfXRoaXMuX2FkZEFjY3NPdXRwdXQoKSYmdGhpcy5fdXBkYXRlQWNjc091dHB1dCgpfSxsLmRlZmF1bHQucHJvdG90eXBlLm5vQ2FudmFzPWZ1bmN0aW9uKCl7dGhpcy5jYW52YXMmJnRoaXMuY2FudmFzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5jYW52YXMpfSxsLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUdyYXBoaWNzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVHcmFwaGljc1wiLGFyZ3VtZW50cyksbmV3IGwuZGVmYXVsdC5HcmFwaGljcyhlLHQscix0aGlzKX0sbC5kZWZhdWx0LnByb3RvdHlwZS5ibGVuZE1vZGU9ZnVuY3Rpb24oZSl7bC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJibGVuZE1vZGVcIixhcmd1bWVudHMpLGU9PT11Lk5PUk1BTCYmKGNvbnNvbGUud2FybihcIk5PUk1BTCBoYXMgYmVlbiBkZXByZWNhdGVkIGZvciB1c2UgaW4gYmxlbmRNb2RlLiBkZWZhdWx0aW5nIHRvIEJMRU5EIGluc3RlYWQuXCIpLGU9dS5CTEVORCksdGhpcy5fcmVuZGVyZXIuYmxlbmRNb2RlKGUpfTt2YXIgbz1sLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL3dlYmdsL3A1LlJlbmRlcmVyR0xcIjozMTgsXCIuL2NvbnN0YW50c1wiOjI1MyxcIi4vbWFpblwiOjI2NCxcIi4vcDUuR3JhcGhpY3NcIjoyNjYsXCIuL3A1LlJlbmRlcmVyMkRcIjoyNjgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCI6MTUyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XSwyNzE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIGM9bihlKFwiLi4vbWFpblwiKSkscz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PWwoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvbnN0YW50c1wiKSksZD1uKGUoXCIuLi9oZWxwZXJzXCIpKTtmdW5jdGlvbiBsKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gbD1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWUoXCIuLi9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIiksZShcIi4uL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiKSxlKFwiLi4vZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiKSxjLmRlZmF1bHQucHJvdG90eXBlLl9ub3JtYWxpemVBcmNBbmdsZXM9ZnVuY3Rpb24oZSx0LHIsbixvKXt2YXIgaTtyZXR1cm4gZS09cy5UV09fUEkqTWF0aC5mbG9vcihlL3MuVFdPX1BJKSx0LT1zLlRXT19QSSpNYXRoLmZsb29yKHQvcy5UV09fUEkpLGk9TWF0aC5taW4oTWF0aC5hYnMoZS10KSxzLlRXT19QSS1NYXRoLmFicyhlLXQpKSxvJiYoZT1lPD1zLkhBTEZfUEk/TWF0aC5hdGFuKHIvbipNYXRoLnRhbihlKSk6ZT5zLkhBTEZfUEkmJmU8PTMqcy5IQUxGX1BJP01hdGguYXRhbihyL24qTWF0aC50YW4oZSkpK3MuUEk6TWF0aC5hdGFuKHIvbipNYXRoLnRhbihlKSkrcy5UV09fUEksdD10PD1zLkhBTEZfUEk/TWF0aC5hdGFuKHIvbipNYXRoLnRhbih0KSk6dD5zLkhBTEZfUEkmJnQ8PTMqcy5IQUxGX1BJP01hdGguYXRhbihyL24qTWF0aC50YW4odCkpK3MuUEk6TWF0aC5hdGFuKHIvbipNYXRoLnRhbih0KSkrcy5UV09fUEkpLHQ8ZSYmKHQrPXMuVFdPX1BJKSx7c3RhcnQ6ZSxzdG9wOnQsY29ycmVzcG9uZFRvU2FtZVBvaW50Omk8MWUtNX19LGMuZGVmYXVsdC5wcm90b3R5cGUuYXJjPWZ1bmN0aW9uKGUsdCxyLG4sbyxpLGEscyl7aWYoYy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJhcmNcIixhcmd1bWVudHMpLCF0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJiF0aGlzLl9yZW5kZXJlci5fZG9GaWxsKXJldHVybiB0aGlzO2lmKG89PT1pKXJldHVybiB0aGlzO289dGhpcy5fdG9SYWRpYW5zKG8pLGk9dGhpcy5fdG9SYWRpYW5zKGkpLHI9TWF0aC5hYnMociksbj1NYXRoLmFicyhuKTt2YXIgbD1kLmRlZmF1bHQubW9kZUFkanVzdChlLHQscixuLHRoaXMuX3JlbmRlcmVyLl9lbGxpcHNlTW9kZSksdT10aGlzLl9ub3JtYWxpemVBcmNBbmdsZXMobyxpLGwudyxsLmgsITApO3JldHVybiB1LmNvcnJlc3BvbmRUb1NhbWVQb2ludD90aGlzLl9yZW5kZXJlci5lbGxpcHNlKFtsLngsbC55LGwudyxsLmgsc10pOih0aGlzLl9yZW5kZXJlci5hcmMobC54LGwueSxsLncsbC5oLHUuc3RhcnQsdS5zdG9wLGEscyksKHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLmdyaWR8fHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLnRleHQpJiZ0aGlzLl9hY2NzT3V0cHV0KFwiYXJjXCIsW2wueCxsLnksbC53LGwuaCx1LnN0YXJ0LHUuc3RvcCxhXSkpLHRoaXN9LGMuZGVmYXVsdC5wcm90b3R5cGUuZWxsaXBzZT1mdW5jdGlvbihlLHQscixuLG8pe3JldHVybiBjLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImVsbGlwc2VcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlckVsbGlwc2UuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjLmRlZmF1bHQucHJvdG90eXBlLmNpcmNsZT1mdW5jdGlvbigpe2MuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY2lyY2xlXCIsYXJndW1lbnRzKTt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCwyKTtyZXR1cm4gZS5wdXNoKGFyZ3VtZW50c1syXSksZS5wdXNoKGFyZ3VtZW50c1syXSksdGhpcy5fcmVuZGVyRWxsaXBzZS5hcHBseSh0aGlzLGUpfSxjLmRlZmF1bHQucHJvdG90eXBlLl9yZW5kZXJFbGxpcHNlPWZ1bmN0aW9uKGUsdCxyLG4sbyl7aWYoIXRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZSYmIXRoaXMuX3JlbmRlcmVyLl9kb0ZpbGwpcmV0dXJuIHRoaXM7cjwwJiYocj1NYXRoLmFicyhyKSksdm9pZCAwPT09bj9uPXI6bjwwJiYobj1NYXRoLmFicyhuKSk7dmFyIGk9ZC5kZWZhdWx0Lm1vZGVBZGp1c3QoZSx0LHIsbix0aGlzLl9yZW5kZXJlci5fZWxsaXBzZU1vZGUpO3JldHVybiB0aGlzLl9yZW5kZXJlci5lbGxpcHNlKFtpLngsaS55LGkudyxpLmgsb10pLCh0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy5ncmlkfHx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy50ZXh0KSYmdGhpcy5fYWNjc091dHB1dChcImVsbGlwc2VcIixbaS54LGkueSxpLncsaS5oXSksdGhpc30sYy5kZWZhdWx0LnByb3RvdHlwZS5saW5lPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07dmFyIG47Yy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsaW5lXCIsdCksdGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiYobj10aGlzLl9yZW5kZXJlcikubGluZS5hcHBseShuLHQpO3JldHVybih0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy5ncmlkfHx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy50ZXh0KSYmdGhpcy5fYWNjc091dHB1dChcImxpbmVcIix0KSx0aGlzfSxjLmRlZmF1bHQucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07dmFyIG47Yy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJwb2ludFwiLHQpLHRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZSYmKDE9PT10Lmxlbmd0aCYmdFswXWluc3RhbmNlb2YgYy5kZWZhdWx0LlZlY3Rvcj90aGlzLl9yZW5kZXJlci5wb2ludC5jYWxsKHRoaXMuX3JlbmRlcmVyLHRbMF0ueCx0WzBdLnksdFswXS56KTooKG49dGhpcy5fcmVuZGVyZXIpLnBvaW50LmFwcGx5KG4sdCksKHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLmdyaWR8fHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLnRleHQpJiZ0aGlzLl9hY2NzT3V0cHV0KFwicG9pbnRcIix0KSkpO3JldHVybiB0aGlzfSxjLmRlZmF1bHQucHJvdG90eXBlLnF1YWQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjtjLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInF1YWRcIix0KSwodGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlfHx0aGlzLl9yZW5kZXJlci5fZG9GaWxsKSYmKHRoaXMuX3JlbmRlcmVyLmlzUDNEJiZ0Lmxlbmd0aDw9MTI/dGhpcy5fcmVuZGVyZXIucXVhZC5jYWxsKHRoaXMuX3JlbmRlcmVyLHRbMF0sdFsxXSwwLHRbMl0sdFszXSwwLHRbNF0sdFs1XSwwLHRbNl0sdFs3XSwwLHRbOF0sdFs5XSk6KChuPXRoaXMuX3JlbmRlcmVyKS5xdWFkLmFwcGx5KG4sdCksKHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLmdyaWR8fHRoaXMuX2FjY2Vzc2libGVPdXRwdXRzLnRleHQpJiZ0aGlzLl9hY2NzT3V0cHV0KFwicXVhZHJpbGF0ZXJhbFwiLHQpKSk7cmV0dXJuIHRoaXN9LGMuZGVmYXVsdC5wcm90b3R5cGUucmVjdD1mdW5jdGlvbigpe3JldHVybiBjLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlY3RcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlclJlY3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjLmRlZmF1bHQucHJvdG90eXBlLnNxdWFyZT1mdW5jdGlvbihlLHQscixuLG8saSxhKXtyZXR1cm4gYy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzcXVhcmVcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlclJlY3QuY2FsbCh0aGlzLGUsdCxyLHIsbixvLGksYSl9LGMuZGVmYXVsdC5wcm90b3R5cGUuX3JlbmRlclJlY3Q9ZnVuY3Rpb24oKXtpZih0aGlzLl9yZW5kZXJlci5fZG9TdHJva2V8fHRoaXMuX3JlbmRlcmVyLl9kb0ZpbGwpezM9PT1hcmd1bWVudHMubGVuZ3RoJiYoYXJndW1lbnRzWzNdPWFyZ3VtZW50c1syXSk7Zm9yKHZhciBlPWQuZGVmYXVsdC5tb2RlQWRqdXN0KGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSx0aGlzLl9yZW5kZXJlci5fcmVjdE1vZGUpLHQ9W2UueCxlLnksZS53LGUuaF0scj00O3I8YXJndW1lbnRzLmxlbmd0aDtyKyspdFtyXT1hcmd1bWVudHNbcl07dGhpcy5fcmVuZGVyZXIucmVjdCh0KSwodGhpcy5fYWNjZXNzaWJsZU91dHB1dHMuZ3JpZHx8dGhpcy5fYWNjZXNzaWJsZU91dHB1dHMudGV4dCkmJnRoaXMuX2FjY3NPdXRwdXQoXCJyZWN0YW5nbGVcIixbZS54LGUueSxlLncsZS5oXSl9cmV0dXJuIHRoaXN9LGMuZGVmYXVsdC5wcm90b3R5cGUudHJpYW5nbGU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gYy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0cmlhbmdsZVwiLHQpLCh0aGlzLl9yZW5kZXJlci5fZG9TdHJva2V8fHRoaXMuX3JlbmRlcmVyLl9kb0ZpbGwpJiZ0aGlzLl9yZW5kZXJlci50cmlhbmdsZSh0KSwodGhpcy5fYWNjZXNzaWJsZU91dHB1dHMuZ3JpZHx8dGhpcy5fYWNjZXNzaWJsZU91dHB1dHMudGV4dCkmJnRoaXMuX2FjY3NPdXRwdXQoXCJ0cmlhbmdsZVwiLHQpLHRoaXN9O3ZhciBvPWMuZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29uc3RhbnRzXCI6MjUzLFwiLi4vZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCI6MjU1LFwiLi4vZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjU2LFwiLi4vZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiOjI1OSxcIi4uL2hlbHBlcnNcIjoyNjAsXCIuLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyfV0sMjcyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0saT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1vLmRlZmF1bHQucHJvdG90eXBlLmVsbGlwc2VNb2RlPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImVsbGlwc2VNb2RlXCIsYXJndW1lbnRzKSxlIT09aS5DT1JORVImJmUhPT1pLkNPUk5FUlMmJmUhPT1pLlJBRElVUyYmZSE9PWkuQ0VOVEVSfHwodGhpcy5fcmVuZGVyZXIuX2VsbGlwc2VNb2RlPWUpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUubm9TbW9vdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXRBdHRyaWJ1dGVzKFwiYW50aWFsaWFzXCIsITEpLHRoaXMuX3JlbmRlcmVyLmlzUDNEfHxcImltYWdlU21vb3RoaW5nRW5hYmxlZFwiaW4gdGhpcy5kcmF3aW5nQ29udGV4dCYmKHRoaXMuZHJhd2luZ0NvbnRleHQuaW1hZ2VTbW9vdGhpbmdFbmFibGVkPSExKSx0aGlzfSxvLmRlZmF1bHQucHJvdG90eXBlLnJlY3RNb2RlPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlY3RNb2RlXCIsYXJndW1lbnRzKSxlIT09aS5DT1JORVImJmUhPT1pLkNPUk5FUlMmJmUhPT1pLlJBRElVUyYmZSE9PWkuQ0VOVEVSfHwodGhpcy5fcmVuZGVyZXIuX3JlY3RNb2RlPWUpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUuc21vb3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0QXR0cmlidXRlcyhcImFudGlhbGlhc1wiLCEwKSx0aGlzLl9yZW5kZXJlci5pc1AzRHx8XCJpbWFnZVNtb290aGluZ0VuYWJsZWRcImluIHRoaXMuZHJhd2luZ0NvbnRleHQmJih0aGlzLmRyYXdpbmdDb250ZXh0LmltYWdlU21vb3RoaW5nRW5hYmxlZD0hMCksdGhpc30sby5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2VDYXA9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3Ryb2tlQ2FwXCIsYXJndW1lbnRzKSxlIT09aS5ST1VORCYmZSE9PWkuU1FVQVJFJiZlIT09aS5QUk9KRUNUfHx0aGlzLl9yZW5kZXJlci5zdHJva2VDYXAoZSksdGhpc30sby5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2VKb2luPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInN0cm9rZUpvaW5cIixhcmd1bWVudHMpLGUhPT1pLlJPVU5EJiZlIT09aS5CRVZFTCYmZSE9PWkuTUlURVJ8fHRoaXMuX3JlbmRlcmVyLnN0cm9rZUpvaW4oZSksdGhpc30sby5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2VXZWlnaHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3Ryb2tlV2VpZ2h0XCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5zdHJva2VXZWlnaHQoZSksdGhpc307dmFyIGw9by5kZWZhdWx0O3IuZGVmYXVsdD1sfSx7XCIuLi9jb25zdGFudHNcIjoyNTMsXCIuLi9tYWluXCI6MjY0fV0sMjczOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZShcIi4uL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSxlKFwiLi4vZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuLi9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCIpLHMuZGVmYXVsdC5wcm90b3R5cGUuYmV6aWVyPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJiZXppZXJcIixyKSwodGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlfHx0aGlzLl9yZW5kZXJlci5fZG9GaWxsKSYmKGU9dGhpcy5fcmVuZGVyZXIpLmJlemllci5hcHBseShlLHIpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuYmV6aWVyRGV0YWlsPWZ1bmN0aW9uKGUpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJlemllckRldGFpbFwiLGFyZ3VtZW50cyksdGhpcy5fYmV6aWVyRGV0YWlsPWUsdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5iZXppZXJQb2ludD1mdW5jdGlvbihlLHQscixuLG8pe3MuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmV6aWVyUG9pbnRcIixhcmd1bWVudHMpO3ZhciBpPTEtbztyZXR1cm4gTWF0aC5wb3coaSwzKSplKzMqTWF0aC5wb3coaSwyKSpvKnQrMyppKk1hdGgucG93KG8sMikqcitNYXRoLnBvdyhvLDMpKm59LHMuZGVmYXVsdC5wcm90b3R5cGUuYmV6aWVyVGFuZ2VudD1mdW5jdGlvbihlLHQscixuLG8pe3MuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmV6aWVyVGFuZ2VudFwiLGFyZ3VtZW50cyk7dmFyIGk9MS1vO3JldHVybiAzKm4qTWF0aC5wb3cobywyKS0zKnIqTWF0aC5wb3cobywyKSs2KnIqaSpvLTYqdCppKm8rMyp0Kk1hdGgucG93KGksMiktMyplKk1hdGgucG93KGksMil9LHMuZGVmYXVsdC5wcm90b3R5cGUuY3VydmU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlXCIsdCksdGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiYobj10aGlzLl9yZW5kZXJlcikuY3VydmUuYXBwbHkobix0KTtyZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5jdXJ2ZURldGFpbD1mdW5jdGlvbihlKXtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjdXJ2ZURldGFpbFwiLGFyZ3VtZW50cyksdGhpcy5fY3VydmVEZXRhaWw9ZTwzPzM6ZSx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmN1cnZlVGlnaHRuZXNzPWZ1bmN0aW9uKGUpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlVGlnaHRuZXNzXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5fY3VydmVUaWdodG5lc3M9ZSx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmN1cnZlUG9pbnQ9ZnVuY3Rpb24oZSx0LHIsbixvKXtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlUG9pbnRcIixhcmd1bWVudHMpO3ZhciBpPW8qbypvLGE9bypvO3JldHVybiBlKigtLjUqaSthLS41Km8pK3QqKDEuNSppLTIuNSphKzEpK3IqKC0xLjUqaSsyKmErLjUqbykrbiooLjUqaS0uNSphKX0scy5kZWZhdWx0LnByb3RvdHlwZS5jdXJ2ZVRhbmdlbnQ9ZnVuY3Rpb24oZSx0LHIsbixvKXtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlVGFuZ2VudFwiLGFyZ3VtZW50cyk7dmFyIGk9bypvO3JldHVybiBlKigtMyppLzIrMipvLS41KSt0Kig5KmkvMi01Km8pK3IqKC05KmkvMis0Km8rLjUpK24qKDMqaS8yLW8pfTt2YXIgbz1zLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiOjI1NSxcIi4uL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiOjI1NixcIi4uL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIjoyNTksXCIuLi9tYWluXCI6MjY0fV0sMjc0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLHM9KG49ZShcIi4uL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxsPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9dSgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29uc3RhbnRzXCIpKTtmdW5jdGlvbiB1KCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gdT1mdW5jdGlvbigpe3JldHVybiBlfSxlfXZhciBvPW51bGwsYz1bXSxkPVtdLGY9ITEsaT0hMSxoPSExLHA9ITEseT0hMDtzLmRlZmF1bHQucHJvdG90eXBlLmJlZ2luQ29udG91cj1mdW5jdGlvbigpe3JldHVybiBkPVtdLHA9ITAsdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5iZWdpblNoYXBlPWZ1bmN0aW9uKGUpe3ZhciB0OyhzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJlZ2luU2hhcGVcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLmlzUDNEKT8odD10aGlzLl9yZW5kZXJlcikuYmVnaW5TaGFwZS5hcHBseSh0LGFyZ3VtZW50cyk6KG89ZT09PWwuUE9JTlRTfHxlPT09bC5MSU5FU3x8ZT09PWwuVFJJQU5HTEVTfHxlPT09bC5UUklBTkdMRV9GQU58fGU9PT1sLlRSSUFOR0xFX1NUUklQfHxlPT09bC5RVUFEU3x8ZT09PWwuUVVBRF9TVFJJUD9lOm51bGwsYz1bXSxkPVtdKTtyZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5iZXppZXJWZXJ0ZXg9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjtpZihzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJlemllclZlcnRleFwiLHQpLHRoaXMuX3JlbmRlcmVyLmlzUDNEKShuPXRoaXMuX3JlbmRlcmVyKS5iZXppZXJWZXJ0ZXguYXBwbHkobix0KTtlbHNlIGlmKDA9PT1jLmxlbmd0aClzLmRlZmF1bHQuX2ZyaWVuZGx5RXJyb3IoXCJ2ZXJ0ZXgoKSBtdXN0IGJlIHVzZWQgb25jZSBiZWZvcmUgY2FsbGluZyBiZXppZXJWZXJ0ZXgoKVwiLFwiYmV6aWVyVmVydGV4XCIpO2Vsc2V7Zj0hMDtmb3IodmFyIG89W10saT0wO2k8dC5sZW5ndGg7aSsrKW9baV09dFtpXTtvLmlzVmVydD0hMSxwP2QucHVzaChvKTpjLnB1c2gobyl9cmV0dXJuIHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuY3VydmVWZXJ0ZXg9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjsocy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjdXJ2ZVZlcnRleFwiLHQpLHRoaXMuX3JlbmRlcmVyLmlzUDNEKT8obj10aGlzLl9yZW5kZXJlcikuY3VydmVWZXJ0ZXguYXBwbHkobix0KTooaT0hMCx0aGlzLnZlcnRleCh0WzBdLHRbMV0pKTtyZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5lbmRDb250b3VyPWZ1bmN0aW9uKCl7dmFyIGU9ZFswXS5zbGljZSgpO2UuaXNWZXJ0PWRbMF0uaXNWZXJ0LGUubW92ZVRvPSExLGQucHVzaChlKSx5JiYoYy5wdXNoKGNbMF0pLHk9ITEpO2Zvcih2YXIgdD0wO3Q8ZC5sZW5ndGg7dCsrKWMucHVzaChkW3RdKTtyZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5lbmRTaGFwZT1mdW5jdGlvbihlKXtpZihzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImVuZFNoYXBlXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5pc1AzRCl0aGlzLl9yZW5kZXJlci5lbmRTaGFwZShlLGksZixoLHAsbyk7ZWxzZXtpZigwPT09Yy5sZW5ndGgpcmV0dXJuIHRoaXM7aWYoIXRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZSYmIXRoaXMuX3JlbmRlcmVyLl9kb0ZpbGwpcmV0dXJuIHRoaXM7dmFyIHQ9ZT09PWwuQ0xPU0U7dCYmIXAmJmMucHVzaChjWzBdKSx0aGlzLl9yZW5kZXJlci5lbmRTaGFwZShlLGMsaSxmLGgscCxvKSx5PSEocD1oPWY9aT0hMSksdCYmYy5wb3AoKX1yZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5xdWFkcmF0aWNWZXJ0ZXg9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtpZihzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInF1YWRyYXRpY1ZlcnRleFwiLHQpLHRoaXMuX3JlbmRlcmVyLmlzUDNEKXt2YXIgbjsobj10aGlzLl9yZW5kZXJlcikucXVhZHJhdGljVmVydGV4LmFwcGx5KG4sdCl9ZWxzZXtpZih0aGlzLl9jb250b3VySW5pdGVkKXt2YXIgbz17fTtyZXR1cm4gby54PXRbMF0sby55PXRbMV0sby54Mz10WzJdLG8ueTM9dFszXSxvLnR5cGU9bC5RVUFEUkFUSUMsdGhpcy5fY29udG91clZlcnRpY2VzLnB1c2gobyksdGhpc31pZigwPGMubGVuZ3RoKXtoPSEwO2Zvcih2YXIgaT1bXSxhPTA7YTx0Lmxlbmd0aDthKyspaVthXT10W2FdO2kuaXNWZXJ0PSExLHA/ZC5wdXNoKGkpOmMucHVzaChpKX1lbHNlIHMuZGVmYXVsdC5fZnJpZW5kbHlFcnJvcihcInZlcnRleCgpIG11c3QgYmUgdXNlZCBvbmNlIGJlZm9yZSBjYWxsaW5nIHF1YWRyYXRpY1ZlcnRleCgpXCIsXCJxdWFkcmF0aWNWZXJ0ZXhcIil9cmV0dXJuIHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUudmVydGV4PWZ1bmN0aW9uKGUsdCxyLG4sbyl7aWYodGhpcy5fcmVuZGVyZXIuaXNQM0Qpe3ZhciBpOyhpPXRoaXMuX3JlbmRlcmVyKS52ZXJ0ZXguYXBwbHkoaSxhcmd1bWVudHMpfWVsc2V7dmFyIGE9W107YS5pc1ZlcnQ9ITAsYVswXT1lLGFbMV09dCxhWzJdPTAsYVszXT0wLGFbNF09MCxhWzVdPXRoaXMuX3JlbmRlcmVyLl9nZXRGaWxsKCksYVs2XT10aGlzLl9yZW5kZXJlci5fZ2V0U3Ryb2tlKCksciYmKGEubW92ZVRvPXIpLHA/KDA9PT1kLmxlbmd0aCYmKGEubW92ZVRvPSEwKSxkLnB1c2goYSkpOmMucHVzaChhKX1yZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5ub3JtYWw9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuO3JldHVybiB0aGlzLl9hc3NlcnQzZChcIm5vcm1hbFwiKSxzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm5vcm1hbFwiLGFyZ3VtZW50cyksKG49dGhpcy5fcmVuZGVyZXIpLm5vcm1hbC5hcHBseShuLGFyZ3VtZW50cyksdGhpc307dmFyIG09cy5kZWZhdWx0O3IuZGVmYXVsdD1tfSx7XCIuLi9jb25zdGFudHNcIjoyNTMsXCIuLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyfV0sMjc1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4obj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWNsYW1wZWQtYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKSx3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGUsdCl7d2luZG93LnNldFRpbWVvdXQoZSwxZTMvNjApfSxcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXl8fFVpbnQ4Q2xhbXBlZEFycmF5LnByb3RvdHlwZS5zbGljZXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KFVpbnQ4Q2xhbXBlZEFycmF5LnByb3RvdHlwZSxcInNsaWNlXCIse3ZhbHVlOkFycmF5LnByb3RvdHlwZS5zbGljZSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMX0pLGZ1bmN0aW9uKCl7aWYoIU9iamVjdC5hc3NpZ24pe3ZhciBzPU9iamVjdC5rZXlzLGU9T2JqZWN0LmRlZmluZVByb3BlcnR5LGw9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT09bihTeW1ib2woKSkscj1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLHU9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiByLmNhbGwodCxlKX19O2UoT2JqZWN0LFwiYXNzaWduXCIse3ZhbHVlOmZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwidGFyZ2V0IG11c3QgYmUgYW4gb2JqZWN0XCIpO3ZhciByLG4sbyxpLGE9T2JqZWN0KGUpO2ZvcihyPTE7cjxhcmd1bWVudHMubGVuZ3RoOysrcilmb3Iobj1PYmplY3QoYXJndW1lbnRzW3JdKSxpPXMobiksbCYmT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyYmaS5wdXNoLmFwcGx5KGksT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhuKS5maWx0ZXIodShuKSkpLG89MDtvPGkubGVuZ3RoOysrbylhW2lbb11dPW5baVtvXV07cmV0dXJuIGF9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfSl9fSgpfSx7XCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCI6MTUyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIjoxNzMsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIjoxNzYsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCI6MTk2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvblwiOjE5NCxcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIjoxOTUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW5cIjoxOTcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnlcIjoxOTgsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiOjE5OSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXJcIjoyMDAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZFwiOjIwMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCI6MjAxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoXCI6MjA1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCI6MjA2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCI6MjA3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yXCI6MjEwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIjoyMTEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiOjIxMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXBcIjoyMTMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCI6MjE1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiOjIxNCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlXCI6MjE2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiOjIxNyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiOjIxOCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lXCI6MjE5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIjoyMjAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIjoyMjEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZ1wiOjIyMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIjoyMjMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtY2xhbXBlZC1hcnJheVwiOjIyNyxcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5fV0sMjc2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LnByb3RvdHlwZS5ub0xvb3A9ZnVuY3Rpb24oKXt0aGlzLl9sb29wPSExfSxvLmRlZmF1bHQucHJvdG90eXBlLmxvb3A9ZnVuY3Rpb24oKXt0aGlzLl9sb29wfHwodGhpcy5fbG9vcD0hMCx0aGlzLl9zZXR1cERvbmUmJnRoaXMuX2RyYXcoKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuaXNMb29waW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvb3B9LG8uZGVmYXVsdC5wcm90b3R5cGUucHVzaD1mdW5jdGlvbigpe3RoaXMuX3N0eWxlcy5wdXNoKHtwcm9wczp7X2NvbG9yTW9kZTp0aGlzLl9jb2xvck1vZGV9LHJlbmRlcmVyOnRoaXMuX3JlbmRlcmVyLnB1c2goKX0pfSxvLmRlZmF1bHQucHJvdG90eXBlLnBvcD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3N0eWxlcy5wb3AoKTtlPyh0aGlzLl9yZW5kZXJlci5wb3AoZS5yZW5kZXJlciksT2JqZWN0LmFzc2lnbih0aGlzLGUucHJvcHMpKTpjb25zb2xlLndhcm4oXCJwb3AoKSB3YXMgY2FsbGVkIHdpdGhvdXQgbWF0Y2hpbmcgcHVzaCgpXCIpfSxvLmRlZmF1bHQucHJvdG90eXBlLnJlZHJhdz1mdW5jdGlvbihlKXtpZighdGhpcy5faW5Vc2VyRHJhdyYmdGhpcy5fc2V0dXBEb25lKXt2YXIgdD1wYXJzZUludChlKTsoaXNOYU4odCl8fHQ8MSkmJih0PTEpO3ZhciByPXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHIuZHJhdyl7dm9pZCAwPT09ci5zZXR1cCYmci5zY2FsZShyLl9waXhlbERlbnNpdHksci5fcGl4ZWxEZW5zaXR5KTtmb3IodmFyIG49ZnVuY3Rpb24oZSl7ZS5jYWxsKHIpfSxvPTA7bzx0O28rKyl7ci5yZXNldE1hdHJpeCgpLCh0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy5ncmlkfHx0aGlzLl9hY2Nlc3NpYmxlT3V0cHV0cy50ZXh0KSYmdGhpcy5fdXBkYXRlQWNjc091dHB1dCgpLHIuX3JlbmRlcmVyLmlzUDNEJiZyLl9yZW5kZXJlci5fdXBkYXRlKCksci5fc2V0UHJvcGVydHkoXCJmcmFtZUNvdW50XCIsci5mcmFtZUNvdW50KzEpLHIuX3JlZ2lzdGVyZWRNZXRob2RzLnByZS5mb3JFYWNoKG4pLHRoaXMuX2luVXNlckRyYXc9ITA7dHJ5e3IuZHJhdygpfWZpbmFsbHl7dGhpcy5faW5Vc2VyRHJhdz0hMX1yLl9yZWdpc3RlcmVkTWV0aG9kcy5wb3N0LmZvckVhY2gobil9fX19O3ZhciBpPW8uZGVmYXVsdDtyLmRlZmF1bHQ9aX0se1wiLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoXCI6MTU0LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIjoxNzMsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaFwiOjIyOH1dLDI3NzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1wcm90b3R5cGUtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGxcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixpPShuPWUoXCIuL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBvKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxyPW5ldyBBcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspclt0XT1lW3RdO3JldHVybiByfX0oZSl8fGZ1bmN0aW9uKGUpe2lmKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSl8fFwiW29iamVjdCBBcmd1bWVudHNdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KGUpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKX0oKX1pLmRlZmF1bHQucHJvdG90eXBlLmFwcGx5TWF0cml4PWZ1bmN0aW9uKCl7dmFyIGUsdCxyPWFyZ3VtZW50c1swXWluc3RhbmNlb2YgT2JqZWN0LmdldFByb3RvdHlwZU9mKFVpbnQ4QXJyYXkpO0FycmF5LmlzQXJyYXkoYXJndW1lbnRzWzBdKXx8cj8oZT10aGlzLl9yZW5kZXJlcikuYXBwbHlNYXRyaXguYXBwbHkoZSxvKGFyZ3VtZW50c1swXSkpOih0PXRoaXMuX3JlbmRlcmVyKS5hcHBseU1hdHJpeC5hcHBseSh0LGFyZ3VtZW50cyk7cmV0dXJuIHRoaXN9LGkuZGVmYXVsdC5wcm90b3R5cGUucmVzZXRNYXRyaXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyZXIucmVzZXRNYXRyaXgoKSx0aGlzfSxpLmRlZmF1bHQucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlLHQpe3JldHVybiBpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJvdGF0ZVwiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIucm90YXRlKHRoaXMuX3RvUmFkaWFucyhlKSx0KSx0aGlzfSxpLmRlZmF1bHQucHJvdG90eXBlLnJvdGF0ZVg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Fzc2VydDNkKFwicm90YXRlWFwiKSxpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJvdGF0ZVhcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLnJvdGF0ZVgodGhpcy5fdG9SYWRpYW5zKGUpKSx0aGlzfSxpLmRlZmF1bHQucHJvdG90eXBlLnJvdGF0ZVk9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Fzc2VydDNkKFwicm90YXRlWVwiKSxpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJvdGF0ZVlcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLnJvdGF0ZVkodGhpcy5fdG9SYWRpYW5zKGUpKSx0aGlzfSxpLmRlZmF1bHQucHJvdG90eXBlLnJvdGF0ZVo9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Fzc2VydDNkKFwicm90YXRlWlwiKSxpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJvdGF0ZVpcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLnJvdGF0ZVoodGhpcy5fdG9SYWRpYW5zKGUpKSx0aGlzfSxpLmRlZmF1bHQucHJvdG90eXBlLnNjYWxlPWZ1bmN0aW9uKGUsdCxyKXtpZihpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNjYWxlXCIsYXJndW1lbnRzKSxlIGluc3RhbmNlb2YgaS5kZWZhdWx0LlZlY3Rvcil7dmFyIG49ZTtlPW4ueCx0PW4ueSxyPW4uen1lbHNlIGlmKGUgaW5zdGFuY2VvZiBBcnJheSl7dmFyIG89ZTtlPW9bMF0sdD1vWzFdLHI9b1syXXx8MX1yZXR1cm4gaXNOYU4odCk/dD1yPWU6aXNOYU4ocikmJihyPTEpLHRoaXMuX3JlbmRlcmVyLnNjYWxlLmNhbGwodGhpcy5fcmVuZGVyZXIsZSx0LHIpLHRoaXN9LGkuZGVmYXVsdC5wcm90b3R5cGUuc2hlYXJYPWZ1bmN0aW9uKGUpe2kuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2hlYXJYXCIsYXJndW1lbnRzKTt2YXIgdD10aGlzLl90b1JhZGlhbnMoZSk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmFwcGx5TWF0cml4KDEsMCxNYXRoLnRhbih0KSwxLDAsMCksdGhpc30saS5kZWZhdWx0LnByb3RvdHlwZS5zaGVhclk9ZnVuY3Rpb24oZSl7aS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzaGVhcllcIixhcmd1bWVudHMpO3ZhciB0PXRoaXMuX3RvUmFkaWFucyhlKTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuYXBwbHlNYXRyaXgoMSxNYXRoLnRhbih0KSwwLDEsMCwwKSx0aGlzfSxpLmRlZmF1bHQucHJvdG90eXBlLnRyYW5zbGF0ZT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidHJhbnNsYXRlXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5pc1AzRD90aGlzLl9yZW5kZXJlci50cmFuc2xhdGUoZSx0LHIpOnRoaXMuX3JlbmRlcmVyLnRyYW5zbGF0ZShlLHQpLHRoaXN9O3ZhciBhPWkuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb21cIjoxNTUsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1wcm90b3R5cGUtb2ZcIjoxNzUsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCI6MTgyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiOjE4NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIjoxOTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCI6MTk0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiOjE5NSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiOjE5NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiOjE5OCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCI6MTk5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiOjIwMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCI6MjAyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIjoyMDEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIjoyMDUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIjoyMDYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIjoyMDcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIjoyMTAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiOjIxMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCI6MjEyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiOjIxMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIjoyMTUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCI6MjE0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIjoyMTYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCI6MjE3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCI6MjE4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIjoyMTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiOjIyMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiOjIyMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCI6MjIyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiOjIyMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiOjIyNixcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5fV0sMjc4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGhcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLHI9bmV3IEFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKylyW3RdPWVbdF07cmV0dXJuIHJ9fShlKXx8ZnVuY3Rpb24oZSl7aWYoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKXx8XCJbb2JqZWN0IEFyZ3VtZW50c11cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpfSgpfWZ1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfW8uZGVmYXVsdC5wcm90b3R5cGUuc3RvcmVJdGVtPWZ1bmN0aW9uKGUsdCl7XCJzdHJpbmdcIiE9dHlwZW9mIGUmJmNvbnNvbGUubG9nKFwiVGhlIGFyZ3VtZW50IHRoYXQgeW91IHBhc3NlZCB0byBzdG9yZUl0ZW0oKSAtIFwiLmNvbmNhdChlLFwiIGlzIG5vdCBhIHN0cmluZy5cIikpLGUuZW5kc1dpdGgoXCJwNVR5cGVJRFwiKSYmY29uc29sZS5sb2coXCJUaGUgYXJndW1lbnQgdGhhdCB5b3UgcGFzc2VkIHRvIHN0b3JlSXRlbSgpIC0gXCIuY29uY2F0KGUsXCIgbXVzdCBub3QgZW5kIHdpdGggJ3A1VHlwZUlEJy5cIikpLHZvaWQgMD09PXQmJmNvbnNvbGUubG9nKFwiWW91IGNhbm5vdCBzdG9yZSB1bmRlZmluZWQgdmFyaWFibGVzIHVzaW5nIHN0b3JlSXRlbSgpLlwiKTt2YXIgcj1hKHQpO3N3aXRjaChyKXtjYXNlXCJudW1iZXJcIjpjYXNlXCJib29sZWFuXCI6dD10LnRvU3RyaW5nKCk7YnJlYWs7Y2FzZVwib2JqZWN0XCI6aWYodCBpbnN0YW5jZW9mIG8uZGVmYXVsdC5Db2xvcilyPVwicDUuQ29sb3JcIjtlbHNlIGlmKHQgaW5zdGFuY2VvZiBvLmRlZmF1bHQuVmVjdG9yKXtyPVwicDUuVmVjdG9yXCIsdD1bdC54LHQueSx0LnpdfXQ9SlNPTi5zdHJpbmdpZnkodCl9bG9jYWxTdG9yYWdlLnNldEl0ZW0oZSx0KTt2YXIgbj1cIlwiLmNvbmNhdChlLFwicDVUeXBlSURcIik7bG9jYWxTdG9yYWdlLnNldEl0ZW0obixyKX0sby5kZWZhdWx0LnByb3RvdHlwZS5nZXRJdGVtPWZ1bmN0aW9uKGUpe3ZhciB0PWxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpLHI9bG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJcIi5jb25jYXQoZSxcInA1VHlwZUlEXCIpKTtpZih2b2lkIDA9PT1yKWNvbnNvbGUubG9nKFwiVW5hYmxlIHRvIGRldGVybWluZSB0eXBlIG9mIGl0ZW0gc3RvcmVkIHVuZGVyIFwiLmNvbmNhdChlLFwiaW4gbG9jYWwgc3RvcmFnZS4gRGlkIHlvdSBzYXZlIHRoZSBpdGVtIHdpdGggc29tZXRoaW5nIG90aGVyIHRoYW4gc2V0SXRlbSgpP1wiKSk7ZWxzZSBpZihudWxsIT09dClzd2l0Y2gocil7Y2FzZVwibnVtYmVyXCI6dD1wYXJzZUZsb2F0KHQpO2JyZWFrO2Nhc2VcImJvb2xlYW5cIjp0PVwidHJ1ZVwiPT09dDticmVhaztjYXNlXCJvYmplY3RcIjp0PUpTT04ucGFyc2UodCk7YnJlYWs7Y2FzZVwicDUuQ29sb3JcIjp0PUpTT04ucGFyc2UodCksdD10aGlzLmNvbG9yLmFwcGx5KHRoaXMsaSh0LmxldmVscykpO2JyZWFrO2Nhc2VcInA1LlZlY3RvclwiOnQ9SlNPTi5wYXJzZSh0KSx0PXRoaXMuY3JlYXRlVmVjdG9yLmFwcGx5KHRoaXMsaSh0KSl9cmV0dXJuIHR9LG8uZGVmYXVsdC5wcm90b3R5cGUuY2xlYXJTdG9yYWdlPWZ1bmN0aW9uKCl7bG9jYWxTdG9yYWdlLmNsZWFyKCl9LG8uZGVmYXVsdC5wcm90b3R5cGUucmVtb3ZlSXRlbT1mdW5jdGlvbihlKXtcInN0cmluZ1wiIT10eXBlb2YgZSYmY29uc29sZS5sb2coXCJUaGUgYXJndW1lbnQgdGhhdCB5b3UgcGFzc2VkIHRvIHJlbW92ZUl0ZW0oKSAtIFwiLmNvbmNhdChlLFwiIGlzIG5vdCBhIHN0cmluZy5cIikpLGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGUpLGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiXCIuY29uY2F0KGUsXCJwNVR5cGVJRFwiKSl9fSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbVwiOjE1NSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmVuZHMtd2l0aFwiOjE4NCxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCI6MTk2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvblwiOjE5NCxcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIjoxOTUsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiOjIyOX1dLDI3OTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3ViXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVTdHJpbmdEaWN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlU3RyaW5nRGljdFwiLGFyZ3VtZW50cyksbmV3IG8uZGVmYXVsdC5TdHJpbmdEaWN0KGUsdCl9LG8uZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlTnVtYmVyRGljdD1mdW5jdGlvbihlLHQpe3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZU51bWJlckRpY3RcIixhcmd1bWVudHMpLG5ldyBvLmRlZmF1bHQuTnVtYmVyRGljdChlLHQpfSxvLmRlZmF1bHQuVHlwZWREaWN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUgaW5zdGFuY2VvZiBPYmplY3Q/dGhpcy5kYXRhPWU6KHRoaXMuZGF0YT17fSx0aGlzLmRhdGFbZV09dCksdGhpc30sby5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuc2l6ZT1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyh0aGlzLmRhdGEpLmxlbmd0aH0sby5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuaGFzS2V5PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmRhdGEuaGFzT3duUHJvcGVydHkoZSl9LG8uZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtpZih0aGlzLmRhdGEuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuIHRoaXMuZGF0YVtlXTtjb25zb2xlLmxvZyhcIlwiLmNvbmNhdChlLFwiIGRvZXMgbm90IGV4aXN0IGluIHRoaXMgRGljdGlvbmFyeVwiKSl9LG8uZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQpe3RoaXMuX3ZhbGlkYXRlKHQpP3RoaXMuZGF0YVtlXT10OmNvbnNvbGUubG9nKFwiVGhvc2UgdmFsdWVzIGRvbnQgd29yayBmb3IgdGhpcyBkaWN0aW9uYXJ5IHR5cGUuXCIpfSxvLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5fYWRkT2JqPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCBpbiBlKXRoaXMuc2V0KHQsZVt0XSl9LG8uZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLmNyZWF0ZT1mdW5jdGlvbihlLHQpe2UgaW5zdGFuY2VvZiBPYmplY3QmJnZvaWQgMD09PXQ/dGhpcy5fYWRkT2JqKGUpOnZvaWQgMCE9PWU/dGhpcy5zZXQoZSx0KTpjb25zb2xlLmxvZyhcIkluIG9yZGVyIHRvIGNyZWF0ZSBhIG5ldyBEaWN0aW9uYXJ5IGVudHJ5IHlvdSBtdXN0IHBhc3MgYW4gb2JqZWN0IG9yIGEga2V5LCB2YWx1ZSBwYWlyXCIpfSxvLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuZGF0YT17fX0sby5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmRhdGEuaGFzT3duUHJvcGVydHkoZSkpdGhyb3cgbmV3IEVycm9yKFwiXCIuY29uY2F0KGUsXCIgZG9lcyBub3QgZXhpc3QgaW4gdGhpcyBEaWN0aW9uYXJ5XCIpKTtkZWxldGUgdGhpcy5kYXRhW2VdfSxvLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5wcmludD1mdW5jdGlvbigpe2Zvcih2YXIgZSBpbiB0aGlzLmRhdGEpY29uc29sZS5sb2coXCJrZXk6XCIuY29uY2F0KGUsXCIgdmFsdWU6XCIpLmNvbmNhdCh0aGlzLmRhdGFbZV0pKX0sby5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuc2F2ZVRhYmxlPWZ1bmN0aW9uKGUpe3ZhciB0PVwiXCI7Zm9yKHZhciByIGluIHRoaXMuZGF0YSl0Kz1cIlwiLmNvbmNhdChyLFwiLFwiKS5jb25jYXQodGhpcy5kYXRhW3JdLFwiXFxuXCIpO3ZhciBuPW5ldyBCbG9iKFt0XSx7dHlwZTpcInRleHQvY3N2XCJ9KTtvLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShuLGV8fFwibXljc3ZcIixcImNzdlwiKX0sby5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuc2F2ZUpTT049ZnVuY3Rpb24oZSx0KXtvLmRlZmF1bHQucHJvdG90eXBlLnNhdmVKU09OKHRoaXMuZGF0YSxlLHQpfSxvLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5fdmFsaWRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuITB9LG8uZGVmYXVsdC5TdHJpbmdEaWN0PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07by5kZWZhdWx0LlR5cGVkRGljdC5hcHBseSh0aGlzLHQpfSxvLmRlZmF1bHQuU3RyaW5nRGljdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShvLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZSksby5kZWZhdWx0LlN0cmluZ0RpY3QucHJvdG90eXBlLl92YWxpZGF0ZT1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZX0sby5kZWZhdWx0Lk51bWJlckRpY3Q9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtvLmRlZmF1bHQuVHlwZWREaWN0LmFwcGx5KHRoaXMsdCl9LG8uZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG8uZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlKSxvLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUuX3ZhbGlkYXRlPWZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlfSxvLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsdCl7dGhpcy5kYXRhLmhhc093blByb3BlcnR5KGUpP3RoaXMuZGF0YVtlXSs9dDpjb25zb2xlLmxvZyhcIlRoZSBrZXkgLSBcIi5jb25jYXQoZSxcIiBkb2VzIG5vdCBleGlzdCBpbiB0aGlzIGRpY3Rpb25hcnkuXCIpKX0sby5kZWZhdWx0Lk51bWJlckRpY3QucHJvdG90eXBlLnN1Yj1mdW5jdGlvbihlLHQpe3RoaXMuYWRkKGUsLXQpfSxvLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUubXVsdD1mdW5jdGlvbihlLHQpe3RoaXMuZGF0YS5oYXNPd25Qcm9wZXJ0eShlKT90aGlzLmRhdGFbZV0qPXQ6Y29uc29sZS5sb2coXCJUaGUga2V5IC0gXCIuY29uY2F0KGUsXCIgZG9lcyBub3QgZXhpc3QgaW4gdGhpcyBkaWN0aW9uYXJ5LlwiKSl9LG8uZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5kaXY9ZnVuY3Rpb24oZSx0KXt0aGlzLmRhdGEuaGFzT3duUHJvcGVydHkoZSk/dGhpcy5kYXRhW2VdLz10OmNvbnNvbGUubG9nKFwiVGhlIGtleSAtIFwiLmNvbmNhdChlLFwiIGRvZXMgbm90IGV4aXN0IGluIHRoaXMgZGljdGlvbmFyeS5cIikpfSxvLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUuX3ZhbHVlVGVzdD1mdW5jdGlvbihlKXtpZigwPT09T2JqZWN0LmtleXModGhpcy5kYXRhKS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIHNlYXJjaCBmb3IgYSBtaW5pbXVtIG9yIG1heGltdW0gdmFsdWUgb24gYW4gZW1wdHkgTnVtYmVyRGljdFwiKTtpZigxPT09T2JqZWN0LmtleXModGhpcy5kYXRhKS5sZW5ndGgpcmV0dXJuIHRoaXMuZGF0YVtPYmplY3Qua2V5cyh0aGlzLmRhdGEpWzBdXTt2YXIgdD10aGlzLmRhdGFbT2JqZWN0LmtleXModGhpcy5kYXRhKVswXV07Zm9yKHZhciByIGluIHRoaXMuZGF0YSl0aGlzLmRhdGFbcl0qZTx0KmUmJih0PXRoaXMuZGF0YVtyXSk7cmV0dXJuIHR9LG8uZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5taW5WYWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl92YWx1ZVRlc3QoMSl9LG8uZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5tYXhWYWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl92YWx1ZVRlc3QoLTEpfSxvLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUuX2tleVRlc3Q9ZnVuY3Rpb24oZSl7aWYoMD09PU9iamVjdC5rZXlzKHRoaXMuZGF0YSkubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byB1c2UgbWluVmFsdWUgb24gYW4gZW1wdHkgTnVtYmVyRGljdFwiKTtpZigxPT09T2JqZWN0LmtleXModGhpcy5kYXRhKS5sZW5ndGgpcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZGF0YSlbMF07Zm9yKHZhciB0PU9iamVjdC5rZXlzKHRoaXMuZGF0YSlbMF0scj0xO3I8T2JqZWN0LmtleXModGhpcy5kYXRhKS5sZW5ndGg7cisrKU9iamVjdC5rZXlzKHRoaXMuZGF0YSlbcl0qZTx0KmUmJih0PU9iamVjdC5rZXlzKHRoaXMuZGF0YSlbcl0pO3JldHVybiB0fSxvLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUubWluS2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2tleVRlc3QoMSl9LG8uZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5tYXhLZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa2V5VGVzdCgtMSl9O3ZhciBpPW8uZGVmYXVsdC5UeXBlZERpY3Q7ci5kZWZhdWx0PWl9LHtcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIjoxNDksXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXNcIjoxNzYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YlwiOjE5Mn1dLDI4MDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb21cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIudXJsXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sZj0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gaChlKXtyZXR1cm4oaD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24geShlLHQscil7KHQuX3VzZXJOb2RlP3QuX3VzZXJOb2RlOmRvY3VtZW50LmJvZHkpLmFwcGVuZENoaWxkKGUpO3ZhciBuPXI/bmV3IGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQoZSx0KTpuZXcgZi5kZWZhdWx0LkVsZW1lbnQoZSx0KTtyZXR1cm4gdC5fZWxlbWVudHMucHVzaChuKSxufWZ1bmN0aW9uIG8oZSx0LHIsbil7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KTtcInN0cmluZ1wiPT10eXBlb2Yocj1yfHxcIlwiKSYmKHI9W3JdKTt2YXIgaT0hMCxhPSExLHM9dm9pZCAwO3RyeXtmb3IodmFyIGwsdT1yW1N5bWJvbC5pdGVyYXRvcl0oKTshKGk9KGw9dS5uZXh0KCkpLmRvbmUpO2k9ITApe3ZhciBjPWwudmFsdWUsZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIpO2Quc2V0QXR0cmlidXRlKFwic3JjXCIsYyksby5hcHBlbmRDaGlsZChkKX19Y2F0Y2goZSl7YT0hMCxzPWV9ZmluYWxseXt0cnl7aXx8bnVsbD09dS5yZXR1cm58fHUucmV0dXJuKCl9ZmluYWxseXtpZihhKXRocm93IHN9fWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pe28uYWRkRXZlbnRMaXN0ZW5lcihcImNhbnBsYXl0aHJvdWdoXCIsZnVuY3Rpb24gZSgpe24oKSxvLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjYW5wbGF5dGhyb3VnaFwiLGUpfSl9dmFyIGY9eShvLGUsITApO3JldHVybiBmLmxvYWRlZG1ldGFkYXRhPSExLG8uYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRlZG1ldGFkYXRhXCIsZnVuY3Rpb24oKXtmLndpZHRoPW8udmlkZW9XaWR0aCxmLmhlaWdodD1vLnZpZGVvSGVpZ2h0LDA9PT1mLmVsdC53aWR0aCYmKGYuZWx0LndpZHRoPW8udmlkZW9XaWR0aCksMD09PWYuZWx0LmhlaWdodCYmKGYuZWx0LmhlaWdodD1vLnZpZGVvSGVpZ2h0KSxmLnByZXNldFBsYXliYWNrUmF0ZSYmKGYuZWx0LnBsYXliYWNrUmF0ZT1mLnByZXNldFBsYXliYWNrUmF0ZSxkZWxldGUgZi5wcmVzZXRQbGF5YmFja1JhdGUpLGYubG9hZGVkbWV0YWRhdGE9ITB9KSxmfWYuZGVmYXVsdC5wcm90b3R5cGUuc2VsZWN0PWZ1bmN0aW9uKGUsdCl7Zi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzZWxlY3RcIixhcmd1bWVudHMpO3ZhciByPXRoaXMuX2dldENvbnRhaW5lcih0KS5xdWVyeVNlbGVjdG9yKGUpO3JldHVybiByP3RoaXMuX3dyYXBFbGVtZW50KHIpOm51bGx9LGYuZGVmYXVsdC5wcm90b3R5cGUuc2VsZWN0QWxsPWZ1bmN0aW9uKGUsdCl7Zi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzZWxlY3RBbGxcIixhcmd1bWVudHMpO3ZhciByPVtdLG49dGhpcy5fZ2V0Q29udGFpbmVyKHQpLnF1ZXJ5U2VsZWN0b3JBbGwoZSk7aWYobilmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKyl7dmFyIGk9dGhpcy5fd3JhcEVsZW1lbnQobltvXSk7ci5wdXNoKGkpfXJldHVybiByfSxmLmRlZmF1bHQucHJvdG90eXBlLl9nZXRDb250YWluZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9ZG9jdW1lbnQ7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/dD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpfHxkb2N1bWVudDplIGluc3RhbmNlb2YgZi5kZWZhdWx0LkVsZW1lbnQ/dD1lLmVsdDplIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQmJih0PWUpLHR9LGYuZGVmYXVsdC5wcm90b3R5cGUuX3dyYXBFbGVtZW50PWZ1bmN0aW9uKGUpe3ZhciB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUuY2hpbGRyZW4pO2lmKFwiSU5QVVRcIiE9PWUudGFnTmFtZXx8XCJjaGVja2JveFwiIT09ZS50eXBlKXJldHVyblwiVklERU9cIj09PWUudGFnTmFtZXx8XCJBVURJT1wiPT09ZS50YWdOYW1lP25ldyBmLmRlZmF1bHQuTWVkaWFFbGVtZW50KGUsdGhpcyk6XCJTRUxFQ1RcIj09PWUudGFnTmFtZT90aGlzLmNyZWF0ZVNlbGVjdChuZXcgZi5kZWZhdWx0LkVsZW1lbnQoZSx0aGlzKSk6MDx0Lmxlbmd0aCYmdC5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm5cIklOUFVUXCI9PT1lLnRhZ05hbWV8fFwiTEFCRUxcIj09PWUudGFnTmFtZX0pP3RoaXMuY3JlYXRlUmFkaW8obmV3IGYuZGVmYXVsdC5FbGVtZW50KGUsdGhpcykpOm5ldyBmLmRlZmF1bHQuRWxlbWVudChlLHRoaXMpO3ZhciByPW5ldyBmLmRlZmF1bHQuRWxlbWVudChlLHRoaXMpO3JldHVybiByLmNoZWNrZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lbHQuY2hlY2tlZDoodGhpcy5lbHQuY2hlY2tlZD0hIWFyZ3VtZW50c1swXSx0aGlzKX0scn0sZi5kZWZhdWx0LnByb3RvdHlwZS5yZW1vdmVFbGVtZW50cz1mdW5jdGlvbihlKXtmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlbW92ZUVsZW1lbnRzXCIsYXJndW1lbnRzKTt0aGlzLl9lbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIShlLmVsdCBpbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50KX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5yZW1vdmUoKX0pfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuY2hhbmdlZD1mdW5jdGlvbihlKXtyZXR1cm4gZi5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwiY2hhbmdlXCIsZSx0aGlzKSx0aGlzfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuaW5wdXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGYuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcImlucHV0XCIsZSx0aGlzKSx0aGlzfSxmLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZURpdj1mdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcIlwiLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtyZXR1cm4gdC5pbm5lckhUTUw9ZSx5KHQsdGhpcyl9LGYuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlUD1mdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcIlwiLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7cmV0dXJuIHQuaW5uZXJIVE1MPWUseSh0LHRoaXMpfSxmLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVNwYW49ZnVuY3Rpb24oKXt2YXIgZT0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCJcIix0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3JldHVybiB0LmlubmVySFRNTD1lLHkodCx0aGlzKX0sZi5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVJbWc9ZnVuY3Rpb24oKXtmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUltZ1wiLGFyZ3VtZW50cyk7dmFyIHQscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpLG49YXJndW1lbnRzO3JldHVybiAxPG4ubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgblsxXSYmKHIuYWx0PW5bMV0pLDI8bi5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBuWzJdJiYoci5jcm9zc09yaWdpbj1uWzJdKSxyLnNyYz1uWzBdLHQ9eShyLHRoaXMpLHIuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbigpe3Qud2lkdGg9ci5vZmZzZXRXaWR0aHx8ci53aWR0aCx0LmhlaWdodD1yLm9mZnNldEhlaWdodHx8ci5oZWlnaHQ7dmFyIGU9bltuLmxlbmd0aC0xXTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiZlKHQpfSksdH0sZi5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVBPWZ1bmN0aW9uKGUsdCxyKXtmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUFcIixhcmd1bWVudHMpO3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO3JldHVybiBuLmhyZWY9ZSxuLmlubmVySFRNTD10LHImJihuLnRhcmdldD1yKSx5KG4sdGhpcyl9LGYuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlU2xpZGVyPWZ1bmN0aW9uKGUsdCxyLG4pe2YuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlU2xpZGVyXCIsYXJndW1lbnRzKTt2YXIgbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7cmV0dXJuIG8udHlwZT1cInJhbmdlXCIsby5taW49ZSxvLm1heD10LDA9PT1uP28uc3RlcD0xZS0xODpuJiYoby5zdGVwPW4pLFwibnVtYmVyXCI9PXR5cGVvZiByJiYoby52YWx1ZT1yKSx5KG8sdGhpcyl9LGYuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlQnV0dG9uPWZ1bmN0aW9uKGUsdCl7Zi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVCdXR0b25cIixhcmd1bWVudHMpO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7cmV0dXJuIHIuaW5uZXJIVE1MPWUsdCYmKHIudmFsdWU9dCkseShyLHRoaXMpfSxmLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUNoZWNrYm94PWZ1bmN0aW9uKCl7Zi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVDaGVja2JveFwiLGFyZ3VtZW50cyk7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSx0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTt0LnR5cGU9XCJjaGVja2JveFwiO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtyLmFwcGVuZENoaWxkKHQpLGUuYXBwZW5kQ2hpbGQocik7dmFyIG49eShlLHRoaXMpO2lmKG4uY2hlY2tlZD1mdW5jdGlvbigpe3ZhciBlPW4uZWx0LmZpcnN0RWxlbWVudENoaWxkLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07aWYoZSl7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGUuY2hlY2tlZDtlLmNoZWNrZWQ9ISFhcmd1bWVudHNbMF19cmV0dXJuIG59LHRoaXMudmFsdWU9ZnVuY3Rpb24oZSl7cmV0dXJuIG4udmFsdWU9ZSx0aGlzfSxhcmd1bWVudHNbMF0pe24udmFsdWUoYXJndW1lbnRzWzBdKTt2YXIgbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtvLmlubmVySFRNTD1hcmd1bWVudHNbMF0sci5hcHBlbmRDaGlsZChvKX1yZXR1cm4gYXJndW1lbnRzWzFdJiYodC5jaGVja2VkPSEwKSxufSxmLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVNlbGVjdD1mdW5jdGlvbigpe3ZhciBlO2YuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlU2VsZWN0XCIsYXJndW1lbnRzKTt2YXIgdD1hcmd1bWVudHNbMF07aWYodCBpbnN0YW5jZW9mIGYuZGVmYXVsdC5FbGVtZW50JiZ0LmVsdCBpbnN0YW5jZW9mIEhUTUxTZWxlY3RFbGVtZW50KWU9dCx0aGlzLmVsdD10LmVsdDtlbHNlIGlmKHQgaW5zdGFuY2VvZiBIVE1MU2VsZWN0RWxlbWVudCllPXkodCx0aGlzKSx0aGlzLmVsdD10O2Vsc2V7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTt0JiZcImJvb2xlYW5cIj09dHlwZW9mIHQmJnIuc2V0QXR0cmlidXRlKFwibXVsdGlwbGVcIixcInRydWVcIiksZT15KHIsdGhpcyksdGhpcy5lbHQ9cn1yZXR1cm4gZS5vcHRpb249ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZih2b2lkIDAhPT1lKXtmb3IodmFyIG49MDtuPHRoaXMuZWx0Lmxlbmd0aDtuKz0xKWlmKHRoaXMuZWx0W25dLmlubmVySFRNTD09PWUpe3I9bjticmVha31pZih2b2lkIDAhPT1yKSExPT09dD90aGlzLmVsdC5yZW1vdmUocik6dGhpcy5lbHRbcl0udmFsdWU9dDtlbHNle3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7by5pbm5lckhUTUw9ZSxvLnZhbHVlPXZvaWQgMD09PXQ/ZTp0LHRoaXMuZWx0LmFwcGVuZENoaWxkKG8pLHRoaXMuX3BJbnN0Ll9lbGVtZW50cy5wdXNoKG8pfX19LGUuc2VsZWN0ZWQ9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT09ZSl7Zm9yKHZhciB0PTA7dDx0aGlzLmVsdC5sZW5ndGg7dCs9MSl0aGlzLmVsdFt0XS52YWx1ZS50b1N0cmluZygpPT09ZS50b1N0cmluZygpJiYodGhpcy5lbHQuc2VsZWN0ZWRJbmRleD10KTtyZXR1cm4gdGhpc31pZih0aGlzLmVsdC5nZXRBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiKSl7dmFyIHI9W10sbj0hMCxvPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIGEscz10aGlzLmVsdC5zZWxlY3RlZE9wdGlvbnNbU3ltYm9sLml0ZXJhdG9yXSgpOyEobj0oYT1zLm5leHQoKSkuZG9uZSk7bj0hMCl7dmFyIGw9YS52YWx1ZTtyLnB1c2gobC52YWx1ZSl9fWNhdGNoKGUpe289ITAsaT1lfWZpbmFsbHl7dHJ5e258fG51bGw9PXMucmV0dXJufHxzLnJldHVybigpfWZpbmFsbHl7aWYobyl0aHJvdyBpfX1yZXR1cm4gcn1yZXR1cm4gdGhpcy5lbHQudmFsdWV9LGUuZGlzYWJsZT1mdW5jdGlvbihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlmb3IodmFyIHQ9MDt0PHRoaXMuZWx0Lmxlbmd0aDt0KyspdGhpcy5lbHRbdF0udmFsdWUudG9TdHJpbmcoKT09PWUmJih0aGlzLmVsdFt0XS5kaXNhYmxlZD0hMCx0aGlzLmVsdFt0XS5zZWxlY3RlZD0hMSk7ZWxzZSB0aGlzLmVsdC5kaXNhYmxlZD0hMDtyZXR1cm4gdGhpc30sZX0sZi5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVSYWRpbz1mdW5jdGlvbigpe3ZhciBlLHQscj1hcmd1bWVudHNbMF07ciBpbnN0YW5jZW9mIEhUTUxEaXZFbGVtZW50fHxyIGluc3RhbmNlb2YgSFRNTFNwYW5FbGVtZW50PyhlPXIsXCJzdHJpbmdcIj09dHlwZW9mIGFyZ3VtZW50c1sxXSYmKHQ9YXJndW1lbnRzWzFdKSk6KFwic3RyaW5nXCI9PXR5cGVvZiByJiYodD1yKSxlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO3ZhciBwPXkodGhpcy5lbHQ9ZSx0aGlzKTtwLl9uYW1lPXR8fFwicmFkaW9PcHRpb25cIjtmdW5jdGlvbiBuKGUpe3JldHVybiBlIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCYmXCJyYWRpb1wiPT09ZS50eXBlfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBIVE1MTGFiZWxFbGVtZW50fXJldHVybiBwLl9nZXRPcHRpb25zQXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmVsdC5jaGlsZHJlbikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBuKGUpfHxkKGUpJiZuKGUuZmlyc3RFbGVtZW50Q2hpbGQpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuKGUpP2U6ZS5maXJzdEVsZW1lbnRDaGlsZH0pfSxwLm9wdGlvbj1mdW5jdGlvbihlLHQpe3ZhciByLG4sbyxpPSEwLGE9ITEscz12b2lkIDA7dHJ5e2Zvcih2YXIgbCx1PXAuX2dldE9wdGlvbnNBcnJheSgpW1N5bWJvbC5pdGVyYXRvcl0oKTshKGk9KGw9dS5uZXh0KCkpLmRvbmUpO2k9ITApe3ZhciBjPWwudmFsdWU7aWYoYy52YWx1ZT09PWUpe3I9YzticmVha319fWNhdGNoKGUpe2E9ITAscz1lfWZpbmFsbHl7dHJ5e2l8fG51bGw9PXUucmV0dXJufHx1LnJldHVybigpfWZpbmFsbHl7aWYoYSl0aHJvdyBzfX1yZXR1cm4gdm9pZCAwPT09ciYmKChyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKSkuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwicmFkaW9cIiksci5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGUpKSxyLnNldEF0dHJpYnV0ZShcIm5hbWVcIixwLl9uYW1lKSxkKHIucGFyZW50RWxlbWVudCk/bj1yLnBhcmVudEVsZW1lbnQ6KG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpKS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmJlZ2luXCIsciksbi5sYXN0RWxlbWVudENoaWxkIGluc3RhbmNlb2YgSFRNTFNwYW5FbGVtZW50P289bi5sYXN0RWxlbWVudENoaWxkOihvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpLHIuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJlbmRcIixvKSksby5pbm5lckhUTUw9dm9pZCAwPT09dD9lOnQsdGhpcy5lbHQuYXBwZW5kQ2hpbGQobikscn0scC5yZW1vdmU9ZnVuY3Rpb24oZSl7dmFyIHQ9ITAscj0hMSxuPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9cC5fZ2V0T3B0aW9uc0FycmF5KClbU3ltYm9sLml0ZXJhdG9yXSgpOyEodD0obz1pLm5leHQoKSkuZG9uZSk7dD0hMCl7dmFyIGE9by52YWx1ZTtpZihhLnZhbHVlPT09ZSlyZXR1cm4gdm9pZChkKGEucGFyZW50RWxlbWVudCk/YS5wYXJlbnRFbGVtZW50LnJlbW92ZSgpOmEucmVtb3ZlKCkpfX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1pLnJldHVybnx8aS5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19fSxwLnZhbHVlPWZ1bmN0aW9uKCl7dmFyIGU9XCJcIix0PSEwLHI9ITEsbj12b2lkIDA7dHJ5e2Zvcih2YXIgbyxpPXAuX2dldE9wdGlvbnNBcnJheSgpW1N5bWJvbC5pdGVyYXRvcl0oKTshKHQ9KG89aS5uZXh0KCkpLmRvbmUpO3Q9ITApe3ZhciBhPW8udmFsdWU7aWYoYS5jaGVja2VkKXtlPWEudmFsdWU7YnJlYWt9fX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1pLnJldHVybnx8aS5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19cmV0dXJuIGV9LHAuc2VsZWN0ZWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9bnVsbDtpZih2b2lkIDA9PT1lKXt2YXIgcj0hMCxuPSExLG89dm9pZCAwO3RyeXtmb3IodmFyIGksYT1wLl9nZXRPcHRpb25zQXJyYXkoKVtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShpPWEubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1pLnZhbHVlO2lmKHMuY2hlY2tlZCl7dD1zO2JyZWFrfX19Y2F0Y2goZSl7bj0hMCxvPWV9ZmluYWxseXt0cnl7cnx8bnVsbD09YS5yZXR1cm58fGEucmV0dXJuKCl9ZmluYWxseXtpZihuKXRocm93IG99fX1lbHNle3ZhciBsPSEwLHU9ITEsYz12b2lkIDA7dHJ5e2Zvcih2YXIgZCxmPXAuX2dldE9wdGlvbnNBcnJheSgpW1N5bWJvbC5pdGVyYXRvcl0oKTshKGw9KGQ9Zi5uZXh0KCkpLmRvbmUpO2w9ITApe3ZhciBoPWQudmFsdWU7aC52YWx1ZT09PWUmJihoLnNldEF0dHJpYnV0ZShcImNoZWNrZWRcIiwhMCksdD1oKX19Y2F0Y2goZSl7dT0hMCxjPWV9ZmluYWxseXt0cnl7bHx8bnVsbD09Zi5yZXR1cm58fGYucmV0dXJuKCl9ZmluYWxseXtpZih1KXRocm93IGN9fX1yZXR1cm4gdH0scC5kaXNhYmxlPWZ1bmN0aW9uKCl7dmFyIGU9ISgwPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSl8fGFyZ3VtZW50c1swXSx0PSEwLHI9ITEsbj12b2lkIDA7dHJ5e2Zvcih2YXIgbyxpPXAuX2dldE9wdGlvbnNBcnJheSgpW1N5bWJvbC5pdGVyYXRvcl0oKTshKHQ9KG89aS5uZXh0KCkpLmRvbmUpO3Q9ITApe28udmFsdWUuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIixlKX19Y2F0Y2goZSl7cj0hMCxuPWV9ZmluYWxseXt0cnl7dHx8bnVsbD09aS5yZXR1cm58fGkucmV0dXJuKCl9ZmluYWxseXtpZihyKXRocm93IG59fX0scH0sZi5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVDb2xvclBpY2tlcj1mdW5jdGlvbihlKXtmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUNvbG9yUGlja2VyXCIsYXJndW1lbnRzKTt2YXIgdCxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtyZXR1cm4gci50eXBlPVwiY29sb3JcIixlP2UgaW5zdGFuY2VvZiBmLmRlZmF1bHQuQ29sb3I/ci52YWx1ZT1lLnRvU3RyaW5nKFwiI3JyZ2diYlwiKTooZi5kZWZhdWx0LnByb3RvdHlwZS5fY29sb3JNb2RlPVwicmdiXCIsZi5kZWZhdWx0LnByb3RvdHlwZS5fY29sb3JNYXhlcz17cmdiOlsyNTUsMjU1LDI1NSwyNTVdLGhzYjpbMzYwLDEwMCwxMDAsMV0saHNsOlszNjAsMTAwLDEwMCwxXX0sci52YWx1ZT1mLmRlZmF1bHQucHJvdG90eXBlLmNvbG9yKGUpLnRvU3RyaW5nKFwiI3JyZ2diYlwiKSk6ci52YWx1ZT1cIiMwMDAwMDBcIiwodD15KHIsdGhpcykpLmNvbG9yPWZ1bmN0aW9uKCl7cmV0dXJuIGUmJihlLm1vZGUmJihmLmRlZmF1bHQucHJvdG90eXBlLl9jb2xvck1vZGU9ZS5tb2RlKSxlLm1heGVzJiYoZi5kZWZhdWx0LnByb3RvdHlwZS5fY29sb3JNYXhlcz1lLm1heGVzKSksZi5kZWZhdWx0LnByb3RvdHlwZS5jb2xvcih0aGlzLmVsdC52YWx1ZSl9LHR9LGYuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlSW5wdXQ9ZnVuY3Rpb24oKXt2YXIgZT0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCJcIix0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpcInRleHRcIjtmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUlucHV0XCIsYXJndW1lbnRzKTt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7cmV0dXJuIHIuc2V0QXR0cmlidXRlKFwidmFsdWVcIixlKSxyLnNldEF0dHJpYnV0ZShcInR5cGVcIix0KSx5KHIsdGhpcyl9LGYuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlRmlsZUlucHV0PWZ1bmN0aW9uKHMpe3ZhciBlPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV07Zi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVGaWxlSW5wdXRcIixhcmd1bWVudHMpO2lmKHdpbmRvdy5GaWxlJiZ3aW5kb3cuRmlsZVJlYWRlciYmd2luZG93LkZpbGVMaXN0JiZ3aW5kb3cuQmxvYil7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO3JldHVybiB0LnNldEF0dHJpYnV0ZShcInR5cGVcIixcImZpbGVcIiksZSYmdC5zZXRBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiLCEwKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixmdW5jdGlvbihlKXt2YXIgdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIG8saT1lLnRhcmdldC5maWxlc1tTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShvPWkubmV4dCgpKS5kb25lKTt0PSEwKXt2YXIgYT1vLnZhbHVlO2YuZGVmYXVsdC5GaWxlLl9sb2FkKGEscyl9fWNhdGNoKGUpe3I9ITAsbj1lfWZpbmFsbHl7dHJ5e3R8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBufX19LCExKSx5KHQsdGhpcyl9Y29uc29sZS5sb2coXCJUaGUgRmlsZSBBUElzIGFyZSBub3QgZnVsbHkgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3Nlci4gQ2Fubm90IGNyZWF0ZSBlbGVtZW50LlwiKX0sZi5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVWaWRlbz1mdW5jdGlvbihlLHQpe3JldHVybiBmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZVZpZGVvXCIsYXJndW1lbnRzKSxvKHRoaXMsXCJ2aWRlb1wiLGUsdCl9LGYuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlQXVkaW89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVBdWRpb1wiLGFyZ3VtZW50cyksbyh0aGlzLFwiYXVkaW9cIixlLHQpfSxmLmRlZmF1bHQucHJvdG90eXBlLlZJREVPPVwidmlkZW9cIixmLmRlZmF1bHQucHJvdG90eXBlLkFVRElPPVwiYXVkaW9cIix2b2lkIDA9PT1uYXZpZ2F0b3IubWVkaWFEZXZpY2VzJiYobmF2aWdhdG9yLm1lZGlhRGV2aWNlcz17fSksdm9pZCAwPT09bmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEmJihuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYT1mdW5jdGlvbihyKXt2YXIgbj1uYXZpZ2F0b3Iud2Via2l0R2V0VXNlck1lZGlhfHxuYXZpZ2F0b3IubW96R2V0VXNlck1lZGlhO3JldHVybiBuP25ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7bi5jYWxsKG5hdmlnYXRvcixyLGUsdCl9KTpQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoXCJnZXRVc2VyTWVkaWEgaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgYnJvd3NlclwiKSl9KSxmLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUNhcHR1cmU9ZnVuY3Rpb24oKXtpZihmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUNhcHR1cmVcIixhcmd1bWVudHMpLCFuYXZpZ2F0b3IubWVkaWFEZXZpY2VzfHwhbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcImdldFVzZXJNZWRpYSBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTt2YXIgZSx0LHI9ITAsbj0hMCxvPSEwLGk9ITEsYT12b2lkIDA7dHJ5e2Zvcih2YXIgcyxsPWFyZ3VtZW50c1tTeW1ib2wuaXRlcmF0b3JdKCk7IShvPShzPWwubmV4dCgpKS5kb25lKTtvPSEwKXt2YXIgdT1zLnZhbHVlO3U9PT1mLmRlZmF1bHQucHJvdG90eXBlLlZJREVPP249ITE6dT09PWYuZGVmYXVsdC5wcm90b3R5cGUuQVVESU8/cj0hMTpcIm9iamVjdFwiPT09aCh1KT9lPXU6XCJmdW5jdGlvblwiPT10eXBlb2YgdSYmKHQ9dSl9fWNhdGNoKGUpe2k9ITAsYT1lfWZpbmFsbHl7dHJ5e298fG51bGw9PWwucmV0dXJufHxsLnJldHVybigpfWZpbmFsbHl7aWYoaSl0aHJvdyBhfX1lPWV8fHt2aWRlbzpyLGF1ZGlvOm59O3ZhciBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ2aWRlb1wiKTtjLnNldEF0dHJpYnV0ZShcInBsYXlzaW5saW5lXCIsXCJcIiksbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoZSkudGhlbihmdW5jdGlvbih0KXt0cnl7XCJzcmNPYmplY3RcImluIGM/Yy5zcmNPYmplY3Q9dDpjLnNyYz13aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTCh0KX1jYXRjaChlKXtjLnNyYz10fX0sY29uc29sZS5sb2cpO3ZhciBkPXkoYyx0aGlzLCEwKTtyZXR1cm4gZC5sb2FkZWRtZXRhZGF0YT0hMSxjLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkZWRtZXRhZGF0YVwiLGZ1bmN0aW9uKCl7Yy5wbGF5KCksYy53aWR0aD8oZC53aWR0aD1jLndpZHRoLGQuaGVpZ2h0PWMuaGVpZ2h0KTooZC53aWR0aD1kLmVsdC53aWR0aD1jLnZpZGVvV2lkdGgsZC5oZWlnaHQ9ZC5lbHQuaGVpZ2h0PWMudmlkZW9IZWlnaHQpLGQubG9hZGVkbWV0YWRhdGE9ITAsdCYmdChjLnNyY09iamVjdCl9KSxkfSxmLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnQ9ZnVuY3Rpb24oZSx0KXtmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUVsZW1lbnRcIixhcmd1bWVudHMpO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZSk7cmV0dXJuIHZvaWQgMCE9PXQmJihyLmlubmVySFRNTD10KSx5KHIsdGhpcyl9LGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5hZGRDbGFzcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lbHQuY2xhc3NOYW1lP3RoaXMuaGFzQ2xhc3MoZSl8fCh0aGlzLmVsdC5jbGFzc05hbWU9dGhpcy5lbHQuY2xhc3NOYW1lK1wiIFwiK2UpOnRoaXMuZWx0LmNsYXNzTmFtZT1lLHRoaXN9LGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmVDbGFzcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lbHQuY2xhc3NMaXN0LnJlbW92ZShlKSx0aGlzfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuaGFzQ2xhc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWx0LmNsYXNzTGlzdC5jb250YWlucyhlKX0sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvZ2dsZUNsYXNzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVsdC5jbGFzc0xpc3QuY29udGFpbnMoZSk/dGhpcy5lbHQuY2xhc3NMaXN0LnJlbW92ZShlKTp0aGlzLmVsdC5jbGFzc0xpc3QuYWRkKGUpLHRoaXN9LGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5jaGlsZD1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZT90aGlzLmVsdC5jaGlsZE5vZGVzOihcInN0cmluZ1wiPT10eXBlb2YgZT8oXCIjXCI9PT1lWzBdJiYoZT1lLnN1YnN0cmluZygxKSksZT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChlKSk6ZSBpbnN0YW5jZW9mIGYuZGVmYXVsdC5FbGVtZW50JiYoZT1lLmVsdCksZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiZ0aGlzLmVsdC5hcHBlbmRDaGlsZChlKSx0aGlzKX0sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmNlbnRlcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmVsdC5zdHlsZS5kaXNwbGF5LHI9XCJub25lXCI9PT10aGlzLmVsdC5zdHlsZS5kaXNwbGF5LG49XCJub25lXCI9PT10aGlzLnBhcmVudCgpLnN0eWxlLmRpc3BsYXksbz17eDp0aGlzLmVsdC5vZmZzZXRMZWZ0LHk6dGhpcy5lbHQub2Zmc2V0VG9wfTtyJiZ0aGlzLnNob3coKSxuJiZ0aGlzLnBhcmVudCgpLnNob3coKSx0aGlzLmVsdC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIix0aGlzLnBvc2l0aW9uKDAsMCk7dmFyIGk9TWF0aC5hYnModGhpcy5wYXJlbnQoKS5vZmZzZXRXaWR0aC10aGlzLmVsdC5vZmZzZXRXaWR0aCksYT1NYXRoLmFicyh0aGlzLnBhcmVudCgpLm9mZnNldEhlaWdodC10aGlzLmVsdC5vZmZzZXRIZWlnaHQpO3JldHVyblwiYm90aFwiPT09ZXx8dm9pZCAwPT09ZT90aGlzLnBvc2l0aW9uKGkvMit0aGlzLnBhcmVudCgpLm9mZnNldExlZnQsYS8yK3RoaXMucGFyZW50KCkub2Zmc2V0VG9wKTpcImhvcml6b250YWxcIj09PWU/dGhpcy5wb3NpdGlvbihpLzIrdGhpcy5wYXJlbnQoKS5vZmZzZXRMZWZ0LG8ueSk6XCJ2ZXJ0aWNhbFwiPT09ZSYmdGhpcy5wb3NpdGlvbihvLngsYS8yK3RoaXMucGFyZW50KCkub2Zmc2V0VG9wKSx0aGlzLnN0eWxlKFwiZGlzcGxheVwiLHQpLHImJnRoaXMuaGlkZSgpLG4mJnRoaXMucGFyZW50KCkuaGlkZSgpLHRoaXN9LGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5odG1sPWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMuZWx0LmlubmVySFRNTDooYXJndW1lbnRzWzFdP3RoaXMuZWx0Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLGFyZ3VtZW50c1swXSk6dGhpcy5lbHQuaW5uZXJIVE1MPWFyZ3VtZW50c1swXSx0aGlzKX0sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnBvc2l0aW9uPWZ1bmN0aW9uKCl7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJue3g6dGhpcy5lbHQub2Zmc2V0TGVmdCx5OnRoaXMuZWx0Lm9mZnNldFRvcH07dmFyIGU9XCJhYnNvbHV0ZVwiO3JldHVyblwic3RhdGljXCIhPT1hcmd1bWVudHNbMl0mJlwiZml4ZWRcIiE9PWFyZ3VtZW50c1syXSYmXCJyZWxhdGl2ZVwiIT09YXJndW1lbnRzWzJdJiZcInN0aWNreVwiIT09YXJndW1lbnRzWzJdJiZcImluaXRpYWxcIiE9PWFyZ3VtZW50c1syXSYmXCJpbmhlcml0XCIhPT1hcmd1bWVudHNbMl18fChlPWFyZ3VtZW50c1syXSksdGhpcy5lbHQuc3R5bGUucG9zaXRpb249ZSx0aGlzLmVsdC5zdHlsZS5sZWZ0PWFyZ3VtZW50c1swXStcInB4XCIsdGhpcy5lbHQuc3R5bGUudG9wPWFyZ3VtZW50c1sxXStcInB4XCIsdGhpcy54PWFyZ3VtZW50c1swXSx0aGlzLnk9YXJndW1lbnRzWzFdLHRoaXN9LGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5fdHJhbnNsYXRlPWZ1bmN0aW9uKCl7dGhpcy5lbHQuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiO3ZhciBlPVwiXCI7cmV0dXJuIHRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybSYmKGU9KGU9dGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtLnJlcGxhY2UoL3RyYW5zbGF0ZTNkXFwoLipcXCkvZyxcIlwiKSkucmVwbGFjZSgvdHJhbnNsYXRlW1gtWl0/XFwoLipcXCkvZyxcIlwiKSksMj09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtPVwidHJhbnNsYXRlKFwiK2FyZ3VtZW50c1swXStcInB4LCBcIithcmd1bWVudHNbMV0rXCJweClcIjoyPGFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm09XCJ0cmFuc2xhdGUzZChcIithcmd1bWVudHNbMF0rXCJweCxcIithcmd1bWVudHNbMV0rXCJweCxcIithcmd1bWVudHNbMl0rXCJweClcIix0aGlzLmVsdC5wYXJlbnRFbGVtZW50LnN0eWxlLnBlcnNwZWN0aXZlPTM9PT1hcmd1bWVudHMubGVuZ3RoP1wiMTAwMHB4XCI6YXJndW1lbnRzWzNdK1wicHhcIiksdGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtKz1lLHRoaXN9LGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5fcm90YXRlPWZ1bmN0aW9uKCl7dmFyIGU9XCJcIjtyZXR1cm4gdGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtJiYoZT0oZT10aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm0ucmVwbGFjZSgvcm90YXRlM2RcXCguKlxcKS9nLFwiXCIpKS5yZXBsYWNlKC9yb3RhdGVbWC1aXT9cXCguKlxcKS9nLFwiXCIpKSwxPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm09XCJyb3RhdGUoXCIrYXJndW1lbnRzWzBdK1wiZGVnKVwiOjI9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybT1cInJvdGF0ZShcIithcmd1bWVudHNbMF0rXCJkZWcsIFwiK2FyZ3VtZW50c1sxXStcImRlZylcIjozPT09YXJndW1lbnRzLmxlbmd0aCYmKHRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybT1cInJvdGF0ZVgoXCIrYXJndW1lbnRzWzBdK1wiZGVnKVwiLHRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybSs9XCJyb3RhdGVZKFwiK2FyZ3VtZW50c1sxXStcImRlZylcIix0aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm0rPVwicm90YXRlWihcIithcmd1bWVudHNbMl0rXCJkZWcpXCIpLHRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybSs9ZSx0aGlzfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuc3R5bGU9ZnVuY3Rpb24oZSx0KXtpZih0IGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yJiYodD1cInJnYmEoXCIrdC5sZXZlbHNbMF0rXCIsXCIrdC5sZXZlbHNbMV0rXCIsXCIrdC5sZXZlbHNbMl0rXCIsXCIrdC5sZXZlbHNbM10vMjU1K1wiKVwiKSx2b2lkIDA9PT10KXtpZigtMT09PWUuaW5kZXhPZihcIjpcIikpcmV0dXJuIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWx0KS5nZXRQcm9wZXJ0eVZhbHVlKGUpO2Zvcih2YXIgcj1lLnNwbGl0KFwiO1wiKSxuPTA7bjxyLmxlbmd0aDtuKyspe3ZhciBvPXJbbl0uc3BsaXQoXCI6XCIpO29bMF0mJm9bMV0mJih0aGlzLmVsdC5zdHlsZVtvWzBdLnRyaW0oKV09b1sxXS50cmltKCkpfX1lbHNlIGlmKHRoaXMuZWx0LnN0eWxlW2VdPXQsXCJ3aWR0aFwiPT09ZXx8XCJoZWlnaHRcIj09PWV8fFwibGVmdFwiPT09ZXx8XCJ0b3BcIj09PWUpe3ZhciBpPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWx0KS5nZXRQcm9wZXJ0eVZhbHVlKGUpLnJlcGxhY2UoL1xcRCsvZyxcIlwiKTt0aGlzW2VdPXBhcnNlSW50KGksMTApfXJldHVybiB0aGlzfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuYXR0cmlidXRlPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09dGhpcy5lbHQuZmlyc3RDaGlsZHx8XCJjaGVja2JveFwiIT09dGhpcy5lbHQuZmlyc3RDaGlsZC50eXBlJiZcInJhZGlvXCIhPT10aGlzLmVsdC5maXJzdENoaWxkLnR5cGUpcmV0dXJuIHZvaWQgMD09PXQ/dGhpcy5lbHQuZ2V0QXR0cmlidXRlKGUpOih0aGlzLmVsdC5zZXRBdHRyaWJ1dGUoZSx0KSx0aGlzKTtpZih2b2lkIDA9PT10KXJldHVybiB0aGlzLmVsdC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZShlKTtmb3IodmFyIHI9MDtyPHRoaXMuZWx0LmNoaWxkTm9kZXMubGVuZ3RoO3IrKyl0aGlzLmVsdC5jaGlsZE5vZGVzW3JdLnNldEF0dHJpYnV0ZShlLHQpfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQXR0cmlidXRlPWZ1bmN0aW9uKGUpe2lmKG51bGwhPXRoaXMuZWx0LmZpcnN0Q2hpbGQmJihcImNoZWNrYm94XCI9PT10aGlzLmVsdC5maXJzdENoaWxkLnR5cGV8fFwicmFkaW9cIj09PXRoaXMuZWx0LmZpcnN0Q2hpbGQudHlwZSkpZm9yKHZhciB0PTA7dDx0aGlzLmVsdC5jaGlsZE5vZGVzLmxlbmd0aDt0KyspdGhpcy5lbHQuY2hpbGROb2Rlc1t0XS5yZW1vdmVBdHRyaWJ1dGUoZSk7cmV0dXJuIHRoaXMuZWx0LnJlbW92ZUF0dHJpYnV0ZShlKSx0aGlzfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUudmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gMDxhcmd1bWVudHMubGVuZ3RoPyh0aGlzLmVsdC52YWx1ZT1hcmd1bWVudHNbMF0sdGhpcyk6XCJyYW5nZVwiPT09dGhpcy5lbHQudHlwZT9wYXJzZUZsb2F0KHRoaXMuZWx0LnZhbHVlKTp0aGlzLmVsdC52YWx1ZX0sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbHQuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdGhpc30sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmhpZGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbHQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzfSxmLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuc2l6ZT1mdW5jdGlvbihlLHQpe2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybnt3aWR0aDp0aGlzLmVsdC5vZmZzZXRXaWR0aCxoZWlnaHQ6dGhpcy5lbHQub2Zmc2V0SGVpZ2h0fTt2YXIgcj1lLG49dCxvPWYuZGVmYXVsdC5wcm90b3R5cGUuQVVUTztpZihyIT09b3x8biE9PW8pe2lmKHI9PT1vP3I9dCp0aGlzLndpZHRoL3RoaXMuaGVpZ2h0Om49PT1vJiYobj1lKnRoaXMuaGVpZ2h0L3RoaXMud2lkdGgpLHRoaXMuZWx0IGluc3RhbmNlb2YgSFRNTENhbnZhc0VsZW1lbnQpe3ZhciBpLGE9e30scz10aGlzLmVsdC5nZXRDb250ZXh0KFwiMmRcIik7Zm9yKGkgaW4gcylhW2ldPXNbaV07Zm9yKGkgaW4gdGhpcy5lbHQuc2V0QXR0cmlidXRlKFwid2lkdGhcIixyKnRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHkpLHRoaXMuZWx0LnNldEF0dHJpYnV0ZShcImhlaWdodFwiLG4qdGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eSksdGhpcy5lbHQuc3R5bGUud2lkdGg9citcInB4XCIsdGhpcy5lbHQuc3R5bGUuaGVpZ2h0PW4rXCJweFwiLHRoaXMuX3BJbnN0LnNjYWxlKHRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHksdGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eSksYSl0aGlzLmVsdC5nZXRDb250ZXh0KFwiMmRcIilbaV09YVtpXX1lbHNlIHRoaXMuZWx0LnN0eWxlLndpZHRoPXIrXCJweFwiLHRoaXMuZWx0LnN0eWxlLmhlaWdodD1uK1wicHhcIix0aGlzLmVsdC53aWR0aD1yLHRoaXMuZWx0LmhlaWdodD1uO3RoaXMud2lkdGg9dGhpcy5lbHQub2Zmc2V0V2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5lbHQub2Zmc2V0SGVpZ2h0LHRoaXMuX3BJbnN0JiZ0aGlzLl9wSW5zdC5fY3VyRWxlbWVudCYmdGhpcy5fcEluc3QuX2N1ckVsZW1lbnQuZWx0PT09dGhpcy5lbHQmJih0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJ3aWR0aFwiLHRoaXMuZWx0Lm9mZnNldFdpZHRoKSx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJoZWlnaHRcIix0aGlzLmVsdC5vZmZzZXRIZWlnaHQpKX1yZXR1cm4gdGhpc30sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBmLmRlZmF1bHQuTWVkaWFFbGVtZW50KXt0aGlzLnN0b3AoKTt2YXIgZT10aGlzLmVsdC5zcmNPYmplY3Q7aWYobnVsbCE9PWUpZS5nZXRUcmFja3MoKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2Uuc3RvcCgpfSl9dmFyIHQ9dGhpcy5fcEluc3QuX2VsZW1lbnRzLmluZGV4T2YodGhpcyk7Zm9yKHZhciByIGluLTEhPT10JiZ0aGlzLl9wSW5zdC5fZWxlbWVudHMuc3BsaWNlKHQsMSksdGhpcy5fZXZlbnRzKXRoaXMuZWx0LnJlbW92ZUV2ZW50TGlzdGVuZXIocix0aGlzLl9ldmVudHNbcl0pO3RoaXMuZWx0JiZ0aGlzLmVsdC5wYXJlbnROb2RlJiZ0aGlzLmVsdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZWx0KX0sZi5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmRyb3A9ZnVuY3Rpb24obyxpKXtpZih3aW5kb3cuRmlsZSYmd2luZG93LkZpbGVSZWFkZXImJndpbmRvdy5GaWxlTGlzdCYmd2luZG93LkJsb2Ipe2lmKCF0aGlzLl9kcmFnRGlzYWJsZWQpe3RoaXMuX2RyYWdEaXNhYmxlZD0hMDt2YXIgZT1mdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCl9O3RoaXMuZWx0LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnb3ZlclwiLGUpLHRoaXMuZWx0LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnbGVhdmVcIixlKX1mLmRlZmF1bHQuRWxlbWVudC5fYXR0YWNoTGlzdGVuZXIoXCJkcm9wXCIsZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGkmJmkuY2FsbCh0aGlzLGUpO2Zvcih2YXIgdD1lLmRhdGFUcmFuc2Zlci5maWxlcyxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBuPXRbcl07Zi5kZWZhdWx0LkZpbGUuX2xvYWQobixvKX19LHRoaXMpfWVsc2UgY29uc29sZS5sb2coXCJUaGUgRmlsZSBBUElzIGFyZSBub3QgZnVsbHkgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3Nlci5cIik7cmV0dXJuIHRoaXN9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQ9ZnVuY3Rpb24obixlKXtmLmRlZmF1bHQuRWxlbWVudC5jYWxsKHRoaXMsbixlKTt2YXIgbz10aGlzO3RoaXMuZWx0LmNyb3NzT3JpZ2luPVwiYW5vbnltb3VzXCIsdGhpcy5fcHJldlRpbWU9MCx0aGlzLl9jdWVJRENvdW50ZXI9MCx0aGlzLl9jdWVzPVtdLCh0aGlzLl9waXhlbHNTdGF0ZT10aGlzKS5fcGl4ZWxEZW5zaXR5PTEsdGhpcy5fbW9kaWZpZWQ9ITEsT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sXCJzcmNcIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9by5lbHQuY2hpbGRyZW5bMF0uc3JjLHQ9by5lbHQuc3JjPT09d2luZG93LmxvY2F0aW9uLmhyZWY/XCJcIjpvLmVsdC5zcmM7cmV0dXJuIGU9PT13aW5kb3cubG9jYXRpb24uaHJlZj90OmV9LHNldDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MDt0PG8uZWx0LmNoaWxkcmVuLmxlbmd0aDt0Kyspby5lbHQucmVtb3ZlQ2hpbGQoby5lbHQuY2hpbGRyZW5bdF0pO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIik7ci5zcmM9ZSxuLmFwcGVuZENoaWxkKHIpLG8uZWx0LnNyYz1lLG8ubW9kaWZpZWQ9ITB9fSksby5fb25lbmRlZD1mdW5jdGlvbigpe30sby5lbHQub25lbmRlZD1mdW5jdGlvbigpe28uX29uZW5kZWQobyl9fSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGYuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZSksZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUucGxheT1mdW5jdGlvbigpe3ZhciBlLHQ9dGhpcztyZXR1cm4gdGhpcy5lbHQuY3VycmVudFRpbWU9PT10aGlzLmVsdC5kdXJhdGlvbiYmKHRoaXMuZWx0LmN1cnJlbnRUaW1lPTApLChlPSgxPHRoaXMuZWx0LnJlYWR5U3RhdGV8fHRoaXMuZWx0LmxvYWQoKSx0aGlzLmVsdC5wbGF5KCkpKSYmZS5jYXRjaCYmZS5jYXRjaChmdW5jdGlvbihlKXtcIk5vdEFsbG93ZWRFcnJvclwiPT09ZS5uYW1lP2YuZGVmYXVsdC5fZnJpZW5kbHlBdXRvcGxheUVycm9yKHQuc3JjKTpjb25zb2xlLmVycm9yKFwiTWVkaWEgcGxheSBtZXRob2QgZW5jb3VudGVyZWQgYW4gdW5leHBlY3RlZCBlcnJvclwiLGUpfSksdGhpc30sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVsdC5wYXVzZSgpLHRoaXMuZWx0LmN1cnJlbnRUaW1lPTAsdGhpc30sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbHQucGF1c2UoKSx0aGlzfSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5sb29wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWx0LnNldEF0dHJpYnV0ZShcImxvb3BcIiwhMCksdGhpcy5wbGF5KCksdGhpc30sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUubm9Mb29wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWx0LnJlbW92ZUF0dHJpYnV0ZShcImxvb3BcIiksdGhpc30sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuX3NldHVwQXV0b3BsYXlGYWlsRGV0ZWN0aW9uPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gZi5kZWZhdWx0Ll9mcmllbmRseUF1dG9wbGF5RXJyb3IoZS5zcmMpfSw1MDApO3RoaXMuZWx0LmFkZEV2ZW50TGlzdGVuZXIoXCJwbGF5XCIsZnVuY3Rpb24oKXtyZXR1cm4gY2xlYXJUaW1lb3V0KHQpfSx7cGFzc2l2ZTohMCxvbmNlOiEwfSl9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmF1dG9wbGF5PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10aGlzLmVsdC5nZXRBdHRyaWJ1dGUoXCJhdXRvcGxheVwiKTtpZih0aGlzLmVsdC5zZXRBdHRyaWJ1dGUoXCJhdXRvcGxheVwiLGUpLGUmJiFyKXt2YXIgbj1mdW5jdGlvbigpe3JldHVybiB0Ll9zZXR1cEF1dG9wbGF5RmFpbERldGVjdGlvbigpfTs0PT09dGhpcy5lbHQucmVhZHlTdGF0ZT9uKCk6dGhpcy5lbHQuYWRkRXZlbnRMaXN0ZW5lcihcImNhbnBsYXlcIixuLHtwYXNzaXZlOiEwLG9uY2U6ITB9KX1yZXR1cm4gdGhpc30sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUudm9sdW1lPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpcmV0dXJuIHRoaXMuZWx0LnZvbHVtZTt0aGlzLmVsdC52b2x1bWU9ZX0sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuc3BlZWQ9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT09ZSlyZXR1cm4gdGhpcy5wcmVzZXRQbGF5YmFja1JhdGV8fHRoaXMuZWx0LnBsYXliYWNrUmF0ZTt0aGlzLmxvYWRlZG1ldGFkYXRhP3RoaXMuZWx0LnBsYXliYWNrUmF0ZT1lOnRoaXMucHJlc2V0UGxheWJhY2tSYXRlPWV9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnRpbWU9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/dGhpcy5lbHQuY3VycmVudFRpbWU6KHRoaXMuZWx0LmN1cnJlbnRUaW1lPWUsdGhpcyl9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmR1cmF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWx0LmR1cmF0aW9ufSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5waXhlbHM9W10sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuX2Vuc3VyZUNhbnZhcz1mdW5jdGlvbigpe3RoaXMuY2FudmFzfHwodGhpcy5jYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSx0aGlzLmRyYXdpbmdDb250ZXh0PXRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKSx0aGlzLnNldE1vZGlmaWVkKCEwKSksdGhpcy5sb2FkZWRtZXRhZGF0YSYmKHRoaXMuY2FudmFzLndpZHRoIT09dGhpcy5lbHQud2lkdGgmJih0aGlzLmNhbnZhcy53aWR0aD10aGlzLmVsdC53aWR0aCx0aGlzLmNhbnZhcy5oZWlnaHQ9dGhpcy5lbHQuaGVpZ2h0LHRoaXMud2lkdGg9dGhpcy5jYW52YXMud2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5jYW52YXMuaGVpZ2h0KSx0aGlzLmRyYXdpbmdDb250ZXh0LmRyYXdJbWFnZSh0aGlzLmVsdCwwLDAsdGhpcy5jYW52YXMud2lkdGgsdGhpcy5jYW52YXMuaGVpZ2h0KSx0aGlzLnNldE1vZGlmaWVkKCEwKSl9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmxvYWRQaXhlbHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZW5zdXJlQ2FudmFzKCksZi5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmxvYWRQaXhlbHMuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS51cGRhdGVQaXhlbHM9ZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuIHRoaXMubG9hZGVkbWV0YWRhdGEmJih0aGlzLl9lbnN1cmVDYW52YXMoKSxmLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUudXBkYXRlUGl4ZWxzLmNhbGwodGhpcyxlLHQscixuKSksdGhpcy5zZXRNb2RpZmllZCghMCksdGhpc30sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Vuc3VyZUNhbnZhcygpLGYuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5nZXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5fZ2V0UGl4ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sb2FkUGl4ZWxzKCksZi5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9nZXRQaXhlbC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQscil7dGhpcy5sb2FkZWRtZXRhZGF0YSYmKHRoaXMuX2Vuc3VyZUNhbnZhcygpLGYuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5zZXQuY2FsbCh0aGlzLGUsdCxyKSx0aGlzLnNldE1vZGlmaWVkKCEwKSl9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24oKXt0aGlzLl9lbnN1cmVDYW52YXMoKSxmLmRlZmF1bHQucHJvdG90eXBlLmNvcHkuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5tYXNrPWZ1bmN0aW9uKCl7dGhpcy5sb2FkUGl4ZWxzKCksdGhpcy5zZXRNb2RpZmllZCghMCksZi5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5tYXNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuaXNNb2RpZmllZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb2RpZmllZH0sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuc2V0TW9kaWZpZWQ9ZnVuY3Rpb24oZSl7dGhpcy5fbW9kaWZpZWQ9ZX0sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUub25lbmRlZD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fb25lbmRlZD1lLHRoaXN9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmNvbm5lY3Q9ZnVuY3Rpb24oZSl7dmFyIHQscjtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBmLmRlZmF1bHQucHJvdG90eXBlLmdldEF1ZGlvQ29udGV4dCl0PWYuZGVmYXVsdC5wcm90b3R5cGUuZ2V0QXVkaW9Db250ZXh0KCkscj1mLmRlZmF1bHQuc291bmRPdXQuaW5wdXQ7ZWxzZSB0cnl7cj0odD1lLmNvbnRleHQpLmRlc3RpbmF0aW9ufWNhdGNoKGUpe3Rocm93XCJjb25uZWN0KCkgaXMgbWVhbnQgdG8gYmUgdXNlZCB3aXRoIFdlYiBBdWRpbyBBUEkgb3IgcDUuc291bmQuanNcIn10aGlzLmF1ZGlvU291cmNlTm9kZXx8KHRoaXMuYXVkaW9Tb3VyY2VOb2RlPXQuY3JlYXRlTWVkaWFFbGVtZW50U291cmNlKHRoaXMuZWx0KSx0aGlzLmF1ZGlvU291cmNlTm9kZS5jb25uZWN0KHIpKSxlP2UuaW5wdXQ/dGhpcy5hdWRpb1NvdXJjZU5vZGUuY29ubmVjdChlLmlucHV0KTp0aGlzLmF1ZGlvU291cmNlTm9kZS5jb25uZWN0KGUpOnRoaXMuYXVkaW9Tb3VyY2VOb2RlLmNvbm5lY3Qocil9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmRpc2Nvbm5lY3Q9ZnVuY3Rpb24oKXtpZighdGhpcy5hdWRpb1NvdXJjZU5vZGUpdGhyb3dcIm5vdGhpbmcgdG8gZGlzY29ubmVjdFwiO3RoaXMuYXVkaW9Tb3VyY2VOb2RlLmRpc2Nvbm5lY3QoKX0sZi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuc2hvd0NvbnRyb2xzPWZ1bmN0aW9uKCl7dGhpcy5lbHQuc3R5bGVbXCJ0ZXh0LWFsaWduXCJdPVwiaW5oZXJpdFwiLHRoaXMuZWx0LmNvbnRyb2xzPSEwfSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5oaWRlQ29udHJvbHM9ZnVuY3Rpb24oKXt0aGlzLmVsdC5jb250cm9scz0hMX07ZnVuY3Rpb24gaShlLHQscixuKXt0aGlzLmNhbGxiYWNrPWUsdGhpcy50aW1lPXQsdGhpcy5pZD1yLHRoaXMudmFsPW59Zi5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuYWRkQ3VlPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLl9jdWVJRENvdW50ZXIrKyxvPW5ldyBpKHQsZSxuLHIpO3JldHVybiB0aGlzLl9jdWVzLnB1c2gobyksdGhpcy5lbHQub250aW1ldXBkYXRlfHwodGhpcy5lbHQub250aW1ldXBkYXRlPXRoaXMuX29uVGltZVVwZGF0ZS5iaW5kKHRoaXMpKSxufSxmLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5yZW1vdmVDdWU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDx0aGlzLl9jdWVzLmxlbmd0aDt0KyspdGhpcy5fY3Vlc1t0XS5pZD09PWUmJihjb25zb2xlLmxvZyhlKSx0aGlzLl9jdWVzLnNwbGljZSh0LDEpKTswPT09dGhpcy5fY3Vlcy5sZW5ndGgmJih0aGlzLmVsdC5vbnRpbWV1cGRhdGU9bnVsbCl9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmNsZWFyQ3Vlcz1mdW5jdGlvbigpe3RoaXMuX2N1ZXM9W10sdGhpcy5lbHQub250aW1ldXBkYXRlPW51bGx9LGYuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLl9vblRpbWVVcGRhdGU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy50aW1lKCksdD0wO3Q8dGhpcy5fY3Vlcy5sZW5ndGg7dCsrKXt2YXIgcj10aGlzLl9jdWVzW3RdLnRpbWUsbj10aGlzLl9jdWVzW3RdLnZhbDt0aGlzLl9wcmV2VGltZTxyJiZyPD1lJiZ0aGlzLl9jdWVzW3RdLmNhbGxiYWNrKG4pfXRoaXMuX3ByZXZUaW1lPWV9LGYuZGVmYXVsdC5GaWxlPWZ1bmN0aW9uKGUsdCl7dGhpcy5maWxlPWUsdGhpcy5fcEluc3Q9dDt2YXIgcj1lLnR5cGUuc3BsaXQoXCIvXCIpO3RoaXMudHlwZT1yWzBdLHRoaXMuc3VidHlwZT1yWzFdLHRoaXMubmFtZT1lLm5hbWUsdGhpcy5zaXplPWUuc2l6ZSx0aGlzLmRhdGE9dm9pZCAwfSxmLmRlZmF1bHQuRmlsZS5fY3JlYXRlTG9hZGVyPWZ1bmN0aW9uKG4sbyl7dmFyIGU9bmV3IEZpbGVSZWFkZXI7cmV0dXJuIGUub25sb2FkPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBmLmRlZmF1bHQuRmlsZShuKTtpZihcImFwcGxpY2F0aW9uL2pzb25cIj09PXQuZmlsZS50eXBlKXQuZGF0YT1KU09OLnBhcnNlKGUudGFyZ2V0LnJlc3VsdCk7ZWxzZSBpZihcInRleHQveG1sXCI9PT10LmZpbGUudHlwZSl7dmFyIHI9KG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhlLnRhcmdldC5yZXN1bHQsXCJ0ZXh0L3htbFwiKTt0LmRhdGE9bmV3IGYuZGVmYXVsdC5YTUwoci5kb2N1bWVudEVsZW1lbnQpfWVsc2UgdC5kYXRhPWUudGFyZ2V0LnJlc3VsdDtvKHQpfSxlfSxmLmRlZmF1bHQuRmlsZS5fbG9hZD1mdW5jdGlvbihlLHQpe2lmKC9edGV4dFxcLy8udGVzdChlLnR5cGUpfHxcImFwcGxpY2F0aW9uL2pzb25cIj09PWUudHlwZSlmLmRlZmF1bHQuRmlsZS5fY3JlYXRlTG9hZGVyKGUsdCkucmVhZEFzVGV4dChlKTtlbHNlIGlmKC9eKHZpZGVvfGF1ZGlvKVxcLy8udGVzdChlLnR5cGUpKXt2YXIgcj1uZXcgZi5kZWZhdWx0LkZpbGUoZSk7ci5kYXRhPVVSTC5jcmVhdGVPYmplY3RVUkwoZSksdChyKX1lbHNlIGYuZGVmYXVsdC5GaWxlLl9jcmVhdGVMb2FkZXIoZSx0KS5yZWFkQXNEYXRhVVJMKGUpfTt2YXIgYT1mLmRlZmF1bHQ7ci5kZWZhdWx0PWF9LHtcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5ldmVyeVwiOjE1MCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIjoxNTIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2hcIjoxNTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbVwiOjE1NSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiOjE1NyxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIjoxNjEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlXCI6MTY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWVcIjoxNjYsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlXCI6MTc4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbVwiOjE5MyxcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIjoxOTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCI6MTk0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiOjE5NSxcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoXCI6MjI4LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjksXCJjb3JlLWpzL21vZHVsZXMvd2ViLnVybFwiOjIzMX1dLDI4MTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0saT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfW8uZGVmYXVsdC5wcm90b3R5cGUuZGV2aWNlT3JpZW50YXRpb249MTx3aW5kb3cuaW5uZXJXaWR0aC93aW5kb3cuaW5uZXJIZWlnaHQ/XCJsYW5kc2NhcGVcIjpcInBvcnRyYWl0XCIsby5kZWZhdWx0LnByb3RvdHlwZS5hY2NlbGVyYXRpb25YPTAsby5kZWZhdWx0LnByb3RvdHlwZS5hY2NlbGVyYXRpb25ZPTAsby5kZWZhdWx0LnByb3RvdHlwZS5hY2NlbGVyYXRpb25aPTAsby5kZWZhdWx0LnByb3RvdHlwZS5wQWNjZWxlcmF0aW9uWD0wLG8uZGVmYXVsdC5wcm90b3R5cGUucEFjY2VsZXJhdGlvblk9MCxvLmRlZmF1bHQucHJvdG90eXBlLnBBY2NlbGVyYXRpb25aPTAsby5kZWZhdWx0LnByb3RvdHlwZS5fdXBkYXRlUEFjY2VsZXJhdGlvbnM9ZnVuY3Rpb24oKXt0aGlzLl9zZXRQcm9wZXJ0eShcInBBY2NlbGVyYXRpb25YXCIsdGhpcy5hY2NlbGVyYXRpb25YKSx0aGlzLl9zZXRQcm9wZXJ0eShcInBBY2NlbGVyYXRpb25ZXCIsdGhpcy5hY2NlbGVyYXRpb25ZKSx0aGlzLl9zZXRQcm9wZXJ0eShcInBBY2NlbGVyYXRpb25aXCIsdGhpcy5hY2NlbGVyYXRpb25aKX0sby5kZWZhdWx0LnByb3RvdHlwZS5yb3RhdGlvblg9MCxvLmRlZmF1bHQucHJvdG90eXBlLnJvdGF0aW9uWT0wLG8uZGVmYXVsdC5wcm90b3R5cGUucm90YXRpb25aPTAsby5kZWZhdWx0LnByb3RvdHlwZS5wUm90YXRpb25YPTAsby5kZWZhdWx0LnByb3RvdHlwZS5wUm90YXRpb25ZPTA7dmFyIHU9by5kZWZhdWx0LnByb3RvdHlwZS5wUm90YXRpb25aPTAsYz0wLGQ9MCxmPVwiY2xvY2t3aXNlXCIsaD1cImNsb2Nrd2lzZVwiLHA9XCJjbG9ja3dpc2VcIjtvLmRlZmF1bHQucHJvdG90eXBlLnBSb3RhdGVEaXJlY3Rpb25YPXZvaWQgMCxvLmRlZmF1bHQucHJvdG90eXBlLnBSb3RhdGVEaXJlY3Rpb25ZPXZvaWQgMCxvLmRlZmF1bHQucHJvdG90eXBlLnBSb3RhdGVEaXJlY3Rpb25aPXZvaWQgMCxvLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVQUm90YXRpb25zPWZ1bmN0aW9uKCl7dGhpcy5fc2V0UHJvcGVydHkoXCJwUm90YXRpb25YXCIsdGhpcy5yb3RhdGlvblgpLHRoaXMuX3NldFByb3BlcnR5KFwicFJvdGF0aW9uWVwiLHRoaXMucm90YXRpb25ZKSx0aGlzLl9zZXRQcm9wZXJ0eShcInBSb3RhdGlvblpcIix0aGlzLnJvdGF0aW9uWil9LG8uZGVmYXVsdC5wcm90b3R5cGUudHVybkF4aXM9dm9pZCAwO3ZhciB5PS41LG09MzA7by5kZWZhdWx0LnByb3RvdHlwZS5zZXRNb3ZlVGhyZXNob2xkPWZ1bmN0aW9uKGUpe28uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2V0TW92ZVRocmVzaG9sZFwiLGFyZ3VtZW50cykseT1lfSxvLmRlZmF1bHQucHJvdG90eXBlLnNldFNoYWtlVGhyZXNob2xkPWZ1bmN0aW9uKGUpe28uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2V0U2hha2VUaHJlc2hvbGRcIixhcmd1bWVudHMpLG09ZX0sby5kZWZhdWx0LnByb3RvdHlwZS5fb25kZXZpY2VvcmllbnRhdGlvbj1mdW5jdGlvbihlKXt0aGlzLl91cGRhdGVQUm90YXRpb25zKCksdGhpcy5fYW5nbGVNb2RlPT09aS5yYWRpYW5zJiYoZS5iZXRhPWUuYmV0YSooX1BJLzE4MCksZS5nYW1tYT1lLmdhbW1hKihfUEkvMTgwKSxlLmFscGhhPWUuYWxwaGEqKF9QSS8xODApKSx0aGlzLl9zZXRQcm9wZXJ0eShcInJvdGF0aW9uWFwiLGUuYmV0YSksdGhpcy5fc2V0UHJvcGVydHkoXCJyb3RhdGlvbllcIixlLmdhbW1hKSx0aGlzLl9zZXRQcm9wZXJ0eShcInJvdGF0aW9uWlwiLGUuYWxwaGEpLHRoaXMuX2hhbmRsZU1vdGlvbigpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbmRldmljZW1vdGlvbj1mdW5jdGlvbihlKXt0aGlzLl91cGRhdGVQQWNjZWxlcmF0aW9ucygpLHRoaXMuX3NldFByb3BlcnR5KFwiYWNjZWxlcmF0aW9uWFwiLDIqZS5hY2NlbGVyYXRpb24ueCksdGhpcy5fc2V0UHJvcGVydHkoXCJhY2NlbGVyYXRpb25ZXCIsMiplLmFjY2VsZXJhdGlvbi55KSx0aGlzLl9zZXRQcm9wZXJ0eShcImFjY2VsZXJhdGlvblpcIiwyKmUuYWNjZWxlcmF0aW9uLnopLHRoaXMuX2hhbmRsZU1vdGlvbigpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9oYW5kbGVNb3Rpb249ZnVuY3Rpb24oKXs5MD09PXdpbmRvdy5vcmllbnRhdGlvbnx8LTkwPT09d2luZG93Lm9yaWVudGF0aW9uP3RoaXMuX3NldFByb3BlcnR5KFwiZGV2aWNlT3JpZW50YXRpb25cIixcImxhbmRzY2FwZVwiKTowPT09d2luZG93Lm9yaWVudGF0aW9uP3RoaXMuX3NldFByb3BlcnR5KFwiZGV2aWNlT3JpZW50YXRpb25cIixcInBvcnRyYWl0XCIpOnZvaWQgMD09PXdpbmRvdy5vcmllbnRhdGlvbiYmdGhpcy5fc2V0UHJvcGVydHkoXCJkZXZpY2VPcmllbnRhdGlvblwiLFwidW5kZWZpbmVkXCIpO3ZhciBlLHQscj10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmRldmljZU1vdmVkJiYoTWF0aC5hYnModGhpcy5hY2NlbGVyYXRpb25YLXRoaXMucEFjY2VsZXJhdGlvblgpPnl8fE1hdGguYWJzKHRoaXMuYWNjZWxlcmF0aW9uWS10aGlzLnBBY2NlbGVyYXRpb25ZKT55fHxNYXRoLmFicyh0aGlzLmFjY2VsZXJhdGlvblotdGhpcy5wQWNjZWxlcmF0aW9uWik+eSkmJnIuZGV2aWNlTW92ZWQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmRldmljZVR1cm5lZCl7dmFyIG49dGhpcy5yb3RhdGlvblgrMTgwLG89dGhpcy5wUm90YXRpb25YKzE4MCxpPXUrMTgwOzA8bi1vJiZuLW88MjcwfHxuLW88LTI3MD9mPVwiY2xvY2t3aXNlXCI6KG4tbzwwfHwyNzA8bi1vKSYmKGY9XCJjb3VudGVyLWNsb2Nrd2lzZVwiKSxmIT09dGhpcy5wUm90YXRlRGlyZWN0aW9uWCYmKGk9biksOTA8TWF0aC5hYnMobi1pKSYmTWF0aC5hYnMobi1pKTwyNzAmJihpPW4sdGhpcy5fc2V0UHJvcGVydHkoXCJ0dXJuQXhpc1wiLFwiWFwiKSxyLmRldmljZVR1cm5lZCgpKSx0aGlzLnBSb3RhdGVEaXJlY3Rpb25YPWYsdT1pLTE4MDt2YXIgYT10aGlzLnJvdGF0aW9uWSsxODAscz10aGlzLnBSb3RhdGlvblkrMTgwLGw9YysxODA7MDxhLXMmJmEtczwyNzB8fGEtczwtMjcwP2g9XCJjbG9ja3dpc2VcIjooYS1zPDB8fDI3MDxhLXRoaXMucFJvdGF0aW9uWSkmJihoPVwiY291bnRlci1jbG9ja3dpc2VcIiksaCE9PXRoaXMucFJvdGF0ZURpcmVjdGlvblkmJihsPWEpLDkwPE1hdGguYWJzKGEtbCkmJk1hdGguYWJzKGEtbCk8MjcwJiYobD1hLHRoaXMuX3NldFByb3BlcnR5KFwidHVybkF4aXNcIixcIllcIiksci5kZXZpY2VUdXJuZWQoKSksdGhpcy5wUm90YXRlRGlyZWN0aW9uWT1oLGM9bC0xODAsMDx0aGlzLnJvdGF0aW9uWi10aGlzLnBSb3RhdGlvblomJnRoaXMucm90YXRpb25aLXRoaXMucFJvdGF0aW9uWjwyNzB8fHRoaXMucm90YXRpb25aLXRoaXMucFJvdGF0aW9uWjwtMjcwP3A9XCJjbG9ja3dpc2VcIjoodGhpcy5yb3RhdGlvblotdGhpcy5wUm90YXRpb25aPDB8fDI3MDx0aGlzLnJvdGF0aW9uWi10aGlzLnBSb3RhdGlvblopJiYocD1cImNvdW50ZXItY2xvY2t3aXNlXCIpLHAhPT10aGlzLnBSb3RhdGVEaXJlY3Rpb25aJiYoZD10aGlzLnJvdGF0aW9uWiksOTA8TWF0aC5hYnModGhpcy5yb3RhdGlvblotZCkmJk1hdGguYWJzKHRoaXMucm90YXRpb25aLWQpPDI3MCYmKGQ9dGhpcy5yb3RhdGlvblosdGhpcy5fc2V0UHJvcGVydHkoXCJ0dXJuQXhpc1wiLFwiWlwiKSxyLmRldmljZVR1cm5lZCgpKSx0aGlzLnBSb3RhdGVEaXJlY3Rpb25aPXAsdGhpcy5fc2V0UHJvcGVydHkoXCJ0dXJuQXhpc1wiLHZvaWQgMCl9XCJmdW5jdGlvblwiPT10eXBlb2Ygci5kZXZpY2VTaGFrZW4mJihudWxsIT09dGhpcy5wQWNjZWxlcmF0aW9uWCYmKGU9TWF0aC5hYnModGhpcy5hY2NlbGVyYXRpb25YLXRoaXMucEFjY2VsZXJhdGlvblgpLHQ9TWF0aC5hYnModGhpcy5hY2NlbGVyYXRpb25ZLXRoaXMucEFjY2VsZXJhdGlvblkpKSxtPGUrdCYmci5kZXZpY2VTaGFrZW4oKSl9O3ZhciBsPW8uZGVmYXVsdDtyLmRlZmF1bHQ9bH0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjR9XSwyODI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O28uZGVmYXVsdC5wcm90b3R5cGUuaXNLZXlQcmVzc2VkPSExLG8uZGVmYXVsdC5wcm90b3R5cGUua2V5SXNQcmVzc2VkPSExLG8uZGVmYXVsdC5wcm90b3R5cGUua2V5PVwiXCIsby5kZWZhdWx0LnByb3RvdHlwZS5rZXlDb2RlPTAsby5kZWZhdWx0LnByb3RvdHlwZS5fb25rZXlkb3duPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLl9kb3duS2V5c1tlLndoaWNoXSl7dGhpcy5fc2V0UHJvcGVydHkoXCJpc0tleVByZXNzZWRcIiwhMCksdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlJc1ByZXNzZWRcIiwhMCksdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlDb2RlXCIsZS53aGljaCksdGhpcy5fZG93bktleXNbZS53aGljaF09ITAsdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlcIixlLmtleXx8U3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKXx8ZS53aGljaCk7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC5rZXlQcmVzc2VkJiYhZS5jaGFyQ29kZSkhMT09PXQua2V5UHJlc3NlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfX0sby5kZWZhdWx0LnByb3RvdHlwZS5fb25rZXl1cD1mdW5jdGlvbihlKXt0aGlzLl9kb3duS2V5c1tlLndoaWNoXT0hMSx0aGlzLl9hcmVEb3duS2V5cygpfHwodGhpcy5fc2V0UHJvcGVydHkoXCJpc0tleVByZXNzZWRcIiwhMSksdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlJc1ByZXNzZWRcIiwhMSkpLHRoaXMuX3NldFByb3BlcnR5KFwiX2xhc3RLZXlDb2RlVHlwZWRcIixudWxsKSx0aGlzLl9zZXRQcm9wZXJ0eShcImtleVwiLGUua2V5fHxTdHJpbmcuZnJvbUNoYXJDb2RlKGUud2hpY2gpfHxlLndoaWNoKSx0aGlzLl9zZXRQcm9wZXJ0eShcImtleUNvZGVcIixlLndoaWNoKTt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmtleVJlbGVhc2VkJiYhMT09PXQua2V5UmVsZWFzZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fb25rZXlwcmVzcz1mdW5jdGlvbihlKXtpZihlLndoaWNoIT09dGhpcy5fbGFzdEtleUNvZGVUeXBlZCl7dGhpcy5fc2V0UHJvcGVydHkoXCJfbGFzdEtleUNvZGVUeXBlZFwiLGUud2hpY2gpLHRoaXMuX3NldFByb3BlcnR5KFwia2V5XCIsZS5rZXl8fFN0cmluZy5mcm9tQ2hhckNvZGUoZS53aGljaCl8fGUud2hpY2gpO3ZhciB0PXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQua2V5VHlwZWQpITE9PT10LmtleVR5cGVkKGUpJiZlLnByZXZlbnREZWZhdWx0KCl9fSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbmJsdXI9ZnVuY3Rpb24oZSl7dGhpcy5fZG93bktleXM9e319LG8uZGVmYXVsdC5wcm90b3R5cGUua2V5SXNEb3duPWZ1bmN0aW9uKGUpe3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImtleUlzRG93blwiLGFyZ3VtZW50cyksdGhpcy5fZG93bktleXNbZV18fCExfSxvLmRlZmF1bHQucHJvdG90eXBlLl9hcmVEb3duS2V5cz1mdW5jdGlvbigpe2Zvcih2YXIgZSBpbiB0aGlzLl9kb3duS2V5cylpZih0aGlzLl9kb3duS2V5cy5oYXNPd25Qcm9wZXJ0eShlKSYmITA9PT10aGlzLl9kb3duS2V5c1tlXSlyZXR1cm4hMDtyZXR1cm4hMX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjR9XSwyODM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0saT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfW8uZGVmYXVsdC5wcm90b3R5cGUubW92ZWRYPTAsby5kZWZhdWx0LnByb3RvdHlwZS5tb3ZlZFk9MCxvLmRlZmF1bHQucHJvdG90eXBlLl9oYXNNb3VzZUludGVyYWN0ZWQ9ITEsby5kZWZhdWx0LnByb3RvdHlwZS5tb3VzZVg9MCxvLmRlZmF1bHQucHJvdG90eXBlLm1vdXNlWT0wLG8uZGVmYXVsdC5wcm90b3R5cGUucG1vdXNlWD0wLG8uZGVmYXVsdC5wcm90b3R5cGUucG1vdXNlWT0wLG8uZGVmYXVsdC5wcm90b3R5cGUud2luTW91c2VYPTAsby5kZWZhdWx0LnByb3RvdHlwZS53aW5Nb3VzZVk9MCxvLmRlZmF1bHQucHJvdG90eXBlLnB3aW5Nb3VzZVg9MCxvLmRlZmF1bHQucHJvdG90eXBlLnB3aW5Nb3VzZVk9MCxvLmRlZmF1bHQucHJvdG90eXBlLm1vdXNlQnV0dG9uPTAsby5kZWZhdWx0LnByb3RvdHlwZS5tb3VzZUlzUHJlc3NlZD0hMSxvLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVOZXh0TW91c2VDb29yZHM9ZnVuY3Rpb24oZSl7aWYobnVsbCE9PXRoaXMuX2N1ckVsZW1lbnQmJighZS50b3VjaGVzfHwwPGUudG91Y2hlcy5sZW5ndGgpKXt2YXIgdD1mdW5jdGlvbihlLHQscixuKXtuJiYhbi5jbGllbnRYJiYobi50b3VjaGVzP249bi50b3VjaGVzWzBdOm4uY2hhbmdlZFRvdWNoZXMmJihuPW4uY2hhbmdlZFRvdWNoZXNbMF0pKTt2YXIgbz1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGk9ZS5zY3JvbGxXaWR0aC90fHwxLGE9ZS5zY3JvbGxIZWlnaHQvcnx8MTtyZXR1cm57eDoobi5jbGllbnRYLW8ubGVmdCkvaSx5OihuLmNsaWVudFktby50b3ApL2Esd2luWDpuLmNsaWVudFgsd2luWTpuLmNsaWVudFksaWQ6bi5pZGVudGlmaWVyfX0odGhpcy5fY3VyRWxlbWVudC5lbHQsdGhpcy53aWR0aCx0aGlzLmhlaWdodCxlKTt0aGlzLl9zZXRQcm9wZXJ0eShcIm1vdmVkWFwiLGUubW92ZW1lbnRYKSx0aGlzLl9zZXRQcm9wZXJ0eShcIm1vdmVkWVwiLGUubW92ZW1lbnRZKSx0aGlzLl9zZXRQcm9wZXJ0eShcIm1vdXNlWFwiLHQueCksdGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZVlcIix0LnkpLHRoaXMuX3NldFByb3BlcnR5KFwid2luTW91c2VYXCIsdC53aW5YKSx0aGlzLl9zZXRQcm9wZXJ0eShcIndpbk1vdXNlWVwiLHQud2luWSl9dGhpcy5faGFzTW91c2VJbnRlcmFjdGVkfHwodGhpcy5fdXBkYXRlTW91c2VDb29yZHMoKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl9oYXNNb3VzZUludGVyYWN0ZWRcIiwhMCkpfSxvLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVNb3VzZUNvb3Jkcz1mdW5jdGlvbigpe3RoaXMuX3NldFByb3BlcnR5KFwicG1vdXNlWFwiLHRoaXMubW91c2VYKSx0aGlzLl9zZXRQcm9wZXJ0eShcInBtb3VzZVlcIix0aGlzLm1vdXNlWSksdGhpcy5fc2V0UHJvcGVydHkoXCJwd2luTW91c2VYXCIsdGhpcy53aW5Nb3VzZVgpLHRoaXMuX3NldFByb3BlcnR5KFwicHdpbk1vdXNlWVwiLHRoaXMud2luTW91c2VZKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl9wbW91c2VXaGVlbERlbHRhWVwiLHRoaXMuX21vdXNlV2hlZWxEZWx0YVkpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9zZXRNb3VzZUJ1dHRvbj1mdW5jdGlvbihlKXsxPT09ZS5idXR0b24/dGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZUJ1dHRvblwiLGkuQ0VOVEVSKToyPT09ZS5idXR0b24/dGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZUJ1dHRvblwiLGkuUklHSFQpOnRoaXMuX3NldFByb3BlcnR5KFwibW91c2VCdXR0b25cIixpLkxFRlQpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbm1vdXNlbW92ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpczt0aGlzLl91cGRhdGVOZXh0TW91c2VDb29yZHMoZSksdGhpcy5tb3VzZUlzUHJlc3NlZD9cImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1vdXNlRHJhZ2dlZD8hMT09PXQubW91c2VEcmFnZ2VkKGUpJiZlLnByZXZlbnREZWZhdWx0KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgdC50b3VjaE1vdmVkJiYhMT09PXQudG91Y2hNb3ZlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQubW91c2VNb3ZlZCYmITE9PT10Lm1vdXNlTW92ZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fb25tb3VzZWRvd249ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7dGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZUlzUHJlc3NlZFwiLCEwKSx0aGlzLl9zZXRNb3VzZUJ1dHRvbihlKSx0aGlzLl91cGRhdGVOZXh0TW91c2VDb29yZHMoZSksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZVByZXNzZWQ/ITE9PT10Lm1vdXNlUHJlc3NlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpOm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcInNhZmFyaVwiKSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC50b3VjaFN0YXJ0ZWQmJiExPT09dC50b3VjaFN0YXJ0ZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fb25tb3VzZXVwPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO3RoaXMuX3NldFByb3BlcnR5KFwibW91c2VJc1ByZXNzZWRcIiwhMSksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZVJlbGVhc2VkPyExPT09dC5tb3VzZVJlbGVhc2VkKGUpJiZlLnByZXZlbnREZWZhdWx0KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgdC50b3VjaEVuZGVkJiYhMT09PXQudG91Y2hFbmRlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbmRyYWdlbmQ9by5kZWZhdWx0LnByb3RvdHlwZS5fb25tb3VzZXVwLG8uZGVmYXVsdC5wcm90b3R5cGUuX29uZHJhZ292ZXI9by5kZWZhdWx0LnByb3RvdHlwZS5fb25tb3VzZW1vdmUsby5kZWZhdWx0LnByb3RvdHlwZS5fb25jbGljaz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1vdXNlQ2xpY2tlZCYmITE9PT10Lm1vdXNlQ2xpY2tlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbmRibGNsaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO1wiZnVuY3Rpb25cIj09dHlwZW9mIHQuZG91YmxlQ2xpY2tlZCYmITE9PT10LmRvdWJsZUNsaWNrZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fbW91c2VXaGVlbERlbHRhWT0wLG8uZGVmYXVsdC5wcm90b3R5cGUuX3Btb3VzZVdoZWVsRGVsdGFZPTAsby5kZWZhdWx0LnByb3RvdHlwZS5fb253aGVlbD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpczt0aGlzLl9zZXRQcm9wZXJ0eShcIl9tb3VzZVdoZWVsRGVsdGFZXCIsZS5kZWx0YVkpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQubW91c2VXaGVlbCYmKGUuZGVsdGE9ZS5kZWx0YVksITE9PT10Lm1vdXNlV2hlZWwoZSkmJmUucHJldmVudERlZmF1bHQoKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUucmVxdWVzdFBvaW50ZXJMb2NrPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fY3VyRWxlbWVudC5lbHQ7cmV0dXJuIGUucmVxdWVzdFBvaW50ZXJMb2NrPWUucmVxdWVzdFBvaW50ZXJMb2NrfHxlLm1velJlcXVlc3RQb2ludGVyTG9jayxlLnJlcXVlc3RQb2ludGVyTG9jaz8oZS5yZXF1ZXN0UG9pbnRlckxvY2soKSwhMCk6KGNvbnNvbGUubG9nKFwicmVxdWVzdFBvaW50ZXJMb2NrIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGJyb3dzZXJcIiksITEpfSxvLmRlZmF1bHQucHJvdG90eXBlLmV4aXRQb2ludGVyTG9jaz1mdW5jdGlvbigpe2RvY3VtZW50LmV4aXRQb2ludGVyTG9jaygpfTt2YXIgbD1vLmRlZmF1bHQ7ci5kZWZhdWx0PWx9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCI6MTU2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlc1wiOjE4NX1dLDI4NDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBpKGUsdCxyLG4sbyl7dmFyIGk9NDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1vP286MCxhPWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkscz1lLnNjcm9sbFdpZHRoL3R8fDEsbD1lLnNjcm9sbEhlaWdodC9yfHwxLHU9bi50b3VjaGVzW2ldfHxuLmNoYW5nZWRUb3VjaGVzW2ldO3JldHVybnt4Oih1LmNsaWVudFgtYS5sZWZ0KS9zLHk6KHUuY2xpZW50WS1hLnRvcCkvbCx3aW5YOnUuY2xpZW50WCx3aW5ZOnUuY2xpZW50WSxpZDp1LmlkZW50aWZpZXJ9fW8uZGVmYXVsdC5wcm90b3R5cGUudG91Y2hlcz1bXSxvLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVUb3VjaENvb3Jkcz1mdW5jdGlvbihlKXtpZihudWxsIT09dGhpcy5fY3VyRWxlbWVudCl7Zm9yKHZhciB0PVtdLHI9MDtyPGUudG91Y2hlcy5sZW5ndGg7cisrKXRbcl09aSh0aGlzLl9jdXJFbGVtZW50LmVsdCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0LGUscik7dGhpcy5fc2V0UHJvcGVydHkoXCJ0b3VjaGVzXCIsdCl9fSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbnRvdWNoc3RhcnQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7dGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZUlzUHJlc3NlZFwiLCEwKSx0aGlzLl91cGRhdGVUb3VjaENvb3JkcyhlKSx0aGlzLl91cGRhdGVOZXh0TW91c2VDb29yZHMoZSksdGhpcy5fdXBkYXRlTW91c2VDb29yZHMoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnRvdWNoU3RhcnRlZD8hMT09PXQudG91Y2hTdGFydGVkKGUpJiZlLnByZXZlbnREZWZhdWx0KCk6bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFwic2FmYXJpXCIpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1vdXNlUHJlc3NlZCYmITE9PT10Lm1vdXNlUHJlc3NlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfSxvLmRlZmF1bHQucHJvdG90eXBlLl9vbnRvdWNobW92ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpczt0aGlzLl91cGRhdGVUb3VjaENvb3JkcyhlKSx0aGlzLl91cGRhdGVOZXh0TW91c2VDb29yZHMoZSksXCJmdW5jdGlvblwiPT10eXBlb2YgdC50b3VjaE1vdmVkPyExPT09dC50b3VjaE1vdmVkKGUpJiZlLnByZXZlbnREZWZhdWx0KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZURyYWdnZWQmJiExPT09dC5tb3VzZURyYWdnZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fb250b3VjaGVuZD1mdW5jdGlvbihlKXt0aGlzLl9zZXRQcm9wZXJ0eShcIm1vdXNlSXNQcmVzc2VkXCIsITEpLHRoaXMuX3VwZGF0ZVRvdWNoQ29vcmRzKGUpLHRoaXMuX3VwZGF0ZU5leHRNb3VzZUNvb3JkcyhlKTt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnRvdWNoRW5kZWQ/ITE9PT10LnRvdWNoRW5kZWQoZSkmJmUucHJldmVudERlZmF1bHQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1vdXNlUmVsZWFzZWQmJiExPT09dC5tb3VzZVJlbGVhc2VkKGUpJiZlLnByZXZlbnREZWZhdWx0KCl9O3ZhciBhPW8uZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCI6MTU2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlc1wiOjE4NX1dLDI4NTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW50MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgTyxDLEwsUCxBPXt9O2Z1bmN0aW9uIG4oZSx0KXtmb3IodmFyIHIsbixvLGksYSxzLGwsdSxjLGQsZj1BLl90b1BpeGVscyhlKSxoPWUud2lkdGgscD1lLmhlaWdodCx5PWgqcCxtPW5ldyBJbnQzMkFycmF5KHkpLGc9MDtnPHk7ZysrKW1bZ109QS5fZ2V0QVJHQihmLGcpO3ZhciB2LGIsXyx4LHc9bmV3IEludDMyQXJyYXkoeSksaj1uZXcgSW50MzJBcnJheSh5KSxTPW5ldyBJbnQzMkFycmF5KHkpLE09bmV3IEludDMyQXJyYXkoeSksRT0wO2ZvcighZnVuY3Rpb24oZSl7dmFyIHQ9My41KmV8MDtpZihPIT09KHQ9dDwxPzE6dDwyNDg/dDoyNDgpKXtDPTErKE89dCk8PDEsTD1uZXcgSW50MzJBcnJheShDKSxQPW5ldyBBcnJheShDKTtmb3IodmFyIHI9MDtyPEM7cisrKVBbcl09bmV3IEludDMyQXJyYXkoMjU2KTtmb3IodmFyIG4sbyxpLGEscz0xLGw9dC0xO3M8dDtzKyspe0xbdCtzXT1MW2xdPW89bCpsLGk9UFt0K3NdLGE9UFtsLS1dO2Zvcih2YXIgdT0wO3U8MjU2O3UrKylpW3VdPWFbdV09byp1fW49TFt0XT10KnQsaT1QW3RdO2Zvcih2YXIgYz0wO2M8MjU2O2MrKylpW2NdPW4qY319KHQpLGI9MDtiPHA7YisrKXtmb3Iodj0wO3Y8aDt2Kyspe2lmKGk9bz1uPWE9cj0wLChzPXYtTyk8MClkPS1zLHM9MDtlbHNle2lmKGg8PXMpYnJlYWs7ZD0wfWZvcihfPWQ7XzxDJiYhKGg8PXMpO18rKyl7dmFyIFQ9bVtzK0VdO2ErPSh4PVBbX10pWygtMTY3NzcyMTYmVCk+Pj4yNF0sbis9eFsoMTY3MTE2ODAmVCk+PjE2XSxvKz14Wyg2NTI4MCZUKT4+OF0saSs9eFsyNTUmVF0scis9TFtfXSxzKyt9d1tsPUUrdl09YS9yLGpbbF09bi9yLFNbbF09by9yLE1bbF09aS9yfUUrPWh9Zm9yKGM9KHU9LU8pKmgsYj1FPTA7YjxwO2IrKyl7Zm9yKHY9MDt2PGg7disrKXtpZihpPW89bj1hPXI9MCx1PDApZD1sPS11LHM9djtlbHNle2lmKHA8PXUpYnJlYWs7ZD0wLGw9dSxzPXYrY31mb3IoXz1kO188QyYmIShwPD1sKTtfKyspYSs9KHg9UFtfXSlbd1tzXV0sbis9eFtqW3NdXSxvKz14W1Nbc11dLGkrPXhbTVtzXV0scis9TFtfXSxsKysscys9aDttW3YrRV09YS9yPDwyNHxuL3I8PDE2fG8vcjw8OHxpL3J9RSs9aCxjKz1oLHUrK31BLl9zZXRQaXhlbHMoZixtKX1BLl90b1BpeGVscz1mdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgSW1hZ2VEYXRhKXJldHVybiBlLmRhdGE7aWYoZS5nZXRDb250ZXh0KFwiMmRcIikpcmV0dXJuIGUuZ2V0Q29udGV4dChcIjJkXCIpLmdldEltYWdlRGF0YSgwLDAsZS53aWR0aCxlLmhlaWdodCkuZGF0YTtpZihlLmdldENvbnRleHQoXCJ3ZWJnbFwiKSl7dmFyIHQ9ZS5nZXRDb250ZXh0KFwid2ViZ2xcIikscj10LmRyYXdpbmdCdWZmZXJXaWR0aCp0LmRyYXdpbmdCdWZmZXJIZWlnaHQqNCxuPW5ldyBVaW50OEFycmF5KHIpO3JldHVybiB0LnJlYWRQaXhlbHMoMCwwLGUud2lkdGgsZS5oZWlnaHQsdC5SR0JBLHQuVU5TSUdORURfQllURSxuKSxufX0sQS5fZ2V0QVJHQj1mdW5jdGlvbihlLHQpe3ZhciByPTQqdDtyZXR1cm4gZVszK3JdPDwyNCY0Mjc4MTkwMDgwfGVbcl08PDE2JjE2NzExNjgwfGVbMStyXTw8OCY2NTI4MHwyNTUmZVsyK3JdfSxBLl9zZXRQaXhlbHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9MCxuPTAsbz1lLmxlbmd0aDtuPG87bisrKWVbKHI9NCpuKSswXT0oMTY3MTE2ODAmdFtuXSk+Pj4xNixlW3IrMV09KDY1MjgwJnRbbl0pPj4+OCxlW3IrMl09MjU1JnRbbl0sZVtyKzNdPSg0Mjc4MTkwMDgwJnRbbl0pPj4+MjR9LEEuX3RvSW1hZ2VEYXRhPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgSW1hZ2VEYXRhP2U6ZS5nZXRDb250ZXh0KFwiMmRcIikuZ2V0SW1hZ2VEYXRhKDAsMCxlLndpZHRoLGUuaGVpZ2h0KX0sQS5fY3JlYXRlSW1hZ2VEYXRhPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIEEuX3RtcENhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpLEEuX3RtcEN0eD1BLl90bXBDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpLHRoaXMuX3RtcEN0eC5jcmVhdGVJbWFnZURhdGEoZSx0KX0sQS5hcHBseT1mdW5jdGlvbihlLHQscil7dmFyIG49ZS5nZXRDb250ZXh0KFwiMmRcIiksbz1uLmdldEltYWdlRGF0YSgwLDAsZS53aWR0aCxlLmhlaWdodCksaT10KG8scik7aSBpbnN0YW5jZW9mIEltYWdlRGF0YT9uLnB1dEltYWdlRGF0YShpLDAsMCwwLDAsZS53aWR0aCxlLmhlaWdodCk6bi5wdXRJbWFnZURhdGEobywwLDAsMCwwLGUud2lkdGgsZS5oZWlnaHQpfSxBLnRocmVzaG9sZD1mdW5jdGlvbihlLHQpe3ZhciByPUEuX3RvUGl4ZWxzKGUpO3ZvaWQgMD09PXQmJih0PS41KTtmb3IodmFyIG49TWF0aC5mbG9vcigyNTUqdCksbz0wO288ci5sZW5ndGg7bys9NCl7dmFyIGk9dm9pZCAwO2k9bjw9LjIxMjYqcltvXSsuNzE1MipyW28rMV0rLjA3MjIqcltvKzJdPzI1NTowLHJbb109cltvKzFdPXJbbysyXT1pfX0sQS5ncmF5PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1BLl90b1BpeGVscyhlKSxyPTA7cjx0Lmxlbmd0aDtyKz00KXt2YXIgbj0uMjEyNip0W3JdKy43MTUyKnRbcisxXSsuMDcyMip0W3IrMl07dFtyXT10W3IrMV09dFtyKzJdPW59fSxBLm9wYXF1ZT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9QS5fdG9QaXhlbHMoZSkscj0wO3I8dC5sZW5ndGg7cis9NCl0W3IrM109MjU1O3JldHVybiB0fSxBLmludmVydD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9QS5fdG9QaXhlbHMoZSkscj0wO3I8dC5sZW5ndGg7cis9NCl0W3JdPTI1NS10W3JdLHRbcisxXT0yNTUtdFtyKzFdLHRbcisyXT0yNTUtdFtyKzJdfSxBLnBvc3Rlcml6ZT1mdW5jdGlvbihlLHQpe3ZhciByPUEuX3RvUGl4ZWxzKGUpO2lmKHQ8Mnx8MjU1PHQpdGhyb3cgbmV3IEVycm9yKFwiTGV2ZWwgbXVzdCBiZSBncmVhdGVyIHRoYW4gMiBhbmQgbGVzcyB0aGFuIDI1NSBmb3IgcG9zdGVyaXplXCIpO2Zvcih2YXIgbj10LTEsbz0wO288ci5sZW5ndGg7bys9NCl7dmFyIGk9cltvXSxhPXJbbysxXSxzPXJbbysyXTtyW29dPTI1NSooaSp0Pj44KS9uLHJbbysxXT0yNTUqKGEqdD4+OCkvbixyW28rMl09MjU1KihzKnQ+PjgpL259fSxBLmRpbGF0ZT1mdW5jdGlvbihlKXtmb3IodmFyIHQscixuLG8saSxhLHMsbCx1LGMsZCxmLGgscCx5LG0sZyx2PUEuX3RvUGl4ZWxzKGUpLGI9MCxfPXYubGVuZ3RoP3YubGVuZ3RoLzQ6MCx4PW5ldyBJbnQzMkFycmF5KF8pO2I8XzspZm9yKHI9KHQ9YikrZS53aWR0aDtiPHI7KW49bz1BLl9nZXRBUkdCKHYsYiksKHM9Yi0xKTx0JiYocz1iKSxyPD0oYT1iKzEpJiYoYT1iKSwobD1iLWUud2lkdGgpPDAmJihsPTApLF88PSh1PWIrZS53aWR0aCkmJih1PWIpLGY9QS5fZ2V0QVJHQih2LGwpLGQ9QS5fZ2V0QVJHQih2LHMpLGg9QS5fZ2V0QVJHQih2LHUpLChpPTc3KihuPj4xNiYyNTUpKzE1MSoobj4+OCYyNTUpKzI4KigyNTUmbikpPCh5PTc3KihkPj4xNiYyNTUpKzE1MSooZD4+OCYyNTUpKzI4KigyNTUmZCkpJiYobz1kLGk9eSksaTwocD03NyooKGM9QS5fZ2V0QVJHQih2LGEpKT4+MTYmMjU1KSsxNTEqKGM+PjgmMjU1KSsyOCooMjU1JmMpKSYmKG89YyxpPXApLGk8KG09NzcqKGY+PjE2JjI1NSkrMTUxKihmPj44JjI1NSkrMjgqKDI1NSZmKSkmJihvPWYsaT1tKSxpPChnPTc3KihoPj4xNiYyNTUpKzE1MSooaD4+OCYyNTUpKzI4KigyNTUmaCkpJiYobz1oLGk9ZykseFtiKytdPW87QS5fc2V0UGl4ZWxzKHYseCl9LEEuZXJvZGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbixvLGksYSxzLGwsdSxjLGQsZixoLHAseSxtLGcsdj1BLl90b1BpeGVscyhlKSxiPTAsXz12Lmxlbmd0aD92Lmxlbmd0aC80OjAseD1uZXcgSW50MzJBcnJheShfKTtiPF87KWZvcihyPSh0PWIpK2Uud2lkdGg7YjxyOyluPW89QS5fZ2V0QVJHQih2LGIpLChzPWItMSk8dCYmKHM9Yikscjw9KGE9YisxKSYmKGE9YiksKGw9Yi1lLndpZHRoKTwwJiYobD0wKSxfPD0odT1iK2Uud2lkdGgpJiYodT1iKSxmPUEuX2dldEFSR0IodixsKSxkPUEuX2dldEFSR0IodixzKSxoPUEuX2dldEFSR0Iodix1KSwoeT03NyooZD4+MTYmMjU1KSsxNTEqKGQ+PjgmMjU1KSsyOCooMjU1JmQpKTwoaT03Nyoobj4+MTYmMjU1KSsxNTEqKG4+PjgmMjU1KSsyOCooMjU1Jm4pKSYmKG89ZCxpPXkpLChwPTc3KigoYz1BLl9nZXRBUkdCKHYsYSkpPj4xNiYyNTUpKzE1MSooYz4+OCYyNTUpKzI4KigyNTUmYykpPGkmJihvPWMsaT1wKSwobT03NyooZj4+MTYmMjU1KSsxNTEqKGY+PjgmMjU1KSsyOCooMjU1JmYpKTxpJiYobz1mLGk9bSksKGc9NzcqKGg+PjE2JjI1NSkrMTUxKihoPj44JjI1NSkrMjgqKDI1NSZoKSk8aSYmKG89aCxpPWcpLHhbYisrXT1vO0EuX3NldFBpeGVscyh2LHgpfSxBLmJsdXI9ZnVuY3Rpb24oZSx0KXtuKGUsdCl9O3ZhciBvPUE7ci5kZWZhdWx0PW99LHtcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCI6MTk3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCI6MTk4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGxcIjoxOTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCI6MjAwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIjoyMDIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleFwiOjIwMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaFwiOjIwNSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiOjIwNixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZlwiOjIwNyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbnQzMi1hcnJheVwiOjIwOSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvclwiOjIxMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCI6MjExLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2ZcIjoyMTIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwXCI6MjEzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiOjIxNSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHRcIjoyMTQsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZVwiOjIxNixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIjoyMTcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2VcIjoyMTgsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZVwiOjIxOSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCI6MjIwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5XCI6MjIxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmdcIjoyMjIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCI6MjIzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5XCI6MjI2fV0sMjg2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnNldFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBBPW4oZShcIi4uL2NvcmUvbWFpblwiKSksaz1uKGUoXCJvbWdnaWZcIikpO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIFIoZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLHI9bmV3IEFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKylyW3RdPWVbdF07cmV0dXJuIHJ9fShlKXx8ZnVuY3Rpb24oZSl7aWYoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKXx8XCJbb2JqZWN0IEFyZ3VtZW50c11cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpfSgpfUEuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlSW1hZ2U9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gQS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVJbWFnZVwiLGFyZ3VtZW50cyksbmV3IEEuZGVmYXVsdC5JbWFnZShlLHQpfSxBLmRlZmF1bHQucHJvdG90eXBlLnNhdmVDYW52YXM9ZnVuY3Rpb24oKXtBLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNhdmVDYW52YXNcIixhcmd1bWVudHMpO3ZhciBlLHQscixuLG89W10uc2xpY2UuY2FsbChhcmd1bWVudHMpO3N3aXRjaChhcmd1bWVudHNbMF1pbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50PyhlPWFyZ3VtZW50c1swXSxvLnNoaWZ0KCkpOmFyZ3VtZW50c1swXWluc3RhbmNlb2YgQS5kZWZhdWx0LkVsZW1lbnQ/KGU9YXJndW1lbnRzWzBdLmVsdCxvLnNoaWZ0KCkpOmU9dGhpcy5fY3VyRWxlbWVudCYmdGhpcy5fY3VyRWxlbWVudC5lbHQsMTw9by5sZW5ndGgmJih0PW9bMF0pLDI8PW8ubGVuZ3RoJiYocj1vWzFdKSxyPXJ8fEEuZGVmYXVsdC5wcm90b3R5cGUuX2NoZWNrRmlsZUV4dGVuc2lvbih0LHIpWzFdfHxcInBuZ1wiKXtkZWZhdWx0Om49XCJpbWFnZS9wbmdcIjticmVhaztjYXNlXCJqcGVnXCI6Y2FzZVwianBnXCI6bj1cImltYWdlL2pwZWdcIn1lLnRvQmxvYihmdW5jdGlvbihlKXtBLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShlLHQscil9LG4pfSxBLmRlZmF1bHQucHJvdG90eXBlLnNhdmVHaWY9ZnVuY3Rpb24ocCxlKXt2YXIgeT1wLmdpZlByb3BlcnRpZXMsdD15Lmxvb3BMaW1pdDsxPT09dD90PW51bGw6bnVsbD09PXQmJih0PTApO2Zvcih2YXIgcj1uZXcgVWludDhBcnJheShwLndpZHRoKnAuaGVpZ2h0KnkubnVtRnJhbWVzKSxtPVtdLG49e30sbz0wO288eS5udW1GcmFtZXM7bysrKXtmb3IodmFyIGk9bmV3IFNldCxhPXkuZnJhbWVzW29dLmltYWdlLmRhdGEscz1hLmxlbmd0aCxsPW5ldyBVaW50MzJBcnJheShwLndpZHRoKnAuaGVpZ2h0KSx1PTAsYz0wO3U8czt1Kz00LGMrKyl7dmFyIGQ9YVt1KzBdPDwxNnxhW3UrMV08PDh8YVt1KzJdPDwwO2kuYWRkKGQpLGxbY109ZH12YXIgZj1SKGkpLnNvcnQoKS50b1N0cmluZygpO3ZvaWQgMD09PW5bZl0/bltmXT17ZnJlcToxLGZyYW1lczpbb119OihuW2ZdLmZyZXErPTEsbltmXS5mcmFtZXMucHVzaChvKSksbS5wdXNoKGwpfXZhciBnPVtdLGg9T2JqZWN0LmtleXMobikuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiBuW3RdLmZyZXEtbltlXS5mcmVxfSksdj1oWzBdLnNwbGl0KFwiLFwiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUpfSk7Zz1nLmNvbmNhdChuW3ZdLmZyYW1lcyk7Zm9yKHZhciBiPW5ldyBTZXQodiksXz0xO188aC5sZW5ndGg7XysrKXt2YXIgeD1oW19dLnNwbGl0KFwiLFwiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUpfSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFiLmhhcyhlKX0pO2lmKHYubGVuZ3RoK3gubGVuZ3RoPD0yNTYpe2Zvcih2YXIgdz0wO3c8eC5sZW5ndGg7dysrKXYucHVzaCh4W3ddKSxiLmFkZCh4W3ddKTtnPWcuY29uY2F0KG5baFtfXV0uZnJhbWVzKX19Zz1uZXcgU2V0KGcpO2Zvcih2YXIgaj17fSxTPTA7Uzx2Lmxlbmd0aDtTKyspalt2W1NdXXx8KGpbdltTXV09Uyk7Zm9yKHZhciBNPTE7TTx2Lmxlbmd0aDspTTw8PTE7di5sZW5ndGg9TTtmb3IodmFyIEU9e2xvb3A6dCxwYWxldHRlOm5ldyBVaW50MzJBcnJheSh2KX0sVD1uZXcgay5kZWZhdWx0LkdpZldyaXRlcihyLHAud2lkdGgscC5oZWlnaHQsRSksTz17fSxDPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0hZy5oYXMoZSkscj10P1tdOnYsbj1uZXcgVWludDhBcnJheShwLndpZHRoKnAuaGVpZ2h0KSxvPXt9LGk9bmV3IFNldCxhPTA7YTxtW2VdLmxlbmd0aDthKyspe3ZhciBzPW1bZV1bYV07dD8odm9pZCAwPT09b1tzXSYmKG9bc109ci5sZW5ndGgsci5wdXNoKHMpKSxuW2FdPW9bc10pOm5bYV09altzXSwwPGUmJm1bZS0xXVthXSE9PXMmJmkuYWRkKHMpfXZhciBsPXt9LHU9ci5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIWkuaGFzKGUpfSk7aWYoMDx1Lmxlbmd0aCl7dmFyIGM9dVswXSxkPXQ/b1tjXTpqW2NdO2lmKDA8ZSl7Zm9yKHZhciBmPTA7ZjxtW2VdLmxlbmd0aDtmKyspbVtlLTFdW2ZdPT09bVtlXVtmXSYmKG5bZl09ZCk7bC50cmFuc3BhcmVudD1kLE8uZnJhbWVPcHRzLmRpc3Bvc2FsPTF9fWlmKGwuZGVsYXk9eS5mcmFtZXNbZV0uZGVsYXkvMTAsdCl7Zm9yKHZhciBoPTE7aDxyLmxlbmd0aDspaDw8PTE7ci5sZW5ndGg9aCxsLnBhbGV0dGU9bmV3IFVpbnQzMkFycmF5KHIpfTA8ZSYmVC5hZGRGcmFtZSgwLDAscC53aWR0aCxwLmhlaWdodCxPLnBpeGVsUGFsZXR0ZUluZGV4LE8uZnJhbWVPcHRzKSxPPXtwaXhlbFBhbGV0dGVJbmRleDpuLGZyYW1lT3B0czpsfX0sTD0wO0w8eS5udW1GcmFtZXM7TCsrKUMoTCk7Ty5mcmFtZU9wdHMuZGlzcG9zYWw9MSxULmFkZEZyYW1lKDAsMCxwLndpZHRoLHAuaGVpZ2h0LE8ucGl4ZWxQYWxldHRlSW5kZXgsTy5mcmFtZU9wdHMpO3ZhciBQPW5ldyBCbG9iKFtyLnNsaWNlKDAsVC5lbmQoKSldLHt0eXBlOlwiaW1hZ2UvZ2lmXCJ9KTtBLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShQLGUsXCJnaWZcIil9LEEuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUZyYW1lcz1mdW5jdGlvbihlLHQscixuLGEpe0EuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2F2ZUZyYW1lc1wiLGFyZ3VtZW50cyk7dmFyIG89cnx8MztvPUEuZGVmYXVsdC5wcm90b3R5cGUuY29uc3RyYWluKG8sMCwxNSksbyo9MWUzO3ZhciBpPW58fDE1O2k9QS5kZWZhdWx0LnByb3RvdHlwZS5jb25zdHJhaW4oaSwwLDIyKTt2YXIgcz0wLGw9QS5kZWZhdWx0LnByb3RvdHlwZS5fbWFrZUZyYW1lLHU9dGhpcy5fY3VyRWxlbWVudC5lbHQsYz1bXSxkPXNldEludGVydmFsKGZ1bmN0aW9uKCl7Yy5wdXNoKGwoZStzLHQsdSkpLHMrK30sMWUzL2kpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihjbGVhckludGVydmFsKGQpLGEpYShjKTtlbHNle3ZhciBlPSEwLHQ9ITEscj12b2lkIDA7dHJ5e2Zvcih2YXIgbixvPWNbU3ltYm9sLml0ZXJhdG9yXSgpOyEoZT0obj1vLm5leHQoKSkuZG9uZSk7ZT0hMCl7dmFyIGk9bi52YWx1ZTtBLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShpLmltYWdlRGF0YSxpLmZpbGVuYW1lLGkuZXh0KX19Y2F0Y2goZSl7dD0hMCxyPWV9ZmluYWxseXt0cnl7ZXx8bnVsbD09by5yZXR1cm58fG8ucmV0dXJuKCl9ZmluYWxseXtpZih0KXRocm93IHJ9fX1jPVtdfSxvKy4wMSl9LEEuZGVmYXVsdC5wcm90b3R5cGUuX21ha2VGcmFtZT1mdW5jdGlvbihlLHQscil7dmFyIG4sbztpZihuPXRoaXM/dGhpcy5fY3VyRWxlbWVudC5lbHQ6cix0KXN3aXRjaCh0LnRvTG93ZXJDYXNlKCkpe2Nhc2VcInBuZ1wiOm89XCJpbWFnZS9wbmdcIjticmVhaztjYXNlXCJqcGVnXCI6Y2FzZVwianBnXCI6bz1cImltYWdlL2pwZWdcIjticmVhaztkZWZhdWx0Om89XCJpbWFnZS9wbmdcIn1lbHNlIHQ9XCJwbmdcIixvPVwiaW1hZ2UvcG5nXCI7dmFyIGk9bi50b0RhdGFVUkwobyk7aT1pLnJlcGxhY2UobyxcImltYWdlL29jdGV0LXN0cmVhbVwiKTt2YXIgYT17fTtyZXR1cm4gYS5pbWFnZURhdGE9aSxhLmZpbGVuYW1lPWUsYS5leHQ9dCxhfTt2YXIgbz1BLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIjoxNDksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCI6MTUyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb21cIjoxNTUsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzXCI6MTc2LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zZXRcIjoxODMsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIjoxOTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCI6MTk0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiOjE5NSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiOjE5NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiOjE5OCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCI6MTk5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiOjIwMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCI6MjAyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIjoyMDEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIjoyMDUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIjoyMDYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIjoyMDcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIjoyMTAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiOjIxMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCI6MjEyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiOjIxMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIjoyMTUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCI6MjE0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIjoyMTYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCI6MjE3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCI6MjE4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIjoyMTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiOjIyMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiOjIyMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCI6MjIyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiOjIyMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50MzItYXJyYXlcIjoyMjUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXlcIjoyMjYsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiOjIyOSxvbWdnaWY6MjM4fV0sMjg3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1jbGFtcGVkLWFycmF5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGxcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciB4PW8oZShcIi4uL2NvcmUvbWFpblwiKSksZD1vKGUoXCIuL2ZpbHRlcnNcIikpLHc9byhlKFwiLi4vY29yZS9oZWxwZXJzXCIpKSxuPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpLG09byhlKFwib21nZ2lmXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGooZSx0KXtyZXR1cm4gMDxlJiZlPHQ/ZTp0fWUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSx4LmRlZmF1bHQucHJvdG90eXBlLmxvYWRJbWFnZT1mdW5jdGlvbihuLG8saSl7eC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsb2FkSW1hZ2VcIixhcmd1bWVudHMpO3ZhciBhPW5ldyB4LmRlZmF1bHQuSW1hZ2UoMSwxLHRoaXMpLHM9dGhpcyxlPW5ldyBSZXF1ZXN0KG4se21ldGhvZDpcIkdFVFwiLG1vZGU6XCJjb3JzXCJ9KTtyZXR1cm4gZmV0Y2gobixlKS50aGVuKGZ1bmN0aW9uKGUpe3ZhciB0PWUuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIik7aWYobnVsbD09PXQmJmNvbnNvbGUud2FybihcIlRoZSBpbWFnZSB5b3UgbG9hZGVkIGRvZXMgbm90IGhhdmUgYSBDb250ZW50LVR5cGUgaGVhZGVyLiBJZiB5b3UgYXJlIHVzaW5nIHRoZSBvbmxpbmUgZWRpdG9yIGNvbnNpZGVyIHJldXBsb2FkaW5nIHRoZSBhc3NldC5cIiksdCYmdC5pbmNsdWRlcyhcImltYWdlL2dpZlwiKSllLmFycmF5QnVmZmVyKCkudGhlbihmdW5jdGlvbihlKXtlJiZmdW5jdGlvbihlLHIsdCxuLG8pe3ZhciBpPW5ldyBtLmRlZmF1bHQuR2lmUmVhZGVyKGUpO3Iud2lkdGg9ci5jYW52YXMud2lkdGg9aS53aWR0aCxyLmhlaWdodD1yLmNhbnZhcy5oZWlnaHQ9aS5oZWlnaHQ7dmFyIGE9W10scz1pLm51bUZyYW1lcygpLGw9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KHIud2lkdGgqci5oZWlnaHQqNCk7aWYoMTxzKXtmb3IodmFyIHU9ZnVuY3Rpb24oZSx0KXt0cnl7dC5kZWNvZGVBbmRCbGl0RnJhbWVSR0JBKGUsbCl9Y2F0Y2goZSl7eC5kZWZhdWx0Ll9mcmllbmRseUZpbGVMb2FkRXJyb3IoOCxyLnNyYyksXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uKGUpOmNvbnNvbGUuZXJyb3IoZSl9fSxjPTA7YzxzO2MrKyl7dmFyIGQ9aS5mcmFtZUluZm8oYyksZj1yLmRyYXdpbmdDb250ZXh0LmdldEltYWdlRGF0YSgwLDAsci53aWR0aCxyLmhlaWdodCk7bD1mLmRhdGEuc2xpY2UoKSx1KGMsaSk7dmFyIGg9bmV3IEltYWdlRGF0YShsLHIud2lkdGgsci5oZWlnaHQpO3IuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKGgsMCwwKTt2YXIgcD1kLmRlbGF5OzA9PT1wJiYocD0xMCksYS5wdXNoKHtpbWFnZTpyLmRyYXdpbmdDb250ZXh0LmdldEltYWdlRGF0YSgwLDAsci53aWR0aCxyLmhlaWdodCksZGVsYXk6MTAqcH0pLDI9PT1kLmRpc3Bvc2FsP3IuZHJhd2luZ0NvbnRleHQuY2xlYXJSZWN0KGQueCxkLnksZC53aWR0aCxkLmhlaWdodCk6Mz09PWQuZGlzcG9zYWwmJnIuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKGYsMCwwLGQueCxkLnksZC53aWR0aCxkLmhlaWdodCl9dmFyIHk9aS5sb29wQ291bnQoKTtudWxsPT09eT95PTE6MD09PXkmJih5PW51bGwpLHIuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKGFbMF0uaW1hZ2UsMCwwKSxyLmdpZlByb3BlcnRpZXM9e2Rpc3BsYXlJbmRleDowLGxvb3BMaW1pdDp5LGxvb3BDb3VudDowLGZyYW1lczphLG51bUZyYW1lczpzLHBsYXlpbmc6ITAsdGltZURpc3BsYXllZDowLGxhc3RDaGFuZ2VUaW1lOjB9fVwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQocik7bygpfShuZXcgVWludDhBcnJheShlKSxhLG8saSxmdW5jdGlvbihlKXtzLl9kZWNyZW1lbnRQcmVsb2FkKCl9LmJpbmQocykpfSxmdW5jdGlvbihlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2koZSk6Y29uc29sZS5lcnJvcihlKX0pO2Vsc2V7dmFyIHI9bmV3IEltYWdlO3Iub25sb2FkPWZ1bmN0aW9uKCl7YS53aWR0aD1hLmNhbnZhcy53aWR0aD1yLndpZHRoLGEuaGVpZ2h0PWEuY2FudmFzLmhlaWdodD1yLmhlaWdodCxhLmRyYXdpbmdDb250ZXh0LmRyYXdJbWFnZShyLDAsMCksYS5tb2RpZmllZD0hMCxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvJiZvKGEpLHMuX2RlY3JlbWVudFByZWxvYWQoKX0sci5vbmVycm9yPWZ1bmN0aW9uKGUpe3guZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDAsci5zcmMpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGk/aShlKTpjb25zb2xlLmVycm9yKGUpfSwwIT09bi5pbmRleE9mKFwiZGF0YTppbWFnZS9cIikmJihyLmNyb3NzT3JpZ2luPVwiQW5vbnltb3VzXCIpLHIuc3JjPW59YS5tb2RpZmllZD0hMH0pLmNhdGNoKGZ1bmN0aW9uKGUpe3guZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDAsbiksXCJmdW5jdGlvblwiPT10eXBlb2YgaT9pKGUpOmNvbnNvbGUuZXJyb3IoZSl9KSxhfSx4LmRlZmF1bHQucHJvdG90eXBlLmltYWdlPWZ1bmN0aW9uKGUsdCxyLG4sbyxpLGEscyxsKXt4LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImltYWdlXCIsYXJndW1lbnRzKTt2YXIgdT1lLndpZHRoLGM9ZS5oZWlnaHQ7ZS5lbHQmJmUuZWx0LnZpZGVvV2lkdGgmJiFlLmNhbnZhcyYmKHU9ZS5lbHQudmlkZW9XaWR0aCxjPWUuZWx0LnZpZGVvSGVpZ2h0KTt2YXIgZD10LGY9cixoPW58fHUscD1vfHxjLHk9aXx8MCxtPWF8fDAsZz1zfHx1LHY9bHx8YztnPWooZyx1KSx2PWoodixjKTt2YXIgYj0xO2UuZWx0JiYhZS5jYW52YXMmJmUuZWx0LnN0eWxlLndpZHRoJiYoYj1lLmVsdC52aWRlb1dpZHRoJiYhbj9lLmVsdC52aWRlb1dpZHRoOmUuZWx0LndpZHRoLGIvPXBhcnNlSW50KGUuZWx0LnN0eWxlLndpZHRoLDEwKSkseSo9YixtKj1iLHYqPWIsZyo9Yjt2YXIgXz13LmRlZmF1bHQubW9kZUFkanVzdChkLGYsaCxwLHRoaXMuX3JlbmRlcmVyLl9pbWFnZU1vZGUpO3RoaXMuX3JlbmRlcmVyLmltYWdlKGUseSxtLGcsdixfLngsXy55LF8udyxfLmgpfSx4LmRlZmF1bHQucHJvdG90eXBlLnRpbnQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt4LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRpbnRcIix0KTt2YXIgbj10aGlzLmNvbG9yLmFwcGx5KHRoaXMsdCk7dGhpcy5fcmVuZGVyZXIuX3RpbnQ9bi5sZXZlbHN9LHguZGVmYXVsdC5wcm90b3R5cGUubm9UaW50PWZ1bmN0aW9uKCl7dGhpcy5fcmVuZGVyZXIuX3RpbnQ9bnVsbH0seC5kZWZhdWx0LnByb3RvdHlwZS5fZ2V0VGludGVkSW1hZ2VDYW52YXM9ZnVuY3Rpb24oZSl7aWYoIWUuY2FudmFzKXJldHVybiBlO3ZhciB0PWQuZGVmYXVsdC5fdG9QaXhlbHMoZS5jYW52YXMpLHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtyLndpZHRoPWUuY2FudmFzLndpZHRoLHIuaGVpZ2h0PWUuY2FudmFzLmhlaWdodDtmb3IodmFyIG49ci5nZXRDb250ZXh0KFwiMmRcIiksbz1uLmNyZWF0ZUltYWdlRGF0YShlLmNhbnZhcy53aWR0aCxlLmNhbnZhcy5oZWlnaHQpLGk9by5kYXRhLGE9MDthPHQubGVuZ3RoO2ErPTQpe3ZhciBzPXRbYV0sbD10W2ErMV0sdT10W2ErMl0sYz10W2ErM107aVthXT1zKnRoaXMuX3JlbmRlcmVyLl90aW50WzBdLzI1NSxpW2ErMV09bCp0aGlzLl9yZW5kZXJlci5fdGludFsxXS8yNTUsaVthKzJdPXUqdGhpcy5fcmVuZGVyZXIuX3RpbnRbMl0vMjU1LGlbYSszXT1jKnRoaXMuX3JlbmRlcmVyLl90aW50WzNdLzI1NX1yZXR1cm4gbi5wdXRJbWFnZURhdGEobywwLDApLHJ9LHguZGVmYXVsdC5wcm90b3R5cGUuaW1hZ2VNb2RlPWZ1bmN0aW9uKGUpe3guZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiaW1hZ2VNb2RlXCIsYXJndW1lbnRzKSxlIT09bi5DT1JORVImJmUhPT1uLkNPUk5FUlMmJmUhPT1uLkNFTlRFUnx8KHRoaXMuX3JlbmRlcmVyLl9pbWFnZU1vZGU9ZSl9O3ZhciBpPXguZGVmYXVsdDtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiOjI1NSxcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjU2LFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCI6MjU5LFwiLi4vY29yZS9oZWxwZXJzXCI6MjYwLFwiLi4vY29yZS9tYWluXCI6MjY0LFwiLi9maWx0ZXJzXCI6Mjg1LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCI6MTU2LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCI6MTU3LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZVwiOjE3OCxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIjoxODUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW5cIjoxOTcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnlcIjoxOTgsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiOjE5OSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXJcIjoyMDAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZFwiOjIwMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCI6MjAxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoXCI6MjA1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCI6MjA2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCI6MjA3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yXCI6MjEwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIjoyMTEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiOjIxMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXBcIjoyMTMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCI6MjE1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiOjIxNCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlXCI6MjE2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiOjIxNyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiOjIxOCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lXCI6MjE5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIjoyMjAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIjoyMjEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZ1wiOjIyMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIjoyMjMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXlcIjoyMjYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtY2xhbXBlZC1hcnJheVwiOjIyNyxvbWdnaWY6MjM4fV0sMjg4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG89aShlKFwiLi4vY29yZS9tYWluXCIpKSxuPWkoZShcIi4vZmlsdGVyc1wiKSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19by5kZWZhdWx0LkltYWdlPWZ1bmN0aW9uKGUsdCl7dGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQsdGhpcy5jYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSx0aGlzLmNhbnZhcy53aWR0aD10aGlzLndpZHRoLHRoaXMuY2FudmFzLmhlaWdodD10aGlzLmhlaWdodCx0aGlzLmRyYXdpbmdDb250ZXh0PXRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKSwodGhpcy5fcGl4ZWxzU3RhdGU9dGhpcykuX3BpeGVsRGVuc2l0eT0xLHRoaXMuZ2lmUHJvcGVydGllcz1udWxsLHRoaXMuX21vZGlmaWVkPSExLHRoaXMucGl4ZWxzPVtdfSxvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLl9hbmltYXRlR2lmPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZ2lmUHJvcGVydGllcyxyPWUuX2xhc3RGcmFtZVRpbWU7aWYoMD09PXQubGFzdENoYW5nZVRpbWUmJih0Lmxhc3RDaGFuZ2VUaW1lPXIpLHQucGxheWluZyl7dC50aW1lRGlzcGxheWVkPXItdC5sYXN0Q2hhbmdlVGltZTt2YXIgbj10LmZyYW1lc1t0LmRpc3BsYXlJbmRleF0uZGVsYXk7aWYodC50aW1lRGlzcGxheWVkPj1uKXt2YXIgbz1NYXRoLmZsb29yKHQudGltZURpc3BsYXllZC9uKTtpZih0LnRpbWVEaXNwbGF5ZWQ9MCx0Lmxhc3RDaGFuZ2VUaW1lPXIsdC5kaXNwbGF5SW5kZXgrPW8sdC5sb29wQ291bnQ9TWF0aC5mbG9vcih0LmRpc3BsYXlJbmRleC90Lm51bUZyYW1lcyksbnVsbCE9PXQubG9vcExpbWl0JiZ0Lmxvb3BDb3VudD49dC5sb29wTGltaXQpdC5wbGF5aW5nPSExO2Vsc2V7dmFyIGk9dC5kaXNwbGF5SW5kZXgldC5udW1GcmFtZXM7dGhpcy5kcmF3aW5nQ29udGV4dC5wdXRJbWFnZURhdGEodC5mcmFtZXNbaV0uaW1hZ2UsMCwwKSx0LmRpc3BsYXlJbmRleD1pLHRoaXMuc2V0TW9kaWZpZWQoITApfX19fSxvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLl9zZXRQcm9wZXJ0eT1mdW5jdGlvbihlLHQpe3RoaXNbZV09dCx0aGlzLnNldE1vZGlmaWVkKCEwKX0sby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5sb2FkUGl4ZWxzPWZ1bmN0aW9uKCl7by5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmxvYWRQaXhlbHMuY2FsbCh0aGlzKSx0aGlzLnNldE1vZGlmaWVkKCEwKX0sby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS51cGRhdGVQaXhlbHM9ZnVuY3Rpb24oZSx0LHIsbil7by5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnVwZGF0ZVBpeGVscy5jYWxsKHRoaXMsZSx0LHIsbiksdGhpcy5zZXRNb2RpZmllZCghMCl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInA1LkltYWdlLmdldFwiLGFyZ3VtZW50cyksby5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmdldC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuX2dldFBpeGVsPW8uZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fZ2V0UGl4ZWwsby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0LHIpe28uZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5zZXQuY2FsbCh0aGlzLGUsdCxyKSx0aGlzLnNldE1vZGlmaWVkKCEwKX0sby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oZSx0KXswPT09ZSYmMD09PXQ/KGU9dGhpcy5jYW52YXMud2lkdGgsdD10aGlzLmNhbnZhcy5oZWlnaHQpOjA9PT1lP2U9dGhpcy5jYW52YXMud2lkdGgqdC90aGlzLmNhbnZhcy5oZWlnaHQ6MD09PXQmJih0PXRoaXMuY2FudmFzLmhlaWdodCplL3RoaXMuY2FudmFzLndpZHRoKSxlPU1hdGguZmxvb3IoZSksdD1NYXRoLmZsb29yKHQpO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7aWYoci53aWR0aD1lLHIuaGVpZ2h0PXQsdGhpcy5naWZQcm9wZXJ0aWVzKWZvcih2YXIgbj10aGlzLmdpZlByb3BlcnRpZXMsbz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcj0wLG49MDtuPHQuaGVpZ2h0O24rKylmb3IodmFyIG89MDtvPHQud2lkdGg7bysrKXt2YXIgaT1NYXRoLmZsb29yKG8qZS53aWR0aC90LndpZHRoKSxhPTQqKE1hdGguZmxvb3IobiplLmhlaWdodC90LmhlaWdodCkqZS53aWR0aCtpKTt0LmRhdGFbcisrXT1lLmRhdGFbYSsrXSx0LmRhdGFbcisrXT1lLmRhdGFbYSsrXSx0LmRhdGFbcisrXT1lLmRhdGFbYSsrXSx0LmRhdGFbcisrXT1lLmRhdGFbYSsrXX19LGk9MDtpPG4ubnVtRnJhbWVzO2krKyl7dmFyIGE9dGhpcy5kcmF3aW5nQ29udGV4dC5jcmVhdGVJbWFnZURhdGEoZSx0KTtvKG4uZnJhbWVzW2ldLmltYWdlLGEpLG4uZnJhbWVzW2ldLmltYWdlPWF9ci5nZXRDb250ZXh0KFwiMmRcIikuZHJhd0ltYWdlKHRoaXMuY2FudmFzLDAsMCx0aGlzLmNhbnZhcy53aWR0aCx0aGlzLmNhbnZhcy5oZWlnaHQsMCwwLHIud2lkdGgsci5oZWlnaHQpLHRoaXMuY2FudmFzLndpZHRoPXRoaXMud2lkdGg9ZSx0aGlzLmNhbnZhcy5oZWlnaHQ9dGhpcy5oZWlnaHQ9dCx0aGlzLmRyYXdpbmdDb250ZXh0LmRyYXdJbWFnZShyLDAsMCxlLHQsMCwwLGUsdCksMDx0aGlzLnBpeGVscy5sZW5ndGgmJnRoaXMubG9hZFBpeGVscygpLHRoaXMuc2V0TW9kaWZpZWQoITApfSxvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtvLmRlZmF1bHQucHJvdG90eXBlLmNvcHkuYXBwbHkodGhpcyx0KX0sby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5tYXNrPWZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPXRoaXMpO3ZhciB0PXRoaXMuZHJhd2luZ0NvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uLHI9MTtlIGluc3RhbmNlb2Ygby5kZWZhdWx0LlJlbmRlcmVyJiYocj1lLl9wSW5zdC5fcGl4ZWxEZW5zaXR5KTt2YXIgbj1bZSwwLDAsciplLndpZHRoLHIqZS5oZWlnaHQsMCwwLHRoaXMud2lkdGgsdGhpcy5oZWlnaHRdO3RoaXMuZHJhd2luZ0NvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPVwiZGVzdGluYXRpb24taW5cIixvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLmNvcHkuYXBwbHkodGhpcyxuKSx0aGlzLmRyYXdpbmdDb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj10LHRoaXMuc2V0TW9kaWZpZWQoITApfSxvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLmZpbHRlcj1mdW5jdGlvbihlLHQpe24uZGVmYXVsdC5hcHBseSh0aGlzLmNhbnZhcyxuLmRlZmF1bHRbZV0sdCksdGhpcy5zZXRNb2RpZmllZCghMCl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuYmxlbmQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInA1LkltYWdlLmJsZW5kXCIsYXJndW1lbnRzKSxvLmRlZmF1bHQucHJvdG90eXBlLmJsZW5kLmFwcGx5KHRoaXMsdCksdGhpcy5zZXRNb2RpZmllZCghMCl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuc2V0TW9kaWZpZWQ9ZnVuY3Rpb24oZSl7dGhpcy5fbW9kaWZpZWQ9ZX0sby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5pc01vZGlmaWVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21vZGlmaWVkfSxvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLnNhdmU9ZnVuY3Rpb24oZSx0KXt0aGlzLmdpZlByb3BlcnRpZXM/by5kZWZhdWx0LnByb3RvdHlwZS5zYXZlR2lmKHRoaXMsZSk6by5kZWZhdWx0LnByb3RvdHlwZS5zYXZlQ2FudmFzKHRoaXMuY2FudmFzLGUsdCl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXtpZih0aGlzLmdpZlByb3BlcnRpZXMpe3ZhciBlPXRoaXMuZ2lmUHJvcGVydGllcztlLnBsYXlpbmc9ITAsZS50aW1lU2luY2VTdGFydD0wLGUudGltZURpc3BsYXllZD0wLGUubGFzdENoYW5nZVRpbWU9MCxlLmxvb3BDb3VudD0wLGUuZGlzcGxheUluZGV4PTAsdGhpcy5kcmF3aW5nQ29udGV4dC5wdXRJbWFnZURhdGEoZS5mcmFtZXNbMF0uaW1hZ2UsMCwwKX19LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuZ2V0Q3VycmVudEZyYW1lPWZ1bmN0aW9uKCl7aWYodGhpcy5naWZQcm9wZXJ0aWVzKXt2YXIgZT10aGlzLmdpZlByb3BlcnRpZXM7cmV0dXJuIGUuZGlzcGxheUluZGV4JWUubnVtRnJhbWVzfX0sby5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5zZXRGcmFtZT1mdW5jdGlvbihlKXtpZih0aGlzLmdpZlByb3BlcnRpZXMpe3ZhciB0PXRoaXMuZ2lmUHJvcGVydGllcztlPHQubnVtRnJhbWVzJiYwPD1lPyh0LnRpbWVEaXNwbGF5ZWQ9MCx0Lmxhc3RDaGFuZ2VUaW1lPTAsdC5kaXNwbGF5SW5kZXg9ZSx0aGlzLmRyYXdpbmdDb250ZXh0LnB1dEltYWdlRGF0YSh0LmZyYW1lc1tlXS5pbWFnZSwwLDApKTpjb25zb2xlLmxvZyhcIkNhbm5vdCBzZXQgR0lGIHRvIGEgZnJhbWUgbnVtYmVyIHRoYXQgaXMgaGlnaGVyIHRoYW4gdG90YWwgbnVtYmVyIG9mIGZyYW1lcyBvciBiZWxvdyB6ZXJvLlwiKX19LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUubnVtRnJhbWVzPWZ1bmN0aW9uKCl7aWYodGhpcy5naWZQcm9wZXJ0aWVzKXJldHVybiB0aGlzLmdpZlByb3BlcnRpZXMubnVtRnJhbWVzfSxvLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLnBsYXk9ZnVuY3Rpb24oKXt0aGlzLmdpZlByb3BlcnRpZXMmJih0aGlzLmdpZlByb3BlcnRpZXMucGxheWluZz0hMCl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXt0aGlzLmdpZlByb3BlcnRpZXMmJih0aGlzLmdpZlByb3BlcnRpZXMucGxheWluZz0hMSl9LG8uZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuZGVsYXk9ZnVuY3Rpb24oZSx0KXtpZih0aGlzLmdpZlByb3BlcnRpZXMpe3ZhciByPXRoaXMuZ2lmUHJvcGVydGllcztpZih0PHIubnVtRnJhbWVzJiYwPD10KXIuZnJhbWVzW3RdLmRlbGF5PWU7ZWxzZXt2YXIgbj0hMCxvPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIGEscz1yLmZyYW1lc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShhPXMubmV4dCgpKS5kb25lKTtuPSEwKXthLnZhbHVlLmRlbGF5PWV9fWNhdGNoKGUpe289ITAsaT1lfWZpbmFsbHl7dHJ5e258fG51bGw9PXMucmV0dXJufHxzLnJldHVybigpfWZpbmFsbHl7aWYobyl0aHJvdyBpfX19fX07dmFyIGE9by5kZWZhdWx0LkltYWdlO3IuZGVmYXVsdD1hfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCIuL2ZpbHRlcnNcIjoyODUsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCI6MTUyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XSwyODk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlclwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBoPW8oZShcIi4uL2NvcmUvbWFpblwiKSksbj1vKGUoXCIuL2ZpbHRlcnNcIikpO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWUoXCIuLi9jb2xvci9wNS5Db2xvclwiKSxoLmRlZmF1bHQucHJvdG90eXBlLnBpeGVscz1bXSxoLmRlZmF1bHQucHJvdG90eXBlLmJsZW5kPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07dmFyIG47KGguZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmxlbmRcIix0KSx0aGlzLl9yZW5kZXJlcik/KG49dGhpcy5fcmVuZGVyZXIpLmJsZW5kLmFwcGx5KG4sdCk6aC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmJsZW5kLmFwcGx5KHRoaXMsdCl9LGguZGVmYXVsdC5wcm90b3R5cGUuY29weT1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3ZhciBuLG8saSxhLHMsbCx1LGMsZDtpZihoLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNvcHlcIix0KSw5PT09dC5sZW5ndGgpbj10WzBdLG89dFsxXSxpPXRbMl0sYT10WzNdLHM9dFs0XSxsPXRbNV0sdT10WzZdLGM9dFs3XSxkPXRbOF07ZWxzZXtpZig4IT09dC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiU2lnbmF0dXJlIG5vdCBzdXBwb3J0ZWRcIik7bj10aGlzLG89dFswXSxpPXRbMV0sYT10WzJdLHM9dFszXSxsPXRbNF0sdT10WzVdLGM9dFs2XSxkPXRbN119aC5kZWZhdWx0LnByb3RvdHlwZS5fY29weUhlbHBlcih0aGlzLG4sbyxpLGEscyxsLHUsYyxkKX0saC5kZWZhdWx0LnByb3RvdHlwZS5fY29weUhlbHBlcj1mdW5jdGlvbihlLHQscixuLG8saSxhLHMsbCx1KXt0LmxvYWRQaXhlbHMoKTt2YXIgYz10LmNhbnZhcy53aWR0aC90LndpZHRoLGQ9MCxmPTA7dC5fcmVuZGVyZXImJnQuX3JlbmRlcmVyLmlzUDNEJiYoZD10LndpZHRoLzIsZj10LmhlaWdodC8yKSxlLl9yZW5kZXJlciYmZS5fcmVuZGVyZXIuaXNQM0Q/aC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmltYWdlLmNhbGwoZS5fcmVuZGVyZXIsdCxyK2QsbitmLG8saSxhLHMsbCx1KTplLmRyYXdpbmdDb250ZXh0LmRyYXdJbWFnZSh0LmNhbnZhcyxjKihyK2QpLGMqKG4rZiksYypvLGMqaSxhLHMsbCx1KX0saC5kZWZhdWx0LnByb3RvdHlwZS5maWx0ZXI9ZnVuY3Rpb24oZSx0KXtoLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImZpbHRlclwiLGFyZ3VtZW50cyksdm9pZCAwIT09dGhpcy5jYW52YXM/bi5kZWZhdWx0LmFwcGx5KHRoaXMuY2FudmFzLG4uZGVmYXVsdFtlXSx0KTpuLmRlZmF1bHQuYXBwbHkodGhpcy5lbHQsbi5kZWZhdWx0W2VdLHQpfSxoLmRlZmF1bHQucHJvdG90eXBlLmdldD1mdW5jdGlvbihlLHQscixuKXt2YXIgbztyZXR1cm4gaC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJnZXRcIixhcmd1bWVudHMpLChvPXRoaXMuX3JlbmRlcmVyKS5nZXQuYXBwbHkobyxhcmd1bWVudHMpfSxoLmRlZmF1bHQucHJvdG90eXBlLmxvYWRQaXhlbHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtoLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImxvYWRQaXhlbHNcIix0KSx0aGlzLl9yZW5kZXJlci5sb2FkUGl4ZWxzKCl9LGguZGVmYXVsdC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCxyKXt0aGlzLl9yZW5kZXJlci5zZXQoZSx0LHIpfSxoLmRlZmF1bHQucHJvdG90eXBlLnVwZGF0ZVBpeGVscz1mdW5jdGlvbihlLHQscixuKXtoLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInVwZGF0ZVBpeGVsc1wiLGFyZ3VtZW50cyksMCE9PXRoaXMucGl4ZWxzLmxlbmd0aCYmdGhpcy5fcmVuZGVyZXIudXBkYXRlUGl4ZWxzKGUsdCxyLG4pfTt2YXIgaT1oLmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uL2NvbG9yL3A1LkNvbG9yXCI6MjUxLFwiLi4vY29yZS9tYWluXCI6MjY0LFwiLi9maWx0ZXJzXCI6Mjg1LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlclwiOjE1Mn1dLDI5MDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLnVybFwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBnPW4oZShcIi4uL2NvcmUvbWFpblwiKSk7ZShcIndoYXR3Zy1mZXRjaFwiKSxlKFwiZXM2LXByb21pc2UvYXV0b1wiKTt2YXIgbT1uKGUoXCJmZXRjaC1qc29ucFwiKSkscz1uKGUoXCJmaWxlLXNhdmVyXCIpKTtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiB2KGUpe3JldHVybih2PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1mdW5jdGlvbiBiKGUsdCl7dmFyIHI9e307aWYodm9pZCAwPT09KHQ9dHx8W10pKWZvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXRbbi50b1N0cmluZygpXT1uO2Zvcih2YXIgbz0wO288dC5sZW5ndGg7bysrKXt2YXIgaT10W29dLGE9ZVtvXTtyW2ldPWF9cmV0dXJuIHJ9ZnVuY3Rpb24geShlKXtyZXR1cm4gZS5yZXBsYWNlKC8mL2csXCImYW1wO1wiKS5yZXBsYWNlKC88L2csXCImbHQ7XCIpLnJlcGxhY2UoLz4vZyxcIiZndDtcIikucmVwbGFjZSgvXCIvZyxcIiZxdW90O1wiKS5yZXBsYWNlKC8nL2csXCImIzAzOTtcIil9ZnVuY3Rpb24gbChlLHQpe3QmJiEwIT09dCYmXCJ0cnVlXCIhPT10fHwodD1cIlwiKTt2YXIgcj1cIlwiO3JldHVybihlPWV8fFwidW50aXRsZWRcIikmJmUuaW5jbHVkZXMoXCIuXCIpJiYocj1lLnNwbGl0KFwiLlwiKS5wb3AoKSksdCYmciE9PXQmJihyPXQsZT1cIlwiLmNvbmNhdChlLFwiLlwiKS5jb25jYXQocikpLFtlLHJdfWUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSxnLmRlZmF1bHQucHJvdG90eXBlLmxvYWRKU09OPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07Zy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsb2FkSlNPTlwiLHQpO2Zvcih2YXIgbixvLGksYT10WzBdLHM9e30sbD1cImpzb25cIix1PTE7dTx0Lmxlbmd0aDt1Kyspe3ZhciBjPXRbdV07XCJzdHJpbmdcIj09dHlwZW9mIGM/XCJqc29ucFwiIT09YyYmXCJqc29uXCIhPT1jfHwobD1jKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBjP24/bz1jOm49YzpcIm9iamVjdFwiPT09dihjKSYmKGMuaGFzT3duUHJvcGVydHkoXCJqc29ucENhbGxiYWNrXCIpfHxjLmhhc093blByb3BlcnR5KFwianNvbnBDYWxsYmFja0Z1bmN0aW9uXCIpKSYmKGw9XCJqc29ucFwiLGk9Yyl9dmFyIGQ9dGhpcztyZXR1cm4gdGhpcy5odHRwRG8oYSxcIkdFVFwiLGksbCxmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gZSlzW3RdPWVbdF07dm9pZCAwIT09biYmbihlKSxkLl9kZWNyZW1lbnRQcmVsb2FkKCl9LGZ1bmN0aW9uKGUpe2lmKGcuZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDUsYSksIW8pdGhyb3cgZTtvKGUpfSksc30sZy5kZWZhdWx0LnByb3RvdHlwZS5sb2FkU3RyaW5ncz1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2cuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibG9hZFN0cmluZ3NcIix0KTtmb3IodmFyIG8sbixpPVtdLGE9MTthPHQubGVuZ3RoO2ErKyl7dmFyIHM9dFthXTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBzJiYodm9pZCAwPT09bz9vPXM6dm9pZCAwPT09biYmKG49cykpfXZhciBsPXRoaXM7cmV0dXJuIGcuZGVmYXVsdC5wcm90b3R5cGUuaHR0cERvLmNhbGwodGhpcyx0WzBdLFwiR0VUXCIsXCJ0ZXh0XCIsZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUucmVwbGFjZSgvXFxyXFxuL2csXCJcXHJcIikucmVwbGFjZSgvXFxuL2csXCJcXHJcIikuc3BsaXQoL1xcci8pLHI9MCxuPXQubGVuZ3RoO3I8bjtyKz0zMjc2OClBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShpLHQuc2xpY2UocixNYXRoLm1pbihyKzMyNzY4LG4pKSk7dm9pZCAwIT09byYmbyhpKSxsLl9kZWNyZW1lbnRQcmVsb2FkKCl9LGZ1bmN0aW9uKGUpe2lmKGcuZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDMsZSksIW4pdGhyb3cgZTtuKGUpfSksaX0sZy5kZWZhdWx0LnByb3RvdHlwZS5sb2FkVGFibGU9ZnVuY3Rpb24odCl7dmFyIGYscixoLGU9W10scD0hMSxuPXQuc3Vic3RyaW5nKHQubGFzdEluZGV4T2YoXCIuXCIpKzEsdC5sZW5ndGgpO1wiY3N2XCI9PT1uP2g9XCIsXCI6XCJzc3ZcIj09PW4/aD1cIjtcIjpcInRzdlwiPT09biYmKGg9XCJcXHRcIik7Zm9yKHZhciBvPTE7bzxhcmd1bWVudHMubGVuZ3RoO28rKylcImZ1bmN0aW9uXCI9PXR5cGVvZiBhcmd1bWVudHNbb10/dm9pZCAwPT09Zj9mPWFyZ3VtZW50c1tvXTp2b2lkIDA9PT1yJiYocj1hcmd1bWVudHNbb10pOlwic3RyaW5nXCI9PXR5cGVvZiBhcmd1bWVudHNbb10mJihlLnB1c2goYXJndW1lbnRzW29dKSxcImhlYWRlclwiPT09YXJndW1lbnRzW29dJiYocD0hMCksXCJjc3ZcIj09PWFyZ3VtZW50c1tvXT9oPVwiLFwiOlwic3N2XCI9PT1hcmd1bWVudHNbb10/aD1cIjtcIjpcInRzdlwiPT09YXJndW1lbnRzW29dJiYoaD1cIlxcdFwiKSk7dmFyIHk9bmV3IGcuZGVmYXVsdC5UYWJsZSxtPXRoaXM7cmV0dXJuIHRoaXMuaHR0cERvKHQsXCJHRVRcIixcInRhYmxlXCIsZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbj17fSxvPVtdLGk9MCxhPW51bGwscz1mdW5jdGlvbigpe24uY3VycmVudFN0YXRlPTAsbi50b2tlbj1cIlwifSxsPWZ1bmN0aW9uKCl7YS5wdXNoKG4udG9rZW4pLHMoKX0sdT1mdW5jdGlvbigpe24uY3VycmVudFN0YXRlPTQsby5wdXNoKGEpLGE9bnVsbH07Oyl7aWYobnVsbD09KHQ9ZVtpKytdKSl7aWYobi5lc2NhcGVkKXRocm93IG5ldyBFcnJvcihcIlVuY2xvc2VkIHF1b3RlIGluIGZpbGUuXCIpO2lmKGEpe2woKSx1KCk7YnJlYWt9fWlmKG51bGw9PT1hJiYobi5lc2NhcGVkPSExLGE9W10scygpKSwwPT09bi5jdXJyZW50U3RhdGUpe2lmKCdcIic9PT10KXtuLmVzY2FwZWQ9ITAsbi5jdXJyZW50U3RhdGU9MTtjb250aW51ZX1uLmN1cnJlbnRTdGF0ZT0xfWlmKDE9PT1uLmN1cnJlbnRTdGF0ZSYmbi5lc2NhcGVkKWlmKCdcIic9PT10KSdcIic9PT1lW2ldPyhuLnRva2VuKz0nXCInLGkrKyk6KG4uZXNjYXBlZD0hMSxuLmN1cnJlbnRTdGF0ZT0yKTtlbHNle2lmKFwiXFxyXCI9PT10KWNvbnRpbnVlO24udG9rZW4rPXR9ZWxzZVwiXFxyXCI9PT10PyhcIlxcblwiPT09ZVtpXSYmaSsrLGwoKSx1KCkpOlwiXFxuXCI9PT10PyhsKCksdSgpKTp0PT09aD9sKCk6MT09PW4uY3VycmVudFN0YXRlJiYobi50b2tlbis9dCl9aWYocCl5LmNvbHVtbnM9by5zaGlmdCgpO2Vsc2UgZm9yKHZhciBjPTA7YzxvWzBdLmxlbmd0aDtjKyspeS5jb2x1bW5zW2NdPVwibnVsbFwiO2Zvcih2YXIgZD0wO2Q8by5sZW5ndGg7ZCsrKSgxIT09b1tkXS5sZW5ndGh8fFwidW5kZWZpbmVkXCIhPT1vW2RdWzBdJiZcIlwiIT09b1tkXVswXSkmJigocj1uZXcgZy5kZWZhdWx0LlRhYmxlUm93KS5hcnI9b1tkXSxyLm9iaj1iKG9bZF0seS5jb2x1bW5zKSx5LmFkZFJvdyhyKSk7XCJmdW5jdGlvblwiPT10eXBlb2YgZiYmZih5KSxtLl9kZWNyZW1lbnRQcmVsb2FkKCl9LGZ1bmN0aW9uKGUpe2cuZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDIsdCkscj9yKGUpOmNvbnNvbGUuZXJyb3IoZSl9KSx5fSxnLmRlZmF1bHQucHJvdG90eXBlLmxvYWRYTUw9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtmb3IodmFyIG4sbyxpPW5ldyBnLmRlZmF1bHQuWE1MLGE9MTthPHQubGVuZ3RoO2ErKyl7dmFyIHM9dFthXTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBzJiYodm9pZCAwPT09bj9uPXM6dm9pZCAwPT09byYmKG89cykpfXZhciBsPXRoaXM7cmV0dXJuIHRoaXMuaHR0cERvKHRbMF0sXCJHRVRcIixcInhtbFwiLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdCBpbiBlKWlbdF09ZVt0XTt2b2lkIDAhPT1uJiZuKGkpLGwuX2RlY3JlbWVudFByZWxvYWQoKX0sZnVuY3Rpb24oZSl7aWYoZy5kZWZhdWx0Ll9mcmllbmRseUZpbGVMb2FkRXJyb3IoMSxlKSwhbyl0aHJvdyBlO28oZSl9KSxpfSxnLmRlZmF1bHQucHJvdG90eXBlLmxvYWRCeXRlcz1mdW5jdGlvbih0LHIsbil7dmFyIG89e30saT10aGlzO3JldHVybiB0aGlzLmh0dHBEbyh0LFwiR0VUXCIsXCJhcnJheUJ1ZmZlclwiLGZ1bmN0aW9uKGUpe28uYnl0ZXM9bmV3IFVpbnQ4QXJyYXkoZSksXCJmdW5jdGlvblwiPT10eXBlb2YgciYmcihvKSxpLl9kZWNyZW1lbnRQcmVsb2FkKCl9LGZ1bmN0aW9uKGUpe2lmKGcuZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDYsdCksIW4pdGhyb3cgZTtuKGUpfSksb30sZy5kZWZhdWx0LnByb3RvdHlwZS5odHRwR2V0PWZ1bmN0aW9uKCl7Zy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJodHRwR2V0XCIsYXJndW1lbnRzKTt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO3JldHVybiBlLnNwbGljZSgxLDAsXCJHRVRcIiksZy5kZWZhdWx0LnByb3RvdHlwZS5odHRwRG8uYXBwbHkodGhpcyxlKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5odHRwUG9zdD1mdW5jdGlvbigpe2cuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiaHR0cFBvc3RcIixhcmd1bWVudHMpO3ZhciBlPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIGUuc3BsaWNlKDEsMCxcIlBPU1RcIiksZy5kZWZhdWx0LnByb3RvdHlwZS5odHRwRG8uYXBwbHkodGhpcyxlKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5odHRwRG89ZnVuY3Rpb24oKXtmb3IodmFyIG4sZSx0LHIsbyxpPXt9LGE9MCxzPVwidGV4dC9wbGFpblwiLGw9YXJndW1lbnRzLmxlbmd0aC0xOzA8bCYmXCJmdW5jdGlvblwiPT10eXBlb2YobDwwfHxhcmd1bWVudHMubGVuZ3RoPD1sP3ZvaWQgMDphcmd1bWVudHNbbF0pO2wtLSlhKys7dmFyIHU9YXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdO2lmKDI9PWFyZ3VtZW50cy5sZW5ndGgtYSYmXCJzdHJpbmdcIj09dHlwZW9mIHUmJlwib2JqZWN0XCI9PT12KGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSkpcj1uZXcgUmVxdWVzdCh1LGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSksZT1hcmd1bWVudHMubGVuZ3RoPD0yP3ZvaWQgMDphcmd1bWVudHNbMl0sdD1hcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM107ZWxzZXtmb3IodmFyIGMsZD1cIkdFVFwiLGY9MTtmPGFyZ3VtZW50cy5sZW5ndGg7ZisrKXt2YXIgaD1mPDB8fGFyZ3VtZW50cy5sZW5ndGg8PWY/dm9pZCAwOmFyZ3VtZW50c1tmXTtpZihcInN0cmluZ1wiPT10eXBlb2YgaClcIkdFVFwiPT09aHx8XCJQT1NUXCI9PT1ofHxcIlBVVFwiPT09aHx8XCJERUxFVEVcIj09PWg/ZD1oOlwianNvblwiPT09aHx8XCJqc29ucFwiPT09aHx8XCJiaW5hcnlcIj09PWh8fFwiYXJyYXlCdWZmZXJcIj09PWh8fFwieG1sXCI9PT1ofHxcInRleHRcIj09PWh8fFwidGFibGVcIj09PWg/bj1oOmM9aDtlbHNlIGlmKFwibnVtYmVyXCI9PXR5cGVvZiBoKWM9aC50b1N0cmluZygpO2Vsc2UgaWYoXCJvYmplY3RcIj09PXYoaCkpaWYoaC5oYXNPd25Qcm9wZXJ0eShcImpzb25wQ2FsbGJhY2tcIil8fGguaGFzT3duUHJvcGVydHkoXCJqc29ucENhbGxiYWNrRnVuY3Rpb25cIikpZm9yKHZhciBwIGluIGgpaVtwXT1oW3BdO2Vsc2Ugcz1oIGluc3RhbmNlb2YgZy5kZWZhdWx0LlhNTD8oYz1oLnNlcmlhbGl6ZSgpLFwiYXBwbGljYXRpb24veG1sXCIpOihjPUpTT04uc3RyaW5naWZ5KGgpLFwiYXBwbGljYXRpb24vanNvblwiKTtlbHNlXCJmdW5jdGlvblwiPT10eXBlb2YgaCYmKGU/dD1oOmU9aCl9dmFyIHk9XCJHRVRcIj09PWQ/bmV3IEhlYWRlcnM6bmV3IEhlYWRlcnMoe1wiQ29udGVudC1UeXBlXCI6c30pO3I9bmV3IFJlcXVlc3QodSx7bWV0aG9kOmQsbW9kZTpcImNvcnNcIixib2R5OmMsaGVhZGVyczp5fSl9cmV0dXJuKG89KG89XCJqc29ucFwiPT09KG49bnx8KHUuaW5jbHVkZXMoXCJqc29uXCIpP1wianNvblwiOnUuaW5jbHVkZXMoXCJ4bWxcIik/XCJ4bWxcIjpcInRleHRcIikpPygwLG0uZGVmYXVsdCkodSxpKTpmZXRjaChyKSkudGhlbihmdW5jdGlvbihlKXtpZighZS5vayl7dmFyIHQ9bmV3IEVycm9yKGUuYm9keSk7dGhyb3cgdC5zdGF0dXM9ZS5zdGF0dXMsdC5vaz0hMSx0fXZhciByPTA7c3dpdGNoKFwianNvbnBcIiE9PW4mJihyPWUuaGVhZGVycy5nZXQoXCJjb250ZW50LWxlbmd0aFwiKSksciYmNjRlNjxyJiZnLmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcig3LHUpLG4pe2Nhc2VcImpzb25cIjpjYXNlXCJqc29ucFwiOnJldHVybiBlLmpzb24oKTtjYXNlXCJiaW5hcnlcIjpyZXR1cm4gZS5ibG9iKCk7Y2FzZVwiYXJyYXlCdWZmZXJcIjpyZXR1cm4gZS5hcnJheUJ1ZmZlcigpO2Nhc2VcInhtbFwiOnJldHVybiBlLnRleHQoKS50aGVuKGZ1bmN0aW9uKGUpe3ZhciB0PShuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoZSxcInRleHQveG1sXCIpO3JldHVybiBuZXcgZy5kZWZhdWx0LlhNTCh0LmRvY3VtZW50RWxlbWVudCl9KTtkZWZhdWx0OnJldHVybiBlLnRleHQoKX19KSkudGhlbihlfHxmdW5jdGlvbigpe30pLG8uY2F0Y2godHx8Y29uc29sZS5lcnJvciksb30sd2luZG93LlVSTD13aW5kb3cuVVJMfHx3aW5kb3cud2Via2l0VVJMLGcuZGVmYXVsdC5wcm90b3R5cGUuX3BXcml0ZXJzPVtdLGcuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlV3JpdGVyPWZ1bmN0aW9uKGUsdCl7dmFyIHI7Zm9yKHZhciBuIGluIGcuZGVmYXVsdC5wcm90b3R5cGUuX3BXcml0ZXJzKWlmKGcuZGVmYXVsdC5wcm90b3R5cGUuX3BXcml0ZXJzW25dLm5hbWU9PT1lKXJldHVybiByPW5ldyBnLmRlZmF1bHQuUHJpbnRXcml0ZXIoZSt0aGlzLm1pbGxpcygpLHQpLGcuZGVmYXVsdC5wcm90b3R5cGUuX3BXcml0ZXJzLnB1c2gocikscjtyZXR1cm4gcj1uZXcgZy5kZWZhdWx0LlByaW50V3JpdGVyKGUsdCksZy5kZWZhdWx0LnByb3RvdHlwZS5fcFdyaXRlcnMucHVzaChyKSxyfSxnLmRlZmF1bHQuUHJpbnRXcml0ZXI9ZnVuY3Rpb24ocixuKXt2YXIgbz10aGlzO3RoaXMubmFtZT1yLHRoaXMuY29udGVudD1cIlwiLHRoaXMud3JpdGU9ZnVuY3Rpb24oZSl7dGhpcy5jb250ZW50Kz1lfSx0aGlzLnByaW50PWZ1bmN0aW9uKGUpe3RoaXMuY29udGVudCs9XCJcIi5jb25jYXQoZSxcIlxcblwiKX0sdGhpcy5jbGVhcj1mdW5jdGlvbigpe3RoaXMuY29udGVudD1cIlwifSx0aGlzLmNsb3NlPWZ1bmN0aW9uKCl7dmFyIGU9W107Zm9yKHZhciB0IGluIGUucHVzaCh0aGlzLmNvbnRlbnQpLGcuZGVmYXVsdC5wcm90b3R5cGUud3JpdGVGaWxlKGUscixuKSxnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVycylnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVyc1t0XS5uYW1lPT09dGhpcy5uYW1lJiZnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVycy5zcGxpY2UodCwxKTtvLmNsZWFyKCksbz17fX19LGcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZT1mdW5jdGlvbihlLHQscil7dmFyIG49YXJndW1lbnRzLG89dGhpcy5fY3VyRWxlbWVudD90aGlzLl9jdXJFbGVtZW50LmVsdDp0aGlzLmVsdDtpZigwIT09bi5sZW5ndGgpaWYoblswXWluc3RhbmNlb2YgZy5kZWZhdWx0LlJlbmRlcmVyfHxuWzBdaW5zdGFuY2VvZiBnLmRlZmF1bHQuR3JhcGhpY3MpZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlQ2FudmFzKG5bMF0uZWx0LG5bMV0sblsyXSk7ZWxzZSBpZigxPT09bi5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBuWzBdKWcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUNhbnZhcyhvLG5bMF0pO2Vsc2Ugc3dpdGNoKGwoblsxXSxuWzJdKVsxXSl7Y2FzZVwianNvblwiOnJldHVybiB2b2lkIGcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUpTT04oblswXSxuWzFdLG5bMl0pO2Nhc2VcInR4dFwiOnJldHVybiB2b2lkIGcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZVN0cmluZ3MoblswXSxuWzFdLG5bMl0pO2RlZmF1bHQ6blswXWluc3RhbmNlb2YgQXJyYXk/Zy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlU3RyaW5ncyhuWzBdLG5bMV0sblsyXSk6blswXWluc3RhbmNlb2YgZy5kZWZhdWx0LlRhYmxlP2cuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZVRhYmxlKG5bMF0sblsxXSxuWzJdKTpuWzBdaW5zdGFuY2VvZiBnLmRlZmF1bHQuSW1hZ2U/Zy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlQ2FudmFzKG5bMF0uY2FudmFzLG5bMV0pOm5bMF1pbnN0YW5jZW9mIGcuZGVmYXVsdC5Tb3VuZEZpbGUmJmcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZVNvdW5kKG5bMF0sblsxXSxuWzJdLG5bM10pfWVsc2UgZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlQ2FudmFzKG8pfSxnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVKU09OPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbjtnLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNhdmVKU09OXCIsYXJndW1lbnRzKSxuPXI/SlNPTi5zdHJpbmdpZnkoZSk6SlNPTi5zdHJpbmdpZnkoZSx2b2lkIDAsMiksdGhpcy5zYXZlU3RyaW5ncyhuLnNwbGl0KFwiXFxuXCIpLHQsXCJqc29uXCIpfSxnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVKU09OT2JqZWN0PWcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUpTT04sZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlSlNPTkFycmF5PWcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUpTT04sZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlU3RyaW5ncz1mdW5jdGlvbihlLHQscixuKXtnLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNhdmVTdHJpbmdzXCIsYXJndW1lbnRzKTtmb3IodmFyIG89cnx8XCJ0eHRcIixpPXRoaXMuY3JlYXRlV3JpdGVyKHQsbyksYT0wO2E8ZS5sZW5ndGg7YSsrKW4/aS53cml0ZShlW2FdK1wiXFxyXFxuXCIpOmkud3JpdGUoZVthXStcIlxcblwiKTtpLmNsb3NlKCksaS5jbGVhcigpfSxnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVUYWJsZT1mdW5jdGlvbihlLHQscil7dmFyIG47Zy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzYXZlVGFibGVcIixhcmd1bWVudHMpLG49dm9pZCAwPT09cj90LnN1YnN0cmluZyh0Lmxhc3RJbmRleE9mKFwiLlwiKSsxLHQubGVuZ3RoKTpyO3ZhciBvPXRoaXMuY3JlYXRlV3JpdGVyKHQsbiksaT1lLmNvbHVtbnMsYT1cIixcIjtpZihcInRzdlwiPT09biYmKGE9XCJcXHRcIiksXCJodG1sXCIhPT1uKXtpZihcIjBcIiE9PWlbMF0pe2Zvcih2YXIgcz0wO3M8aS5sZW5ndGg7cysrKXM8aS5sZW5ndGgtMT9vLndyaXRlKGlbc10rYSk6by53cml0ZShpW3NdKTtvLndyaXRlKFwiXFxuXCIpfWZvcih2YXIgbD0wO2w8ZS5yb3dzLmxlbmd0aDtsKyspe3ZhciB1PXZvaWQgMDtmb3IodT0wO3U8ZS5yb3dzW2xdLmFyci5sZW5ndGg7dSsrKXU8ZS5yb3dzW2xdLmFyci5sZW5ndGgtMT9cImNzdlwiPT09biYmU3RyaW5nKGUucm93c1tsXS5hcnJbdV0pLmluY2x1ZGVzKFwiLFwiKT9vLndyaXRlKCdcIicrZS5yb3dzW2xdLmFyclt1XSsnXCInK2EpOm8ud3JpdGUoZS5yb3dzW2xdLmFyclt1XSthKTpcImNzdlwiPT09biYmU3RyaW5nKGUucm93c1tsXS5hcnJbdV0pLmluY2x1ZGVzKFwiLFwiKT9vLndyaXRlKCdcIicrZS5yb3dzW2xdLmFyclt1XSsnXCInKTpvLndyaXRlKGUucm93c1tsXS5hcnJbdV0pO28ud3JpdGUoXCJcXG5cIil9fWVsc2V7by5wcmludChcIjxodG1sPlwiKSxvLnByaW50KFwiPGhlYWQ+XCIpO2lmKG8ucHJpbnQoJyAgPG1ldGEgaHR0cC1lcXVpdj1cImNvbnRlbnQtdHlwZVwiIGNvbnRlbnQ9XCJ0ZXh0L2h0bWw7Y2hhcnNldD11dGYtOFwiIC8+Jyksby5wcmludChcIjwvaGVhZD5cIiksby5wcmludChcIjxib2R5PlwiKSxvLnByaW50KFwiICA8dGFibGU+XCIpLFwiMFwiIT09aVswXSl7by5wcmludChcIiAgICA8dHI+XCIpO2Zvcih2YXIgYz0wO2M8aS5sZW5ndGg7YysrKXt2YXIgZD15KGlbY10pO28ucHJpbnQoXCIgICAgICA8dGQ+XCIuY29uY2F0KGQpKSxvLnByaW50KFwiICAgICAgPC90ZD5cIil9by5wcmludChcIiAgICA8L3RyPlwiKX1mb3IodmFyIGY9MDtmPGUucm93cy5sZW5ndGg7ZisrKXtvLnByaW50KFwiICAgIDx0cj5cIik7Zm9yKHZhciBoPTA7aDxlLmNvbHVtbnMubGVuZ3RoO2grKyl7dmFyIHA9eShlLnJvd3NbZl0uZ2V0U3RyaW5nKGgpKTtvLnByaW50KFwiICAgICAgPHRkPlwiLmNvbmNhdChwKSksby5wcmludChcIiAgICAgIDwvdGQ+XCIpfW8ucHJpbnQoXCIgICAgPC90cj5cIil9by5wcmludChcIiAgPC90YWJsZT5cIiksby5wcmludChcIjwvYm9keT5cIiksby5wcmludChcIjwvaHRtbD5cIil9by5jbG9zZSgpLG8uY2xlYXIoKX0sZy5kZWZhdWx0LnByb3RvdHlwZS53cml0ZUZpbGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPVwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCI7Zy5kZWZhdWx0LnByb3RvdHlwZS5faXNTYWZhcmkoKSYmKG49XCJ0ZXh0L3BsYWluXCIpO3ZhciBvPW5ldyBCbG9iKGUse3R5cGU6bn0pO2cuZGVmYXVsdC5wcm90b3R5cGUuZG93bmxvYWRGaWxlKG8sdCxyKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5kb3dubG9hZEZpbGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWwodCxyKSxvPW5bMF07aWYoZSBpbnN0YW5jZW9mIEJsb2Ipcy5kZWZhdWx0LnNhdmVBcyhlLG8pO2Vsc2V7dmFyIGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7aWYoaS5ocmVmPWUsaS5kb3dubG9hZD1vLGkub25jbGljaz1mdW5jdGlvbihlKXt2YXIgdDt0PWUsZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0LnRhcmdldCksZS5zdG9wUHJvcGFnYXRpb24oKX0saS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaSksZy5kZWZhdWx0LnByb3RvdHlwZS5faXNTYWZhcmkoKSl7dmFyIGE9XCJIZWxsbywgU2FmYXJpIHVzZXIhIFRvIGRvd25sb2FkIHRoaXMgZmlsZS4uLlxcblwiO2ErPVwiMS4gR28gdG8gRmlsZSAtLVxceDNlIFNhdmUgQXMuXFxuXCIsYSs9JzIuIENob29zZSBcIlBhZ2UgU291cmNlXCIgYXMgdGhlIEZvcm1hdC5cXG4nLGErPSczLiBOYW1lIGl0IHdpdGggdGhpcyBleHRlbnNpb246IC5cIicuY29uY2F0KG5bMV0sJ1wiJyksYWxlcnQoYSl9aS5jbGljaygpfX0sZy5kZWZhdWx0LnByb3RvdHlwZS5fY2hlY2tGaWxlRXh0ZW5zaW9uPWwsZy5kZWZhdWx0LnByb3RvdHlwZS5faXNTYWZhcmk9ZnVuY3Rpb24oKXtyZXR1cm4gMDxPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwod2luZG93LkhUTUxFbGVtZW50KS5pbmRleE9mKFwiQ29uc3RydWN0b3JcIil9O3ZhciBvPWcuZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIjoyNTUsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiOjI1NixcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiOjI1OSxcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIjoxNDksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIjoxNTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIjoxNTcsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZlwiOjE2MCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiOjE2MixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2VcIjoxNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiOjE2NixcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2VcIjoxNzgsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIjoxODUsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIjoxOTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCI6MTk0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiOjE5NSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiOjE5NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiOjE5OCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCI6MTk5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiOjIwMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCI6MjAyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIjoyMDEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIjoyMDUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIjoyMDYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIjoyMDcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIjoyMTAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiOjIxMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCI6MjEyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiOjIxMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIjoyMTUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCI6MjE0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIjoyMTYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCI6MjE3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCI6MjE4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIjoyMTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiOjIyMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiOjIyMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCI6MjIyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiOjIyMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiOjIyNixcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5LFwiY29yZS1qcy9tb2R1bGVzL3dlYi51cmxcIjoyMzEsXCJlczYtcHJvbWlzZS9hdXRvXCI6MjMyLFwiZmV0Y2gtanNvbnBcIjoyMzQsXCJmaWxlLXNhdmVyXCI6MjM1LFwid2hhdHdnLWZldGNoXCI6MjQyfV0sMjkxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LlRhYmxlPWZ1bmN0aW9uKGUpe3RoaXMuY29sdW1ucz1bXSx0aGlzLnJvd3M9W119LG8uZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuYWRkUm93PWZ1bmN0aW9uKGUpe3ZhciB0PWV8fG5ldyBvLmRlZmF1bHQuVGFibGVSb3c7aWYodm9pZCAwPT09dC5hcnJ8fHZvaWQgMD09PXQub2JqKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgVGFibGVSb3c6IFwiLmNvbmNhdCh0KSk7cmV0dXJuKHQudGFibGU9dGhpcykucm93cy5wdXNoKHQpLHR9LG8uZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUucmVtb3ZlUm93PWZ1bmN0aW9uKGUpe3RoaXMucm93c1tlXS50YWJsZT1udWxsO3ZhciB0PXRoaXMucm93cy5zcGxpY2UoZSsxLHRoaXMucm93cy5sZW5ndGgpO3RoaXMucm93cy5wb3AoKSx0aGlzLnJvd3M9dGhpcy5yb3dzLmNvbmNhdCh0KX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRSb3c9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMucm93c1tlXX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRSb3dzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucm93c30sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5maW5kUm93PWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2Zvcih2YXIgcj0wO3I8dGhpcy5yb3dzLmxlbmd0aDtyKyspaWYodGhpcy5yb3dzW3JdLm9ialt0XT09PWUpcmV0dXJuIHRoaXMucm93c1tyXX1lbHNlIGZvcih2YXIgbj0wO248dGhpcy5yb3dzLmxlbmd0aDtuKyspaWYodGhpcy5yb3dzW25dLmFyclt0XT09PWUpcmV0dXJuIHRoaXMucm93c1tuXTtyZXR1cm4gbnVsbH0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5maW5kUm93cz1mdW5jdGlvbihlLHQpe3ZhciByPVtdO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KWZvcih2YXIgbj0wO248dGhpcy5yb3dzLmxlbmd0aDtuKyspdGhpcy5yb3dzW25dLm9ialt0XT09PWUmJnIucHVzaCh0aGlzLnJvd3Nbbl0pO2Vsc2UgZm9yKHZhciBvPTA7bzx0aGlzLnJvd3MubGVuZ3RoO28rKyl0aGlzLnJvd3Nbb10uYXJyW3RdPT09ZSYmci5wdXNoKHRoaXMucm93c1tvXSk7cmV0dXJuIHJ9LG8uZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUubWF0Y2hSb3c9ZnVuY3Rpb24oZSx0KXtpZihcIm51bWJlclwiPT10eXBlb2YgdCl7Zm9yKHZhciByPTA7cjx0aGlzLnJvd3MubGVuZ3RoO3IrKylpZih0aGlzLnJvd3Nbcl0uYXJyW3RdLm1hdGNoKGUpKXJldHVybiB0aGlzLnJvd3Nbcl19ZWxzZSBmb3IodmFyIG49MDtuPHRoaXMucm93cy5sZW5ndGg7bisrKWlmKHRoaXMucm93c1tuXS5vYmpbdF0ubWF0Y2goZSkpcmV0dXJuIHRoaXMucm93c1tuXTtyZXR1cm4gbnVsbH0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5tYXRjaFJvd3M9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtpZihcIm51bWJlclwiPT10eXBlb2YgdClmb3IodmFyIG49MDtuPHRoaXMucm93cy5sZW5ndGg7bisrKXRoaXMucm93c1tuXS5hcnJbdF0ubWF0Y2goZSkmJnIucHVzaCh0aGlzLnJvd3Nbbl0pO2Vsc2UgZm9yKHZhciBvPTA7bzx0aGlzLnJvd3MubGVuZ3RoO28rKyl0aGlzLnJvd3Nbb10ub2JqW3RdLm1hdGNoKGUpJiZyLnB1c2godGhpcy5yb3dzW29dKTtyZXR1cm4gcn0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRDb2x1bW49ZnVuY3Rpb24oZSl7dmFyIHQ9W107aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpZm9yKHZhciByPTA7cjx0aGlzLnJvd3MubGVuZ3RoO3IrKyl0LnB1c2godGhpcy5yb3dzW3JdLm9ialtlXSk7ZWxzZSBmb3IodmFyIG49MDtuPHRoaXMucm93cy5sZW5ndGg7bisrKXQucHVzaCh0aGlzLnJvd3Nbbl0uYXJyW2VdKTtyZXR1cm4gdH0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5jbGVhclJvd3M9ZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5yb3dzLHRoaXMucm93cz1bXX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5hZGRDb2x1bW49ZnVuY3Rpb24oZSl7dmFyIHQ9ZXx8bnVsbDt0aGlzLmNvbHVtbnMucHVzaCh0KX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRDb2x1bW5Db3VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbHVtbnMubGVuZ3RofSxvLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLmdldFJvd0NvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucm93cy5sZW5ndGh9LG8uZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUucmVtb3ZlVG9rZW5zPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPVtdLG49MDtuPGUubGVuZ3RoO24rKylyLnB1c2goZS5jaGFyQXQobikucmVwbGFjZSgvWy0vXFxcXF4kKis/LigpfFtcXF17fV0vZyxcIlxcXFwkJlwiKSk7dmFyIG89bmV3IFJlZ0V4cChyLmpvaW4oXCJ8XCIpLFwiZ1wiKTtpZih2b2lkIDA9PT10KWZvcih2YXIgaT0wO2k8dGhpcy5jb2x1bW5zLmxlbmd0aDtpKyspZm9yKHZhciBhPTA7YTx0aGlzLnJvd3MubGVuZ3RoO2ErKyl7dmFyIHM9dGhpcy5yb3dzW2FdLmFycltpXTtzPXMucmVwbGFjZShvLFwiXCIpLHRoaXMucm93c1thXS5hcnJbaV09cyx0aGlzLnJvd3NbYV0ub2JqW3RoaXMuY29sdW1uc1tpXV09c31lbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiB0KWZvcih2YXIgbD0wO2w8dGhpcy5yb3dzLmxlbmd0aDtsKyspe3ZhciB1PXRoaXMucm93c1tsXS5vYmpbdF07dT11LnJlcGxhY2UobyxcIlwiKSx0aGlzLnJvd3NbbF0ub2JqW3RdPXU7dmFyIGM9dGhpcy5jb2x1bW5zLmluZGV4T2YodCk7dGhpcy5yb3dzW2xdLmFycltjXT11fWVsc2UgZm9yKHZhciBkPTA7ZDx0aGlzLnJvd3MubGVuZ3RoO2QrKyl7dmFyIGY9dGhpcy5yb3dzW2RdLmFyclt0XTtmPWYucmVwbGFjZShvLFwiXCIpLHRoaXMucm93c1tkXS5hcnJbdF09Zix0aGlzLnJvd3NbZF0ub2JqW3RoaXMuY29sdW1uc1t0XV09Zn19LG8uZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUudHJpbT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgUmVnRXhwKFwiIFwiLFwiZ1wiKTtpZih2b2lkIDA9PT1lKWZvcih2YXIgcj0wO3I8dGhpcy5jb2x1bW5zLmxlbmd0aDtyKyspZm9yKHZhciBuPTA7bjx0aGlzLnJvd3MubGVuZ3RoO24rKyl7dmFyIG89dGhpcy5yb3dzW25dLmFycltyXTtvPW8ucmVwbGFjZSh0LFwiXCIpLHRoaXMucm93c1tuXS5hcnJbcl09byx0aGlzLnJvd3Nbbl0ub2JqW3RoaXMuY29sdW1uc1tyXV09b31lbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiBlKWZvcih2YXIgaT0wO2k8dGhpcy5yb3dzLmxlbmd0aDtpKyspe3ZhciBhPXRoaXMucm93c1tpXS5vYmpbZV07YT1hLnJlcGxhY2UodCxcIlwiKSx0aGlzLnJvd3NbaV0ub2JqW2VdPWE7dmFyIHM9dGhpcy5jb2x1bW5zLmluZGV4T2YoZSk7dGhpcy5yb3dzW2ldLmFycltzXT1hfWVsc2UgZm9yKHZhciBsPTA7bDx0aGlzLnJvd3MubGVuZ3RoO2wrKyl7dmFyIHU9dGhpcy5yb3dzW2xdLmFycltlXTt1PXUucmVwbGFjZSh0LFwiXCIpLHRoaXMucm93c1tsXS5hcnJbZV09dSx0aGlzLnJvd3NbbF0ub2JqW3RoaXMuY29sdW1uc1tlXV09dX19LG8uZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUucmVtb3ZlQ29sdW1uPWZ1bmN0aW9uKGUpe3ZhciB0LHI7XCJzdHJpbmdcIj09dHlwZW9mIGU/KHQ9ZSxyPXRoaXMuY29sdW1ucy5pbmRleE9mKGUpKToocj1lLHQ9dGhpcy5jb2x1bW5zW2VdKTt2YXIgbj10aGlzLmNvbHVtbnMuc3BsaWNlKHIrMSx0aGlzLmNvbHVtbnMubGVuZ3RoKTt0aGlzLmNvbHVtbnMucG9wKCksdGhpcy5jb2x1bW5zPXRoaXMuY29sdW1ucy5jb25jYXQobik7Zm9yKHZhciBvPTA7bzx0aGlzLnJvd3MubGVuZ3RoO28rKyl7dmFyIGk9dGhpcy5yb3dzW29dLmFycixhPWkuc3BsaWNlKHIrMSxpLmxlbmd0aCk7aS5wb3AoKSx0aGlzLnJvd3Nbb10uYXJyPWkuY29uY2F0KGEpLGRlbGV0ZSB0aGlzLnJvd3Nbb10ub2JqW3RdfX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0LHIpe3RoaXMucm93c1tlXS5zZXQodCxyKX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5zZXROdW09ZnVuY3Rpb24oZSx0LHIpe3RoaXMucm93c1tlXS5zZXROdW0odCxyKX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5zZXRTdHJpbmc9ZnVuY3Rpb24oZSx0LHIpe3RoaXMucm93c1tlXS5zZXRTdHJpbmcodCxyKX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5yb3dzW2VdLmdldCh0KX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXROdW09ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5yb3dzW2VdLmdldE51bSh0KX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRTdHJpbmc9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5yb3dzW2VdLmdldFN0cmluZyh0KX0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRPYmplY3Q9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9e30sbj0wO248dGhpcy5yb3dzLmxlbmd0aDtuKyspaWYodD10aGlzLnJvd3Nbbl0ub2JqLFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZighKDA8PXRoaXMuY29sdW1ucy5pbmRleE9mKGUpKSl0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgdGFibGUgaGFzIG5vIGNvbHVtbiBuYW1lZCBcIicuY29uY2F0KGUsJ1wiJykpO3JbdFtlXV09dH1lbHNlIHJbbl09dGhpcy5yb3dzW25dLm9iajtyZXR1cm4gcn0sby5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRBcnJheT1mdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PTA7dDx0aGlzLnJvd3MubGVuZ3RoO3QrKyllLnB1c2godGhpcy5yb3dzW3RdLmFycik7cmV0dXJuIGV9O3ZhciBpPW8uZGVmYXVsdDtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiOjE1NyxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCI6MTU5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZVwiOjE2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3JcIjoxODAsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2hcIjoxODcsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2VcIjoxODksXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIjoxOTN9XSwyOTI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O28uZGVmYXVsdC5UYWJsZVJvdz1mdW5jdGlvbihlLHQpe3ZhciByPVtdLG49e307ZSYmKHQ9dHx8XCIsXCIscj1lLnNwbGl0KHQpKTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKyl7dmFyIGk9byxhPXJbb107bltpXT1hfXRoaXMuYXJyPXIsdGhpcy5vYmo9bix0aGlzLnRhYmxlPW51bGx9LG8uZGVmYXVsdC5UYWJsZVJvdy5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe3ZhciByPXRoaXMudGFibGUuY29sdW1ucy5pbmRleE9mKGUpO2lmKCEoMDw9cikpdGhyb3cgbmV3IEVycm9yKCdUaGlzIHRhYmxlIGhhcyBubyBjb2x1bW4gbmFtZWQgXCInLmNvbmNhdChlLCdcIicpKTt0aGlzLm9ialtlXT10LHRoaXMuYXJyW3JdPXR9ZWxzZXtpZighKGU8dGhpcy50YWJsZS5jb2x1bW5zLmxlbmd0aCkpdGhyb3cgbmV3IEVycm9yKFwiQ29sdW1uICNcIi5jb25jYXQoZSxcIiBpcyBvdXQgb2YgdGhlIHJhbmdlIG9mIHRoaXMgdGFibGVcIikpO3RoaXMuYXJyW2VdPXQ7dmFyIG49dGhpcy50YWJsZS5jb2x1bW5zW2VdO3RoaXMub2JqW25dPXR9fSxvLmRlZmF1bHQuVGFibGVSb3cucHJvdG90eXBlLnNldE51bT1mdW5jdGlvbihlLHQpe3ZhciByPXBhcnNlRmxvYXQodCk7dGhpcy5zZXQoZSxyKX0sby5kZWZhdWx0LlRhYmxlUm93LnByb3RvdHlwZS5zZXRTdHJpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LnRvU3RyaW5nKCk7dGhpcy5zZXQoZSxyKX0sby5kZWZhdWx0LlRhYmxlUm93LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/dGhpcy5vYmpbZV06dGhpcy5hcnJbZV19LG8uZGVmYXVsdC5UYWJsZVJvdy5wcm90b3R5cGUuZ2V0TnVtPWZ1bmN0aW9uKGUpe3ZhciB0O2lmKFwiTmFOXCI9PT0odD1cInN0cmluZ1wiPT10eXBlb2YgZT9wYXJzZUZsb2F0KHRoaXMub2JqW2VdKTpwYXJzZUZsb2F0KHRoaXMuYXJyW2VdKSkudG9TdHJpbmcoKSl0aHJvd1wiRXJyb3I6IFwiLmNvbmNhdCh0aGlzLm9ialtlXSxcIiBpcyBOYU4gKE5vdCBhIE51bWJlcilcIik7cmV0dXJuIHR9LG8uZGVmYXVsdC5UYWJsZVJvdy5wcm90b3R5cGUuZ2V0U3RyaW5nPWZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlP3RoaXMub2JqW2VdLnRvU3RyaW5nKCk6dGhpcy5hcnJbZV0udG9TdHJpbmcoKX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIjoxNTcsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiOjE4MSxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCI6MTgyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MX1dLDI5MzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBvKGUpe2Zvcih2YXIgdD1bXSxyPTA7cjxlLmxlbmd0aDtyKyspdC5wdXNoKG5ldyBzLmRlZmF1bHQuWE1MKGVbcl0pKTtyZXR1cm4gdH1zLmRlZmF1bHQuWE1MPWZ1bmN0aW9uKGUpe2lmKGUpdGhpcy5ET009ZTtlbHNle3ZhciB0PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZURvY3VtZW50KG51bGwsXCJkb2NcIik7dGhpcy5ET009dC5jcmVhdGVFbGVtZW50KFwicm9vdFwiKX19LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLmdldFBhcmVudD1mdW5jdGlvbigpe3JldHVybiBuZXcgcy5kZWZhdWx0LlhNTCh0aGlzLkRPTS5wYXJlbnRFbGVtZW50KX0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuZ2V0TmFtZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLkRPTS50YWdOYW1lfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5zZXROYW1lPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuRE9NLmlubmVySFRNTCxyPXRoaXMuRE9NLmF0dHJpYnV0ZXMsbj1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVEb2N1bWVudChudWxsLFwiZGVmYXVsdFwiKS5jcmVhdGVFbGVtZW50KGUpO24uaW5uZXJIVE1MPXQ7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspbi5zZXRBdHRyaWJ1dGUocltvXS5ub2RlTmFtZSxyLm5vZGVWYWx1ZSk7dGhpcy5ET009bn0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuaGFzQ2hpbGRyZW49ZnVuY3Rpb24oKXtyZXR1cm4gMDx0aGlzLkRPTS5jaGlsZHJlbi5sZW5ndGh9LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLmxpc3RDaGlsZHJlbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PTA7dDx0aGlzLkRPTS5jaGlsZE5vZGVzLmxlbmd0aDt0KyspZS5wdXNoKHRoaXMuRE9NLmNoaWxkTm9kZXNbdF0ubm9kZU5hbWUpO3JldHVybiBlfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRDaGlsZHJlbj1mdW5jdGlvbihlKXtyZXR1cm4gbyhlP3RoaXMuRE9NLmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpOnRoaXMuRE9NLmNoaWxkcmVuKX0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuZ2V0Q2hpbGQ9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpcmV0dXJuIG5ldyBzLmRlZmF1bHQuWE1MKHRoaXMuRE9NLmNoaWxkcmVuW2VdKTt2YXIgdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIG8saT10aGlzLkRPTS5jaGlsZHJlbltTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShvPWkubmV4dCgpKS5kb25lKTt0PSEwKXt2YXIgYT1vLnZhbHVlO2lmKGEudGFnTmFtZT09PWUpcmV0dXJuIG5ldyBzLmRlZmF1bHQuWE1MKGEpfX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1pLnJldHVybnx8aS5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19fSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5hZGRDaGlsZD1mdW5jdGlvbihlKXtlIGluc3RhbmNlb2Ygcy5kZWZhdWx0LlhNTCYmdGhpcy5ET00uYXBwZW5kQ2hpbGQoZS5ET00pfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5yZW1vdmVDaGlsZD1mdW5jdGlvbihlKXt2YXIgdD0tMTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7Zm9yKHZhciByPTA7cjx0aGlzLkRPTS5jaGlsZHJlbi5sZW5ndGg7cisrKWlmKHRoaXMuRE9NLmNoaWxkcmVuW3JdLnRhZ05hbWU9PT1lKXt0PXI7YnJlYWt9fWVsc2UgdD1lOy0xIT09dCYmdGhpcy5ET00ucmVtb3ZlQ2hpbGQodGhpcy5ET00uY2hpbGRyZW5bdF0pfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRBdHRyaWJ1dGVDb3VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLkRPTS5hdHRyaWJ1dGVzLmxlbmd0aH0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUubGlzdEF0dHJpYnV0ZXM9ZnVuY3Rpb24oKXt2YXIgZT1bXSx0PSEwLHI9ITEsbj12b2lkIDA7dHJ5e2Zvcih2YXIgbyxpPXRoaXMuRE9NLmF0dHJpYnV0ZXNbU3ltYm9sLml0ZXJhdG9yXSgpOyEodD0obz1pLm5leHQoKSkuZG9uZSk7dD0hMCl7dmFyIGE9by52YWx1ZTtlLnB1c2goYS5ub2RlTmFtZSl9fWNhdGNoKGUpe3I9ITAsbj1lfWZpbmFsbHl7dHJ5e3R8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBufX1yZXR1cm4gZX0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuaGFzQXR0cmlidXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXt9LHI9ITAsbj0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBpLGE9dGhpcy5ET00uYXR0cmlidXRlc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShpPWEubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1pLnZhbHVlO3Rbcy5ub2RlTmFtZV09cy5ub2RlVmFsdWV9fWNhdGNoKGUpe249ITAsbz1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWEucmV0dXJufHxhLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBvfX1yZXR1cm4hIXRbZV19LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLmdldE51bT1mdW5jdGlvbihlLHQpe3ZhciByPXt9LG49ITAsbz0hMSxpPXZvaWQgMDt0cnl7Zm9yKHZhciBhLHM9dGhpcy5ET00uYXR0cmlidXRlc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShhPXMubmV4dCgpKS5kb25lKTtuPSEwKXt2YXIgbD1hLnZhbHVlO3JbbC5ub2RlTmFtZV09bC5ub2RlVmFsdWV9fWNhdGNoKGUpe289ITAsaT1lfWZpbmFsbHl7dHJ5e258fG51bGw9PXMucmV0dXJufHxzLnJldHVybigpfWZpbmFsbHl7aWYobyl0aHJvdyBpfX1yZXR1cm4gTnVtYmVyKHJbZV0pfHx0fHwwfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRTdHJpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj17fSxuPSEwLG89ITEsaT12b2lkIDA7dHJ5e2Zvcih2YXIgYSxzPXRoaXMuRE9NLmF0dHJpYnV0ZXNbU3ltYm9sLml0ZXJhdG9yXSgpOyEobj0oYT1zLm5leHQoKSkuZG9uZSk7bj0hMCl7dmFyIGw9YS52YWx1ZTtyW2wubm9kZU5hbWVdPWwubm9kZVZhbHVlfX1jYXRjaChlKXtvPSEwLGk9ZX1maW5hbGx5e3RyeXtufHxudWxsPT1zLnJldHVybnx8cy5yZXR1cm4oKX1maW5hbGx5e2lmKG8pdGhyb3cgaX19cmV0dXJuIHJbZV0/U3RyaW5nKHJbZV0pOnR8fG51bGx9LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe3RoaXMuRE9NLnNldEF0dHJpYnV0ZShlLHQpfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRDb250ZW50PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLkRPTS50ZXh0Q29udGVudC5yZXBsYWNlKC9cXHNcXHMrL2csXCIsXCIpfHxlfHxudWxsfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5zZXRDb250ZW50PWZ1bmN0aW9uKGUpe3RoaXMuRE9NLmNoaWxkcmVuLmxlbmd0aHx8KHRoaXMuRE9NLnRleHRDb250ZW50PWUpfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5zZXJpYWxpemU9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFhNTFNlcmlhbGl6ZXIpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuRE9NKX07dmFyIGk9cy5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yXCI6MTcwLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XSwyOTQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm1hdGguaHlwb3RcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBvKCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgTWF0aC5oeXBvdClyZXR1cm4gTWF0aC5oeXBvdC5hcHBseShudWxsLGFyZ3VtZW50cyk7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1bXSxyPTAsbj0wO248ZTtuKyspe3ZhciBvPWFyZ3VtZW50c1tuXTtpZigobz0rbyk9PT0xLzB8fG89PT0tMS8wKXJldHVybiAxLzA7cjwobz1NYXRoLmFicyhvKSkmJihyPW8pLHRbbl09b30wPT09ciYmKHI9MSk7Zm9yKHZhciBpPTAsYT0wLHM9MDtzPGU7cysrKXt2YXIgbD10W3NdL3IsdT1sKmwtYSxjPWkrdTthPWMtaS11LGk9Y31yZXR1cm4gTWF0aC5zcXJ0KGkpKnJ9cy5kZWZhdWx0LnByb3RvdHlwZS5hYnM9TWF0aC5hYnMscy5kZWZhdWx0LnByb3RvdHlwZS5jZWlsPU1hdGguY2VpbCxzLmRlZmF1bHQucHJvdG90eXBlLmNvbnN0cmFpbj1mdW5jdGlvbihlLHQscil7cmV0dXJuIHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY29uc3RyYWluXCIsYXJndW1lbnRzKSxNYXRoLm1heChNYXRoLm1pbihlLHIpLHQpfSxzLmRlZmF1bHQucHJvdG90eXBlLmRpc3Q9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJkaXN0XCIsdCksND09PXQubGVuZ3RoP28odFsyXS10WzBdLHRbM10tdFsxXSk6Nj09PXQubGVuZ3RoP28odFszXS10WzBdLHRbNF0tdFsxXSx0WzVdLXRbMl0pOnZvaWQgMH0scy5kZWZhdWx0LnByb3RvdHlwZS5leHA9TWF0aC5leHAscy5kZWZhdWx0LnByb3RvdHlwZS5mbG9vcj1NYXRoLmZsb29yLHMuZGVmYXVsdC5wcm90b3R5cGUubGVycD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibGVycFwiLGFyZ3VtZW50cykscioodC1lKStlfSxzLmRlZmF1bHQucHJvdG90eXBlLmxvZz1NYXRoLmxvZyxzLmRlZmF1bHQucHJvdG90eXBlLm1hZz1mdW5jdGlvbihlLHQpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm1hZ1wiLGFyZ3VtZW50cyksbyhlLHQpfSxzLmRlZmF1bHQucHJvdG90eXBlLm1hcD1mdW5jdGlvbihlLHQscixuLG8saSl7cy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJtYXBcIixhcmd1bWVudHMpO3ZhciBhPShlLXQpLyhyLXQpKihvLW4pK247cmV0dXJuIGk/bjxvP3RoaXMuY29uc3RyYWluKGEsbixvKTp0aGlzLmNvbnN0cmFpbihhLG8sbik6YX0scy5kZWZhdWx0LnByb3RvdHlwZS5tYXg9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gdFswXWluc3RhbmNlb2YgQXJyYXk/TWF0aC5tYXguYXBwbHkobnVsbCx0WzBdKTpNYXRoLm1heC5hcHBseShudWxsLHQpfSxzLmRlZmF1bHQucHJvdG90eXBlLm1pbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3JldHVybiB0WzBdaW5zdGFuY2VvZiBBcnJheT9NYXRoLm1pbi5hcHBseShudWxsLHRbMF0pOk1hdGgubWluLmFwcGx5KG51bGwsdCl9LHMuZGVmYXVsdC5wcm90b3R5cGUubm9ybT1mdW5jdGlvbihlLHQscil7cmV0dXJuIHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibm9ybVwiLGFyZ3VtZW50cyksdGhpcy5tYXAoZSx0LHIsMCwxKX0scy5kZWZhdWx0LnByb3RvdHlwZS5wb3c9TWF0aC5wb3cscy5kZWZhdWx0LnByb3RvdHlwZS5yb3VuZD1mdW5jdGlvbihlLHQpe2lmKCF0KXJldHVybiBNYXRoLnJvdW5kKGUpO3ZhciByPU1hdGgucG93KDEwLHQpO3JldHVybiBNYXRoLnJvdW5kKGUqcikvcn0scy5kZWZhdWx0LnByb3RvdHlwZS5zcT1mdW5jdGlvbihlKXtyZXR1cm4gZSplfSxzLmRlZmF1bHQucHJvdG90eXBlLnNxcnQ9TWF0aC5zcXJ0LHMuZGVmYXVsdC5wcm90b3R5cGUuZnJhY3Q9ZnVuY3Rpb24oZSl7cy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJmcmFjdFwiLGFyZ3VtZW50cyk7dmFyIHQ9MCxyPU51bWJlcihlKTtpZihpc05hTihyKXx8TWF0aC5hYnMocik9PT0xLzApcmV0dXJuIHI7aWYocjwwJiYocj0tcix0PTEpLCFTdHJpbmcocikuaW5jbHVkZXMoXCIuXCIpfHxTdHJpbmcocikuaW5jbHVkZXMoXCJlXCIpKXJldHVybiByPDE/TWF0aC5hYnModC1yKTowO3ZhciBuPVN0cmluZyhyKTtyZXR1cm4gbj1OdW1iZXIoXCIwXCIrbi5zbGljZShuLmluZGV4T2YoXCIuXCIpKSksTWF0aC5hYnModC1uKX07dmFyIGk9cy5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIjoxNTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIjoxNTcsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm1hdGguaHlwb3RcIjoxNjgsXCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yXCI6MTcwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlc1wiOjE4NX1dLDI5NTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5jb25zdHJ1Y3RcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gaShlLHQscil7cmV0dXJuKGk9ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuITA7dHJ5e3JldHVybiBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsW10sZnVuY3Rpb24oKXt9KSksITB9Y2F0Y2goZSl7cmV0dXJuITF9fSgpP1JlZmxlY3QuY29uc3RydWN0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1bbnVsbF07bi5wdXNoLmFwcGx5KG4sdCk7dmFyIG89bmV3KEZ1bmN0aW9uLmJpbmQuYXBwbHkoZSxuKSk7cmV0dXJuIHImJmEobyxyLnByb3RvdHlwZSksb30pLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBhKGUsdCl7cmV0dXJuKGE9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlLHQpe3JldHVybiBlLl9fcHJvdG9fXz10LGV9KShlLHQpfW8uZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlVmVjdG9yPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIG8uZGVmYXVsdD9pKG8uZGVmYXVsdC5WZWN0b3IsW3RoaXMuX2Zyb21SYWRpYW5zLmJpbmQodGhpcyksdGhpcy5fdG9SYWRpYW5zLmJpbmQodGhpcyldLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSk6bmV3IG8uZGVmYXVsdC5WZWN0b3IoZSx0LHIpfTt2YXIgcz1vLmRlZmF1bHQ7ci5kZWZhdWx0PXN9LHtcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIjoxNDksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWZsZWN0LmNvbnN0cnVjdFwiOjE3OSxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCI6MTgyfV0sMjk2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBiKGUpe3JldHVybi41KigxLU1hdGguY29zKGUqTWF0aC5QSSkpfXZhciBfLHg9NDA5NSx3PTQsaj0uNTtvLmRlZmF1bHQucHJvdG90eXBlLm5vaXNlPWZ1bmN0aW9uKGUpe3ZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTowLHI9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjA7aWYobnVsbD09Xyl7Xz1uZXcgQXJyYXkoNDA5Nik7Zm9yKHZhciBuPTA7bjw0MDk2O24rKylfW25dPU1hdGgucmFuZG9tKCl9ZTwwJiYoZT0tZSksdDwwJiYodD0tdCkscjwwJiYocj0tcik7Zm9yKHZhciBvLGksYSxzLGwsdT1NYXRoLmZsb29yKGUpLGM9TWF0aC5mbG9vcih0KSxkPU1hdGguZmxvb3IociksZj1lLXUsaD10LWMscD1yLWQseT0wLG09LjUsZz0wO2c8dztnKyspe3ZhciB2PXUrKGM8PDQpKyhkPDw4KTtvPWIoZiksaT1iKGgpLGE9X1t2JnhdLGErPW8qKF9bdisxJnhdLWEpLHM9X1t2KzE2JnhdLGErPWkqKChzKz1vKihfW3YrMTYrMSZ4XS1zKSktYSkscz1fWyh2Kz0yNTYpJnhdLHMrPW8qKF9bdisxJnhdLXMpLGw9X1t2KzE2JnhdLHMrPWkqKChsKz1vKihfW3YrMTYrMSZ4XS1sKSktcykseSs9KGErPWIocCkqKHMtYSkpKm0sbSo9aix1PDw9MSxjPDw9MSxkPDw9MSwxPD0oZio9MikmJih1KyssZi0tKSwxPD0oaCo9MikmJihjKyssaC0tKSwxPD0ocCo9MikmJihkKysscC0tKX1yZXR1cm4geX0sby5kZWZhdWx0LnByb3RvdHlwZS5ub2lzZURldGFpbD1mdW5jdGlvbihlLHQpezA8ZSYmKHc9ZSksMDx0JiYoaj10KX0sby5kZWZhdWx0LnByb3RvdHlwZS5ub2lzZVNlZWQ9ZnVuY3Rpb24oZSl7dmFyIHQscixuLG89KG49NDI5NDk2NzI5Nix7c2V0U2VlZDpmdW5jdGlvbihlKXtyPXQ9KG51bGw9PWU/TWF0aC5yYW5kb20oKSpuOmUpPj4+MH0sZ2V0U2VlZDpmdW5jdGlvbigpe3JldHVybiB0fSxyYW5kOmZ1bmN0aW9uKCl7cmV0dXJuKHI9KDE2NjQ1MjUqcisxMDEzOTA0MjIzKSVuKS9ufX0pO28uc2V0U2VlZChlKSxfPW5ldyBBcnJheSg0MDk2KTtmb3IodmFyIGk9MDtpPDQwOTY7aSsrKV9baV09by5yYW5kKCl9O3ZhciBpPW8uZGVmYXVsdDtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9tYWluXCI6MjY0fV0sMjk3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5ldmVyeVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm1hdGguc2lnblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5pcy1maW5pdGVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdWJcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixsPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxpPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9bC5kZWZhdWx0LlZlY3Rvcj1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpLGEscztzPVwiW29iamVjdCBGdW5jdGlvbl1cIj09PXt9LnRvU3RyaW5nLmNhbGwoZSk/KHRoaXMuaXNQSW5zdD0hMCx0aGlzLl9mcm9tUmFkaWFucz1lLHRoaXMuX3RvUmFkaWFucz10LGk9cnx8MCxhPW58fDAsb3x8MCk6KGk9ZXx8MCxhPXR8fDAscnx8MCksdGhpcy54PWksdGhpcy55PWEsdGhpcy56PXN9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJwNS5WZWN0b3IgT2JqZWN0IDogW1wiLmNvbmNhdCh0aGlzLngsXCIsIFwiKS5jb25jYXQodGhpcy55LFwiLCBcIikuY29uY2F0KHRoaXMueixcIl1cIil9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yPyh0aGlzLng9ZS54fHwwLHRoaXMueT1lLnl8fDAsdGhpcy56PWUuenx8MCk6ZSBpbnN0YW5jZW9mIEFycmF5Pyh0aGlzLng9ZVswXXx8MCx0aGlzLnk9ZVsxXXx8MCx0aGlzLno9ZVsyXXx8MCk6KHRoaXMueD1lfHwwLHRoaXMueT10fHwwLHRoaXMuej1yfHwwKSx0aGlzfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNQSW5zdD9uZXcgbC5kZWZhdWx0LlZlY3Rvcih0aGlzLl9mcm9tUmFkaWFucyx0aGlzLl90b1JhZGlhbnMsdGhpcy54LHRoaXMueSx0aGlzLnopOm5ldyBsLmRlZmF1bHQuVmVjdG9yKHRoaXMueCx0aGlzLnksdGhpcy56KX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3I/KHRoaXMueCs9ZS54fHwwLHRoaXMueSs9ZS55fHwwLHRoaXMueis9ZS56fHwwKTplIGluc3RhbmNlb2YgQXJyYXk/KHRoaXMueCs9ZVswXXx8MCx0aGlzLnkrPWVbMV18fDAsdGhpcy56Kz1lWzJdfHwwKToodGhpcy54Kz1lfHwwLHRoaXMueSs9dHx8MCx0aGlzLnorPXJ8fDApLHRoaXN9O2Z1bmN0aW9uIHUoZSx0KXtyZXR1cm4gMCE9PWUmJih0aGlzLng9dGhpcy54JWUpLDAhPT10JiYodGhpcy55PXRoaXMueSV0KSx0aGlzfWZ1bmN0aW9uIGMoZSx0LHIpe3JldHVybiAwIT09ZSYmKHRoaXMueD10aGlzLnglZSksMCE9PXQmJih0aGlzLnk9dGhpcy55JXQpLDAhPT1yJiYodGhpcy56PXRoaXMueiVyKSx0aGlzfWwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnJlbT1mdW5jdGlvbihlLHQscil7aWYoZSBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3Ipe2lmKE51bWJlci5pc0Zpbml0ZShlLngpJiZOdW1iZXIuaXNGaW5pdGUoZS55KSYmTnVtYmVyLmlzRmluaXRlKGUueikpe3ZhciBuPXBhcnNlRmxvYXQoZS54KSxvPXBhcnNlRmxvYXQoZS55KSxpPXBhcnNlRmxvYXQoZS56KTtyZXR1cm4gYy5jYWxsKHRoaXMsbixvLGkpfX1lbHNlIGlmKGUgaW5zdGFuY2VvZiBBcnJheSl7aWYoZS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gTnVtYmVyLmlzRmluaXRlKGUpfSkpe2lmKDI9PT1lLmxlbmd0aClyZXR1cm4gdS5jYWxsKHRoaXMsZVswXSxlWzFdKTtpZigzPT09ZS5sZW5ndGgpcmV0dXJuIGMuY2FsbCh0aGlzLGVbMF0sZVsxXSxlWzJdKX19ZWxzZSBpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7aWYoTnVtYmVyLmlzRmluaXRlKGUpJiYwIT09ZSlyZXR1cm4gdGhpcy54PXRoaXMueCVlLHRoaXMueT10aGlzLnklZSx0aGlzLno9dGhpcy56JWUsdGhpc31lbHNlIGlmKDI9PT1hcmd1bWVudHMubGVuZ3RoKXt2YXIgYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2lmKGEuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlci5pc0Zpbml0ZShlKX0pJiYyPT09YS5sZW5ndGgpcmV0dXJuIHUuY2FsbCh0aGlzLGFbMF0sYVsxXSl9ZWxzZSBpZigzPT09YXJndW1lbnRzLmxlbmd0aCl7dmFyIHM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtpZihzLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBOdW1iZXIuaXNGaW5pdGUoZSl9KSYmMz09PXMubGVuZ3RoKXJldHVybiBjLmNhbGwodGhpcyxzWzBdLHNbMV0sc1syXSl9fSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlIGluc3RhbmNlb2YgbC5kZWZhdWx0LlZlY3Rvcj8odGhpcy54LT1lLnh8fDAsdGhpcy55LT1lLnl8fDAsdGhpcy56LT1lLnp8fDApOmUgaW5zdGFuY2VvZiBBcnJheT8odGhpcy54LT1lWzBdfHwwLHRoaXMueS09ZVsxXXx8MCx0aGlzLnotPWVbMl18fDApOih0aGlzLngtPWV8fDAsdGhpcy55LT10fHwwLHRoaXMuei09cnx8MCksdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUubXVsdD1mdW5jdGlvbihlLHQscil7aWYoZSBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3IpcmV0dXJuIE51bWJlci5pc0Zpbml0ZShlLngpJiZOdW1iZXIuaXNGaW5pdGUoZS55KSYmTnVtYmVyLmlzRmluaXRlKGUueikmJlwibnVtYmVyXCI9PXR5cGVvZiBlLngmJlwibnVtYmVyXCI9PXR5cGVvZiBlLnkmJlwibnVtYmVyXCI9PXR5cGVvZiBlLno/KHRoaXMueCo9ZS54LHRoaXMueSo9ZS55LHRoaXMueio9ZS56KTpjb25zb2xlLndhcm4oXCJwNS5WZWN0b3IucHJvdG90eXBlLm11bHQ6XCIsXCJ4IGNvbnRhaW5zIGNvbXBvbmVudHMgdGhhdCBhcmUgZWl0aGVyIHVuZGVmaW5lZCBvciBub3QgZmluaXRlIG51bWJlcnNcIiksdGhpcztpZihlIGluc3RhbmNlb2YgQXJyYXkpcmV0dXJuIGUuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlci5pc0Zpbml0ZShlKX0pJiZlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlfSk/MT09PWUubGVuZ3RoPyh0aGlzLngqPWVbMF0sdGhpcy55Kj1lWzBdLHRoaXMueio9ZVswXSk6Mj09PWUubGVuZ3RoPyh0aGlzLngqPWVbMF0sdGhpcy55Kj1lWzFdKTozPT09ZS5sZW5ndGgmJih0aGlzLngqPWVbMF0sdGhpcy55Kj1lWzFdLHRoaXMueio9ZVsyXSk6Y29uc29sZS53YXJuKFwicDUuVmVjdG9yLnByb3RvdHlwZS5tdWx0OlwiLFwieCBjb250YWlucyBlbGVtZW50cyB0aGF0IGFyZSBlaXRoZXIgdW5kZWZpbmVkIG9yIG5vdCBmaW5pdGUgbnVtYmVyc1wiKSx0aGlzO3ZhciBuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIG4uZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlci5pc0Zpbml0ZShlKX0pJiZuLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlfSk/KDE9PT1hcmd1bWVudHMubGVuZ3RoJiYodGhpcy54Kj1lLHRoaXMueSo9ZSx0aGlzLnoqPWUpLDI9PT1hcmd1bWVudHMubGVuZ3RoJiYodGhpcy54Kj1lLHRoaXMueSo9dCksMz09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLngqPWUsdGhpcy55Kj10LHRoaXMueio9cikpOmNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUubXVsdDpcIixcIngsIHksIG9yIHogYXJndW1lbnRzIGFyZSBlaXRoZXIgdW5kZWZpbmVkIG9yIG5vdCBhIGZpbml0ZSBudW1iZXJcIiksdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuZGl2PWZ1bmN0aW9uKGUsdCxyKXtpZihlIGluc3RhbmNlb2YgbC5kZWZhdWx0LlZlY3Rvcil7aWYoTnVtYmVyLmlzRmluaXRlKGUueCkmJk51bWJlci5pc0Zpbml0ZShlLnkpJiZOdW1iZXIuaXNGaW5pdGUoZS56KSYmXCJudW1iZXJcIj09dHlwZW9mIGUueCYmXCJudW1iZXJcIj09dHlwZW9mIGUueSYmXCJudW1iZXJcIj09dHlwZW9mIGUueil7aWYoMD09PWUueHx8MD09PWUueXx8MD09PWUueilyZXR1cm4gY29uc29sZS53YXJuKFwicDUuVmVjdG9yLnByb3RvdHlwZS5kaXY6XCIsXCJkaXZpZGUgYnkgMFwiKSx0aGlzO3RoaXMueC89ZS54LHRoaXMueS89ZS55LHRoaXMuei89ZS56fWVsc2UgY29uc29sZS53YXJuKFwicDUuVmVjdG9yLnByb3RvdHlwZS5kaXY6XCIsXCJ4IGNvbnRhaW5zIGNvbXBvbmVudHMgdGhhdCBhcmUgZWl0aGVyIHVuZGVmaW5lZCBvciBub3QgZmluaXRlIG51bWJlcnNcIik7cmV0dXJuIHRoaXN9aWYoZSBpbnN0YW5jZW9mIEFycmF5KXtpZihlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBOdW1iZXIuaXNGaW5pdGUoZSl9KSYmZS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZX0pKXtpZihlLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIDA9PT1lfSkpcmV0dXJuIGNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUuZGl2OlwiLFwiZGl2aWRlIGJ5IDBcIiksdGhpczsxPT09ZS5sZW5ndGg/KHRoaXMueC89ZVswXSx0aGlzLnkvPWVbMF0sdGhpcy56Lz1lWzBdKToyPT09ZS5sZW5ndGg/KHRoaXMueC89ZVswXSx0aGlzLnkvPWVbMV0pOjM9PT1lLmxlbmd0aCYmKHRoaXMueC89ZVswXSx0aGlzLnkvPWVbMV0sdGhpcy56Lz1lWzJdKX1lbHNlIGNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUuZGl2OlwiLFwieCBjb250YWlucyBjb21wb25lbnRzIHRoYXQgYXJlIGVpdGhlciB1bmRlZmluZWQgb3Igbm90IGZpbml0ZSBudW1iZXJzXCIpO3JldHVybiB0aGlzfXZhciBuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7aWYobi5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gTnVtYmVyLmlzRmluaXRlKGUpfSkmJm4uZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGV9KSl7aWYobi5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiAwPT09ZX0pKXJldHVybiBjb25zb2xlLndhcm4oXCJwNS5WZWN0b3IucHJvdG90eXBlLmRpdjpcIixcImRpdmlkZSBieSAwXCIpLHRoaXM7MT09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLngvPWUsdGhpcy55Lz1lLHRoaXMuei89ZSksMj09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLngvPWUsdGhpcy55Lz10KSwzPT09YXJndW1lbnRzLmxlbmd0aCYmKHRoaXMueC89ZSx0aGlzLnkvPXQsdGhpcy56Lz1yKX1lbHNlIGNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUuZGl2OlwiLFwieCwgeSwgb3IgeiBhcmd1bWVudHMgYXJlIGVpdGhlciB1bmRlZmluZWQgb3Igbm90IGEgZmluaXRlIG51bWJlclwiKTtyZXR1cm4gdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUubWFnPWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguc3FydCh0aGlzLm1hZ1NxKCkpfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5tYWdTcT1mdW5jdGlvbigpe3ZhciBlPXRoaXMueCx0PXRoaXMueSxyPXRoaXMuejtyZXR1cm4gZSplK3QqdCtyKnJ9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmRvdD1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yP3RoaXMuZG90KGUueCxlLnksZS56KTp0aGlzLngqKGV8fDApK3RoaXMueSoodHx8MCkrdGhpcy56KihyfHwwKX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuY3Jvc3M9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy55KmUuei10aGlzLnoqZS55LHI9dGhpcy56KmUueC10aGlzLngqZS56LG49dGhpcy54KmUueS10aGlzLnkqZS54O3JldHVybiB0aGlzLmlzUEluc3Q/bmV3IGwuZGVmYXVsdC5WZWN0b3IodGhpcy5fZnJvbVJhZGlhbnMsdGhpcy5fdG9SYWRpYW5zLHQscixuKTpuZXcgbC5kZWZhdWx0LlZlY3Rvcih0LHIsbil9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmRpc3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29weSgpLnN1Yih0aGlzKS5tYWcoKX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5tYWcoKTtyZXR1cm4gMCE9PWUmJnRoaXMubXVsdCgxL2UpLHRoaXN9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmxpbWl0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMubWFnU3EoKTtyZXR1cm4gZSplPHQmJnRoaXMuZGl2KE1hdGguc3FydCh0KSkubXVsdChlKSx0aGlzfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5zZXRNYWc9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubm9ybWFsaXplKCkubXVsdChlKX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuaGVhZGluZz1mdW5jdGlvbigpe3ZhciBlPU1hdGguYXRhbjIodGhpcy55LHRoaXMueCk7cmV0dXJuIHRoaXMuaXNQSW5zdD90aGlzLl9mcm9tUmFkaWFucyhlKTplfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5zZXRIZWFkaW5nPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMubWFnKCk7cmV0dXJuIHRoaXMueD10Kk1hdGguY29zKGUpLHRoaXMueT10Kk1hdGguc2luKGUpLHRoaXN9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmhlYWRpbmcoKStlO3RoaXMuaXNQSW5zdCYmKHQ9dGhpcy5fdG9SYWRpYW5zKHQpKTt2YXIgcj10aGlzLm1hZygpO3JldHVybiB0aGlzLng9TWF0aC5jb3ModCkqcix0aGlzLnk9TWF0aC5zaW4odCkqcix0aGlzfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5hbmdsZUJldHdlZW49ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzLmRvdChlKS8odGhpcy5tYWcoKSplLm1hZygpKTtyZXR1cm4gdD1NYXRoLmFjb3MoTWF0aC5taW4oMSxNYXRoLm1heCgtMSxyKSkpLHQqPU1hdGguc2lnbih0aGlzLmNyb3NzKGUpLnp8fDEpLHRoaXMuaXNQSW5zdCYmKHQ9dGhpcy5fZnJvbVJhZGlhbnModCkpLHR9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmxlcnA9ZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuIGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yP3RoaXMubGVycChlLngsZS55LGUueix0KToodGhpcy54Kz0oZS10aGlzLngpKm58fDAsdGhpcy55Kz0odC10aGlzLnkpKm58fDAsdGhpcy56Kz0oci10aGlzLnopKm58fDAsdGhpcyl9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnJlZmxlY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIGUubm9ybWFsaXplKCksdGhpcy5zdWIoZS5tdWx0KDIqdGhpcy5kb3QoZSkpKX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuYXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm5bdGhpcy54fHwwLHRoaXMueXx8MCx0aGlzLnp8fDBdfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG8saTtyZXR1cm4gaT1lIGluc3RhbmNlb2YgbC5kZWZhdWx0LlZlY3Rvcj8obj1lLnh8fDAsbz1lLnl8fDAsZS56fHwwKTplIGluc3RhbmNlb2YgQXJyYXk/KG49ZVswXXx8MCxvPWVbMV18fDAsZVsyXXx8MCk6KG49ZXx8MCxvPXR8fDAscnx8MCksdGhpcy54PT09biYmdGhpcy55PT09byYmdGhpcy56PT09aX0sbC5kZWZhdWx0LlZlY3Rvci5mcm9tQW5nbGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9MSksbmV3IGwuZGVmYXVsdC5WZWN0b3IodCpNYXRoLmNvcyhlKSx0Kk1hdGguc2luKGUpLDApfSxsLmRlZmF1bHQuVmVjdG9yLmZyb21BbmdsZXM9ZnVuY3Rpb24oZSx0LHIpe3ZvaWQgMD09PXImJihyPTEpO3ZhciBuPU1hdGguY29zKHQpLG89TWF0aC5zaW4odCksaT1NYXRoLmNvcyhlKSxhPU1hdGguc2luKGUpO3JldHVybiBuZXcgbC5kZWZhdWx0LlZlY3RvcihyKmEqbywtcippLHIqYSpuKX0sbC5kZWZhdWx0LlZlY3Rvci5yYW5kb20yRD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZyb21BbmdsZShNYXRoLnJhbmRvbSgpKmkuVFdPX1BJKX0sbC5kZWZhdWx0LlZlY3Rvci5yYW5kb20zRD1mdW5jdGlvbigpe3ZhciBlPU1hdGgucmFuZG9tKCkqaS5UV09fUEksdD0yKk1hdGgucmFuZG9tKCktMSxyPU1hdGguc3FydCgxLXQqdCksbj1yKk1hdGguY29zKGUpLG89cipNYXRoLnNpbihlKTtyZXR1cm4gbmV3IGwuZGVmYXVsdC5WZWN0b3IobixvLHQpfSxsLmRlZmF1bHQuVmVjdG9yLmFkZD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHI/ci5zZXQoZSk6KHI9ZS5jb3B5KCksMz09PWFyZ3VtZW50cy5sZW5ndGgmJmwuZGVmYXVsdC5fZnJpZW5kbHlFcnJvcihcIlRoZSB0YXJnZXQgcGFyYW1ldGVyIGlzIHVuZGVmaW5lZCwgaXQgc2hvdWxkIGJlIG9mIHR5cGUgcDUuVmVjdG9yXCIsXCJwNS5WZWN0b3IuYWRkXCIpKSxyLmFkZCh0KSxyfSxsLmRlZmF1bHQuVmVjdG9yLnJlbT1mdW5jdGlvbihlLHQpe2lmKGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yJiZ0IGluc3RhbmNlb2YgbC5kZWZhdWx0LlZlY3Rvcil7dmFyIHI9ZS5jb3B5KCk7cmV0dXJuIHIucmVtKHQpLHJ9fSxsLmRlZmF1bHQuVmVjdG9yLnN1Yj1mdW5jdGlvbihlLHQscil7cmV0dXJuIHI/ci5zZXQoZSk6KHI9ZS5jb3B5KCksMz09PWFyZ3VtZW50cy5sZW5ndGgmJmwuZGVmYXVsdC5fZnJpZW5kbHlFcnJvcihcIlRoZSB0YXJnZXQgcGFyYW1ldGVyIGlzIHVuZGVmaW5lZCwgaXQgc2hvdWxkIGJlIG9mIHR5cGUgcDUuVmVjdG9yXCIsXCJwNS5WZWN0b3Iuc3ViXCIpKSxyLnN1Yih0KSxyfSxsLmRlZmF1bHQuVmVjdG9yLm11bHQ9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiByP3Iuc2V0KGUpOihyPWUuY29weSgpLDM9PT1hcmd1bWVudHMubGVuZ3RoJiZsLmRlZmF1bHQuX2ZyaWVuZGx5RXJyb3IoXCJUaGUgdGFyZ2V0IHBhcmFtZXRlciBpcyB1bmRlZmluZWQsIGl0IHNob3VsZCBiZSBvZiB0eXBlIHA1LlZlY3RvclwiLFwicDUuVmVjdG9yLm11bHRcIikpLHIubXVsdCh0KSxyfSxsLmRlZmF1bHQuVmVjdG9yLnJvdGF0ZT1mdW5jdGlvbihlLHQscil7cmV0dXJuIDI9PT1hcmd1bWVudHMubGVuZ3RoP3I9ZS5jb3B5KCk6KHIgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yfHxsLmRlZmF1bHQuX2ZyaWVuZGx5RXJyb3IoXCJUaGUgdGFyZ2V0IHBhcmFtZXRlciBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5yb3RhdGVcIiksci5zZXQoZSkpLHIucm90YXRlKHQpLHJ9LGwuZGVmYXVsdC5WZWN0b3IuZGl2PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcj9yLnNldChlKToocj1lLmNvcHkoKSwzPT09YXJndW1lbnRzLmxlbmd0aCYmbC5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwiVGhlIHRhcmdldCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLCBpdCBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5kaXZcIikpLHIuZGl2KHQpLHJ9LGwuZGVmYXVsdC5WZWN0b3IuZG90PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuZG90KHQpfSxsLmRlZmF1bHQuVmVjdG9yLmNyb3NzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY3Jvc3ModCl9LGwuZGVmYXVsdC5WZWN0b3IuZGlzdD1mdW5jdGlvbihlLHQpe3JldHVybiBlLmRpc3QodCl9LGwuZGVmYXVsdC5WZWN0b3IubGVycD1mdW5jdGlvbihlLHQscixuKXtyZXR1cm4gbj9uLnNldChlKToobj1lLmNvcHkoKSw0PT09YXJndW1lbnRzLmxlbmd0aCYmbC5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwiVGhlIHRhcmdldCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLCBpdCBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5sZXJwXCIpKSxuLmxlcnAodCxyKSxufSxsLmRlZmF1bHQuVmVjdG9yLm1hZz1mdW5jdGlvbihlKXt2YXIgdD1lLngscj1lLnksbj1lLnosbz10KnQrcipyK24qbjtyZXR1cm4gTWF0aC5zcXJ0KG8pfSxsLmRlZmF1bHQuVmVjdG9yLm5vcm1hbGl6ZT1mdW5jdGlvbihlLHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDI/dD1lLmNvcHkoKToodCBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3J8fGwuZGVmYXVsdC5fZnJpZW5kbHlFcnJvcihcIlRoZSB0YXJnZXQgcGFyYW1ldGVyIHNob3VsZCBiZSBvZiB0eXBlIHA1LlZlY3RvclwiLFwicDUuVmVjdG9yLm5vcm1hbGl6ZVwiKSx0LnNldChlKSksdC5ub3JtYWxpemUoKX07dmFyIG89bC5kZWZhdWx0LlZlY3RvcjtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCI6MTQ5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmV2ZXJ5XCI6MTUwLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWVcIjoxNjMsXCJjb3JlLWpzL21vZHVsZXMvZXMubWF0aC5zaWduXCI6MTY5LFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvclwiOjE3MCxcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuaXMtZmluaXRlXCI6MTcxLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3ViXCI6MTkyfV0sMjk4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTt2YXIgaT1cIl9sY2dfcmFuZG9tX3N0YXRlXCIsYT00Mjk0OTY3Mjk2LHM9MDtvLmRlZmF1bHQucHJvdG90eXBlLl9sY2c9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXNbZV09KDE2NjQ1MjUqdGhpc1tlXSsxMDEzOTA0MjIzKSVhLHRoaXNbZV0vYX0sby5kZWZhdWx0LnByb3RvdHlwZS5fbGNnU2V0U2VlZD1mdW5jdGlvbihlLHQpe3RoaXNbZV09KG51bGw9PXQ/TWF0aC5yYW5kb20oKSphOnQpPj4+MH0sby5kZWZhdWx0LnByb3RvdHlwZS5yYW5kb21TZWVkPWZ1bmN0aW9uKGUpe3RoaXMuX2xjZ1NldFNlZWQoaSxlKSx0aGlzLl9nYXVzc2lhbl9wcmV2aW91cz0hMX0sby5kZWZhdWx0LnByb3RvdHlwZS5yYW5kb209ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZihvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJhbmRvbVwiLGFyZ3VtZW50cykscj1udWxsIT10aGlzW2ldP3RoaXMuX2xjZyhpKTpNYXRoLnJhbmRvbSgpLHZvaWQgMD09PWUpcmV0dXJuIHI7aWYodm9pZCAwPT09dClyZXR1cm4gZSBpbnN0YW5jZW9mIEFycmF5P2VbTWF0aC5mbG9vcihyKmUubGVuZ3RoKV06ciplO2lmKHQ8ZSl7dmFyIG49ZTtlPXQsdD1ufXJldHVybiByKih0LWUpK2V9LG8uZGVmYXVsdC5wcm90b3R5cGUucmFuZG9tR2F1c3NpYW49ZnVuY3Rpb24oZSl7dmFyIHQscixuLG8saT0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MTtpZih0aGlzLl9nYXVzc2lhbl9wcmV2aW91cyl0PXMsdGhpcy5fZ2F1c3NpYW5fcHJldmlvdXM9ITE7ZWxzZXtmb3IoOzE8PShvPShyPXRoaXMucmFuZG9tKDIpLTEpKnIrKG49dGhpcy5yYW5kb20oMiktMSkqbik7KTt0PXIqKG89TWF0aC5zcXJ0KC0yKk1hdGgubG9nKG8pL28pKSxzPW4qbyx0aGlzLl9nYXVzc2lhbl9wcmV2aW91cz0hMH1yZXR1cm4gdCppKyhlfHwwKX07dmFyIGw9by5kZWZhdWx0O3IuZGVmYXVsdD1sfSx7XCIuLi9jb3JlL21haW5cIjoyNjR9XSwyOTk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGk9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1vLmRlZmF1bHQucHJvdG90eXBlLl9hbmdsZU1vZGU9aS5SQURJQU5TLG8uZGVmYXVsdC5wcm90b3R5cGUuYWNvcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fZnJvbVJhZGlhbnMoTWF0aC5hY29zKGUpKX0sby5kZWZhdWx0LnByb3RvdHlwZS5hc2luPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9mcm9tUmFkaWFucyhNYXRoLmFzaW4oZSkpfSxvLmRlZmF1bHQucHJvdG90eXBlLmF0YW49ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Zyb21SYWRpYW5zKE1hdGguYXRhbihlKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuYXRhbjI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fZnJvbVJhZGlhbnMoTWF0aC5hdGFuMihlLHQpKX0sby5kZWZhdWx0LnByb3RvdHlwZS5jb3M9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguY29zKHRoaXMuX3RvUmFkaWFucyhlKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuc2luPWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLnNpbih0aGlzLl90b1JhZGlhbnMoZSkpfSxvLmRlZmF1bHQucHJvdG90eXBlLnRhbj1mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC50YW4odGhpcy5fdG9SYWRpYW5zKGUpKX0sby5kZWZhdWx0LnByb3RvdHlwZS5kZWdyZWVzPWZ1bmN0aW9uKGUpe3JldHVybiBlKmkuUkFEX1RPX0RFR30sby5kZWZhdWx0LnByb3RvdHlwZS5yYWRpYW5zPWZ1bmN0aW9uKGUpe3JldHVybiBlKmkuREVHX1RPX1JBRH0sby5kZWZhdWx0LnByb3RvdHlwZS5hbmdsZU1vZGU9ZnVuY3Rpb24oZSl7ZSE9PWkuREVHUkVFUyYmZSE9PWkuUkFESUFOU3x8KHRoaXMuX2FuZ2xlTW9kZT1lKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fdG9SYWRpYW5zPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9hbmdsZU1vZGU9PT1pLkRFR1JFRVM/ZSppLkRFR19UT19SQUQ6ZX0sby5kZWZhdWx0LnByb3RvdHlwZS5fdG9EZWdyZWVzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9hbmdsZU1vZGU9PT1pLlJBRElBTlM/ZSppLlJBRF9UT19ERUc6ZX0sby5kZWZhdWx0LnByb3RvdHlwZS5fZnJvbVJhZGlhbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2FuZ2xlTW9kZT09PWkuREVHUkVFUz9lKmkuUkFEX1RPX0RFRzplfTt2YXIgbD1vLmRlZmF1bHQ7ci5kZWZhdWx0PWx9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9tYWluXCI6MjY0fV0sMzAwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtvLmRlZmF1bHQucHJvdG90eXBlLnRleHRBbGlnbj1mdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRBbGlnblwiLGFyZ3VtZW50cyksKHI9dGhpcy5fcmVuZGVyZXIpLnRleHRBbGlnbi5hcHBseShyLGFyZ3VtZW50cyl9LG8uZGVmYXVsdC5wcm90b3R5cGUudGV4dExlYWRpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidGV4dExlYWRpbmdcIixhcmd1bWVudHMpLCh0PXRoaXMuX3JlbmRlcmVyKS50ZXh0TGVhZGluZy5hcHBseSh0LGFyZ3VtZW50cyl9LG8uZGVmYXVsdC5wcm90b3R5cGUudGV4dFNpemU9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidGV4dFNpemVcIixhcmd1bWVudHMpLCh0PXRoaXMuX3JlbmRlcmVyKS50ZXh0U2l6ZS5hcHBseSh0LGFyZ3VtZW50cyl9LG8uZGVmYXVsdC5wcm90b3R5cGUudGV4dFN0eWxlPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRTdHlsZVwiLGFyZ3VtZW50cyksKHQ9dGhpcy5fcmVuZGVyZXIpLnRleHRTdHlsZS5hcHBseSh0LGFyZ3VtZW50cyl9LG8uZGVmYXVsdC5wcm90b3R5cGUudGV4dFdpZHRoPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gclswXSs9XCJcIixvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRXaWR0aFwiLHIpLDA9PT1yWzBdLmxlbmd0aD8wOihlPXRoaXMuX3JlbmRlcmVyKS50ZXh0V2lkdGguYXBwbHkoZSxyKX0sby5kZWZhdWx0LnByb3RvdHlwZS50ZXh0QXNjZW50PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidGV4dEFzY2VudFwiLHQpLHRoaXMuX3JlbmRlcmVyLnRleHRBc2NlbnQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS50ZXh0RGVzY2VudD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3JldHVybiBvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHREZXNjZW50XCIsdCksdGhpcy5fcmVuZGVyZXIudGV4dERlc2NlbnQoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5fdXBkYXRlVGV4dE1ldHJpY3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuX3VwZGF0ZVRleHRNZXRyaWNzKCl9LG8uZGVmYXVsdC5wcm90b3R5cGUudGV4dFdyYXA9ZnVuY3Rpb24oZSl7aWYoXCJXT1JEXCIhPT1lJiZcIkNIQVJcIiE9PWUpdGhyb3dcIkVycm9yOiB0ZXh0V3JhcCBhY2NlcHRzIG9ubHkgV09SRCBvciBDSEFSXCI7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLnRleHRXcmFwKGUpfTt2YXIgaT1vLmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uL2NvcmUvbWFpblwiOjI2NH1dLDMwMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5sYXN0LWluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixmPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxvPWwoZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKSxpPWwoZShcIm9wZW50eXBlLmpzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIGwoZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXJldHVybiByLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpLHJ9ZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmlsZV9lcnJvcnNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCIpLGYuZGVmYXVsdC5wcm90b3R5cGUubG9hZEZvbnQ9ZnVuY3Rpb24ocyxsLHUpe2YuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibG9hZEZvbnRcIixhcmd1bWVudHMpO3ZhciBjPW5ldyBmLmRlZmF1bHQuRm9udCh0aGlzKSxkPXRoaXM7cmV0dXJuIGkubG9hZChzLGZ1bmN0aW9uKGUsdCl7aWYoZSlyZXR1cm4gZi5kZWZhdWx0Ll9mcmllbmRseUZpbGVMb2FkRXJyb3IoNCxzKSx2b2lkIDAhPT11P3UoZSk6dm9pZCBjb25zb2xlLmVycm9yKGUscyk7Yy5mb250PXQsdm9pZCAwIT09bCYmbChjKSxkLl9kZWNyZW1lbnRQcmVsb2FkKCk7dmFyIHIsbixvPXMuc3BsaXQoXCJcXFxcXCIpLnBvcCgpLnNwbGl0KFwiL1wiKS5wb3AoKSxpPW8ubGFzdEluZGV4T2YoXCIuXCIpLGE9aTwxP251bGw6by5zdWJzdHIoaSsxKTtbXCJ0dGZcIixcIm90ZlwiLFwid29mZlwiLFwid29mZjJcIl0uaW5jbHVkZXMoYSkmJihyPW8uc3Vic3RyKDAsaSksKG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlxcbkBmb250LWZhY2Uge1xcbmZvbnQtZmFtaWx5OiBcIi5jb25jYXQocixcIjtcXG5zcmM6IHVybChcIikuY29uY2F0KHMsXCIpO1xcbn1cXG5cIikpKSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKG4pKX0pLGN9LGYuZGVmYXVsdC5wcm90b3R5cGUudGV4dD1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpO3JldHVybiBmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLl9kb0ZpbGx8fHRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZT8oaT10aGlzLl9yZW5kZXJlcikudGV4dC5hcHBseShpLGFyZ3VtZW50cyk6dGhpc30sZi5kZWZhdWx0LnByb3RvdHlwZS50ZXh0Rm9udD1mdW5jdGlvbihlLHQpe2lmKGYuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidGV4dEZvbnRcIixhcmd1bWVudHMpLGFyZ3VtZW50cy5sZW5ndGgpe2lmKCFlKXRocm93IG5ldyBFcnJvcihcIm51bGwgZm9udCBwYXNzZWQgdG8gdGV4dEZvbnRcIik7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl90ZXh0Rm9udFwiLGUpLHQmJih0aGlzLl9yZW5kZXJlci5fc2V0UHJvcGVydHkoXCJfdGV4dFNpemVcIix0KSx0aGlzLl9yZW5kZXJlci5fbGVhZGluZ1NldHx8dGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX3RleHRMZWFkaW5nXCIsdCpvLl9ERUZBVUxUX0xFQURNVUxUKSksdGhpcy5fcmVuZGVyZXIuX2FwcGx5VGV4dFByb3BlcnRpZXMoKX1yZXR1cm4gdGhpcy5fcmVuZGVyZXIuX3RleHRGb250fTt2YXIgdT1mLmRlZmF1bHQ7ci5kZWZhdWx0PXV9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIjoyNTUsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiOjI1NixcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiOjI1OSxcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIjoxNDksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXNcIjoxNTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZlwiOjE2MCxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiOjE4MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIjoxOTEsXCJvcGVudHlwZS5qc1wiOjIzOX1dLDMwMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSx4PWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWgoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9YSgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIGEoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBhPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gaChlKXtyZXR1cm4oaD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24gcChlLHQpe2Zvcih2YXIgcj1mdW5jdGlvbihlLHQpe2lmKFwib2JqZWN0XCIhPT1oKGUpKWU9dDtlbHNlIGZvcih2YXIgciBpbiB0KXZvaWQgMD09PWVbcl0mJihlW3JdPXRbcl0pO3JldHVybiBlfSh0LHtzYW1wbGVGYWN0b3I6LjEsc2ltcGxpZnlUaHJlc2hvbGQ6MH0pLG49bChlLDAsMSksbz1uLyhuKnIuc2FtcGxlRmFjdG9yKSxpPVtdLGE9MDthPG47YSs9bylpLnB1c2gobChlLGEpKTtyZXR1cm4gci5zaW1wbGlmeVRocmVzaG9sZCYmZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTowLHI9MCxuPWUubGVuZ3RoLTE7MzxlLmxlbmd0aCYmMDw9bjstLW4pZihzKGUsbi0xKSxzKGUsbikscyhlLG4rMSksdCkmJihlLnNwbGljZShuJWUubGVuZ3RoLDEpLHIrKyl9KGksci5zaW1wbGlmeVRocmVzaG9sZCksaX1mdW5jdGlvbiB5KGUpe2Zvcih2YXIgdCxyPVtdLG49MDtuPGUubGVuZ3RoO24rKylcIk1cIj09PWVbbl0udHlwZSYmKHQmJnIucHVzaCh0KSx0PVtdKSx0LnB1c2goaShlW25dKSk7cmV0dXJuIHIucHVzaCh0KSxyfWZ1bmN0aW9uIGkoZSl7dmFyIHQ9W2UudHlwZV07cmV0dXJuXCJNXCI9PT1lLnR5cGV8fFwiTFwiPT09ZS50eXBlP3QucHVzaChlLngsZS55KTpcIkNcIj09PWUudHlwZT90LnB1c2goZS54MSxlLnkxLGUueDIsZS55MixlLngsZS55KTpcIlFcIj09PWUudHlwZSYmdC5wdXNoKGUueDEsZS55MSxlLngsZS55KSx0fWZ1bmN0aW9uIHMoZSx0KXt2YXIgcj1lLmxlbmd0aDtyZXR1cm4gZVt0PDA/dCVyK3I6dCVyXX1mdW5jdGlvbiBmKGUsdCxyLG4pe2lmKCFuKXJldHVybiAwPT0obz1lLGE9ciwoKGk9dClbMF0tb1swXSkqKGFbMV0tb1sxXSktKGFbMF0tb1swXSkqKGlbMV0tb1sxXSkpO3ZhciBvLGksYTt2b2lkIDA9PT1mLnRtcFBvaW50MSYmKGYudG1wUG9pbnQxPVtdLGYudG1wUG9pbnQyPVtdKTt2YXIgcz1mLnRtcFBvaW50MSxsPWYudG1wUG9pbnQyO3MueD10LngtZS54LHMueT10LnktZS55LGwueD1yLngtdC54LGwueT1yLnktdC55O3ZhciB1PXMueCpsLngrcy55KmwueSxjPU1hdGguc3FydChzLngqcy54K3MueSpzLnkpLGQ9TWF0aC5zcXJ0KGwueCpsLngrbC55KmwueSk7cmV0dXJuIE1hdGguYWNvcyh1LyhjKmQpKTxufWZ1bmN0aW9uIGQoZSx0LHIsbixvLGksYSxzLGwpe3ZhciB1PTEtbCxjPU1hdGgucG93KHUsMyksZD1NYXRoLnBvdyh1LDIpLGY9bCpsLGg9ZipsLHA9YyplKzMqZCpsKnIrMyp1KmwqbCpvK2gqYSx5PWMqdCszKmQqbCpuKzMqdSpsKmwqaStoKnMsbT1lKzIqbCooci1lKStmKihvLTIqcitlKSxnPXQrMipsKihuLXQpK2YqKGktMipuK3QpLHY9cisyKmwqKG8tcikrZiooYS0yKm8rciksYj1uKzIqbCooaS1uKStmKihzLTIqaStuKSxfPXUqZStsKnIseD11KnQrbCpuLHc9dSpvK2wqYSxqPXUqaStsKnMsUz05MC0xODAqTWF0aC5hdGFuMihtLXYsZy1iKS9NYXRoLlBJO3JldHVybih2PG18fGc8YikmJihTKz0xODApLHt4OnAseTp5LG06e3g6bSx5Omd9LG46e3g6dix5OmJ9LHN0YXJ0Ont4Ol8seTp4fSxlbmQ6e3g6dyx5Omp9LGFscGhhOlN9fWZ1bmN0aW9uIG0oZSx0LHIsbixvLGksYSxzLGwpe3JldHVybiBudWxsPT1sP2coZSx0LHIsbixvLGksYSxzKTpkKGUsdCxyLG4sbyxpLGEscyxmdW5jdGlvbihlLHQscixuLG8saSxhLHMsbCl7aWYobDwwfHxnKGUsdCxyLG4sbyxpLGEscyk8bClyZXR1cm47dmFyIHUsYz0uNSxkPTEtYzt1PWcoZSx0LHIsbixvLGksYSxzLGQpO2Zvcig7LjAxPE1hdGguYWJzKHUtbCk7KXU9ZyhlLHQscixuLG8saSxhLHMsZCs9KHU8bD8xOi0xKSooYy89MikpO3JldHVybiBkfShlLHQscixuLG8saSxhLHMsbCkpfWZ1bmN0aW9uIGwoZSx0LHIpe2Zvcih2YXIgbixvLGksYSxzLGw9MCx1PTAsYz0oZT1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIHIoZSx0LHIpe3ZhciBuLG87aWYoIWUpcmV0dXJuW1wiQ1wiLHQueCx0LnksdC54LHQueSx0LngsdC55XTtzd2l0Y2goZVswXWlue1Q6MSxROjF9fHwodC5xeD10LnF5PW51bGwpLGVbMF0pe2Nhc2VcIk1cIjp0Llg9ZVsxXSx0Llk9ZVsyXTticmVhaztjYXNlXCJBXCI6ZT1bXCJDXCJdLmNvbmNhdChmdW5jdGlvbiBlKHQscixuLG8saSxhLHMsbCx1LGMpe3ZhciBkPU1hdGguUEk7dmFyIGY9MTIwKmQvMTgwO3ZhciBoO3ZhciBwO3ZhciB5O3ZhciBtO3ZhciBnPWQvMTgwKigraXx8MCk7dmFyIHY9W107dmFyIGI7dmFyIF89ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUqTWF0aC5jb3MociktdCpNYXRoLnNpbihyKSxvPWUqTWF0aC5zaW4ocikrdCpNYXRoLmNvcyhyKTtyZXR1cm57eDpuLHk6b319O2lmKGMpaD1jWzBdLHA9Y1sxXSx5PWNbMl0sbT1jWzNdO2Vsc2V7Yj1fKHQsciwtZyksdD1iLngscj1iLnksYj1fKGwsdSwtZyksbD1iLngsdT1iLnk7dmFyIHg9KHQtbCkvMix3PShyLXUpLzIsaj14KngvKG4qbikrdyp3LyhvKm8pOzE8aiYmKGo9TWF0aC5zcXJ0KGopLG4qPWosbyo9aik7dmFyIFM9bipuLE09bypvLEU9KGE9PT1zPy0xOjEpKk1hdGguc3FydChNYXRoLmFicygoUypNLVMqdyp3LU0qeCp4KS8oUyp3KncrTSp4KngpKSk7eT1FKm4qdy9vKyh0K2wpLzIsbT1FKi1vKngvbisocit1KS8yLGg9TWF0aC5hc2luKCgoci1tKS9vKS50b0ZpeGVkKDkpKSxwPU1hdGguYXNpbigoKHUtbSkvbykudG9GaXhlZCg5KSksKGg9dDx5P2QtaDpoKTwwJiYoaD0yKmQraCksKHA9bDx5P2QtcDpwKTwwJiYocD0yKmQrcCkscyYmcDxoJiYoaC09MipkKSwhcyYmaDxwJiYocC09MipkKX12YXIgVD1wLWg7aWYoTWF0aC5hYnMoVCk+Zil7dmFyIE89cCxDPWwsTD11O3A9aCtmKihzJiZoPHA/MTotMSksbD15K24qTWF0aC5jb3MocCksdT1tK28qTWF0aC5zaW4ocCksdj1lKGwsdSxuLG8saSwwLHMsQyxMLFtwLE8seSxtXSl9VD1wLWg7dmFyIFA9TWF0aC5jb3MoaCksQT1NYXRoLnNpbihoKSxrPU1hdGguY29zKHApLFI9TWF0aC5zaW4ocCksRD1NYXRoLnRhbihULzQpLEk9NC8zKm4qRCxVPTQvMypvKkQsTj1bdCxyXSxGPVt0K0kqQSxyLVUqUF0sQj1bbCtJKlIsdS1VKmtdLEc9W2wsdV07RlswXT0yKk5bMF0tRlswXTtGWzFdPTIqTlsxXS1GWzFdO3tpZihjKXJldHVybltGLEIsR10uY29uY2F0KHYpO3Y9W0YsQixHXS5jb25jYXQodikuam9pbigpLnNwbGl0KFwiLFwiKTtmb3IodmFyIFY9W10sej0wLEg9di5sZW5ndGg7ejxIO3orKylWW3pdPXolMj9fKHZbei0xXSx2W3pdLGcpLnk6Xyh2W3pdLHZbeisxXSxnKS54O3JldHVybiBWfX0uYXBwbHkoMCxbdC54LHQueV0uY29uY2F0KGUuc2xpY2UoMSkpKSk7YnJlYWs7Y2FzZVwiU1wiOm89XCJDXCI9PT1yfHxcIlNcIj09PXI/KG49Mip0LngtdC5ieCwyKnQueS10LmJ5KToobj10LngsdC55KSxlPVtcIkNcIixuLG9dLmNvbmNhdChlLnNsaWNlKDEpKTticmVhaztjYXNlXCJUXCI6XCJRXCI9PT1yfHxcIlRcIj09PXI/KHQucXg9Mip0LngtdC5xeCx0LnF5PTIqdC55LXQucXkpOih0LnF4PXQueCx0LnF5PXQueSksZT1bXCJDXCJdLmNvbmNhdChqKHQueCx0LnksdC5xeCx0LnF5LGVbMV0sZVsyXSkpO2JyZWFrO2Nhc2VcIlFcIjp0LnF4PWVbMV0sdC5xeT1lWzJdLGU9W1wiQ1wiXS5jb25jYXQoaih0LngsdC55LGVbMV0sZVsyXSxlWzNdLGVbNF0pKTticmVhaztjYXNlXCJMXCI6ZT1bXCJDXCJdLmNvbmNhdCh3KHQueCx0LnksZVsxXSxlWzJdKSk7YnJlYWs7Y2FzZVwiSFwiOmU9W1wiQ1wiXS5jb25jYXQodyh0LngsdC55LGVbMV0sdC55KSk7YnJlYWs7Y2FzZVwiVlwiOmU9W1wiQ1wiXS5jb25jYXQodyh0LngsdC55LHQueCxlWzFdKSk7YnJlYWs7Y2FzZVwiWlwiOmU9W1wiQ1wiXS5jb25jYXQodyh0LngsdC55LHQuWCx0LlkpKX1yZXR1cm4gZX1mdW5jdGlvbiBuKGUsdCl7aWYoNzxlW3RdLmxlbmd0aCl7ZVt0XS5zaGlmdCgpO2Zvcih2YXIgcj1lW3RdO3IubGVuZ3RoOyljW3RdPVwiQVwiLHMmJihkW3RdPVwiQVwiKSxlLnNwbGljZSh0KyssMCxbXCJDXCJdLmNvbmNhdChyLnNwbGljZSgwLDYpKSk7ZS5zcGxpY2UodCwxKSxpPU1hdGgubWF4KGEubGVuZ3RoLHMmJnMubGVuZ3RofHwwKX19ZnVuY3Rpb24gbyhlLHQscixuLG8pe2UmJnQmJlwiTVwiPT09ZVtvXVswXSYmXCJNXCIhPT10W29dWzBdJiYodC5zcGxpY2UobywwLFtcIk1cIixuLngsbi55XSksci5ieD0wLHIuYnk9MCxyLng9ZVtvXVsxXSxyLnk9ZVtvXVsyXSxpPU1hdGgubWF4KGEubGVuZ3RoLHMmJnMubGVuZ3RofHwwKSl9dmFyIGksYT1iKGUpLHM9dCYmYih0KSxsPXt4OjAseTowLGJ4OjAsYnk6MCxYOjAsWTowLHF4Om51bGwscXk6bnVsbH0sdT17eDowLHk6MCxieDowLGJ5OjAsWDowLFk6MCxxeDpudWxsLHF5Om51bGx9LGM9W10sZD1bXSxmPVwiXCIsaD1cIlwiO2k9TWF0aC5tYXgoYS5sZW5ndGgscyYmcy5sZW5ndGh8fDApO2Zvcih2YXIgcD0wO3A8aTtwKyspe2FbcF0mJihmPWFbcF1bMF0pLFwiQ1wiIT09ZiYmKGNbcF09ZixwJiYoaD1jW3AtMV0pKSxhW3BdPXIoYVtwXSxsLGgpLFwiQVwiIT09Y1twXSYmXCJDXCI9PT1mJiYoY1twXT1cIkNcIiksbihhLHApLHMmJihzW3BdJiYoZj1zW3BdWzBdKSxcIkNcIiE9PWYmJihkW3BdPWYscCYmKGg9ZFtwLTFdKSksc1twXT1yKHNbcF0sdSxoKSxcIkFcIiE9PWRbcF0mJlwiQ1wiPT09ZiYmKGRbcF09XCJDXCIpLG4ocyxwKSksbyhhLHMsbCx1LHApLG8ocyxhLHUsbCxwKTt2YXIgeT1hW3BdLG09cyYmc1twXSxnPXkubGVuZ3RoLHY9cyYmbS5sZW5ndGg7bC54PXlbZy0yXSxsLnk9eVtnLTFdLGwuYng9cGFyc2VGbG9hdCh5W2ctNF0pfHxsLngsbC5ieT1wYXJzZUZsb2F0KHlbZy0zXSl8fGwueSx1LmJ4PXMmJihwYXJzZUZsb2F0KG1bdi00XSl8fHUueCksdS5ieT1zJiYocGFyc2VGbG9hdChtW3YtM10pfHx1LnkpLHUueD1zJiZtW3YtMl0sdS55PXMmJm1bdi0xXX1yZXR1cm4gcz9bYSxzXTphfShlKSkubGVuZ3RoO3U8Yzt1Kyspe2lmKFwiTVwiPT09KGk9ZVt1XSlbMF0pbj0raVsxXSxvPStpWzJdO2Vsc2V7aWYodDxsKyhhPW0obixvLGlbMV0saVsyXSxpWzNdLGlbNF0saVs1XSxpWzZdKSkmJiFyKXJldHVybnt4OihzPW0obixvLGlbMV0saVsyXSxpWzNdLGlbNF0saVs1XSxpWzZdLHQtbCkpLngseTpzLnksYWxwaGE6cy5hbHBoYX07bCs9YSxuPStpWzVdLG89K2lbNl19aS5zaGlmdCgpK2l9cmV0dXJuKHM9cj9sOmQobixvLGlbMF0saVsxXSxpWzJdLGlbM10saVs0XSxpWzVdLDEpKS5hbHBoYSYmKHM9e3g6cy54LHk6cy55LGFscGhhOnMuYWxwaGF9KSxzfWZ1bmN0aW9uIGIoZSl7dmFyIHQscj1bXSxuPTAsbz0wLGk9MCxhPTAscz0wO2lmKCFlKXJldHVybiByO1wiTVwiPT09ZVswXVswXSYmKGk9bj0rZVswXVsxXSxhPW89K2VbMF1bMl0scysrLHJbMF09W1wiTVwiLG4sb10pO2Zvcih2YXIgbCx1LGM9Mz09PWUubGVuZ3RoJiZcIk1cIj09PWVbMF1bMF0mJlwiUlwiPT09ZVsxXVswXS50b1VwcGVyQ2FzZSgpJiZcIlpcIj09PWVbMl1bMF0udG9VcHBlckNhc2UoKSxkPXMsZj1lLmxlbmd0aDtkPGY7ZCsrKXtpZihyLnB1c2gobD1bXSksKHU9ZVtkXSlbMF0hPT1TdHJpbmcucHJvdG90eXBlLnRvVXBwZXJDYXNlLmNhbGwodVswXSkpc3dpdGNoKGxbMF09U3RyaW5nLnByb3RvdHlwZS50b1VwcGVyQ2FzZS5jYWxsKHVbMF0pLGxbMF0pe2Nhc2VcIkFcIjpsWzFdPXVbMV0sbFsyXT11WzJdLGxbM109dVszXSxsWzRdPXVbNF0sbFs1XT11WzVdLGxbNl09Kyh1WzZdK24pLGxbN109Kyh1WzddK28pO2JyZWFrO2Nhc2VcIlZcIjpsWzFdPSt1WzFdK287YnJlYWs7Y2FzZVwiSFwiOmxbMV09K3VbMV0rbjticmVhaztjYXNlXCJSXCI6Zm9yKHZhciBoPTIscD0odD1bbixvXS5jb25jYXQodS5zbGljZSgxKSkpLmxlbmd0aDtoPHA7aCsrKXRbaF09K3RbaF0rbix0WysraF09K3RbaF0rbztyLnBvcCgpLHI9ci5jb25jYXQoXyh0LGMpKTticmVhaztjYXNlXCJNXCI6aT0rdVsxXStuLGE9K3VbMl0rbzticmVhaztkZWZhdWx0OmZvcih2YXIgeT0xLG09dS5sZW5ndGg7eTxtO3krKylsW3ldPSt1W3ldKyh5JTI/bjpvKX1lbHNlIGlmKFwiUlwiPT09dVswXSl0PVtuLG9dLmNvbmNhdCh1LnNsaWNlKDEpKSxyLnBvcCgpLHI9ci5jb25jYXQoXyh0LGMpKSxsPVtcIlJcIl0uY29uY2F0KHUuc2xpY2UoLTIpKTtlbHNlIGZvcih2YXIgZz0wLHY9dS5sZW5ndGg7Zzx2O2crKylsW2ddPXVbZ107c3dpdGNoKGxbMF0pe2Nhc2VcIlpcIjpuPWksbz1hO2JyZWFrO2Nhc2VcIkhcIjpuPWxbMV07YnJlYWs7Y2FzZVwiVlwiOm89bFsxXTticmVhaztjYXNlXCJNXCI6aT1sW2wubGVuZ3RoLTJdLGE9bFtsLmxlbmd0aC0xXTticmVhaztkZWZhdWx0Om49bFtsLmxlbmd0aC0yXSxvPWxbbC5sZW5ndGgtMV19fXJldHVybiByfWZ1bmN0aW9uIF8oZSx0KXtmb3IodmFyIHI9W10sbj0wLG89ZS5sZW5ndGg7bjxvLTIqIXQ7bis9Mil7dmFyIGk9W3t4OitlW24tMl0seTorZVtuLTFdfSx7eDorZVtuXSx5OitlW24rMV19LHt4OitlW24rMl0seTorZVtuKzNdfSx7eDorZVtuKzRdLHk6K2Vbbis1XX1dO3Q/bj9vLTQ9PT1uP2lbM109e3g6K2VbMF0seTorZVsxXX06by0yPT09biYmKGlbMl09e3g6K2VbMF0seTorZVsxXX0saVszXT17eDorZVsyXSx5OitlWzNdfSk6aVswXT17eDorZVtvLTJdLHk6K2Vbby0xXX06by00PT09bj9pWzNdPWlbMl06bnx8KGlbMF09e3g6K2Vbbl0seTorZVtuKzFdfSksci5wdXNoKFtcIkNcIiwoLWlbMF0ueCs2KmlbMV0ueCtpWzJdLngpLzYsKC1pWzBdLnkrNippWzFdLnkraVsyXS55KS82LChpWzFdLngrNippWzJdLngtaVszXS54KS82LChpWzFdLnkrNippWzJdLnktaVszXS55KS82LGlbMl0ueCxpWzJdLnldKX1yZXR1cm4gcn1mdW5jdGlvbiB3KGUsdCxyLG4pe3JldHVybltlLHQscixuLHIsbl19ZnVuY3Rpb24gaihlLHQscixuLG8saSl7cmV0dXJuWzEvMyplKzIvMypyLDEvMyp0KzIvMypuLDEvMypvKzIvMypyLDEvMyppKzIvMypuLG8saV19ZnVuY3Rpb24gZyhlLHQscixuLG8saSxhLHMsbCl7bnVsbD09bCYmKGw9MSk7Zm9yKHZhciB1PShsPTE8bD8xOmw8MD8wOmwpLzIsYz1bLS4xMjUyLC4xMjUyLC0uMzY3OCwuMzY3OCwtLjU4NzMsLjU4NzMsLS43Njk5LC43Njk5LC0uOTA0MSwuOTA0MSwtLjk4MTYsLjk4MTZdLGQ9MCxmPVsuMjQ5MSwuMjQ5MSwuMjMzNSwuMjMzNSwuMjAzMiwuMjAzMiwuMTYwMSwuMTYwMSwuMTA2OSwuMTA2OSwuMDQ3MiwuMDQ3Ml0saD0wO2g8MTI7aCsrKXt2YXIgcD11KmNbaF0rdSx5PXYocCxlLHIsbyxhKSxtPXYocCx0LG4saSxzKSxnPXkqeSttKm07ZCs9ZltoXSpNYXRoLnNxcnQoZyl9cmV0dXJuIHUqZH1mdW5jdGlvbiB2KGUsdCxyLG4sbyl7cmV0dXJuIGUqKGUqKC0zKnQrOSpyLTkqbiszKm8pKzYqdC0xMipyKzYqbiktMyp0KzMqcn1vLmRlZmF1bHQuRm9udD1mdW5jdGlvbihlKXt0aGlzLnBhcmVudD1lLHRoaXMuY2FjaGU9e30sdGhpcy5mb250PXZvaWQgMH0sby5kZWZhdWx0LkZvbnQucHJvdG90eXBlLnRleHRCb3VuZHM9ZnVuY3Rpb24oZSl7dmFyIHQscj0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MCxuPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTowLG89Mzxhcmd1bWVudHMubGVuZ3RoP2FyZ3VtZW50c1szXTp2b2lkIDAsaT00PGFyZ3VtZW50cy5sZW5ndGg/YXJndW1lbnRzWzRdOnZvaWQgMCxhPWkmJmkucmVuZGVyZXImJmkucmVuZGVyZXIuX3BJbnN0fHx0aGlzLnBhcmVudCxzPWEuX3JlbmRlcmVyLmRyYXdpbmdDb250ZXh0O3MudGV4dEFsaWdufHx4LkxFRlQscy50ZXh0QmFzZWxpbmV8fHguQkFTRUxJTkU7aWYobz1vfHxhLl9yZW5kZXJlci5fdGV4dFNpemUsIXQpe3ZhciBsLHUsYz1bXSxkPVtdLGY9W107ZlswXT1bXTt2YXIgaD1bXSxwPXRoaXMuX3NjYWxlKG8pLHk9YS5fcmVuZGVyZXIudGV4dExlYWRpbmcoKSxtPTA7dGhpcy5mb250LmZvckVhY2hHbHlwaChlLHIsbixvLGksZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89ZS5nZXRNZXRyaWNzKCk7MD09PWUuaW5kZXh8fDEwPT09ZS5pbmRleD9mW20rPTFdPVtdOihmW21dLnB1c2godCtvLnhNaW4qcCksZlttXS5wdXNoKHQrby54TWF4KnApLGgucHVzaChyK20qeSstby55TWluKnApLGgucHVzaChyK20qeSstby55TWF4KnApKX0pLDA8ZlttXS5sZW5ndGgmJihjW21dPU1hdGgubWluLmFwcGx5KG51bGwsZlttXSksZFttXT1NYXRoLm1heC5hcHBseShudWxsLGZbbV0pKTtmb3IodmFyIGc9MCx2PTA7djw9bTt2Kyspe2Nbdl09TWF0aC5taW4uYXBwbHkobnVsbCxmW3ZdKSxkW3ZdPU1hdGgubWF4LmFwcGx5KG51bGwsZlt2XSk7dmFyIGI9ZFt2XS1jW3ZdO2c8YiYmKGc9Yil9dmFyIF89TWF0aC5taW4uYXBwbHkobnVsbCxjKTt0PXt4Ol8seTpsPU1hdGgubWluLmFwcGx5KG51bGwsaCksaDpNYXRoLm1heC5hcHBseShudWxsLGgpLWwsdzpnLGFkdmFuY2U6Xy1yfSx1PXRoaXMuX2hhbmRsZUFsaWdubWVudChhLl9yZW5kZXJlcixlLHQueCx0LnksdC53K3QuYWR2YW5jZSksdC54PXUueCx0Lnk9dS55fXJldHVybiB0fSxvLmRlZmF1bHQuRm9udC5wcm90b3R5cGUudGV4dFRvUG9pbnRzPWZ1bmN0aW9uKGUsdCxyLG4sbyl7dmFyIGksYT0wLHM9W10sbD10aGlzLl9nZXRHbHlwaHMoZSk7bj1ufHx0aGlzLnBhcmVudC5fcmVuZGVyZXIuX3RleHRTaXplO2Zvcih2YXIgdT0wO3U8bC5sZW5ndGg7dSsrKXtpZighKGxbaT11XS5uYW1lJiZcInNwYWNlXCI9PT1sW2ldLm5hbWV8fGUubGVuZ3RoPT09bC5sZW5ndGgmJlwiIFwiPT09ZVtpXSkpZm9yKHZhciBjPXkobFt1XS5nZXRQYXRoKHQscixuKS5jb21tYW5kcyksZD0wO2Q8Yy5sZW5ndGg7ZCsrKWZvcih2YXIgZj1wKGNbZF0sbyksaD0wO2g8Zi5sZW5ndGg7aCsrKWZbaF0ueCs9YSxzLnB1c2goZltoXSk7YSs9bFt1XS5hZHZhbmNlV2lkdGgqdGhpcy5fc2NhbGUobil9cmV0dXJuIHN9LG8uZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fZ2V0R2x5cGhzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmZvbnQuc3RyaW5nVG9HbHlwaHMoZSl9LG8uZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fZ2V0UGF0aD1mdW5jdGlvbihlLHQscixuKXt2YXIgbz0obiYmbi5yZW5kZXJlciYmbi5yZW5kZXJlci5fcEluc3R8fHRoaXMucGFyZW50KS5fcmVuZGVyZXIsaT10aGlzLl9oYW5kbGVBbGlnbm1lbnQobyxlLHQscik7cmV0dXJuIHRoaXMuZm9udC5nZXRQYXRoKGUsaS54LGkueSxvLl90ZXh0U2l6ZSxuKX0sby5kZWZhdWx0LkZvbnQucHJvdG90eXBlLl9nZXRQYXRoRGF0YT1mdW5jdGlvbihlLHQscixuKXt2YXIgbz0zO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYyPGFyZ3VtZW50cy5sZW5ndGg/ZT10aGlzLl9nZXRQYXRoKGUsdCxyLG4pOlwib2JqZWN0XCI9PT1oKHQpJiYobj10KSxuJiZcIm51bWJlclwiPT10eXBlb2Ygbi5kZWNpbWFscyYmKG89bi5kZWNpbWFscyksZS50b1BhdGhEYXRhKG8pfSxvLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX2dldFNWRz1mdW5jdGlvbihlLHQscixuKXt2YXIgbz0zO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYyPGFyZ3VtZW50cy5sZW5ndGg/ZT10aGlzLl9nZXRQYXRoKGUsdCxyLG4pOlwib2JqZWN0XCI9PT1oKHQpJiYobj10KSxuJiYoXCJudW1iZXJcIj09dHlwZW9mIG4uZGVjaW1hbHMmJihvPW4uZGVjaW1hbHMpLFwibnVtYmVyXCI9PXR5cGVvZiBuLnN0cm9rZVdpZHRoJiYoZS5zdHJva2VXaWR0aD1uLnN0cm9rZVdpZHRoKSx2b2lkIDAhPT1uLmZpbGwmJihlLmZpbGw9bi5maWxsKSx2b2lkIDAhPT1uLnN0cm9rZSYmKGUuc3Ryb2tlPW4uc3Ryb2tlKSksZS50b1NWRyhvKX0sby5kZWZhdWx0LkZvbnQucHJvdG90eXBlLl9yZW5kZXJQYXRoPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvLGk9biYmbi5yZW5kZXJlcnx8dGhpcy5wYXJlbnQuX3JlbmRlcmVyLGE9aS5kcmF3aW5nQ29udGV4dDtvPVwib2JqZWN0XCI9PT1oKGUpJiZlLmNvbW1hbmRzP2UuY29tbWFuZHM6dGhpcy5fZ2V0UGF0aChlLHQscixuKS5jb21tYW5kcyxhLmJlZ2luUGF0aCgpO3ZhciBzPSEwLGw9ITEsdT12b2lkIDA7dHJ5e2Zvcih2YXIgYyxkPW9bU3ltYm9sLml0ZXJhdG9yXSgpOyEocz0oYz1kLm5leHQoKSkuZG9uZSk7cz0hMCl7dmFyIGY9Yy52YWx1ZTtcIk1cIj09PWYudHlwZT9hLm1vdmVUbyhmLngsZi55KTpcIkxcIj09PWYudHlwZT9hLmxpbmVUbyhmLngsZi55KTpcIkNcIj09PWYudHlwZT9hLmJlemllckN1cnZlVG8oZi54MSxmLnkxLGYueDIsZi55MixmLngsZi55KTpcIlFcIj09PWYudHlwZT9hLnF1YWRyYXRpY0N1cnZlVG8oZi54MSxmLnkxLGYueCxmLnkpOlwiWlwiPT09Zi50eXBlJiZhLmNsb3NlUGF0aCgpfX1jYXRjaChlKXtsPSEwLHU9ZX1maW5hbGx5e3RyeXtzfHxudWxsPT1kLnJldHVybnx8ZC5yZXR1cm4oKX1maW5hbGx5e2lmKGwpdGhyb3cgdX19cmV0dXJuIGkuX2RvU3Ryb2tlJiZpLl9zdHJva2VTZXQmJmEuc3Ryb2tlKCksaS5fZG9GaWxsJiYoaS5fZmlsbFNldHx8aS5fc2V0RmlsbCh4Ll9ERUZBVUxUX1RFWFRfRklMTCksYS5maWxsKCkpLHRoaXN9LG8uZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fdGV4dFdpZHRoPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuZm9udC5nZXRBZHZhbmNlV2lkdGgoZSx0KX0sby5kZWZhdWx0LkZvbnQucHJvdG90eXBlLl90ZXh0QXNjZW50PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmZvbnQuYXNjZW5kZXIqdGhpcy5fc2NhbGUoZSl9LG8uZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fdGV4dERlc2NlbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuLXRoaXMuZm9udC5kZXNjZW5kZXIqdGhpcy5fc2NhbGUoZSl9LG8uZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fc2NhbGU9ZnVuY3Rpb24oZSl7cmV0dXJuIDEvdGhpcy5mb250LnVuaXRzUGVyRW0qKGV8fHRoaXMucGFyZW50Ll9yZW5kZXJlci5fdGV4dFNpemUpfSxvLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX2hhbmRsZUFsaWdubWVudD1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpPWUuX3RleHRTaXplO3N3aXRjaCh2b2lkIDA9PT1vJiYobz10aGlzLl90ZXh0V2lkdGgodCxpKSksZS5fdGV4dEFsaWduKXtjYXNlIHguQ0VOVEVSOnItPW8vMjticmVhaztjYXNlIHguUklHSFQ6ci09b31zd2l0Y2goZS5fdGV4dEJhc2VsaW5lKXtjYXNlIHguVE9QOm4rPXRoaXMuX3RleHRBc2NlbnQoaSk7YnJlYWs7Y2FzZSB4LkNFTlRFUjpuKz10aGlzLl90ZXh0QXNjZW50KGkpLzI7YnJlYWs7Y2FzZSB4LkJPVFRPTTpuLT10aGlzLl90ZXh0RGVzY2VudChpKX1yZXR1cm57eDpyLHk6bn19O3ZhciB1PW8uZGVmYXVsdDtyLmRlZmF1bHQ9dX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCI6MTQ5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGxcIjoxNTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pblwiOjE1OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiOjE2MixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2VcIjoxNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiOjE2NixcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWRcIjoxNzIsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlY1wiOjE4MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIjoxODYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCI6MTkxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XSwzMDM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLmNvbnN0cnVjdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O28uZGVmYXVsdC5wcm90b3R5cGUuYXBwZW5kPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUucHVzaCh0KSxlfSxvLmRlZmF1bHQucHJvdG90eXBlLmFycmF5Q29weT1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpLGE7ZT12b2lkIDAhPT1vPyhhPU1hdGgubWluKG8sZS5sZW5ndGgpLGk9bixlLnNsaWNlKHQsYSt0KSk6KGE9dm9pZCAwIT09cj8oYT1yLE1hdGgubWluKGEsZS5sZW5ndGgpKTplLmxlbmd0aCxpPTAscj10LGUuc2xpY2UoMCxhKSksQXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShyLFtpLGFdLmNvbmNhdChlKSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuY29uY2F0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uY2F0KHQpfSxvLmRlZmF1bHQucHJvdG90eXBlLnJldmVyc2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmV2ZXJzZSgpfSxvLmRlZmF1bHQucHJvdG90eXBlLnNob3J0ZW49ZnVuY3Rpb24oZSl7cmV0dXJuIGUucG9wKCksZX0sby5kZWZhdWx0LnByb3RvdHlwZS5zaHVmZmxlPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLG4sbz1BcnJheUJ1ZmZlciYmQXJyYXlCdWZmZXIuaXNWaWV3JiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSksaT0oZT10fHxvP2U6ZS5zbGljZSgpKS5sZW5ndGg7MTxpOylyPXRoaXMucmFuZG9tKDAsMSkqaXwwLG49ZVstLWldLGVbaV09ZVtyXSxlW3JdPW47cmV0dXJuIGV9LG8uZGVmYXVsdC5wcm90b3R5cGUuc29ydD1mdW5jdGlvbihlLHQpe3ZhciByPXQ/ZS5zbGljZSgwLE1hdGgubWluKHQsZS5sZW5ndGgpKTplLG49dD9lLnNsaWNlKE1hdGgubWluKHQsZS5sZW5ndGgpKTpbXTtyZXR1cm4ocj1cInN0cmluZ1wiPT10eXBlb2YgclswXT9yLnNvcnQoKTpyLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS10fSkpLmNvbmNhdChuKX0sby5kZWZhdWx0LnByb3RvdHlwZS5zcGxpY2U9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KGUsW3IsMF0uY29uY2F0KHQpKSxlfSxvLmRlZmF1bHQucHJvdG90eXBlLnN1YnNldD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHZvaWQgMCE9PXI/ZS5zbGljZSh0LHQrcik6ZS5zbGljZSh0LGUubGVuZ3RoKX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLmNvbnN0cnVjdG9yXCI6MTQ4LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiOjE2MixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2VcIjoxNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3N31dLDMwNDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwZWF0XCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LnByb3RvdHlwZS5mbG9hdD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEFycmF5P2UubWFwKHBhcnNlRmxvYXQpOnBhcnNlRmxvYXQoZSl9LG8uZGVmYXVsdC5wcm90b3R5cGUuaW50PWZ1bmN0aW9uKGUpe3ZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXToxMDtyZXR1cm4gZT09PTEvMHx8XCJJbmZpbml0eVwiPT09ZT8xLzA6ZT09PS0xLzB8fFwiLUluZmluaXR5XCI9PT1lPy0xLzA6XCJzdHJpbmdcIj09dHlwZW9mIGU/cGFyc2VJbnQoZSx0KTpcIm51bWJlclwiPT10eXBlb2YgZT8wfGU6XCJib29sZWFuXCI9PXR5cGVvZiBlP2U/MTowOmUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gby5kZWZhdWx0LnByb3RvdHlwZS5pbnQoZSx0KX0pOnZvaWQgMH0sby5kZWZhdWx0LnByb3RvdHlwZS5zdHI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChvLmRlZmF1bHQucHJvdG90eXBlLnN0cik6U3RyaW5nKGUpfSxvLmRlZmF1bHQucHJvdG90eXBlLmJvb2xlYW49ZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGU/MCE9PWU6XCJzdHJpbmdcIj09dHlwZW9mIGU/XCJ0cnVlXCI9PT1lLnRvTG93ZXJDYXNlKCk6XCJib29sZWFuXCI9PXR5cGVvZiBlP2U6ZSBpbnN0YW5jZW9mIEFycmF5P2UubWFwKG8uZGVmYXVsdC5wcm90b3R5cGUuYm9vbGVhbik6dm9pZCAwfSxvLmRlZmF1bHQucHJvdG90eXBlLmJ5dGU9ZnVuY3Rpb24oZSl7dmFyIHQ9by5kZWZhdWx0LnByb3RvdHlwZS5pbnQoZSwxMCk7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQ/KHQrMTI4KSUyNTYtMTI4OnQgaW5zdGFuY2VvZiBBcnJheT90Lm1hcChvLmRlZmF1bHQucHJvdG90eXBlLmJ5dGUpOnZvaWQgMH0sby5kZWZhdWx0LnByb3RvdHlwZS5jaGFyPWZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCIhPXR5cGVvZiBlfHxpc05hTihlKT9lIGluc3RhbmNlb2YgQXJyYXk/ZS5tYXAoby5kZWZhdWx0LnByb3RvdHlwZS5jaGFyKTpcInN0cmluZ1wiPT10eXBlb2YgZT9vLmRlZmF1bHQucHJvdG90eXBlLmNoYXIocGFyc2VJbnQoZSwxMCkpOnZvaWQgMDpTdHJpbmcuZnJvbUNoYXJDb2RlKGUpfSxvLmRlZmF1bHQucHJvdG90eXBlLnVuY2hhcj1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmMT09PWUubGVuZ3RoP2UuY2hhckNvZGVBdCgwKTplIGluc3RhbmNlb2YgQXJyYXk/ZS5tYXAoby5kZWZhdWx0LnByb3RvdHlwZS51bmNoYXIpOnZvaWQgMH0sby5kZWZhdWx0LnByb3RvdHlwZS5oZXg9ZnVuY3Rpb24oZSx0KXtpZih0PW51bGw9PXQ/dD04OnQsZSBpbnN0YW5jZW9mIEFycmF5KXJldHVybiBlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gby5kZWZhdWx0LnByb3RvdHlwZS5oZXgoZSx0KX0pO2lmKGU9PT0xLzB8fGU9PT0tMS8wKXJldHVybihlPT09MS8wP1wiRlwiOlwiMFwiKS5yZXBlYXQodCk7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpe2U8MCYmKGU9NDI5NDk2NzI5NStlKzEpO2Zvcih2YXIgcj1OdW1iZXIoZSkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7ci5sZW5ndGg8dDspcj1cIjBcIi5jb25jYXQocik7cmV0dXJuIHIubGVuZ3RoPj10JiYocj1yLnN1YnN0cmluZyhyLmxlbmd0aC10LHIubGVuZ3RoKSkscn19LG8uZGVmYXVsdC5wcm90b3R5cGUudW5oZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChvLmRlZmF1bHQucHJvdG90eXBlLnVuaGV4KTpwYXJzZUludChcIjB4XCIuY29uY2F0KGUpLDE2KX07dmFyIGk9by5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvclwiOjE3MCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGVhdFwiOjE4OH1dLDMwNTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbVwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2Z1bmN0aW9uIG8oZSx0LHIpe3ZhciBuPWU8MCxvPW4/ZS50b1N0cmluZygpLnN1YnN0cmluZygxKTplLnRvU3RyaW5nKCksaT1vLmluZGV4T2YoXCIuXCIpLGE9LTEhPT1pP28uc3Vic3RyaW5nKDAsaSk6byxzPS0xIT09aT9vLnN1YnN0cmluZyhpKzEpOlwiXCIsbD1uP1wiLVwiOlwiXCI7aWYodm9pZCAwIT09cil7dmFyIHU9XCJcIjsoLTEhPT1pfHwwPHItcy5sZW5ndGgpJiYodT1cIi5cIikscy5sZW5ndGg+ciYmKHM9cy5zdWJzdHJpbmcoMCxyKSk7Zm9yKHZhciBjPTA7Yzx0LWEubGVuZ3RoO2MrKylsKz1cIjBcIjtsKz1hLGwrPXUsbCs9cztmb3IodmFyIGQ9MDtkPHItcy5sZW5ndGg7ZCsrKWwrPVwiMFwiO3JldHVybiBsfWZvcih2YXIgZj0wO2Y8TWF0aC5tYXgodC1hLmxlbmd0aCwwKTtmKyspbCs9XCIwXCI7cmV0dXJuIGwrPW99ZnVuY3Rpb24gaShlLHQpe3ZhciByPShlPWUudG9TdHJpbmcoKSkuaW5kZXhPZihcIi5cIiksbj0tMSE9PXI/ZS5zdWJzdHJpbmcocik6XCJcIixvPS0xIT09cj9lLnN1YnN0cmluZygwLHIpOmU7aWYobz1vLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZyxcIixcIiksMD09PXQpbj1cIlwiO2Vsc2UgaWYodm9pZCAwIT09dClpZih0Pm4ubGVuZ3RoKWZvcih2YXIgaT10LShuKz0tMT09PXI/XCIuXCI6XCJcIikubGVuZ3RoKzEsYT0wO2E8aTthKyspbis9XCIwXCI7ZWxzZSBuPW4uc3Vic3RyaW5nKDAsdCsxKTtyZXR1cm4gbytufWZ1bmN0aW9uIHMoZSl7cmV0dXJuIDA8cGFyc2VGbG9hdChlKT9cIitcIi5jb25jYXQoZS50b1N0cmluZygpKTplLnRvU3RyaW5nKCl9ZnVuY3Rpb24gbChlKXtyZXR1cm4gMDw9cGFyc2VGbG9hdChlKT9cIiBcIi5jb25jYXQoZS50b1N0cmluZygpKTplLnRvU3RyaW5nKCl9ZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmlsZV9lcnJvcnNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCIpLGEuZGVmYXVsdC5wcm90b3R5cGUuam9pbj1mdW5jdGlvbihlLHQpe3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImpvaW5cIixhcmd1bWVudHMpLGUuam9pbih0KX0sYS5kZWZhdWx0LnByb3RvdHlwZS5tYXRjaD1mdW5jdGlvbihlLHQpe3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm1hdGNoXCIsYXJndW1lbnRzKSxlLm1hdGNoKHQpfSxhLmRlZmF1bHQucHJvdG90eXBlLm1hdGNoQWxsPWZ1bmN0aW9uKGUsdCl7YS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJtYXRjaEFsbFwiLGFyZ3VtZW50cyk7Zm9yKHZhciByPW5ldyBSZWdFeHAodCxcImdcIiksbj1yLmV4ZWMoZSksbz1bXTtudWxsIT09bjspby5wdXNoKG4pLG49ci5leGVjKGUpO3JldHVybiBvfSxhLmRlZmF1bHQucHJvdG90eXBlLm5mPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJuZlwiLGFyZ3VtZW50cyksZSBpbnN0YW5jZW9mIEFycmF5P2UubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBvKGUsdCxyKX0pOlwiW29iamVjdCBBcmd1bWVudHNdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk/Mz09PWUubGVuZ3RoP3RoaXMubmYoZVswXSxlWzFdLGVbMl0pOjI9PT1lLmxlbmd0aD90aGlzLm5mKGVbMF0sZVsxXSk6dGhpcy5uZihlWzBdKTpvKGUsdCxyKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5uZmM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJuZmNcIixhcmd1bWVudHMpLGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gaShlLHQpfSk6aShlLHQpfSxhLmRlZmF1bHQucHJvdG90eXBlLm5mcD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2EuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibmZwXCIsdCk7dmFyIG49YS5kZWZhdWx0LnByb3RvdHlwZS5uZi5hcHBseSh0aGlzLHQpO3JldHVybiBuIGluc3RhbmNlb2YgQXJyYXk/bi5tYXAocyk6cyhuKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5uZnM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTthLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm5mc1wiLHQpO3ZhciBuPWEuZGVmYXVsdC5wcm90b3R5cGUubmYuYXBwbHkodGhpcyx0KTtyZXR1cm4gbiBpbnN0YW5jZW9mIEFycmF5P24ubWFwKGwpOmwobil9LGEuZGVmYXVsdC5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzcGxpdFwiLGFyZ3VtZW50cyksZS5zcGxpdCh0KX0sYS5kZWZhdWx0LnByb3RvdHlwZS5zcGxpdFRva2Vucz1mdW5jdGlvbihlLHQpe3ZhciByO2lmKGEuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3BsaXRUb2tlbnNcIixhcmd1bWVudHMpLHZvaWQgMCE9PXQpe3ZhciBuPXQsbz0vXFxdL2cuZXhlYyhuKSxpPS9cXFsvZy5leGVjKG4pO3I9aSYmbz8obj1uLnNsaWNlKDAsby5pbmRleCkrbi5zbGljZShvLmluZGV4KzEpLGk9L1xcWy9nLmV4ZWMobiksbj1uLnNsaWNlKDAsaS5pbmRleCkrbi5zbGljZShpLmluZGV4KzEpLG5ldyBSZWdFeHAoXCJbXFxcXFtcIi5jb25jYXQobixcIlxcXFxdXVwiKSxcImdcIikpOm8/KG49bi5zbGljZSgwLG8uaW5kZXgpK24uc2xpY2Uoby5pbmRleCsxKSxuZXcgUmVnRXhwKFwiW1wiLmNvbmNhdChuLFwiXFxcXF1dXCIpLFwiZ1wiKSk6aT8obj1uLnNsaWNlKDAsaS5pbmRleCkrbi5zbGljZShpLmluZGV4KzEpLG5ldyBSZWdFeHAoXCJbXCIuY29uY2F0KG4sXCJcXFxcW11cIiksXCJnXCIpKTpuZXcgUmVnRXhwKFwiW1wiLmNvbmNhdChuLFwiXVwiKSxcImdcIil9ZWxzZSByPS9cXHMvZztyZXR1cm4gZS5zcGxpdChyKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGV9KX0sYS5kZWZhdWx0LnByb3RvdHlwZS50cmltPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRyaW1cIixhcmd1bWVudHMpLGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcCh0aGlzLnRyaW0pOmUudHJpbSgpfTt2YXIgdT1hLmRlZmF1bHQ7ci5kZWZhdWx0PXV9LHtcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCI6MjU1LFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmlsZV9lcnJvcnNcIjoyNTYsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIjoyNTksXCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCI6MTUyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCI6MTU3LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW5cIjoxNTksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwXCI6MTYxLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yXCI6MTgwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmdcIjoxODIsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoXCI6MTg3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlXCI6MTg5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbVwiOjE5M31dLDMwNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sbz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07by5kZWZhdWx0LnByb3RvdHlwZS5kYXk9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldERhdGUoKX0sby5kZWZhdWx0LnByb3RvdHlwZS5ob3VyPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRIb3VycygpfSxvLmRlZmF1bHQucHJvdG90eXBlLm1pbnV0ZT1mdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0TWludXRlcygpfSxvLmRlZmF1bHQucHJvdG90eXBlLm1pbGxpcz1mdW5jdGlvbigpe3JldHVybi0xPT09dGhpcy5fbWlsbGlzU3RhcnQ/MDp3aW5kb3cucGVyZm9ybWFuY2Uubm93KCktdGhpcy5fbWlsbGlzU3RhcnR9LG8uZGVmYXVsdC5wcm90b3R5cGUubW9udGg9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldE1vbnRoKCkrMX0sby5kZWZhdWx0LnByb3RvdHlwZS5zZWNvbmQ9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFNlY29uZHMoKX0sby5kZWZhdWx0LnByb3RvdHlwZS55ZWFyPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpfTt2YXIgaT1vLmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uL2NvcmUvbWFpblwiOjI2NH1dLDMwNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sRT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZShcIi4vcDUuR2VvbWV0cnlcIik7dmFyIGg9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1FLmRlZmF1bHQucHJvdG90eXBlLnBsYW5lPWZ1bmN0aW9uKGUsdCxyLG4pe3RoaXMuX2Fzc2VydDNkKFwicGxhbmVcIiksRS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJwbGFuZVwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSYmKGU9NTApLHZvaWQgMD09PXQmJih0PWUpLHZvaWQgMD09PXImJihyPTEpLHZvaWQgMD09PW4mJihuPTEpO3ZhciBvPVwicGxhbmV8XCIuY29uY2F0KHIsXCJ8XCIpLmNvbmNhdChuKTtpZighdGhpcy5fcmVuZGVyZXIuZ2VvbWV0cnlJbkhhc2gobykpe3ZhciBpPW5ldyBFLmRlZmF1bHQuR2VvbWV0cnkocixuLGZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQscixuPTA7bjw9dGhpcy5kZXRhaWxZO24rKyl7dD1uL3RoaXMuZGV0YWlsWTtmb3IodmFyIG89MDtvPD10aGlzLmRldGFpbFg7bysrKWU9by90aGlzLmRldGFpbFgscj1uZXcgRS5kZWZhdWx0LlZlY3RvcihlLS41LHQtLjUsMCksdGhpcy52ZXJ0aWNlcy5wdXNoKHIpLHRoaXMudXZzLnB1c2goZSx0KX19KTtpLmNvbXB1dGVGYWNlcygpLmNvbXB1dGVOb3JtYWxzKCkscjw9MSYmbjw9MT9pLl9tYWtlVHJpYW5nbGVFZGdlcygpLl9lZGdlc1RvVmVydGljZXMoKTp0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJmNvbnNvbGUubG9nKFwiQ2Fubm90IGRyYXcgc3Ryb2tlIG9uIHBsYW5lIG9iamVjdHMgd2l0aCBtb3JlIHRoYW4gMSBkZXRhaWxYIG9yIDEgZGV0YWlsWVwiKSx0aGlzLl9yZW5kZXJlci5jcmVhdGVCdWZmZXJzKG8saSl9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRyYXdCdWZmZXJzU2NhbGVkKG8sZSx0LDEpLHRoaXN9LEUuZGVmYXVsdC5wcm90b3R5cGUuYm94PWZ1bmN0aW9uKGUsdCxyLG4sbyl7dGhpcy5fYXNzZXJ0M2QoXCJib3hcIiksRS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJib3hcIixhcmd1bWVudHMpLHZvaWQgMD09PWUmJihlPTUwKSx2b2lkIDA9PT10JiYodD1lKSx2b2lkIDA9PT1yJiYocj10KTt2YXIgaT10aGlzLl9yZW5kZXJlci5hdHRyaWJ1dGVzJiZ0aGlzLl9yZW5kZXJlci5hdHRyaWJ1dGVzLnBlclBpeGVsTGlnaHRpbmc7dm9pZCAwPT09biYmKG49aT8xOjQpLHZvaWQgMD09PW8mJihvPWk/MTo0KTt2YXIgYT1cImJveHxcIi5jb25jYXQobixcInxcIikuY29uY2F0KG8pO2lmKCF0aGlzLl9yZW5kZXJlci5nZW9tZXRyeUluSGFzaChhKSl7dmFyIHM9bmV3IEUuZGVmYXVsdC5HZW9tZXRyeShuLG8sZnVuY3Rpb24oKXt2YXIgZT1bWzAsNCwyLDZdLFsxLDMsNSw3XSxbMCwxLDQsNV0sWzIsNiwzLDddLFswLDIsMSwzXSxbNCw1LDYsN11dO3RoaXMuc3Ryb2tlSW5kaWNlcz1bWzAsMV0sWzEsM10sWzMsMl0sWzYsN10sWzgsOV0sWzksMTFdLFsxNCwxNV0sWzE2LDE3XSxbMTcsMTldLFsxOCwxOV0sWzIwLDIxXSxbMjIsMjNdXTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7Zm9yKHZhciByPWVbdF0sbj00KnQsbz0wO288NDtvKyspe3ZhciBpPXJbb10sYT1uZXcgRS5kZWZhdWx0LlZlY3RvcigoMiooMSZpKS0xKS8yLCgoMiZpKS0xKS8yLCgoNCZpKS8yLTEpLzIpO3RoaXMudmVydGljZXMucHVzaChhKSx0aGlzLnV2cy5wdXNoKDEmbywoMiZvKS8yKX10aGlzLmZhY2VzLnB1c2goW24sMStuLDIrbl0pLHRoaXMuZmFjZXMucHVzaChbMituLDErbiwzK25dKX19KTtzLmNvbXB1dGVOb3JtYWxzKCksbjw9NCYmbzw9ND9zLl9tYWtlVHJpYW5nbGVFZGdlcygpLl9lZGdlc1RvVmVydGljZXMoKTp0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJmNvbnNvbGUubG9nKFwiQ2Fubm90IGRyYXcgc3Ryb2tlIG9uIGJveCBvYmplY3RzIHdpdGggbW9yZSB0aGFuIDQgZGV0YWlsWCBvciA0IGRldGFpbFlcIiksdGhpcy5fcmVuZGVyZXIuY3JlYXRlQnVmZmVycyhhLHMpfXJldHVybiB0aGlzLl9yZW5kZXJlci5kcmF3QnVmZmVyc1NjYWxlZChhLGUsdCxyKSx0aGlzfSxFLmRlZmF1bHQucHJvdG90eXBlLnNwaGVyZT1mdW5jdGlvbihlLHQscil7cmV0dXJuIHRoaXMuX2Fzc2VydDNkKFwic3BoZXJlXCIpLEUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3BoZXJlXCIsYXJndW1lbnRzKSx2b2lkIDA9PT1lJiYoZT01MCksdm9pZCAwPT09dCYmKHQ9MjQpLHZvaWQgMD09PXImJihyPTE2KSx0aGlzLmVsbGlwc29pZChlLGUsZSx0LHIpLHRoaXN9O2Z1bmN0aW9uIGwoZSx0LHIsbixvLGksYSl7ZT1lPD0wPzE6ZSx0PXQ8MD8wOnQscj1yPD0wP2U6cixuPW48Mz8zOm47dmFyIHMsbCx1LGM9KGk9dm9pZCAwPT09aXx8aSk/LTI6MCxkPShvPW88MT8xOm8pKygoYT12b2lkIDA9PT1hPzAhPT10OmEpPzI6MCksZj1NYXRoLmF0YW4yKGUtdCxyKSxoPU1hdGguc2luKGYpLHA9TWF0aC5jb3MoZik7Zm9yKHM9YztzPD1kOysrcyl7dmFyIHk9cy9vLG09cip5LGc9dm9pZCAwO2ZvcihnPXM8MD8oeT1tPTAsZSk6bzxzPyhtPXIseT0xLHQpOmUrKHQtZSkqeSwtMiE9PXMmJnMhPT1vKzJ8fChnPTApLG0tPXIvMixsPTA7bDxuOysrbCl7dmFyIHY9bC8obi0xKSxiPTIqTWF0aC5QSSp2LF89TWF0aC5zaW4oYikseD1NYXRoLmNvcyhiKTt0aGlzLnZlcnRpY2VzLnB1c2gobmV3IEUuZGVmYXVsdC5WZWN0b3IoXypnLG0seCpnKSk7dmFyIHc9dm9pZCAwO3c9czwwP25ldyBFLmRlZmF1bHQuVmVjdG9yKDAsLTEsMCk6bzxzJiZ0P25ldyBFLmRlZmF1bHQuVmVjdG9yKDAsMSwwKTpuZXcgRS5kZWZhdWx0LlZlY3RvcihfKnAsaCx4KnApLHRoaXMudmVydGV4Tm9ybWFscy5wdXNoKHcpLHRoaXMudXZzLnB1c2godix5KX19dmFyIGo9MDtpZihpKXtmb3IodT0wO3U8bjsrK3Upe3ZhciBTPSh1KzEpJW47dGhpcy5mYWNlcy5wdXNoKFtqK3UsaituK1MsaituK3VdKX1qKz0yKm59Zm9yKHM9MDtzPG87KytzKXtmb3IobD0wO2w8bjsrK2wpe3ZhciBNPShsKzEpJW47dGhpcy5mYWNlcy5wdXNoKFtqK2wsaitNLGorbitNXSksdGhpcy5mYWNlcy5wdXNoKFtqK2wsaituK00saituK2xdKX1qKz1ufWlmKGEpZm9yKGorPW4sbD0wO2w8bjsrK2wpdGhpcy5mYWNlcy5wdXNoKFtqK2wsaisobCsxKSVuLGorbl0pfUUuZGVmYXVsdC5wcm90b3R5cGUuY3lsaW5kZXI9ZnVuY3Rpb24oZSx0LHIsbixvLGkpe3RoaXMuX2Fzc2VydDNkKFwiY3lsaW5kZXJcIiksRS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjeWxpbmRlclwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSYmKGU9NTApLHZvaWQgMD09PXQmJih0PWUpLHZvaWQgMD09PXImJihyPTI0KSx2b2lkIDA9PT1uJiYobj0xKSx2b2lkIDA9PT1pJiYoaT0hMCksdm9pZCAwPT09byYmKG89ITApO3ZhciBhPVwiY3lsaW5kZXJ8XCIuY29uY2F0KHIsXCJ8XCIpLmNvbmNhdChuLFwifFwiKS5jb25jYXQobyxcInxcIikuY29uY2F0KGkpO2lmKCF0aGlzLl9yZW5kZXJlci5nZW9tZXRyeUluSGFzaChhKSl7dmFyIHM9bmV3IEUuZGVmYXVsdC5HZW9tZXRyeShyLG4pO2wuY2FsbChzLDEsMSwxLHIsbixvLGkpLHI8PTI0JiZuPD0xNj9zLl9tYWtlVHJpYW5nbGVFZGdlcygpLl9lZGdlc1RvVmVydGljZXMoKTp0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJmNvbnNvbGUubG9nKFwiQ2Fubm90IGRyYXcgc3Ryb2tlIG9uIGN5bGluZGVyIG9iamVjdHMgd2l0aCBtb3JlIHRoYW4gMjQgZGV0YWlsWCBvciAxNiBkZXRhaWxZXCIpLHRoaXMuX3JlbmRlcmVyLmNyZWF0ZUJ1ZmZlcnMoYSxzKX1yZXR1cm4gdGhpcy5fcmVuZGVyZXIuZHJhd0J1ZmZlcnNTY2FsZWQoYSxlLHQsZSksdGhpc30sRS5kZWZhdWx0LnByb3RvdHlwZS5jb25lPWZ1bmN0aW9uKGUsdCxyLG4sbyl7dGhpcy5fYXNzZXJ0M2QoXCJjb25lXCIpLEUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY29uZVwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSYmKGU9NTApLHZvaWQgMD09PXQmJih0PWUpLHZvaWQgMD09PXImJihyPTI0KSx2b2lkIDA9PT1uJiYobj0xKSx2b2lkIDA9PT1vJiYobz0hMCk7dmFyIGk9XCJjb25lfFwiLmNvbmNhdChyLFwifFwiKS5jb25jYXQobixcInxcIikuY29uY2F0KG8pO2lmKCF0aGlzLl9yZW5kZXJlci5nZW9tZXRyeUluSGFzaChpKSl7dmFyIGE9bmV3IEUuZGVmYXVsdC5HZW9tZXRyeShyLG4pO2wuY2FsbChhLDEsMCwxLHIsbixvLCExKSxyPD0yNCYmbjw9MTY/YS5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBkcmF3IHN0cm9rZSBvbiBjb25lIG9iamVjdHMgd2l0aCBtb3JlIHRoYW4gMjQgZGV0YWlsWCBvciAxNiBkZXRhaWxZXCIpLHRoaXMuX3JlbmRlcmVyLmNyZWF0ZUJ1ZmZlcnMoaSxhKX1yZXR1cm4gdGhpcy5fcmVuZGVyZXIuZHJhd0J1ZmZlcnNTY2FsZWQoaSxlLHQsZSksdGhpc30sRS5kZWZhdWx0LnByb3RvdHlwZS5lbGxpcHNvaWQ9ZnVuY3Rpb24oZSx0LHIsbixvKXt0aGlzLl9hc3NlcnQzZChcImVsbGlwc29pZFwiKSxFLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImVsbGlwc29pZFwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSYmKGU9NTApLHZvaWQgMD09PXQmJih0PWUpLHZvaWQgMD09PXImJihyPWUpLHZvaWQgMD09PW4mJihuPTI0KSx2b2lkIDA9PT1vJiYobz0xNik7dmFyIGk9XCJlbGxpcHNvaWR8XCIuY29uY2F0KG4sXCJ8XCIpLmNvbmNhdChvKTtpZighdGhpcy5fcmVuZGVyZXIuZ2VvbWV0cnlJbkhhc2goaSkpe3ZhciBhPW5ldyBFLmRlZmF1bHQuR2VvbWV0cnkobixvLGZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTw9dGhpcy5kZXRhaWxZO2UrKylmb3IodmFyIHQ9ZS90aGlzLmRldGFpbFkscj1NYXRoLlBJKnQtTWF0aC5QSS8yLG49TWF0aC5jb3Mociksbz1NYXRoLnNpbihyKSxpPTA7aTw9dGhpcy5kZXRhaWxYO2krKyl7dmFyIGE9aS90aGlzLmRldGFpbFgscz0yKk1hdGguUEkqYSxsPU1hdGguY29zKHMpLHU9TWF0aC5zaW4ocyksYz1uZXcgRS5kZWZhdWx0LlZlY3RvcihuKnUsbyxuKmwpO3RoaXMudmVydGljZXMucHVzaChjKSx0aGlzLnZlcnRleE5vcm1hbHMucHVzaChjKSx0aGlzLnV2cy5wdXNoKGEsdCl9fSk7YS5jb21wdXRlRmFjZXMoKSxuPD0yNCYmbzw9MjQ/YS5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBkcmF3IHN0cm9rZSBvbiBlbGxpcHNvaWRzIHdpdGggbW9yZSB0aGFuIDI0IGRldGFpbFggb3IgMjQgZGV0YWlsWVwiKSx0aGlzLl9yZW5kZXJlci5jcmVhdGVCdWZmZXJzKGksYSl9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRyYXdCdWZmZXJzU2NhbGVkKGksZSx0LHIpLHRoaXN9LEUuZGVmYXVsdC5wcm90b3R5cGUudG9ydXM9ZnVuY3Rpb24oZSx0LHIsbil7aWYodGhpcy5fYXNzZXJ0M2QoXCJ0b3J1c1wiKSxFLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRvcnVzXCIsYXJndW1lbnRzKSx2b2lkIDA9PT1lKWU9NTA7ZWxzZSBpZighZSlyZXR1cm47aWYodm9pZCAwPT09dCl0PTEwO2Vsc2UgaWYoIXQpcmV0dXJuO3ZvaWQgMD09PXImJihyPTI0KSx2b2lkIDA9PT1uJiYobj0xNik7dmFyIGg9KHQvZSkudG9QcmVjaXNpb24oNCksbz1cInRvcnVzfFwiLmNvbmNhdChoLFwifFwiKS5jb25jYXQocixcInxcIikuY29uY2F0KG4pO2lmKCF0aGlzLl9yZW5kZXJlci5nZW9tZXRyeUluSGFzaChvKSl7dmFyIGk9bmV3IEUuZGVmYXVsdC5HZW9tZXRyeShyLG4sZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPD10aGlzLmRldGFpbFk7ZSsrKWZvcih2YXIgdD1lL3RoaXMuZGV0YWlsWSxyPTIqTWF0aC5QSSp0LG49TWF0aC5jb3Mociksbz1NYXRoLnNpbihyKSxpPTEraCpuLGE9MDthPD10aGlzLmRldGFpbFg7YSsrKXt2YXIgcz1hL3RoaXMuZGV0YWlsWCxsPTIqTWF0aC5QSSpzLHU9TWF0aC5jb3MobCksYz1NYXRoLnNpbihsKSxkPW5ldyBFLmRlZmF1bHQuVmVjdG9yKGkqdSxpKmMsaCpvKSxmPW5ldyBFLmRlZmF1bHQuVmVjdG9yKG4qdSxuKmMsbyk7dGhpcy52ZXJ0aWNlcy5wdXNoKGQpLHRoaXMudmVydGV4Tm9ybWFscy5wdXNoKGYpLHRoaXMudXZzLnB1c2gocyx0KX19KTtpLmNvbXB1dGVGYWNlcygpLHI8PTI0JiZuPD0xNj9pLl9tYWtlVHJpYW5nbGVFZGdlcygpLl9lZGdlc1RvVmVydGljZXMoKTp0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJmNvbnNvbGUubG9nKFwiQ2Fubm90IGRyYXcgc3Ryb2tlcyBvbiB0b3J1cyBvYmplY3Qgd2l0aCBtb3JlIHRoYW4gMjQgZGV0YWlsWCBvciAxNiBkZXRhaWxZXCIpLHRoaXMuX3JlbmRlcmVyLmNyZWF0ZUJ1ZmZlcnMobyxpKX1yZXR1cm4gdGhpcy5fcmVuZGVyZXIuZHJhd0J1ZmZlcnNTY2FsZWQobyxlLGUsZSksdGhpc30sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKGUsdCxyKXt2b2lkIDA9PT1yJiYocj0wKTt2YXIgbj1bXTtyZXR1cm4gbi5wdXNoKG5ldyBFLmRlZmF1bHQuVmVjdG9yKGUsdCxyKSksdGhpcy5fZHJhd1BvaW50cyhuLHRoaXMuaW1tZWRpYXRlTW9kZS5idWZmZXJzLnBvaW50KSx0aGlzfSxFLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUudHJpYW5nbGU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXSxyPWVbMV0sbj1lWzJdLG89ZVszXSxpPWVbNF0sYT1lWzVdO2lmKCF0aGlzLmdlb21ldHJ5SW5IYXNoKFwidHJpXCIpKXt2YXIgcz1uZXcgRS5kZWZhdWx0Lkdlb21ldHJ5KDEsMSxmdW5jdGlvbigpe3ZhciBlPVtdO2UucHVzaChuZXcgRS5kZWZhdWx0LlZlY3RvcigwLDAsMCkpLGUucHVzaChuZXcgRS5kZWZhdWx0LlZlY3RvcigwLDEsMCkpLGUucHVzaChuZXcgRS5kZWZhdWx0LlZlY3RvcigxLDAsMCkpLHRoaXMuc3Ryb2tlSW5kaWNlcz1bWzAsMV0sWzEsMl0sWzIsMF1dLHRoaXMudmVydGljZXM9ZSx0aGlzLmZhY2VzPVtbMCwxLDJdXSx0aGlzLnV2cz1bMCwwLDAsMSwxLDFdfSk7cy5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCkscy5jb21wdXRlTm9ybWFscygpLHRoaXMuY3JlYXRlQnVmZmVycyhcInRyaVwiLHMpfXZhciBsPXRoaXMudU1WTWF0cml4LmNvcHkoKTt0cnl7dmFyIHU9bmV3IEUuZGVmYXVsdC5NYXRyaXgoW24tdCxvLXIsMCwwLGktdCxhLXIsMCwwLDAsMCwxLDAsdCxyLDAsMV0pLm11bHQodGhpcy51TVZNYXRyaXgpO3RoaXMudU1WTWF0cml4PXUsdGhpcy5kcmF3QnVmZmVycyhcInRyaVwiKX1maW5hbGx5e3RoaXMudU1WTWF0cml4PWx9cmV0dXJuIHRoaXN9LEUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5lbGxpcHNlPWZ1bmN0aW9uKGUpe3RoaXMuYXJjKGVbMF0sZVsxXSxlWzJdLGVbM10sMCxoLlRXT19QSSxoLk9QRU4sZVs0XSl9LEUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5hcmM9ZnVuY3Rpb24oZSl7dmFyIHQscixuPWUsbz1hcmd1bWVudHNbMV0saT1hcmd1bWVudHNbMl0sYT1hcmd1bWVudHNbM10scz1hcmd1bWVudHNbNF0sbD1hcmd1bWVudHNbNV0sdT1hcmd1bWVudHNbNl0sYz1hcmd1bWVudHNbN118fDI1O2lmKHI9TWF0aC5hYnMobC1zKT49aC5UV09fUEk/XCJcIi5jb25jYXQodD1cImVsbGlwc2VcIixcInxcIikuY29uY2F0KGMsXCJ8XCIpOlwiXCIuY29uY2F0KHQ9XCJhcmNcIixcInxcIikuY29uY2F0KHMsXCJ8XCIpLmNvbmNhdChsLFwifFwiKS5jb25jYXQodSxcInxcIikuY29uY2F0KGMsXCJ8XCIpLCF0aGlzLmdlb21ldHJ5SW5IYXNoKHIpKXt2YXIgZD1uZXcgRS5kZWZhdWx0Lkdlb21ldHJ5KGMsMSxmdW5jdGlvbigpe2lmKHRoaXMuc3Ryb2tlSW5kaWNlcz1bXSxzLnRvRml4ZWQoMTApIT09bC50b0ZpeGVkKDEwKSl7dSE9PWguUElFJiZ2b2lkIDAhPT11fHwodGhpcy52ZXJ0aWNlcy5wdXNoKG5ldyBFLmRlZmF1bHQuVmVjdG9yKC41LC41LDApKSx0aGlzLnV2cy5wdXNoKFsuNSwuNV0pKTtmb3IodmFyIGU9MDtlPD1jO2UrKyl7dmFyIHQ9KGwtcykqKGUvYykrcyxyPS41K01hdGguY29zKHQpLzIsbj0uNStNYXRoLnNpbih0KS8yO3RoaXMudmVydGljZXMucHVzaChuZXcgRS5kZWZhdWx0LlZlY3RvcihyLG4sMCkpLHRoaXMudXZzLnB1c2goW3Isbl0pLGU8Yy0xJiYodGhpcy5mYWNlcy5wdXNoKFswLGUrMSxlKzJdKSx0aGlzLnN0cm9rZUluZGljZXMucHVzaChbZSsxLGUrMl0pKX1zd2l0Y2godSl7Y2FzZSBoLlBJRTp0aGlzLmZhY2VzLnB1c2goWzAsdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMix0aGlzLnZlcnRpY2VzLmxlbmd0aC0xXSksdGhpcy5zdHJva2VJbmRpY2VzLnB1c2goWzAsMV0pLHRoaXMuc3Ryb2tlSW5kaWNlcy5wdXNoKFt0aGlzLnZlcnRpY2VzLmxlbmd0aC0yLHRoaXMudmVydGljZXMubGVuZ3RoLTFdKSx0aGlzLnN0cm9rZUluZGljZXMucHVzaChbMCx0aGlzLnZlcnRpY2VzLmxlbmd0aC0xXSk7YnJlYWs7Y2FzZSBoLkNIT1JEOnRoaXMuc3Ryb2tlSW5kaWNlcy5wdXNoKFswLDFdKSx0aGlzLnN0cm9rZUluZGljZXMucHVzaChbMCx0aGlzLnZlcnRpY2VzLmxlbmd0aC0xXSk7YnJlYWs7Y2FzZSBoLk9QRU46dGhpcy5zdHJva2VJbmRpY2VzLnB1c2goWzAsMV0pO2JyZWFrO2RlZmF1bHQ6dGhpcy5mYWNlcy5wdXNoKFswLHRoaXMudmVydGljZXMubGVuZ3RoLTIsdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMV0pLHRoaXMuc3Ryb2tlSW5kaWNlcy5wdXNoKFt0aGlzLnZlcnRpY2VzLmxlbmd0aC0yLHRoaXMudmVydGljZXMubGVuZ3RoLTFdKX19fSk7ZC5jb21wdXRlTm9ybWFscygpLGM8PTUwP2QuX21ha2VUcmlhbmdsZUVkZ2VzKCkuX2VkZ2VzVG9WZXJ0aWNlcyhkKTp0aGlzLl9kb1N0cm9rZSYmY29uc29sZS5sb2coXCJDYW5ub3QgYXBwbHkgYSBzdHJva2UgdG8gYW4gXCIuY29uY2F0KHQsXCIgd2l0aCBtb3JlIHRoYW4gNTAgZGV0YWlsXCIpKSx0aGlzLmNyZWF0ZUJ1ZmZlcnMocixkKX12YXIgZj10aGlzLnVNVk1hdHJpeC5jb3B5KCk7dHJ5e3RoaXMudU1WTWF0cml4LnRyYW5zbGF0ZShbbixvLDBdKSx0aGlzLnVNVk1hdHJpeC5zY2FsZShpLGEsMSksdGhpcy5kcmF3QnVmZmVycyhyKX1maW5hbGx5e3RoaXMudU1WTWF0cml4PWZ9cmV0dXJuIHRoaXN9LEUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5yZWN0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3BJbnN0Ll9nbEF0dHJpYnV0ZXMucGVyUGl4ZWxMaWdodGluZyxyPWVbMF0sbj1lWzFdLG89ZVsyXSxpPWVbM10sYT1lWzRdfHwodD8xOjI0KSxzPWVbNV18fCh0PzE6MTYpLGw9XCJyZWN0fFwiLmNvbmNhdChhLFwifFwiKS5jb25jYXQocyk7aWYoIXRoaXMuZ2VvbWV0cnlJbkhhc2gobCkpe3ZhciB1PW5ldyBFLmRlZmF1bHQuR2VvbWV0cnkoYSxzLGZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTw9dGhpcy5kZXRhaWxZO2UrKylmb3IodmFyIHQ9ZS90aGlzLmRldGFpbFkscj0wO3I8PXRoaXMuZGV0YWlsWDtyKyspe3ZhciBuPXIvdGhpcy5kZXRhaWxYLG89bmV3IEUuZGVmYXVsdC5WZWN0b3Iobix0LDApO3RoaXMudmVydGljZXMucHVzaChvKSx0aGlzLnV2cy5wdXNoKG4sdCl9MDxhJiYwPHMmJih0aGlzLnN0cm9rZUluZGljZXM9W1swLGFdLFthLChhKzEpKihzKzEpLTFdLFsoYSsxKSoocysxKS0xLChhKzEpKnNdLFsoYSsxKSpzLDBdXSl9KTt1LmNvbXB1dGVGYWNlcygpLmNvbXB1dGVOb3JtYWxzKCkuX21ha2VUcmlhbmdsZUVkZ2VzKCkuX2VkZ2VzVG9WZXJ0aWNlcygpLHRoaXMuY3JlYXRlQnVmZmVycyhsLHUpfXZhciBjPXRoaXMudU1WTWF0cml4LmNvcHkoKTt0cnl7dGhpcy51TVZNYXRyaXgudHJhbnNsYXRlKFtyLG4sMF0pLHRoaXMudU1WTWF0cml4LnNjYWxlKG8saSwxKSx0aGlzLmRyYXdCdWZmZXJzKGwpfWZpbmFsbHl7dGhpcy51TVZNYXRyaXg9Y31yZXR1cm4gdGhpc30sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnF1YWQ9ZnVuY3Rpb24odSxjLGQsZixoLHAseSxtLGcsdixiLF8sZSx0KXt2b2lkIDA9PT1lJiYoZT0yKSx2b2lkIDA9PT10JiYodD0yKTt2YXIgcj1cInF1YWR8XCIuY29uY2F0KHUsXCJ8XCIpLmNvbmNhdChjLFwifFwiKS5jb25jYXQoZCxcInxcIikuY29uY2F0KGYsXCJ8XCIpLmNvbmNhdChoLFwifFwiKS5jb25jYXQocCxcInxcIikuY29uY2F0KHksXCJ8XCIpLmNvbmNhdChtLFwifFwiKS5jb25jYXQoZyxcInxcIikuY29uY2F0KHYsXCJ8XCIpLmNvbmNhdChiLFwifFwiKS5jb25jYXQoXyxcInxcIikuY29uY2F0KGUsXCJ8XCIpLmNvbmNhdCh0KTtpZighdGhpcy5nZW9tZXRyeUluSGFzaChyKSl7dmFyIG49bmV3IEUuZGVmYXVsdC5HZW9tZXRyeShlLHQsZnVuY3Rpb24oKXtmb3IodmFyIGU9MS8odGhpcy5kZXRhaWxYLTEpLHQ9MS8odGhpcy5kZXRhaWxZLTEpLHI9MDtyPHRoaXMuZGV0YWlsWTtyKyspZm9yKHZhciBuPTA7bjx0aGlzLmRldGFpbFg7bisrKXt2YXIgbz1uKmUsaT1yKnQsYT0oMS1vKSooKDEtaSkqdStpKnYpK28qKCgxLWkpKmYraSp5KSxzPSgxLW8pKigoMS1pKSpjK2kqYikrbyooKDEtaSkqaCtpKm0pLGw9KDEtbykqKCgxLWkpKmQraSpfKStvKigoMS1pKSpwK2kqZyk7dGhpcy52ZXJ0aWNlcy5wdXNoKG5ldyBFLmRlZmF1bHQuVmVjdG9yKGEscyxsKSksdGhpcy51dnMucHVzaChbbyxpXSl9fSk7bi5mYWNlcz1bXTtmb3IodmFyIG89MDtvPHQtMTtvKyspZm9yKHZhciBpPTA7aTxlLTE7aSsrKXt2YXIgYT1pK28qZSxzPWkrMStvKmUsbD1pKzErKG8rMSkqZSx4PWkrKG8rMSkqZTtuLmZhY2VzLnB1c2goW2EscyxsXSksbi5mYWNlcy5wdXNoKFthLGwseF0pfW4uY29tcHV0ZU5vcm1hbHMoKS5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCksdGhpcy5jcmVhdGVCdWZmZXJzKHIsbil9cmV0dXJuIHRoaXMuZHJhd0J1ZmZlcnMociksdGhpc30sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmJlemllcj1mdW5jdGlvbihlLHQscixuLG8saSxhLHMsbCx1LGMsZCl7OD09PWFyZ3VtZW50cy5sZW5ndGgmJihjPXMsdT1hLHM9aSxhPW8sbz1uLG49cixyPWk9bD1kPTApO3ZhciBmPXRoaXMuX3BJbnN0Ll9iZXppZXJEZXRhaWx8fDIwO3RoaXMuYmVnaW5TaGFwZSgpO2Zvcih2YXIgaD0wO2g8PWY7aCsrKXt2YXIgcD1NYXRoLnBvdygxLWgvZiwzKSx5PWgvZiozKk1hdGgucG93KDEtaC9mLDIpLG09MypNYXRoLnBvdyhoL2YsMikqKDEtaC9mKSxnPU1hdGgucG93KGgvZiwzKTt0aGlzLnZlcnRleChlKnArbip5K2EqbSt1KmcsdCpwK28qeStzKm0rYypnLHIqcCtpKnkrbCptK2QqZyl9cmV0dXJuIHRoaXMuZW5kU2hhcGUoKSx0aGlzfSxFLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuY3VydmU9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSxzLGwsdSxjLGQpezg9PT1hcmd1bWVudHMubGVuZ3RoJiYodT1hLGM9cyxhPW8scz1uLG89bj1yLHI9aT1sPWQ9MCk7dmFyIGY9dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsO3RoaXMuYmVnaW5TaGFwZSgpO2Zvcih2YXIgaD0wO2g8PWY7aCsrKXt2YXIgcD0uNSpNYXRoLnBvdyhoL2YsMykseT0uNSpNYXRoLnBvdyhoL2YsMiksbT1oL2YqLjUsZz1wKigzKm4tZS0zKmErdSkreSooMiplLTUqbis0KmEtdSkrbSooLWUrYSkrMipuKi41LHY9cCooMypvLXQtMypzK2MpK3kqKDIqdC01Km8rNCpzLWMpK20qKC10K3MpKzIqbyouNSxiPXAqKDMqaS1yLTMqbCtkKSt5KigyKnItNSppKzQqbC1kKSttKigtcitsKSsyKmkqLjU7dGhpcy52ZXJ0ZXgoZyx2LGIpfXJldHVybiB0aGlzLmVuZFNoYXBlKCksdGhpc30sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmxpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gNj09PWFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuYmVnaW5TaGFwZShoLkxJTkVTKSx0aGlzLnZlcnRleChhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdLGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSksdGhpcy52ZXJ0ZXgoYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdLGFyZ3VtZW50cy5sZW5ndGg8PTQ/dm9pZCAwOmFyZ3VtZW50c1s0XSxhcmd1bWVudHMubGVuZ3RoPD01P3ZvaWQgMDphcmd1bWVudHNbNV0pLHRoaXMuZW5kU2hhcGUoKSk6ND09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLmJlZ2luU2hhcGUoaC5MSU5FUyksdGhpcy52ZXJ0ZXgoYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSwwKSx0aGlzLnZlcnRleChhcmd1bWVudHMubGVuZ3RoPD0yP3ZvaWQgMDphcmd1bWVudHNbMl0sYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdLDApLHRoaXMuZW5kU2hhcGUoKSksdGhpc30sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmJlemllclZlcnRleD1mdW5jdGlvbigpe2lmKDA9PT10aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleC5sZW5ndGgpdGhyb3cgRXJyb3IoXCJ2ZXJ0ZXgoKSBtdXN0IGJlIHVzZWQgb25jZSBiZWZvcmUgY2FsbGluZyBiZXppZXJWZXJ0ZXgoKVwiKTt2YXIgZSx0LHIsbixvLGk9W10sYT1bXSxzPVtdLGw9YXJndW1lbnRzLmxlbmd0aDtpZigoZT0wKT09PXRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyLmxlbmd0aHx8dGhpcy5fbHV0QmV6aWVyRGV0YWlsIT09dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsKXt0aGlzLl9sb29rVXBUYWJsZUJlemllcj1bXSx0aGlzLl9sdXRCZXppZXJEZXRhaWw9dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsO2Zvcih2YXIgdT0xL3RoaXMuX2x1dEJlemllckRldGFpbCxjPTAsZD0xLGY9MDtjPDE7KXtpZihlPXBhcnNlRmxvYXQoYy50b0ZpeGVkKDYpKSx0aGlzLl9sb29rVXBUYWJsZUJlemllcltmXT10aGlzLl9iZXppZXJDb2VmZmljaWVudHMoZSksZC50b0ZpeGVkKDYpPT09dS50b0ZpeGVkKDYpKXtlPXBhcnNlRmxvYXQoZC50b0ZpeGVkKDYpKStwYXJzZUZsb2F0KGMudG9GaXhlZCg2KSksKytmLHRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2ZdPXRoaXMuX2JlemllckNvZWZmaWNpZW50cyhlKTticmVha31jKz11LGQtPXUsKytmfX12YXIgaD10aGlzLl9sb29rVXBUYWJsZUJlemllci5sZW5ndGg7aWYoNj09PWwpe2Zvcih0aGlzLmlzQmV6aWVyPSEwLGk9W3RoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzBdLGFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSxhcmd1bWVudHMubGVuZ3RoPD0yP3ZvaWQgMDphcmd1bWVudHNbMl0sYXJndW1lbnRzLmxlbmd0aDw9ND92b2lkIDA6YXJndW1lbnRzWzRdXSxhPVt0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFsxXSxhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0sYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdLGFyZ3VtZW50cy5sZW5ndGg8PTU/dm9pZCAwOmFyZ3VtZW50c1s1XV0sbz0wO288aDtvKyspdD1pWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzBdK2lbMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMV0raVsyXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVsyXStpWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzNdLHI9YVswXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVswXSthWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzFdK2FbMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMl0rYVszXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVszXSx0aGlzLnZlcnRleCh0LHIpO3RoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzBdPWFyZ3VtZW50cy5sZW5ndGg8PTQ/dm9pZCAwOmFyZ3VtZW50c1s0XSx0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFsxXT1hcmd1bWVudHMubGVuZ3RoPD01P3ZvaWQgMDphcmd1bWVudHNbNV19ZWxzZSBpZig5PT09bCl7Zm9yKHRoaXMuaXNCZXppZXI9ITAsaT1bdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMF0sYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLGFyZ3VtZW50cy5sZW5ndGg8PTM/dm9pZCAwOmFyZ3VtZW50c1szXSxhcmd1bWVudHMubGVuZ3RoPD02P3ZvaWQgMDphcmd1bWVudHNbNl1dLGE9W3RoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzFdLGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSxhcmd1bWVudHMubGVuZ3RoPD00P3ZvaWQgMDphcmd1bWVudHNbNF0sYXJndW1lbnRzLmxlbmd0aDw9Nz92b2lkIDA6YXJndW1lbnRzWzddXSxzPVt0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFsyXSxhcmd1bWVudHMubGVuZ3RoPD0yP3ZvaWQgMDphcmd1bWVudHNbMl0sYXJndW1lbnRzLmxlbmd0aDw9NT92b2lkIDA6YXJndW1lbnRzWzVdLGFyZ3VtZW50cy5sZW5ndGg8PTg/dm9pZCAwOmFyZ3VtZW50c1s4XV0sbz0wO288aDtvKyspdD1pWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzBdK2lbMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMV0raVsyXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVsyXStpWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzNdLHI9YVswXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVswXSthWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzFdK2FbMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMl0rYVszXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVszXSxuPXNbMF0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMF0rc1sxXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVsxXStzWzJdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzJdK3NbM10qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bM10sdGhpcy52ZXJ0ZXgodCxyLG4pO3RoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzBdPWFyZ3VtZW50cy5sZW5ndGg8PTY/dm9pZCAwOmFyZ3VtZW50c1s2XSx0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFsxXT1hcmd1bWVudHMubGVuZ3RoPD03P3ZvaWQgMDphcmd1bWVudHNbN10sdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMl09YXJndW1lbnRzLmxlbmd0aDw9OD92b2lkIDA6YXJndW1lbnRzWzhdfX0sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnF1YWRyYXRpY1ZlcnRleD1mdW5jdGlvbigpe2lmKDA9PT10aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleC5sZW5ndGgpdGhyb3cgRXJyb3IoXCJ2ZXJ0ZXgoKSBtdXN0IGJlIHVzZWQgb25jZSBiZWZvcmUgY2FsbGluZyBxdWFkcmF0aWNWZXJ0ZXgoKVwiKTt2YXIgZSx0LHIsbixvLGk9W10sYT1bXSxzPVtdLGw9YXJndW1lbnRzLmxlbmd0aDtpZigoZT0wKT09PXRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljLmxlbmd0aHx8dGhpcy5fbHV0UXVhZHJhdGljRGV0YWlsIT09dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsKXt0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpYz1bXSx0aGlzLl9sdXRRdWFkcmF0aWNEZXRhaWw9dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsO2Zvcih2YXIgdT0xL3RoaXMuX2x1dFF1YWRyYXRpY0RldGFpbCxjPTAsZD0xLGY9MDtjPDE7KXtpZihlPXBhcnNlRmxvYXQoYy50b0ZpeGVkKDYpKSx0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1tmXT10aGlzLl9xdWFkcmF0aWNDb2VmZmljaWVudHMoZSksZC50b0ZpeGVkKDYpPT09dS50b0ZpeGVkKDYpKXtlPXBhcnNlRmxvYXQoZC50b0ZpeGVkKDYpKStwYXJzZUZsb2F0KGMudG9GaXhlZCg2KSksKytmLHRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2ZdPXRoaXMuX3F1YWRyYXRpY0NvZWZmaWNpZW50cyhlKTticmVha31jKz11LGQtPXUsKytmfX12YXIgaD10aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpYy5sZW5ndGg7aWYoND09PWwpe2Zvcih0aGlzLmlzUXVhZHJhdGljPSEwLGk9W3RoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzBdLGFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSxhcmd1bWVudHMubGVuZ3RoPD0yP3ZvaWQgMDphcmd1bWVudHNbMl1dLGE9W3RoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzFdLGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSxhcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM11dLG89MDtvPGg7bysrKXQ9aVswXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1tvXVswXStpWzFdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW29dWzFdK2lbMl0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbb11bMl0scj1hWzBdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW29dWzBdK2FbMV0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbb11bMV0rYVsyXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1tvXVsyXSx0aGlzLnZlcnRleCh0LHIpO3RoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzBdPWFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSx0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFsxXT1hcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM119ZWxzZSBpZig2PT09bCl7Zm9yKHRoaXMuaXNRdWFkcmF0aWM9ITAsaT1bdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMF0sYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLGFyZ3VtZW50cy5sZW5ndGg8PTM/dm9pZCAwOmFyZ3VtZW50c1szXV0sYT1bdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMV0sYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdLGFyZ3VtZW50cy5sZW5ndGg8PTQ/dm9pZCAwOmFyZ3VtZW50c1s0XV0scz1bdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMl0sYXJndW1lbnRzLmxlbmd0aDw9Mj92b2lkIDA6YXJndW1lbnRzWzJdLGFyZ3VtZW50cy5sZW5ndGg8PTU/dm9pZCAwOmFyZ3VtZW50c1s1XV0sbz0wO288aDtvKyspdD1pWzBdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW29dWzBdK2lbMV0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbb11bMV0raVsyXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1tvXVsyXSxyPWFbMF0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbb11bMF0rYVsxXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1tvXVsxXSthWzJdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW29dWzJdLG49c1swXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1tvXVswXStzWzFdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW29dWzFdK3NbMl0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbb11bMl0sdGhpcy52ZXJ0ZXgodCxyLG4pO3RoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzBdPWFyZ3VtZW50cy5sZW5ndGg8PTM/dm9pZCAwOmFyZ3VtZW50c1szXSx0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFsxXT1hcmd1bWVudHMubGVuZ3RoPD00P3ZvaWQgMDphcmd1bWVudHNbNF0sdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMl09YXJndW1lbnRzLmxlbmd0aDw9NT92b2lkIDA6YXJndW1lbnRzWzVdfX0sRS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmN1cnZlVmVydGV4PWZ1bmN0aW9uKCl7dmFyIGUsdCxyLG4sbyxpPVtdLGE9W10scz1bXSxsPWFyZ3VtZW50cy5sZW5ndGg7aWYoKGU9MCk9PT10aGlzLl9sb29rVXBUYWJsZUJlemllci5sZW5ndGh8fHRoaXMuX2x1dEJlemllckRldGFpbCE9PXRoaXMuX3BJbnN0Ll9jdXJ2ZURldGFpbCl7dGhpcy5fbG9va1VwVGFibGVCZXppZXI9W10sdGhpcy5fbHV0QmV6aWVyRGV0YWlsPXRoaXMuX3BJbnN0Ll9jdXJ2ZURldGFpbDtmb3IodmFyIHU9MS90aGlzLl9sdXRCZXppZXJEZXRhaWwsYz0wLGQ9MSxmPTA7YzwxOyl7aWYoZT1wYXJzZUZsb2F0KGMudG9GaXhlZCg2KSksdGhpcy5fbG9va1VwVGFibGVCZXppZXJbZl09dGhpcy5fYmV6aWVyQ29lZmZpY2llbnRzKGUpLGQudG9GaXhlZCg2KT09PXUudG9GaXhlZCg2KSl7ZT1wYXJzZUZsb2F0KGQudG9GaXhlZCg2KSkrcGFyc2VGbG9hdChjLnRvRml4ZWQoNikpLCsrZix0aGlzLl9sb29rVXBUYWJsZUJlemllcltmXT10aGlzLl9iZXppZXJDb2VmZmljaWVudHMoZSk7YnJlYWt9Yys9dSxkLT11LCsrZn19dmFyIGg9dGhpcy5fbG9va1VwVGFibGVCZXppZXIubGVuZ3RoO2lmKDI9PT1sKXtpZih0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4LnB1c2goYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdKSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4LnB1c2goYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdKSw4PT09dGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5sZW5ndGgpe2Zvcih0aGlzLmlzQ3VydmU9ITAsaT10aGlzLl9iZXppZXJUb0NhdG11bGwoW3RoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbMF0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFsyXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzRdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbNl1dKSxhPXRoaXMuX2JlemllclRvQ2F0bXVsbChbdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFsxXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzNdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbNV0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFs3XV0pLG89MDtvPGg7bysrKXQ9aVswXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVswXStpWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzFdK2lbMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMl0raVszXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVszXSxyPWFbMF0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMF0rYVsxXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVsxXSthWzJdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzJdK2FbM10qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bM10sdGhpcy52ZXJ0ZXgodCxyKTtmb3Iobz0wO288bDtvKyspdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5zaGlmdCgpfX1lbHNlIGlmKDM9PT1sJiYodGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5wdXNoKGFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSksdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5wdXNoKGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSksdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5wdXNoKGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSksMTI9PT10aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4Lmxlbmd0aCkpe2Zvcih0aGlzLmlzQ3VydmU9ITAsaT10aGlzLl9iZXppZXJUb0NhdG11bGwoW3RoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbMF0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFszXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzZdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbOV1dKSxhPXRoaXMuX2JlemllclRvQ2F0bXVsbChbdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFsxXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzRdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbN10sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFsxMF1dKSxzPXRoaXMuX2JlemllclRvQ2F0bXVsbChbdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFsyXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzVdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbOF0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFsxMV1dKSxvPTA7bzxoO28rKyl0PWlbMF0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMF0raVsxXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVsxXStpWzJdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzJdK2lbM10qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bM10scj1hWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzBdK2FbMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMV0rYVsyXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVsyXSthWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzNdLG49c1swXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVswXStzWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW29dWzFdK3NbMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbb11bMl0rc1szXSp0aGlzLl9sb29rVXBUYWJsZUJlemllcltvXVszXSx0aGlzLnZlcnRleCh0LHIsbik7Zm9yKG89MDtvPGw7bysrKXRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXguc2hpZnQoKX19LEUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5pbWFnZT1mdW5jdGlvbihlLHQscixuLG8saSxhLHMsbCl7dGhpcy5faXNFcmFzaW5nJiZ0aGlzLmJsZW5kTW9kZSh0aGlzLl9jYWNoZWRCbGVuZE1vZGUpLHRoaXMuX3BJbnN0LnB1c2goKSx0aGlzLl9wSW5zdC5ub0xpZ2h0cygpLHRoaXMuX3BJbnN0LnRleHR1cmUoZSksdGhpcy5fcEluc3QudGV4dHVyZU1vZGUoaC5OT1JNQUwpO3ZhciB1PTA7dDw9ZS53aWR0aCYmKHU9dC9lLndpZHRoKTt2YXIgYz0xO3Qrbjw9ZS53aWR0aCYmKGM9KHQrbikvZS53aWR0aCk7dmFyIGQ9MDtyPD1lLmhlaWdodCYmKGQ9ci9lLmhlaWdodCk7dmFyIGY9MTtyK288PWUuaGVpZ2h0JiYoZj0ocitvKS9lLmhlaWdodCksdGhpcy5iZWdpblNoYXBlKCksdGhpcy52ZXJ0ZXgoaSxhLDAsdSxkKSx0aGlzLnZlcnRleChpK3MsYSwwLGMsZCksdGhpcy52ZXJ0ZXgoaStzLGErbCwwLGMsZiksdGhpcy52ZXJ0ZXgoaSxhK2wsMCx1LGYpLHRoaXMuZW5kU2hhcGUoaC5DTE9TRSksdGhpcy5fcEluc3QucG9wKCksdGhpcy5faXNFcmFzaW5nJiZ0aGlzLmJsZW5kTW9kZShoLlJFTU9WRSl9O3ZhciBvPUUuZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjQsXCIuL3A1Lkdlb21ldHJ5XCI6MzEzLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdFwiOjE0OSxcImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWRcIjoxNzJ9XSwzMDg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sZj0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sbz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1hKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBvIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbykpe3ZhciBpPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLG8pOm51bGw7aSYmKGkuZ2V0fHxpLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyxpKTpyW29dPWVbb119ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWYuZGVmYXVsdC5wcm90b3R5cGUub3JiaXRDb250cm9sPWZ1bmN0aW9uKGUsdCxyKXtpZih0aGlzLl9hc3NlcnQzZChcIm9yYml0Q29udHJvbFwiKSxmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm9yYml0Q29udHJvbFwiLGFyZ3VtZW50cyksdGhpcy5tb3VzZVg8dGhpcy53aWR0aCYmMDx0aGlzLm1vdXNlWCYmdGhpcy5tb3VzZVk8dGhpcy5oZWlnaHQmJjA8dGhpcy5tb3VzZVkpe3ZhciBuPXRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmE7dm9pZCAwPT09ZSYmKGU9MSksdm9pZCAwPT09dCYmKHQ9ZSksdm9pZCAwPT09ciYmKHI9LjUpLCEwIT09dGhpcy5jb250ZXh0TWVudURpc2FibGVkJiYodGhpcy5jYW52YXMub25jb250ZXh0bWVudT1mdW5jdGlvbigpe3JldHVybiExfSx0aGlzLl9zZXRQcm9wZXJ0eShcImNvbnRleHRNZW51RGlzYWJsZWRcIiwhMCkpLCEwIT09dGhpcy53aGVlbERlZmF1bHREaXNhYmxlZCYmKHRoaXMuY2FudmFzLm9ud2hlZWw9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdGhpcy5fc2V0UHJvcGVydHkoXCJ3aGVlbERlZmF1bHREaXNhYmxlZFwiLCEwKSk7dmFyIG89dGhpcy5oZWlnaHQ8dGhpcy53aWR0aD90aGlzLmhlaWdodDp0aGlzLndpZHRoO2lmKHRoaXMuX21vdXNlV2hlZWxEZWx0YVkhPT10aGlzLl9wbW91c2VXaGVlbERlbHRhWSYmKDA8dGhpcy5fbW91c2VXaGVlbERlbHRhWT90aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9vcmJpdCgwLDAscipvKTp0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9vcmJpdCgwLDAsLXIqbykpLHRoaXMubW91c2VJc1ByZXNzZWQpaWYodGhpcy5tb3VzZUJ1dHRvbj09PXRoaXMuTEVGVCl7dmFyIGk9LWUqKHRoaXMubW91c2VYLXRoaXMucG1vdXNlWCkvbyxhPXQqKHRoaXMubW91c2VZLXRoaXMucG1vdXNlWSkvbzt0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9vcmJpdChpLGEsMCl9ZWxzZSBpZih0aGlzLm1vdXNlQnV0dG9uPT09dGhpcy5SSUdIVCl7dmFyIHM9bi5fZ2V0TG9jYWxBeGVzKCksbD1NYXRoLnNxcnQocy54WzBdKnMueFswXStzLnhbMl0qcy54WzJdKTswIT09bCYmKHMueFswXS89bCxzLnhbMl0vPWwpO3ZhciB1PU1hdGguc3FydChzLnlbMF0qcy55WzBdK3MueVsyXSpzLnlbMl0pOzAhPT11JiYocy55WzBdLz11LHMueVsyXS89dSk7dmFyIGM9LTEqZSoodGhpcy5tb3VzZVgtdGhpcy5wbW91c2VYKSxkPS0xKnQqKHRoaXMubW91c2VZLXRoaXMucG1vdXNlWSk7bi5zZXRQb3NpdGlvbihuLmV5ZVgrYypzLnhbMF0rZCpzLnpbMF0sbi5leWVZLG4uZXllWitjKnMueFsyXStkKnMuelsyXSl9cmV0dXJuIHRoaXN9fSxmLmRlZmF1bHQucHJvdG90eXBlLmRlYnVnTW9kZT1mdW5jdGlvbigpe3RoaXMuX2Fzc2VydDNkKFwiZGVidWdNb2RlXCIpO2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2YuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZGVidWdNb2RlXCIsdCk7Zm9yKHZhciBuPXRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3QubGVuZ3RoLTE7MDw9bjtuLS0pdGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdFtuXS50b1N0cmluZygpIT09dGhpcy5fZ3JpZCgpLnRvU3RyaW5nKCkmJnRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3Rbbl0udG9TdHJpbmcoKSE9PXRoaXMuX2F4ZXNJY29uKCkudG9TdHJpbmcoKXx8dGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdC5zcGxpY2UobiwxKTt0WzBdPT09by5HUklEP3RoaXMucmVnaXN0ZXJNZXRob2QoXCJwb3N0XCIsdGhpcy5fZ3JpZC5jYWxsKHRoaXMsdFsxXSx0WzJdLHRbM10sdFs0XSx0WzVdKSk6dFswXT09PW8uQVhFUz90aGlzLnJlZ2lzdGVyTWV0aG9kKFwicG9zdFwiLHRoaXMuX2F4ZXNJY29uLmNhbGwodGhpcyx0WzFdLHRbMl0sdFszXSx0WzRdKSk6KHRoaXMucmVnaXN0ZXJNZXRob2QoXCJwb3N0XCIsdGhpcy5fZ3JpZC5jYWxsKHRoaXMsdFswXSx0WzFdLHRbMl0sdFszXSx0WzRdKSksdGhpcy5yZWdpc3Rlck1ldGhvZChcInBvc3RcIix0aGlzLl9heGVzSWNvbi5jYWxsKHRoaXMsdFs1XSx0WzZdLHRbN10sdFs4XSkpKX0sZi5kZWZhdWx0LnByb3RvdHlwZS5ub0RlYnVnTW9kZT1mdW5jdGlvbigpe3RoaXMuX2Fzc2VydDNkKFwibm9EZWJ1Z01vZGVcIik7Zm9yKHZhciBlPXRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3QubGVuZ3RoLTE7MDw9ZTtlLS0pdGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdFtlXS50b1N0cmluZygpIT09dGhpcy5fZ3JpZCgpLnRvU3RyaW5nKCkmJnRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3RbZV0udG9TdHJpbmcoKSE9PXRoaXMuX2F4ZXNJY29uKCkudG9TdHJpbmcoKXx8dGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdC5zcGxpY2UoZSwxKX0sZi5kZWZhdWx0LnByb3RvdHlwZS5fZ3JpZD1mdW5jdGlvbihlLHIsbixvLGkpe3ZvaWQgMD09PWUmJihlPXRoaXMud2lkdGgvMiksdm9pZCAwPT09ciYmKHI9TWF0aC5yb3VuZChlLzMwKTw0PzQ6TWF0aC5yb3VuZChlLzMwKSksdm9pZCAwPT09biYmKG49MCksdm9pZCAwPT09byYmKG89MCksdm9pZCAwPT09aSYmKGk9MCk7dmFyIGE9ZS9yLHM9ZS8yO3JldHVybiBmdW5jdGlvbigpe3RoaXMucHVzaCgpLHRoaXMuc3Ryb2tlKDI1NSp0aGlzLl9yZW5kZXJlci5jdXJTdHJva2VDb2xvclswXSwyNTUqdGhpcy5fcmVuZGVyZXIuY3VyU3Ryb2tlQ29sb3JbMV0sMjU1KnRoaXMuX3JlbmRlcmVyLmN1clN0cm9rZUNvbG9yWzJdKSx0aGlzLl9yZW5kZXJlci51TVZNYXRyaXguc2V0KHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxXSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzJdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbM10sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs0XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzVdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbNl0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs3XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzhdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbOV0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMV0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMl0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxM10sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxNF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxNV0pO2Zvcih2YXIgZT0wO2U8PXI7ZSsrKXRoaXMuYmVnaW5TaGFwZSh0aGlzLkxJTkVTKSx0aGlzLnZlcnRleCgtcytuLG8sZSphLXMraSksdGhpcy52ZXJ0ZXgoK3MrbixvLGUqYS1zK2kpLHRoaXMuZW5kU2hhcGUoKTtmb3IodmFyIHQ9MDt0PD1yO3QrKyl0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCphLXMrbixvLC1zK2kpLHRoaXMudmVydGV4KHQqYS1zK24sbywrcytpKSx0aGlzLmVuZFNoYXBlKCk7dGhpcy5wb3AoKX19LGYuZGVmYXVsdC5wcm90b3R5cGUuX2F4ZXNJY29uPWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiB2b2lkIDA9PT1lJiYoZT00MDx0aGlzLndpZHRoLzIwP3RoaXMud2lkdGgvMjA6NDApLHZvaWQgMD09PXQmJih0PS10aGlzLndpZHRoLzQpLHZvaWQgMD09PXImJihyPXQpLHZvaWQgMD09PW4mJihuPXQpLGZ1bmN0aW9uKCl7dGhpcy5wdXNoKCksdGhpcy5fcmVuZGVyZXIudU1WTWF0cml4LnNldCh0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzBdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMV0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsyXSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzNdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbNF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs1XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzZdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbN10sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs4XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzldLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTBdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTFdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTJdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTNdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTRdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTVdKSx0aGlzLnN0cm9rZVdlaWdodCgyKSx0aGlzLnN0cm9rZSgyNTUsMCwwKSx0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCxyLG4pLHRoaXMudmVydGV4KHQrZSxyLG4pLHRoaXMuZW5kU2hhcGUoKSx0aGlzLnN0cm9rZSgwLDI1NSwwKSx0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCxyLG4pLHRoaXMudmVydGV4KHQscitlLG4pLHRoaXMuZW5kU2hhcGUoKSx0aGlzLnN0cm9rZSgwLDAsMjU1KSx0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCxyLG4pLHRoaXMudmVydGV4KHQscixuK2UpLHRoaXMuZW5kU2hhcGUoKSx0aGlzLnBvcCgpfX07dmFyIGk9Zi5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjI1MyxcIi4uL2NvcmUvbWFpblwiOjI2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2VcIjoxNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nXCI6MTgyfV0sMzA5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbix5PShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxvPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9eS5kZWZhdWx0LnByb3RvdHlwZS5hbWJpZW50TGlnaHQ9ZnVuY3Rpb24oZSx0LHIsbil7dGhpcy5fYXNzZXJ0M2QoXCJhbWJpZW50TGlnaHRcIikseS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJhbWJpZW50TGlnaHRcIixhcmd1bWVudHMpO3ZhciBvPXRoaXMuY29sb3IuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiB0aGlzLl9yZW5kZXJlci5hbWJpZW50TGlnaHRDb2xvcnMucHVzaChvLl9hcnJheVswXSxvLl9hcnJheVsxXSxvLl9hcnJheVsyXSksdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXN9LHkuZGVmYXVsdC5wcm90b3R5cGUuc3BlY3VsYXJDb2xvcj1mdW5jdGlvbihlLHQscil7dGhpcy5fYXNzZXJ0M2QoXCJzcGVjdWxhckNvbG9yXCIpLHkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3BlY3VsYXJDb2xvclwiLGFyZ3VtZW50cyk7dmFyIG49dGhpcy5jb2xvci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLnNwZWN1bGFyQ29sb3JzPVtuLl9hcnJheVswXSxuLl9hcnJheVsxXSxuLl9hcnJheVsyXV0sdGhpc30seS5kZWZhdWx0LnByb3RvdHlwZS5kaXJlY3Rpb25hbExpZ2h0PWZ1bmN0aW9uKGUsdCxyLG4sbyxpKXt2YXIgYSxzLGwsdTt0aGlzLl9hc3NlcnQzZChcImRpcmVjdGlvbmFsTGlnaHRcIikseS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJkaXJlY3Rpb25hbExpZ2h0XCIsYXJndW1lbnRzKSxhPWUgaW5zdGFuY2VvZiB5LmRlZmF1bHQuQ29sb3I/ZTp0aGlzLmNvbG9yKGUsdCxyKTt2YXIgYz1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXTt1PVwibnVtYmVyXCI9PXR5cGVvZiBjPyhzPWFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoLTNdLGw9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMl0sYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0pOihzPWMueCxsPWMueSxjLnopO3ZhciBkPU1hdGguc3FydChzKnMrbCpsK3UqdSk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zLnB1c2gocy9kLGwvZCx1L2QpLHRoaXMuX3JlbmRlcmVyLmRpcmVjdGlvbmFsTGlnaHREaWZmdXNlQ29sb3JzLnB1c2goYS5fYXJyYXlbMF0sYS5fYXJyYXlbMV0sYS5fYXJyYXlbMl0pLEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuX3JlbmRlcmVyLmRpcmVjdGlvbmFsTGlnaHRTcGVjdWxhckNvbG9ycyx0aGlzLl9yZW5kZXJlci5zcGVjdWxhckNvbG9ycyksdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXN9LHkuZGVmYXVsdC5wcm90b3R5cGUucG9pbnRMaWdodD1mdW5jdGlvbihlLHQscixuLG8saSl7dmFyIGEscyxsLHU7dGhpcy5fYXNzZXJ0M2QoXCJwb2ludExpZ2h0XCIpLHkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicG9pbnRMaWdodFwiLGFyZ3VtZW50cyksYT1lIGluc3RhbmNlb2YgeS5kZWZhdWx0LkNvbG9yP2U6dGhpcy5jb2xvcihlLHQscik7dmFyIGM9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV07cmV0dXJuIHU9XCJudW1iZXJcIj09dHlwZW9mIGM/KHM9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtM10sbD1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0yXSxhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSk6KHM9Yy54LGw9Yy55LGMueiksdGhpcy5fcmVuZGVyZXIucG9pbnRMaWdodFBvc2l0aW9ucy5wdXNoKHMsbCx1KSx0aGlzLl9yZW5kZXJlci5wb2ludExpZ2h0RGlmZnVzZUNvbG9ycy5wdXNoKGEuX2FycmF5WzBdLGEuX2FycmF5WzFdLGEuX2FycmF5WzJdKSxBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLl9yZW5kZXJlci5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMsdGhpcy5fcmVuZGVyZXIuc3BlY3VsYXJDb2xvcnMpLHRoaXMuX3JlbmRlcmVyLl9lbmFibGVMaWdodGluZz0hMCx0aGlzfSx5LmRlZmF1bHQucHJvdG90eXBlLmxpZ2h0cz1mdW5jdGlvbigpe2lmKHRoaXMuX2Fzc2VydDNkKFwibGlnaHRzXCIpLHRoaXMuX2NvbG9yTW9kZT09PW8uUkdCKXRoaXMuYW1iaWVudExpZ2h0KDEyOCwxMjgsMTI4KSx0aGlzLmRpcmVjdGlvbmFsTGlnaHQoMTI4LDEyOCwxMjgsMCwwLC0xKTtlbHNle3ZhciBlPXRoaXMuX2NvbG9yTWF4ZXNbdGhpcy5fY29sb3JNb2RlXVsyXTt0aGlzLmFtYmllbnRMaWdodCgwLDAsZSksdGhpcy5kaXJlY3Rpb25hbExpZ2h0KDAsMCxlLDAsMCwtMSl9cmV0dXJuIHRoaXN9LHkuZGVmYXVsdC5wcm90b3R5cGUubGlnaHRGYWxsb2ZmPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJsaWdodEZhbGxvZmZcIikseS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsaWdodEZhbGxvZmZcIixhcmd1bWVudHMpLGU8MCYmKGU9MCxjb25zb2xlLndhcm4oXCJWYWx1ZSBvZiBjb25zdGFudCBhcmd1bWVudCBpbiBsaWdodEZhbGxvZmYoKSBzaG91bGQgYmUgbmV2ZXIgYmUgbmVnYXRpdmUuIFNldCB0byAwLlwiKSksdDwwJiYodD0wLGNvbnNvbGUud2FybihcIlZhbHVlIG9mIGxpbmVhciBhcmd1bWVudCBpbiBsaWdodEZhbGxvZmYoKSBzaG91bGQgYmUgbmV2ZXIgYmUgbmVnYXRpdmUuIFNldCB0byAwLlwiKSkscjwwJiYocj0wLGNvbnNvbGUud2FybihcIlZhbHVlIG9mIHF1YWRyYXRpYyBhcmd1bWVudCBpbiBsaWdodEZhbGxvZmYoKSBzaG91bGQgYmUgbmV2ZXIgYmUgbmVnYXRpdmUuIFNldCB0byAwLlwiKSksMD09PWUmJjA9PT10JiYwPT09ciYmKGU9MSxjb25zb2xlLndhcm4oXCJFaXRoZXIgb25lIG9mIHRoZSB0aHJlZSBhcmd1bWVudHMgaW4gbGlnaHRGYWxsb2ZmKCkgc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiB6ZXJvLiBTZXQgY29uc3RhbnQgYXJndW1lbnQgdG8gMS5cIikpLHRoaXMuX3JlbmRlcmVyLmNvbnN0YW50QXR0ZW51YXRpb249ZSx0aGlzLl9yZW5kZXJlci5saW5lYXJBdHRlbnVhdGlvbj10LHRoaXMuX3JlbmRlcmVyLnF1YWRyYXRpY0F0dGVudWF0aW9uPXIsdGhpc30seS5kZWZhdWx0LnByb3RvdHlwZS5zcG90TGlnaHQ9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSxzLGwsdSxjKXt2YXIgZCxmLGg7dGhpcy5fYXNzZXJ0M2QoXCJzcG90TGlnaHRcIikseS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzcG90TGlnaHRcIixhcmd1bWVudHMpO3ZhciBwPWFyZ3VtZW50cy5sZW5ndGg7c3dpdGNoKHApe2Nhc2UgMTE6Y2FzZSAxMDpkPXRoaXMuY29sb3IoZSx0LHIpLGY9bmV3IHkuZGVmYXVsdC5WZWN0b3IobixvLGkpLGg9bmV3IHkuZGVmYXVsdC5WZWN0b3IoYSxzLGwpO2JyZWFrO2Nhc2UgOTplIGluc3RhbmNlb2YgeS5kZWZhdWx0LkNvbG9yPyhkPWUsZj1uZXcgeS5kZWZhdWx0LlZlY3Rvcih0LHIsbiksaD1uZXcgeS5kZWZhdWx0LlZlY3RvcihvLGksYSksdT1zLGM9bCk6biBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3I/KGQ9dGhpcy5jb2xvcihlLHQsciksZj1uLGg9bmV3IHkuZGVmYXVsdC5WZWN0b3IobyxpLGEpLHU9cyxjPWwpOmEgaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yPyhkPXRoaXMuY29sb3IoZSx0LHIpLGY9bmV3IHkuZGVmYXVsdC5WZWN0b3IobixvLGkpLGg9YSx1PXMsYz1sKTooZD10aGlzLmNvbG9yKGUsdCxyKSxmPW5ldyB5LmRlZmF1bHQuVmVjdG9yKG4sbyxpKSxoPW5ldyB5LmRlZmF1bHQuVmVjdG9yKGEscyxsKSk7YnJlYWs7Y2FzZSA4OnU9KGg9ZSBpbnN0YW5jZW9mIHkuZGVmYXVsdC5Db2xvcj8oZD1lLGY9bmV3IHkuZGVmYXVsdC5WZWN0b3IodCxyLG4pLG5ldyB5LmRlZmF1bHQuVmVjdG9yKG8saSxhKSk6biBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3I/KGQ9dGhpcy5jb2xvcihlLHQsciksZj1uLG5ldyB5LmRlZmF1bHQuVmVjdG9yKG8saSxhKSk6KGQ9dGhpcy5jb2xvcihlLHQsciksZj1uZXcgeS5kZWZhdWx0LlZlY3RvcihuLG8saSksYSkscyk7YnJlYWs7Y2FzZSA3OmUgaW5zdGFuY2VvZiB5LmRlZmF1bHQuQ29sb3ImJnQgaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yPyhkPWUsZj10LGg9bmV3IHkuZGVmYXVsdC5WZWN0b3IocixuLG8pLHU9aSxjPWEpOmUgaW5zdGFuY2VvZiB5LmRlZmF1bHQuQ29sb3ImJm8gaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yPyhkPWUsZj1uZXcgeS5kZWZhdWx0LlZlY3Rvcih0LHIsbiksaD1vLHU9aSxjPWEpOm4gaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yJiZvIGluc3RhbmNlb2YgeS5kZWZhdWx0LlZlY3Rvcj8oZD10aGlzLmNvbG9yKGUsdCxyKSxmPW4saD1vLHU9aSxjPWEpOmg9ZSBpbnN0YW5jZW9mIHkuZGVmYXVsdC5Db2xvcj8oZD1lLGY9bmV3IHkuZGVmYXVsdC5WZWN0b3IodCxyLG4pLG5ldyB5LmRlZmF1bHQuVmVjdG9yKG8saSxhKSk6biBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3I/KGQ9dGhpcy5jb2xvcihlLHQsciksZj1uLG5ldyB5LmRlZmF1bHQuVmVjdG9yKG8saSxhKSk6KGQ9dGhpcy5jb2xvcihlLHQsciksZj1uZXcgeS5kZWZhdWx0LlZlY3RvcihuLG8saSksYSk7YnJlYWs7Y2FzZSA2Om4gaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yJiZvIGluc3RhbmNlb2YgeS5kZWZhdWx0LlZlY3Rvcj8oZD10aGlzLmNvbG9yKGUsdCxyKSxmPW4saD1vLHU9aSk6ZSBpbnN0YW5jZW9mIHkuZGVmYXVsdC5Db2xvciYmbyBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3I/KGQ9ZSxmPW5ldyB5LmRlZmF1bHQuVmVjdG9yKHQscixuKSxoPW8sdT1pKTplIGluc3RhbmNlb2YgeS5kZWZhdWx0LkNvbG9yJiZ0IGluc3RhbmNlb2YgeS5kZWZhdWx0LlZlY3RvciYmKGQ9ZSxmPXQsaD1uZXcgeS5kZWZhdWx0LlZlY3RvcihyLG4sbyksdT1pKTticmVhaztjYXNlIDU6ZSBpbnN0YW5jZW9mIHkuZGVmYXVsdC5Db2xvciYmdCBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3ImJnIgaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yPyhkPWUsZj10LGg9cix1PW4sYz1vKTpuIGluc3RhbmNlb2YgeS5kZWZhdWx0LlZlY3RvciYmbyBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3I/KGQ9dGhpcy5jb2xvcihlLHQsciksZj1uLGg9byk6ZSBpbnN0YW5jZW9mIHkuZGVmYXVsdC5Db2xvciYmbyBpbnN0YW5jZW9mIHkuZGVmYXVsdC5WZWN0b3I/KGQ9ZSxmPW5ldyB5LmRlZmF1bHQuVmVjdG9yKHQscixuKSxoPW8pOmUgaW5zdGFuY2VvZiB5LmRlZmF1bHQuQ29sb3ImJnQgaW5zdGFuY2VvZiB5LmRlZmF1bHQuVmVjdG9yJiYoZD1lLGY9dCxoPW5ldyB5LmRlZmF1bHQuVmVjdG9yKHIsbixvKSk7YnJlYWs7Y2FzZSA0OmQ9ZSxmPXQsaD1yLHU9bjticmVhaztjYXNlIDM6ZD1lLGY9dCxoPXI7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gY29uc29sZS53YXJuKFwiU29ycnksIGlucHV0IGZvciBzcG90bGlnaHQoKSBpcyBub3QgaW4gcHJlc2NyaWJlZCBmb3JtYXQuIFRvbyBcIi5jb25jYXQocDwzP1wiZmV3XCI6XCJtYW55XCIsXCIgYXJndW1lbnRzIHdlcmUgcHJvdmlkZWRcIikpLHRoaXN9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodERpZmZ1c2VDb2xvcnMucHVzaChkLl9hcnJheVswXSxkLl9hcnJheVsxXSxkLl9hcnJheVsyXSksQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkodGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0U3BlY3VsYXJDb2xvcnMsdGhpcy5fcmVuZGVyZXIuc3BlY3VsYXJDb2xvcnMpLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodFBvc2l0aW9ucy5wdXNoKGYueCxmLnksZi56KSxoLm5vcm1hbGl6ZSgpLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodERpcmVjdGlvbnMucHVzaChoLngsaC55LGgueiksdm9pZCAwPT09dSYmKHU9TWF0aC5QSS8zKSx2b2lkIDAhPT1jJiZjPDE/KGM9MSxjb25zb2xlLndhcm4oXCJWYWx1ZSBvZiBjb25jZW50cmF0aW9uIG5lZWRzIHRvIGJlIGdyZWF0ZXIgdGhhbiAxLiBTZXR0aW5nIGl0IHRvIDFcIikpOnZvaWQgMD09PWMmJihjPTEwMCksdT10aGlzLl9yZW5kZXJlci5fcEluc3QuX3RvUmFkaWFucyh1KSx0aGlzLl9yZW5kZXJlci5zcG90TGlnaHRBbmdsZS5wdXNoKE1hdGguY29zKHUpKSx0aGlzLl9yZW5kZXJlci5zcG90TGlnaHRDb25jLnB1c2goYyksdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXN9LHkuZGVmYXVsdC5wcm90b3R5cGUubm9MaWdodHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJub0xpZ2h0c1wiKSx5LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm5vTGlnaHRzXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5fZW5hYmxlTGlnaHRpbmc9ITEsdGhpcy5fcmVuZGVyZXIuYW1iaWVudExpZ2h0Q29sb3JzLmxlbmd0aD0wLHRoaXMuX3JlbmRlcmVyLnNwZWN1bGFyQ29sb3JzPVsxLDEsMV0sdGhpcy5fcmVuZGVyZXIuZGlyZWN0aW9uYWxMaWdodERpcmVjdGlvbnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuZGlyZWN0aW9uYWxMaWdodFNwZWN1bGFyQ29sb3JzLmxlbmd0aD0wLHRoaXMuX3JlbmRlcmVyLnBvaW50TGlnaHRQb3NpdGlvbnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIucG9pbnRMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIucG9pbnRMaWdodFNwZWN1bGFyQ29sb3JzLmxlbmd0aD0wLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodFBvc2l0aW9ucy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5zcG90TGlnaHREaXJlY3Rpb25zLmxlbmd0aD0wLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0U3BlY3VsYXJDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0QW5nbGUubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0Q29uYy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5jb25zdGFudEF0dGVudWF0aW9uPTEsdGhpcy5fcmVuZGVyZXIubGluZWFyQXR0ZW51YXRpb249MCx0aGlzLl9yZW5kZXJlci5xdWFkcmF0aWNBdHRlbnVhdGlvbj0wLHRoaXMuX3JlbmRlcmVyLl91c2VTaGluaW5lc3M9MSx0aGlzfTt2YXIgaT15LmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9tYWluXCI6MjY0fV0sMzEwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixqPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBzKGUsdCxyKXtmb3IodmFyIG49MCxvPWUubGVuZ3RoO248bztuKyspaWYoZVtuXSE9PXQuZ2V0VWludDgocituLCExKSlyZXR1cm4hMTtyZXR1cm4hMH1lKFwiLi9wNS5HZW9tZXRyeVwiKSxqLmRlZmF1bHQucHJvdG90eXBlLmxvYWRNb2RlbD1mdW5jdGlvbihlKXt2YXIgdCxyLG47ai5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsb2FkTW9kZWxcIixhcmd1bWVudHMpO3ZhciBvPWUuc2xpY2UoLTQpO1wiYm9vbGVhblwiPT10eXBlb2YgYXJndW1lbnRzWzFdPyh0PWFyZ3VtZW50c1sxXSxyPWFyZ3VtZW50c1syXSxuPWFyZ3VtZW50c1szXSx2b2lkIDAhPT1hcmd1bWVudHNbNF0mJihvPWFyZ3VtZW50c1s0XSkpOih0PSExLHI9YXJndW1lbnRzWzFdLG49YXJndW1lbnRzWzJdLHZvaWQgMCE9PWFyZ3VtZW50c1szXSYmKG89YXJndW1lbnRzWzNdKSk7dmFyIGk9bmV3IGouZGVmYXVsdC5HZW9tZXRyeTtpLmdpZD1cIlwiLmNvbmNhdChlLFwifFwiKS5jb25jYXQodCk7dmFyIGE9dGhpcztyZXR1cm4gby5tYXRjaCgvXFwuc3RsJC9pKT90aGlzLmh0dHBEbyhlLFwiR0VUXCIsXCJhcnJheUJ1ZmZlclwiLGZ1bmN0aW9uKGUpeyFmdW5jdGlvbihlLHQpe2lmKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgRGF0YVZpZXcoZSkscj1bMTE1LDExMSwxMDgsMTA1LDEwMF0sbj0wO248NTtuKyspaWYocyhyLHQsbikpcmV0dXJuITE7cmV0dXJuITB9KHQpKSFmdW5jdGlvbihlLHQpe2Zvcih2YXIgcixuLG8saSxhLHMsbCx1PW5ldyBEYXRhVmlldyh0KSxjPXUuZ2V0VWludDMyKDgwLCEwKSxkPSExLGY9MDtmPDcwO2YrKykxMTI5MjcwMzUxPT09dS5nZXRVaW50MzIoZiwhMSkmJjgyPT09dS5nZXRVaW50OChmKzQpJiY2MT09PXUuZ2V0VWludDgoZis1KSYmKGQ9ITAsaT1bXSxhPXUuZ2V0VWludDgoZis2KS8yNTUscz11LmdldFVpbnQ4KGYrNykvMjU1LGw9dS5nZXRVaW50OChmKzgpLzI1NSk7Zm9yKHZhciBoPTA7aDxjO2grKyl7dmFyIHA9ODQrNTAqaCx5PXUuZ2V0RmxvYXQzMihwLCEwKSxtPXUuZ2V0RmxvYXQzMig0K3AsITApLGc9dS5nZXRGbG9hdDMyKDgrcCwhMCk7aWYoZCl7dmFyIHY9dS5nZXRVaW50MTYoNDgrcCwhMCk7bz0wPT0oMzI3Njgmdik/KHI9KDMxJnYpLzMxLG49KHY+PjUmMzEpLzMxLCh2Pj4xMCYzMSkvMzEpOihyPWEsbj1zLGwpfWZvcih2YXIgYj1uZXcgai5kZWZhdWx0LlZlY3Rvcih5LG0sZyksXz0xO188PTM7XysrKXt2YXIgeD1wKzEyKl8sdz1uZXcgai5kZWZhdWx0LlZlY3Rvcih1LmdldEZsb2F0MzIoeCwhMCksdS5nZXRGbG9hdDMyKDQreCwhMCksdS5nZXRGbG9hdDMyKDgreCwhMCkpO2UudmVydGljZXMucHVzaCh3KSxlLnZlcnRleE5vcm1hbHMucHVzaChiKSxkJiZpLnB1c2gocixuLG8pfWUuZmFjZXMucHVzaChbMypoLDMqaCsxLDMqaCsyXSksZS51dnMucHVzaChbMCwwXSxbMCwwXSxbMCwwXSl9fShlLHQpO2Vsc2V7dmFyIHI9bmV3IERhdGFWaWV3KHQpO2lmKCEoXCJUZXh0RGVjb2RlclwiaW4gd2luZG93KSlyZXR1cm4gY29uc29sZS53YXJuKFwiU29ycnksIEFTQ0lJIFNUTCBsb2FkaW5nIG9ubHkgd29ya3MgaW4gYnJvd3NlcnMgdGhhdCBzdXBwb3J0IFRleHREZWNvZGVyIChodHRwczovL2Nhbml1c2UuY29tLyNmZWF0PXRleHRlbmNvZGVyKVwiKTt2YXIgbj1uZXcgVGV4dERlY29kZXIoXCJ1dGYtOFwiKS5kZWNvZGUocikuc3BsaXQoXCJcXG5cIik7IWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLG4sbz1cIlwiLGk9W10sYT0wO2E8dC5sZW5ndGg7KythKXtmb3IodmFyIHM9dFthXS50cmltKCksbD1zLnNwbGl0KFwiIFwiKSx1PTA7dTxsLmxlbmd0aDsrK3UpXCJcIj09PWxbdV0mJmwuc3BsaWNlKHUsMSk7aWYoMCE9PWwubGVuZ3RoKXN3aXRjaChvKXtjYXNlXCJcIjppZihcInNvbGlkXCIhPT1sWzBdKXJldHVybiBjb25zb2xlLmVycm9yKHMpLGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc3RhdGUgXCInLmNvbmNhdChsWzBdLCdcIiwgc2hvdWxkIGJlIFwic29saWRcIicpKTtvPVwic29saWRcIjticmVhaztjYXNlXCJzb2xpZFwiOmlmKFwiZmFjZXRcIiE9PWxbMF18fFwibm9ybWFsXCIhPT1sWzFdKXJldHVybiBjb25zb2xlLmVycm9yKHMpLGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc3RhdGUgXCInLmNvbmNhdChsWzBdLCdcIiwgc2hvdWxkIGJlIFwiZmFjZXQgbm9ybWFsXCInKSk7cj1uZXcgai5kZWZhdWx0LlZlY3RvcihwYXJzZUZsb2F0KGxbMl0pLHBhcnNlRmxvYXQobFszXSkscGFyc2VGbG9hdChsWzRdKSksZS52ZXJ0ZXhOb3JtYWxzLnB1c2gocixyLHIpLG89XCJmYWNldCBub3JtYWxcIjticmVhaztjYXNlXCJmYWNldCBub3JtYWxcIjppZihcIm91dGVyXCIhPT1sWzBdfHxcImxvb3BcIiE9PWxbMV0pcmV0dXJuIGNvbnNvbGUuZXJyb3IocyksY29uc29sZS5lcnJvcignSW52YWxpZCBzdGF0ZSBcIicuY29uY2F0KGxbMF0sJ1wiLCBzaG91bGQgYmUgXCJvdXRlciBsb29wXCInKSk7bz1cInZlcnRleFwiO2JyZWFrO2Nhc2VcInZlcnRleFwiOmlmKFwidmVydGV4XCI9PT1sWzBdKW49bmV3IGouZGVmYXVsdC5WZWN0b3IocGFyc2VGbG9hdChsWzFdKSxwYXJzZUZsb2F0KGxbMl0pLHBhcnNlRmxvYXQobFszXSkpLGUudmVydGljZXMucHVzaChuKSxlLnV2cy5wdXNoKFswLDBdKSxpLnB1c2goZS52ZXJ0aWNlcy5pbmRleE9mKG4pKTtlbHNle2lmKFwiZW5kbG9vcFwiIT09bFswXSlyZXR1cm4gY29uc29sZS5lcnJvcihzKSxjb25zb2xlLmVycm9yKCdJbnZhbGlkIHN0YXRlIFwiJy5jb25jYXQobFswXSwnXCIsIHNob3VsZCBiZSBcInZlcnRleFwiIG9yIFwiZW5kbG9vcFwiJykpO2UuZmFjZXMucHVzaChpKSxpPVtdLG89XCJlbmRsb29wXCJ9YnJlYWs7Y2FzZVwiZW5kbG9vcFwiOmlmKFwiZW5kZmFjZXRcIiE9PWxbMF0pcmV0dXJuIGNvbnNvbGUuZXJyb3IocyksY29uc29sZS5lcnJvcignSW52YWxpZCBzdGF0ZSBcIicuY29uY2F0KGxbMF0sJ1wiLCBzaG91bGQgYmUgXCJlbmRmYWNldFwiJykpO289XCJlbmRmYWNldFwiO2JyZWFrO2Nhc2VcImVuZGZhY2V0XCI6aWYoXCJlbmRzb2xpZFwiIT09bFswXSl7aWYoXCJmYWNldFwiIT09bFswXXx8XCJub3JtYWxcIiE9PWxbMV0pcmV0dXJuIGNvbnNvbGUuZXJyb3IocyksY29uc29sZS5lcnJvcignSW52YWxpZCBzdGF0ZSBcIicuY29uY2F0KGxbMF0sJ1wiLCBzaG91bGQgYmUgXCJlbmRzb2xpZFwiIG9yIFwiZmFjZXQgbm9ybWFsXCInKSk7cj1uZXcgai5kZWZhdWx0LlZlY3RvcihwYXJzZUZsb2F0KGxbMl0pLHBhcnNlRmxvYXQobFszXSkscGFyc2VGbG9hdChsWzRdKSksZS52ZXJ0ZXhOb3JtYWxzLnB1c2gocixyLHIpLG89XCJmYWNldCBub3JtYWxcIn1icmVhaztkZWZhdWx0OmNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc3RhdGUgXCInLmNvbmNhdChvLCdcIicpKX19fShlLG4pfX0oaSxlKSx0JiZpLm5vcm1hbGl6ZSgpLGEuX2RlY3JlbWVudFByZWxvYWQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZyKGkpfSxuKTpvLm1hdGNoKC9cXC5vYmokL2kpP3RoaXMubG9hZFN0cmluZ3MoZSxmdW5jdGlvbihlKXshZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9e3Y6W10sdnQ6W10sdm46W119LG49e30sbz0wO288dC5sZW5ndGg7KytvKXt2YXIgaT10W29dLnRyaW0oKS5zcGxpdCgvXFxiXFxzKy8pO2lmKDA8aS5sZW5ndGgpaWYoXCJ2XCI9PT1pWzBdfHxcInZuXCI9PT1pWzBdKXt2YXIgYT1uZXcgai5kZWZhdWx0LlZlY3RvcihwYXJzZUZsb2F0KGlbMV0pLHBhcnNlRmxvYXQoaVsyXSkscGFyc2VGbG9hdChpWzNdKSk7cltpWzBdXS5wdXNoKGEpfWVsc2UgaWYoXCJ2dFwiPT09aVswXSl7dmFyIHM9W3BhcnNlRmxvYXQoaVsxXSksMS1wYXJzZUZsb2F0KGlbMl0pXTtyW2lbMF1dLnB1c2gocyl9ZWxzZSBpZihcImZcIj09PWlbMF0pZm9yKHZhciBsPTM7bDxpLmxlbmd0aDsrK2wpe2Zvcih2YXIgdT1bXSxjPVsxLGwtMSxsXSxkPTA7ZDxjLmxlbmd0aDsrK2Qpe3ZhciBmPWlbY1tkXV0saD0wO2lmKHZvaWQgMCE9PW5bZl0paD1uW2ZdO2Vsc2V7Zm9yKHZhciBwPWYuc3BsaXQoXCIvXCIpLHk9MDt5PHAubGVuZ3RoO3krKylwW3ldPXBhcnNlSW50KHBbeV0pLTE7aD1uW2ZdPWUudmVydGljZXMubGVuZ3RoLGUudmVydGljZXMucHVzaChyLnZbcFswXV0uY29weSgpKSxyLnZ0W3BbMV1dP2UudXZzLnB1c2goci52dFtwWzFdXS5zbGljZSgpKTplLnV2cy5wdXNoKFswLDBdKSxyLnZuW3BbMl1dJiZlLnZlcnRleE5vcm1hbHMucHVzaChyLnZuW3BbMl1dLmNvcHkoKSl9dS5wdXNoKGgpfXVbMF0hPT11WzFdJiZ1WzBdIT09dVsyXSYmdVsxXSE9PXVbMl0mJmUuZmFjZXMucHVzaCh1KX19MD09PWUudmVydGV4Tm9ybWFscy5sZW5ndGgmJmUuY29tcHV0ZU5vcm1hbHMoKX0oaSxlKSx0JiZpLm5vcm1hbGl6ZSgpLGEuX2RlY3JlbWVudFByZWxvYWQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZyKGkpfSxuKTooai5kZWZhdWx0Ll9mcmllbmRseUZpbGVMb2FkRXJyb3IoMyxlKSxuP24oKTpjb25zb2xlLmVycm9yKFwiU29ycnksIHRoZSBmaWxlIHR5cGUgaXMgaW52YWxpZC4gT25seSBPQkogYW5kIFNUTCBmaWxlcyBhcmUgc3VwcG9ydGVkLlwiKSksaX0sai5kZWZhdWx0LnByb3RvdHlwZS5tb2RlbD1mdW5jdGlvbihlKXt0aGlzLl9hc3NlcnQzZChcIm1vZGVsXCIpLGouZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibW9kZWxcIixhcmd1bWVudHMpLDA8ZS52ZXJ0aWNlcy5sZW5ndGgmJih0aGlzLl9yZW5kZXJlci5nZW9tZXRyeUluSGFzaChlLmdpZCl8fChlLl9tYWtlVHJpYW5nbGVFZGdlcygpLl9lZGdlc1RvVmVydGljZXMoKSx0aGlzLl9yZW5kZXJlci5jcmVhdGVCdWZmZXJzKGUuZ2lkLGUpKSx0aGlzLl9yZW5kZXJlci5kcmF3QnVmZmVycyhlLmdpZCkpfTt2YXIgbz1qLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjI2NCxcIi4vcDUuR2VvbWV0cnlcIjozMTMsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0XCI6MTQ5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCI6MTU3LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlXCI6MTYyLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZVwiOjE2NCxcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjXCI6MTgxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaFwiOjE4NyxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIjoxOTEsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW1cIjoxOTN9XSwzMTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe3JldHVybihhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW5cIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbix1PShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxvPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZShcIi4vcDUuVGV4dHVyZVwiKSx1LmRlZmF1bHQucHJvdG90eXBlLmxvYWRTaGFkZXI9ZnVuY3Rpb24oZSx0LHIsbil7dS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsb2FkU2hhZGVyXCIsYXJndW1lbnRzKSxuPW58fGNvbnNvbGUuZXJyb3I7ZnVuY3Rpb24gbygpe2EuX2RlY3JlbWVudFByZWxvYWQoKSxyJiZyKGkpfXZhciBpPW5ldyB1LmRlZmF1bHQuU2hhZGVyLGE9dGhpcyxzPSExLGw9ITE7cmV0dXJuIHRoaXMubG9hZFN0cmluZ3MoZSxmdW5jdGlvbihlKXtpLl92ZXJ0U3JjPWUuam9pbihcIlxcblwiKSxsPSEwLHMmJm8oKX0sbiksdGhpcy5sb2FkU3RyaW5ncyh0LGZ1bmN0aW9uKGUpe2kuX2ZyYWdTcmM9ZS5qb2luKFwiXFxuXCIpLHM9ITAsbCYmbygpfSxuKSxpfSx1LmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVNoYWRlcj1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcImNyZWF0ZVNoYWRlclwiKSx1LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZVNoYWRlclwiLGFyZ3VtZW50cyksbmV3IHUuZGVmYXVsdC5TaGFkZXIodGhpcy5fcmVuZGVyZXIsZSx0KX0sdS5kZWZhdWx0LnByb3RvdHlwZS5zaGFkZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Fzc2VydDNkKFwic2hhZGVyXCIpLHUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2hhZGVyXCIsYXJndW1lbnRzKSx2b2lkIDA9PT1lLl9yZW5kZXJlciYmKGUuX3JlbmRlcmVyPXRoaXMuX3JlbmRlcmVyKSxlLmluaXQoKSxlLmlzU3Ryb2tlU2hhZGVyKCk/dGhpcy5fcmVuZGVyZXIudXNlclN0cm9rZVNoYWRlcj1lOih0aGlzLl9yZW5kZXJlci51c2VyRmlsbFNoYWRlcj1lLHRoaXMuX3JlbmRlcmVyLl91c2VOb3JtYWxNYXRlcmlhbD0hMSksdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS5yZXNldFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJlci51c2VyRmlsbFNoYWRlcj10aGlzLl9yZW5kZXJlci51c2VyU3Ryb2tlU2hhZGVyPW51bGwsdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS50ZXh0dXJlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcInRleHR1cmVcIiksdS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0ZXh0dXJlXCIsYXJndW1lbnRzKSxlLmdpZlByb3BlcnRpZXMmJmUuX2FuaW1hdGVHaWYodGhpcyksdGhpcy5fcmVuZGVyZXIuZHJhd01vZGU9by5URVhUVVJFLHRoaXMuX3JlbmRlcmVyLl91c2VTcGVjdWxhck1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl91c2VFbWlzc2l2ZU1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl91c2VOb3JtYWxNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdGV4PWUsdGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX2RvRmlsbFwiLCEwKSx0aGlzfSx1LmRlZmF1bHQucHJvdG90eXBlLnRleHR1cmVNb2RlPWZ1bmN0aW9uKGUpe2UhPT1vLklNQUdFJiZlIT09by5OT1JNQUw/Y29uc29sZS53YXJuKFwiWW91IHRyaWVkIHRvIHNldCBcIi5jb25jYXQoZSxcIiB0ZXh0dXJlTW9kZSBvbmx5IHN1cHBvcnRzIElNQUdFICYgTk9STUFMIFwiKSk6dGhpcy5fcmVuZGVyZXIudGV4dHVyZU1vZGU9ZX0sdS5kZWZhdWx0LnByb3RvdHlwZS50ZXh0dXJlV3JhcD1mdW5jdGlvbihlKXt2YXIgdD0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06ZTt0aGlzLl9yZW5kZXJlci50ZXh0dXJlV3JhcFg9ZSx0aGlzLl9yZW5kZXJlci50ZXh0dXJlV3JhcFk9dDtmb3IodmFyIHI9dGhpcy5fcmVuZGVyZXIudGV4dHVyZXMsbj0wO248ci5sZW5ndGg7bisrKXJbbl0uc2V0V3JhcE1vZGUoZSx0KX0sdS5kZWZhdWx0LnByb3RvdHlwZS5ub3JtYWxNYXRlcmlhbD1mdW5jdGlvbigpe3RoaXMuX2Fzc2VydDNkKFwibm9ybWFsTWF0ZXJpYWxcIik7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07cmV0dXJuIHUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibm9ybWFsTWF0ZXJpYWxcIix0KSx0aGlzLl9yZW5kZXJlci5kcmF3TW9kZT1vLkZJTEwsdGhpcy5fcmVuZGVyZXIuX3VzZVNwZWN1bGFyTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX3VzZUVtaXNzaXZlTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX3VzZU5vcm1hbE1hdGVyaWFsPSEwLHRoaXMuX3JlbmRlcmVyLmN1ckZpbGxDb2xvcj1bMSwxLDEsMV0sdGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX2RvRmlsbFwiLCEwKSx0aGlzLm5vU3Ryb2tlKCksdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS5hbWJpZW50TWF0ZXJpYWw9ZnVuY3Rpb24oZSx0LHIpe3RoaXMuX2Fzc2VydDNkKFwiYW1iaWVudE1hdGVyaWFsXCIpLHUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYW1iaWVudE1hdGVyaWFsXCIsYXJndW1lbnRzKTt2YXIgbj11LmRlZmF1bHQucHJvdG90eXBlLmNvbG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuY3VyRmlsbENvbG9yPW4uX2FycmF5LHRoaXMuX3JlbmRlcmVyLl91c2VTcGVjdWxhck1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl91c2VFbWlzc2l2ZU1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl91c2VOb3JtYWxNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fZW5hYmxlTGlnaHRpbmc9ITAsdGhpcy5fcmVuZGVyZXIuX3RleD1udWxsLHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9kb0ZpbGxcIiwhMCksdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS5lbWlzc2l2ZU1hdGVyaWFsPWZ1bmN0aW9uKGUsdCxyLG4pe3RoaXMuX2Fzc2VydDNkKFwiZW1pc3NpdmVNYXRlcmlhbFwiKSx1LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImVtaXNzaXZlTWF0ZXJpYWxcIixhcmd1bWVudHMpO3ZhciBvPXUuZGVmYXVsdC5wcm90b3R5cGUuY29sb3IuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiB0aGlzLl9yZW5kZXJlci5jdXJGaWxsQ29sb3I9by5fYXJyYXksdGhpcy5fcmVuZGVyZXIuX3VzZVNwZWN1bGFyTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX3VzZUVtaXNzaXZlTWF0ZXJpYWw9ITAsdGhpcy5fcmVuZGVyZXIuX3VzZU5vcm1hbE1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl9lbmFibGVMaWdodGluZz0hMCx0aGlzLl9yZW5kZXJlci5fdGV4PW51bGwsdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS5zcGVjdWxhck1hdGVyaWFsPWZ1bmN0aW9uKGUsdCxyLG4pe3RoaXMuX2Fzc2VydDNkKFwic3BlY3VsYXJNYXRlcmlhbFwiKSx1LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNwZWN1bGFyTWF0ZXJpYWxcIixhcmd1bWVudHMpO3ZhciBvPXUuZGVmYXVsdC5wcm90b3R5cGUuY29sb3IuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiB0aGlzLl9yZW5kZXJlci5jdXJGaWxsQ29sb3I9by5fYXJyYXksdGhpcy5fcmVuZGVyZXIuX3VzZVNwZWN1bGFyTWF0ZXJpYWw9ITAsdGhpcy5fcmVuZGVyZXIuX3VzZUVtaXNzaXZlTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX3VzZU5vcm1hbE1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl9lbmFibGVMaWdodGluZz0hMCx0aGlzLl9yZW5kZXJlci5fdGV4PW51bGwsdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS5zaGluaW5lc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Fzc2VydDNkKFwic2hpbmluZXNzXCIpLHUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2hpbmluZXNzXCIsYXJndW1lbnRzKSxlPDEmJihlPTEpLHRoaXMuX3JlbmRlcmVyLl91c2VTaGluaW5lc3M9ZSx0aGlzfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2FwcGx5Q29sb3JCbGVuZD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLkdMLHI9dGhpcy5kcmF3TW9kZT09PW8uVEVYVFVSRXx8ZVtlLmxlbmd0aC0xXTwxfHx0aGlzLl9pc0VyYXNpbmc7cmV0dXJuIHIhPT10aGlzLl9pc0JsZW5kaW5nJiYocnx8dGhpcy5jdXJCbGVuZE1vZGUhPT1vLkJMRU5EJiZ0aGlzLmN1ckJsZW5kTW9kZSE9PW8uQUREP3QuZW5hYmxlKHQuQkxFTkQpOnQuZGlzYWJsZSh0LkJMRU5EKSx0LmRlcHRoTWFzayghMCksdGhpcy5faXNCbGVuZGluZz1yKSx0aGlzLl9hcHBseUJsZW5kTW9kZSgpLGV9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fYXBwbHlCbGVuZE1vZGU9ZnVuY3Rpb24oKXtpZih0aGlzLl9jYWNoZWRCbGVuZE1vZGUhPT10aGlzLmN1ckJsZW5kTW9kZSl7dmFyIGU9dGhpcy5HTDtzd2l0Y2godGhpcy5jdXJCbGVuZE1vZGUpe2Nhc2Ugby5CTEVORDpjYXNlIG8uQUREOmUuYmxlbmRFcXVhdGlvbihlLkZVTkNfQUREKSxlLmJsZW5kRnVuYyhlLlNSQ19BTFBIQSxlLk9ORV9NSU5VU19TUkNfQUxQSEEpO2JyZWFrO2Nhc2Ugby5SRU1PVkU6ZS5ibGVuZEVxdWF0aW9uKGUuRlVOQ19SRVZFUlNFX1NVQlRSQUNUKSxlLmJsZW5kRnVuYyhlLlNSQ19BTFBIQSxlLkRTVF9BTFBIQSk7YnJlYWs7Y2FzZSBvLk1VTFRJUExZOmUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKGUuRlVOQ19BREQsZS5GVU5DX0FERCksZS5ibGVuZEZ1bmNTZXBhcmF0ZShlLlpFUk8sZS5TUkNfQ09MT1IsZS5PTkUsZS5PTkUpO2JyZWFrO2Nhc2Ugby5TQ1JFRU46ZS5ibGVuZEVxdWF0aW9uU2VwYXJhdGUoZS5GVU5DX0FERCxlLkZVTkNfQUREKSxlLmJsZW5kRnVuY1NlcGFyYXRlKGUuT05FX01JTlVTX0RTVF9DT0xPUixlLk9ORSxlLk9ORSxlLk9ORSk7YnJlYWs7Y2FzZSBvLkVYQ0xVU0lPTjplLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShlLkZVTkNfQURELGUuRlVOQ19BREQpLGUuYmxlbmRGdW5jU2VwYXJhdGUoZS5PTkVfTUlOVVNfRFNUX0NPTE9SLGUuT05FX01JTlVTX1NSQ19DT0xPUixlLk9ORSxlLk9ORSk7YnJlYWs7Y2FzZSBvLlJFUExBQ0U6ZS5ibGVuZEVxdWF0aW9uKGUuRlVOQ19BREQpLGUuYmxlbmRGdW5jKGUuT05FLGUuWkVSTyk7YnJlYWs7Y2FzZSBvLlNVQlRSQUNUOmUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKGUuRlVOQ19SRVZFUlNFX1NVQlRSQUNULGUuRlVOQ19BREQpLGUuYmxlbmRGdW5jU2VwYXJhdGUoZS5TUkNfQUxQSEEsZS5PTkUsZS5PTkUsZS5PTkUpO2JyZWFrO2Nhc2Ugby5EQVJLRVNUOnRoaXMuYmxlbmRFeHQ/KGUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKHRoaXMuYmxlbmRFeHQuTUlOX0VYVCxlLkZVTkNfQUREKSxlLmJsZW5kRnVuY1NlcGFyYXRlKGUuT05FLGUuT05FLGUuT05FLGUuT05FKSk6Y29uc29sZS53YXJuKFwiYmxlbmRNb2RlKERBUktFU1QpIGRvZXMgbm90IHdvcmsgaW4geW91ciBicm93c2VyIGluIFdFQkdMIG1vZGUuXCIpO2JyZWFrO2Nhc2Ugby5MSUdIVEVTVDp0aGlzLmJsZW5kRXh0PyhlLmJsZW5kRXF1YXRpb25TZXBhcmF0ZSh0aGlzLmJsZW5kRXh0Lk1BWF9FWFQsZS5GVU5DX0FERCksZS5ibGVuZEZ1bmNTZXBhcmF0ZShlLk9ORSxlLk9ORSxlLk9ORSxlLk9ORSkpOmNvbnNvbGUud2FybihcImJsZW5kTW9kZShMSUdIVEVTVCkgZG9lcyBub3Qgd29yayBpbiB5b3VyIGJyb3dzZXIgaW4gV0VCR0wgbW9kZS5cIik7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKFwiT29wcyEgU29tZWhvdyBSZW5kZXJlckdMIHNldCBjdXJCbGVuZE1vZGUgdG8gYW4gdW5zdXBwb3J0ZWQgbW9kZS5cIil9dGhpcy5faXNFcmFzaW5nfHwodGhpcy5fY2FjaGVkQmxlbmRNb2RlPXRoaXMuY3VyQmxlbmRNb2RlKX19O3ZhciBpPXUuZGVmYXVsdDtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjQsXCIuL3A1LlRleHR1cmVcIjozMjAsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pblwiOjE1OX1dLDMxMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4seT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07eS5kZWZhdWx0LnByb3RvdHlwZS5jYW1lcmE9ZnVuY3Rpb24oKXt2YXIgZTt0aGlzLl9hc3NlcnQzZChcImNhbWVyYVwiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4geS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjYW1lcmFcIixyKSwoZT10aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhKS5jYW1lcmEuYXBwbHkoZSxyKSx0aGlzfSx5LmRlZmF1bHQucHJvdG90eXBlLnBlcnNwZWN0aXZlPWZ1bmN0aW9uKCl7dmFyIGU7dGhpcy5fYXNzZXJ0M2QoXCJwZXJzcGVjdGl2ZVwiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4geS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJwZXJzcGVjdGl2ZVwiLHIpLChlPXRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEpLnBlcnNwZWN0aXZlLmFwcGx5KGUsciksdGhpc30seS5kZWZhdWx0LnByb3RvdHlwZS5vcnRobz1mdW5jdGlvbigpe3ZhciBlO3RoaXMuX2Fzc2VydDNkKFwib3J0aG9cIik7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkodCksbj0wO248dDtuKyspcltuXT1hcmd1bWVudHNbbl07cmV0dXJuIHkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwib3J0aG9cIixyKSwoZT10aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhKS5vcnRoby5hcHBseShlLHIpLHRoaXN9LHkuZGVmYXVsdC5wcm90b3R5cGUuZnJ1c3R1bT1mdW5jdGlvbigpe3ZhciBlO3RoaXMuX2Fzc2VydDNkKFwiZnJ1c3R1bVwiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4geS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJmcnVzdHVtXCIsciksKGU9dGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYSkuZnJ1c3R1bS5hcHBseShlLHIpLHRoaXN9LHkuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlQ2FtZXJhPWZ1bmN0aW9uKCl7dGhpcy5fYXNzZXJ0M2QoXCJjcmVhdGVDYW1lcmFcIik7dmFyIGU9bmV3IHkuZGVmYXVsdC5DYW1lcmEodGhpcy5fcmVuZGVyZXIpO3JldHVybiBlLl9jb21wdXRlQ2FtZXJhRGVmYXVsdFNldHRpbmdzKCksZS5fc2V0RGVmYXVsdENhbWVyYSgpLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmE9ZX0seS5kZWZhdWx0LkNhbWVyYT1mdW5jdGlvbihlKXt0aGlzLl9yZW5kZXJlcj1lLHRoaXMuY2FtZXJhVHlwZT1cImRlZmF1bHRcIix0aGlzLmNhbWVyYU1hdHJpeD1uZXcgeS5kZWZhdWx0Lk1hdHJpeCx0aGlzLnByb2pNYXRyaXg9bmV3IHkuZGVmYXVsdC5NYXRyaXh9LHkuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLnBlcnNwZWN0aXZlPWZ1bmN0aW9uKGUsdCxyLG4pe3RoaXMuY2FtZXJhVHlwZT0wPGFyZ3VtZW50cy5sZW5ndGg/XCJjdXN0b21cIjpcImRlZmF1bHRcIix2b2lkIDA9PT1lPyhlPXRoaXMuZGVmYXVsdENhbWVyYUZPVix0aGlzLmNhbWVyYUZPVj1lKTp0aGlzLmNhbWVyYUZPVj10aGlzLl9yZW5kZXJlci5fcEluc3QuX3RvUmFkaWFucyhlKSx2b2lkIDA9PT10JiYodD10aGlzLmRlZmF1bHRBc3BlY3RSYXRpbyksdm9pZCAwPT09ciYmKHI9dGhpcy5kZWZhdWx0Q2FtZXJhTmVhciksdm9pZCAwPT09biYmKG49dGhpcy5kZWZhdWx0Q2FtZXJhRmFyKSxyPD0xZS00JiYocj0uMDEsY29uc29sZS5sb2coXCJBdm9pZCBwZXJzcGVjdGl2ZSBuZWFyIHBsYW5lIHZhbHVlcyBjbG9zZSB0byBvciBiZWxvdyAwLiBTZXR0aW5nIHZhbHVlIHRvIDAuMDEuXCIpKSxuPHImJmNvbnNvbGUubG9nKFwiUGVyc3BlY3RpdmUgZmFyIHBsYW5lIHZhbHVlIGlzIGxlc3MgdGhhbiBuZWFyIHBsYW5lIHZhbHVlLiBOb3RoaW5nIHdpbGwgYmUgc2hvd24uXCIpLHRoaXMuYXNwZWN0UmF0aW89dCx0aGlzLmNhbWVyYU5lYXI9cix0aGlzLmNhbWVyYUZhcj1uLHRoaXMucHJvak1hdHJpeD15LmRlZmF1bHQuTWF0cml4LmlkZW50aXR5KCk7dmFyIG89MS9NYXRoLnRhbih0aGlzLmNhbWVyYUZPVi8yKSxpPTEvKHRoaXMuY2FtZXJhTmVhci10aGlzLmNhbWVyYUZhcik7dGhpcy5wcm9qTWF0cml4LnNldChvL3QsMCwwLDAsMCwtbywwLDAsMCwwLChuK3IpKmksLTEsMCwwLDIqbipyKmksMCksdGhpcy5faXNBY3RpdmUoKSYmdGhpcy5fcmVuZGVyZXIudVBNYXRyaXguc2V0KHRoaXMucHJvak1hdHJpeC5tYXQ0WzBdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzFdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzJdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzNdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzRdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzVdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzZdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzddLHRoaXMucHJvak1hdHJpeC5tYXQ0WzhdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzldLHRoaXMucHJvak1hdHJpeC5tYXQ0WzEwXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxMV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTJdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzEzXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxNF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTVdKX0seS5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUub3J0aG89ZnVuY3Rpb24oZSx0LHIsbixvLGkpe3ZvaWQgMD09PWUmJihlPS10aGlzLl9yZW5kZXJlci53aWR0aC8yKSx2b2lkIDA9PT10JiYodD10aGlzLl9yZW5kZXJlci53aWR0aC8yKSx2b2lkIDA9PT1yJiYocj0tdGhpcy5fcmVuZGVyZXIuaGVpZ2h0LzIpLHZvaWQgMD09PW4mJihuPXRoaXMuX3JlbmRlcmVyLmhlaWdodC8yKSx2b2lkIDA9PT1vJiYobz0wKSx2b2lkIDA9PT1pJiYoaT1NYXRoLm1heCh0aGlzLl9yZW5kZXJlci53aWR0aCx0aGlzLl9yZW5kZXJlci5oZWlnaHQpKTt2YXIgYT10LWUscz1uLXIsbD1pLW8sdT0yL2EsYz0yL3MsZD0tMi9sLGY9LSh0K2UpL2EsaD0tKG4rcikvcyxwPS0oaStvKS9sO3RoaXMucHJvak1hdHJpeD15LmRlZmF1bHQuTWF0cml4LmlkZW50aXR5KCksdGhpcy5wcm9qTWF0cml4LnNldCh1LDAsMCwwLDAsLWMsMCwwLDAsMCxkLDAsZixoLHAsMSksdGhpcy5faXNBY3RpdmUoKSYmdGhpcy5fcmVuZGVyZXIudVBNYXRyaXguc2V0KHRoaXMucHJvak1hdHJpeC5tYXQ0WzBdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzFdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzJdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzNdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzRdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzVdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzZdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzddLHRoaXMucHJvak1hdHJpeC5tYXQ0WzhdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzldLHRoaXMucHJvak1hdHJpeC5tYXQ0WzEwXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxMV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTJdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzEzXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxNF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTVdKSx0aGlzLmNhbWVyYVR5cGU9XCJjdXN0b21cIn0seS5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUuZnJ1c3R1bT1mdW5jdGlvbihlLHQscixuLG8saSl7dm9pZCAwPT09ZSYmKGU9LXRoaXMuX3JlbmRlcmVyLndpZHRoLzIpLHZvaWQgMD09PXQmJih0PXRoaXMuX3JlbmRlcmVyLndpZHRoLzIpLHZvaWQgMD09PXImJihyPS10aGlzLl9yZW5kZXJlci5oZWlnaHQvMiksdm9pZCAwPT09biYmKG49dGhpcy5fcmVuZGVyZXIuaGVpZ2h0LzIpLHZvaWQgMD09PW8mJihvPTApLHZvaWQgMD09PWkmJihpPU1hdGgubWF4KHRoaXMuX3JlbmRlcmVyLndpZHRoLHRoaXMuX3JlbmRlcmVyLmhlaWdodCkpO3ZhciBhPXQtZSxzPW4tcixsPWktbyx1PTIqby9hLGM9MipvL3MsZD0tMippKm8vbCxmPSh0K2UpL2EsaD0obityKS9zLHA9LShpK28pL2w7dGhpcy5wcm9qTWF0cml4PXkuZGVmYXVsdC5NYXRyaXguaWRlbnRpdHkoKSx0aGlzLnByb2pNYXRyaXguc2V0KHUsMCwwLDAsMCxjLDAsMCxmLGgscCwtMSwwLDAsZCwwKSx0aGlzLl9pc0FjdGl2ZSgpJiZ0aGlzLl9yZW5kZXJlci51UE1hdHJpeC5zZXQodGhpcy5wcm9qTWF0cml4Lm1hdDRbMF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbM10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbN10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbOF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbOV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTBdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzExXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxMl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTNdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzE0XSx0aGlzLnByb2pNYXRyaXgubWF0NFsxNV0pLHRoaXMuY2FtZXJhVHlwZT1cImN1c3RvbVwifSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5fcm90YXRlVmlldz1mdW5jdGlvbihlLHQscixuKXt2YXIgbz10aGlzLmNlbnRlclgsaT10aGlzLmNlbnRlclksYT10aGlzLmNlbnRlclo7by09dGhpcy5leWVYLGktPXRoaXMuZXllWSxhLT10aGlzLmV5ZVo7dmFyIHM9eS5kZWZhdWx0Lk1hdHJpeC5pZGVudGl0eSh0aGlzLl9yZW5kZXJlci5fcEluc3QpO3Mucm90YXRlKHRoaXMuX3JlbmRlcmVyLl9wSW5zdC5fdG9SYWRpYW5zKGUpLHQscixuKTt2YXIgbD1bbypzLm1hdDRbMF0raSpzLm1hdDRbNF0rYSpzLm1hdDRbOF0sbypzLm1hdDRbMV0raSpzLm1hdDRbNV0rYSpzLm1hdDRbOV0sbypzLm1hdDRbMl0raSpzLm1hdDRbNl0rYSpzLm1hdDRbMTBdXTtsWzBdKz10aGlzLmV5ZVgsbFsxXSs9dGhpcy5leWVZLGxbMl0rPXRoaXMuZXllWix0aGlzLmNhbWVyYSh0aGlzLmV5ZVgsdGhpcy5leWVZLHRoaXMuZXllWixsWzBdLGxbMV0sbFsyXSx0aGlzLnVwWCx0aGlzLnVwWSx0aGlzLnVwWil9LHkuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLnBhbj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9nZXRMb2NhbEF4ZXMoKTt0aGlzLl9yb3RhdGVWaWV3KGUsdC55WzBdLHQueVsxXSx0LnlbMl0pfSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS50aWx0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldExvY2FsQXhlcygpO3RoaXMuX3JvdGF0ZVZpZXcoZSx0LnhbMF0sdC54WzFdLHQueFsyXSl9LHkuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLmxvb2tBdD1mdW5jdGlvbihlLHQscil7dGhpcy5jYW1lcmEodGhpcy5leWVYLHRoaXMuZXllWSx0aGlzLmV5ZVosZSx0LHIsdGhpcy51cFgsdGhpcy51cFksdGhpcy51cFopfSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5jYW1lcmE9ZnVuY3Rpb24oZSx0LHIsbixvLGksYSxzLGwpe3ZvaWQgMD09PWUmJihlPXRoaXMuZGVmYXVsdEV5ZVgsdD10aGlzLmRlZmF1bHRFeWVZLHI9dGhpcy5kZWZhdWx0RXllWixuPWUsbz10LHM9MSxsPWE9aT0wKSx0aGlzLmV5ZVg9ZSx0aGlzLmV5ZVk9dCx0aGlzLmV5ZVo9cix2b2lkIDAhPT1uJiYodGhpcy5jZW50ZXJYPW4sdGhpcy5jZW50ZXJZPW8sdGhpcy5jZW50ZXJaPWkpLHZvaWQgMCE9PWEmJih0aGlzLnVwWD1hLHRoaXMudXBZPXMsdGhpcy51cFo9bCk7dmFyIHU9dGhpcy5fZ2V0TG9jYWxBeGVzKCk7dGhpcy5jYW1lcmFNYXRyaXguc2V0KHUueFswXSx1LnlbMF0sdS56WzBdLDAsdS54WzFdLHUueVsxXSx1LnpbMV0sMCx1LnhbMl0sdS55WzJdLHUuelsyXSwwLDAsMCwwLDEpO3ZhciBjPS1lLGQ9LXQsZj0tcjtyZXR1cm4gdGhpcy5jYW1lcmFNYXRyaXgudHJhbnNsYXRlKFtjLGQsZl0pLHRoaXMuX2lzQWN0aXZlKCkmJnRoaXMuX3JlbmRlcmVyLnVNVk1hdHJpeC5zZXQodGhpcy5jYW1lcmFNYXRyaXgubWF0NFswXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzFdLHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbMl0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFszXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzRdLHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbNV0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFs2XSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzddLHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbOF0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFs5XSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzEwXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzExXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzEyXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzEzXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzE0XSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzE1XSksdGhpc30seS5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUubW92ZT1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5fZ2V0TG9jYWxBeGVzKCksbz1bbi54WzBdKmUsbi54WzFdKmUsbi54WzJdKmVdLGk9W24ueVswXSp0LG4ueVsxXSp0LG4ueVsyXSp0XSxhPVtuLnpbMF0qcixuLnpbMV0qcixuLnpbMl0qcl07dGhpcy5jYW1lcmEodGhpcy5leWVYK29bMF0raVswXSthWzBdLHRoaXMuZXllWStvWzFdK2lbMV0rYVsxXSx0aGlzLmV5ZVorb1syXStpWzJdK2FbMl0sdGhpcy5jZW50ZXJYK29bMF0raVswXSthWzBdLHRoaXMuY2VudGVyWStvWzFdK2lbMV0rYVsxXSx0aGlzLmNlbnRlclorb1syXStpWzJdK2FbMl0sMCwxLDApfSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5zZXRQb3NpdGlvbj1mdW5jdGlvbihlLHQscil7dmFyIG49ZS10aGlzLmV5ZVgsbz10LXRoaXMuZXllWSxpPXItdGhpcy5leWVaO3RoaXMuY2FtZXJhKGUsdCxyLHRoaXMuY2VudGVyWCtuLHRoaXMuY2VudGVyWStvLHRoaXMuY2VudGVyWitpLDAsMSwwKX0seS5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUuX2NvbXB1dGVDYW1lcmFEZWZhdWx0U2V0dGluZ3M9ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRDYW1lcmFGT1Y9NjAvMTgwKk1hdGguUEksdGhpcy5kZWZhdWx0QXNwZWN0UmF0aW89dGhpcy5fcmVuZGVyZXIud2lkdGgvdGhpcy5fcmVuZGVyZXIuaGVpZ2h0LHRoaXMuZGVmYXVsdEV5ZVg9MCx0aGlzLmRlZmF1bHRFeWVZPTAsdGhpcy5kZWZhdWx0RXllWj10aGlzLl9yZW5kZXJlci5oZWlnaHQvMi9NYXRoLnRhbih0aGlzLmRlZmF1bHRDYW1lcmFGT1YvMiksdGhpcy5kZWZhdWx0Q2VudGVyWD0wLHRoaXMuZGVmYXVsdENlbnRlclk9MCx0aGlzLmRlZmF1bHRDZW50ZXJaPTAsdGhpcy5kZWZhdWx0Q2FtZXJhTmVhcj0uMSp0aGlzLmRlZmF1bHRFeWVaLHRoaXMuZGVmYXVsdENhbWVyYUZhcj0xMCp0aGlzLmRlZmF1bHRFeWVafSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5fc2V0RGVmYXVsdENhbWVyYT1mdW5jdGlvbigpe3RoaXMuY2FtZXJhRk9WPXRoaXMuZGVmYXVsdENhbWVyYUZPVix0aGlzLmFzcGVjdFJhdGlvPXRoaXMuZGVmYXVsdEFzcGVjdFJhdGlvLHRoaXMuZXllWD10aGlzLmRlZmF1bHRFeWVYLHRoaXMuZXllWT10aGlzLmRlZmF1bHRFeWVZLHRoaXMuZXllWj10aGlzLmRlZmF1bHRFeWVaLHRoaXMuY2VudGVyWD10aGlzLmRlZmF1bHRDZW50ZXJYLHRoaXMuY2VudGVyWT10aGlzLmRlZmF1bHRDZW50ZXJZLHRoaXMuY2VudGVyWj10aGlzLmRlZmF1bHRDZW50ZXJaLHRoaXMudXBYPTAsdGhpcy51cFk9MSx0aGlzLnVwWj0wLHRoaXMuY2FtZXJhTmVhcj10aGlzLmRlZmF1bHRDYW1lcmFOZWFyLHRoaXMuY2FtZXJhRmFyPXRoaXMuZGVmYXVsdENhbWVyYUZhcix0aGlzLnBlcnNwZWN0aXZlKCksdGhpcy5jYW1lcmEoKSx0aGlzLmNhbWVyYVR5cGU9XCJkZWZhdWx0XCJ9LHkuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLl9yZXNpemU9ZnVuY3Rpb24oKXtcImRlZmF1bHRcIj09PXRoaXMuY2FtZXJhVHlwZT8odGhpcy5fY29tcHV0ZUNhbWVyYURlZmF1bHRTZXR0aW5ncygpLHRoaXMuX3NldERlZmF1bHRDYW1lcmEoKSk6dGhpcy5wZXJzcGVjdGl2ZSh0aGlzLmNhbWVyYUZPVix0aGlzLl9yZW5kZXJlci53aWR0aC90aGlzLl9yZW5kZXJlci5oZWlnaHQpfSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7dmFyIGU9bmV3IHkuZGVmYXVsdC5DYW1lcmEodGhpcy5fcmVuZGVyZXIpO3JldHVybiBlLmNhbWVyYUZPVj10aGlzLmNhbWVyYUZPVixlLmFzcGVjdFJhdGlvPXRoaXMuYXNwZWN0UmF0aW8sZS5leWVYPXRoaXMuZXllWCxlLmV5ZVk9dGhpcy5leWVZLGUuZXllWj10aGlzLmV5ZVosZS5jZW50ZXJYPXRoaXMuY2VudGVyWCxlLmNlbnRlclk9dGhpcy5jZW50ZXJZLGUuY2VudGVyWj10aGlzLmNlbnRlclosZS5jYW1lcmFOZWFyPXRoaXMuY2FtZXJhTmVhcixlLmNhbWVyYUZhcj10aGlzLmNhbWVyYUZhcixlLmNhbWVyYVR5cGU9dGhpcy5jYW1lcmFUeXBlLGUuY2FtZXJhTWF0cml4PXRoaXMuY2FtZXJhTWF0cml4LmNvcHkoKSxlLnByb2pNYXRyaXg9dGhpcy5wcm9qTWF0cml4LmNvcHkoKSxlfSx5LmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5fZ2V0TG9jYWxBeGVzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5leWVYLXRoaXMuY2VudGVyWCx0PXRoaXMuZXllWS10aGlzLmNlbnRlclkscj10aGlzLmV5ZVotdGhpcy5jZW50ZXJaLG49TWF0aC5zcXJ0KGUqZSt0KnQrcipyKTswIT09biYmKGUvPW4sdC89bixyLz1uKTt2YXIgbz10aGlzLnVwWCxpPXRoaXMudXBZLGE9dGhpcy51cFoscz1pKnItYSp0LGw9LW8qcithKmUsdT1vKnQtaSplO289dCp1LXIqbCxpPS1lKnUrcipzLGE9ZSpsLXQqczt2YXIgYz1NYXRoLnNxcnQocypzK2wqbCt1KnUpOzAhPT1jJiYocy89YyxsLz1jLHUvPWMpO3ZhciBkPU1hdGguc3FydChvKm8raSppK2EqYSk7cmV0dXJuIDAhPT1kJiYoby89ZCxpLz1kLGEvPWQpLHt4OltzLGwsdV0seTpbbyxpLGFdLHo6W2UsdCxyXX19LHkuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLl9vcmJpdD1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5leWVYLXRoaXMuY2VudGVyWCxvPXRoaXMuZXllWS10aGlzLmNlbnRlclksaT10aGlzLmV5ZVotdGhpcy5jZW50ZXJaLGE9TWF0aC5zcXJ0KG4qbitvKm8raSppKSxzPU1hdGguYXRhbjIobixpKSxsPU1hdGguYWNvcyhNYXRoLm1heCgtMSxNYXRoLm1pbigxLG8vYSkpKTtzKz1lLChhKz1yKTwwJiYoYT0uMSksKGwrPXQpPk1hdGguUEk/bD1NYXRoLlBJOmw8PTAmJihsPS4wMDEpO3ZhciB1PU1hdGguc2luKGwpKmEqTWF0aC5zaW4ocyksYz1NYXRoLmNvcyhsKSphLGQ9TWF0aC5zaW4obCkqYSpNYXRoLmNvcyhzKTt0aGlzLmNhbWVyYSh1K3RoaXMuY2VudGVyWCxjK3RoaXMuY2VudGVyWSxkK3RoaXMuY2VudGVyWix0aGlzLmNlbnRlclgsdGhpcy5jZW50ZXJZLHRoaXMuY2VudGVyWiwwLDEsMCl9LHkuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLl9pc0FjdGl2ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzPT09dGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYX0seS5kZWZhdWx0LnByb3RvdHlwZS5zZXRDYW1lcmE9ZnVuY3Rpb24oZSl7dGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYT1lLHRoaXMuX3JlbmRlcmVyLnVQTWF0cml4LnNldChlLnByb2pNYXRyaXgubWF0NFswXSxlLnByb2pNYXRyaXgubWF0NFsxXSxlLnByb2pNYXRyaXgubWF0NFsyXSxlLnByb2pNYXRyaXgubWF0NFszXSxlLnByb2pNYXRyaXgubWF0NFs0XSxlLnByb2pNYXRyaXgubWF0NFs1XSxlLnByb2pNYXRyaXgubWF0NFs2XSxlLnByb2pNYXRyaXgubWF0NFs3XSxlLnByb2pNYXRyaXgubWF0NFs4XSxlLnByb2pNYXRyaXgubWF0NFs5XSxlLnByb2pNYXRyaXgubWF0NFsxMF0sZS5wcm9qTWF0cml4Lm1hdDRbMTFdLGUucHJvak1hdHJpeC5tYXQ0WzEyXSxlLnByb2pNYXRyaXgubWF0NFsxM10sZS5wcm9qTWF0cml4Lm1hdDRbMTRdLGUucHJvak1hdHJpeC5tYXQ0WzE1XSl9O3ZhciBvPXkuZGVmYXVsdC5DYW1lcmE7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjI2NH1dLDMxMzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YlwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGM9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2MuZGVmYXVsdC5HZW9tZXRyeT1mdW5jdGlvbihlLHQscil7cmV0dXJuIHRoaXMudmVydGljZXM9W10sdGhpcy5saW5lVmVydGljZXM9W10sdGhpcy5saW5lTm9ybWFscz1bXSx0aGlzLnZlcnRleE5vcm1hbHM9W10sdGhpcy5mYWNlcz1bXSx0aGlzLnV2cz1bXSx0aGlzLmVkZ2VzPVtdLHRoaXMudmVydGV4Q29sb3JzPVtdLHRoaXMuZGV0YWlsWD12b2lkIDAhPT1lP2U6MSx0aGlzLmRldGFpbFk9dm9pZCAwIT09dD90OjEsdGhpcy5kaXJ0eUZsYWdzPXt9LHIgaW5zdGFuY2VvZiBGdW5jdGlvbiYmci5jYWxsKHRoaXMpLHRoaXN9LGMuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmxpbmVWZXJ0aWNlcy5sZW5ndGg9MCx0aGlzLmxpbmVOb3JtYWxzLmxlbmd0aD0wLHRoaXMudmVydGljZXMubGVuZ3RoPTAsdGhpcy5lZGdlcy5sZW5ndGg9MCx0aGlzLnZlcnRleENvbG9ycy5sZW5ndGg9MCx0aGlzLnZlcnRleE5vcm1hbHMubGVuZ3RoPTAsdGhpcy51dnMubGVuZ3RoPTAsdGhpcy5kaXJ0eUZsYWdzPXt9fSxjLmRlZmF1bHQuR2VvbWV0cnkucHJvdG90eXBlLmNvbXB1dGVGYWNlcz1mdW5jdGlvbigpe3RoaXMuZmFjZXMubGVuZ3RoPTA7Zm9yKHZhciBlLHQscixuLG89dGhpcy5kZXRhaWxYKzEsaT0wO2k8dGhpcy5kZXRhaWxZO2krKylmb3IodmFyIGE9MDthPHRoaXMuZGV0YWlsWDthKyspdD0oZT1pKm8rYSkrMSxyPShpKzEpKm8rYSsxLG49KGkrMSkqbythLHRoaXMuZmFjZXMucHVzaChbZSx0LG5dKSx0aGlzLmZhY2VzLnB1c2goW24sdCxyXSk7cmV0dXJuIHRoaXN9LGMuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUuX2dldEZhY2VOb3JtYWw9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5mYWNlc1tlXSxyPXRoaXMudmVydGljZXNbdFswXV0sbj10aGlzLnZlcnRpY2VzW3RbMV1dLG89dGhpcy52ZXJ0aWNlc1t0WzJdXSxpPWMuZGVmYXVsdC5WZWN0b3Iuc3ViKG4sciksYT1jLmRlZmF1bHQuVmVjdG9yLnN1YihvLHIpLHM9Yy5kZWZhdWx0LlZlY3Rvci5jcm9zcyhpLGEpLGw9Yy5kZWZhdWx0LlZlY3Rvci5tYWcocyksdT1sLyhjLmRlZmF1bHQuVmVjdG9yLm1hZyhpKSpjLmRlZmF1bHQuVmVjdG9yLm1hZyhhKSk7cmV0dXJuIDA9PT11fHxpc05hTih1KT8oY29uc29sZS53YXJuKFwicDUuR2VvbWV0cnkucHJvdG90eXBlLl9nZXRGYWNlTm9ybWFsOlwiLFwiZmFjZSBoYXMgY29saW5lYXIgc2lkZXMgb3IgYSByZXBlYXRlZCB2ZXJ0ZXhcIikscyk6KDE8dSYmKHU9MSkscy5tdWx0KE1hdGguYXNpbih1KS9sKSl9LGMuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUuY29tcHV0ZU5vcm1hbHM9ZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMudmVydGV4Tm9ybWFscyxyPXRoaXMudmVydGljZXMsbj10aGlzLmZhY2VzO2ZvcihlPXQubGVuZ3RoPTA7ZTxyLmxlbmd0aDsrK2UpdC5wdXNoKG5ldyBjLmRlZmF1bHQuVmVjdG9yKTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoOysrbylmb3IodmFyIGk9bltvXSxhPXRoaXMuX2dldEZhY2VOb3JtYWwobykscz0wO3M8MzsrK3Mpe3RbaVtzXV0uYWRkKGEpfWZvcihlPTA7ZTxyLmxlbmd0aDsrK2UpdFtlXS5ub3JtYWxpemUoKTtyZXR1cm4gdGhpc30sYy5kZWZhdWx0Lkdlb21ldHJ5LnByb3RvdHlwZS5hdmVyYWdlTm9ybWFscz1mdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8PXRoaXMuZGV0YWlsWTtlKyspe3ZhciB0PXRoaXMuZGV0YWlsWCsxLHI9Yy5kZWZhdWx0LlZlY3Rvci5hZGQodGhpcy52ZXJ0ZXhOb3JtYWxzW2UqdF0sdGhpcy52ZXJ0ZXhOb3JtYWxzW2UqdCt0aGlzLmRldGFpbFhdKTtyPWMuZGVmYXVsdC5WZWN0b3IuZGl2KHIsMiksdGhpcy52ZXJ0ZXhOb3JtYWxzW2UqdF09cix0aGlzLnZlcnRleE5vcm1hbHNbZSp0K3RoaXMuZGV0YWlsWF09cn1yZXR1cm4gdGhpc30sYy5kZWZhdWx0Lkdlb21ldHJ5LnByb3RvdHlwZS5hdmVyYWdlUG9sZU5vcm1hbHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9bmV3IGMuZGVmYXVsdC5WZWN0b3IoMCwwLDApLHQ9MDt0PHRoaXMuZGV0YWlsWDt0KyspZS5hZGQodGhpcy52ZXJ0ZXhOb3JtYWxzW3RdKTtlPWMuZGVmYXVsdC5WZWN0b3IuZGl2KGUsdGhpcy5kZXRhaWxYKTtmb3IodmFyIHI9MDtyPHRoaXMuZGV0YWlsWDtyKyspdGhpcy52ZXJ0ZXhOb3JtYWxzW3JdPWU7ZT1uZXcgYy5kZWZhdWx0LlZlY3RvcigwLDAsMCk7Zm9yKHZhciBuPXRoaXMudmVydGljZXMubGVuZ3RoLTE7bj50aGlzLnZlcnRpY2VzLmxlbmd0aC0xLXRoaXMuZGV0YWlsWDtuLS0pZS5hZGQodGhpcy52ZXJ0ZXhOb3JtYWxzW25dKTtlPWMuZGVmYXVsdC5WZWN0b3IuZGl2KGUsdGhpcy5kZXRhaWxYKTtmb3IodmFyIG89dGhpcy52ZXJ0aWNlcy5sZW5ndGgtMTtvPnRoaXMudmVydGljZXMubGVuZ3RoLTEtdGhpcy5kZXRhaWxYO28tLSl0aGlzLnZlcnRleE5vcm1hbHNbb109ZTtyZXR1cm4gdGhpc30sYy5kZWZhdWx0Lkdlb21ldHJ5LnByb3RvdHlwZS5fbWFrZVRyaWFuZ2xlRWRnZXM9ZnVuY3Rpb24oKXtpZih0aGlzLmVkZ2VzLmxlbmd0aD0wLEFycmF5LmlzQXJyYXkodGhpcy5zdHJva2VJbmRpY2VzKSlmb3IodmFyIGU9MCx0PXRoaXMuc3Ryb2tlSW5kaWNlcy5sZW5ndGg7ZTx0O2UrKyl0aGlzLmVkZ2VzLnB1c2godGhpcy5zdHJva2VJbmRpY2VzW2VdKTtlbHNlIGZvcih2YXIgcj0wO3I8dGhpcy5mYWNlcy5sZW5ndGg7cisrKXRoaXMuZWRnZXMucHVzaChbdGhpcy5mYWNlc1tyXVswXSx0aGlzLmZhY2VzW3JdWzFdXSksdGhpcy5lZGdlcy5wdXNoKFt0aGlzLmZhY2VzW3JdWzFdLHRoaXMuZmFjZXNbcl1bMl1dKSx0aGlzLmVkZ2VzLnB1c2goW3RoaXMuZmFjZXNbcl1bMl0sdGhpcy5mYWNlc1tyXVswXV0pO3JldHVybiB0aGlzfSxjLmRlZmF1bHQuR2VvbWV0cnkucHJvdG90eXBlLl9lZGdlc1RvVmVydGljZXM9ZnVuY3Rpb24oKXt0aGlzLmxpbmVWZXJ0aWNlcy5sZW5ndGg9MDtmb3IodmFyIGU9dGhpcy5saW5lTm9ybWFscy5sZW5ndGg9MDtlPHRoaXMuZWRnZXMubGVuZ3RoO2UrKyl7dmFyIHQ9dGhpcy52ZXJ0aWNlc1t0aGlzLmVkZ2VzW2VdWzBdXSxyPXRoaXMudmVydGljZXNbdGhpcy5lZGdlc1tlXVsxXV0sbj1yLmNvcHkoKS5zdWIodCkubm9ybWFsaXplKCksbz10LmFycmF5KCksaT10LmFycmF5KCksYT1yLmFycmF5KCkscz1yLmFycmF5KCksbD1uLmFycmF5KCksdT1uLmFycmF5KCk7bC5wdXNoKDEpLHUucHVzaCgtMSksdGhpcy5saW5lTm9ybWFscy5wdXNoKGwsdSxsLGwsdSx1KSx0aGlzLmxpbmVWZXJ0aWNlcy5wdXNoKG8saSxhLGEsaSxzKX1yZXR1cm4gdGhpc30sYy5kZWZhdWx0Lkdlb21ldHJ5LnByb3RvdHlwZS5ub3JtYWxpemU9ZnVuY3Rpb24oKXtpZigwPHRoaXMudmVydGljZXMubGVuZ3RoKXtmb3IodmFyIGU9dGhpcy52ZXJ0aWNlc1swXS5jb3B5KCksdD10aGlzLnZlcnRpY2VzWzBdLmNvcHkoKSxyPTA7cjx0aGlzLnZlcnRpY2VzLmxlbmd0aDtyKyspZS54PU1hdGgubWF4KGUueCx0aGlzLnZlcnRpY2VzW3JdLngpLHQueD1NYXRoLm1pbih0LngsdGhpcy52ZXJ0aWNlc1tyXS54KSxlLnk9TWF0aC5tYXgoZS55LHRoaXMudmVydGljZXNbcl0ueSksdC55PU1hdGgubWluKHQueSx0aGlzLnZlcnRpY2VzW3JdLnkpLGUuej1NYXRoLm1heChlLnosdGhpcy52ZXJ0aWNlc1tyXS56KSx0Lno9TWF0aC5taW4odC56LHRoaXMudmVydGljZXNbcl0ueik7Zm9yKHZhciBuPWMuZGVmYXVsdC5WZWN0b3IubGVycChlLHQsLjUpLG89Yy5kZWZhdWx0LlZlY3Rvci5zdWIoZSx0KSxpPTIwMC9NYXRoLm1heChNYXRoLm1heChvLngsby55KSxvLnopLGE9MDthPHRoaXMudmVydGljZXMubGVuZ3RoO2ErKyl0aGlzLnZlcnRpY2VzW2FdLnN1YihuKSx0aGlzLnZlcnRpY2VzW2FdLm11bHQoaSl9cmV0dXJuIHRoaXN9O3ZhciBvPWMuZGVmYXVsdC5HZW9tZXRyeTtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdWJcIjoxOTJ9XSwzMTQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZsb2F0MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sTD0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07dmFyIG89QXJyYXksUD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEFycmF5fTtcInVuZGVmaW5lZFwiIT10eXBlb2YgRmxvYXQzMkFycmF5JiYobz1GbG9hdDMyQXJyYXksUD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEFycmF5fHxlIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fSksTC5kZWZhdWx0Lk1hdHJpeD1mdW5jdGlvbigpe2Zvcih2YXIgZT1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCksdD0wO3Q8ZS5sZW5ndGg7Kyt0KWVbdF09YXJndW1lbnRzW3RdO3JldHVybiBlLmxlbmd0aCYmZVtlLmxlbmd0aC0xXWluc3RhbmNlb2YgTC5kZWZhdWx0JiYodGhpcy5wNT1lW2UubGVuZ3RoLTFdKSxcIm1hdDNcIj09PWVbMF0/dGhpcy5tYXQzPUFycmF5LmlzQXJyYXkoZVsxXSk/ZVsxXTpuZXcgbyhbMSwwLDAsMCwxLDAsMCwwLDFdKTp0aGlzLm1hdDQ9QXJyYXkuaXNBcnJheShlWzBdKT9lWzBdOm5ldyBvKFsxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwxXSksdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgTC5kZWZhdWx0Lk1hdHJpeD90aGlzLm1hdDQ9ZS5tYXQ0OlAoZSk/dGhpcy5tYXQ0PWU6MTY9PT1hcmd1bWVudHMubGVuZ3RoJiYodGhpcy5tYXQ0WzBdPWUsdGhpcy5tYXQ0WzFdPWFyZ3VtZW50c1sxXSx0aGlzLm1hdDRbMl09YXJndW1lbnRzWzJdLHRoaXMubWF0NFszXT1hcmd1bWVudHNbM10sdGhpcy5tYXQ0WzRdPWFyZ3VtZW50c1s0XSx0aGlzLm1hdDRbNV09YXJndW1lbnRzWzVdLHRoaXMubWF0NFs2XT1hcmd1bWVudHNbNl0sdGhpcy5tYXQ0WzddPWFyZ3VtZW50c1s3XSx0aGlzLm1hdDRbOF09YXJndW1lbnRzWzhdLHRoaXMubWF0NFs5XT1hcmd1bWVudHNbOV0sdGhpcy5tYXQ0WzEwXT1hcmd1bWVudHNbMTBdLHRoaXMubWF0NFsxMV09YXJndW1lbnRzWzExXSx0aGlzLm1hdDRbMTJdPWFyZ3VtZW50c1sxMl0sdGhpcy5tYXQ0WzEzXT1hcmd1bWVudHNbMTNdLHRoaXMubWF0NFsxNF09YXJndW1lbnRzWzE0XSx0aGlzLm1hdDRbMTVdPWFyZ3VtZW50c1sxNV0pLHRoaXN9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe3JldHVybiBuZXcgTC5kZWZhdWx0Lk1hdHJpeCh0aGlzLm1hdDQsdGhpcy5wNSl9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgTC5kZWZhdWx0Lk1hdHJpeCh0aGlzLnA1KTtyZXR1cm4gZS5tYXQ0WzBdPXRoaXMubWF0NFswXSxlLm1hdDRbMV09dGhpcy5tYXQ0WzFdLGUubWF0NFsyXT10aGlzLm1hdDRbMl0sZS5tYXQ0WzNdPXRoaXMubWF0NFszXSxlLm1hdDRbNF09dGhpcy5tYXQ0WzRdLGUubWF0NFs1XT10aGlzLm1hdDRbNV0sZS5tYXQ0WzZdPXRoaXMubWF0NFs2XSxlLm1hdDRbN109dGhpcy5tYXQ0WzddLGUubWF0NFs4XT10aGlzLm1hdDRbOF0sZS5tYXQ0WzldPXRoaXMubWF0NFs5XSxlLm1hdDRbMTBdPXRoaXMubWF0NFsxMF0sZS5tYXQ0WzExXT10aGlzLm1hdDRbMTFdLGUubWF0NFsxMl09dGhpcy5tYXQ0WzEyXSxlLm1hdDRbMTNdPXRoaXMubWF0NFsxM10sZS5tYXQ0WzE0XT10aGlzLm1hdDRbMTRdLGUubWF0NFsxNV09dGhpcy5tYXQ0WzE1XSxlfSxMLmRlZmF1bHQuTWF0cml4LmlkZW50aXR5PWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgTC5kZWZhdWx0Lk1hdHJpeChlKX0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUudHJhbnNwb3NlPWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixvLGksYTtyZXR1cm4gZSBpbnN0YW5jZW9mIEwuZGVmYXVsdC5NYXRyaXg/KHQ9ZS5tYXQ0WzFdLHI9ZS5tYXQ0WzJdLG49ZS5tYXQ0WzNdLG89ZS5tYXQ0WzZdLGk9ZS5tYXQ0WzddLGE9ZS5tYXQ0WzExXSx0aGlzLm1hdDRbMF09ZS5tYXQ0WzBdLHRoaXMubWF0NFsxXT1lLm1hdDRbNF0sdGhpcy5tYXQ0WzJdPWUubWF0NFs4XSx0aGlzLm1hdDRbM109ZS5tYXQ0WzEyXSx0aGlzLm1hdDRbNF09dCx0aGlzLm1hdDRbNV09ZS5tYXQ0WzVdLHRoaXMubWF0NFs2XT1lLm1hdDRbOV0sdGhpcy5tYXQ0WzddPWUubWF0NFsxM10sdGhpcy5tYXQ0WzhdPXIsdGhpcy5tYXQ0WzldPW8sdGhpcy5tYXQ0WzEwXT1lLm1hdDRbMTBdLHRoaXMubWF0NFsxMV09ZS5tYXQ0WzE0XSx0aGlzLm1hdDRbMTJdPW4sdGhpcy5tYXQ0WzEzXT1pLHRoaXMubWF0NFsxNF09YSx0aGlzLm1hdDRbMTVdPWUubWF0NFsxNV0pOlAoZSkmJih0PWVbMV0scj1lWzJdLG49ZVszXSxvPWVbNl0saT1lWzddLGE9ZVsxMV0sdGhpcy5tYXQ0WzBdPWVbMF0sdGhpcy5tYXQ0WzFdPWVbNF0sdGhpcy5tYXQ0WzJdPWVbOF0sdGhpcy5tYXQ0WzNdPWVbMTJdLHRoaXMubWF0NFs0XT10LHRoaXMubWF0NFs1XT1lWzVdLHRoaXMubWF0NFs2XT1lWzldLHRoaXMubWF0NFs3XT1lWzEzXSx0aGlzLm1hdDRbOF09cix0aGlzLm1hdDRbOV09byx0aGlzLm1hdDRbMTBdPWVbMTBdLHRoaXMubWF0NFsxMV09ZVsxNF0sdGhpcy5tYXQ0WzEyXT1uLHRoaXMubWF0NFsxM109aSx0aGlzLm1hdDRbMTRdPWEsdGhpcy5tYXQ0WzE1XT1lWzE1XSksdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuaW52ZXJ0PWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixvLGksYSxzLGwsdSxjLGQsZixoLHAseSxtO2UgaW5zdGFuY2VvZiBMLmRlZmF1bHQuTWF0cml4Pyh0PWUubWF0NFswXSxyPWUubWF0NFsxXSxuPWUubWF0NFsyXSxvPWUubWF0NFszXSxpPWUubWF0NFs0XSxhPWUubWF0NFs1XSxzPWUubWF0NFs2XSxsPWUubWF0NFs3XSx1PWUubWF0NFs4XSxjPWUubWF0NFs5XSxkPWUubWF0NFsxMF0sZj1lLm1hdDRbMTFdLGg9ZS5tYXQ0WzEyXSxwPWUubWF0NFsxM10seT1lLm1hdDRbMTRdLG09ZS5tYXQ0WzE1XSk6UChlKSYmKHQ9ZVswXSxyPWVbMV0sbj1lWzJdLG89ZVszXSxpPWVbNF0sYT1lWzVdLHM9ZVs2XSxsPWVbN10sdT1lWzhdLGM9ZVs5XSxkPWVbMTBdLGY9ZVsxMV0saD1lWzEyXSxwPWVbMTNdLHk9ZVsxNF0sbT1lWzE1XSk7dmFyIGc9dCphLXIqaSx2PXQqcy1uKmksYj10KmwtbyppLF89cipzLW4qYSx4PXIqbC1vKmEsdz1uKmwtbypzLGo9dSpwLWMqaCxTPXUqeS1kKmgsTT11Km0tZipoLEU9Yyp5LWQqcCxUPWMqbS1mKnAsTz1kKm0tZip5LEM9ZypPLXYqVCtiKkUrXypNLXgqUyt3Kmo7cmV0dXJuIEM/KEM9MS9DLHRoaXMubWF0NFswXT0oYSpPLXMqVCtsKkUpKkMsdGhpcy5tYXQ0WzFdPShuKlQtcipPLW8qRSkqQyx0aGlzLm1hdDRbMl09KHAqdy15KngrbSpfKSpDLHRoaXMubWF0NFszXT0oZCp4LWMqdy1mKl8pKkMsdGhpcy5tYXQ0WzRdPShzKk0taSpPLWwqUykqQyx0aGlzLm1hdDRbNV09KHQqTy1uKk0rbypTKSpDLHRoaXMubWF0NFs2XT0oeSpiLWgqdy1tKnYpKkMsdGhpcy5tYXQ0WzddPSh1KnctZCpiK2YqdikqQyx0aGlzLm1hdDRbOF09KGkqVC1hKk0rbCpqKSpDLHRoaXMubWF0NFs5XT0ocipNLXQqVC1vKmopKkMsdGhpcy5tYXQ0WzEwXT0oaCp4LXAqYittKmcpKkMsdGhpcy5tYXQ0WzExXT0oYypiLXUqeC1mKmcpKkMsdGhpcy5tYXQ0WzEyXT0oYSpTLWkqRS1zKmopKkMsdGhpcy5tYXQ0WzEzXT0odCpFLXIqUytuKmopKkMsdGhpcy5tYXQ0WzE0XT0ocCp2LWgqXy15KmcpKkMsdGhpcy5tYXQ0WzE1XT0odSpfLWMqditkKmcpKkMsdGhpcyk6bnVsbH0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuaW52ZXJ0M3gzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5tYXQzWzBdLHQ9dGhpcy5tYXQzWzFdLHI9dGhpcy5tYXQzWzJdLG49dGhpcy5tYXQzWzNdLG89dGhpcy5tYXQzWzRdLGk9dGhpcy5tYXQzWzVdLGE9dGhpcy5tYXQzWzZdLHM9dGhpcy5tYXQzWzddLGw9dGhpcy5tYXQzWzhdLHU9bCpvLWkqcyxjPS1sKm4raSphLGQ9cypuLW8qYSxmPWUqdSt0KmMrcipkO3JldHVybiBmPyhmPTEvZix0aGlzLm1hdDNbMF09dSpmLHRoaXMubWF0M1sxXT0oLWwqdCtyKnMpKmYsdGhpcy5tYXQzWzJdPShpKnQtcipvKSpmLHRoaXMubWF0M1szXT1jKmYsdGhpcy5tYXQzWzRdPShsKmUtciphKSpmLHRoaXMubWF0M1s1XT0oLWkqZStyKm4pKmYsdGhpcy5tYXQzWzZdPWQqZix0aGlzLm1hdDNbN109KC1zKmUrdCphKSpmLHRoaXMubWF0M1s4XT0obyplLXQqbikqZix0aGlzKTpudWxsfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS50cmFuc3Bvc2UzeDM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVsxXSxyPWVbMl0sbj1lWzVdO3JldHVybiB0aGlzLm1hdDNbMV09ZVszXSx0aGlzLm1hdDNbMl09ZVs2XSx0aGlzLm1hdDNbM109dCx0aGlzLm1hdDNbNV09ZVs3XSx0aGlzLm1hdDNbNl09cix0aGlzLm1hdDNbN109bix0aGlzfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5pbnZlcnNlVHJhbnNwb3NlPWZ1bmN0aW9uKGUpe3ZvaWQgMD09PXRoaXMubWF0Mz9jb25zb2xlLmVycm9yKFwic29ycnksIHRoaXMgZnVuY3Rpb24gb25seSB3b3JrcyB3aXRoIG1hdDNcIik6KHRoaXMubWF0M1swXT1lLm1hdDRbMF0sdGhpcy5tYXQzWzFdPWUubWF0NFsxXSx0aGlzLm1hdDNbMl09ZS5tYXQ0WzJdLHRoaXMubWF0M1szXT1lLm1hdDRbNF0sdGhpcy5tYXQzWzRdPWUubWF0NFs1XSx0aGlzLm1hdDNbNV09ZS5tYXQ0WzZdLHRoaXMubWF0M1s2XT1lLm1hdDRbOF0sdGhpcy5tYXQzWzddPWUubWF0NFs5XSx0aGlzLm1hdDNbOF09ZS5tYXQ0WzEwXSk7dmFyIHQ9dGhpcy5pbnZlcnQzeDMoKTtpZih0KXQudHJhbnNwb3NlM3gzKHRoaXMubWF0Myk7ZWxzZSBmb3IodmFyIHI9MDtyPDk7cisrKXRoaXMubWF0M1tyXT0wO3JldHVybiB0aGlzfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5kZXRlcm1pbmFudD1mdW5jdGlvbigpe3ZhciBlPXRoaXMubWF0NFswXSp0aGlzLm1hdDRbNV0tdGhpcy5tYXQ0WzFdKnRoaXMubWF0NFs0XSx0PXRoaXMubWF0NFswXSp0aGlzLm1hdDRbNl0tdGhpcy5tYXQ0WzJdKnRoaXMubWF0NFs0XSxyPXRoaXMubWF0NFswXSp0aGlzLm1hdDRbN10tdGhpcy5tYXQ0WzNdKnRoaXMubWF0NFs0XSxuPXRoaXMubWF0NFsxXSp0aGlzLm1hdDRbNl0tdGhpcy5tYXQ0WzJdKnRoaXMubWF0NFs1XSxvPXRoaXMubWF0NFsxXSp0aGlzLm1hdDRbN10tdGhpcy5tYXQ0WzNdKnRoaXMubWF0NFs1XSxpPXRoaXMubWF0NFsyXSp0aGlzLm1hdDRbN10tdGhpcy5tYXQ0WzNdKnRoaXMubWF0NFs2XSxhPXRoaXMubWF0NFs4XSp0aGlzLm1hdDRbMTNdLXRoaXMubWF0NFs5XSp0aGlzLm1hdDRbMTJdLHM9dGhpcy5tYXQ0WzhdKnRoaXMubWF0NFsxNF0tdGhpcy5tYXQ0WzEwXSp0aGlzLm1hdDRbMTJdLGw9dGhpcy5tYXQ0WzhdKnRoaXMubWF0NFsxNV0tdGhpcy5tYXQ0WzExXSp0aGlzLm1hdDRbMTJdLHU9dGhpcy5tYXQ0WzldKnRoaXMubWF0NFsxNF0tdGhpcy5tYXQ0WzEwXSp0aGlzLm1hdDRbMTNdLGM9dGhpcy5tYXQ0WzldKnRoaXMubWF0NFsxNV0tdGhpcy5tYXQ0WzExXSp0aGlzLm1hdDRbMTNdO3JldHVybiBlKih0aGlzLm1hdDRbMTBdKnRoaXMubWF0NFsxNV0tdGhpcy5tYXQ0WzExXSp0aGlzLm1hdDRbMTRdKS10KmMrcip1K24qbC1vKnMraSphfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5tdWx0PWZ1bmN0aW9uKGUpe3ZhciB0O2lmKGU9PT10aGlzfHxlPT09dGhpcy5tYXQ0KXQ9dGhpcy5jb3B5KCkubWF0NDtlbHNlIGlmKGUgaW5zdGFuY2VvZiBMLmRlZmF1bHQuTWF0cml4KXQ9ZS5tYXQ0O2Vsc2UgaWYoUChlKSl0PWU7ZWxzZXtpZigxNiE9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuO3Q9YXJndW1lbnRzfXZhciByPXRoaXMubWF0NFswXSxuPXRoaXMubWF0NFsxXSxvPXRoaXMubWF0NFsyXSxpPXRoaXMubWF0NFszXTtyZXR1cm4gdGhpcy5tYXQ0WzBdPXIqdFswXStuKnRbNF0rbyp0WzhdK2kqdFsxMl0sdGhpcy5tYXQ0WzFdPXIqdFsxXStuKnRbNV0rbyp0WzldK2kqdFsxM10sdGhpcy5tYXQ0WzJdPXIqdFsyXStuKnRbNl0rbyp0WzEwXStpKnRbMTRdLHRoaXMubWF0NFszXT1yKnRbM10rbip0WzddK28qdFsxMV0raSp0WzE1XSxyPXRoaXMubWF0NFs0XSxuPXRoaXMubWF0NFs1XSxvPXRoaXMubWF0NFs2XSxpPXRoaXMubWF0NFs3XSx0aGlzLm1hdDRbNF09cip0WzBdK24qdFs0XStvKnRbOF0raSp0WzEyXSx0aGlzLm1hdDRbNV09cip0WzFdK24qdFs1XStvKnRbOV0raSp0WzEzXSx0aGlzLm1hdDRbNl09cip0WzJdK24qdFs2XStvKnRbMTBdK2kqdFsxNF0sdGhpcy5tYXQ0WzddPXIqdFszXStuKnRbN10rbyp0WzExXStpKnRbMTVdLHI9dGhpcy5tYXQ0WzhdLG49dGhpcy5tYXQ0WzldLG89dGhpcy5tYXQ0WzEwXSxpPXRoaXMubWF0NFsxMV0sdGhpcy5tYXQ0WzhdPXIqdFswXStuKnRbNF0rbyp0WzhdK2kqdFsxMl0sdGhpcy5tYXQ0WzldPXIqdFsxXStuKnRbNV0rbyp0WzldK2kqdFsxM10sdGhpcy5tYXQ0WzEwXT1yKnRbMl0rbip0WzZdK28qdFsxMF0raSp0WzE0XSx0aGlzLm1hdDRbMTFdPXIqdFszXStuKnRbN10rbyp0WzExXStpKnRbMTVdLHI9dGhpcy5tYXQ0WzEyXSxuPXRoaXMubWF0NFsxM10sbz10aGlzLm1hdDRbMTRdLGk9dGhpcy5tYXQ0WzE1XSx0aGlzLm1hdDRbMTJdPXIqdFswXStuKnRbNF0rbyp0WzhdK2kqdFsxMl0sdGhpcy5tYXQ0WzEzXT1yKnRbMV0rbip0WzVdK28qdFs5XStpKnRbMTNdLHRoaXMubWF0NFsxNF09cip0WzJdK24qdFs2XStvKnRbMTBdK2kqdFsxNF0sdGhpcy5tYXQ0WzE1XT1yKnRbM10rbip0WzddK28qdFsxMV0raSp0WzE1XSx0aGlzfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbihlKXt2YXIgdDtpZihlPT09dGhpc3x8ZT09PXRoaXMubWF0NCl0PXRoaXMuY29weSgpLm1hdDQ7ZWxzZSBpZihlIGluc3RhbmNlb2YgTC5kZWZhdWx0Lk1hdHJpeCl0PWUubWF0NDtlbHNlIGlmKFAoZSkpdD1lO2Vsc2V7aWYoMTYhPT1hcmd1bWVudHMubGVuZ3RoKXJldHVybjt0PWFyZ3VtZW50c312YXIgcj10aGlzLm1hdDQsbj1yWzBdLG89cls0XSxpPXJbOF0sYT1yWzEyXTtyWzBdPXRbMF0qbit0WzFdKm8rdFsyXSppK3RbM10qYSxyWzRdPXRbNF0qbit0WzVdKm8rdFs2XSppK3RbN10qYSxyWzhdPXRbOF0qbit0WzldKm8rdFsxMF0qaSt0WzExXSphLHJbMTJdPXRbMTJdKm4rdFsxM10qbyt0WzE0XSppK3RbMTVdKmE7dmFyIHM9clsxXSxsPXJbNV0sdT1yWzldLGM9clsxM107clsxXT10WzBdKnMrdFsxXSpsK3RbMl0qdSt0WzNdKmMscls1XT10WzRdKnMrdFs1XSpsK3RbNl0qdSt0WzddKmMscls5XT10WzhdKnMrdFs5XSpsK3RbMTBdKnUrdFsxMV0qYyxyWzEzXT10WzEyXSpzK3RbMTNdKmwrdFsxNF0qdSt0WzE1XSpjO3ZhciBkPXJbMl0sZj1yWzZdLGg9clsxMF0scD1yWzE0XTtyWzJdPXRbMF0qZCt0WzFdKmYrdFsyXSpoK3RbM10qcCxyWzZdPXRbNF0qZCt0WzVdKmYrdFs2XSpoK3RbN10qcCxyWzEwXT10WzhdKmQrdFs5XSpmK3RbMTBdKmgrdFsxMV0qcCxyWzE0XT10WzEyXSpkK3RbMTNdKmYrdFsxNF0qaCt0WzE1XSpwO3ZhciB5PXJbM10sbT1yWzddLGc9clsxMV0sdj1yWzE1XTtyZXR1cm4gclszXT10WzBdKnkrdFsxXSptK3RbMl0qZyt0WzNdKnYscls3XT10WzRdKnkrdFs1XSptK3RbNl0qZyt0WzddKnYsclsxMV09dFs4XSp5K3RbOV0qbSt0WzEwXSpnK3RbMTFdKnYsclsxNV09dFsxMl0qeSt0WzEzXSptK3RbMTRdKmcrdFsxNV0qdix0aGlzfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5zY2FsZT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBMLmRlZmF1bHQuVmVjdG9yPyh0PWUueSxyPWUueixlPWUueCk6ZSBpbnN0YW5jZW9mIEFycmF5JiYodD1lWzFdLHI9ZVsyXSxlPWVbMF0pLHRoaXMubWF0NFswXSo9ZSx0aGlzLm1hdDRbMV0qPWUsdGhpcy5tYXQ0WzJdKj1lLHRoaXMubWF0NFszXSo9ZSx0aGlzLm1hdDRbNF0qPXQsdGhpcy5tYXQ0WzVdKj10LHRoaXMubWF0NFs2XSo9dCx0aGlzLm1hdDRbN10qPXQsdGhpcy5tYXQ0WzhdKj1yLHRoaXMubWF0NFs5XSo9cix0aGlzLm1hdDRbMTBdKj1yLHRoaXMubWF0NFsxMV0qPXIsdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUucm90YXRlPWZ1bmN0aW9uKGUsdCxyLG4pe3QgaW5zdGFuY2VvZiBMLmRlZmF1bHQuVmVjdG9yPyhyPXQueSxuPXQueix0PXQueCk6dCBpbnN0YW5jZW9mIEFycmF5JiYocj10WzFdLG49dFsyXSx0PXRbMF0pO3ZhciBvPU1hdGguc3FydCh0KnQrcipyK24qbik7dCo9MS9vLHIqPTEvbyxuKj0xL287dmFyIGk9dGhpcy5tYXQ0WzBdLGE9dGhpcy5tYXQ0WzFdLHM9dGhpcy5tYXQ0WzJdLGw9dGhpcy5tYXQ0WzNdLHU9dGhpcy5tYXQ0WzRdLGM9dGhpcy5tYXQ0WzVdLGQ9dGhpcy5tYXQ0WzZdLGY9dGhpcy5tYXQ0WzddLGg9dGhpcy5tYXQ0WzhdLHA9dGhpcy5tYXQ0WzldLHk9dGhpcy5tYXQ0WzEwXSxtPXRoaXMubWF0NFsxMV0sZz1NYXRoLnNpbihlKSx2PU1hdGguY29zKGUpLGI9MS12LF89dCp0KmIrdix4PXIqdCpiK24qZyx3PW4qdCpiLXIqZyxqPXQqcipiLW4qZyxTPXIqcipiK3YsTT1uKnIqYit0KmcsRT10Km4qYityKmcsVD1yKm4qYi10KmcsTz1uKm4qYit2O3JldHVybiB0aGlzLm1hdDRbMF09aSpfK3UqeCtoKncsdGhpcy5tYXQ0WzFdPWEqXytjKngrcCp3LHRoaXMubWF0NFsyXT1zKl8rZCp4K3kqdyx0aGlzLm1hdDRbM109bCpfK2YqeCttKncsdGhpcy5tYXQ0WzRdPWkqait1KlMraCpNLHRoaXMubWF0NFs1XT1hKmorYypTK3AqTSx0aGlzLm1hdDRbNl09cypqK2QqUyt5Kk0sdGhpcy5tYXQ0WzddPWwqaitmKlMrbSpNLHRoaXMubWF0NFs4XT1pKkUrdSpUK2gqTyx0aGlzLm1hdDRbOV09YSpFK2MqVCtwKk8sdGhpcy5tYXQ0WzEwXT1zKkUrZCpUK3kqTyx0aGlzLm1hdDRbMTFdPWwqRStmKlQrbSpPLHRoaXN9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnRyYW5zbGF0ZT1mdW5jdGlvbihlKXt2YXIgdD1lWzBdLHI9ZVsxXSxuPWVbMl18fDA7dGhpcy5tYXQ0WzEyXSs9dGhpcy5tYXQ0WzBdKnQrdGhpcy5tYXQ0WzRdKnIrdGhpcy5tYXQ0WzhdKm4sdGhpcy5tYXQ0WzEzXSs9dGhpcy5tYXQ0WzFdKnQrdGhpcy5tYXQ0WzVdKnIrdGhpcy5tYXQ0WzldKm4sdGhpcy5tYXQ0WzE0XSs9dGhpcy5tYXQ0WzJdKnQrdGhpcy5tYXQ0WzZdKnIrdGhpcy5tYXQ0WzEwXSpuLHRoaXMubWF0NFsxNV0rPXRoaXMubWF0NFszXSp0K3RoaXMubWF0NFs3XSpyK3RoaXMubWF0NFsxMV0qbn0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUucm90YXRlWD1mdW5jdGlvbihlKXt0aGlzLnJvdGF0ZShlLDEsMCwwKX0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUucm90YXRlWT1mdW5jdGlvbihlKXt0aGlzLnJvdGF0ZShlLDAsMSwwKX0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUucm90YXRlWj1mdW5jdGlvbihlKXt0aGlzLnJvdGF0ZShlLDAsMCwxKX0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUucGVyc3BlY3RpdmU9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89MS9NYXRoLnRhbihlLzIpLGk9MS8oci1uKTtyZXR1cm4gdGhpcy5tYXQ0WzBdPW8vdCx0aGlzLm1hdDRbMV09MCx0aGlzLm1hdDRbMl09MCx0aGlzLm1hdDRbM109MCx0aGlzLm1hdDRbNF09MCx0aGlzLm1hdDRbNV09byx0aGlzLm1hdDRbNl09MCx0aGlzLm1hdDRbN109MCx0aGlzLm1hdDRbOF09MCx0aGlzLm1hdDRbOV09MCx0aGlzLm1hdDRbMTBdPShuK3IpKmksdGhpcy5tYXQ0WzExXT0tMSx0aGlzLm1hdDRbMTJdPTAsdGhpcy5tYXQ0WzEzXT0wLHRoaXMubWF0NFsxNF09MipuKnIqaSx0aGlzLm1hdDRbMTVdPTAsdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUub3J0aG89ZnVuY3Rpb24oZSx0LHIsbixvLGkpe3ZhciBhPTEvKGUtdCkscz0xLyhyLW4pLGw9MS8oby1pKTtyZXR1cm4gdGhpcy5tYXQ0WzBdPS0yKmEsdGhpcy5tYXQ0WzFdPTAsdGhpcy5tYXQ0WzJdPTAsdGhpcy5tYXQ0WzNdPTAsdGhpcy5tYXQ0WzRdPTAsdGhpcy5tYXQ0WzVdPS0yKnMsdGhpcy5tYXQ0WzZdPTAsdGhpcy5tYXQ0WzddPTAsdGhpcy5tYXQ0WzhdPTAsdGhpcy5tYXQ0WzldPTAsdGhpcy5tYXQ0WzEwXT0yKmwsdGhpcy5tYXQ0WzExXT0wLHRoaXMubWF0NFsxMl09KGUrdCkqYSx0aGlzLm1hdDRbMTNdPShuK3IpKnMsdGhpcy5tYXQ0WzE0XT0oaStvKSpsLHRoaXMubWF0NFsxNV09MSx0aGlzfTt2YXIgaT1MLmRlZmF1bHQuTWF0cml4O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiOjE5NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiOjE5OCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCI6MTk5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiOjIwMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCI6MjAyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIjoyMDEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmxvYXQzMi1hcnJheVwiOjIwMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaFwiOjIwNSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiOjIwNixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZlwiOjIwNyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvclwiOjIxMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCI6MjExLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2ZcIjoyMTIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwXCI6MjEzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiOjIxNSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHRcIjoyMTQsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZVwiOjIxNixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIjoyMTcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2VcIjoyMTgsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZVwiOjIxOSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCI6MjIwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5XCI6MjIxLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmdcIjoyMjIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCI6MjIzfV0sMzE1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXBcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixvPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtvLmRlZmF1bHQuUmVuZGVyQnVmZmVyPWZ1bmN0aW9uKGUsdCxyLG4sbyxpKXt0aGlzLnNpemU9ZSx0aGlzLnNyYz10LHRoaXMuZHN0PXIsdGhpcy5hdHRyPW4sdGhpcy5fcmVuZGVyZXI9byx0aGlzLm1hcD1pfSxvLmRlZmF1bHQuUmVuZGVyQnVmZmVyLnByb3RvdHlwZS5fcHJlcGFyZUJ1ZmZlcj1mdW5jdGlvbihlLHQpe3ZhciByLG49dC5hdHRyaWJ1dGVzLG89dGhpcy5fcmVuZGVyZXIuR0w7cj1lLm1vZGVsP2UubW9kZWw6ZTt2YXIgaT1uW3RoaXMuYXR0cl07aWYoaSl7dmFyIGE9ZVt0aGlzLmRzdF0scz1yW3RoaXMuc3JjXTtpZigwPHMubGVuZ3RoKXt2YXIgbD0hYTtpZihsJiYoZVt0aGlzLmRzdF09YT1vLmNyZWF0ZUJ1ZmZlcigpKSxvLmJpbmRCdWZmZXIoby5BUlJBWV9CVUZGRVIsYSksbHx8ITEhPT1yLmRpcnR5RmxhZ3NbdGhpcy5zcmNdKXt2YXIgdT10aGlzLm1hcCxjPXU/dShzKTpzO3RoaXMuX3JlbmRlcmVyLl9iaW5kQnVmZmVyKGEsby5BUlJBWV9CVUZGRVIsYyksci5kaXJ0eUZsYWdzW3RoaXMuc3JjXT0hMX10LmVuYWJsZUF0dHJpYihpLHRoaXMuc2l6ZSl9fX07dmFyIGk9by5kZWZhdWx0LlJlbmRlckJ1ZmZlcjtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcFwiOjE2MX1dLDMxNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZsb2F0MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLHM9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09YShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD11KCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbyBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG8pKXt2YXIgaT1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxvKTpudWxsO2kmJihpLmdldHx8aS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLG8saSk6cltvXT1lW29dfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gdSgpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHU9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1lKFwiLi9wNS5SZW5kZXJCdWZmZXJcIikscy5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmJlZ2luU2hhcGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGU9dm9pZCAwIT09ZT9lOmwuVFJJQU5HTEVfRkFOLHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS5yZXNldCgpLHRoaXN9LHMuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS52ZXJ0ZXg9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG87cj1uPW89MCwzPT09YXJndW1lbnRzLmxlbmd0aD9yPWFyZ3VtZW50c1syXTo0PT09YXJndW1lbnRzLmxlbmd0aD8obj1hcmd1bWVudHNbMl0sbz1hcmd1bWVudHNbM10pOjU9PT1hcmd1bWVudHMubGVuZ3RoJiYocj1hcmd1bWVudHNbMl0sbj1hcmd1bWVudHNbM10sbz1hcmd1bWVudHNbNF0pO3ZhciBpPW5ldyBzLmRlZmF1bHQuVmVjdG9yKGUsdCxyKTt0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMucHVzaChpKSx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGV4Tm9ybWFscy5wdXNoKHRoaXMuX2N1cnJlbnROb3JtYWwpO3ZhciBhPXRoaXMuY3VyRmlsbENvbG9yfHxbLjUsLjUsLjUsMV07cmV0dXJuIHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS52ZXJ0ZXhDb2xvcnMucHVzaChhWzBdLGFbMV0sYVsyXSxhWzNdKSx0aGlzLnRleHR1cmVNb2RlPT09bC5JTUFHRSYmKG51bGwhPT10aGlzLl90ZXg/MDx0aGlzLl90ZXgud2lkdGgmJjA8dGhpcy5fdGV4LmhlaWdodCYmKG4vPXRoaXMuX3RleC53aWR0aCxvLz10aGlzLl90ZXguaGVpZ2h0KTpudWxsPT09dGhpcy5fdGV4JiY0PD1hcmd1bWVudHMubGVuZ3RoJiZjb25zb2xlLndhcm4oXCJZb3UgbXVzdCBmaXJzdCBjYWxsIHRleHR1cmUoKSBiZWZvcmUgdXNpbmcgdmVydGV4KCkgd2l0aCBpbWFnZSBiYXNlZCB1IGFuZCB2IGNvb3JkaW5hdGVzXCIpKSx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudXZzLnB1c2gobixvKSx0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFswXT1lLHRoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzFdPXQsdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMl09cix0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFswXT1lLHRoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzFdPXQsdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMl09cix0aGlzfSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUubm9ybWFsPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHMuZGVmYXVsdC5WZWN0b3I/dGhpcy5fY3VycmVudE5vcm1hbD1lOnRoaXMuX2N1cnJlbnROb3JtYWw9bmV3IHMuZGVmYXVsdC5WZWN0b3IoZSx0LHIpLHRoaXN9LHMuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5lbmRTaGFwZT1mdW5jdGlvbihlLHQscixuLG8saSl7cmV0dXJuIHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGU9PT1sLlBPSU5UUz90aGlzLl9kcmF3UG9pbnRzKHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS52ZXJ0aWNlcyx0aGlzLmltbWVkaWF0ZU1vZGUuYnVmZmVycy5wb2ludCk6KHRoaXMuX3Byb2Nlc3NWZXJ0aWNlcy5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fZG9GaWxsJiYxPHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS52ZXJ0aWNlcy5sZW5ndGgmJnRoaXMuX2RyYXdJbW1lZGlhdGVGaWxsKCksdGhpcy5fZG9TdHJva2UmJjE8dGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LmxpbmVWZXJ0aWNlcy5sZW5ndGgmJnRoaXMuX2RyYXdJbW1lZGlhdGVTdHJva2UoKSx0aGlzLmlzQmV6aWVyPSExLHRoaXMuaXNRdWFkcmF0aWM9ITEsdGhpcy5pc0N1cnZlPSExLHRoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4Lmxlbmd0aD0wLHRoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4Lmxlbmd0aD0wLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXgubGVuZ3RoPTApLHRoaXN9LHMuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fcHJvY2Vzc1ZlcnRpY2VzPWZ1bmN0aW9uKGUpe2lmKDAhPT10aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMubGVuZ3RoKXt2YXIgdD10aGlzLl9kb1N0cm9rZSYmdGhpcy5kcmF3TW9kZSE9PWwuVEVYVFVSRSxyPWU9PT1sLkNMT1NFO3QmJih0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkuZWRnZXM9dGhpcy5fY2FsY3VsYXRlRWRnZXModGhpcy5pbW1lZGlhdGVNb2RlLnNoYXBlTW9kZSx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMsciksdGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5Ll9lZGdlc1RvVmVydGljZXMoKSk7dmFyIG49dGhpcy5pbW1lZGlhdGVNb2RlLnNoYXBlTW9kZT09PWwuVEVTUzsodGhpcy5pc0Jlemllcnx8dGhpcy5pc1F1YWRyYXRpY3x8dGhpcy5pc0N1cnZlfHxuKSYmdGhpcy5pbW1lZGlhdGVNb2RlLnNoYXBlTW9kZSE9PWwuTElORVMmJnRoaXMuX3Rlc3NlbGF0ZVNoYXBlKCl9fSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2NhbGN1bGF0ZUVkZ2VzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1bXSxvPTA7c3dpdGNoKGUpe2Nhc2UgbC5UUklBTkdMRV9TVFJJUDpmb3Iobz0wO288dC5sZW5ndGgtMjtvKyspbi5wdXNoKFtvLG8rMV0pLG4ucHVzaChbbyxvKzJdKTtuLnB1c2goW28sbysxXSk7YnJlYWs7Y2FzZSBsLlRSSUFOR0xFUzpmb3Iobz0wO288dC5sZW5ndGgtMjtvKz0zKW4ucHVzaChbbyxvKzFdKSxuLnB1c2goW28rMSxvKzJdKSxuLnB1c2goW28rMixvXSk7YnJlYWs7Y2FzZSBsLkxJTkVTOmZvcihvPTA7bzx0Lmxlbmd0aC0xO28rPTIpbi5wdXNoKFtvLG8rMV0pO2JyZWFrO2RlZmF1bHQ6Zm9yKG89MDtvPHQubGVuZ3RoLTE7bysrKW4ucHVzaChbbyxvKzFdKX1yZXR1cm4gciYmbi5wdXNoKFt0Lmxlbmd0aC0xLDBdKSxufSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX3Rlc3NlbGF0ZVNoYXBlPWZ1bmN0aW9uKCl7dGhpcy5pbW1lZGlhdGVNb2RlLnNoYXBlTW9kZT1sLlRSSUFOR0xFUzt2YXIgZT1bbmV3IEZsb2F0MzJBcnJheSh0aGlzLl92VG9OQXJyYXkodGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LnZlcnRpY2VzKSldLHQ9dGhpcy5fdHJpYW5ndWxhdGUoZSk7dGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LnZlcnRpY2VzPVtdO2Zvcih2YXIgcj0wLG49dC5sZW5ndGg7cjxuO3IrPTMpdGhpcy52ZXJ0ZXgodFtyXSx0W3IrMV0sdFtyKzJdKX0scy5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9kcmF3SW1tZWRpYXRlRmlsbD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuR0wsdD10aGlzLl9nZXRJbW1lZGlhdGVGaWxsU2hhZGVyKCk7dGhpcy5fc2V0RmlsbFVuaWZvcm1zKHQpO3ZhciByPSEwLG49ITEsbz12b2lkIDA7dHJ5e2Zvcih2YXIgaSxhPXRoaXMuaW1tZWRpYXRlTW9kZS5idWZmZXJzLmZpbGxbU3ltYm9sLml0ZXJhdG9yXSgpOyEocj0oaT1hLm5leHQoKSkuZG9uZSk7cj0hMCl7aS52YWx1ZS5fcHJlcGFyZUJ1ZmZlcih0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnksdCl9fWNhdGNoKGUpe249ITAsbz1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWEucmV0dXJufHxhLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBvfX10aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlIT09bC5MSU5FX1NUUklQJiZ0aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlIT09bC5MSU5FU3x8KHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGU9bC5UUklBTkdMRV9GQU4pLHRoaXMuX2FwcGx5Q29sb3JCbGVuZCh0aGlzLmN1ckZpbGxDb2xvciksZS5kcmF3QXJyYXlzKHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGUsMCx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMubGVuZ3RoKSx0LnVuYmluZFNoYWRlcigpfSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2RyYXdJbW1lZGlhdGVTdHJva2U9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLkdMLHQ9dGhpcy5fZ2V0SW1tZWRpYXRlU3Ryb2tlU2hhZGVyKCk7dGhpcy5fc2V0U3Ryb2tlVW5pZm9ybXModCk7dmFyIHI9ITAsbj0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBpLGE9dGhpcy5pbW1lZGlhdGVNb2RlLmJ1ZmZlcnMuc3Ryb2tlW1N5bWJvbC5pdGVyYXRvcl0oKTshKHI9KGk9YS5uZXh0KCkpLmRvbmUpO3I9ITApe2kudmFsdWUuX3ByZXBhcmVCdWZmZXIodGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LHQpfX1jYXRjaChlKXtuPSEwLG89ZX1maW5hbGx5e3RyeXtyfHxudWxsPT1hLnJldHVybnx8YS5yZXR1cm4oKX1maW5hbGx5e2lmKG4pdGhyb3cgb319dGhpcy5fYXBwbHlDb2xvckJsZW5kKHRoaXMuY3VyU3Ryb2tlQ29sb3IpLGUuZHJhd0FycmF5cyhlLlRSSUFOR0xFUywwLHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS5saW5lVmVydGljZXMubGVuZ3RoKSx0LnVuYmluZFNoYWRlcigpfTt2YXIgbz1zLmRlZmF1bHQuUmVuZGVyZXJHTDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjQsXCIuL3A1LlJlbmRlckJ1ZmZlclwiOjMxNSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsXCI6MTUxLFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCI6MTk3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCI6MTk4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGxcIjoxOTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCI6MjAwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIjoyMDIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleFwiOjIwMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mbG9hdDMyLWFycmF5XCI6MjAzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoXCI6MjA1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCI6MjA2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCI6MjA3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yXCI6MjEwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIjoyMTEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiOjIxMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXBcIjoyMTMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCI6MjE1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiOjIxNCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlXCI6MjE2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiOjIxNyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiOjIxOCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lXCI6MjE5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIjoyMjAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIjoyMjEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZ1wiOjIyMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIjoyMjMsXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiOjIyOX1dLDMxNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZsb2F0MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50MTYtYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGw9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2UoXCIuL3A1LlJlbmRlcmVyR0xcIiksZShcIi4vcDUuUmVuZGVyQnVmZmVyXCIpO3ZhciBvPTA7bC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9pbml0QnVmZmVyRGVmYXVsdHM9ZnVuY3Rpb24oZSl7aWYodGhpcy5fZnJlZUJ1ZmZlcnMoZSksMWUzPCsrbyl7dmFyIHQ9T2JqZWN0LmtleXModGhpcy5yZXRhaW5lZE1vZGUuZ2VvbWV0cnkpWzBdO2RlbGV0ZSB0aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVt0XSxvLS19cmV0dXJuIHRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5W2VdPXt9fSxsLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2ZyZWVCdWZmZXJzPWZ1bmN0aW9uKGUpe3ZhciBzPXRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5W2VdO2lmKHMpe2RlbGV0ZSB0aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVtlXSxvLS07dmFyIGw9dGhpcy5HTDtzLmluZGV4QnVmZmVyJiZsLmRlbGV0ZUJ1ZmZlcihzLmluZGV4QnVmZmVyKSx0KHRoaXMucmV0YWluZWRNb2RlLmJ1ZmZlcnMuc3Ryb2tlKSx0KHRoaXMucmV0YWluZWRNb2RlLmJ1ZmZlcnMuZmlsbCl9ZnVuY3Rpb24gdChlKXt2YXIgdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIG8saT1lW1N5bWJvbC5pdGVyYXRvcl0oKTshKHQ9KG89aS5uZXh0KCkpLmRvbmUpO3Q9ITApe3ZhciBhPW8udmFsdWU7c1thLmRzdF0mJihsLmRlbGV0ZUJ1ZmZlcihzW2EuZHN0XSksc1thLmRzdF09bnVsbCl9fWNhdGNoKGUpe3I9ITAsbj1lfWZpbmFsbHl7dHJ5e3R8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBufX19fSxsLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuY3JlYXRlQnVmZmVycz1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMuR0wsbj10aGlzLl9pbml0QnVmZmVyRGVmYXVsdHMoZSk7bi5tb2RlbD10O3ZhciBvPW4uaW5kZXhCdWZmZXI7aWYodC5mYWNlcy5sZW5ndGgpe289b3x8KG4uaW5kZXhCdWZmZXI9ci5jcmVhdGVCdWZmZXIoKSk7dmFyIGk9bC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9mbGF0dGVuKHQuZmFjZXMpLGE9aS5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiA2NTUzNTxlfSkscz1hP1VpbnQzMkFycmF5OlVpbnQxNkFycmF5O3RoaXMuX2JpbmRCdWZmZXIobyxyLkVMRU1FTlRfQVJSQVlfQlVGRkVSLGkscyksbi5pbmRleEJ1ZmZlclR5cGU9YT9yLlVOU0lHTkVEX0lOVDpyLlVOU0lHTkVEX1NIT1JULG4udmVydGV4Q291bnQ9Myp0LmZhY2VzLmxlbmd0aH1lbHNlIG8mJihyLmRlbGV0ZUJ1ZmZlcihvKSxuLmluZGV4QnVmZmVyPW51bGwpLG4udmVydGV4Q291bnQ9dC52ZXJ0aWNlcz90LnZlcnRpY2VzLmxlbmd0aDowO3JldHVybiBuLmxpbmVWZXJ0ZXhDb3VudD10LmxpbmVWZXJ0aWNlcz90LmxpbmVWZXJ0aWNlcy5sZW5ndGg6MCxufSxsLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZHJhd0J1ZmZlcnM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5HTCxyPXRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5W2VdO2lmKHRoaXMuX2RvU3Ryb2tlJiYwPHIubGluZVZlcnRleENvdW50KXt2YXIgbj10aGlzLl9nZXRSZXRhaW5lZFN0cm9rZVNoYWRlcigpO3RoaXMuX3NldFN0cm9rZVVuaWZvcm1zKG4pO3ZhciBvPSEwLGk9ITEsYT12b2lkIDA7dHJ5e2Zvcih2YXIgcyxsPXRoaXMucmV0YWluZWRNb2RlLmJ1ZmZlcnMuc3Ryb2tlW1N5bWJvbC5pdGVyYXRvcl0oKTshKG89KHM9bC5uZXh0KCkpLmRvbmUpO289ITApe3MudmFsdWUuX3ByZXBhcmVCdWZmZXIocixuKX19Y2F0Y2goZSl7aT0hMCxhPWV9ZmluYWxseXt0cnl7b3x8bnVsbD09bC5yZXR1cm58fGwucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IGF9fXRoaXMuX2FwcGx5Q29sb3JCbGVuZCh0aGlzLmN1clN0cm9rZUNvbG9yKSx0aGlzLl9kcmF3QXJyYXlzKHQuVFJJQU5HTEVTLGUpLG4udW5iaW5kU2hhZGVyKCl9aWYodGhpcy5fZG9GaWxsKXt2YXIgdT10aGlzLl9nZXRSZXRhaW5lZEZpbGxTaGFkZXIoKTt0aGlzLl9zZXRGaWxsVW5pZm9ybXModSk7dmFyIGM9ITAsZD0hMSxmPXZvaWQgMDt0cnl7Zm9yKHZhciBoLHA9dGhpcy5yZXRhaW5lZE1vZGUuYnVmZmVycy5maWxsW1N5bWJvbC5pdGVyYXRvcl0oKTshKGM9KGg9cC5uZXh0KCkpLmRvbmUpO2M9ITApe2gudmFsdWUuX3ByZXBhcmVCdWZmZXIocix1KX19Y2F0Y2goZSl7ZD0hMCxmPWV9ZmluYWxseXt0cnl7Y3x8bnVsbD09cC5yZXR1cm58fHAucmV0dXJuKCl9ZmluYWxseXtpZihkKXRocm93IGZ9fXIuaW5kZXhCdWZmZXImJnRoaXMuX2JpbmRCdWZmZXIoci5pbmRleEJ1ZmZlcix0LkVMRU1FTlRfQVJSQVlfQlVGRkVSKSx0aGlzLl9hcHBseUNvbG9yQmxlbmQodGhpcy5jdXJGaWxsQ29sb3IpLHRoaXMuX2RyYXdFbGVtZW50cyh0LlRSSUFOR0xFUyxlKSx1LnVuYmluZFNoYWRlcigpfXJldHVybiB0aGlzfSxsLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZHJhd0J1ZmZlcnNTY2FsZWQ9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89dGhpcy51TVZNYXRyaXguY29weSgpO3RyeXt0aGlzLnVNVk1hdHJpeC5zY2FsZSh0LHIsbiksdGhpcy5kcmF3QnVmZmVycyhlKX1maW5hbGx5e3RoaXMudU1WTWF0cml4PW99fSxsLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2RyYXdBcnJheXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5HTC5kcmF3QXJyYXlzKGUsMCx0aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVt0XS5saW5lVmVydGV4Q291bnQpLHRoaXN9LGwuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZHJhd0VsZW1lbnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5yZXRhaW5lZE1vZGUuZ2VvbWV0cnlbdF0sbj10aGlzLkdMO2lmKHIuaW5kZXhCdWZmZXIpe2lmKHIuaW5kZXhCdWZmZXJUeXBlPT09bi5VTlNJR05FRF9JTlQmJiFuLmdldEV4dGVuc2lvbihcIk9FU19lbGVtZW50X2luZGV4X3VpbnRcIikpdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIHJlbmRlciBhIDNkIG1vZGVsIHdpdGggPiA2NTUzNSB0cmlhbmdsZXMuIFlvdXIgd2ViIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgV2ViR0wgRXh0ZW5zaW9uIE9FU19lbGVtZW50X2luZGV4X3VpbnQuXCIpO24uZHJhd0VsZW1lbnRzKG4uVFJJQU5HTEVTLHIudmVydGV4Q291bnQsci5pbmRleEJ1ZmZlclR5cGUsMCl9ZWxzZSBuLmRyYXdBcnJheXMoZXx8bi5UUklBTkdMRVMsMCxyLnZlcnRleENvdW50KX0sbC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9kcmF3UG9pbnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5HTCxuPXRoaXMuX2dldEltbWVkaWF0ZVBvaW50U2hhZGVyKCk7dGhpcy5fc2V0UG9pbnRVbmlmb3JtcyhuKSx0aGlzLl9iaW5kQnVmZmVyKHQsci5BUlJBWV9CVUZGRVIsdGhpcy5fdlRvTkFycmF5KGUpLEZsb2F0MzJBcnJheSxyLlNUQVRJQ19EUkFXKSxuLmVuYWJsZUF0dHJpYihuLmF0dHJpYnV0ZXMuYVBvc2l0aW9uLDMpLHIuZHJhd0FycmF5cyhyLlBvaW50cywwLGUubGVuZ3RoKSxuLnVuYmluZFNoYWRlcigpfTt2YXIgaT1sLmRlZmF1bHQuUmVuZGVyZXJHTDtyLmRlZmF1bHQ9aX0se1wiLi4vY29yZS9tYWluXCI6MjY0LFwiLi9wNS5SZW5kZXJCdWZmZXJcIjozMTUsXCIuL3A1LlJlbmRlcmVyR0xcIjozMTgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbFwiOjE1MSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lXCI6MTYzLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzXCI6MTc2LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCI6MTk3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCI6MTk4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGxcIjoxOTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCI6MjAwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIjoyMDIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleFwiOjIwMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mbG9hdDMyLWFycmF5XCI6MjAzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoXCI6MjA1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCI6MjA2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mXCI6MjA3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yXCI6MjEwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIjoyMTEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZlwiOjIxMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXBcIjoyMTMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCI6MjE1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodFwiOjIxNCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlXCI6MjE2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiOjIxNyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZVwiOjIxOCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lXCI6MjE5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIjoyMjAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXlcIjoyMjEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZ1wiOjIyMixcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIjoyMjMsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDE2LWFycmF5XCI6MjI0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQzMi1hcnJheVwiOjIyNSxcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5fV0sMzE4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ25cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlc1wiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZsb2F0MzItYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mbG9hdDY0LWFycmF5XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW50MTYtYXJyYXlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQxNi1hcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQzMi1hcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIHU9byhlKFwiLi4vY29yZS9tYWluXCIpKSxpPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpLG49byhlKFwibGlidGVzc1wiKSk7ZShcIi4vcDUuU2hhZGVyXCIpLGUoXCIuL3A1LkNhbWVyYVwiKSxlKFwiLi4vY29yZS9wNS5SZW5kZXJlclwiKSxlKFwiLi9wNS5NYXRyaXhcIik7ZShcInBhdGhcIik7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBsKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxyPW5ldyBBcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspclt0XT1lW3RdO3JldHVybiByfX0oZSl8fGZ1bmN0aW9uKGUpe2lmKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSl8fFwiW29iamVjdCBBcmd1bWVudHNdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KGUpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKX0oKX12YXIgYz1cInByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xcblxcbnVuaWZvcm0gbWF0NCB1Vmlld01hdHJpeDtcXG5cXG51bmlmb3JtIGJvb2wgdVVzZUxpZ2h0aW5nO1xcblxcbnVuaWZvcm0gaW50IHVBbWJpZW50TGlnaHRDb3VudDtcXG51bmlmb3JtIHZlYzMgdUFtYmllbnRDb2xvcls1XTtcXG5cXG51bmlmb3JtIGludCB1RGlyZWN0aW9uYWxMaWdodENvdW50O1xcbnVuaWZvcm0gdmVjMyB1TGlnaHRpbmdEaXJlY3Rpb25bNV07XFxudW5pZm9ybSB2ZWMzIHVEaXJlY3Rpb25hbERpZmZ1c2VDb2xvcnNbNV07XFxudW5pZm9ybSB2ZWMzIHVEaXJlY3Rpb25hbFNwZWN1bGFyQ29sb3JzWzVdO1xcblxcbnVuaWZvcm0gaW50IHVQb2ludExpZ2h0Q291bnQ7XFxudW5pZm9ybSB2ZWMzIHVQb2ludExpZ2h0TG9jYXRpb25bNV07XFxudW5pZm9ybSB2ZWMzIHVQb2ludExpZ2h0RGlmZnVzZUNvbG9yc1s1XTtcXHRcXG51bmlmb3JtIHZlYzMgdVBvaW50TGlnaHRTcGVjdWxhckNvbG9yc1s1XTtcXG5cXG51bmlmb3JtIGludCB1U3BvdExpZ2h0Q291bnQ7XFxudW5pZm9ybSBmbG9hdCB1U3BvdExpZ2h0QW5nbGVbNV07XFxudW5pZm9ybSBmbG9hdCB1U3BvdExpZ2h0Q29uY1s1XTtcXG51bmlmb3JtIHZlYzMgdVNwb3RMaWdodERpZmZ1c2VDb2xvcnNbNV07XFxudW5pZm9ybSB2ZWMzIHVTcG90TGlnaHRTcGVjdWxhckNvbG9yc1s1XTtcXG51bmlmb3JtIHZlYzMgdVNwb3RMaWdodExvY2F0aW9uWzVdO1xcbnVuaWZvcm0gdmVjMyB1U3BvdExpZ2h0RGlyZWN0aW9uWzVdO1xcblxcbnVuaWZvcm0gYm9vbCB1U3BlY3VsYXI7XFxudW5pZm9ybSBmbG9hdCB1U2hpbmluZXNzO1xcblxcbnVuaWZvcm0gZmxvYXQgdUNvbnN0YW50QXR0ZW51YXRpb247XFxudW5pZm9ybSBmbG9hdCB1TGluZWFyQXR0ZW51YXRpb247XFxudW5pZm9ybSBmbG9hdCB1UXVhZHJhdGljQXR0ZW51YXRpb247XFxuXFxuY29uc3QgZmxvYXQgc3BlY3VsYXJGYWN0b3IgPSAyLjA7XFxuY29uc3QgZmxvYXQgZGlmZnVzZUZhY3RvciA9IDAuNzM7XFxuXFxuc3RydWN0IExpZ2h0UmVzdWx0IHtcXG4gIGZsb2F0IHNwZWN1bGFyO1xcbiAgZmxvYXQgZGlmZnVzZTtcXG59O1xcblxcbmZsb2F0IF9waG9uZ1NwZWN1bGFyKFxcbiAgdmVjMyBsaWdodERpcmVjdGlvbixcXG4gIHZlYzMgdmlld0RpcmVjdGlvbixcXG4gIHZlYzMgc3VyZmFjZU5vcm1hbCxcXG4gIGZsb2F0IHNoaW5pbmVzcykge1xcblxcbiAgdmVjMyBSID0gcmVmbGVjdChsaWdodERpcmVjdGlvbiwgc3VyZmFjZU5vcm1hbCk7XFxuICByZXR1cm4gcG93KG1heCgwLjAsIGRvdChSLCB2aWV3RGlyZWN0aW9uKSksIHNoaW5pbmVzcyk7XFxufVxcblxcbmZsb2F0IF9sYW1iZXJ0RGlmZnVzZSh2ZWMzIGxpZ2h0RGlyZWN0aW9uLCB2ZWMzIHN1cmZhY2VOb3JtYWwpIHtcXG4gIHJldHVybiBtYXgoMC4wLCBkb3QoLWxpZ2h0RGlyZWN0aW9uLCBzdXJmYWNlTm9ybWFsKSk7XFxufVxcblxcbkxpZ2h0UmVzdWx0IF9saWdodCh2ZWMzIHZpZXdEaXJlY3Rpb24sIHZlYzMgbm9ybWFsLCB2ZWMzIGxpZ2h0VmVjdG9yKSB7XFxuXFxuICB2ZWMzIGxpZ2h0RGlyID0gbm9ybWFsaXplKGxpZ2h0VmVjdG9yKTtcXG5cXG4gIC8vY29tcHV0ZSBvdXIgZGlmZnVzZSAmIHNwZWN1bGFyIHRlcm1zXFxuICBMaWdodFJlc3VsdCBscjtcXG4gIGlmICh1U3BlY3VsYXIpXFxuICAgIGxyLnNwZWN1bGFyID0gX3Bob25nU3BlY3VsYXIobGlnaHREaXIsIHZpZXdEaXJlY3Rpb24sIG5vcm1hbCwgdVNoaW5pbmVzcyk7XFxuICBsci5kaWZmdXNlID0gX2xhbWJlcnREaWZmdXNlKGxpZ2h0RGlyLCBub3JtYWwpO1xcbiAgcmV0dXJuIGxyO1xcbn1cXG5cXG52b2lkIHRvdGFsTGlnaHQoXFxuICB2ZWMzIG1vZGVsUG9zaXRpb24sXFxuICB2ZWMzIG5vcm1hbCxcXG4gIG91dCB2ZWMzIHRvdGFsRGlmZnVzZSxcXG4gIG91dCB2ZWMzIHRvdGFsU3BlY3VsYXJcXG4pIHtcXG5cXG4gIHRvdGFsU3BlY3VsYXIgPSB2ZWMzKDAuMCk7XFxuXFxuICBpZiAoIXVVc2VMaWdodGluZykge1xcbiAgICB0b3RhbERpZmZ1c2UgPSB2ZWMzKDEuMCk7XFxuICAgIHJldHVybjtcXG4gIH1cXG5cXG4gIHRvdGFsRGlmZnVzZSA9IHZlYzMoMC4wKTtcXG5cXG4gIHZlYzMgdmlld0RpcmVjdGlvbiA9IG5vcm1hbGl6ZSgtbW9kZWxQb3NpdGlvbik7XFxuXFxuICBmb3IgKGludCBqID0gMDsgaiA8IDU7IGorKykge1xcbiAgICBpZiAoaiA8IHVEaXJlY3Rpb25hbExpZ2h0Q291bnQpIHtcXG4gICAgICB2ZWMzIGxpZ2h0VmVjdG9yID0gKHVWaWV3TWF0cml4ICogdmVjNCh1TGlnaHRpbmdEaXJlY3Rpb25bal0sIDAuMCkpLnh5ejtcXG4gICAgICB2ZWMzIGxpZ2h0Q29sb3IgPSB1RGlyZWN0aW9uYWxEaWZmdXNlQ29sb3JzW2pdO1xcbiAgICAgIHZlYzMgc3BlY3VsYXJDb2xvciA9IHVEaXJlY3Rpb25hbFNwZWN1bGFyQ29sb3JzW2pdO1xcbiAgICAgIExpZ2h0UmVzdWx0IHJlc3VsdCA9IF9saWdodCh2aWV3RGlyZWN0aW9uLCBub3JtYWwsIGxpZ2h0VmVjdG9yKTtcXG4gICAgICB0b3RhbERpZmZ1c2UgKz0gcmVzdWx0LmRpZmZ1c2UgKiBsaWdodENvbG9yO1xcbiAgICAgIHRvdGFsU3BlY3VsYXIgKz0gcmVzdWx0LnNwZWN1bGFyICogbGlnaHRDb2xvciAqIHNwZWN1bGFyQ29sb3I7XFxuICAgIH1cXG5cXG4gICAgaWYgKGogPCB1UG9pbnRMaWdodENvdW50KSB7XFxuICAgICAgdmVjMyBsaWdodFBvc2l0aW9uID0gKHVWaWV3TWF0cml4ICogdmVjNCh1UG9pbnRMaWdodExvY2F0aW9uW2pdLCAxLjApKS54eXo7XFxuICAgICAgdmVjMyBsaWdodFZlY3RvciA9IG1vZGVsUG9zaXRpb24gLSBsaWdodFBvc2l0aW9uO1xcbiAgICBcXG4gICAgICAvL2NhbGN1bGF0ZSBhdHRlbnVhdGlvblxcbiAgICAgIGZsb2F0IGxpZ2h0RGlzdGFuY2UgPSBsZW5ndGgobGlnaHRWZWN0b3IpO1xcbiAgICAgIGZsb2F0IGxpZ2h0RmFsbG9mZiA9IDEuMCAvICh1Q29uc3RhbnRBdHRlbnVhdGlvbiArIGxpZ2h0RGlzdGFuY2UgKiB1TGluZWFyQXR0ZW51YXRpb24gKyAobGlnaHREaXN0YW5jZSAqIGxpZ2h0RGlzdGFuY2UpICogdVF1YWRyYXRpY0F0dGVudWF0aW9uKTtcXG4gICAgICB2ZWMzIGxpZ2h0Q29sb3IgPSBsaWdodEZhbGxvZmYgKiB1UG9pbnRMaWdodERpZmZ1c2VDb2xvcnNbal07XFxuICAgICAgdmVjMyBzcGVjdWxhckNvbG9yID0gbGlnaHRGYWxsb2ZmICogdVBvaW50TGlnaHRTcGVjdWxhckNvbG9yc1tqXTtcXG5cXG4gICAgICBMaWdodFJlc3VsdCByZXN1bHQgPSBfbGlnaHQodmlld0RpcmVjdGlvbiwgbm9ybWFsLCBsaWdodFZlY3Rvcik7XFxuICAgICAgdG90YWxEaWZmdXNlICs9IHJlc3VsdC5kaWZmdXNlICogbGlnaHRDb2xvcjtcXG4gICAgICB0b3RhbFNwZWN1bGFyICs9IHJlc3VsdC5zcGVjdWxhciAqIGxpZ2h0Q29sb3IgKiBzcGVjdWxhckNvbG9yO1xcbiAgICB9XFxuXFxuICAgIGlmKGogPCB1U3BvdExpZ2h0Q291bnQpIHtcXG4gICAgICB2ZWMzIGxpZ2h0UG9zaXRpb24gPSAodVZpZXdNYXRyaXggKiB2ZWM0KHVTcG90TGlnaHRMb2NhdGlvbltqXSwgMS4wKSkueHl6O1xcbiAgICAgIHZlYzMgbGlnaHRWZWN0b3IgPSBtb2RlbFBvc2l0aW9uIC0gbGlnaHRQb3NpdGlvbjtcXG4gICAgXFxuICAgICAgZmxvYXQgbGlnaHREaXN0YW5jZSA9IGxlbmd0aChsaWdodFZlY3Rvcik7XFxuICAgICAgZmxvYXQgbGlnaHRGYWxsb2ZmID0gMS4wIC8gKHVDb25zdGFudEF0dGVudWF0aW9uICsgbGlnaHREaXN0YW5jZSAqIHVMaW5lYXJBdHRlbnVhdGlvbiArIChsaWdodERpc3RhbmNlICogbGlnaHREaXN0YW5jZSkgKiB1UXVhZHJhdGljQXR0ZW51YXRpb24pO1xcblxcbiAgICAgIHZlYzMgbGlnaHREaXJlY3Rpb24gPSAodVZpZXdNYXRyaXggKiB2ZWM0KHVTcG90TGlnaHREaXJlY3Rpb25bal0sIDAuMCkpLnh5ejtcXG4gICAgICBmbG9hdCBzcG90RG90ID0gZG90KG5vcm1hbGl6ZShsaWdodFZlY3RvciksIG5vcm1hbGl6ZShsaWdodERpcmVjdGlvbikpO1xcbiAgICAgIGZsb2F0IHNwb3RGYWxsb2ZmO1xcbiAgICAgIGlmKHNwb3REb3QgPCB1U3BvdExpZ2h0QW5nbGVbal0pIHtcXG4gICAgICAgIHNwb3RGYWxsb2ZmID0gMC4wO1xcbiAgICAgIH1cXG4gICAgICBlbHNlIHtcXG4gICAgICAgIHNwb3RGYWxsb2ZmID0gcG93KHNwb3REb3QsIHVTcG90TGlnaHRDb25jW2pdKTtcXG4gICAgICB9XFxuICAgICAgbGlnaHRGYWxsb2ZmICo9IHNwb3RGYWxsb2ZmO1xcblxcbiAgICAgIHZlYzMgbGlnaHRDb2xvciA9IHVTcG90TGlnaHREaWZmdXNlQ29sb3JzW2pdO1xcbiAgICAgIHZlYzMgc3BlY3VsYXJDb2xvciA9IHVTcG90TGlnaHRTcGVjdWxhckNvbG9yc1tqXTtcXG4gICAgIFxcbiAgICAgIExpZ2h0UmVzdWx0IHJlc3VsdCA9IF9saWdodCh2aWV3RGlyZWN0aW9uLCBub3JtYWwsIGxpZ2h0VmVjdG9yKTtcXG4gICAgICBcXG4gICAgICB0b3RhbERpZmZ1c2UgKz0gcmVzdWx0LmRpZmZ1c2UgKiBsaWdodENvbG9yICogbGlnaHRGYWxsb2ZmO1xcbiAgICAgIHRvdGFsU3BlY3VsYXIgKz0gcmVzdWx0LnNwZWN1bGFyICogbGlnaHRDb2xvciAqIHNwZWN1bGFyQ29sb3IgKiBsaWdodEZhbGxvZmY7XFxuICAgIH1cXG4gIH1cXG5cXG4gIHRvdGFsRGlmZnVzZSAqPSBkaWZmdXNlRmFjdG9yO1xcbiAgdG90YWxTcGVjdWxhciAqPSBzcGVjdWxhckZhY3RvcjtcXG59XFxuXCIsZD17aW1tZWRpYXRlVmVydDpcImF0dHJpYnV0ZSB2ZWMzIGFQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjNCBhVmVydGV4Q29sb3I7XFxuXFxudW5pZm9ybSBtYXQ0IHVNb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcbnVuaWZvcm0gZmxvYXQgdVJlc29sdXRpb247XFxudW5pZm9ybSBmbG9hdCB1UG9pbnRTaXplO1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIHZlYzQgcG9zaXRpb25WZWM0ID0gdmVjNChhUG9zaXRpb24sIDEuMCk7XFxuICBnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdU1vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uVmVjNDtcXG4gIHZDb2xvciA9IGFWZXJ0ZXhDb2xvcjtcXG4gIGdsX1BvaW50U2l6ZSA9IHVQb2ludFNpemU7XFxufVxcblwiLHZlcnRleENvbG9yVmVydDpcImF0dHJpYnV0ZSB2ZWMzIGFQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjNCBhVmVydGV4Q29sb3I7XFxuXFxudW5pZm9ybSBtYXQ0IHVNb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIHZlYzQgcG9zaXRpb25WZWM0ID0gdmVjNChhUG9zaXRpb24sIDEuMCk7XFxuICBnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdU1vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uVmVjNDtcXG4gIHZDb2xvciA9IGFWZXJ0ZXhDb2xvcjtcXG59XFxuXCIsdmVydGV4Q29sb3JGcmFnOlwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxudmFyeWluZyB2ZWM0IHZDb2xvcjtcXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2xfRnJhZ0NvbG9yID0gdkNvbG9yO1xcbn1cIixub3JtYWxWZXJ0OlwiYXR0cmlidXRlIHZlYzMgYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIGFOb3JtYWw7XFxuYXR0cmlidXRlIHZlYzIgYVRleENvb3JkO1xcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIG1hdDMgdU5vcm1hbE1hdHJpeDtcXG5cXG52YXJ5aW5nIHZlYzMgdlZlcnRleE5vcm1hbDtcXG52YXJ5aW5nIGhpZ2hwIHZlYzIgdlZlcnRUZXhDb29yZDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgdmVjNCBwb3NpdGlvblZlYzQgPSB2ZWM0KGFQb3NpdGlvbiwgMS4wKTtcXG4gIGdsX1Bvc2l0aW9uID0gdVByb2plY3Rpb25NYXRyaXggKiB1TW9kZWxWaWV3TWF0cml4ICogcG9zaXRpb25WZWM0O1xcbiAgdlZlcnRleE5vcm1hbCA9IG5vcm1hbGl6ZSh2ZWMzKCB1Tm9ybWFsTWF0cml4ICogYU5vcm1hbCApKTtcXG4gIHZWZXJ0VGV4Q29vcmQgPSBhVGV4Q29vcmQ7XFxufVxcblwiLG5vcm1hbEZyYWc6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG52YXJ5aW5nIHZlYzMgdlZlcnRleE5vcm1hbDtcXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2xfRnJhZ0NvbG9yID0gdmVjNCh2VmVydGV4Tm9ybWFsLCAxLjApO1xcbn1cIixiYXNpY0ZyYWc6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG51bmlmb3JtIHZlYzQgdU1hdGVyaWFsQ29sb3I7XFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdsX0ZyYWdDb2xvciA9IHVNYXRlcmlhbENvbG9yO1xcbn1cIixsaWdodFZlcnQ6YytcIi8vIGluY2x1ZGUgbGlnaHRpbmcuZ2xnbFxcblxcbmF0dHJpYnV0ZSB2ZWMzIGFQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMyBhTm9ybWFsO1xcbmF0dHJpYnV0ZSB2ZWMyIGFUZXhDb29yZDtcXG5cXG51bmlmb3JtIG1hdDQgdU1vZGVsVmlld01hdHJpeDtcXG51bmlmb3JtIG1hdDQgdVByb2plY3Rpb25NYXRyaXg7XFxudW5pZm9ybSBtYXQzIHVOb3JtYWxNYXRyaXg7XFxuXFxudmFyeWluZyBoaWdocCB2ZWMyIHZWZXJ0VGV4Q29vcmQ7XFxudmFyeWluZyB2ZWMzIHZEaWZmdXNlQ29sb3I7XFxudmFyeWluZyB2ZWMzIHZTcGVjdWxhckNvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuXFxuICB2ZWM0IHZpZXdNb2RlbFBvc2l0aW9uID0gdU1vZGVsVmlld01hdHJpeCAqIHZlYzQoYVBvc2l0aW9uLCAxLjApO1xcbiAgZ2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIHZpZXdNb2RlbFBvc2l0aW9uO1xcblxcbiAgdmVjMyB2ZXJ0ZXhOb3JtYWwgPSBub3JtYWxpemUodU5vcm1hbE1hdHJpeCAqIGFOb3JtYWwpO1xcbiAgdlZlcnRUZXhDb29yZCA9IGFUZXhDb29yZDtcXG5cXG4gIHRvdGFsTGlnaHQodmlld01vZGVsUG9zaXRpb24ueHl6LCB2ZXJ0ZXhOb3JtYWwsIHZEaWZmdXNlQ29sb3IsIHZTcGVjdWxhckNvbG9yKTtcXG5cXG4gIGZvciAoaW50IGkgPSAwOyBpIDwgODsgaSsrKSB7XFxuICAgIGlmIChpIDwgdUFtYmllbnRMaWdodENvdW50KSB7XFxuICAgICAgdkRpZmZ1c2VDb2xvciArPSB1QW1iaWVudENvbG9yW2ldO1xcbiAgICB9XFxuICB9XFxufVxcblwiLGxpZ2h0VGV4dHVyZUZyYWc6XCJwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudW5pZm9ybSB2ZWM0IHVNYXRlcmlhbENvbG9yO1xcbnVuaWZvcm0gdmVjNCB1VGludDtcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlcjtcXG51bmlmb3JtIGJvb2wgaXNUZXh0dXJlO1xcbnVuaWZvcm0gYm9vbCB1RW1pc3NpdmU7XFxuXFxudmFyeWluZyBoaWdocCB2ZWMyIHZWZXJ0VGV4Q29vcmQ7XFxudmFyeWluZyB2ZWMzIHZEaWZmdXNlQ29sb3I7XFxudmFyeWluZyB2ZWMzIHZTcGVjdWxhckNvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBpZih1RW1pc3NpdmUgJiYgIWlzVGV4dHVyZSkge1xcbiAgICBnbF9GcmFnQ29sb3IgPSB1TWF0ZXJpYWxDb2xvcjtcXG4gIH1cXG4gIGVsc2Uge1xcbiAgICBnbF9GcmFnQ29sb3IgPSBpc1RleHR1cmUgPyB0ZXh0dXJlMkQodVNhbXBsZXIsIHZWZXJ0VGV4Q29vcmQpICogKHVUaW50IC8gdmVjNCgyNTUsIDI1NSwgMjU1LCAyNTUpKSA6IHVNYXRlcmlhbENvbG9yO1xcbiAgICBnbF9GcmFnQ29sb3IucmdiID0gZ2xfRnJhZ0NvbG9yLnJnYiAqIHZEaWZmdXNlQ29sb3IgKyB2U3BlY3VsYXJDb2xvcjtcXG4gIH1cXG59XCIscGhvbmdWZXJ0OlwicHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbnByZWNpc2lvbiBoaWdocCBpbnQ7XFxuXFxuYXR0cmlidXRlIHZlYzMgYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIGFOb3JtYWw7XFxuYXR0cmlidXRlIHZlYzIgYVRleENvb3JkO1xcblxcbnVuaWZvcm0gdmVjMyB1QW1iaWVudENvbG9yWzVdO1xcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIG1hdDMgdU5vcm1hbE1hdHJpeDtcXG51bmlmb3JtIGludCB1QW1iaWVudExpZ2h0Q291bnQ7XFxuXFxudmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxudmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG52YXJ5aW5nIHZlYzMgdlZpZXdQb3NpdGlvbjtcXG52YXJ5aW5nIHZlYzMgdkFtYmllbnRDb2xvcjtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcblxcbiAgdmVjNCB2aWV3TW9kZWxQb3NpdGlvbiA9IHVNb2RlbFZpZXdNYXRyaXggKiB2ZWM0KGFQb3NpdGlvbiwgMS4wKTtcXG5cXG4gIC8vIFBhc3MgdmFyeWluZ3MgdG8gZnJhZ21lbnQgc2hhZGVyXFxuICB2Vmlld1Bvc2l0aW9uID0gdmlld01vZGVsUG9zaXRpb24ueHl6O1xcbiAgZ2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIHZpZXdNb2RlbFBvc2l0aW9uOyAgXFxuXFxuICB2Tm9ybWFsID0gdU5vcm1hbE1hdHJpeCAqIGFOb3JtYWw7XFxuICB2VGV4Q29vcmQgPSBhVGV4Q29vcmQ7XFxuXFxuICAvLyBUT0RPOiB0aGlzIHNob3VsZCBiZSBhIHVuaWZvcm1cXG4gIHZBbWJpZW50Q29sb3IgPSB2ZWMzKDAuMCk7XFxuICBmb3IgKGludCBpID0gMDsgaSA8IDU7IGkrKykge1xcbiAgICBpZiAoaSA8IHVBbWJpZW50TGlnaHRDb3VudCkge1xcbiAgICAgIHZBbWJpZW50Q29sb3IgKz0gdUFtYmllbnRDb2xvcltpXTtcXG4gICAgfVxcbiAgfVxcbn1cXG5cIixwaG9uZ0ZyYWc6YytcIi8vIGluY2x1ZGUgbGlnaHRpbmcuZ2xzbFxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xcblxcbnVuaWZvcm0gdmVjNCB1TWF0ZXJpYWxDb2xvcjtcXG51bmlmb3JtIHZlYzQgdVRpbnQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgdVNhbXBsZXI7XFxudW5pZm9ybSBib29sIGlzVGV4dHVyZTtcXG51bmlmb3JtIGJvb2wgdUVtaXNzaXZlO1xcblxcbnZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xcbnZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxudmFyeWluZyB2ZWMzIHZWaWV3UG9zaXRpb247XFxudmFyeWluZyB2ZWMzIHZBbWJpZW50Q29sb3I7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG5cXG4gIHZlYzMgZGlmZnVzZTtcXG4gIHZlYzMgc3BlY3VsYXI7XFxuICB0b3RhbExpZ2h0KHZWaWV3UG9zaXRpb24sIG5vcm1hbGl6ZSh2Tm9ybWFsKSwgZGlmZnVzZSwgc3BlY3VsYXIpO1xcblxcbiAgaWYodUVtaXNzaXZlICYmICFpc1RleHR1cmUpIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gdU1hdGVyaWFsQ29sb3I7XFxuICB9XFxuICBlbHNlIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gaXNUZXh0dXJlID8gdGV4dHVyZTJEKHVTYW1wbGVyLCB2VGV4Q29vcmQpICogKHVUaW50IC8gdmVjNCgyNTUsIDI1NSwgMjU1LCAyNTUpKSA6IHVNYXRlcmlhbENvbG9yO1xcbiAgICBnbF9GcmFnQ29sb3IucmdiID0gZ2xfRnJhZ0NvbG9yLnJnYiAqIChkaWZmdXNlICsgdkFtYmllbnRDb2xvcikgKyBzcGVjdWxhcjtcXG4gIH1cXG59XCIsZm9udFZlcnQ6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG5cXG5hdHRyaWJ1dGUgdmVjMyBhUG9zaXRpb247XFxuYXR0cmlidXRlIHZlYzIgYVRleENvb3JkO1xcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG5cXG51bmlmb3JtIHZlYzQgdUdseXBoUmVjdDtcXG51bmlmb3JtIGZsb2F0IHVHbHlwaE9mZnNldDtcXG5cXG52YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbnZhcnlpbmcgZmxvYXQgdztcXG5cXG52b2lkIG1haW4oKSB7XFxuICB2ZWM0IHBvc2l0aW9uVmVjNCA9IHZlYzQoYVBvc2l0aW9uLCAxLjApO1xcblxcbiAgLy8gc2NhbGUgYnkgdGhlIHNpemUgb2YgdGhlIGdseXBoJ3MgcmVjdGFuZ2xlXFxuICBwb3NpdGlvblZlYzQueHkgKj0gdUdseXBoUmVjdC56dyAtIHVHbHlwaFJlY3QueHk7XFxuXFxuICAvLyBtb3ZlIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGdseXBoXFxuICBwb3NpdGlvblZlYzQueHkgKz0gdUdseXBoUmVjdC54eTtcXG5cXG4gIC8vIG1vdmUgdG8gdGhlIGxldHRlcidzIGxpbmUgb2Zmc2V0XFxuICBwb3NpdGlvblZlYzQueCArPSB1R2x5cGhPZmZzZXQ7XFxuICBcXG4gIGdsX1Bvc2l0aW9uID0gdVByb2plY3Rpb25NYXRyaXggKiB1TW9kZWxWaWV3TWF0cml4ICogcG9zaXRpb25WZWM0O1xcbiAgdlRleENvb3JkID0gYVRleENvb3JkO1xcbiAgdyA9IGdsX1Bvc2l0aW9uLnc7XFxufVxcblwiLGZvbnRGcmFnOlwiI2V4dGVuc2lvbiBHTF9PRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXMgOiBlbmFibGVcXG5wcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG5cXG4jaWYgMFxcbiAgLy8gc2ltdWxhdGUgaW50ZWdlciBtYXRoIHVzaW5nIGZsb2F0c1xcblxcdCNkZWZpbmUgaW50IGZsb2F0XFxuXFx0I2RlZmluZSBpdmVjMiB2ZWMyXFxuXFx0I2RlZmluZSBJTlQoeCkgZmxvYXQoeClcXG5cXG5cXHRpbnQgaWZsb29yKGZsb2F0IHYpIHsgcmV0dXJuIGZsb29yKHYpOyB9XFxuXFx0aXZlYzIgaWZsb29yKHZlYzIgdikgeyByZXR1cm4gZmxvb3Iodik7IH1cXG5cXG4jZWxzZVxcbiAgLy8gdXNlIG5hdGl2ZSBpbnRlZ2VyIG1hdGhcXG5cXHRwcmVjaXNpb24gaGlnaHAgaW50O1xcblxcdCNkZWZpbmUgSU5UKHgpIHhcXG5cXG5cXHRpbnQgaWZsb29yKGZsb2F0IHYpIHsgcmV0dXJuIGludCh2KTsgfVxcblxcdGludCBpZmxvb3IoaW50IHYpIHsgcmV0dXJuIHY7IH1cXG5cXHRpdmVjMiBpZmxvb3IodmVjMiB2KSB7IHJldHVybiBpdmVjMih2KTsgfVxcblxcbiNlbmRpZlxcblxcbnVuaWZvcm0gc2FtcGxlcjJEIHVTYW1wbGVyU3Ryb2tlcztcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlclJvd1N0cm9rZXM7XFxudW5pZm9ybSBzYW1wbGVyMkQgdVNhbXBsZXJSb3dzO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHVTYW1wbGVyQ29sU3Ryb2tlcztcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlckNvbHM7XFxuXFxudW5pZm9ybSBpdmVjMiB1U3Ryb2tlSW1hZ2VTaXplO1xcbnVuaWZvcm0gaXZlYzIgdUNlbGxzSW1hZ2VTaXplO1xcbnVuaWZvcm0gaXZlYzIgdUdyaWRJbWFnZVNpemU7XFxuXFxudW5pZm9ybSBpdmVjMiB1R3JpZE9mZnNldDtcXG51bmlmb3JtIGl2ZWMyIHVHcmlkU2l6ZTtcXG51bmlmb3JtIHZlYzQgdU1hdGVyaWFsQ29sb3I7XFxuXFxudmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG5cXG4vLyBzb21lIGhlbHBlciBmdW5jdGlvbnNcXG5pbnQgcm91bmQoZmxvYXQgdikgeyByZXR1cm4gaWZsb29yKHYgKyAwLjUpOyB9XFxuaXZlYzIgcm91bmQodmVjMiB2KSB7IHJldHVybiBpZmxvb3IodiArIDAuNSk7IH1cXG5mbG9hdCBzYXR1cmF0ZShmbG9hdCB2KSB7IHJldHVybiBjbGFtcCh2LCAwLjAsIDEuMCk7IH1cXG52ZWMyIHNhdHVyYXRlKHZlYzIgdikgeyByZXR1cm4gY2xhbXAodiwgMC4wLCAxLjApOyB9XFxuXFxuaW50IG11bChmbG9hdCB2MSwgaW50IHYyKSB7XFxuICByZXR1cm4gaWZsb29yKHYxICogZmxvYXQodjIpKTtcXG59XFxuXFxuaXZlYzIgbXVsKHZlYzIgdjEsIGl2ZWMyIHYyKSB7XFxuICByZXR1cm4gaWZsb29yKHYxICogdmVjMih2MikgKyAwLjUpO1xcbn1cXG5cXG4vLyB1bnBhY2sgYSAxNi1iaXQgaW50ZWdlciBmcm9tIGEgZmxvYXQgdmVjMlxcbmludCBnZXRJbnQxNih2ZWMyIHYpIHtcXG4gIGl2ZWMyIGl2ID0gcm91bmQodiAqIDI1NS4wKTtcXG4gIHJldHVybiBpdi54ICogSU5UKDEyOCkgKyBpdi55O1xcbn1cXG5cXG52ZWMyIHBpeGVsU2NhbGU7XFxudmVjMiBjb3ZlcmFnZSA9IHZlYzIoMC4wKTtcXG52ZWMyIHdlaWdodCA9IHZlYzIoMC41KTtcXG5jb25zdCBmbG9hdCBtaW5EaXN0YW5jZSA9IDEuMC84MTkyLjA7XFxuY29uc3QgZmxvYXQgaGFyZG5lc3MgPSAxLjA1OyAvLyBhbW91bnQgb2YgYW50aWFsaWFzXFxuXFxuLy8gdGhlIG1heGltdW0gbnVtYmVyIG9mIGN1cnZlcyBpbiBhIGdseXBoXFxuY29uc3QgaW50IE4gPSBJTlQoMjUwKTtcXG5cXG4vLyByZXRyaWV2ZXMgYW4gaW5kZXhlZCBwaXhlbCBmcm9tIGEgc2FtcGxlclxcbnZlYzQgZ2V0VGV4ZWwoc2FtcGxlcjJEIHNhbXBsZXIsIGludCBwb3MsIGl2ZWMyIHNpemUpIHtcXG4gIGludCB3aWR0aCA9IHNpemUueDtcXG4gIGludCB5ID0gaWZsb29yKHBvcyAvIHdpZHRoKTtcXG4gIGludCB4ID0gcG9zIC0geSAqIHdpZHRoOyAgLy8gcG9zICUgd2lkdGhcXG5cXG4gIHJldHVybiB0ZXh0dXJlMkQoc2FtcGxlciwgKHZlYzIoeCwgeSkgKyAwLjUpIC8gdmVjMihzaXplKSk7XFxufVxcblxcbnZvaWQgY2FsdWxhdGVDcm9zc2luZ3ModmVjMiBwMCwgdmVjMiBwMSwgdmVjMiBwMiwgb3V0IHZlYzIgQzEsIG91dCB2ZWMyIEMyKSB7XFxuXFxuICAvLyBnZXQgdGhlIGNvZWZmaWNpZW50cyBvZiB0aGUgcXVhZHJhdGljIGluIHRcXG4gIHZlYzIgYSA9IHAwIC0gcDEgKiAyLjAgKyBwMjtcXG4gIHZlYzIgYiA9IHAwIC0gcDE7XFxuICB2ZWMyIGMgPSBwMCAtIHZUZXhDb29yZDtcXG5cXG4gIC8vIGZvdW5kIG91dCB3aGljaCB2YWx1ZXMgb2YgJ3QnIGl0IGNyb3NzZXMgdGhlIGF4ZXNcXG4gIHZlYzIgc3VyZCA9IHNxcnQobWF4KHZlYzIoMC4wKSwgYiAqIGIgLSBhICogYykpO1xcbiAgdmVjMiB0MSA9ICgoYiAtIHN1cmQpIC8gYSkueXg7XFxuICB2ZWMyIHQyID0gKChiICsgc3VyZCkgLyBhKS55eDtcXG5cXG4gIC8vIGFwcHJveGltYXRlIHN0cmFpZ2h0IGxpbmVzIHRvIGF2b2lkIHJvdW5kaW5nIGVycm9yc1xcbiAgaWYgKGFicyhhLnkpIDwgMC4wMDEpXFxuICAgIHQxLnggPSB0Mi54ID0gYy55IC8gKDIuMCAqIGIueSk7XFxuXFxuICBpZiAoYWJzKGEueCkgPCAwLjAwMSlcXG4gICAgdDEueSA9IHQyLnkgPSBjLnggLyAoMi4wICogYi54KTtcXG5cXG4gIC8vIHBsdWcgaW50byBxdWFkcmF0aWMgZm9ybXVsYSB0byBmaW5kIHRoZSBjb3JyZGluYXRlcyBvZiB0aGUgY3Jvc3NpbmdzXFxuICBDMSA9ICgoYSAqIHQxIC0gYiAqIDIuMCkgKiB0MSArIGMpICogcGl4ZWxTY2FsZTtcXG4gIEMyID0gKChhICogdDIgLSBiICogMi4wKSAqIHQyICsgYykgKiBwaXhlbFNjYWxlO1xcbn1cXG5cXG52b2lkIGNvdmVyYWdlWCh2ZWMyIHAwLCB2ZWMyIHAxLCB2ZWMyIHAyKSB7XFxuXFxuICB2ZWMyIEMxLCBDMjtcXG4gIGNhbHVsYXRlQ3Jvc3NpbmdzKHAwLCBwMSwgcDIsIEMxLCBDMik7XFxuXFxuICAvLyBkZXRlcm1pbmUgb24gd2hpY2ggc2lkZSBvZiB0aGUgeC1heGlzIHRoZSBwb2ludHMgbGllXFxuICBib29sIHkwID0gcDAueSA+IHZUZXhDb29yZC55O1xcbiAgYm9vbCB5MSA9IHAxLnkgPiB2VGV4Q29vcmQueTtcXG4gIGJvb2wgeTIgPSBwMi55ID4gdlRleENvb3JkLnk7XFxuXFxuICAvLyBjb3VsZCB3ZWIgYmUgdW5kZXIgdGhlIGN1cnZlIChhZnRlciB0MSk/XFxuICBpZiAoeTEgPyAheTIgOiB5MCkge1xcbiAgICAvLyBhZGQgdGhlIGNvdmVyYWdlIGZvciB0MVxcbiAgICBjb3ZlcmFnZS54ICs9IHNhdHVyYXRlKEMxLnggKyAwLjUpO1xcbiAgICAvLyBjYWxjdWxhdGUgdGhlIGFudGktYWxpYXNpbmcgZm9yIHQxXFxuICAgIHdlaWdodC54ID0gbWluKHdlaWdodC54LCBhYnMoQzEueCkpO1xcbiAgfVxcblxcbiAgLy8gYXJlIHdlIG91dHNpZGUgdGhlIGN1cnZlIChhZnRlciB0Mik/XFxuICBpZiAoeTEgPyAheTAgOiB5Mikge1xcbiAgICAvLyBzdWJ0cmFjdCB0aGUgY292ZXJhZ2UgZm9yIHQyXFxuICAgIGNvdmVyYWdlLnggLT0gc2F0dXJhdGUoQzIueCArIDAuNSk7XFxuICAgIC8vIGNhbGN1bGF0ZSB0aGUgYW50aS1hbGlhc2luZyBmb3IgdDJcXG4gICAgd2VpZ2h0LnggPSBtaW4od2VpZ2h0LngsIGFicyhDMi54KSk7XFxuICB9XFxufVxcblxcbi8vIHRoaXMgaXMgZXNzZW50aWFsbHkgdGhlIHNhbWUgYXMgY292ZXJhZ2VYLCBidXQgd2l0aCB0aGUgYXhlcyBzd2FwcGVkXFxudm9pZCBjb3ZlcmFnZVkodmVjMiBwMCwgdmVjMiBwMSwgdmVjMiBwMikge1xcblxcbiAgdmVjMiBDMSwgQzI7XFxuICBjYWx1bGF0ZUNyb3NzaW5ncyhwMCwgcDEsIHAyLCBDMSwgQzIpO1xcblxcbiAgYm9vbCB4MCA9IHAwLnggPiB2VGV4Q29vcmQueDtcXG4gIGJvb2wgeDEgPSBwMS54ID4gdlRleENvb3JkLng7XFxuICBib29sIHgyID0gcDIueCA+IHZUZXhDb29yZC54O1xcblxcbiAgaWYgKHgxID8gIXgyIDogeDApIHtcXG4gICAgY292ZXJhZ2UueSAtPSBzYXR1cmF0ZShDMS55ICsgMC41KTtcXG4gICAgd2VpZ2h0LnkgPSBtaW4od2VpZ2h0LnksIGFicyhDMS55KSk7XFxuICB9XFxuXFxuICBpZiAoeDEgPyAheDAgOiB4Mikge1xcbiAgICBjb3ZlcmFnZS55ICs9IHNhdHVyYXRlKEMyLnkgKyAwLjUpO1xcbiAgICB3ZWlnaHQueSA9IG1pbih3ZWlnaHQueSwgYWJzKEMyLnkpKTtcXG4gIH1cXG59XFxuXFxudm9pZCBtYWluKCkge1xcblxcbiAgLy8gY2FsY3VsYXRlIHRoZSBwaXhlbCBzY2FsZSBiYXNlZCBvbiBzY3JlZW4tY29vcmRpbmF0ZXNcXG4gIHBpeGVsU2NhbGUgPSBoYXJkbmVzcyAvIGZ3aWR0aCh2VGV4Q29vcmQpO1xcblxcbiAgLy8gd2hpY2ggZ3JpZCBjZWxsIGlzIHRoaXMgcGl4ZWwgaW4/XFxuICBpdmVjMiBncmlkQ29vcmQgPSBpZmxvb3IodlRleENvb3JkICogdmVjMih1R3JpZFNpemUpKTtcXG5cXG4gIC8vIGludGVyc2VjdCBjdXJ2ZXMgaW4gdGhpcyByb3dcXG4gIHtcXG4gICAgLy8gdGhlIGluZGV4IGludG8gdGhlIHJvdyBpbmZvIGJpdG1hcFxcbiAgICBpbnQgcm93SW5kZXggPSBncmlkQ29vcmQueSArIHVHcmlkT2Zmc2V0Lnk7XFxuICAgIC8vIGZldGNoIHRoZSBpbmZvIHRleGVsXFxuICAgIHZlYzQgcm93SW5mbyA9IGdldFRleGVsKHVTYW1wbGVyUm93cywgcm93SW5kZXgsIHVHcmlkSW1hZ2VTaXplKTtcXG4gICAgLy8gdW5wYWNrIHRoZSByb3dJbmZvXFxuICAgIGludCByb3dTdHJva2VJbmRleCA9IGdldEludDE2KHJvd0luZm8ueHkpO1xcbiAgICBpbnQgcm93U3Ryb2tlQ291bnQgPSBnZXRJbnQxNihyb3dJbmZvLnp3KTtcXG5cXG4gICAgZm9yIChpbnQgaVJvd1N0cm9rZSA9IElOVCgwKTsgaVJvd1N0cm9rZSA8IE47IGlSb3dTdHJva2UrKykge1xcbiAgICAgIGlmIChpUm93U3Ryb2tlID49IHJvd1N0cm9rZUNvdW50KVxcbiAgICAgICAgYnJlYWs7XFxuXFxuICAgICAgLy8gZWFjaCBzdHJva2UgaXMgbWFkZSB1cCBvZiAzIHBvaW50czogdGhlIHN0YXJ0IGFuZCBjb250cm9sIHBvaW50XFxuICAgICAgLy8gYW5kIHRoZSBzdGFydCBvZiB0aGUgbmV4dCBjdXJ2ZS5cXG4gICAgICAvLyBmZXRjaCB0aGUgaW5kaWNlcyBvZiB0aGlzIHBhaXIgb2Ygc3Ryb2tlczpcXG4gICAgICB2ZWM0IHN0cm9rZUluZGljZXMgPSBnZXRUZXhlbCh1U2FtcGxlclJvd1N0cm9rZXMsIHJvd1N0cm9rZUluZGV4KyssIHVDZWxsc0ltYWdlU2l6ZSk7XFxuXFxuICAgICAgLy8gdW5wYWNrIHRoZSBzdHJva2UgaW5kZXhcXG4gICAgICBpbnQgc3Ryb2tlUG9zID0gZ2V0SW50MTYoc3Ryb2tlSW5kaWNlcy54eSk7XFxuXFxuICAgICAgLy8gZmV0Y2ggdGhlIHR3byBzdHJva2VzXFxuICAgICAgdmVjNCBzdHJva2UwID0gZ2V0VGV4ZWwodVNhbXBsZXJTdHJva2VzLCBzdHJva2VQb3MgKyBJTlQoMCksIHVTdHJva2VJbWFnZVNpemUpO1xcbiAgICAgIHZlYzQgc3Ryb2tlMSA9IGdldFRleGVsKHVTYW1wbGVyU3Ryb2tlcywgc3Ryb2tlUG9zICsgSU5UKDEpLCB1U3Ryb2tlSW1hZ2VTaXplKTtcXG5cXG4gICAgICAvLyBjYWxjdWxhdGUgdGhlIGNvdmVyYWdlXFxuICAgICAgY292ZXJhZ2VYKHN0cm9rZTAueHksIHN0cm9rZTAuencsIHN0cm9rZTEueHkpO1xcbiAgICB9XFxuICB9XFxuXFxuICAvLyBpbnRlcnNlY3QgY3VydmVzIGluIHRoaXMgY29sdW1uXFxuICB7XFxuICAgIGludCBjb2xJbmRleCA9IGdyaWRDb29yZC54ICsgdUdyaWRPZmZzZXQueDtcXG4gICAgdmVjNCBjb2xJbmZvID0gZ2V0VGV4ZWwodVNhbXBsZXJDb2xzLCBjb2xJbmRleCwgdUdyaWRJbWFnZVNpemUpO1xcbiAgICBpbnQgY29sU3Ryb2tlSW5kZXggPSBnZXRJbnQxNihjb2xJbmZvLnh5KTtcXG4gICAgaW50IGNvbFN0cm9rZUNvdW50ID0gZ2V0SW50MTYoY29sSW5mby56dyk7XFxuICAgIFxcbiAgICBmb3IgKGludCBpQ29sU3Ryb2tlID0gSU5UKDApOyBpQ29sU3Ryb2tlIDwgTjsgaUNvbFN0cm9rZSsrKSB7XFxuICAgICAgaWYgKGlDb2xTdHJva2UgPj0gY29sU3Ryb2tlQ291bnQpXFxuICAgICAgICBicmVhaztcXG5cXG4gICAgICB2ZWM0IHN0cm9rZUluZGljZXMgPSBnZXRUZXhlbCh1U2FtcGxlckNvbFN0cm9rZXMsIGNvbFN0cm9rZUluZGV4KyssIHVDZWxsc0ltYWdlU2l6ZSk7XFxuXFxuICAgICAgaW50IHN0cm9rZVBvcyA9IGdldEludDE2KHN0cm9rZUluZGljZXMueHkpO1xcbiAgICAgIHZlYzQgc3Ryb2tlMCA9IGdldFRleGVsKHVTYW1wbGVyU3Ryb2tlcywgc3Ryb2tlUG9zICsgSU5UKDApLCB1U3Ryb2tlSW1hZ2VTaXplKTtcXG4gICAgICB2ZWM0IHN0cm9rZTEgPSBnZXRUZXhlbCh1U2FtcGxlclN0cm9rZXMsIHN0cm9rZVBvcyArIElOVCgxKSwgdVN0cm9rZUltYWdlU2l6ZSk7XFxuICAgICAgY292ZXJhZ2VZKHN0cm9rZTAueHksIHN0cm9rZTAuencsIHN0cm9rZTEueHkpO1xcbiAgICB9XFxuICB9XFxuXFxuICB3ZWlnaHQgPSBzYXR1cmF0ZSgxLjAgLSB3ZWlnaHQgKiAyLjApO1xcbiAgZmxvYXQgZGlzdGFuY2UgPSBtYXgod2VpZ2h0LnggKyB3ZWlnaHQueSwgbWluRGlzdGFuY2UpOyAvLyBtYW5oYXR0YW4gYXBwcm94LlxcbiAgZmxvYXQgYW50aWFsaWFzID0gYWJzKGRvdChjb3ZlcmFnZSwgd2VpZ2h0KSAvIGRpc3RhbmNlKTtcXG4gIGZsb2F0IGNvdmVyID0gbWluKGFicyhjb3ZlcmFnZS54KSwgYWJzKGNvdmVyYWdlLnkpKTtcXG4gIGdsX0ZyYWdDb2xvciA9IHVNYXRlcmlhbENvbG9yO1xcbiAgZ2xfRnJhZ0NvbG9yLmEgKj0gc2F0dXJhdGUobWF4KGFudGlhbGlhcywgY292ZXIpKTtcXG59XCIsbGluZVZlcnQ6XCIvKlxcbiAgUGFydCBvZiB0aGUgUHJvY2Vzc2luZyBwcm9qZWN0IC0gaHR0cDovL3Byb2Nlc3Npbmcub3JnXFxuICBDb3B5cmlnaHQgKGMpIDIwMTItMTUgVGhlIFByb2Nlc3NpbmcgRm91bmRhdGlvblxcbiAgQ29weXJpZ2h0IChjKSAyMDA0LTEyIEJlbiBGcnkgYW5kIENhc2V5IFJlYXNcXG4gIENvcHlyaWdodCAoYykgMjAwMS0wNCBNYXNzYWNodXNldHRzIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5XFxuICBUaGlzIGxpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yXFxuICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljXFxuICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCB2ZXJzaW9uIDIuMS5cXG4gIFRoaXMgbGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxcbiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcXG4gIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VXFxuICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxcbiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsXFxuICBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgbGlicmFyeTsgaWYgbm90LCB3cml0ZSB0byB0aGVcXG4gIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLiwgNTkgVGVtcGxlIFBsYWNlLCBTdWl0ZSAzMzAsXFxuICBCb3N0b24sIE1BICAwMjExMS0xMzA3ICBVU0FcXG4qL1xcblxcbiNkZWZpbmUgUFJPQ0VTU0lOR19MSU5FX1NIQURFUlxcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIGZsb2F0IHVTdHJva2VXZWlnaHQ7XFxuXFxudW5pZm9ybSB2ZWM0IHVWaWV3cG9ydDtcXG51bmlmb3JtIGludCB1UGVyc3BlY3RpdmU7XFxuXFxuYXR0cmlidXRlIHZlYzQgYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWM0IGFEaXJlY3Rpb247XFxuICBcXG52b2lkIG1haW4oKSB7XFxuICAvLyB1c2luZyBhIHNjYWxlIDwxIG1vdmVzIHRoZSBsaW5lcyB0b3dhcmRzIHRoZSBjYW1lcmFcXG4gIC8vIGluIG9yZGVyIHRvIHByZXZlbnQgcG9wcGluZyBlZmZlY3RzIGR1ZSB0byBoYWxmIG9mXFxuICAvLyB0aGUgbGluZSBkaXNhcHBlYXJpbmcgYmVoaW5kIHRoZSBnZW9tZXRyeSBmYWNlcy5cXG4gIHZlYzMgc2NhbGUgPSB2ZWMzKDAuOTk5NSk7XFxuXFxuICB2ZWM0IHBvc3AgPSB1TW9kZWxWaWV3TWF0cml4ICogYVBvc2l0aW9uO1xcbiAgdmVjNCBwb3NxID0gdU1vZGVsVmlld01hdHJpeCAqIChhUG9zaXRpb24gKyB2ZWM0KGFEaXJlY3Rpb24ueHl6LCAwKSk7XFxuXFxuICAvLyBNb3ZpbmcgdmVydGljZXMgc2xpZ2h0bHkgdG93YXJkIHRoZSBjYW1lcmFcXG4gIC8vIHRvIGF2b2lkIGRlcHRoLWZpZ2h0aW5nIHdpdGggdGhlIGZpbGwgdHJpYW5nbGVzLlxcbiAgLy8gRGlzY3Vzc2VkIGhlcmU6XFxuICAvLyBodHRwOi8vd3d3Lm9wZW5nbC5vcmcvZGlzY3Vzc2lvbl9ib2FyZHMvdWJidGhyZWFkcy5waHA/dWJiPXNob3dmbGF0Jk51bWJlcj0yNTI4NDggIFxcbiAgcG9zcC54eXogPSBwb3NwLnh5eiAqIHNjYWxlO1xcbiAgcG9zcS54eXogPSBwb3NxLnh5eiAqIHNjYWxlO1xcblxcbiAgdmVjNCBwID0gdVByb2plY3Rpb25NYXRyaXggKiBwb3NwO1xcbiAgdmVjNCBxID0gdVByb2plY3Rpb25NYXRyaXggKiBwb3NxO1xcblxcbiAgLy8gZm9ybXVsYSB0byBjb252ZXJ0IGZyb20gY2xpcCBzcGFjZSAocmFuZ2UgLTEuLjEpIHRvIHNjcmVlbiBzcGFjZSAocmFuZ2UgMC4uW3dpZHRoIG9yIGhlaWdodF0pXFxuICAvLyBzY3JlZW5fcCA9IChwLnh5L3AudyArIDwxLDE+KSAqIDAuNSAqIHVWaWV3cG9ydC56d1xcblxcbiAgLy8gcHJldmVudCBkaXZpc2lvbiBieSBXIGJ5IHRyYW5zZm9ybWluZyB0aGUgdGFuZ2VudCBmb3JtdWxhIChkaXYgYnkgMCBjYXVzZXNcXG4gIC8vIHRoZSBsaW5lIHRvIGRpc2FwcGVhciwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9jZXNzaW5nL3Byb2Nlc3NpbmcvaXNzdWVzLzUxODMpXFxuICAvLyB0ID0gc2NyZWVuX3EgLSBzY3JlZW5fcFxcbiAgLy9cXG4gIC8vIHRhbmdlbnQgaXMgbm9ybWFsaXplZCBhbmQgd2UgZG9uJ3QgY2FyZSB3aGljaCBhRGlyZWN0aW9uIGl0IHBvaW50cyB0byAoKy0pXFxuICAvLyB0ID0gKy0gbm9ybWFsaXplKCBzY3JlZW5fcSAtIHNjcmVlbl9wIClcXG4gIC8vIHQgPSArLSBub3JtYWxpemUoIChxLnh5L3Eudys8MSwxPikqMC41KnVWaWV3cG9ydC56dyAtIChwLnh5L3Audys8MSwxPikqMC41KnVWaWV3cG9ydC56dyApXFxuICAvL1xcbiAgLy8gZXh0cmFjdCBjb21tb24gZmFjdG9yLCA8MSwxPiAtIDwxLDE+IGNhbmNlbHMgb3V0XFxuICAvLyB0ID0gKy0gbm9ybWFsaXplKCAocS54eS9xLncgLSBwLnh5L3AudykgKiAwLjUgKiB1Vmlld3BvcnQuencgKVxcbiAgLy9cXG4gIC8vIGNvbnZlcnQgdG8gY29tbW9uIGRpdmlzb3JcXG4gIC8vIHQgPSArLSBub3JtYWxpemUoICgocS54eSpwLncgLSBwLnh5KnEudykgLyAocC53KnEudykpICogMC41ICogdVZpZXdwb3J0Lnp3IClcXG4gIC8vXFxuICAvLyByZW1vdmUgdGhlIGNvbW1vbiBzY2FsYXIgZGl2aXNvci9mYWN0b3IsIG5vdCBuZWVkZWQgZHVlIHRvIG5vcm1hbGl6ZSBhbmQgKy1cXG4gIC8vIChrZWVwIHVWaWV3cG9ydCAtIGNhbid0IHJlbW92ZSBiZWNhdXNlIGl0IGhhcyBkaWZmZXJlbnQgY29tcG9uZW50cyBmb3IgeCBhbmQgeVxcbiAgLy8gIGFuZCBjb3JyZWN0cyBmb3IgYXNwZWN0IHJhdGlvLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb2Nlc3NpbmcvcHJvY2Vzc2luZy9pc3N1ZXMvNTE4MSlcXG4gIC8vIHQgPSArLSBub3JtYWxpemUoIChxLnh5KnAudyAtIHAueHkqcS53KSAqIHVWaWV3cG9ydC56dyApXFxuXFxuICB2ZWMyIHRhbmdlbnQgPSBub3JtYWxpemUoKHEueHkqcC53IC0gcC54eSpxLncpICogdVZpZXdwb3J0Lnp3KTtcXG5cXG4gIC8vIGZsaXAgdGFuZ2VudCB0byBub3JtYWwgKGl0J3MgYWxyZWFkeSBub3JtYWxpemVkKVxcbiAgdmVjMiBub3JtYWwgPSB2ZWMyKC10YW5nZW50LnksIHRhbmdlbnQueCk7XFxuXFxuICBmbG9hdCB0aGlja25lc3MgPSBhRGlyZWN0aW9uLncgKiB1U3Ryb2tlV2VpZ2h0O1xcbiAgdmVjMiBvZmZzZXQgPSBub3JtYWwgKiB0aGlja25lc3MgLyAyLjA7XFxuXFxuICB2ZWMyIGN1clBlcnNwU2NhbGU7XFxuXFxuICBpZih1UGVyc3BlY3RpdmUgPT0gMSkge1xcbiAgICAvLyBQZXJzcGVjdGl2ZSAtLS1cXG4gICAgLy8gY29udmVydCBmcm9tIHdvcmxkIHRvIGNsaXAgYnkgbXVsdGlwbHlpbmcgd2l0aCBwcm9qZWN0aW9uIHNjYWxpbmcgZmFjdG9yXFxuICAgIC8vIHRvIGdldCB0aGUgcmlnaHQgdGhpY2tuZXNzIChzZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb2Nlc3NpbmcvcHJvY2Vzc2luZy9pc3N1ZXMvNTE4MilcXG4gICAgLy8gaW52ZXJ0IFksIHByb2plY3Rpb25zIGluIFByb2Nlc3NpbmcgaW52ZXJ0IFlcXG4gICAgY3VyUGVyc3BTY2FsZSA9ICh1UHJvamVjdGlvbk1hdHJpeCAqIHZlYzQoMSwgLTEsIDAsIDApKS54eTtcXG4gIH0gZWxzZSB7XFxuICAgIC8vIE5vIFBlcnNwZWN0aXZlIC0tLVxcbiAgICAvLyBtdWx0aXBseSBieSBXICh0byBjYW5jZWwgb3V0IGRpdmlzaW9uIGJ5IFcgbGF0ZXIgaW4gdGhlIHBpcGVsaW5lKSBhbmRcXG4gICAgLy8gY29udmVydCBmcm9tIHNjcmVlbiB0byBjbGlwIChkZXJpdmVkIGZyb20gY2xpcCB0byBzY3JlZW4gYWJvdmUpXFxuICAgIGN1clBlcnNwU2NhbGUgPSBwLncgLyAoMC41ICogdVZpZXdwb3J0Lnp3KTtcXG4gIH1cXG5cXG4gIGdsX1Bvc2l0aW9uLnh5ID0gcC54eSArIG9mZnNldC54eSAqIGN1clBlcnNwU2NhbGU7XFxuICBnbF9Qb3NpdGlvbi56dyA9IHAuenc7XFxufVxcblwiLGxpbmVGcmFnOlwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxucHJlY2lzaW9uIG1lZGl1bXAgaW50O1xcblxcbnVuaWZvcm0gdmVjNCB1TWF0ZXJpYWxDb2xvcjtcXG5cXG52b2lkIG1haW4oKSB7XFxuICBnbF9GcmFnQ29sb3IgPSB1TWF0ZXJpYWxDb2xvcjtcXG59XCIscG9pbnRWZXJ0OlwiYXR0cmlidXRlIHZlYzMgYVBvc2l0aW9uO1xcbnVuaWZvcm0gZmxvYXQgdVBvaW50U2l6ZTtcXG52YXJ5aW5nIGZsb2F0IHZTdHJva2VXZWlnaHQ7XFxudW5pZm9ybSBtYXQ0IHVNb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcbnZvaWQgbWFpbigpIHtcXG5cXHR2ZWM0IHBvc2l0aW9uVmVjNCA9ICB2ZWM0KGFQb3NpdGlvbiwgMS4wKTtcXG5cXHRnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdU1vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uVmVjNDtcXG5cXHRnbF9Qb2ludFNpemUgPSB1UG9pbnRTaXplO1xcblxcdHZTdHJva2VXZWlnaHQgPSB1UG9pbnRTaXplO1xcbn1cIixwb2ludEZyYWc6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG5wcmVjaXNpb24gbWVkaXVtcCBpbnQ7XFxudW5pZm9ybSB2ZWM0IHVNYXRlcmlhbENvbG9yO1xcbnZhcnlpbmcgZmxvYXQgdlN0cm9rZVdlaWdodDtcXG5cXG52b2lkIG1haW4oKXtcXG5cXHRmbG9hdCBtYXNrID0gMC4wO1xcblxcblxcdC8vIG1ha2UgYSBjaXJjdWxhciBtYXNrIHVzaW5nIHRoZSBnbF9Qb2ludENvb3JkIChnb2VzIGZyb20gMCAtIDEgb24gYSBwb2ludClcXG4gICAgLy8gbWlnaHQgYmUgYWJsZSB0byBnZXQgYSBuaWNlciBlZGdlIG9uIGJpZyBzdHJva2V3ZWlnaHRzIHdpdGggc21vb3Roc3RlcCBidXQgc2xpZ2h0bHkgbGVzcyBwZXJmb3JtYW50XFxuXFxuXFx0bWFzayA9IHN0ZXAoMC45OCwgbGVuZ3RoKGdsX1BvaW50Q29vcmQgKiAyLjAgLSAxLjApKTtcXG5cXG5cXHQvLyBpZiBzdHJva2VXZWlnaHQgaXMgMSBvciBsZXNzIGxldHMganVzdCBkcmF3IGEgc3F1YXJlXFxuXFx0Ly8gdGhpcyBwcmV2ZW50cyB3ZWlyZCBhcnRpZmFjdGluZyBmcm9tIGNhcnZpbmcgY2lyY2xlcyB3aGVuIG91ciBwb2ludHMgYXJlIHJlYWxseSBzbWFsbFxcblxcdC8vIGlmIHN0cm9rZVdlaWdodCBpcyBsYXJnZXIgdGhhbiAxLCB3ZSBqdXN0IHVzZSBpdCBhcyBpc1xcblxcblxcdG1hc2sgPSBtaXgoMC4wLCBtYXNrLCBjbGFtcChmbG9vcih2U3Ryb2tlV2VpZ2h0IC0gMC41KSwwLjAsMS4wKSk7XFxuXFxuXFx0Ly8gdGhyb3cgYXdheSB0aGUgYm9yZGVycyBvZiB0aGUgbWFza1xcbiAgICAvLyBvdGhlcndpc2Ugd2UgZ2V0IHdlaXJkIGFscGhhIGJsZW5kaW5nIGlzc3Vlc1xcblxcblxcdGlmKG1hc2sgPiAwLjk4KXtcXG4gICAgICBkaXNjYXJkO1xcbiAgXFx0fVxcblxcbiAgXFx0Z2xfRnJhZ0NvbG9yID0gdmVjNCh1TWF0ZXJpYWxDb2xvci5yZ2IgKiAoMS4wIC0gbWFzayksIHVNYXRlcmlhbENvbG9yLmEpIDtcXG59XCJ9O3UuZGVmYXVsdC5SZW5kZXJlckdMPWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiB1LmRlZmF1bHQuUmVuZGVyZXIuY2FsbCh0aGlzLGUsdCxyKSx0aGlzLl9zZXRBdHRyaWJ1dGVEZWZhdWx0cyh0KSx0aGlzLl9pbml0Q29udGV4dCgpLHRoaXMuaXNQM0Q9ITAsdGhpcy5HTD10aGlzLmRyYXdpbmdDb250ZXh0LHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcImRyYXdpbmdDb250ZXh0XCIsdGhpcy5kcmF3aW5nQ29udGV4dCksdGhpcy5faXNFcmFzaW5nPSExLHRoaXMuX2VuYWJsZUxpZ2h0aW5nPSExLHRoaXMuYW1iaWVudExpZ2h0Q29sb3JzPVtdLHRoaXMuc3BlY3VsYXJDb2xvcnM9WzEsMSwxXSx0aGlzLmRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zPVtdLHRoaXMuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnM9W10sdGhpcy5kaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnM9W10sdGhpcy5wb2ludExpZ2h0UG9zaXRpb25zPVtdLHRoaXMucG9pbnRMaWdodERpZmZ1c2VDb2xvcnM9W10sdGhpcy5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnM9W10sdGhpcy5zcG90TGlnaHRQb3NpdGlvbnM9W10sdGhpcy5zcG90TGlnaHREaXJlY3Rpb25zPVtdLHRoaXMuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycz1bXSx0aGlzLnNwb3RMaWdodFNwZWN1bGFyQ29sb3JzPVtdLHRoaXMuc3BvdExpZ2h0QW5nbGU9W10sdGhpcy5zcG90TGlnaHRDb25jPVtdLHRoaXMuZHJhd01vZGU9aS5GSUxMLHRoaXMuY3VyRmlsbENvbG9yPXRoaXMuX2NhY2hlZEZpbGxTdHlsZT1bMSwxLDEsMV0sdGhpcy5jdXJTdHJva2VDb2xvcj10aGlzLl9jYWNoZWRTdHJva2VTdHlsZT1bMCwwLDAsMV0sdGhpcy5jdXJCbGVuZE1vZGU9aS5CTEVORCx0aGlzLl9jYWNoZWRCbGVuZE1vZGU9dm9pZCAwLHRoaXMuYmxlbmRFeHQ9dGhpcy5HTC5nZXRFeHRlbnNpb24oXCJFWFRfYmxlbmRfbWlubWF4XCIpLHRoaXMuX2lzQmxlbmRpbmc9ITEsdGhpcy5fdXNlU3BlY3VsYXJNYXRlcmlhbD0hMSx0aGlzLl91c2VFbWlzc2l2ZU1hdGVyaWFsPSExLHRoaXMuX3VzZU5vcm1hbE1hdGVyaWFsPSExLHRoaXMuX3VzZVNoaW5pbmVzcz0xLHRoaXMuX3RpbnQ9WzI1NSwyNTUsMjU1LDI1NV0sdGhpcy5jb25zdGFudEF0dGVudWF0aW9uPTEsdGhpcy5saW5lYXJBdHRlbnVhdGlvbj0wLHRoaXMucXVhZHJhdGljQXR0ZW51YXRpb249MCx0aGlzLnVNVk1hdHJpeD1uZXcgdS5kZWZhdWx0Lk1hdHJpeCx0aGlzLnVQTWF0cml4PW5ldyB1LmRlZmF1bHQuTWF0cml4LHRoaXMudU5NYXRyaXg9bmV3IHUuZGVmYXVsdC5NYXRyaXgoXCJtYXQzXCIpLHRoaXMuX2N1cnJlbnROb3JtYWw9bmV3IHUuZGVmYXVsdC5WZWN0b3IoMCwwLDEpLHRoaXMuX2N1ckNhbWVyYT1uZXcgdS5kZWZhdWx0LkNhbWVyYSh0aGlzKSx0aGlzLl9jdXJDYW1lcmEuX2NvbXB1dGVDYW1lcmFEZWZhdWx0U2V0dGluZ3MoKSx0aGlzLl9jdXJDYW1lcmEuX3NldERlZmF1bHRDYW1lcmEoKSx0aGlzLl9kZWZhdWx0TGlnaHRTaGFkZXI9dm9pZCAwLHRoaXMuX2RlZmF1bHRJbW1lZGlhdGVNb2RlU2hhZGVyPXZvaWQgMCx0aGlzLl9kZWZhdWx0Tm9ybWFsU2hhZGVyPXZvaWQgMCx0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXI9dm9pZCAwLHRoaXMuX2RlZmF1bHRQb2ludFNoYWRlcj12b2lkIDAsdGhpcy51c2VyRmlsbFNoYWRlcj12b2lkIDAsdGhpcy51c2VyU3Ryb2tlU2hhZGVyPXZvaWQgMCx0aGlzLnVzZXJQb2ludFNoYWRlcj12b2lkIDAsdGhpcy5yZXRhaW5lZE1vZGU9e2dlb21ldHJ5Ont9LGJ1ZmZlcnM6e3N0cm9rZTpbbmV3IHUuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMyxcImxpbmVWZXJ0aWNlc1wiLFwibGluZVZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl9mbGF0dGVuKSxuZXcgdS5kZWZhdWx0LlJlbmRlckJ1ZmZlcig0LFwibGluZU5vcm1hbHNcIixcImxpbmVOb3JtYWxCdWZmZXJcIixcImFEaXJlY3Rpb25cIix0aGlzLHRoaXMuX2ZsYXR0ZW4pXSxmaWxsOltuZXcgdS5kZWZhdWx0LlJlbmRlckJ1ZmZlcigzLFwidmVydGljZXNcIixcInZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl92VG9OQXJyYXkpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0ZXhOb3JtYWxzXCIsXCJub3JtYWxCdWZmZXJcIixcImFOb3JtYWxcIix0aGlzLHRoaXMuX3ZUb05BcnJheSksbmV3IHUuZGVmYXVsdC5SZW5kZXJCdWZmZXIoNCxcInZlcnRleENvbG9yc1wiLFwiY29sb3JCdWZmZXJcIixcImFWZXJ0ZXhDb2xvclwiLHRoaXMpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0ZXhBbWJpZW50c1wiLFwiYW1iaWVudEJ1ZmZlclwiLFwiYUFtYmllbnRDb2xvclwiLHRoaXMpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDIsXCJ1dnNcIixcInV2QnVmZmVyXCIsXCJhVGV4Q29vcmRcIix0aGlzLHRoaXMuX2ZsYXR0ZW4pXSx0ZXh0OltuZXcgdS5kZWZhdWx0LlJlbmRlckJ1ZmZlcigzLFwidmVydGljZXNcIixcInZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl92VG9OQXJyYXkpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDIsXCJ1dnNcIixcInV2QnVmZmVyXCIsXCJhVGV4Q29vcmRcIix0aGlzLHRoaXMuX2ZsYXR0ZW4pXX19LHRoaXMuaW1tZWRpYXRlTW9kZT17Z2VvbWV0cnk6bmV3IHUuZGVmYXVsdC5HZW9tZXRyeSxzaGFwZU1vZGU6aS5UUklBTkdMRV9GQU4sX2JlemllclZlcnRleDpbXSxfcXVhZHJhdGljVmVydGV4OltdLF9jdXJ2ZVZlcnRleDpbXSxidWZmZXJzOntmaWxsOltuZXcgdS5kZWZhdWx0LlJlbmRlckJ1ZmZlcigzLFwidmVydGljZXNcIixcInZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl92VG9OQXJyYXkpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0ZXhOb3JtYWxzXCIsXCJub3JtYWxCdWZmZXJcIixcImFOb3JtYWxcIix0aGlzLHRoaXMuX3ZUb05BcnJheSksbmV3IHUuZGVmYXVsdC5SZW5kZXJCdWZmZXIoNCxcInZlcnRleENvbG9yc1wiLFwiY29sb3JCdWZmZXJcIixcImFWZXJ0ZXhDb2xvclwiLHRoaXMpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0ZXhBbWJpZW50c1wiLFwiYW1iaWVudEJ1ZmZlclwiLFwiYUFtYmllbnRDb2xvclwiLHRoaXMpLG5ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDIsXCJ1dnNcIixcInV2QnVmZmVyXCIsXCJhVGV4Q29vcmRcIix0aGlzLHRoaXMuX2ZsYXR0ZW4pXSxzdHJva2U6W25ldyB1LmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJsaW5lVmVydGljZXNcIixcImxpbmVWZXJ0ZXhCdWZmZXJcIixcImFQb3NpdGlvblwiLHRoaXMsdGhpcy5fZmxhdHRlbiksbmV3IHUuZGVmYXVsdC5SZW5kZXJCdWZmZXIoNCxcImxpbmVOb3JtYWxzXCIsXCJsaW5lTm9ybWFsQnVmZmVyXCIsXCJhRGlyZWN0aW9uXCIsdGhpcyx0aGlzLl9mbGF0dGVuKV0scG9pbnQ6dGhpcy5HTC5jcmVhdGVCdWZmZXIoKX19LHRoaXMucG9pbnRTaXplPTUsdGhpcy5jdXJTdHJva2VXZWlnaHQ9MSx0aGlzLnRleHR1cmVzPVtdLHRoaXMudGV4dHVyZU1vZGU9aS5JTUFHRSx0aGlzLnRleHR1cmVXcmFwWD1pLkNMQU1QLHRoaXMudGV4dHVyZVdyYXBZPWkuQ0xBTVAsdGhpcy5fdGV4PW51bGwsdGhpcy5fY3VydmVUaWdodG5lc3M9Nix0aGlzLl9sb29rVXBUYWJsZUJlemllcj1bXSx0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpYz1bXSx0aGlzLl9sdXRCZXppZXJEZXRhaWw9MCx0aGlzLl9sdXRRdWFkcmF0aWNEZXRhaWw9MCx0aGlzLl90ZXNzeT10aGlzLl9pbml0VGVzc3koKSx0aGlzLmZvbnRJbmZvcz17fSx0aGlzLl9jdXJTaGFkZXI9dm9pZCAwLHRoaXN9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHUuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUpLHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fc2V0QXR0cmlidXRlRGVmYXVsdHM9ZnVuY3Rpb24oZSl7dmFyIHQ9e2FscGhhOiExLGRlcHRoOiEwLHN0ZW5jaWw6ITAsYW50aWFsaWFzOm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcInNhZmFyaVwiKSxwcmVtdWx0aXBsaWVkQWxwaGE6ITEscHJlc2VydmVEcmF3aW5nQnVmZmVyOiEwLHBlclBpeGVsTGlnaHRpbmc6ITB9O251bGw9PT1lLl9nbEF0dHJpYnV0ZXM/ZS5fZ2xBdHRyaWJ1dGVzPXQ6ZS5fZ2xBdHRyaWJ1dGVzPU9iamVjdC5hc3NpZ24odCxlLl9nbEF0dHJpYnV0ZXMpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2luaXRDb250ZXh0PWZ1bmN0aW9uKCl7dHJ5e2lmKHRoaXMuZHJhd2luZ0NvbnRleHQ9dGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIndlYmdsXCIsdGhpcy5fcEluc3QuX2dsQXR0cmlidXRlcyl8fHRoaXMuY2FudmFzLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIix0aGlzLl9wSW5zdC5fZ2xBdHRyaWJ1dGVzKSxudWxsPT09dGhpcy5kcmF3aW5nQ29udGV4dCl0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBjcmVhdGluZyB3ZWJnbCBjb250ZXh0XCIpO3ZhciBlPXRoaXMuZHJhd2luZ0NvbnRleHQ7ZS5lbmFibGUoZS5ERVBUSF9URVNUKSxlLmRlcHRoRnVuYyhlLkxFUVVBTCksZS52aWV3cG9ydCgwLDAsZS5kcmF3aW5nQnVmZmVyV2lkdGgsZS5kcmF3aW5nQnVmZmVySGVpZ2h0KSx0aGlzLl92aWV3cG9ydD10aGlzLmRyYXdpbmdDb250ZXh0LmdldFBhcmFtZXRlcih0aGlzLmRyYXdpbmdDb250ZXh0LlZJRVdQT1JUKX1jYXRjaChlKXt0aHJvdyBlfX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9yZXNldENvbnRleHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLndpZHRoLG49dGhpcy5oZWlnaHQsbz10aGlzLmNhbnZhcy5pZCxpPXRoaXMuX3BJbnN0IGluc3RhbmNlb2YgdS5kZWZhdWx0LkdyYXBoaWNzO2lmKGkpe3ZhciBhPXRoaXMuX3BJbnN0O2EuY2FudmFzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYS5jYW52YXMpLGEuY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksKGEuX3BJbnN0Ll91c2VyTm9kZXx8ZG9jdW1lbnQuYm9keSkuYXBwZW5kQ2hpbGQoYS5jYW52YXMpLHUuZGVmYXVsdC5FbGVtZW50LmNhbGwoYSxhLmNhbnZhcyxhLl9wSW5zdCksYS53aWR0aD1yLGEuaGVpZ2h0PW59ZWxzZXt2YXIgcz10aGlzLmNhbnZhcztzJiZzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocyksKHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSkuaWQ9byx0aGlzLl9wSW5zdC5fdXNlck5vZGU/dGhpcy5fcEluc3QuX3VzZXJOb2RlLmFwcGVuZENoaWxkKHMpOmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocyksdGhpcy5fcEluc3QuY2FudmFzPXN9dmFyIGw9bmV3IHUuZGVmYXVsdC5SZW5kZXJlckdMKHRoaXMuX3BJbnN0LmNhbnZhcyx0aGlzLl9wSW5zdCwhaSk7dGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwiX3JlbmRlcmVyXCIsbCksbC5yZXNpemUocixuKSxsLl9hcHBseURlZmF1bHRzKCksaXx8dGhpcy5fcEluc3QuX2VsZW1lbnRzLnB1c2gobCksXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmc2V0VGltZW91dChmdW5jdGlvbigpe3QuYXBwbHkod2luZG93Ll9yZW5kZXJlcixlKX0sMCl9LHUuZGVmYXVsdC5wcm90b3R5cGUuc2V0QXR0cmlidXRlcz1mdW5jdGlvbihlLHQpe2lmKHZvaWQgMCE9PXRoaXMuX2dsQXR0cmlidXRlcyl7dmFyIHI9ITA7aWYodm9pZCAwIT09dD8obnVsbD09PXRoaXMuX2dsQXR0cmlidXRlcyYmKHRoaXMuX2dsQXR0cmlidXRlcz17fSksdGhpcy5fZ2xBdHRyaWJ1dGVzW2VdIT09dCYmKHRoaXMuX2dsQXR0cmlidXRlc1tlXT10LHI9ITEpKTplIGluc3RhbmNlb2YgT2JqZWN0JiZ0aGlzLl9nbEF0dHJpYnV0ZXMhPT1lJiYodGhpcy5fZ2xBdHRyaWJ1dGVzPWUscj0hMSksdGhpcy5fcmVuZGVyZXIuaXNQM0QmJiFyKXtpZighdGhpcy5fc2V0dXBEb25lKWZvcih2YXIgbiBpbiB0aGlzLl9yZW5kZXJlci5yZXRhaW5lZE1vZGUuZ2VvbWV0cnkpaWYodGhpcy5fcmVuZGVyZXIucmV0YWluZWRNb2RlLmdlb21ldHJ5Lmhhc093blByb3BlcnR5KG4pKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoXCJTb3JyeSwgQ291bGQgbm90IHNldCB0aGUgYXR0cmlidXRlcywgeW91IG5lZWQgdG8gY2FsbCBzZXRBdHRyaWJ1dGVzKCkgYmVmb3JlIGNhbGxpbmcgdGhlIG90aGVyIGRyYXdpbmcgbWV0aG9kcyBpbiBzZXR1cCgpXCIpO3RoaXMucHVzaCgpLHRoaXMuX3JlbmRlcmVyLl9yZXNldENvbnRleHQoKSx0aGlzLnBvcCgpLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEmJih0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9yZW5kZXJlcj10aGlzLl9yZW5kZXJlcil9fWVsc2UgY29uc29sZS5sb2coXCJZb3UgYXJlIHRyeWluZyB0byB1c2Ugc2V0QXR0cmlidXRlcyBvbiBhIHA1LkdyYXBoaWNzIG9iamVjdCB0aGF0IGRvZXMgbm90IHVzZSBhIFdFQkdMIHJlbmRlcmVyLlwiKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLnVNVk1hdHJpeC5zZXQodGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzBdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxXSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMl0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzNdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs0XSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbNV0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzZdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs3XSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbOF0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzldLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMF0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzExXSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTJdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxM10sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzE0XSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTVdKSx0aGlzLmFtYmllbnRMaWdodENvbG9ycy5sZW5ndGg9MCx0aGlzLnNwZWN1bGFyQ29sb3JzPVsxLDEsMV0sdGhpcy5kaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9ucy5sZW5ndGg9MCx0aGlzLmRpcmVjdGlvbmFsTGlnaHREaWZmdXNlQ29sb3JzLmxlbmd0aD0wLHRoaXMuZGlyZWN0aW9uYWxMaWdodFNwZWN1bGFyQ29sb3JzLmxlbmd0aD0wLHRoaXMucG9pbnRMaWdodFBvc2l0aW9ucy5sZW5ndGg9MCx0aGlzLnBvaW50TGlnaHREaWZmdXNlQ29sb3JzLmxlbmd0aD0wLHRoaXMucG9pbnRMaWdodFNwZWN1bGFyQ29sb3JzLmxlbmd0aD0wLHRoaXMuc3BvdExpZ2h0UG9zaXRpb25zLmxlbmd0aD0wLHRoaXMuc3BvdExpZ2h0RGlyZWN0aW9ucy5sZW5ndGg9MCx0aGlzLnNwb3RMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoPTAsdGhpcy5zcG90TGlnaHRTcGVjdWxhckNvbG9ycy5sZW5ndGg9MCx0aGlzLnNwb3RMaWdodEFuZ2xlLmxlbmd0aD0wLHRoaXMuc3BvdExpZ2h0Q29uYy5sZW5ndGg9MCx0aGlzLl9lbmFibGVMaWdodGluZz0hMSx0aGlzLl90aW50PVsyNTUsMjU1LDI1NSwyNTVdLHRoaXMuR0wuY2xlYXIodGhpcy5HTC5ERVBUSF9CVUZGRVJfQklUKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmJhY2tncm91bmQ9ZnVuY3Rpb24oKXt2YXIgZSx0PShlPXRoaXMuX3BJbnN0KS5jb2xvci5hcHBseShlLGFyZ3VtZW50cykscj10LmxldmVsc1swXS8yNTUsbj10LmxldmVsc1sxXS8yNTUsbz10LmxldmVsc1syXS8yNTUsaT10LmxldmVsc1szXS8yNTU7dGhpcy5HTC5jbGVhckNvbG9yKHIsbixvLGkpLHRoaXMuR0wuY2xlYXIodGhpcy5HTC5DT0xPUl9CVUZGRVJfQklUKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89dS5kZWZhdWx0LnByb3RvdHlwZS5jb2xvci5hcHBseSh0aGlzLl9wSW5zdCxhcmd1bWVudHMpO3RoaXMuY3VyRmlsbENvbG9yPW8uX2FycmF5LHRoaXMuZHJhd01vZGU9aS5GSUxMLHRoaXMuX3VzZU5vcm1hbE1hdGVyaWFsPSExLHRoaXMuX3RleD1udWxsfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuc3Ryb2tlPWZ1bmN0aW9uKGUsdCxyLG4pe2FyZ3VtZW50c1szXT0yNTU7dmFyIG89dS5kZWZhdWx0LnByb3RvdHlwZS5jb2xvci5hcHBseSh0aGlzLl9wSW5zdCxhcmd1bWVudHMpO3RoaXMuY3VyU3Ryb2tlQ29sb3I9by5fYXJyYXl9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5zdHJva2VDYXA9ZnVuY3Rpb24oZSl7Y29uc29sZS5lcnJvcihcIlNvcnJ5LCBzdHJva2VDYXAoKSBpcyBub3QgeWV0IGltcGxlbWVudGVkIGluIFdFQkdMIG1vZGVcIil9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5zdHJva2VKb2luPWZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoXCJTb3JyeSwgc3Ryb2tlSm9pbigpIGlzIG5vdCB5ZXQgaW1wbGVtZW50ZWQgaW4gV0VCR0wgbW9kZVwiKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmZpbHRlcj1mdW5jdGlvbihlKXtjb25zb2xlLmVycm9yKFwiZmlsdGVyKCkgZG9lcyBub3Qgd29yayBpbiBXRUJHTCBtb2RlXCIpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuYmxlbmRNb2RlPWZ1bmN0aW9uKGUpe2U9PT1pLkRBUktFU1R8fGU9PT1pLkxJR0hURVNUfHxlPT09aS5BRER8fGU9PT1pLkJMRU5EfHxlPT09aS5TVUJUUkFDVHx8ZT09PWkuU0NSRUVOfHxlPT09aS5FWENMVVNJT058fGU9PT1pLlJFUExBQ0V8fGU9PT1pLk1VTFRJUExZfHxlPT09aS5SRU1PVkU/dGhpcy5jdXJCbGVuZE1vZGU9ZTplIT09aS5CVVJOJiZlIT09aS5PVkVSTEFZJiZlIT09aS5IQVJEX0xJR0hUJiZlIT09aS5TT0ZUX0xJR0hUJiZlIT09aS5ET0RHRXx8Y29uc29sZS53YXJuKFwiQlVSTiwgT1ZFUkxBWSwgSEFSRF9MSUdIVCwgU09GVF9MSUdIVCwgYW5kIERPREdFIG9ubHkgd29yayBmb3IgYmxlbmRNb2RlIGluIDJEIG1vZGUuXCIpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZXJhc2U9ZnVuY3Rpb24oZSx0KXt0aGlzLl9pc0VyYXNpbmd8fCh0aGlzLl9hcHBseUJsZW5kTW9kZShpLlJFTU9WRSksdGhpcy5faXNFcmFzaW5nPSEwLHRoaXMuX2NhY2hlZEZpbGxTdHlsZT10aGlzLmN1ckZpbGxDb2xvci5zbGljZSgpLHRoaXMuY3VyRmlsbENvbG9yPVsxLDEsMSxlLzI1NV0sdGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGU9dGhpcy5jdXJTdHJva2VDb2xvci5zbGljZSgpLHRoaXMuY3VyU3Ryb2tlQ29sb3I9WzEsMSwxLHQvMjU1XSl9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5ub0VyYXNlPWZ1bmN0aW9uKCl7dGhpcy5faXNFcmFzaW5nJiYodGhpcy5faXNFcmFzaW5nPSExLHRoaXMuY3VyRmlsbENvbG9yPXRoaXMuX2NhY2hlZEZpbGxTdHlsZS5zbGljZSgpLHRoaXMuY3VyU3Ryb2tlQ29sb3I9dGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGUuc2xpY2UoKSx0aGlzLmJsZW5kTW9kZSh0aGlzLl9jYWNoZWRCbGVuZE1vZGUpKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnN0cm9rZVdlaWdodD1mdW5jdGlvbihlKXt0aGlzLmN1clN0cm9rZVdlaWdodCE9PWUmJih0aGlzLnBvaW50U2l6ZT1lLHRoaXMuY3VyU3Ryb2tlV2VpZ2h0PWUpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldFBpeGVsPWZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIHI9bmV3IFVpbnQ4QXJyYXkoNCksdGhpcy5kcmF3aW5nQ29udGV4dC5yZWFkUGl4ZWxzKGUsdCwxLDEsdGhpcy5kcmF3aW5nQ29udGV4dC5SR0JBLHRoaXMuZHJhd2luZ0NvbnRleHQuVU5TSUdORURfQllURSxyKSxbclswXSxyWzFdLHJbMl0sclszXV19LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5sb2FkUGl4ZWxzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fcGl4ZWxzU3RhdGU7aWYoITA9PT10aGlzLl9wSW5zdC5fZ2xBdHRyaWJ1dGVzLnByZXNlcnZlRHJhd2luZ0J1ZmZlcil7dmFyIHQ9ZS5waXhlbHMscj10aGlzLkdMLmRyYXdpbmdCdWZmZXJXaWR0aCp0aGlzLkdMLmRyYXdpbmdCdWZmZXJIZWlnaHQqNDt0IGluc3RhbmNlb2YgVWludDhBcnJheSYmdC5sZW5ndGg9PT1yfHwodD1uZXcgVWludDhBcnJheShyKSx0aGlzLl9waXhlbHNTdGF0ZS5fc2V0UHJvcGVydHkoXCJwaXhlbHNcIix0KSk7dmFyIG49dGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eTt0aGlzLkdMLnJlYWRQaXhlbHMoMCwwLHRoaXMud2lkdGgqbix0aGlzLmhlaWdodCpuLHRoaXMuR0wuUkdCQSx0aGlzLkdMLlVOU0lHTkVEX0JZVEUsdCl9ZWxzZSBjb25zb2xlLmxvZyhcImxvYWRQaXhlbHMgb25seSB3b3JrcyBpbiBXZWJHTCB3aGVuIHByZXNlcnZlRHJhd2luZ0J1ZmZlciBpcyB0cnVlLlwiKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmdlb21ldHJ5SW5IYXNoPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT10aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVtlXX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbihlLHQpe3UuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUucmVzaXplLmNhbGwodGhpcyxlLHQpLHRoaXMuR0wudmlld3BvcnQoMCwwLHRoaXMuR0wuZHJhd2luZ0J1ZmZlcldpZHRoLHRoaXMuR0wuZHJhd2luZ0J1ZmZlckhlaWdodCksdGhpcy5fdmlld3BvcnQ9dGhpcy5HTC5nZXRQYXJhbWV0ZXIodGhpcy5HTC5WSUVXUE9SVCksdGhpcy5fY3VyQ2FtZXJhLl9yZXNpemUoKTt2YXIgcj10aGlzLl9waXhlbHNTdGF0ZTt2b2lkIDAhPT1yLnBpeGVscyYmci5fc2V0UHJvcGVydHkoXCJwaXhlbHNcIixuZXcgVWludDhBcnJheSh0aGlzLkdMLmRyYXdpbmdCdWZmZXJXaWR0aCp0aGlzLkdMLmRyYXdpbmdCdWZmZXJIZWlnaHQqNCkpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt2YXIgZT0oYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdKXx8MCx0PShhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pfHwwLHI9KGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSl8fDAsbj0oYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdKXx8MDt0aGlzLkdMLmNsZWFyQ29sb3IoZSx0LHIsbiksdGhpcy5HTC5jbGVhckRlcHRoKDEpLHRoaXMuR0wuY2xlYXIodGhpcy5HTC5DT0xPUl9CVUZGRVJfQklUfHRoaXMuR0wuREVQVEhfQlVGRkVSX0JJVCl9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5hcHBseU1hdHJpeD1mdW5jdGlvbihlLHQscixuLG8saSl7MTY9PT1hcmd1bWVudHMubGVuZ3RoP3UuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLmFwcGx5LmFwcGx5KHRoaXMudU1WTWF0cml4LGFyZ3VtZW50cyk6dGhpcy51TVZNYXRyaXguYXBwbHkoW2UsdCwwLDAscixuLDAsMCwwLDAsMSwwLG8saSwwLDFdKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnRyYW5zbGF0ZT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiB1LmRlZmF1bHQuVmVjdG9yJiYocj1lLnosdD1lLnksZT1lLngpLHRoaXMudU1WTWF0cml4LnRyYW5zbGF0ZShbZSx0LHJdKSx0aGlzfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuc2NhbGU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB0aGlzLnVNVk1hdHJpeC5zY2FsZShlLHQsciksdGhpc30sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P3RoaXMucm90YXRlWihlKToodS5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUucm90YXRlLmFwcGx5KHRoaXMudU1WTWF0cml4LGFyZ3VtZW50cyksdGhpcyl9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5yb3RhdGVYPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJvdGF0ZShlLDEsMCwwKSx0aGlzfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucm90YXRlWT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yb3RhdGUoZSwwLDEsMCksdGhpc30sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnJvdGF0ZVo9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMucm90YXRlKGUsMCwwLDEpLHRoaXN9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKCl7dmFyIGU9dS5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMpLHQ9ZS5wcm9wZXJ0aWVzO3JldHVybiB0LnVNVk1hdHJpeD10aGlzLnVNVk1hdHJpeC5jb3B5KCksdC51UE1hdHJpeD10aGlzLnVQTWF0cml4LmNvcHkoKSx0Ll9jdXJDYW1lcmE9dGhpcy5fY3VyQ2FtZXJhLHRoaXMuX2N1ckNhbWVyYT10aGlzLl9jdXJDYW1lcmEuY29weSgpLHQuYW1iaWVudExpZ2h0Q29sb3JzPXRoaXMuYW1iaWVudExpZ2h0Q29sb3JzLnNsaWNlKCksdC5zcGVjdWxhckNvbG9ycz10aGlzLnNwZWN1bGFyQ29sb3JzLnNsaWNlKCksdC5kaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9ucz10aGlzLmRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zLnNsaWNlKCksdC5kaXJlY3Rpb25hbExpZ2h0RGlmZnVzZUNvbG9ycz10aGlzLmRpcmVjdGlvbmFsTGlnaHREaWZmdXNlQ29sb3JzLnNsaWNlKCksdC5kaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnM9dGhpcy5kaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnMuc2xpY2UoKSx0LnBvaW50TGlnaHRQb3NpdGlvbnM9dGhpcy5wb2ludExpZ2h0UG9zaXRpb25zLnNsaWNlKCksdC5wb2ludExpZ2h0RGlmZnVzZUNvbG9ycz10aGlzLnBvaW50TGlnaHREaWZmdXNlQ29sb3JzLnNsaWNlKCksdC5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnM9dGhpcy5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMuc2xpY2UoKSx0LnNwb3RMaWdodFBvc2l0aW9ucz10aGlzLnNwb3RMaWdodFBvc2l0aW9ucy5zbGljZSgpLHQuc3BvdExpZ2h0RGlyZWN0aW9ucz10aGlzLnNwb3RMaWdodERpcmVjdGlvbnMuc2xpY2UoKSx0LnNwb3RMaWdodERpZmZ1c2VDb2xvcnM9dGhpcy5zcG90TGlnaHREaWZmdXNlQ29sb3JzLnNsaWNlKCksdC5zcG90TGlnaHRTcGVjdWxhckNvbG9ycz10aGlzLnNwb3RMaWdodFNwZWN1bGFyQ29sb3JzLnNsaWNlKCksdC5zcG90TGlnaHRBbmdsZT10aGlzLnNwb3RMaWdodEFuZ2xlLnNsaWNlKCksdC5zcG90TGlnaHRDb25jPXRoaXMuc3BvdExpZ2h0Q29uYy5zbGljZSgpLHQudXNlckZpbGxTaGFkZXI9dGhpcy51c2VyRmlsbFNoYWRlcix0LnVzZXJTdHJva2VTaGFkZXI9dGhpcy51c2VyU3Ryb2tlU2hhZGVyLHQudXNlclBvaW50U2hhZGVyPXRoaXMudXNlclBvaW50U2hhZGVyLHQucG9pbnRTaXplPXRoaXMucG9pbnRTaXplLHQuY3VyU3Ryb2tlV2VpZ2h0PXRoaXMuY3VyU3Ryb2tlV2VpZ2h0LHQuY3VyU3Ryb2tlQ29sb3I9dGhpcy5jdXJTdHJva2VDb2xvcix0LmN1ckZpbGxDb2xvcj10aGlzLmN1ckZpbGxDb2xvcix0Ll91c2VTcGVjdWxhck1hdGVyaWFsPXRoaXMuX3VzZVNwZWN1bGFyTWF0ZXJpYWwsdC5fdXNlRW1pc3NpdmVNYXRlcmlhbD10aGlzLl91c2VFbWlzc2l2ZU1hdGVyaWFsLHQuX3VzZVNoaW5pbmVzcz10aGlzLl91c2VTaGluaW5lc3MsdC5jb25zdGFudEF0dGVudWF0aW9uPXRoaXMuY29uc3RhbnRBdHRlbnVhdGlvbix0LmxpbmVhckF0dGVudWF0aW9uPXRoaXMubGluZWFyQXR0ZW51YXRpb24sdC5xdWFkcmF0aWNBdHRlbnVhdGlvbj10aGlzLnF1YWRyYXRpY0F0dGVudWF0aW9uLHQuX2VuYWJsZUxpZ2h0aW5nPXRoaXMuX2VuYWJsZUxpZ2h0aW5nLHQuX3VzZU5vcm1hbE1hdGVyaWFsPXRoaXMuX3VzZU5vcm1hbE1hdGVyaWFsLHQuX3RleD10aGlzLl90ZXgsdC5kcmF3TW9kZT10aGlzLmRyYXdNb2RlLHQuX2N1cnJlbnROb3JtYWw9dGhpcy5fY3VycmVudE5vcm1hbCxlfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucmVzZXRNYXRyaXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51TVZNYXRyaXg9dS5kZWZhdWx0Lk1hdHJpeC5pZGVudGl0eSh0aGlzLl9wSW5zdCksdGhpc30sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRJbW1lZGlhdGVTdHJva2VTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnVzZXJTdHJva2VTaGFkZXI7cmV0dXJuIGUmJmUuaXNTdHJva2VTaGFkZXIoKT9lOnRoaXMuX2dldExpbmVTaGFkZXIoKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRSZXRhaW5lZFN0cm9rZVNoYWRlcj11LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldEltbWVkaWF0ZVN0cm9rZVNoYWRlcix1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldEltbWVkaWF0ZUZpbGxTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnVzZXJGaWxsU2hhZGVyO2lmKHRoaXMuX3VzZU5vcm1hbE1hdGVyaWFsJiYoIWV8fCFlLmlzTm9ybWFsU2hhZGVyKCkpKXJldHVybiB0aGlzLl9nZXROb3JtYWxTaGFkZXIoKTtpZih0aGlzLl9lbmFibGVMaWdodGluZyl7aWYoIWV8fCFlLmlzTGlnaHRTaGFkZXIoKSlyZXR1cm4gdGhpcy5fZ2V0TGlnaHRTaGFkZXIoKX1lbHNlIGlmKHRoaXMuX3RleCl7aWYoIWV8fCFlLmlzVGV4dHVyZVNoYWRlcigpKXJldHVybiB0aGlzLl9nZXRMaWdodFNoYWRlcigpfWVsc2UgaWYoIWUpcmV0dXJuIHRoaXMuX2dldEltbWVkaWF0ZU1vZGVTaGFkZXIoKTtyZXR1cm4gZX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRSZXRhaW5lZEZpbGxTaGFkZXI9ZnVuY3Rpb24oKXtpZih0aGlzLl91c2VOb3JtYWxNYXRlcmlhbClyZXR1cm4gdGhpcy5fZ2V0Tm9ybWFsU2hhZGVyKCk7dmFyIGU9dGhpcy51c2VyRmlsbFNoYWRlcjtpZih0aGlzLl9lbmFibGVMaWdodGluZyl7aWYoIWV8fCFlLmlzTGlnaHRTaGFkZXIoKSlyZXR1cm4gdGhpcy5fZ2V0TGlnaHRTaGFkZXIoKX1lbHNlIGlmKHRoaXMuX3RleCl7aWYoIWV8fCFlLmlzVGV4dHVyZVNoYWRlcigpKXJldHVybiB0aGlzLl9nZXRMaWdodFNoYWRlcigpfWVsc2UgaWYoIWUpcmV0dXJuIHRoaXMuX2dldENvbG9yU2hhZGVyKCk7cmV0dXJuIGV9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0SW1tZWRpYXRlUG9pbnRTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnVzZXJQb2ludFNoYWRlcjtyZXR1cm4gZSYmZS5pc1BvaW50U2hhZGVyKCk/ZTp0aGlzLl9nZXRQb2ludFNoYWRlcigpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldFJldGFpbmVkTGluZVNoYWRlcj11LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldEltbWVkaWF0ZUxpbmVTaGFkZXIsdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRMaWdodFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0TGlnaHRTaGFkZXJ8fCh0aGlzLl9wSW5zdC5fZ2xBdHRyaWJ1dGVzLnBlclBpeGVsTGlnaHRpbmc/dGhpcy5fZGVmYXVsdExpZ2h0U2hhZGVyPW5ldyB1LmRlZmF1bHQuU2hhZGVyKHRoaXMsZC5waG9uZ1ZlcnQsZC5waG9uZ0ZyYWcpOnRoaXMuX2RlZmF1bHRMaWdodFNoYWRlcj1uZXcgdS5kZWZhdWx0LlNoYWRlcih0aGlzLGQubGlnaHRWZXJ0LGQubGlnaHRUZXh0dXJlRnJhZykpLHRoaXMuX2RlZmF1bHRMaWdodFNoYWRlcn0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRJbW1lZGlhdGVNb2RlU2hhZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmF1bHRJbW1lZGlhdGVNb2RlU2hhZGVyfHwodGhpcy5fZGVmYXVsdEltbWVkaWF0ZU1vZGVTaGFkZXI9bmV3IHUuZGVmYXVsdC5TaGFkZXIodGhpcyxkLmltbWVkaWF0ZVZlcnQsZC52ZXJ0ZXhDb2xvckZyYWcpKSx0aGlzLl9kZWZhdWx0SW1tZWRpYXRlTW9kZVNoYWRlcn0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXROb3JtYWxTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmYXVsdE5vcm1hbFNoYWRlcnx8KHRoaXMuX2RlZmF1bHROb3JtYWxTaGFkZXI9bmV3IHUuZGVmYXVsdC5TaGFkZXIodGhpcyxkLm5vcm1hbFZlcnQsZC5ub3JtYWxGcmFnKSksdGhpcy5fZGVmYXVsdE5vcm1hbFNoYWRlcn0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRDb2xvclNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXJ8fCh0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXI9bmV3IHUuZGVmYXVsdC5TaGFkZXIodGhpcyxkLm5vcm1hbFZlcnQsZC5iYXNpY0ZyYWcpKSx0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXJ9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0UG9pbnRTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmYXVsdFBvaW50U2hhZGVyfHwodGhpcy5fZGVmYXVsdFBvaW50U2hhZGVyPW5ldyB1LmRlZmF1bHQuU2hhZGVyKHRoaXMsZC5wb2ludFZlcnQsZC5wb2ludEZyYWcpKSx0aGlzLl9kZWZhdWx0UG9pbnRTaGFkZXJ9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0TGluZVNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0TGluZVNoYWRlcnx8KHRoaXMuX2RlZmF1bHRMaW5lU2hhZGVyPW5ldyB1LmRlZmF1bHQuU2hhZGVyKHRoaXMsZC5saW5lVmVydCxkLmxpbmVGcmFnKSksdGhpcy5fZGVmYXVsdExpbmVTaGFkZXJ9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0Rm9udFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0Rm9udFNoYWRlcnx8KHRoaXMuR0wuZ2V0RXh0ZW5zaW9uKFwiT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzXCIpLHRoaXMuX2RlZmF1bHRGb250U2hhZGVyPW5ldyB1LmRlZmF1bHQuU2hhZGVyKHRoaXMsZC5mb250VmVydCxkLmZvbnRGcmFnKSksdGhpcy5fZGVmYXVsdEZvbnRTaGFkZXJ9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0RW1wdHlUZXh0dXJlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2VtcHR5VGV4dHVyZSl7dmFyIGU9bmV3IHUuZGVmYXVsdC5JbWFnZSgxLDEpO2Uuc2V0KDAsMCwyNTUpLHRoaXMuX2VtcHR5VGV4dHVyZT1uZXcgdS5kZWZhdWx0LlRleHR1cmUodGhpcyxlKX1yZXR1cm4gdGhpcy5fZW1wdHlUZXh0dXJlfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZ2V0VGV4dHVyZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnRleHR1cmVzLHI9ITAsbj0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBpLGE9dFtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShpPWEubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1pLnZhbHVlO2lmKHMuc3JjPT09ZSlyZXR1cm4gc319Y2F0Y2goZSl7bj0hMCxvPWV9ZmluYWxseXt0cnl7cnx8bnVsbD09YS5yZXR1cm58fGEucmV0dXJuKCl9ZmluYWxseXtpZihuKXRocm93IG99fXZhciBsPW5ldyB1LmRlZmF1bHQuVGV4dHVyZSh0aGlzLGUpO3JldHVybiB0LnB1c2gobCksbH0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9zZXRTdHJva2VVbmlmb3Jtcz1mdW5jdGlvbihlKXtlLmJpbmRTaGFkZXIoKSxlLnNldFVuaWZvcm0oXCJ1TWF0ZXJpYWxDb2xvclwiLHRoaXMuY3VyU3Ryb2tlQ29sb3IpLGUuc2V0VW5pZm9ybShcInVTdHJva2VXZWlnaHRcIix0aGlzLmN1clN0cm9rZVdlaWdodCl9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fc2V0RmlsbFVuaWZvcm1zPWZ1bmN0aW9uKGUpe2UuYmluZFNoYWRlcigpLGUuc2V0VW5pZm9ybShcInVNYXRlcmlhbENvbG9yXCIsdGhpcy5jdXJGaWxsQ29sb3IpLGUuc2V0VW5pZm9ybShcImlzVGV4dHVyZVwiLCEhdGhpcy5fdGV4KSx0aGlzLl90ZXgmJmUuc2V0VW5pZm9ybShcInVTYW1wbGVyXCIsdGhpcy5fdGV4KSxlLnNldFVuaWZvcm0oXCJ1VGludFwiLHRoaXMuX3RpbnQpLGUuc2V0VW5pZm9ybShcInVTcGVjdWxhclwiLHRoaXMuX3VzZVNwZWN1bGFyTWF0ZXJpYWwpLGUuc2V0VW5pZm9ybShcInVFbWlzc2l2ZVwiLHRoaXMuX3VzZUVtaXNzaXZlTWF0ZXJpYWwpLGUuc2V0VW5pZm9ybShcInVTaGluaW5lc3NcIix0aGlzLl91c2VTaGluaW5lc3MpLGUuc2V0VW5pZm9ybShcInVVc2VMaWdodGluZ1wiLHRoaXMuX2VuYWJsZUxpZ2h0aW5nKTt2YXIgdD10aGlzLnBvaW50TGlnaHREaWZmdXNlQ29sb3JzLmxlbmd0aC8zO2Uuc2V0VW5pZm9ybShcInVQb2ludExpZ2h0Q291bnRcIix0KSxlLnNldFVuaWZvcm0oXCJ1UG9pbnRMaWdodExvY2F0aW9uXCIsdGhpcy5wb2ludExpZ2h0UG9zaXRpb25zKSxlLnNldFVuaWZvcm0oXCJ1UG9pbnRMaWdodERpZmZ1c2VDb2xvcnNcIix0aGlzLnBvaW50TGlnaHREaWZmdXNlQ29sb3JzKSxlLnNldFVuaWZvcm0oXCJ1UG9pbnRMaWdodFNwZWN1bGFyQ29sb3JzXCIsdGhpcy5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMpO3ZhciByPXRoaXMuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoLzM7ZS5zZXRVbmlmb3JtKFwidURpcmVjdGlvbmFsTGlnaHRDb3VudFwiLHIpLGUuc2V0VW5pZm9ybShcInVMaWdodGluZ0RpcmVjdGlvblwiLHRoaXMuZGlyZWN0aW9uYWxMaWdodERpcmVjdGlvbnMpLGUuc2V0VW5pZm9ybShcInVEaXJlY3Rpb25hbERpZmZ1c2VDb2xvcnNcIix0aGlzLmRpcmVjdGlvbmFsTGlnaHREaWZmdXNlQ29sb3JzKSxlLnNldFVuaWZvcm0oXCJ1RGlyZWN0aW9uYWxTcGVjdWxhckNvbG9yc1wiLHRoaXMuZGlyZWN0aW9uYWxMaWdodFNwZWN1bGFyQ29sb3JzKTt2YXIgbj10aGlzLmFtYmllbnRMaWdodENvbG9ycy5sZW5ndGgvMztlLnNldFVuaWZvcm0oXCJ1QW1iaWVudExpZ2h0Q291bnRcIixuKSxlLnNldFVuaWZvcm0oXCJ1QW1iaWVudENvbG9yXCIsdGhpcy5hbWJpZW50TGlnaHRDb2xvcnMpO3ZhciBvPXRoaXMuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycy5sZW5ndGgvMztlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0Q291bnRcIixvKSxlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0QW5nbGVcIix0aGlzLnNwb3RMaWdodEFuZ2xlKSxlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0Q29uY1wiLHRoaXMuc3BvdExpZ2h0Q29uYyksZS5zZXRVbmlmb3JtKFwidVNwb3RMaWdodERpZmZ1c2VDb2xvcnNcIix0aGlzLnNwb3RMaWdodERpZmZ1c2VDb2xvcnMpLGUuc2V0VW5pZm9ybShcInVTcG90TGlnaHRTcGVjdWxhckNvbG9yc1wiLHRoaXMuc3BvdExpZ2h0U3BlY3VsYXJDb2xvcnMpLGUuc2V0VW5pZm9ybShcInVTcG90TGlnaHRMb2NhdGlvblwiLHRoaXMuc3BvdExpZ2h0UG9zaXRpb25zKSxlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0RGlyZWN0aW9uXCIsdGhpcy5zcG90TGlnaHREaXJlY3Rpb25zKSxlLnNldFVuaWZvcm0oXCJ1Q29uc3RhbnRBdHRlbnVhdGlvblwiLHRoaXMuY29uc3RhbnRBdHRlbnVhdGlvbiksZS5zZXRVbmlmb3JtKFwidUxpbmVhckF0dGVudWF0aW9uXCIsdGhpcy5saW5lYXJBdHRlbnVhdGlvbiksZS5zZXRVbmlmb3JtKFwidVF1YWRyYXRpY0F0dGVudWF0aW9uXCIsdGhpcy5xdWFkcmF0aWNBdHRlbnVhdGlvbiksZS5iaW5kVGV4dHVyZXMoKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9zZXRQb2ludFVuaWZvcm1zPWZ1bmN0aW9uKGUpe2UuYmluZFNoYWRlcigpLGUuc2V0VW5pZm9ybShcInVNYXRlcmlhbENvbG9yXCIsdGhpcy5jdXJTdHJva2VDb2xvciksZS5zZXRVbmlmb3JtKFwidVBvaW50U2l6ZVwiLHRoaXMucG9pbnRTaXplKnRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHkpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2JpbmRCdWZmZXI9ZnVuY3Rpb24oZSx0LHIsbixvKXtpZih0PXR8fHRoaXMuR0wuQVJSQVlfQlVGRkVSLHRoaXMuR0wuYmluZEJ1ZmZlcih0LGUpLHZvaWQgMCE9PXIpe3ZhciBpPW5ldyhufHxGbG9hdDMyQXJyYXkpKHIpO3RoaXMuR0wuYnVmZmVyRGF0YSh0LGksb3x8dGhpcy5HTC5TVEFUSUNfRFJBVyl9fSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2FycmF5c0VxdWFsPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5sZW5ndGg7aWYociE9PXQubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgbj0wO248cjtuKyspaWYoZVtuXSE9PXRbbl0pcmV0dXJuITE7cmV0dXJuITB9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5faXNUeXBlZEFycmF5PWZ1bmN0aW9uKGUpe3JldHVybiBGbG9hdDMyQXJyYXksRmxvYXQ2NEFycmF5LEludDE2QXJyYXksVWludDE2QXJyYXksZSBpbnN0YW5jZW9mIFVpbnQzMkFycmF5fSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2ZsYXR0ZW49ZnVuY3Rpb24oZSl7aWYoMD09PWUubGVuZ3RoKXJldHVybltdO2lmKDJlNDxlLmxlbmd0aCl7dmFyIHQscj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLG49W10sbz1lLnNsaWNlKCk7Zm9yKHQ9by5wb3AoKTtcIltvYmplY3QgQXJyYXldXCI9PT1yLmNhbGwodCk/by5wdXNoLmFwcGx5KG8sbCh0KSk6bi5wdXNoKHQpLG8ubGVuZ3RoJiZ2b2lkIDAhPT0odD1vLnBvcCgpKTspO3JldHVybiBuLnJldmVyc2UoKSxufXZhciBpO3JldHVybihpPVtdKS5jb25jYXQuYXBwbHkoaSxsKGUpKX0sdS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl92VG9OQXJyYXk9ZnVuY3Rpb24oZSl7dmFyIHQ9W10scj0hMCxuPSExLG89dm9pZCAwO3RyeXtmb3IodmFyIGksYT1lW1N5bWJvbC5pdGVyYXRvcl0oKTshKHI9KGk9YS5uZXh0KCkpLmRvbmUpO3I9ITApe3ZhciBzPWkudmFsdWU7dC5wdXNoKHMueCxzLnkscy56KX19Y2F0Y2goZSl7bj0hMCxvPWV9ZmluYWxseXt0cnl7cnx8bnVsbD09YS5yZXR1cm58fGEucmV0dXJuKCl9ZmluYWxseXtpZihuKXRocm93IG99fXJldHVybiB0fSx1LmRlZmF1bHQucHJvdG90eXBlLl9hc3NlcnQzZD1mdW5jdGlvbihlKXtpZighdGhpcy5fcmVuZGVyZXIuaXNQM0QpdGhyb3cgbmV3IEVycm9yKFwiXCIuY29uY2F0KGUsXCIoKSBpcyBvbmx5IHN1cHBvcnRlZCBpbiBXRUJHTCBtb2RlLiBJZiB5b3UnZCBsaWtlIHRvIHVzZSAzRCBncmFwaGljcyBhbmQgV2ViR0wsIHNlZSAgaHR0cHM6Ly9wNWpzLm9yZy9leGFtcGxlcy9mb3JtLTNkLXByaW1pdGl2ZXMuaHRtbCBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIikpfSx1LmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2luaXRUZXNzeT1mdW5jdGlvbigpe3ZhciBlPW5ldyBuLmRlZmF1bHQuR2x1VGVzc2VsYXRvcjtyZXR1cm4gZS5nbHVUZXNzQ2FsbGJhY2sobi5kZWZhdWx0LmdsdUVudW0uR0xVX1RFU1NfVkVSVEVYX0RBVEEsZnVuY3Rpb24oZSx0KXt0W3QubGVuZ3RoXT1lWzBdLHRbdC5sZW5ndGhdPWVbMV0sdFt0Lmxlbmd0aF09ZVsyXX0pLGUuZ2x1VGVzc0NhbGxiYWNrKG4uZGVmYXVsdC5nbHVFbnVtLkdMVV9URVNTX0JFR0lOLGZ1bmN0aW9uKGUpe2UhPT1uLmRlZmF1bHQucHJpbWl0aXZlVHlwZS5HTF9UUklBTkdMRVMmJmNvbnNvbGUubG9nKFwiZXhwZWN0ZWQgVFJJQU5HTEVTIGJ1dCBnb3QgdHlwZTogXCIuY29uY2F0KGUpKX0pLGUuZ2x1VGVzc0NhbGxiYWNrKG4uZGVmYXVsdC5nbHVFbnVtLkdMVV9URVNTX0VSUk9SLGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKFwiZXJyb3IgY2FsbGJhY2tcIiksY29uc29sZS5sb2coXCJlcnJvciBudW1iZXI6IFwiLmNvbmNhdChlKSl9KSxlLmdsdVRlc3NDYWxsYmFjayhuLmRlZmF1bHQuZ2x1RW51bS5HTFVfVEVTU19DT01CSU5FLGZ1bmN0aW9uKGUsdCxyKXtyZXR1cm5bZVswXSxlWzFdLGVbMl1dfSksZS5nbHVUZXNzQ2FsbGJhY2sobi5kZWZhdWx0LmdsdUVudW0uR0xVX1RFU1NfRURHRV9GTEFHLGZ1bmN0aW9uKGUpe30pLGV9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fdHJpYW5ndWxhdGU9ZnVuY3Rpb24oZSl7dGhpcy5fdGVzc3kuZ2x1VGVzc05vcm1hbCgwLDAsMSk7dmFyIHQ9W107dGhpcy5fdGVzc3kuZ2x1VGVzc0JlZ2luUG9seWdvbih0KTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dGhpcy5fdGVzc3kuZ2x1VGVzc0JlZ2luQ29udG91cigpO2Zvcih2YXIgbj1lW3JdLG89MDtvPG4ubGVuZ3RoO28rPTMpe3ZhciBpPVtuW29dLG5bbysxXSxuW28rMl1dO3RoaXMuX3Rlc3N5LmdsdVRlc3NWZXJ0ZXgoaSxpKX10aGlzLl90ZXNzeS5nbHVUZXNzRW5kQ29udG91cigpfXJldHVybiB0aGlzLl90ZXNzeS5nbHVUZXNzRW5kUG9seWdvbigpLHR9LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fYmV6aWVyQ29lZmZpY2llbnRzPWZ1bmN0aW9uKGUpe3ZhciB0PWUqZSxyPTEtZSxuPXIqcjtyZXR1cm5bbipyLDMqbiplLDMqcip0LHQqZV19LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fcXVhZHJhdGljQ29lZmZpY2llbnRzPWZ1bmN0aW9uKGUpe3ZhciB0PTEtZTtyZXR1cm5bdCp0LDIqdCplLGUqZV19LHUuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fYmV6aWVyVG9DYXRtdWxsPWZ1bmN0aW9uKGUpe3JldHVybltlWzFdLGVbMV0rKGVbMl0tZVswXSkvdGhpcy5fY3VydmVUaWdodG5lc3MsZVsyXS0oZVszXS1lWzFdKS90aGlzLl9jdXJ2ZVRpZ2h0bmVzcyxlWzJdXX07dmFyIGY9dS5kZWZhdWx0LlJlbmRlcmVyR0w7ci5kZWZhdWx0PWZ9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjUzLFwiLi4vY29yZS9tYWluXCI6MjY0LFwiLi4vY29yZS9wNS5SZW5kZXJlclwiOjI2NyxcIi4vcDUuQ2FtZXJhXCI6MzEyLFwiLi9wNS5NYXRyaXhcIjozMTQsXCIuL3A1LlNoYWRlclwiOjMxOSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXRcIjoxNDksXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbFwiOjE1MSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXJcIjoxNTIsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbVwiOjE1NSxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlc1wiOjE1NixcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiOjE1OCxcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiOjE2MixcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduXCI6MTczLFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZ1wiOjE4MixcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXNcIjoxODUsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCI6MTk3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5XCI6MTk4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGxcIjoxOTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCI6MjAwLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmRcIjoyMDIsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleFwiOjIwMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mbG9hdDMyLWFycmF5XCI6MjAzLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZsb2F0NjQtYXJyYXlcIjoyMDQsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIjoyMDUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIjoyMDYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIjoyMDcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW50MTYtYXJyYXlcIjoyMDgsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIjoyMTAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiOjIxMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCI6MjEyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiOjIxMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIjoyMTUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCI6MjE0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIjoyMTYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCI6MjE3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCI6MjE4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIjoyMTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiOjIyMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiOjIyMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCI6MjIyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiOjIyMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50MTYtYXJyYXlcIjoyMjQsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDMyLWFycmF5XCI6MjI1LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5XCI6MjI2LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjksbGlidGVzczoyMzcscGF0aDoyNDB9XSwzMTk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvblwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWVcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGk9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2kuZGVmYXVsdC5TaGFkZXI9ZnVuY3Rpb24oZSx0LHIpe3RoaXMuX3JlbmRlcmVyPWUsdGhpcy5fdmVydFNyYz10LHRoaXMuX2ZyYWdTcmM9cix0aGlzLl92ZXJ0U2hhZGVyPS0xLHRoaXMuX2ZyYWdTaGFkZXI9LTEsdGhpcy5fZ2xQcm9ncmFtPTAsdGhpcy5fbG9hZGVkQXR0cmlidXRlcz0hMSx0aGlzLmF0dHJpYnV0ZXM9e30sdGhpcy5fbG9hZGVkVW5pZm9ybXM9ITEsdGhpcy51bmlmb3Jtcz17fSx0aGlzLl9ib3VuZD0hMSx0aGlzLnNhbXBsZXJzPVtdfSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7aWYoMD09PXRoaXMuX2dsUHJvZ3JhbSl7dmFyIGU9dGhpcy5fcmVuZGVyZXIuR0w7aWYodGhpcy5fdmVydFNoYWRlcj1lLmNyZWF0ZVNoYWRlcihlLlZFUlRFWF9TSEFERVIpLGUuc2hhZGVyU291cmNlKHRoaXMuX3ZlcnRTaGFkZXIsdGhpcy5fdmVydFNyYyksZS5jb21waWxlU2hhZGVyKHRoaXMuX3ZlcnRTaGFkZXIpLCFlLmdldFNoYWRlclBhcmFtZXRlcih0aGlzLl92ZXJ0U2hhZGVyLGUuQ09NUElMRV9TVEFUVVMpKXJldHVybiBjb25zb2xlLmVycm9yKFwiWWlrZXMhIEFuIGVycm9yIG9jY3VycmVkIGNvbXBpbGluZyB0aGUgdmVydGV4IHNoYWRlcjpcIi5jb25jYXQoZS5nZXRTaGFkZXJJbmZvTG9nKHRoaXMuX3ZlcnRTaGFkZXIpKSksbnVsbDtpZih0aGlzLl9mcmFnU2hhZGVyPWUuY3JlYXRlU2hhZGVyKGUuRlJBR01FTlRfU0hBREVSKSxlLnNoYWRlclNvdXJjZSh0aGlzLl9mcmFnU2hhZGVyLHRoaXMuX2ZyYWdTcmMpLGUuY29tcGlsZVNoYWRlcih0aGlzLl9mcmFnU2hhZGVyKSwhZS5nZXRTaGFkZXJQYXJhbWV0ZXIodGhpcy5fZnJhZ1NoYWRlcixlLkNPTVBJTEVfU1RBVFVTKSlyZXR1cm4gY29uc29sZS5lcnJvcihcIkRhcm4hIEFuIGVycm9yIG9jY3VycmVkIGNvbXBpbGluZyB0aGUgZnJhZ21lbnQgc2hhZGVyOlwiLmNvbmNhdChlLmdldFNoYWRlckluZm9Mb2codGhpcy5fZnJhZ1NoYWRlcikpKSxudWxsO3RoaXMuX2dsUHJvZ3JhbT1lLmNyZWF0ZVByb2dyYW0oKSxlLmF0dGFjaFNoYWRlcih0aGlzLl9nbFByb2dyYW0sdGhpcy5fdmVydFNoYWRlciksZS5hdHRhY2hTaGFkZXIodGhpcy5fZ2xQcm9ncmFtLHRoaXMuX2ZyYWdTaGFkZXIpLGUubGlua1Byb2dyYW0odGhpcy5fZ2xQcm9ncmFtKSxlLmdldFByb2dyYW1QYXJhbWV0ZXIodGhpcy5fZ2xQcm9ncmFtLGUuTElOS19TVEFUVVMpfHxjb25zb2xlLmVycm9yKFwiU25hcCEgRXJyb3IgbGlua2luZyBzaGFkZXIgcHJvZ3JhbTogXCIuY29uY2F0KGUuZ2V0UHJvZ3JhbUluZm9Mb2codGhpcy5fZ2xQcm9ncmFtKSkpLHRoaXMuX2xvYWRBdHRyaWJ1dGVzKCksdGhpcy5fbG9hZFVuaWZvcm1zKCl9cmV0dXJuIHRoaXN9LGkuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLl9sb2FkQXR0cmlidXRlcz1mdW5jdGlvbigpe2lmKCF0aGlzLl9sb2FkZWRBdHRyaWJ1dGVzKXt0aGlzLmF0dHJpYnV0ZXM9e307Zm9yKHZhciBlPXRoaXMuX3JlbmRlcmVyLkdMLHQ9ZS5nZXRQcm9ncmFtUGFyYW1ldGVyKHRoaXMuX2dsUHJvZ3JhbSxlLkFDVElWRV9BVFRSSUJVVEVTKSxyPTA7cjx0Oysrcil7dmFyIG49ZS5nZXRBY3RpdmVBdHRyaWIodGhpcy5fZ2xQcm9ncmFtLHIpLG89bi5uYW1lLGk9ZS5nZXRBdHRyaWJMb2NhdGlvbih0aGlzLl9nbFByb2dyYW0sbyksYT17fTthLm5hbWU9byxhLmxvY2F0aW9uPWksYS5pbmRleD1yLGEudHlwZT1uLnR5cGUsYS5zaXplPW4uc2l6ZSx0aGlzLmF0dHJpYnV0ZXNbb109YX10aGlzLl9sb2FkZWRBdHRyaWJ1dGVzPSEwfX0saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuX2xvYWRVbmlmb3Jtcz1mdW5jdGlvbigpe2lmKCF0aGlzLl9sb2FkZWRVbmlmb3Jtcyl7Zm9yKHZhciBlPXRoaXMuX3JlbmRlcmVyLkdMLHQ9ZS5nZXRQcm9ncmFtUGFyYW1ldGVyKHRoaXMuX2dsUHJvZ3JhbSxlLkFDVElWRV9VTklGT1JNUykscj0wLG49MDtuPHQ7KytuKXt2YXIgbz1lLmdldEFjdGl2ZVVuaWZvcm0odGhpcy5fZ2xQcm9ncmFtLG4pLGk9e307aS5sb2NhdGlvbj1lLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl9nbFByb2dyYW0sby5uYW1lKSxpLnNpemU9by5zaXplO3ZhciBhPW8ubmFtZTsxPG8uc2l6ZSYmKGE9YS5zdWJzdHJpbmcoMCxhLmluZGV4T2YoXCJbMF1cIikpKSxpLm5hbWU9YSxpLnR5cGU9by50eXBlLGkuX2NhY2hlZERhdGE9dm9pZCAwLGkudHlwZT09PWUuU0FNUExFUl8yRCYmKGkuc2FtcGxlckluZGV4PXIscisrLHRoaXMuc2FtcGxlcnMucHVzaChpKSksaS5pc0FycmF5PTE8by5zaXplfHxpLnR5cGU9PT1lLkZMT0FUX01BVDN8fGkudHlwZT09PWUuRkxPQVRfTUFUNHx8aS50eXBlPT09ZS5GTE9BVF9WRUMyfHxpLnR5cGU9PT1lLkZMT0FUX1ZFQzN8fGkudHlwZT09PWUuRkxPQVRfVkVDNHx8aS50eXBlPT09ZS5JTlRfVkVDMnx8aS50eXBlPT09ZS5JTlRfVkVDNHx8aS50eXBlPT09ZS5JTlRfVkVDMyx0aGlzLnVuaWZvcm1zW2FdPWl9dGhpcy5fbG9hZGVkVW5pZm9ybXM9ITB9fSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5jb21waWxlPWZ1bmN0aW9uKCl7fSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5iaW5kU2hhZGVyPWZ1bmN0aW9uKCl7dGhpcy5pbml0KCksdGhpcy5fYm91bmR8fCh0aGlzLnVzZVByb2dyYW0oKSx0aGlzLl9ib3VuZD0hMCx0aGlzLl9zZXRNYXRyaXhVbmlmb3JtcygpLHRoaXMuc2V0VW5pZm9ybShcInVWaWV3cG9ydFwiLHRoaXMuX3JlbmRlcmVyLl92aWV3cG9ydCkpfSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS51bmJpbmRTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYm91bmQmJih0aGlzLnVuYmluZFRleHR1cmVzKCksdGhpcy5fYm91bmQ9ITEpLHRoaXN9LGkuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLmJpbmRUZXh0dXJlcz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3JlbmRlcmVyLkdMLHQ9ITAscj0hMSxuPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9dGhpcy5zYW1wbGVyc1tTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShvPWkubmV4dCgpKS5kb25lKTt0PSEwKXt2YXIgYT1vLnZhbHVlLHM9YS50ZXh0dXJlO3ZvaWQgMD09PXMmJihzPXRoaXMuX3JlbmRlcmVyLl9nZXRFbXB0eVRleHR1cmUoKSksZS5hY3RpdmVUZXh0dXJlKGUuVEVYVFVSRTArYS5zYW1wbGVySW5kZXgpLHMuYmluZFRleHR1cmUoKSxzLnVwZGF0ZSgpLGUudW5pZm9ybTFpKGEubG9jYXRpb24sYS5zYW1wbGVySW5kZXgpfX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1pLnJldHVybnx8aS5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19fSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS51cGRhdGVUZXh0dXJlcz1mdW5jdGlvbigpe3ZhciBlPSEwLHQ9ITEscj12b2lkIDA7dHJ5e2Zvcih2YXIgbixvPXRoaXMuc2FtcGxlcnNbU3ltYm9sLml0ZXJhdG9yXSgpOyEoZT0obj1vLm5leHQoKSkuZG9uZSk7ZT0hMCl7dmFyIGk9bi52YWx1ZS50ZXh0dXJlO2kmJmkudXBkYXRlKCl9fWNhdGNoKGUpe3Q9ITAscj1lfWZpbmFsbHl7dHJ5e2V8fG51bGw9PW8ucmV0dXJufHxvLnJldHVybigpfWZpbmFsbHl7aWYodCl0aHJvdyByfX19LGkuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLnVuYmluZFRleHR1cmVzPWZ1bmN0aW9uKCl7fSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5fc2V0TWF0cml4VW5pZm9ybXM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeCx0PXRoaXMuX3JlbmRlcmVyLnVQTWF0cml4LHI9dGhpcy5fcmVuZGVyZXIudU1WTWF0cml4LG49ci5jb3B5KCk7bi5tdWx0KHQpLHRoaXMuaXNTdHJva2VTaGFkZXIoKSYmKFwiZGVmYXVsdFwiPT09dGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFUeXBlP3RoaXMuc2V0VW5pZm9ybShcInVQZXJzcGVjdGl2ZVwiLDEpOnRoaXMuc2V0VW5pZm9ybShcInVQZXJzcGVjdGl2ZVwiLDApKSx0aGlzLnNldFVuaWZvcm0oXCJ1Vmlld01hdHJpeFwiLGUubWF0NCksdGhpcy5zZXRVbmlmb3JtKFwidVByb2plY3Rpb25NYXRyaXhcIix0Lm1hdDQpLHRoaXMuc2V0VW5pZm9ybShcInVNb2RlbFZpZXdNYXRyaXhcIixyLm1hdDQpLHRoaXMuc2V0VW5pZm9ybShcInVNb2RlbFZpZXdQcm9qZWN0aW9uTWF0cml4XCIsbi5tYXQ0KSx0aGlzLnVuaWZvcm1zLnVOb3JtYWxNYXRyaXgmJih0aGlzLl9yZW5kZXJlci51Tk1hdHJpeC5pbnZlcnNlVHJhbnNwb3NlKHRoaXMuX3JlbmRlcmVyLnVNVk1hdHJpeCksdGhpcy5zZXRVbmlmb3JtKFwidU5vcm1hbE1hdHJpeFwiLHRoaXMuX3JlbmRlcmVyLnVOTWF0cml4Lm1hdDMpKX0saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUudXNlUHJvZ3JhbT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3JlbmRlcmVyLkdMO3JldHVybiB0aGlzLl9yZW5kZXJlci5fY3VyU2hhZGVyIT09dGhpcyYmKGUudXNlUHJvZ3JhbSh0aGlzLl9nbFByb2dyYW0pLHRoaXMuX3JlbmRlcmVyLl9jdXJTaGFkZXI9dGhpcyksdGhpc30saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuc2V0VW5pZm9ybT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMudW5pZm9ybXNbZV07aWYocil7dmFyIG49dGhpcy5fcmVuZGVyZXIuR0w7aWYoci5pc0FycmF5KXtpZihyLl9jYWNoZWREYXRhJiZ0aGlzLl9yZW5kZXJlci5fYXJyYXlzRXF1YWwoci5fY2FjaGVkRGF0YSx0KSlyZXR1cm47ci5fY2FjaGVkRGF0YT10LnNsaWNlKDApfWVsc2V7aWYoci5fY2FjaGVkRGF0YSYmci5fY2FjaGVkRGF0YT09PXQpcmV0dXJuO0FycmF5LmlzQXJyYXkodCk/ci5fY2FjaGVkRGF0YT10LnNsaWNlKDApOnIuX2NhY2hlZERhdGE9dH12YXIgbz1yLmxvY2F0aW9uO3N3aXRjaCh0aGlzLnVzZVByb2dyYW0oKSxyLnR5cGUpe2Nhc2Ugbi5CT09MOiEwPT09dD9uLnVuaWZvcm0xaShvLDEpOm4udW5pZm9ybTFpKG8sMCk7YnJlYWs7Y2FzZSBuLklOVDoxPHIuc2l6ZT90Lmxlbmd0aCYmbi51bmlmb3JtMWl2KG8sdCk6bi51bmlmb3JtMWkobyx0KTticmVhaztjYXNlIG4uRkxPQVQ6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTFmdihvLHQpOm4udW5pZm9ybTFmKG8sdCk7YnJlYWs7Y2FzZSBuLkZMT0FUX01BVDM6bi51bmlmb3JtTWF0cml4M2Z2KG8sITEsdCk7YnJlYWs7Y2FzZSBuLkZMT0FUX01BVDQ6bi51bmlmb3JtTWF0cml4NGZ2KG8sITEsdCk7YnJlYWs7Y2FzZSBuLkZMT0FUX1ZFQzI6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTJmdihvLHQpOm4udW5pZm9ybTJmKG8sdFswXSx0WzFdKTticmVhaztjYXNlIG4uRkxPQVRfVkVDMzoxPHIuc2l6ZT90Lmxlbmd0aCYmbi51bmlmb3JtM2Z2KG8sdCk6bi51bmlmb3JtM2Yobyx0WzBdLHRbMV0sdFsyXSk7YnJlYWs7Y2FzZSBuLkZMT0FUX1ZFQzQ6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTRmdihvLHQpOm4udW5pZm9ybTRmKG8sdFswXSx0WzFdLHRbMl0sdFszXSk7YnJlYWs7Y2FzZSBuLklOVF9WRUMyOjE8ci5zaXplP3QubGVuZ3RoJiZuLnVuaWZvcm0yaXYobyx0KTpuLnVuaWZvcm0yaShvLHRbMF0sdFsxXSk7YnJlYWs7Y2FzZSBuLklOVF9WRUMzOjE8ci5zaXplP3QubGVuZ3RoJiZuLnVuaWZvcm0zaXYobyx0KTpuLnVuaWZvcm0zaShvLHRbMF0sdFsxXSx0WzJdKTticmVhaztjYXNlIG4uSU5UX1ZFQzQ6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTRpdihvLHQpOm4udW5pZm9ybTRpKG8sdFswXSx0WzFdLHRbMl0sdFszXSk7YnJlYWs7Y2FzZSBuLlNBTVBMRVJfMkQ6bi5hY3RpdmVUZXh0dXJlKG4uVEVYVFVSRTArci5zYW1wbGVySW5kZXgpLHIudGV4dHVyZT10IGluc3RhbmNlb2YgaS5kZWZhdWx0LlRleHR1cmU/dDp0aGlzLl9yZW5kZXJlci5nZXRUZXh0dXJlKHQpLG4udW5pZm9ybTFpKG8sci5zYW1wbGVySW5kZXgpfXJldHVybiB0aGlzfX0saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNMaWdodFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLmF0dHJpYnV0ZXMuYU5vcm1hbHx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51VXNlTGlnaHRpbmd8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudUFtYmllbnRMaWdodENvdW50fHx2b2lkIDAhPT10aGlzLnVuaWZvcm1zLnVEaXJlY3Rpb25hbExpZ2h0Q291bnR8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVBvaW50TGlnaHRDb3VudHx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51QW1iaWVudENvbG9yfHx2b2lkIDAhPT10aGlzLnVuaWZvcm1zLnVEaXJlY3Rpb25hbERpZmZ1c2VDb2xvcnN8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudURpcmVjdGlvbmFsU3BlY3VsYXJDb2xvcnN8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVBvaW50TGlnaHRMb2NhdGlvbnx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51UG9pbnRMaWdodERpZmZ1c2VDb2xvcnN8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVBvaW50TGlnaHRTcGVjdWxhckNvbG9yc3x8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51TGlnaHRpbmdEaXJlY3Rpb258fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVNwZWN1bGFyfSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5pc05vcm1hbFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLmF0dHJpYnV0ZXMuYU5vcm1hbH0saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNUZXh0dXJlU2hhZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIDA8dGhpcy5zYW1wbGVycy5sZW5ndGh9LGkuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLmlzQ29sb3JTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5hdHRyaWJ1dGVzLmFWZXJ0ZXhDb2xvcnx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51TWF0ZXJpYWxDb2xvcn0saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNUZXhMaWdodFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzTGlnaHRTaGFkZXIoKSYmdGhpcy5pc1RleHR1cmVTaGFkZXIoKX0saS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNTdHJva2VTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy51bmlmb3Jtcy51U3Ryb2tlV2VpZ2h0fSxpLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5lbmFibGVBdHRyaWI9ZnVuY3Rpb24oZSx0LHIsbixvLGkpe2lmKGUpezA7dmFyIGE9ZS5sb2NhdGlvbjtpZigtMSE9PWEpe3ZhciBzPXRoaXMuX3JlbmRlcmVyLkdMO2UuZW5hYmxlZHx8KHMuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYSksZS5lbmFibGVkPSEwKSx0aGlzLl9yZW5kZXJlci5HTC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGEsdCxyfHxzLkZMT0FULG58fCExLG98fDAsaXx8MCl9fXJldHVybiB0aGlzfTt2YXIgbz1pLmRlZmF1bHQuU2hhZGVyO3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2ZcIjoxNTcsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2VcIjoxNjIsXCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZVwiOjE2NixcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCI6MTc3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvclwiOjE4NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2xcIjoxOTYsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCI6MTk0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvclwiOjE5NSxcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yXCI6MjI5fV0sMzIwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtyZXR1cm4oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZShcImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnlcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvclwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW5cIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldFwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiKSxlKFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmdcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmdcIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixpPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxzPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9bCgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIGwoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBsPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9aS5kZWZhdWx0LlRleHR1cmU9ZnVuY3Rpb24oZSx0LHIpe3RoaXMuX3JlbmRlcmVyPWU7dmFyIG49dGhpcy5fcmVuZGVyZXIuR0w7KHI9cnx8e30pLmRhdGFUeXBlPT09bi5GTE9BVCYmKG4uZ2V0RXh0ZW5zaW9uKFwiT0VTX3RleHR1cmVfZmxvYXRcIil8fGNvbnNvbGUubG9nKFwiT2ggbm8sIHlvdXIgZGV2aWNlIGRvZXNuJ3Qgc3VwcG9ydCBmbG9hdGluZyBwb2ludCB0ZXh0dXJlcyFcIiksbi5nZXRFeHRlbnNpb24oXCJPRVNfdGV4dHVyZV9mbG9hdF9saW5lYXJcIil8fGNvbnNvbGUubG9nKFwiQWNrISBZb3VyIGRldmljZSBkb2Vzbid0IHN1cHBvcnQgbGluZWFyIGZpbHRlcmluZyBmb3IgZmxvYXRpbmcgcG9pbnQgdGV4dHVyZXNcIikpO3RoaXMuc3JjPXQsdGhpcy5nbFRleD12b2lkIDAsdGhpcy5nbFRhcmdldD1uLlRFWFRVUkVfMkQsdGhpcy5nbEZvcm1hdD1yLmZvcm1hdHx8bi5SR0JBLHRoaXMubWlwbWFwcz0hMSx0aGlzLmdsTWluRmlsdGVyPXIubWluRmlsdGVyfHxuLkxJTkVBUix0aGlzLmdsTWFnRmlsdGVyPXIubWFnRmlsdGVyfHxuLkxJTkVBUix0aGlzLmdsV3JhcFM9ci53cmFwU3x8bi5DTEFNUF9UT19FREdFLHRoaXMuZ2xXcmFwVD1yLndyYXBUfHxuLkNMQU1QX1RPX0VER0UsdGhpcy5nbERhdGFUeXBlPXIuZGF0YVR5cGV8fG4uVU5TSUdORURfQllURSx0aGlzLmlzU3JjTWVkaWFFbGVtZW50PXZvaWQgMCE9PWkuZGVmYXVsdC5NZWRpYUVsZW1lbnQmJnQgaW5zdGFuY2VvZiBpLmRlZmF1bHQuTWVkaWFFbGVtZW50LHRoaXMuX3ZpZGVvUHJldlVwZGF0ZVRpbWU9MCx0aGlzLmlzU3JjSFRNTEVsZW1lbnQ9dm9pZCAwIT09aS5kZWZhdWx0LkVsZW1lbnQmJnQgaW5zdGFuY2VvZiBpLmRlZmF1bHQuRWxlbWVudCYmISh0IGluc3RhbmNlb2YgaS5kZWZhdWx0LkdyYXBoaWNzKSx0aGlzLmlzU3JjUDVJbWFnZT10IGluc3RhbmNlb2YgaS5kZWZhdWx0LkltYWdlLHRoaXMuaXNTcmNQNUdyYXBoaWNzPXQgaW5zdGFuY2VvZiBpLmRlZmF1bHQuR3JhcGhpY3MsdGhpcy5pc0ltYWdlRGF0YT1cInVuZGVmaW5lZFwiIT10eXBlb2YgSW1hZ2VEYXRhJiZ0IGluc3RhbmNlb2YgSW1hZ2VEYXRhO3ZhciBvPXRoaXMuX2dldFRleHR1cmVEYXRhRnJvbVNvdXJjZSgpO3JldHVybiB0aGlzLndpZHRoPW8ud2lkdGgsdGhpcy5oZWlnaHQ9by5oZWlnaHQsdGhpcy5pbml0KG8pLHRoaXN9LGkuZGVmYXVsdC5UZXh0dXJlLnByb3RvdHlwZS5fZ2V0VGV4dHVyZURhdGFGcm9tU291cmNlPWZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHRoaXMuaXNTcmNQNUltYWdlP2U9dGhpcy5zcmMuY2FudmFzOnRoaXMuaXNTcmNNZWRpYUVsZW1lbnR8fHRoaXMuaXNTcmNQNUdyYXBoaWNzfHx0aGlzLmlzU3JjSFRNTEVsZW1lbnQ/ZT10aGlzLnNyYy5lbHQ6dGhpcy5pc0ltYWdlRGF0YSYmKGU9dGhpcy5zcmMpLGV9LGkuZGVmYXVsdC5UZXh0dXJlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3JlbmRlcmVyLkdMO2lmKHRoaXMuZ2xUZXg9dC5jcmVhdGVUZXh0dXJlKCksdGhpcy5nbFdyYXBTPXRoaXMuX3JlbmRlcmVyLnRleHR1cmVXcmFwWCx0aGlzLmdsV3JhcFQ9dGhpcy5fcmVuZGVyZXIudGV4dHVyZVdyYXBZLHRoaXMuc2V0V3JhcE1vZGUodGhpcy5nbFdyYXBTLHRoaXMuZ2xXcmFwVCksdGhpcy5iaW5kVGV4dHVyZSgpLHQudGV4UGFyYW1ldGVyaSh0LlRFWFRVUkVfMkQsdC5URVhUVVJFX01BR19GSUxURVIsdGhpcy5nbE1hZ0ZpbHRlciksdC50ZXhQYXJhbWV0ZXJpKHQuVEVYVFVSRV8yRCx0LlRFWFRVUkVfTUlOX0ZJTFRFUix0aGlzLmdsTWluRmlsdGVyKSwwPT09dGhpcy53aWR0aHx8MD09PXRoaXMuaGVpZ2h0fHx0aGlzLmlzU3JjTWVkaWFFbGVtZW50JiYhdGhpcy5zcmMubG9hZGVkbWV0YWRhdGEpe3ZhciByPW5ldyBVaW50OEFycmF5KFsxLDEsMSwxXSk7dC50ZXhJbWFnZTJEKHRoaXMuZ2xUYXJnZXQsMCx0LlJHQkEsMSwxLDAsdGhpcy5nbEZvcm1hdCx0aGlzLmdsRGF0YVR5cGUscil9ZWxzZSB0LnRleEltYWdlMkQodGhpcy5nbFRhcmdldCwwLHRoaXMuZ2xGb3JtYXQsdGhpcy5nbEZvcm1hdCx0aGlzLmdsRGF0YVR5cGUsZSl9LGkuZGVmYXVsdC5UZXh0dXJlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnNyYztpZigwPT09ZS53aWR0aHx8MD09PWUuaGVpZ2h0KXJldHVybiExO3ZhciB0PXRoaXMuX2dldFRleHR1cmVEYXRhRnJvbVNvdXJjZSgpLHI9ITEsbj10aGlzLl9yZW5kZXJlci5HTDtyZXR1cm4gdC53aWR0aCE9PXRoaXMud2lkdGh8fHQuaGVpZ2h0IT09dGhpcy5oZWlnaHQ/KHI9ITAsdGhpcy53aWR0aD10LndpZHRoLHRoaXMuaGVpZ2h0PXQuaGVpZ2h0LHRoaXMuaXNTcmNQNUltYWdlP2Uuc2V0TW9kaWZpZWQoITEpOih0aGlzLmlzU3JjTWVkaWFFbGVtZW50fHx0aGlzLmlzU3JjSFRNTEVsZW1lbnQpJiZlLnNldE1vZGlmaWVkKCEwKSk6dGhpcy5pc1NyY1A1SW1hZ2U/ZS5pc01vZGlmaWVkKCkmJihyPSEwLGUuc2V0TW9kaWZpZWQoITEpKTp0aGlzLmlzU3JjTWVkaWFFbGVtZW50P2UuaXNNb2RpZmllZCgpPyhyPSEwLGUuc2V0TW9kaWZpZWQoITEpKTplLmxvYWRlZG1ldGFkYXRhJiZ0aGlzLl92aWRlb1ByZXZVcGRhdGVUaW1lIT09ZS50aW1lKCkmJih0aGlzLl92aWRlb1ByZXZVcGRhdGVUaW1lPWUudGltZSgpLHI9ITApOnRoaXMuaXNJbWFnZURhdGE/ZS5fZGlydHkmJihyPSEoZS5fZGlydHk9ITEpKTpyPSEwLHImJih0aGlzLmJpbmRUZXh0dXJlKCksbi50ZXhJbWFnZTJEKHRoaXMuZ2xUYXJnZXQsMCx0aGlzLmdsRm9ybWF0LHRoaXMuZ2xGb3JtYXQsdGhpcy5nbERhdGFUeXBlLHQpKSxyfSxpLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUuYmluZFRleHR1cmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuR0wuYmluZFRleHR1cmUodGhpcy5nbFRhcmdldCx0aGlzLmdsVGV4KSx0aGlzfSxpLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUudW5iaW5kVGV4dHVyZT1mdW5jdGlvbigpe3RoaXMuX3JlbmRlcmVyLkdMLmJpbmRUZXh0dXJlKHRoaXMuZ2xUYXJnZXQsbnVsbCl9LGkuZGVmYXVsdC5UZXh0dXJlLnByb3RvdHlwZS5zZXRJbnRlcnBvbGF0aW9uPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5fcmVuZGVyZXIuR0w7ZT09PXMuTkVBUkVTVD90aGlzLmdsTWluRmlsdGVyPXIuTkVBUkVTVDp0aGlzLmdsTWluRmlsdGVyPXIuTElORUFSLHQ9PT1zLk5FQVJFU1Q/dGhpcy5nbE1hZ0ZpbHRlcj1yLk5FQVJFU1Q6dGhpcy5nbE1hZ0ZpbHRlcj1yLkxJTkVBUix0aGlzLmJpbmRUZXh0dXJlKCksci50ZXhQYXJhbWV0ZXJpKHIuVEVYVFVSRV8yRCxyLlRFWFRVUkVfTUlOX0ZJTFRFUix0aGlzLmdsTWluRmlsdGVyKSxyLnRleFBhcmFtZXRlcmkoci5URVhUVVJFXzJELHIuVEVYVFVSRV9NQUdfRklMVEVSLHRoaXMuZ2xNYWdGaWx0ZXIpLHRoaXMudW5iaW5kVGV4dHVyZSgpfSxpLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUuc2V0V3JhcE1vZGU9ZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiByKGUpe3JldHVybiAwPT0oZSZlLTEpfXZhciBuPXRoaXMuX3JlbmRlcmVyLkdMLG89cih0aGlzLndpZHRoKSxpPXIodGhpcy5oZWlnaHQpO2U9PT1zLlJFUEVBVD9vJiZpP3RoaXMuZ2xXcmFwUz1uLlJFUEVBVDooY29uc29sZS53YXJuKFwiWW91IHRyaWVkIHRvIHNldCB0aGUgd3JhcCBtb2RlIHRvIFJFUEVBVCBidXQgdGhlIHRleHR1cmUgc2l6ZSBpcyBub3QgYSBwb3dlciBvZiB0d28uIFNldHRpbmcgdG8gQ0xBTVAgaW5zdGVhZFwiKSx0aGlzLmdsV3JhcFM9bi5DTEFNUF9UT19FREdFKTplPT09cy5NSVJST1I/byYmaT90aGlzLmdsV3JhcFM9bi5NSVJST1JFRF9SRVBFQVQ6KGNvbnNvbGUud2FybihcIllvdSB0cmllZCB0byBzZXQgdGhlIHdyYXAgbW9kZSB0byBNSVJST1IgYnV0IHRoZSB0ZXh0dXJlIHNpemUgaXMgbm90IGEgcG93ZXIgb2YgdHdvLiBTZXR0aW5nIHRvIENMQU1QIGluc3RlYWRcIiksdGhpcy5nbFdyYXBTPW4uQ0xBTVBfVE9fRURHRSk6dGhpcy5nbFdyYXBTPW4uQ0xBTVBfVE9fRURHRSx0PT09cy5SRVBFQVQ/byYmaT90aGlzLmdsV3JhcFQ9bi5SRVBFQVQ6KGNvbnNvbGUud2FybihcIllvdSB0cmllZCB0byBzZXQgdGhlIHdyYXAgbW9kZSB0byBSRVBFQVQgYnV0IHRoZSB0ZXh0dXJlIHNpemUgaXMgbm90IGEgcG93ZXIgb2YgdHdvLiBTZXR0aW5nIHRvIENMQU1QIGluc3RlYWRcIiksdGhpcy5nbFdyYXBUPW4uQ0xBTVBfVE9fRURHRSk6dD09PXMuTUlSUk9SP28mJmk/dGhpcy5nbFdyYXBUPW4uTUlSUk9SRURfUkVQRUFUOihjb25zb2xlLndhcm4oXCJZb3UgdHJpZWQgdG8gc2V0IHRoZSB3cmFwIG1vZGUgdG8gTUlSUk9SIGJ1dCB0aGUgdGV4dHVyZSBzaXplIGlzIG5vdCBhIHBvd2VyIG9mIHR3by4gU2V0dGluZyB0byBDTEFNUCBpbnN0ZWFkXCIpLHRoaXMuZ2xXcmFwVD1uLkNMQU1QX1RPX0VER0UpOnRoaXMuZ2xXcmFwVD1uLkNMQU1QX1RPX0VER0UsdGhpcy5iaW5kVGV4dHVyZSgpLG4udGV4UGFyYW1ldGVyaShuLlRFWFRVUkVfMkQsbi5URVhUVVJFX1dSQVBfUyx0aGlzLmdsV3JhcFMpLG4udGV4UGFyYW1ldGVyaShuLlRFWFRVUkVfMkQsbi5URVhUVVJFX1dSQVBfVCx0aGlzLmdsV3JhcFQpLHRoaXMudW5iaW5kVGV4dHVyZSgpfTt2YXIgbz1pLmRlZmF1bHQuVGV4dHVyZTtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9jb25zdGFudHNcIjoyNTMsXCIuLi9jb3JlL21haW5cIjoyNjQsXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIjoxNTgsXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZ1wiOjE3NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpblwiOjE5NyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeVwiOjE5OCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsXCI6MTk5LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlclwiOjIwMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kXCI6MjAyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXhcIjoyMDEsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2hcIjoyMDUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXNcIjoyMDYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2ZcIjoyMDcsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3JcIjoyMTAsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pblwiOjIxMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mXCI6MjEyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcFwiOjIxMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2VcIjoyMTUsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0XCI6MjE0LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2VcIjoyMTYsXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0XCI6MjE3LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlXCI6MjE4LFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWVcIjoyMTksXCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydFwiOjIyMCxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheVwiOjIyMSxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nXCI6MjIyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZ1wiOjIyMyxcImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheVwiOjIyNn1dLDMyMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7cmV0dXJuKGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3JcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXRcIiksZShcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3ViXCIpLGUoXCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvclwiKTt2YXIgbixHPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxrPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWEoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIG8gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxvKSl7dmFyIGk9bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbyk6bnVsbDtpJiYoaS5nZXR8fGkuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixvLGkpOnJbb109ZVtvXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZShcIi4vcDUuU2hhZGVyXCIpLGUoXCIuL3A1LlJlbmRlcmVyR0wuUmV0YWluZWRcIiksRy5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9hcHBseVRleHRQcm9wZXJ0aWVzPWZ1bmN0aW9uKCl7fSxHLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUudGV4dFdpZHRoPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9pc09wZW5UeXBlKCk/dGhpcy5fdGV4dEZvbnQuX3RleHRXaWR0aChlLHRoaXMuX3RleHRTaXplKTowfTtmdW5jdGlvbiBvKGUsdCl7dGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQsdGhpcy5pbmZvcz1bXSx0aGlzLmZpbmRJbWFnZT1mdW5jdGlvbihlKXt2YXIgdCxyLG49dGhpcy53aWR0aCp0aGlzLmhlaWdodDtpZihuPGUpdGhyb3cgbmV3IEVycm9yKFwiZm9udCBpcyB0b28gY29tcGxleCB0byByZW5kZXIgaW4gM0RcIik7Zm9yKHZhciBvPXRoaXMuaW5mb3MubGVuZ3RoLTE7MDw9bzstLW8pe3ZhciBpPXRoaXMuaW5mb3Nbb107aWYoaS5pbmRleCtlPG4pe3I9KHQ9aSkuaW1hZ2VEYXRhO2JyZWFrfX1pZighdCl7dHJ5e3I9bmV3IEltYWdlRGF0YSh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KX1jYXRjaChlKXt2YXIgYT1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImNhbnZhc1wiKVswXSxzPSFhO2F8fCgoYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSkpO3ZhciBsPWEuZ2V0Q29udGV4dChcIjJkXCIpO2wmJihyPWwuY3JlYXRlSW1hZ2VEYXRhKHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpKSxzJiZkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpfXQ9e2luZGV4OjAsaW1hZ2VEYXRhOnJ9LHRoaXMuaW5mb3MucHVzaCh0KX12YXIgdT10LmluZGV4O3JldHVybiB0LmluZGV4Kz1lLHIuX2RpcnR5PSEwLHtpbWFnZURhdGE6cixpbmRleDp1fX19ZnVuY3Rpb24gVihlLHQscixuLG8pe3ZhciBpPWUuaW1hZ2VEYXRhLmRhdGEsYT00KmUuaW5kZXgrKztpW2ErK109dCxpW2ErK109cixpW2ErK109bixpW2ErK109b31mdW5jdGlvbiBSKGUpe3RoaXMuZm9udD1lLHRoaXMuc3Ryb2tlSW1hZ2VJbmZvcz1uZXcgbyg2NCw2NCksdGhpcy5jb2xEaW1JbWFnZUluZm9zPW5ldyBvKDY0LDY0KSx0aGlzLnJvd0RpbUltYWdlSW5mb3M9bmV3IG8oNjQsNjQpLHRoaXMuY29sQ2VsbEltYWdlSW5mb3M9bmV3IG8oNjQsNjQpLHRoaXMucm93Q2VsbEltYWdlSW5mb3M9bmV3IG8oNjQsNjQpLHRoaXMuZ2x5cGhJbmZvcz17fSx0aGlzLmdldEdseXBoSW5mbz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmdseXBoSW5mb3NbZS5pbmRleF07aWYodClyZXR1cm4gdDt2YXIgcixuPWUuZ2V0Qm91bmRpbmdCb3goKSxvPW4ueDEsaT1uLnkxLGE9bi54Mi1vLHM9bi55Mi1pLGw9ZS5wYXRoLmNvbW1hbmRzO2lmKDA9PWF8fDA9PXN8fCFsLmxlbmd0aClyZXR1cm4gdGhpcy5nbHlwaEluZm9zW2UuaW5kZXhdPXt9O3ZhciB1LGMsZCxmLGg9W10scD1bXSx5PVtdO2ZvcihyPTg7MDw9cjstLXIpeS5wdXNoKFtdKTtmb3Iocj04OzA8PXI7LS1yKXAucHVzaChbXSk7ZnVuY3Rpb24gbShlLHQscil7dmFyIG49aC5sZW5ndGg7ZnVuY3Rpb24gbyhlLHQscil7Zm9yKHZhciBuPWUubGVuZ3RoOzA8bi0tOyl7dmFyIG89ZVtuXTtvPHQmJih0PW8pLHI8byYmKHI9byl9cmV0dXJue21pbjp0LG1heDpyfX1oLnB1c2gocik7Zm9yKHZhciBpPW8oZSwxLDApLGE9TWF0aC5tYXgoTWF0aC5mbG9vcig5KmkubWluKSwwKSxzPU1hdGgubWluKE1hdGguY2VpbCg5KmkubWF4KSw5KSxsPWE7bDxzOysrbCl5W2xdLnB1c2gobik7Zm9yKHZhciB1PW8odCwxLDApLGM9TWF0aC5tYXgoTWF0aC5mbG9vcig5KnUubWluKSwwKSxkPU1hdGgubWluKE1hdGguY2VpbCg5KnUubWF4KSw5KSxmPWM7ZjxkOysrZilwW2ZdLnB1c2gobil9ZnVuY3Rpb24gZyhlKXtyZXR1cm4odD0obj0yNTUpKmUpPChyPTApP3I6bjx0P246dDt2YXIgdCxyLG59ZnVuY3Rpb24gdyhlLHQscixuKXt0aGlzLnAwPWUsdGhpcy5jMD10LHRoaXMuYzE9cix0aGlzLnAxPW4sdGhpcy50b1F1YWRyYXRpYz1mdW5jdGlvbigpe3JldHVybnt4OnRoaXMucDAueCx5OnRoaXMucDAueSx4MTp0aGlzLnAxLngseTE6dGhpcy5wMS55LGN4OigzKih0aGlzLmMwLngrdGhpcy5jMS54KS0odGhpcy5wMC54K3RoaXMucDEueCkpLzQsY3k6KDMqKHRoaXMuYzAueSt0aGlzLmMxLnkpLSh0aGlzLnAwLnkrdGhpcy5wMS55KSkvNH19LHRoaXMucXVhZEVycm9yPWZ1bmN0aW9uKCl7cmV0dXJuIEcuZGVmYXVsdC5WZWN0b3Iuc3ViKEcuZGVmYXVsdC5WZWN0b3Iuc3ViKHRoaXMucDEsdGhpcy5wMCksRy5kZWZhdWx0LlZlY3Rvci5tdWx0KEcuZGVmYXVsdC5WZWN0b3Iuc3ViKHRoaXMuYzEsdGhpcy5jMCksMykpLm1hZygpLzJ9LHRoaXMuc3BsaXQ9ZnVuY3Rpb24oZSl7dmFyIHQ9Ry5kZWZhdWx0LlZlY3Rvci5sZXJwKHRoaXMucDAsdGhpcy5jMCxlKSxyPUcuZGVmYXVsdC5WZWN0b3IubGVycCh0aGlzLmMwLHRoaXMuYzEsZSksbj1HLmRlZmF1bHQuVmVjdG9yLmxlcnAodCxyLGUpO3RoaXMuYzE9Ry5kZWZhdWx0LlZlY3Rvci5sZXJwKHRoaXMuYzEsdGhpcy5wMSxlKSx0aGlzLmMwPUcuZGVmYXVsdC5WZWN0b3IubGVycChyLHRoaXMuYzEsZSk7dmFyIG89Ry5kZWZhdWx0LlZlY3Rvci5sZXJwKG4sdGhpcy5jMCxlKSxpPW5ldyB3KHRoaXMucDAsdCxuLG8pO3JldHVybiB0aGlzLnAwPW8saX0sdGhpcy5zcGxpdEluZmxlY3Rpb25zPWZ1bmN0aW9uKCl7dmFyIGU9Ry5kZWZhdWx0LlZlY3Rvci5zdWIodGhpcy5jMCx0aGlzLnAwKSx0PUcuZGVmYXVsdC5WZWN0b3Iuc3ViKEcuZGVmYXVsdC5WZWN0b3Iuc3ViKHRoaXMuYzEsdGhpcy5jMCksZSkscj1HLmRlZmF1bHQuVmVjdG9yLnN1YihHLmRlZmF1bHQuVmVjdG9yLnN1YihHLmRlZmF1bHQuVmVjdG9yLnN1Yih0aGlzLnAxLHRoaXMuYzEpLGUpLEcuZGVmYXVsdC5WZWN0b3IubXVsdCh0LDIpKSxuPVtdLG89dC54KnIueS10Lnkqci54O2lmKDAhPT1vKXt2YXIgaT1lLngqci55LWUueSpyLngsYT1lLngqdC55LWUueSp0Lngscz1pKmktNCpvKmE7aWYoMDw9cyl7bzwwJiYobz0tbyxpPS1pLGE9LWEpO3ZhciBsPU1hdGguc3FydChzKSx1PSgtaS1sKS8oMipvKSxjPSgtaStsKS8oMipvKTswPHUmJnU8MSYmKG4ucHVzaCh0aGlzLnNwbGl0KHUpKSxjPTEtKDEtYykvKDEtdSkpLDA8YyYmYzwxJiZuLnB1c2godGhpcy5zcGxpdChjKSl9fXJldHVybiBuLnB1c2godGhpcyksbn19ZnVuY3Rpb24gdihlLHQscixuLG8saSxhLHMpe3ZhciBsPW5ldyB3KG5ldyBHLmRlZmF1bHQuVmVjdG9yKGUsdCksbmV3IEcuZGVmYXVsdC5WZWN0b3IocixuKSxuZXcgRy5kZWZhdWx0LlZlY3RvcihvLGkpLG5ldyBHLmRlZmF1bHQuVmVjdG9yKGEscykpLnNwbGl0SW5mbGVjdGlvbnMoKSx1PVtdLGM9MzAveixkPSEwLGY9ITEsaD12b2lkIDA7dHJ5e2Zvcih2YXIgcCx5PWxbU3ltYm9sLml0ZXJhdG9yXSgpOyEoZD0ocD15Lm5leHQoKSkuZG9uZSk7ZD0hMCl7Zm9yKHZhciBtPXAudmFsdWUsZz1bXSx2PXZvaWQgMDshKC4xMjU8PSh2PWMvbS5xdWFkRXJyb3IoKSkpOyl7dmFyIGI9TWF0aC5wb3codiwxLzMpLF89bS5zcGxpdChiKSx4PW0uc3BsaXQoMS1iLygxLWIpKTt1LnB1c2goXyksZy5wdXNoKG0pLG09eH12PDEmJnUucHVzaChtLnNwbGl0KC41KSksdS5wdXNoKG0pLEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHUsZy5yZXZlcnNlKCkpfX1jYXRjaChlKXtmPSEwLGg9ZX1maW5hbGx5e3RyeXtkfHxudWxsPT15LnJldHVybnx8eS5yZXR1cm4oKX1maW5hbGx5e2lmKGYpdGhyb3cgaH19cmV0dXJuIHV9ZnVuY3Rpb24gYihlLHQscixuKXttKFtlLHJdLFt0LG5dLHt4OmUseTp0LGN4OihlK3IpLzIsY3k6KHQrbikvMn0pfWZ1bmN0aW9uIF8oZSx0LHIsbil7cmV0dXJuIE1hdGguYWJzKHItZSk8MWUtNSYmTWF0aC5hYnMobi10KTwxZS01fXZhciB4PSEwLGo9ITEsUz12b2lkIDA7dHJ5e2Zvcih2YXIgTSxFPWxbU3ltYm9sLml0ZXJhdG9yXSgpOyEoeD0oTT1FLm5leHQoKSkuZG9uZSk7eD0hMCl7dmFyIFQ9TS52YWx1ZSxPPShULngtbykvYSxDPShULnktaSkvcztpZighXyh1LGMsTyxDKSl7c3dpdGNoKFQudHlwZSl7Y2FzZVwiTVwiOmQ9TyxmPUM7YnJlYWs7Y2FzZVwiTFwiOmIodSxjLE8sQyk7YnJlYWs7Y2FzZVwiUVwiOnZhciBMPShULngxLW8pL2EsUD0oVC55MS1pKS9zO20oW3UsTyxMXSxbYyxDLFBdLHt4OnUseTpjLGN4OkwsY3k6UH0pO2JyZWFrO2Nhc2VcIlpcIjpfKHUsYyxkLGYpP2gucHVzaCh7eDp1LHk6Y30pOihiKHUsYyxkLGYpLGgucHVzaCh7eDpkLHk6Zn0pKTticmVhaztjYXNlXCJDXCI6Zm9yKHZhciBBPXYodSxjLChULngxLW8pL2EsKFQueTEtaSkvcywoVC54Mi1vKS9hLChULnkyLWkpL3MsTyxDKSxrPTA7azxBLmxlbmd0aDtrKyspe3ZhciBSPUFba10udG9RdWFkcmF0aWMoKTttKFtSLngsUi54MSxSLmN4XSxbUi55LFIueTEsUi5jeV0sUil9YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIGNvbW1hbmQgdHlwZTogXCIuY29uY2F0KFQudHlwZSkpfXU9TyxjPUN9fX1jYXRjaChlKXtqPSEwLFM9ZX1maW5hbGx5e3RyeXt4fHxudWxsPT1FLnJldHVybnx8RS5yZXR1cm4oKX1maW5hbGx5e2lmKGopdGhyb3cgU319Zm9yKHZhciBEPWgubGVuZ3RoLEk9dGhpcy5zdHJva2VJbWFnZUluZm9zLmZpbmRJbWFnZShEKSxVPUkuaW5kZXgsTj0wO048RDsrK04pe3ZhciBGPWhbTl07VihJLGcoRi54KSxnKEYueSksZyhGLmN4KSxnKEYuY3kpKX1mdW5jdGlvbiBCKGUsdCxyKXtmb3IodmFyIG49ZS5sZW5ndGgsbz10LmZpbmRJbWFnZShuKSxpPW8uaW5kZXgsYT0wLHM9MDtzPG47KytzKWErPWVbc10ubGVuZ3RoO2Zvcih2YXIgbD1yLmZpbmRJbWFnZShhKSx1PTA7dTxuOysrdSl7dmFyIGM9ZVt1XSxkPWMubGVuZ3RoLGY9bC5pbmRleDtWKG8sZj4+NywxMjcmZixkPj43LDEyNyZkKTtmb3IodmFyIGg9MDtoPGQ7KytoKXt2YXIgcD1jW2hdK1U7VihsLHA+PjcsMTI3JnAsMCwwKX19cmV0dXJue2NlbGxJbWFnZUluZm86bCxkaW1PZmZzZXQ6aSxkaW1JbWFnZUluZm86b319cmV0dXJuKHQ9dGhpcy5nbHlwaEluZm9zW2UuaW5kZXhdPXtnbHlwaDplLHVHbHlwaFJlY3Q6W24ueDEsLW4ueTEsbi54Miwtbi55Ml0sc3Ryb2tlSW1hZ2VJbmZvOkksc3Ryb2tlczpoLGNvbEluZm86Qih5LHRoaXMuY29sRGltSW1hZ2VJbmZvcyx0aGlzLmNvbENlbGxJbWFnZUluZm9zKSxyb3dJbmZvOkIocCx0aGlzLnJvd0RpbUltYWdlSW5mb3MsdGhpcy5yb3dDZWxsSW1hZ2VJbmZvcyl9KS51R3JpZE9mZnNldD1bdC5jb2xJbmZvLmRpbU9mZnNldCx0LnJvd0luZm8uZGltT2Zmc2V0XSx0fX12YXIgej1NYXRoLnNxcnQoMyk7Ry5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9yZW5kZXJUZXh0PWZ1bmN0aW9uKGUsdCxyLG4sbyl7aWYodGhpcy5fdGV4dEZvbnQmJlwic3RyaW5nXCIhPXR5cGVvZiB0aGlzLl90ZXh0Rm9udCl7aWYoIShvPD1uKSYmdGhpcy5fZG9GaWxsKXtpZighdGhpcy5faXNPcGVuVHlwZSgpKXJldHVybiBjb25zb2xlLmxvZyhcIldFQkdMOiBvbmx5IE9wZW50eXBlICgub3RmKSBhbmQgVHJ1ZXR5cGUgKC50dGYpIGZvbnRzIGFyZSBzdXBwb3J0ZWRcIiksZTtlLnB1c2goKTt2YXIgaT10aGlzLl9kb1N0cm9rZSxhPXRoaXMuZHJhd01vZGU7dGhpcy5fZG9TdHJva2U9ITEsdGhpcy5kcmF3TW9kZT1rLlRFWFRVUkU7dmFyIHM9dGhpcy5fdGV4dEZvbnQuZm9udCxsPXRoaXMuX3RleHRGb250Ll9mb250SW5mbztsPWx8fCh0aGlzLl90ZXh0Rm9udC5fZm9udEluZm89bmV3IFIocykpO3ZhciB1PXRoaXMuX3RleHRGb250Ll9oYW5kbGVBbGlnbm1lbnQodGhpcyx0LHIsbiksYz10aGlzLl90ZXh0U2l6ZS9zLnVuaXRzUGVyRW07dGhpcy50cmFuc2xhdGUodS54LHUueSwwKSx0aGlzLnNjYWxlKGMsYywxKTt2YXIgZD10aGlzLkdMLGY9IXRoaXMuX2RlZmF1bHRGb250U2hhZGVyLGg9dGhpcy5fZ2V0Rm9udFNoYWRlcigpO2guaW5pdCgpLGguYmluZFNoYWRlcigpLGYmJihoLnNldFVuaWZvcm0oXCJ1R3JpZEltYWdlU2l6ZVwiLFs2NCw2NF0pLGguc2V0VW5pZm9ybShcInVDZWxsc0ltYWdlU2l6ZVwiLFs2NCw2NF0pLGguc2V0VW5pZm9ybShcInVTdHJva2VJbWFnZVNpemVcIixbNjQsNjRdKSxoLnNldFVuaWZvcm0oXCJ1R3JpZFNpemVcIixbOSw5XSkpLHRoaXMuX2FwcGx5Q29sb3JCbGVuZCh0aGlzLmN1ckZpbGxDb2xvcik7dmFyIHA9dGhpcy5yZXRhaW5lZE1vZGUuZ2VvbWV0cnkuZ2x5cGg7aWYoIXApe3ZhciB5PXRoaXMuX3RleHRHZW9tPW5ldyBHLmRlZmF1bHQuR2VvbWV0cnkoMSwxLGZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTw9MTtlKyspZm9yKHZhciB0PTA7dDw9MTt0KyspdGhpcy52ZXJ0aWNlcy5wdXNoKG5ldyBHLmRlZmF1bHQuVmVjdG9yKHQsZSwwKSksdGhpcy51dnMucHVzaCh0LGUpfSk7eS5jb21wdXRlRmFjZXMoKS5jb21wdXRlTm9ybWFscygpLHA9dGhpcy5jcmVhdGVCdWZmZXJzKFwiZ2x5cGhcIix5KX12YXIgbT0hMCxnPSExLHY9dm9pZCAwO3RyeXtmb3IodmFyIGIsXz10aGlzLnJldGFpbmVkTW9kZS5idWZmZXJzLnRleHRbU3ltYm9sLml0ZXJhdG9yXSgpOyEobT0oYj1fLm5leHQoKSkuZG9uZSk7bT0hMCl7Yi52YWx1ZS5fcHJlcGFyZUJ1ZmZlcihwLGgpfX1jYXRjaChlKXtnPSEwLHY9ZX1maW5hbGx5e3RyeXttfHxudWxsPT1fLnJldHVybnx8Xy5yZXR1cm4oKX1maW5hbGx5e2lmKGcpdGhyb3cgdn19dGhpcy5fYmluZEJ1ZmZlcihwLmluZGV4QnVmZmVyLGQuRUxFTUVOVF9BUlJBWV9CVUZGRVIpLGguc2V0VW5pZm9ybShcInVNYXRlcmlhbENvbG9yXCIsdGhpcy5jdXJGaWxsQ29sb3IpO3RyeXt2YXIgeD0wLHc9bnVsbCxqPXMuc3RyaW5nVG9HbHlwaHModCksUz0hMCxNPSExLEU9dm9pZCAwO3RyeXtmb3IodmFyIFQsTz1qW1N5bWJvbC5pdGVyYXRvcl0oKTshKFM9KFQ9Ty5uZXh0KCkpLmRvbmUpO1M9ITApe3ZhciBDPVQudmFsdWU7dyYmKHgrPXMuZ2V0S2VybmluZ1ZhbHVlKHcsQykpO3ZhciBMPWwuZ2V0R2x5cGhJbmZvKEMpO2lmKEwudUdseXBoUmVjdCl7dmFyIFA9TC5yb3dJbmZvLEE9TC5jb2xJbmZvO2guc2V0VW5pZm9ybShcInVTYW1wbGVyU3Ryb2tlc1wiLEwuc3Ryb2tlSW1hZ2VJbmZvLmltYWdlRGF0YSksaC5zZXRVbmlmb3JtKFwidVNhbXBsZXJSb3dTdHJva2VzXCIsUC5jZWxsSW1hZ2VJbmZvLmltYWdlRGF0YSksaC5zZXRVbmlmb3JtKFwidVNhbXBsZXJSb3dzXCIsUC5kaW1JbWFnZUluZm8uaW1hZ2VEYXRhKSxoLnNldFVuaWZvcm0oXCJ1U2FtcGxlckNvbFN0cm9rZXNcIixBLmNlbGxJbWFnZUluZm8uaW1hZ2VEYXRhKSxoLnNldFVuaWZvcm0oXCJ1U2FtcGxlckNvbHNcIixBLmRpbUltYWdlSW5mby5pbWFnZURhdGEpLGguc2V0VW5pZm9ybShcInVHcmlkT2Zmc2V0XCIsTC51R3JpZE9mZnNldCksaC5zZXRVbmlmb3JtKFwidUdseXBoUmVjdFwiLEwudUdseXBoUmVjdCksaC5zZXRVbmlmb3JtKFwidUdseXBoT2Zmc2V0XCIseCksaC5iaW5kVGV4dHVyZXMoKSxkLmRyYXdFbGVtZW50cyhkLlRSSUFOR0xFUyw2LHRoaXMuR0wuVU5TSUdORURfU0hPUlQsMCl9eCs9Qy5hZHZhbmNlV2lkdGgsdz1DfX1jYXRjaChlKXtNPSEwLEU9ZX1maW5hbGx5e3RyeXtTfHxudWxsPT1PLnJldHVybnx8Ty5yZXR1cm4oKX1maW5hbGx5e2lmKE0pdGhyb3cgRX19fWZpbmFsbHl7aC51bmJpbmRTaGFkZXIoKSx0aGlzLl9kb1N0cm9rZT1pLHRoaXMuZHJhd01vZGU9YSxlLnBvcCgpfXJldHVybiBlfX1lbHNlIGNvbnNvbGUubG9nKFwiV0VCR0w6IHlvdSBtdXN0IGxvYWQgYW5kIHNldCBhIGZvbnQgYmVmb3JlIGRyYXdpbmcgdGV4dC4gU2VlIGBsb2FkRm9udGAgYW5kIGB0ZXh0Rm9udGAgZm9yIG1vcmUgZGV0YWlscy5cIil9fSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjI1MyxcIi4uL2NvcmUvbWFpblwiOjI2NCxcIi4vcDUuUmVuZGVyZXJHTC5SZXRhaW5lZFwiOjMxNyxcIi4vcDUuU2hhZGVyXCI6MzE5LFwiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yXCI6MTU4LFwiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmdcIjoxNzcsXCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWNcIjoxODEsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yXCI6MTg2LFwiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdFwiOjE5MSxcImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3ViXCI6MTkyLFwiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbFwiOjE5NixcImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb25cIjoxOTQsXCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yXCI6MTk1LFwiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3JcIjoyMjl9XX0se30sWzI0OF0pKDI0OCl9KTsiLCJpbXBvcnQgKiBhcyBwNSBmcm9tIFwicDVcIjtcbmltcG9ydCAncDUvbGliL2FkZG9ucy9wNS5zb3VuZCc7XG5pbXBvcnQgeyBjbGFtcCB9IGZyb20gXCIuL21hdGhcIjtcbmltcG9ydCBWZWMyIGZyb20gXCIuL3ZlYzJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFsbCB7XG4gICAgcmFkaXVzOiBudW1iZXI7XG4gICAgcG9zOiBWZWMyO1xuICAgIHByZXZQb3M6IFZlYzI7XG4gICAgZGlyOiBWZWMyO1xuICAgIHNwZWVkOiBudW1iZXI7XG4gICAgZHVyYXRpb246IG51bWJlcjtcbiAgICB2ZWw6IFZlYzI7XG4gICAgcHJpdmF0ZSBzcGF3blRpbWU6IG51bWJlcjtcbiAgICBwcml2YXRlIGFjdGl2ZTogYm9vbGVhbiA9IHRydWU7XG4gICAgcHJpdmF0ZSBzcGF3bmVkVGhpc0ZyYW1lOiBib29sZWFuID0gdHJ1ZTtcbiAgICBwcml2YXRlIGJhbGxTcGF3blNvdW5kczogcDUuU291bmRGaWxlW107XG5cbiAgICBpbml0UG9zOiBWZWMyO1xuICAgIGluaXRWZWw6IFZlYzI7XG4gICAgZmlyc3RDb250YWN0VGltZTogbnVtYmVyO1xuICAgIGNvbnRhY3RIaXN0b3J5OiBWZWMyW107XG5cbiAgICB4Qm91bmRzOiBWZWMyO1xuICAgIHlCb3VuZHM6IFZlYzI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwb3M6IFZlYzIsIGRpcjogVmVjMiwgc3BlZWQ6IG51bWJlciwgeEJvdW5kczogVmVjMiwgeUJvdW5kczogVmVjMiwgYmFsbFNwYXduU291bmRzOiBwNS5Tb3VuZEZpbGVbXSA9IFtdLCByYWRpdXM6IG51bWJlciA9IDgsIGR1cmF0aW9uOiBudW1iZXIgPSA1LCBhY3RpdmU6IGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgIHRoaXMuY29uc3RydWN0KHBvcywgZGlyLCBzcGVlZCwgeEJvdW5kcywgeUJvdW5kcywgYmFsbFNwYXduU291bmRzLCByYWRpdXMsIGR1cmF0aW9uLCBhY3RpdmUpXG4gICAgfVxuXG4gICAgY29uc3RydWN0KHBvczogVmVjMiwgZGlyOiBWZWMyLCBzcGVlZDogbnVtYmVyLCB4Qm91bmRzOiBWZWMyLCB5Qm91bmRzOiBWZWMyLCBiYWxsU3Bhd25Tb3VuZHM6IHA1LlNvdW5kRmlsZVtdID0gW10sIHJhZGl1czogbnVtYmVyID0gOCwgZHVyYXRpb246IG51bWJlciA9IDUsIGFjdGl2ZTogYm9vbGVhbiA9IHRydWUpIHtcbiAgICAgICAgdGhpcy5wb3MgPSBwb3M7XG4gICAgICAgIHRoaXMucHJldlBvcyA9IFZlYzIuemVybztcbiAgICAgICAgdGhpcy5kaXIgPSBkaXIubm9ybWFsaXplZCgpO1xuICAgICAgICB0aGlzLnNwZWVkID0gc3BlZWQ7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBkdXJhdGlvbjtcbiAgICAgICAgdGhpcy52ZWwgPSB0aGlzLmRpci5zY2FsZSh0aGlzLnNwZWVkKTtcbiAgICAgICAgdGhpcy5yYWRpdXMgPSByYWRpdXM7XG4gICAgICAgIHRoaXMuY29udGFjdEhpc3RvcnkgPSBbXTtcbiAgICAgICAgdGhpcy5pbml0UG9zID0gcG9zO1xuICAgICAgICB0aGlzLmluaXRWZWwgPSB0aGlzLnZlbDtcbiAgICAgICAgdGhpcy54Qm91bmRzID0geEJvdW5kcztcbiAgICAgICAgdGhpcy55Qm91bmRzID0geUJvdW5kcztcbiAgICAgICAgdGhpcy5zcGF3blRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcbiAgICAgICAgdGhpcy5zcGF3bmVkVGhpc0ZyYW1lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5iYWxsU3Bhd25Tb3VuZHMgPSBiYWxsU3Bhd25Tb3VuZHM7XG4gICAgfVxuXG4gICAgc2V0QWN0aXZlKGFjdGl2ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcbiAgICAgICAgdGhpcy5zcGF3blRpbWUgPSBEYXRlLm5vdygpO1xuICAgIH1cblxuICAgIHBsYXlSYW5kb21TcGF3blNvdW5kKHBhbjogbnVtYmVyKSB7XG4gICAgICAgIC8vIGNvbnN0IHNvdW5kID0gdGhpcy5iYWxsU3Bhd25Tb3VuZHNbTWF0aC50cnVuYyhNYXRoLnJhbmRvbSgpICogdGhpcy5iYWxsU3Bhd25Tb3VuZHMubGVuZ3RoKV07XG4gICAgICAgIC8vIHNvdW5kLnNldFZvbHVtZSgwLjEpO1xuICAgICAgICAvLyBzb3VuZC5wYW4ocGFuKTtcbiAgICAgICAgLy8gaWYgKHNvdW5kLmlzTG9hZGVkKSB7XG4gICAgICAgIC8vICAgICBzb3VuZC5wbGF5KCk7XG4gICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhcIlNvdW5kIG5vdCBsb2FkZWQhXCIpO1xuICAgICAgICAvLyB9XG4gICAgfVxuXG4gICAgdXBkYXRlKGR0OiBudW1iZXIpIHtcbiAgICAgICAgaWYgKCF0aGlzLmFjdGl2ZSkgcmV0dXJuO1xuXG4gICAgICAgIGlmICgoRGF0ZS5ub3coKSAtIHRoaXMuc3Bhd25UaW1lKSAvIDEwMDAgPiB0aGlzLmR1cmF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IG5vcm1hbHMgPSBuZXcgQXJyYXk8VmVjMj4oKTtcbiAgICAgICAgbGV0IHRlc3RQb3MgPSB0aGlzLnBvcy5jb3B5KCk7XG5cbiAgICAgICAgLy8geCA9IDBcbiAgICAgICAgaWYgKHRoaXMucG9zLnggPCB0aGlzLnhCb3VuZHMueCkge1xuICAgICAgICAgICAgbGV0IHVwcGVyID0gdGhpcy5wb3M7XG4gICAgICAgICAgICBsZXQgbG93ZXIgPSB0aGlzLnByZXZQb3M7XG4gICAgICAgICAgICB0ZXN0UG9zID0gdXBwZXIuYWRkKGxvd2VyKS5zY2FsZSgwLjUpO1xuICAgICAgICAgICAgY29uc3QgZXBzaWxvbiA9IDAuNTtcbiAgICAgICAgICAgIHdoaWxlIChNYXRoLmFicyh0ZXN0UG9zLnggLSB0aGlzLnhCb3VuZHMueCkgPiBlcHNpbG9uKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coTWF0aC5hYnModGVzdFBvcy54IC0gdGhpcy54Qm91bmRzLngpKTtcblxuICAgICAgICAgICAgICAgIC8vIFRlc3RQb3MgaXMgY2xvc2VyIHRvIHBvc1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zLnggPCB0aGlzLnhCb3VuZHMueCkge1xuICAgICAgICAgICAgICAgICAgICB1cHBlciA9IHRlc3RQb3M7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbG93ZXIgPSB0ZXN0UG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZXN0UG9zID0gdXBwZXIuYWRkKGxvd2VyKS5zY2FsZSgwLjUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBub3JtYWxzLnB1c2gobmV3IFZlYzIoMSwgMCkpO1xuICAgICAgICAgICAgLy8geCA9IHdcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnBvcy54ID4gdGhpcy54Qm91bmRzLnkpIHtcbiAgICAgICAgICAgIGxldCB1cHBlciA9IHRoaXMucG9zO1xuICAgICAgICAgICAgbGV0IGxvd2VyID0gdGhpcy5wcmV2UG9zO1xuICAgICAgICAgICAgdGVzdFBvcyA9IHVwcGVyLmFkZChsb3dlcikuc2NhbGUoMC41KTtcbiAgICAgICAgICAgIGNvbnN0IGVwc2lsb24gPSAwLjU7XG4gICAgICAgICAgICB3aGlsZSAoTWF0aC5hYnModGVzdFBvcy54IC0gdGhpcy54Qm91bmRzLnkpID4gZXBzaWxvbikge1xuICAgICAgICAgICAgICAgIC8vIFRlc3RQb3MgaXMgY2xvc2VyIHRvIHBvc1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zLnggPiB0aGlzLnhCb3VuZHMueSkge1xuICAgICAgICAgICAgICAgICAgICB1cHBlciA9IHRlc3RQb3M7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbG93ZXIgPSB0ZXN0UG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZXN0UG9zID0gdXBwZXIuYWRkKGxvd2VyKS5zY2FsZSgwLjUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBub3JtYWxzLnB1c2gobmV3IFZlYzIoLTEsIDApKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvcyA9IHRlc3RQb3MuY29weSgpO1xuXG4gICAgICAgIC8vIHkgPSAwXG4gICAgICAgIGlmICh0aGlzLnBvcy55IDwgdGhpcy55Qm91bmRzLngpIHtcbiAgICAgICAgICAgIGxldCB1cHBlciA9IHRoaXMucG9zO1xuICAgICAgICAgICAgbGV0IGxvd2VyID0gdGhpcy5wcmV2UG9zO1xuICAgICAgICAgICAgdGVzdFBvcyA9IHVwcGVyLmFkZChsb3dlcikuc2NhbGUoMC41KTtcbiAgICAgICAgICAgIGNvbnN0IGVwc2lsb24gPSAwLjU7XG4gICAgICAgICAgICB3aGlsZSAoTWF0aC5hYnModGVzdFBvcy55IC0gdGhpcy55Qm91bmRzLngpID4gZXBzaWxvbikge1xuICAgICAgICAgICAgICAgIC8vIFRlc3RQb3MgaXMgY2xvc2VyIHRvIHBvc1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zLnkgPCB0aGlzLnlCb3VuZHMueCkge1xuICAgICAgICAgICAgICAgICAgICB1cHBlciA9IHRlc3RQb3M7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbG93ZXIgPSB0ZXN0UG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZXN0UG9zID0gdXBwZXIuYWRkKGxvd2VyKS5zY2FsZSgwLjUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBub3JtYWxzLnB1c2gobmV3IFZlYzIoMCwgMSkpO1xuICAgICAgICAgICAgLy8geSA9IGhcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnBvcy55ID4gdGhpcy55Qm91bmRzLnkpIHtcbiAgICAgICAgICAgIGxldCB1cHBlciA9IHRoaXMucG9zO1xuICAgICAgICAgICAgbGV0IGxvd2VyID0gdGhpcy5wcmV2UG9zO1xuICAgICAgICAgICAgdGVzdFBvcyA9IHVwcGVyLmFkZChsb3dlcikuc2NhbGUoMC41KTtcbiAgICAgICAgICAgIGNvbnN0IGVwc2lsb24gPSAwLjU7XG4gICAgICAgICAgICB3aGlsZSAoTWF0aC5hYnModGVzdFBvcy55IC0gdGhpcy55Qm91bmRzLnkpID4gZXBzaWxvbikge1xuICAgICAgICAgICAgICAgIC8vIFRlc3RQb3MgaXMgY2xvc2VyIHRvIHBvc1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zLnkgPiB0aGlzLnlCb3VuZHMueSkge1xuICAgICAgICAgICAgICAgICAgICB1cHBlciA9IHRlc3RQb3M7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbG93ZXIgPSB0ZXN0UG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZXN0UG9zID0gdXBwZXIuYWRkKGxvd2VyKS5zY2FsZSgwLjUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBub3JtYWxzLnB1c2gobmV3IFZlYzIoMCwgLTEpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvcyA9IHRlc3RQb3MuY29weSgpO1xuICAgICAgICAvLyBsaW5lKHAsIHRoaXMucG9zLCB0aGlzLmRpciwgMiwgMzApO1xuXG4gICAgICAgIGlmICghdGhpcy5zcGF3bmVkVGhpc0ZyYW1lICYmIG5vcm1hbHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY29udGFjdEhpc3RvcnkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5maXJzdENvbnRhY3RUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY29udGFjdEhpc3RvcnkucHVzaCh0aGlzLnBvcy5jb3B5KCkpXG4gICAgICAgICAgICBjb25zdCBhbmdsZXMgPSBub3JtYWxzLm1hcCgodmFsKSA9PiBNYXRoLmF0YW4yKHZhbC55LCB2YWwueCkpO1xuICAgICAgICAgICAgY29uc3QgYW5nbGVBdmVyYWdlID0gYW5nbGVzLnJlZHVjZSgocHJldiwgY3VyKSA9PiBwcmV2ICsgY3VyLCAwKSAvIG5vcm1hbHMubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3Qgbm9ybWFsID0gKG5ldyBWZWMyKE1hdGguY29zKGFuZ2xlQXZlcmFnZSksIE1hdGguc2luKGFuZ2xlQXZlcmFnZSkpKTtcblxuICAgICAgICAgICAgLy8gbGluZShwLCB0aGlzLnBvcywgbm9ybWFsLCAyLCAzMCk7XG5cbiAgICAgICAgICAgIC8vIFByb2plY3QgdmVsIG9udG8gbm9ybWFsXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0ZWREaXIgPSBub3JtYWwuc2NhbGUodGhpcy5kaXIuZG90KG5vcm1hbCkpO1xuICAgICAgICAgICAgY29uc3QgcmVmbGVjdGVkRGlyID0gdGhpcy5kaXIuc3ViKHByb2plY3RlZERpci5zY2FsZSgyKSkubm9ybWFsaXplZCgpO1xuICAgICAgICAgICAgY29uc3QgcmVmbGVjdGVkVmVsID0gcmVmbGVjdGVkRGlyLnNjYWxlKHRoaXMuc3BlZWQpO1xuICAgICAgICAgICAgdGhpcy5kaXIgPSByZWZsZWN0ZWREaXI7XG4gICAgICAgICAgICB0aGlzLnZlbCA9IHJlZmxlY3RlZFZlbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnNwYXduZWRUaGlzRnJhbWUpIHtcbiAgICAgICAgICAgIHRoaXMuc3Bhd25lZFRoaXNGcmFtZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5pbml0UG9zID0gdGhpcy5wb3M7XG4gICAgICAgICAgICB0aGlzLmluaXRWZWwgPSB0aGlzLnZlbDtcbiAgICAgICAgICAgIGNvbnN0IHBhbiA9ICgodGhpcy5wb3MueCAtIHRoaXMueEJvdW5kcy54KSAvICh0aGlzLnhCb3VuZHMueSAtIHRoaXMueEJvdW5kcy54KSkgKiAyIC0gMVxuICAgICAgICAgICAgdGhpcy5wbGF5UmFuZG9tU3Bhd25Tb3VuZChwYW4pO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5wcmV2UG9zID0gdGhpcy5wb3M7XG4gICAgICAgIHRoaXMucG9zID0gdGhpcy5wb3MuYWRkKHRoaXMudmVsLnNjYWxlKGR0KSk7XG4gICAgfVxuXG4gICAgZHJhdyhwOiBwNSwgcDI6IHA1KSB7XG4gICAgICAgIGlmICghdGhpcy5hY3RpdmUpIHJldHVybjtcbiAgICAgICAgbGV0IGFnZSA9IChEYXRlLm5vdygpIC0gdGhpcy5zcGF3blRpbWUpIC8gMTAwMDtcbiAgICAgICAgbGV0IGFscGhhID0gTWF0aC5zcXJ0KGNsYW1wKDEgLSBhZ2UgLyB0aGlzLmR1cmF0aW9uLCAwLCAxKSkgKiAyNTU7XG4gICAgICAgIGRyYXdCYWxsKHAsIHRoaXMsIDIsIGFscGhhKTtcbiAgICAgICAgbGV0IG9mZnNldCA9IG5ldyBWZWMyKChwMi53aWR0aCAtIHAud2lkdGgpIC8gMiwgKHAyLmhlaWdodCAtIHAuaGVpZ2h0KSAvIDIpO1xuICAgICAgICBkcmF3UGF0aChwMiwgdGhpcywgb2Zmc2V0LCBhbHBoYSk7XG4gICAgfVxuXG4gICAgKnBhdGhQb2ludHMoKTogR2VuZXJhdG9yPFZlYzIsIHZvaWQsIHVua25vd24+IHtcbiAgICAgICAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDwgdGhpcy5jb250YWN0SGlzdG9yeS5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmNvbnRhY3RIaXN0b3J5W2lkeF07XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQgdGhpcy5wb3M7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmF3UGF0aChwOiBwNSwgYjogQmFsbCwgb2Zmc2V0OiBWZWMyID0gVmVjMi56ZXJvLCBhOiBudW1iZXIpIHtcbiAgICBwLnB1c2goKTtcbiAgICBwLnN0cm9rZSgwLCAwLCAzMCwgYSk7XG4gICAgcC5zdHJva2VXZWlnaHQoMyk7XG4gICAgbGV0IHByZXZQb3MgPSBiLmluaXRQb3MuYWRkKG9mZnNldCk7XG4gICAgZm9yIChjb25zdCBwYXRoUG9zIG9mIGIucGF0aFBvaW50cygpKSB7XG4gICAgICAgIGNvbnN0IHBvcyA9IHBhdGhQb3MuYWRkKG9mZnNldCk7XG4gICAgICAgIHAubGluZShwcmV2UG9zLngsIHByZXZQb3MueSwgcG9zLngsIHBvcy55KTtcbiAgICAgICAgcHJldlBvcyA9IHBvcztcbiAgICB9XG4gICAgaWYgKGIuY29udGFjdEhpc3RvcnkubGVuZ3RoID4gMCkge1xuICAgICAgICBwLnN0cm9rZSgwLCAyNTUsIDI1NSwgYSk7XG4gICAgICAgIGNvbnN0IHNpbmNlRmlyc3RDb250YWN0ID0gKERhdGUubm93KCkgLSBiLmZpcnN0Q29udGFjdFRpbWUpIC8gMTAwMDtcbiAgICAgICAgY29uc3QgZmlyc3RDb250YWN0ID0gYi5jb250YWN0SGlzdG9yeVswXS5hZGQob2Zmc2V0KTtcbiAgICAgICAgY29uc3QgZXN0aW1hdGVkUG9zID0gZmlyc3RDb250YWN0LmFkZChiLmluaXRWZWwuc2NhbGUoc2luY2VGaXJzdENvbnRhY3QpKTtcbiAgICAgICAgcC5saW5lKGZpcnN0Q29udGFjdC54LCBmaXJzdENvbnRhY3QueSwgZXN0aW1hdGVkUG9zLngsIGVzdGltYXRlZFBvcy55KTtcbiAgICAgICAgYi5maXJzdENvbnRhY3RUaW1lO1xuICAgIH1cbiAgICBwLnBvcCgpO1xufVxuXG5mdW5jdGlvbiBkcmF3QmFsbChwOiBwNSwgYjogQmFsbCwgczogbnVtYmVyLCBhOiBudW1iZXIgPSAyNTUpIHtcbiAgICBwLnB1c2goKTtcbiAgICBwLmZpbGwoMjU0LCAyMjMsIDgzLCBhKTtcbiAgICBwLnN0cm9rZSg1MSwgYSk7XG4gICAgcC5zdHJva2VXZWlnaHQocyk7XG4gICAgLy8gcC5kcmF3aW5nQ29udGV4dC5zaGFkb3dPZmZzZXRYID0gNTtcbiAgICAvLyBwLmRyYXdpbmdDb250ZXh0LnNoYWRvd09mZnNldFkgPSAtNTtcbiAgICAvLyBwLmRyYXdpbmdDb250ZXh0LnNoYWRvd0JsdXIgPSAxMDtcbiAgICAvLyBwLmRyYXdpbmdDb250ZXh0LnNoYWRvd0NvbG9yID0gXCJibGFja1wiO1xuICAgIHAuZWxsaXBzZShiLnBvcy54LCBiLnBvcy55LCBiLnJhZGl1cyAqIDIsIGIucmFkaXVzICogMik7XG4gICAgcC5pbWFnZU1vZGUocC5DRU5URVIpO1xuICAgIC8vIGxldCBzaWRlID0gTWF0aC5tYXgoaW1nLndpZHRoLCBpbWcuaGVpZ2h0KTtcbiAgICAvLyBsZXQgc2NhbGUgPSAyICogciAvIHNpZGU7XG4gICAgLy8gcC5zY2FsZShzY2FsZSlcbiAgICAvLyBwLmltYWdlKGltZywgeC9zY2FsZSwgeS9zY2FsZSk7XG4gICAgcC5wb3AoKTtcbn0iLCJpbXBvcnQgVmVjMiBmcm9tIFwiLi92ZWMyXCI7XG5cbi8vIERvIHR3byBheGlzIGFsaWduZWQgYm91bmRpbmcgYm94ZXMgb3ZlcmxhcD8gR2l2ZW4gYnkgY2VudGVyIHBvc2l0aW9uIGFuZCBleHRlbnRzLlxuZXhwb3J0IGZ1bmN0aW9uIGlzT3ZlcmxhcHBpbmcyRChwb3MxOiBWZWMyLCBleHRlbnRzMTogVmVjMiwgcG9zMjogVmVjMiwgZXh0ZW50czI6IFZlYzIpIHtcbiAgICByZXR1cm4gaXNPdmVybGFwcGluZzFEKHBvczEueCwgZXh0ZW50czEueCwgcG9zMi54LCBleHRlbnRzMi54KVxuICAgICAgICAmJiBpc092ZXJsYXBwaW5nMUQocG9zMS55LCBleHRlbnRzMS55LCBwb3MyLnksIGV4dGVudHMyLnkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNPdmVybGFwcGluZzFEKHBvczE6IG51bWJlciwgZXh0ZW50MTogbnVtYmVyLCBwb3MyOiBudW1iZXIsIGV4dGVudDI6IG51bWJlcikge1xuICAgIGNvbnN0IG1pbjEgPSBwb3MxIC0gZXh0ZW50MTtcbiAgICBjb25zdCBtYXgxID0gcG9zMSArIGV4dGVudDE7XG4gICAgY29uc3QgbWluMiA9IHBvczIgLSBleHRlbnQyO1xuICAgIGNvbnN0IG1heDIgPSBwb3MyICsgZXh0ZW50MjtcbiAgICByZXR1cm4gIShtaW4xID4gbWF4MiB8fCBtYXgxIDwgbWluMilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGNJbWFnZUdyaWQoY2FudmFzU2l6ZTogVmVjMiwgcG9zOiBWZWMyLCBzaXplOiBWZWMyLCB6b29tRmFjdG9yOiBudW1iZXIpIHtcbiAgICBjb25zdCB6b29tZWRDYW52YXMgPSBjYW52YXNTaXplLnNjYWxlKDEgLyB6b29tRmFjdG9yKTtcblxuICAgIGxldCByb3dzQmVmb3JlID0gTWF0aC5jZWlsKCh6b29tZWRDYW52YXMueSAtIHNpemUueSkgLyAyIC8gc2l6ZS55KTtcbiAgICBsZXQgY29sc0JlZm9yZSA9IE1hdGguY2VpbCgoem9vbWVkQ2FudmFzLnggLSBzaXplLngpIC8gMiAvIHNpemUueCk7XG4gICAgbGV0IHJvd0NvdW50ID0gMiAqIHJvd3NCZWZvcmUgKyAxO1xuICAgIGxldCBjb2xDb3VudCA9IDIgKiBjb2xzQmVmb3JlICsgMTtcbiAgICBsZXQgZmlyc3RQb3MgPSBuZXcgVmVjMihwb3MueCAtIGNvbHNCZWZvcmUgKiBzaXplLngsIHBvcy55IC0gcm93c0JlZm9yZSAqIHNpemUueSk7XG5cbiAgICBsZXQgZmlyc3RYRmxpcCA9IGNvbHNCZWZvcmUgJSAyICE9PSAwO1xuICAgIGxldCBmaXJzdFlGbGlwID0gcm93c0JlZm9yZSAlIDIgIT09IDA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBmaXJzdFBvczogZmlyc3RQb3MsXG4gICAgICAgIGZpcnN0WEZsaXA6IGZpcnN0WEZsaXAsXG4gICAgICAgIGZpcnN0WUZsaXA6IGZpcnN0WUZsaXAsXG4gICAgICAgIHJvd0NvdW50OiByb3dDb3VudCxcbiAgICAgICAgY29sQ291bnQ6IGNvbENvdW50XG4gICAgfVxufSIsImV4cG9ydCBmdW5jdGlvbiBjbGFtcChudW1iZXI6IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIE1hdGgubWF4KG1pbiwgTWF0aC5taW4obnVtYmVyLCBtYXgpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vZChhOiBudW1iZXIsIGI6IG51bWJlcikge1xuICAgIGxldCByZXMgPSBhICUgYjtcbiAgICBpZiAocmVzIDwgMCkge1xuICAgICAgICByZXMgKz0gYjtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBWZWMyIHtcbiAgICBzdGF0aWMgcmVhZG9ubHkgemVybyA9IG5ldyBWZWMyKDAsIDApO1xuXG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKHg6IG51bWJlciwgeTogbnVtYmVyKSB7XG4gICAgICB0aGlzLnggPSB4O1xuICAgICAgdGhpcy55ID0geTtcbiAgICB9XG5cbiAgICBjb3B5KCkge1xuICAgICAgcmV0dXJuIG5ldyBWZWMyKHRoaXMueCwgdGhpcy55KTtcbiAgICB9XG5cbiAgICBhZGQob3RoZXI6IFZlYzIpOiBWZWMyIHtcbiAgICAgIHJldHVybiBuZXcgVmVjMih0aGlzLnggKyBvdGhlci54LCB0aGlzLnkgKyBvdGhlci55KTtcbiAgICB9XG5cbiAgICBzdWIob3RoZXI6IFZlYzIpOiBWZWMyIHtcbiAgICAgIHJldHVybiBuZXcgVmVjMih0aGlzLnggLSBvdGhlci54LCB0aGlzLnkgLSBvdGhlci55KTtcbiAgICB9XG5cbiAgICBzY2FsZShzOiBudW1iZXIpOiBWZWMyIHtcbiAgICAgIHJldHVybiBuZXcgVmVjMih0aGlzLnggKiBzLCB0aGlzLnkgKiBzKTtcbiAgICB9XG5cbiAgICBtdWx0KG90aGVyOiBWZWMyKTogVmVjMiB7XG4gICAgICByZXR1cm4gbmV3IFZlYzIodGhpcy54ICogb3RoZXIueCwgdGhpcy55ICogb3RoZXIueSk7XG4gICAgfVxuXG4gICAgbm9ybWFsaXplZCgpOiBWZWMyIHtcbiAgICAgIHJldHVybiB0aGlzLnNjYWxlKDEgLyBNYXRoLnNxcnQodGhpcy54ICogdGhpcy54ICsgdGhpcy55ICogdGhpcy55KSlcbiAgICB9XG5cbiAgICBkb3Qob3RoZXI6IFZlYzIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMueCAqIG90aGVyLnggKyB0aGlzLnkgKiBvdGhlci55O1xuICAgIH1cblxuICAgIG1hZygpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLnggKiB0aGlzLnggKyB0aGlzLnkgKiB0aGlzLnkpO1xuICAgIH1cbiAgfSIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL2JyaWxsaWFudC9kaXN0L1wiOyIsImltcG9ydCAqIGFzIHA1IGZyb20gXCJwNVwiXG5pbXBvcnQgQmFsbCBmcm9tIFwiLi9iYWxsXCI7XG5pbXBvcnQgVmVjMiBmcm9tIFwiLi92ZWMyXCI7XG5pbXBvcnQgeyBjYWxjSW1hZ2VHcmlkIH0gZnJvbSBcIi4vaGVscGVyc1wiO1xuaW1wb3J0IHsgY2xhbXAsIG1vZCB9IGZyb20gXCIuL21hdGhcIjtcbmltcG9ydCBzb3VuZEFzc2V0MSBmcm9tIFwiLi4vYXNzZXRzL3NvdW5kcy9idXR0b24xLm9nZ1wiXG5pbXBvcnQgc291bmRBc3NldDIgZnJvbSBcIi4uL2Fzc2V0cy9zb3VuZHMvYnV0dG9uMi5vZ2dcIlxuXG5jb25zdCBwNUluc3RhbmNlID0gbmV3IHA1KChwOiBwNSkgPT4ge1xuICBsZXQgcGdfZ3JpZDogcDUuR3JhcGhpY3M7XG4gIGxldCBwZ19wYXRoczogcDUuR3JhcGhpY3M7XG4gIC8vIGxldCBmb250OiBwNS5Gb250O1xuICBsZXQgdmlld0RhdGE6IHsgZmlyc3RQb3M6IFZlYzI7IGZpcnN0WEZsaXA6IGJvb2xlYW47IGZpcnN0WUZsaXA6IGJvb2xlYW47IHJvd0NvdW50OiBudW1iZXI7IGNvbENvdW50OiBudW1iZXI7IH07XG4gIGxldCBjYW52YXNTaXplOiBWZWMyO1xuICBsZXQgdmlld1NpemU6IFZlYzI7XG4gIGxldCB6b29tRmFjdG9yOiBudW1iZXIgPSAxO1xuICBsZXQgem9vbVNtb290aGluZzogbnVtYmVyID0gMC45MjtcbiAgbGV0IHRhcmdldFpvb21NaW4gPSAwLjM7XG4gIGxldCB0YXJnZXRab29tTWF4ID0gMTtcbiAgbGV0IF90YXJnZXRab29tRmFjdG9yOiBudW1iZXIgPSAxO1xuXG4gIGxldCBiYWxsczogQmFsbFtdID0gbmV3IEFycmF5PEJhbGw+KCk7XG4gIGxldCBiYWxsSWR4ID0gMDtcbiAgbGV0IG1heEJhbGxzID0gMTY7XG5cbiAgZnVuY3Rpb24gbGF1bmNoQmFsbChwb3M6IFZlYzIsIHZlYzogVmVjMiwgdzogbnVtYmVyLCBoOiBudW1iZXIpIHtcbiAgICBsZXQgY29ycmVjdGVkUG9zID0gcG9zLmFkZChuZXcgVmVjMihwZ19ncmlkLndpZHRoIC8gMiwgcGdfZ3JpZC5oZWlnaHQgLyAyKSk7XG4gICAgY29uc3QgZmxpcFggPSBNYXRoLmZsb29yKGNvcnJlY3RlZFBvcy54IC8gcGdfZ3JpZC53aWR0aCkgJSAyICE9PSAwO1xuICAgIGNvbnN0IGZsaXBZID0gTWF0aC5mbG9vcihjb3JyZWN0ZWRQb3MueSAvIHBnX2dyaWQuaGVpZ2h0KSAlIDIgIT09IDA7XG4gICAgY29uc3Qgc2NhbGVYID0gZmxpcFggPyAtMSA6IDE7XG4gICAgY29uc3Qgc2NhbGVZID0gZmxpcFkgPyAtMSA6IDE7XG4gICAgY29uc3Qgc2NhbGUgPSBuZXcgVmVjMihzY2FsZVgsIHNjYWxlWSk7XG4gICAgY29ycmVjdGVkUG9zID0gcG9zLm11bHQoc2NhbGUpLmFkZChuZXcgVmVjMihwZ19ncmlkLndpZHRoIC8gMiwgcGdfZ3JpZC5oZWlnaHQgLyAyKSk7XG4gICAgY29ycmVjdGVkUG9zLnggPSBtb2QoY29ycmVjdGVkUG9zLngsIHBnX2dyaWQud2lkdGgpO1xuICAgIGNvcnJlY3RlZFBvcy55ID0gbW9kKGNvcnJlY3RlZFBvcy55LCBwZ19ncmlkLmhlaWdodCk7XG4gICAgbGV0IGNvcnJlY3RlZFZlbCA9IHZlYy5tdWx0KHNjYWxlKTtcbiAgICBpZiAoYmFsbHMubGVuZ3RoIDwgbWF4QmFsbHMpIHtcbiAgICAgIGNvbnN0IGJhbGwgPSBuZXcgQmFsbChjb3JyZWN0ZWRQb3MsIGNvcnJlY3RlZFZlbCwgY29ycmVjdGVkVmVsLm1hZygpLCBuZXcgVmVjMigwLCB3KSwgbmV3IFZlYzIoMCwgaCksIGJhbGxTcGF3blNvdW5kcyk7XG4gICAgICBiYWxscy5wdXNoKGJhbGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBiYWxsID0gYmFsbHNbYmFsbElkeF07XG4gICAgICBiYWxsLmNvbnN0cnVjdChjb3JyZWN0ZWRQb3MsIGNvcnJlY3RlZFZlbCwgY29ycmVjdGVkVmVsLm1hZygpLCBuZXcgVmVjMigwLCB3KSwgbmV3IFZlYzIoMCwgaCksIGJhbGxTcGF3blNvdW5kcyk7XG4gICAgfVxuICAgIGJhbGxJZHggPSAoYmFsbElkeCArIDEpICUgbWF4QmFsbHM7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRUYXJnZXRab29tKHRhcmdldFpvb21GYWN0b3I6IG51bWJlcikge1xuICAgIF90YXJnZXRab29tRmFjdG9yID0gY2xhbXAodGFyZ2V0Wm9vbUZhY3RvciwgdGFyZ2V0Wm9vbU1pbiwgdGFyZ2V0Wm9vbU1heCk7XG4gIH1cblxuICBsZXQgYmFsbFNwYXduU291bmRzID0gbmV3IEFycmF5PHA1LlNvdW5kRmlsZT4oKTtcbiAgcC5wcmVsb2FkID0gKCkgPT4ge1xuICAgIC8vIGZvbnQgPSBwLmxvYWRGb250KHNvbGVpbCk7XG4gICAgLy8gcGhvdG9uSW1nID0gcC5sb2FkSW1hZ2UocGhvdG9uQXNzZXQpO1xuICAgIGJhbGxTcGF3blNvdW5kcy5wdXNoKHAubG9hZFNvdW5kKHNvdW5kQXNzZXQxKSk7XG4gICAgYmFsbFNwYXduU291bmRzLnB1c2gocC5sb2FkU291bmQoc291bmRBc3NldDIpKTtcbiAgfVxuXG4gIHAuc2V0dXAgPSAoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzV2lkdGggPSAzNjA7XG4gICAgY29uc3QgY2FudmFzSGVpZ2h0ID0gY2FudmFzV2lkdGg7XG4gICAgcC5jcmVhdGVDYW52YXMoY2FudmFzV2lkdGgsIGNhbnZhc0hlaWdodCwgcC5XRUJHTCkucGFyZW50KFwiY2FudmFzQ29udGFpbmVyXCIpO1xuICAgIHAuZnJhbWVSYXRlKDYwKTtcbiAgICAvLyBwLnRleHRGb250KGZvbnQpO1xuICAgIHAudGV4dFNpemUoMjApO1xuXG4gICAgLy8gU2V0dXAgcmVuZGVyIHRleHR1cmVcbiAgICB2aWV3U2l6ZSA9IG5ldyBWZWMyKDIwMCwgMzAwKTtcbiAgICAvLyBUaWxpbmcgdmlld3BvcnRcbiAgICBwZ19ncmlkID0gcC5jcmVhdGVHcmFwaGljcyh2aWV3U2l6ZS54LCB2aWV3U2l6ZS55KTtcbiAgICAvLyBQYXRocyBsYXllclxuICAgIHBnX3BhdGhzID0gcC5jcmVhdGVHcmFwaGljcyhwLndpZHRoICogNCwgcC5oZWlnaHQgKiA0KTtcblxuICAgIGNvbnN0IHJhbmRBbmdsZSA9IHAucmFuZG9tKCkgKiAyICogTWF0aC5QSTtcbiAgICBjb25zdCBzcGVlZCA9IDYwO1xuICB9O1xuXG4gIHAuZHJhdyA9ICgpID0+IHtcbiAgICBwLnB1c2goKTtcbiAgICBwZ19ncmlkLnB1c2goKVxuICAgIHBnX3BhdGhzLnB1c2goKVxuXG4gICAgcC5iYWNrZ3JvdW5kKDI1NSwgMCwgMjU1KTtcbiAgICBwZ19ncmlkLmJhY2tncm91bmQoMjAwKTtcbiAgICBwZ19wYXRocy5jbGVhcigwLCAwLCAwLCAwKTtcblxuICAgIGRyYXdXYWxscyhwZ19ncmlkLCBwZ19ncmlkLndpZHRoLCBwZ19ncmlkLmhlaWdodCk7XG4gICAgYmFsbHMuZm9yRWFjaChiYWxsID0+IHtcbiAgICAgIGJhbGwudXBkYXRlKHBnX2dyaWQuZGVsdGFUaW1lIC8gMTAwMCk7XG4gICAgICBiYWxsLmRyYXcocGdfZ3JpZCwgcGdfcGF0aHMpO1xuICAgIH0pO1xuXG4gICAgY2FudmFzU2l6ZSA9IG5ldyBWZWMyKHAud2lkdGgsIHAuaGVpZ2h0KTtcbiAgICB2aWV3U2l6ZSA9IG5ldyBWZWMyKHBnX2dyaWQud2lkdGgsIHBnX2dyaWQuaGVpZ2h0KTtcblxuICAgIHpvb21GYWN0b3IgPSB6b29tU21vb3RoaW5nICogem9vbUZhY3RvciArICgxIC0gem9vbVNtb290aGluZykgKiBfdGFyZ2V0Wm9vbUZhY3RvcjtcbiAgICB2aWV3RGF0YSA9IGNhbGNJbWFnZUdyaWQoY2FudmFzU2l6ZSwgVmVjMi56ZXJvLCB2aWV3U2l6ZSwgem9vbUZhY3Rvcik7XG5cbiAgICAvLyBDb3B5IHRvIGltYWdlIHNvIHdlIGNhbiB0cmFuc2Zvcm0gaXRcbiAgICB2YXIgaW1nID0gcC5jcmVhdGVJbWFnZShwZ19ncmlkLndpZHRoLCBwZ19ncmlkLmhlaWdodCk7XG4gICAgaW1nLmNvcHkocGdfZ3JpZCwgMCwgMCwgcGdfZ3JpZC53aWR0aCwgcGdfZ3JpZC5oZWlnaHQsIDAsIDAsIHBnX2dyaWQud2lkdGgsIHBnX2dyaWQuaGVpZ2h0KTtcblxuICAgIGxldCBwb3M7XG4gICAgbGV0IHhGbGlwID0gdmlld0RhdGEuZmlyc3RYRmxpcDtcbiAgICBsZXQgeUZsaXAgPSB2aWV3RGF0YS5maXJzdFlGbGlwO1xuICAgIHAuaW1hZ2VNb2RlKHAuQ0VOVEVSKTtcbiAgICBwLnNjYWxlKHpvb21GYWN0b3IpO1xuICAgIGZvciAobGV0IHJvd0lkeCA9IDA7IHJvd0lkeCA8IHZpZXdEYXRhLnJvd0NvdW50OyByb3dJZHgrKykge1xuICAgICAgZm9yIChsZXQgY29sSWR4ID0gMDsgY29sSWR4IDwgdmlld0RhdGEuY29sQ291bnQ7IGNvbElkeCsrKSB7XG4gICAgICAgIHBvcyA9IG5ldyBWZWMyKHZpZXdEYXRhLmZpcnN0UG9zLnggKyBjb2xJZHggKiBwZ19ncmlkLndpZHRoLCB2aWV3RGF0YS5maXJzdFBvcy55ICsgcm93SWR4ICogcGdfZ3JpZC5oZWlnaHQpO1xuICAgICAgICBjb25zdCBpZHggPSByb3dJZHggKiB2aWV3RGF0YS5jb2xDb3VudCArIGNvbElkeDtcbiAgICAgICAgY29uc3QgdG90YWwgPSB2aWV3RGF0YS5jb2xDb3VudCAqIHZpZXdEYXRhLnJvd0NvdW50O1xuICAgICAgICBjb25zdCBwZXJjZW50ID0gaWR4IC8gdG90YWw7XG4gICAgICAgIHAucHVzaCgpO1xuICAgICAgICBjb25zdCB4U2NhbGUgPSB4RmxpcCA/IC0xIDogMTtcbiAgICAgICAgY29uc3QgeVNjYWxlID0geUZsaXAgPyAtMSA6IDE7XG4gICAgICAgIHAuc2NhbGUoeFNjYWxlLCB5U2NhbGUpO1xuICAgICAgICBpZiAoaWR4ICE9PSAodG90YWwgLSAxKSAvIDIpIHtcbiAgICAgICAgICBwLnRpbnQoMjU1LCAyMDApO1xuICAgICAgICB9XG4gICAgICAgIHAuaW1hZ2UoaW1nLCBwb3MueCAqIHhTY2FsZSwgcG9zLnkgKiB5U2NhbGUpO1xuICAgICAgICAvLyBwLmZpbGwoMCwgMjU1ICogY29sSWR4IC8gdmlld0RhdGEuY29sQ291bnQsIDApO1xuICAgICAgICAvLyBwLnRleHQoYCR7eEZsaXB9ICR7eUZsaXB9YCwgcG9zLnggKiB4U2NhbGUsIHBvcy55ICogeVNjYWxlKTtcbiAgICAgICAgcC5wb3AoKTtcbiAgICAgICAgeEZsaXAgPSAheEZsaXA7XG4gICAgICB9XG4gICAgICB4RmxpcCA9IHZpZXdEYXRhLmZpcnN0WEZsaXA7XG4gICAgICB5RmxpcCA9ICF5RmxpcDtcbiAgICB9XG5cbiAgICAvLyBTbGluZ3Nob3RcbiAgICBpZiAoaXNEcmFnZ2luZykge1xuICAgICAgcGdfcGF0aHMucHVzaCgpO1xuICAgICAgcGdfcGF0aHMuc3Ryb2tlKDIwMCwgMCwgMCk7XG4gICAgICBwZ19wYXRocy5zdHJva2VXZWlnaHQoMik7XG4gICAgICBjb25zdCBvZmZzZXQgPSBuZXcgVmVjMigocGdfcGF0aHMud2lkdGggLSBwLndpZHRoKSAvIDIsIChwZ19wYXRocy5oZWlnaHQgLSBwLmhlaWdodCkgLyAyKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRNb3VzZSA9IG5ldyBWZWMyKChwLm1vdXNlWCAtIHAud2lkdGggLyAyKSAvIHpvb21GYWN0b3IsIChwLm1vdXNlWSAtIHAuaGVpZ2h0IC8gMikgLyB6b29tRmFjdG9yKTtcbiAgICAgIHBnX3BhdGhzLmxpbmUoXG4gICAgICAgIGxhc3RNb3VzZVByZXNzLnggKyBvZmZzZXQueCArIHAud2lkdGggLyAyLCBsYXN0TW91c2VQcmVzcy55ICsgb2Zmc2V0LnkgKyBwLmhlaWdodCAvIDIsXG4gICAgICAgIGN1cnJlbnRNb3VzZS54ICsgb2Zmc2V0LnggKyBwLndpZHRoIC8gMiwgY3VycmVudE1vdXNlLnkgKyBvZmZzZXQueSArIHAuaGVpZ2h0IC8gMlxuICAgICAgKTtcbiAgICAgIHBnX3BhdGhzLnBvcCgpO1xuICAgIH1cblxuICAgIC8vIHZhciBpbWcgPSBwLmNyZWF0ZUltYWdlKHBnLndpZHRoLCBwZy5oZWlnaHQpO1xuICAgIC8vIGltZy5jb3B5KHBnLCAwLCAwLCBwZy53aWR0aCwgcGcuaGVpZ2h0LCAwLCAwLCBwZy53aWR0aCwgcGcuaGVpZ2h0KTtcbiAgICBwLmltYWdlKHBnX3BhdGhzLCAwLCAwKTtcblxuICAgIC8vIERyYXcgcm9wZVxuICAgIC8vIHBnLmxpbmUoKVxuXG4gICAgcGdfcGF0aHMucG9wKCk7XG4gICAgcGdfZ3JpZC5wb3AoKTtcbiAgICBwLnBvcCgpO1xuICB9O1xuXG4gIHAua2V5UHJlc3NlZCA9IChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICB9XG5cbiAgbGV0IGxhc3RNb3VzZVByZXNzOiBWZWMyO1xuICBsZXQgbGFzdE1vdXNlUmVsZWFzZTogVmVjMjtcbiAgbGV0IGlzRHJhZ2dpbmcgPSBmYWxzZTtcbiAgcC5tb3VzZVByZXNzZWQgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICBsYXN0TW91c2VQcmVzcyA9IG5ldyBWZWMyKChwLm1vdXNlWCAtIHAud2lkdGggLyAyKSAvIHpvb21GYWN0b3IsIChwLm1vdXNlWSAtIHAuaGVpZ2h0IC8gMikgLyB6b29tRmFjdG9yKTtcbiAgICBjb25zb2xlLmxvZyhgcHJlc3NlZCAke2xhc3RNb3VzZVByZXNzLnh9ICR7bGFzdE1vdXNlUHJlc3MueX1gKTtcbiAgfVxuICBwLm1vdXNlRHJhZ2dlZCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgIGlzRHJhZ2dpbmcgPSB0cnVlO1xuICB9XG4gIHAubW91c2VSZWxlYXNlZCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgIGxhc3RNb3VzZVJlbGVhc2UgPSBuZXcgVmVjMigocC5tb3VzZVggLSBwLndpZHRoIC8gMikgLyB6b29tRmFjdG9yLCAocC5tb3VzZVkgLSBwLmhlaWdodCAvIDIpIC8gem9vbUZhY3Rvcik7XG4gICAgY29uc29sZS5sb2coYHJlbGVhc2VkICR7bGFzdE1vdXNlUmVsZWFzZS54fSAke2xhc3RNb3VzZVJlbGVhc2UueX1gKTtcbiAgICBpZiAoaXNEcmFnZ2luZykge1xuICAgICAgaXNEcmFnZ2luZyA9IGZhbHNlO1xuICAgICAgbGF1bmNoQmFsbChsYXN0TW91c2VSZWxlYXNlLCBsYXN0TW91c2VQcmVzcy5zdWIobGFzdE1vdXNlUmVsZWFzZSksIHBnX2dyaWQud2lkdGgsIHBnX2dyaWQuaGVpZ2h0KTtcbiAgICB9XG4gIH1cblxuICBwLm1vdXNlV2hlZWwgPSAoZXZlbnQ6IFdoZWVsRXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQuZGVsdGFZID09PSAwKSByZXR1cm47XG5cbiAgICBjb25zdCBzID0gMS4wODtcblxuICAgIC8vIFVwXG4gICAgaWYgKGV2ZW50LmRlbHRhWSA8IDApIHtcbiAgICAgIHNldFRhcmdldFpvb20oX3RhcmdldFpvb21GYWN0b3IgKiBzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0VGFyZ2V0Wm9vbShfdGFyZ2V0Wm9vbUZhY3RvciAvIHMpO1xuICAgIH1cbiAgfVxufSk7XG5cbmZ1bmN0aW9uIGRyYXdMaW5lKHA6IHA1LCBwb3M6IFZlYzIsIGRQb3M6IFZlYzIsIHc6IG51bWJlciwgczogbnVtYmVyKSB7XG4gIHAucHVzaCgpO1xuICBwLnN0cm9rZVdlaWdodCh3KTtcbiAgcC5saW5lKHBvcy54LCBwb3MueSwgcG9zLnggKyBkUG9zLnggKiBzLCBwb3MueSArIGRQb3MueSAqIHMpO1xuICBwLnBvcCgpO1xufVxuXG5mdW5jdGlvbiBkcmF3V2FsbHMocDogcDUsIHc6IG51bWJlciwgaDogbnVtYmVyKSB7XG4gIHAucHVzaCgpO1xuICBwLmZpbGwoMTYpO1xuXG4gIGNvbnN0IGQgPSAxNjtcbiAgY29uc3QgdzIgPSB3IC8gMjtcbiAgY29uc3QgaDIgPSBoIC8gMjtcbiAgY29uc3QgeENlbnRlciA9IHAud2lkdGggLyAyO1xuICBjb25zdCB5Q2VudGVyID0gcC5oZWlnaHQgLyAyO1xuXG4gIC8vUmlnaHQgd2FsbFxuICBsZXQgbGVmdEJvdW5kID0gdzIgKyB4Q2VudGVyO1xuICBsZXQgdG9wQm91bmQgPSAtaDIgKyB5Q2VudGVyO1xuICBwLnJlY3QobGVmdEJvdW5kLCB0b3BCb3VuZCwgZCwgaCk7XG4gIC8vQm90IHdhbGxcbiAgbGVmdEJvdW5kID0gLXcyICsgeENlbnRlcjtcbiAgdG9wQm91bmQgPSBoMiArIHlDZW50ZXI7XG4gIHAucmVjdChsZWZ0Qm91bmQsIHRvcEJvdW5kLCB3LCBkKTtcbiAgLy9MZWZ0IHdhbGxcbiAgbGVmdEJvdW5kID0gLXcyIC0gZCArIHhDZW50ZXI7XG4gIHRvcEJvdW5kID0gLWgyICsgeUNlbnRlcjtcbiAgcC5yZWN0KGxlZnRCb3VuZCwgdG9wQm91bmQsIGQsIGgpO1xuICAvL1RvcCB3YWxsXG4gIGxlZnRCb3VuZCA9IC13MiArIHhDZW50ZXI7XG4gIHRvcEJvdW5kID0gLWgyIC0gZCArIHlDZW50ZXI7XG4gIHAucmVjdChsZWZ0Qm91bmQsIHRvcEJvdW5kLCB3LCBkKTtcbiAgcC5wb3AoKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=